<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Добавляет указанный обработчик событий, вызываемый, когда указанный источник вызывает событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Добавляет указанный прослушиватель в событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Объект, добавляемый в качестве прослушивателя.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Возвращает новый объект для добавления прослушивателей в событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Новый объект для добавления прослушивателей в событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Удаляет заданный обработчик событий из заданного источника.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Удаляет указанный прослушиватель из события <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The listener to remove.">Удаляемый прослушиватель.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Начинает прослушивание события <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Прекращает прослушивание события <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Добавляет указанный обработчик событий, вызываемый, когда указанный источник вызывает событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Добавляет указанный прослушиватель в событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Объект, добавляемый в качестве прослушивателя.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Возвращает новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Удаляет заданный обработчик событий из заданного источника.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Удаляет указанный прослушиватель из события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The listener to remove.">Удаляемый прослушиватель.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Начинает прослушивание события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Прекращает прослушивание события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Предоставляет сведения для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> заданным значением <paramref name="isCancelable" />.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">Значение, которое указывает, можно ли отменить событие.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">Получает или задает значение, указывающее, следует ли отменить событие.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если событие следует отменить; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Если значение <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> равно <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">Возвращает значение, которое указывает, можно ли отменить событие.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" />, если событие является отменяемым, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Объект, вызвавший событие.</param>
      <param name="e" vsli:raw="Information about the event.">Сведения о событии.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Добавляет указанный обработчик событий, вызываемый, когда указанный источник вызывает событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="handler" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Добавляет указанный прослушиватель в событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Объект, добавляемый в качестве прослушивателя.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Возвращает новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Удаляет заданный обработчик событий из заданного источника.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="handler" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Удаляет указанный прослушиватель из события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The listener to remove.">Удаляемый прослушиватель.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Начинает прослушивание события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Прекращает прослушивание события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">Предоставляет расширение <see cref="T:System.ComponentModel.PropertyDescriptor" />, учитывающее дополнительные характеристики для свойства зависимостей.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Позволяет уведомить другие объекты об изменении этого свойства.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Компонент, для которого нужно добавить обработчик.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Делегат, добавляемый в качестве прослушивателя.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">Возвращает коллекцию атрибутов для этого члена.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">Коллекция атрибутов <see cref="T:System.ComponentModel.AttributeCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">Возвращает признак, показывающий, меняет ли сброс объекта его значение.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">Компонент для проверки на возможность сброса.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сброс компонента изменяет его значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Возвращает имя категории, к которой принадлежит элемент, в соответствии с атрибутом <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">Имя категории, к которой принадлежит член. Если атрибут <see cref="T:System.ComponentModel.CategoryAttribute" /> отсутствует, имя категории устанавливается в соответствии с категорией по умолчанию, <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">Возвращает тип компонента, с которым связано это свойство.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">Объект <see cref="T:System.Type" /> представляющий тип компонента, с которым связано это свойство. При вызове метода <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> или <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> заданный объект может быть экземпляром этого типа.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">Возвращает преобразователь типов для этого свойства.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">Преобразователь <see cref="T:System.ComponentModel.TypeConverter" />, используемый для преобразования типа <see cref="T:System.Type" /> этого свойства.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">Возвращает идентификатор свойства зависимостей.</summary>
      <returns vsli:raw="The dependency property identifier.">Идентификатор свойства зависимостей.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Возвращает описание члена, как указано атрибутом <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">Описание члена. Если атрибут <see cref="T:System.ComponentModel.DescriptionAttribute" /> отсутствует, для свойства устанавливается значение по умолчанию, равное пустой строке ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Возвращает или задает обратный вызов, используемый конструкторами для изменения эффективного значения свойства зависимостей перед сохранением его значения в обработчике свойств зависимостей.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Обратный вызов, используемый конструкторами для изменения эффективного значения свойства зависимостей перед сохранением его значения в обработчике свойств зависимостей.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Возвращает значение, показывающее, должен ли этот член устанавливаться только во время разработки, как указано атрибутом <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если член должен устанавливаться только во время разработки; значение <see langword="false" />, если возможна установка члена во время выполнения. Если атрибут <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> отсутствует, возвращаемое значение является значением по умолчанию, равным <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">Возвращает имя, которое может быть отражено в окне, например в окне "Свойства".</summary>
      <returns vsli:raw="The name to display for the property.">Отображаемое имя свойства.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">Сравнивает два экземпляра <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> на предмет их равенства.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для сравнения с текущим экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значения эквивалентны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Возвращает дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного имени свойства.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Зарегистрированное имя свойства зависимостей или вложенного свойства зависимостей.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">Тип <see cref="T:System.Type" /> объекта, которому принадлежит определение свойства.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">Тип <see cref="T:System.Type" /> объекта, для которого нужно задать свойство.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Запрошенный <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Возвращает дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного имени свойства.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Зарегистрированное имя свойства зависимостей или вложенного свойства зависимостей.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">Тип <see cref="T:System.Type" /> объекта, которому принадлежит определение свойства.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">Тип <see cref="T:System.Type" /> объекта, для которого нужно задать свойство.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">Указывает пропустить тип свойства.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Запрошенный <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного дескриптора <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">Проверяемый элемент <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Если свойство, описываемое <paramref name="property" />, является свойством зависимостей, возвращает допустимый дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />. В противном случае возвращает <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для указанных свойства зависимостей и целевого типа.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">Идентификатор для свойства зависимостей.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">Тип объекта, для которого устанавливается свойство.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного свойства зависимостей.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">Возвращает значение типа <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">Компонент, для которого требуется получить свойства.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">Массив типа <see cref="T:System.Attribute" />, используемый как фильтр.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> со свойствами, соответствующими заданным атрибутам для заданного компонента.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">Возвращает редактор заданного типа.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">Базовый тип редактора, применяемый, чтобы различать многочисленные редакторы, которые поддерживает свойство.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">Экземпляр запрошенного типа редактора или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Возвращает хэш-код для модуля чтения данных <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">Возвращает текущее значение свойства компонента.</summary>
      <param name="component" vsli:raw="The component instance.">Экземпляр компонента.</param>
      <returns vsli:raw="The requested value.">Запрошенное значение.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">Получает значение, указывающее, зарегистрировано ли свойство как вложенное свойство зависимостей и используется ли оно путем присоединенного использования.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение<see langword="true" /> , если свойство является присоединенным свойством; в противном случае значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">Возвращает значение, показывающее значение атрибута <see cref="T:System.ComponentModel.BrowsableAttribute" /> для свойства.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если для свойства было задан атрибут <see cref="T:System.ComponentModel.BrowsableAttribute" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Возвращает значение, показывающее, должно ли быть локализовано это свойство (в соответствии с атрибутом <see cref="T:System.ComponentModel.LocalizableAttribute" />).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элемент помечен конструктором <see cref="T:System.ComponentModel.LocalizableAttribute" />, с помощью значения "true", в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">Возвращает значение, показывающее, является ли это свойство доступным только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство доступно только для чтения, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">Получает метаданные, связанные со свойством зависимостей.</summary>
      <returns vsli:raw="The dependency property metadata.">Метаданные свойства зависимостей</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Получает представленный тип <see cref="T:System.Type" /> свойства зависимостей.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Тип <see cref="T:System.Type" /> зависимого свойства.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Позволяет уведомить другие объекты об изменении этого свойства.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Компонент, для которого нужно добавить обработчик.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Делегат, добавляемый в качестве прослушивателя.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">Сбрасывает значение этого свойства компонента, устанавливая для него значение по умолчанию.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">Компонент со значением свойства, которое нужно сбросить в значение по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">Устанавливает для значения компонента другое значение.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">Компонент со значением свойства, которое нужно установить.</param>
      <param name="value" vsli:raw="The new value.">Новое значение.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">Показывает, нужно ли сохранять значение этого свойства с помощью процессов сериализации.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">Компонент со свойством, возможность сохранения которого нужно проверить.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойство следует сохранить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Показывает, могут ли уведомления об изменениях значения для этого свойства инициироваться вне дескриптора свойства, например из самого компонента, или уведомления будут исходить только из прямых вызовов метода <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Значение <see langword="true" />, если источник уведомления для данного свойства находится вне дескриптора свойства, например в самом компоненте. Значение <see langword="false" />, если уведомления появляются только в результате непосредственных вызовов метода <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">Возвращает значение <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон слабого прослушивателя событий для присоединения прослушивателей для события <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Добавляет указанный обработчик событий, вызываемый, когда указанный источник вызывает событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="handler" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Возвращает новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Удаляет заданный обработчик событий из заданного источника.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="handler" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Начинает прослушивание события <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Прекращает прослушивание события <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> для заданного источника.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">Предоставляет абстрактный базовый класс для типов, которые описывают, как разделить элементы в коллекции на группы.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Возвращает или задает пользовательское средство сравнения, которое сортирует группы, используя объект, реализующий <see cref="T:System.Collections.IComparer" />.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Пользовательское средство сравнения, которое сортирует группы, используя объект, реализующий <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">Возвращает имя (имена) группы для данного элемента.</summary>
      <param name="item" vsli:raw="The item to return group names for.">Элемент, для которого возвращаются имена группы.</param>
      <param name="level" vsli:raw="The level of grouping.">Уровень группирования.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">
        <see cref="T:System.Globalization.CultureInfo" /> для предоставления преобразователю.</param>
      <returns vsli:raw="The group name(s) for the given item.">Имя (имена) группы для данного элемента.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">Возвращает коллекцию имен, которые используются для инициализации группы набором подгрупп с заданными именами.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">Коллекция имен, которые используются для инициализации группы набором подгрупп с указанными именами.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">Возвращает значение, указывающее, входит ли элемент с указанным именем в группу с указанным именем.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">Имя проверяемой группы.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">Имя проверяемого элемента.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если имена соответствуют и элемент принадлежит группе; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">Вызывает событие <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Аргументы вызываемого события.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Возникает при смене значения свойства.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">Возвращает значение, указывающее, должны ли процессы сериализации сериализовать действующее значение свойства <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> в экземплярах этого класса.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение свойства <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">Возвращает значение, указывающее, должны ли процессы сериализации сериализовать действующее значение свойства <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> в экземплярах этого класса.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение свойства <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">Получает коллекцию критериев сортировки для сортировки групп.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">Коллекция критериев сортировки для сортировки групп.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Возникает при смене значения свойства.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">Предоставляет в коллекциях функциональные возможности управления текущими записями, пользовательской сортировки, фильтрации и группирования.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">Получает значение, показывающее, поддерживает ли это представление фильтрацию с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если это представление поддерживает фильтрацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">Получает значение, показывающее, поддерживает ли это представление группирование с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если это представление поддерживает группирование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">Возвращает значение, показывающее, поддерживает ли это представление сортировку с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если это представление поддерживает сортировку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">Возвращает значение, указывающее, принадлежит ли данный элемент этому представлению коллекции.</summary>
      <param name="item" vsli:raw="The object to check.">Объект для проверки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение<see langword="true" /> , если элемент принадлежит этому представлению коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">Получает или задает сведения о языке и региональных параметрах для всех операций представления, которые могут зависеть от языка и региональных параметров, таких как сортировка.</summary>
      <returns vsli:raw="The culture to use during sorting.">Язык и региональные параметры для использования при сортировке.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">При реализации данного интерфейса это событие должно наступать после изменения текущего элемента.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">При реализации этого интерфейса данное событие должно наступать перед изменением текущего элемента. Обработчик событий может отменить это событие.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">Возвращает текущий элемент в представлении.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">Текущий элемент представления или значение <see langword="null" />, если текущий элемент отсутствует.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Получает порядковый номер элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Порядковый номер элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">Вводит отложенный цикл, который можно использовать для слияния изменений с представлением и задержки автоматического обновления.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Объект <see cref="T:System.IDisposable" /> , который можно использовать для уничтожения вызывающего объекта.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">Возвращает или задает обратный вызов, используемый для определения, подходит ли элемент для включения в представление.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">Метод, который используется для определения того, подходит ли элемент для включения в представление.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Возвращает коллекцию объектов <see cref="T:System.ComponentModel.GroupDescription" />, описывающих, как элементы коллекции группируются в представлении.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Коллекция объектов <see cref="T:System.ComponentModel.GroupDescription" />, описывающих, каким образом группируются в представлении элементы коллекции.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">Возвращает группы верхнего уровня.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">Доступная только для чтения коллекция групп верхнего уровня или значение <see langword="null" />, если такие группы отсутствуют.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">Возвращает значение, показывающее, находится ли элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> за концом коллекции.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> представления находится за концом коллекции. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">Возвращает значение, указывающее, находится ли элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> после начала коллекции.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> значение , <see langword="false" /> если представление находится за пределами начала коллекции; в противном случае —.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">Возвращает значение, показывающее, пусто ли полученное представление.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если полученное представление пусто. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Задает указанный элемент в качестве свойства <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Элемент, устанавливаемый в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в представлении; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Задает первый элемент представления в качестве свойства <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в пределах представления; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Задает последний элемент представления в качестве свойства <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получающееся свойство <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> является элементом в представлении; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Задает элемент, следующий в представлении за свойством <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />, в качестве свойства <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в пределах представления; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Задает элемент по заданному индексу в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">Индекс для задания свойству <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в пределах представления; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Задает элемент в представлении перед <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> как <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> лежит в пределах представления. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">Воссоздает представление.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Возвращает коллекцию объектов <see cref="T:System.ComponentModel.SortDescription" />, которые описывают, как элементы в коллекции сортируются в представлении.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Коллекция объектов <see cref="T:System.ComponentModel.SortDescription" />, описывающих, как элементы коллекции сортируются в представлении.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">Возвращает базовую коллекцию.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">Объект <see cref="T:System.Collections.IEnumerable" />, являющийся базовой коллекцией.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">Интерфейс, позволяющий реализовывать коллекции для создания представления соответствующих данных. Обычно пользовательский код не вызывает методы этого интерфейса.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">Создает новое представление коллекции, реализующей этот интерфейс. Обычно пользовательский код не вызывает этот метод.</summary>
      <returns vsli:raw="The newly created view.">Созданное новое представление.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">Определяет свойства, которые включают сортировку, группирование и фильтрацию на <see cref="T:System.Windows.Data.CollectionView" /> в реальном времени.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">Получает значение, указывающее, поддерживает ли представление коллекции включение или выключение фильтрации данных в режиме реального времени.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если представление коллекции поддерживает динамическое включение или выключение фильтрации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">Получает значение, указывающее, поддерживает ли представление коллекции включение или выключение группирования данных в режиме реального времени.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если представление коллекции поддерживает включение и выключение группирования в реальном времени; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">Получает значение, указывающее, поддерживает ли представление коллекции включение или выключение сортировки данных в режиме реального времени.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если представление коллекции поддерживает включение и выключение сортировки в реальном времени; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">Получает или задает значение, указывающее, включена ли фильтрация данных в реальном времени.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">Значение <see langword="true" />, если фильтрация данных в режиме реального времени включена; значение <see langword="false" />, если фильтрация в реальном времени не включена; значение <see langword="null" />, если не удается определить, реализует ли представление коллекции фильтрацию в реальном времени.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">Получает или задает значение, указывающее, включено ли группирование данных в реальном времени.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">Значение <see langword="true" />, если группирование данных в режиме реального времени включено; значение <see langword="false" />, если группирование в реальном времени не включено; значение <see langword="null" />, если не удается определить, реализует ли представление коллекции группирование в реальном времени.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">Получает или задает значение, указывающее, включена ли сортировка в реальном времени.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">Значение <see langword="true" />, если сортировка данных в режиме реального времени включена; значение <see langword="false" />, если сортировка в реальном времени не включена; значение <see langword="null" />, если не удается определить, реализует ли представление коллекции сортировку в реальном времени.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">Получает коллекцию строк, определяющих свойства, которые участвуют в фильтрации данных в режиме реального времени.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">Коллекция строк, определяющих свойства, которые участвуют в фильтрации данных в режиме реального времени.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">Получает коллекцию строк, определяющих свойства, которые участвуют в группировании данных в режиме реального времени.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">Коллекция строк, определяющих свойства, которые участвуют в группировании данных в режиме реального времени.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">Получает коллекцию строк, определяющих свойства, которые участвуют в сортировке данных в режиме реального времени.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">Коллекция строк, определяющих свойства, которые участвуют в сортировке данных в режиме реального времени.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">Определяет методы и свойства, реализуемые классом <see cref="T:System.Windows.Data.CollectionView" /> для предоставления возможностей редактирования коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">Добавляет новый элемент в коллекцию.</summary>
      <returns vsli:raw="The new item that is added to the collection.">Новый элемент, добавленный в коллекцию.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">Возвращает значение, указывающее, можно ли добавить новый элемент в коллекцию.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если в коллекцию можно добавить новый элемент; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">Возвращает значение, указывающее, может ли представление коллекции отклонить отложенные изменения и восстановить исходные значения изменяемого объекта.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если представление коллекции может отклонить отложенные изменения и восстановить исходные значения изменяемого объекта. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">Завершает транзакцию изменения и, если это возможно, восстанавливает исходное значение для элемента.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">Завершает транзакцию добавления и отменяет ожидающий новый элемент.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">Возвращает значение, указывающее, можно ли удалить элемент из коллекции.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элемент можно удалить из коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">Завершает транзакцию изменения и сохраняет отложенные изменения.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">Завершает транзакцию добавления и сохраняет ожидаемый новый элемент.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">Возвращает элемент, добавляемый во время текущей транзакции добавления.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Добавляемый элемент, если свойство <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> имеет значение <see langword="true" />. В противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">Получает элемент в редактируемой коллекции.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Редактируемый элемент в коллекции, если свойство <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">Начинает транзакцию редактирования заданного элемента.</summary>
      <param name="item" vsli:raw="The item to edit.">Изменяемый элемент.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">Получает значение, указывающее, выполняется ли в данный момент транзакция добавления.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если транзакция добавления выполняется; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">Получает значение, указывающее, выполняется ли в данный момент транзакция редактирования.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если транзакция редактирования выполняется; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">Возвращает или задает положение прототипа нового элемента в представлении коллекции.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">Одно из значений перечисления, которое задает положение прототипа нового элемента в представлении коллекции.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">Удаляет заданный элемент из коллекции.</summary>
      <param name="item" vsli:raw="The item to remove.">Удаляемый элемент.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">Удаляет элемент в указанной позиции из коллекции.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">Позиция элемента, который необходимо удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">Значение параметра <paramref name="index" /> меньше нуля и превышает количество элементов в представлении коллекции.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">Определяет методы и свойства, реализуемые классом <see cref="T:System.Windows.Data.CollectionView" /> для обеспечения задания добавления элементов указанного типа.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">Добавляет указанный объект в коллекцию.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">Объект, добавляемый в коллекцию.</param>
      <returns vsli:raw="The object that is added to the collection.">Объект, добавленный в коллекцию.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">Получает значение, указывающее, можно ли добавить указанный объект в коллекцию.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный объект можно добавить в коллекцию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">Определяет свойство, предоставляющее сведения о свойствах объекта.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">Получает коллекцию, которая содержит сведения о свойствах, доступных для элементов в коллекции.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">Коллекция, содержащая сведения о свойствах, доступных для элементов в коллекции.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">Содержит сведения о свойстве.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name" vsli:raw="The name of the property.">Имя свойства.</param>
      <param name="type" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">Объект, содержащий дополнительные сведения о свойстве.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">Получает объект, содержащий дополнительные сведения о свойстве.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">Объект, содержащий дополнительные сведения о свойстве.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">Возвращает имя свойства.</summary>
      <returns vsli:raw="The name of the property.">Имя свойства.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">Возвращает тип свойства.</summary>
      <returns vsli:raw="The type of the property.">Тип свойства.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">Указывает, имеется ли в коллекции заполнитель нового элемента.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">Заполнитель нового элемента находится в начале коллекции.  Новые элементы располагаются в начале коллекции после заполнителя нового элемента.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">Заполнитель нового элемента находится в конце коллекции. Новые элементы добавляются в конец коллекции перед заполнителем нового элемента.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">Заполнитель нового элемента в коллекции не используется. Позиция добавляемых элементов зависит от базовой коллекции.  Обычно они добавляются в конец коллекции.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">Добавляет указанный обработчик событий, вызываемый, когда указанный источник вызывает событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> для заданного свойства.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Имя свойства, существующего для параметра <paramref name="source" />, изменения которого прослушиваются. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="handler" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">С <paramref name="handler" /> связано более одного метода.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">Добавляет заданный прослушиватель в список прослушивателей указанного источника.</summary>
      <param name="source" vsli:raw="The object with the event.">Объект с событием.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Объект, добавляемый в качестве прослушивателя.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Имя свойства, существующего для параметра <paramref name="source" />, изменения которого прослушиваются. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Возвращает новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Новый объект для добавления прослушивателей в событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">Удаляет прослушиватели, ставшие неактивными, из данных для предоставленного источника.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">Исходный объект, для которого удаляются все прослушиватели.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">Очищаемые данные. Предполагается, что это — <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">Равно <see langword="true" />, чтобы остановить прослушивание и для полного удаления всех данных.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если некоторые записи удалены; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Удаляет заданный обработчик событий из заданного источника.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Исходный объект, вызывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Делегат, обрабатывающий событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Имя свойства, существующего для параметра <paramref name="source" />, для которого останавливается прослушивание изменений. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="handler" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">С <paramref name="handler" /> связано более одного метода.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">Удаляет заданный прослушиватель из списка прослушивателей для предоставленного источника.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">Объект, для которого удаляется прослушиватель.</param>
      <param name="listener" vsli:raw="The listener to remove.">Удаляемый прослушиватель.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Имя свойства, существующего для параметра <paramref name="source" />, для которого останавливается прослушивание изменений. Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Начинает прослушивание для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> предоставленного источника.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Объект, для которого начинается прослушивание события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Останавливает прослушивание для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> предоставленного источника.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Исходный объект, для которого останавливается прослушивание события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">Указывает, какие свойства должны выводиться дескрипторами типов, например методом <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">Параметры, описывающие этот фильтр свойств.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework указанному объекту.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Объект, который требуется сравнить с данным объектом <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный объект <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> равен текущему объекту <see cref="T:System.ComponentModel.PropertyFilterAttribute" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Возвращает параметры фильтра для этого атрибута <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework.</summary>
      <returns vsli:raw="The property filter options.">Параметры фильтра свойств.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Возвращает хэш-код для текущего объекта <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">32-разрядное целое значение со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">Возвращает значение, показывающее, соответствуют ли параметры фильтра свойств текущего атрибута <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework параметрам фильтра свойств предоставленного объекта.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Объект для сравнения. Предполагается, что этот объект будет атрибутом <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если соответствие существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">Указывает, какие свойства должны выводиться дескрипторами типов, например методом <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Это перечисление используется для указания значения свойства <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">Возвращаются все свойства.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">Возвращаются только свойства, которые являются недопустимыми в текущем контексте объекта.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">Никакие свойства не возвращаются.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">Возвращаются только свойства, для которых в текущий момент заданы локальные значения.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">Возвращаются только свойства, локальные значения которых не заданы, или не имеющие свойств, заданных во внешнем хранилище выражений (таком как привязка или отложенный ресурс).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">Возвращаются все свойства, допустимые для данного объекта в текущей области.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">Определяет направление и имя свойства, используемые в качестве условий сортировки коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">Инициализирует новый экземпляр структуры <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">Имя свойства, по которому должна выполняться сортировка списка.</param>
      <param name="direction" vsli:raw="The sort order.">Порядок сортировки.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">Параметр <paramref name="direction" /> не задает допустимое значение.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">Получает или задает значение, показывающее, выполняется ли сортировка в порядке возрастания или убывания.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">Значение <see cref="T:System.ComponentModel.ListSortDirection" />, показывающее, выполняется ли сортировка в порядке возрастания или убывания.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">Сравнивает заданный экземпляр с текущим экземпляром объекта <see cref="T:System.ComponentModel.SortDescription" />, проверяя равенство значений.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">Первый экземпляр <see cref="T:System.ComponentModel.SortDescription" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <see langword="true" />, если <paramref name="obj" /> и этот экземпляр <see cref="T:System.ComponentModel.SortDescription" /> имеют одинаковые значения.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Возвращает хэш-код для данного экземпляра <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Хэш-код данного экземпляра <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">Возвращает значение, показывающее, находится ли этот объект в неизменном состоянии.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект используется; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">Сравнивает два объекта <see cref="T:System.ComponentModel.SortDescription" /> на равенство значений.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Первый экземпляр для сравнения.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Второй экземпляр для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если эти два объекта равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">Сравнивает два объекта <see cref="T:System.ComponentModel.SortDescription" /> на неравенство значений.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Первый экземпляр для сравнения.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Второй экземпляр для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если значения не равны; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">Получает или задает имя свойства, которое используется в качестве условия сортировки.</summary>
      <returns vsli:raw="The default value is null.">Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">Представляет коллекцию объектов <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Происходит при добавлении или удалении элемента.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">Возвращает пустой и неизменяемый экземпляр <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">Отсчитываемый от нуля индекс, по которому вставляется <paramref name="item" />.</param>
      <param name="item" vsli:raw="The object to insert.">Вставляемый объект.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">Удаляет элемент по указанному индексу в коллекции.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Индекс (с нуля) элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">Заменяет элемент по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">Новое значение элемента по указанному индексу.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Происходит при добавлении или удалении элемента.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">Описывает уровень детализации для трассировки конкретного объекта.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">Выполняет трассировку всей дополнительной информации.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">Выполняет трассировку некоторой дополнительной информации.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">Выполняет трассировку среднего объема дополнительной информации.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">Трассировка доступной дополнительной информации не выполняется.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">Обеспечивает поддержку трассировки отладки, специально предназначенной для приложений Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">Возвращает источник трассировки анимации.</summary>
      <returns vsli:raw="An animation trace source.">Источник трассировки анимации.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">Возвращает источник трассировки привязки данных.</summary>
      <returns vsli:raw="A data-binding trace source.">Источник трассировки привязки данных.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">Получает источник трассировки свойства зависимости.</summary>
      <returns vsli:raw="A dependency property trace source.">Источник трассировки свойства зависимости.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">Возвращает источник трассировки документа.</summary>
      <returns vsli:raw="A document trace source.">Источник трассировки документа.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Возвращает источник трассировки Freezable.</summary>
      <returns vsli:raw="A Freezable trace source.">Источник трассировки Freezable.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">Получает значение присоединенного свойства <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> указанного элемента.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">Элемент, из которого считывается значение свойства.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">Значение свойства <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> элемента.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">Возвращает источник трассировки сайта hwnd.</summary>
      <returns vsli:raw="An hwnd host trace source.">Источник трассировки сайта hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">Возвращает источник трассировки разметки.</summary>
      <returns vsli:raw="A markup trace source.">Источник трассировки разметки.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">Возвращает источник трассировки области имен.</summary>
      <returns vsli:raw="A name scope trace source.">Источник трассировки области имен.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">Обновляет источники трассировки c помощью принудительного повторного считывания файла app.config.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">Возвращает источник трассировки словаря ресурсов.</summary>
      <returns vsli:raw="A resource dictionary trace source.">Источник трассировки словаря ресурсов.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">Получает источник трассировки перенаправленного события.</summary>
      <returns vsli:raw="A routed event trace source.">Источник трассировки перенаправленного события.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">Задает значение присоединенного свойства <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> в указанном элементе.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">Элемент, в который записывается вложенное свойство.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">Необходимое значение <see cref="T:System.Diagnostics.PresentationTraceLevel" />.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">Получает источник трассировки оболочки.</summary>
      <returns vsli:raw="A shell trace source.">Источник трассировки оболочки.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">Идентифицирует присоединенное свойство <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Исключение, которое вызывается, если входной файл или поток данных, который должен соответствовать определенной спецификации формата файла, сформирован неверно.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" />.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> и инициализирует его с сериализованными данными. Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с заданным сообщением об ошибке.</summary>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с указанным сообщением об ошибке и типом исключения.</summary>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
      <param name="innerException">Значение свойства <see cref="P:System.Exception.InnerException" />, которое представляет причину текущего исключения.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI и типом исключения.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
      <param name="innerException">Значение свойства <see cref="P:System.Exception.InnerException" />, которое представляет причину текущего исключения.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI и заданным сообщением об ошибке.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI, заданным сообщением об ошибке и типом исключения.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
      <param name="innerException">Значение свойства <see cref="P:System.Exception.InnerException" />, которое представляет причину текущего исключения.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Устанавливает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла и дополнительными сведениями об исключении.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Получает имя файла, вызвавшего исключение <see cref="T:System.IO.FileFormatException" />.</summary>
      <returns>
        <see cref="T:System.Uri" />, представляющий имя файла, вызвавшего исключение.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">Определяет место хранения сертификата X.509, используемого для подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">Сертификат внедрен в свою часть <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">Сертификат внедрен в часть <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />, созданную для добавляемой подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">Сертификат не внедрен в пакет.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Определяет уровень сжатия содержимого, хранящегося в объекте <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>Сжатие, обеспечивающее оптимальную производительность.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>Сжатие, обеспечивающее оптимальный размер.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>Сжатие, обеспечивающее оптимальный баланс между размером и производительностью.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>Сжатие отключено.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>Сжатие, обеспечивающее максимальную производительность.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">Представляет составной файл OLE, содержащий зашифрованный пакет.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">Закрывает зашифрованный пакет и содержащий его составной файл OLE.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> для указанного потока.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Поток, для которого создается файл.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> не предоставляет доступа для чтения и записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> и присваивает ему указанное имя файла.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Имя составного файла OLE.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="envelopeFileName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (для указанного потока), использующий в качестве содержимого указанный незашифрованный пакет.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Поток, для которого создается файл.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Поток, представляющий существующий незашифрованный пакет.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="envelopeStream" /> или <paramref name="packageStream" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> не предоставляет доступа для чтения и записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, использующий в качестве содержимого указанный незашифрованный пакет, и присваивает ему указанное имя файла.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Имя составного файла OLE.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Поток, представляющий существующий незашифрованный пакет.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="envelopeFileName" /> или <paramref name="packageStream" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Освобождает все ресурсы, занятые модулем <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">Получает значение, показывающее, в каком режиме открыт файл: с доступом для чтения, для записи или для чтения и записи.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">Значение <see cref="T:System.IO.FileAccess" />, использованное при открытии файла.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">Очищает поток для объекта <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> и содержимого его пакета.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Получает зашифрованный пакет внутри объекта <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">Объект <see cref="T:System.IO.Packaging.Package" /> в конверте.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">Получает значение, показывающее, является ли указанный поток составным файлом OLE с потоком зашифрованного пакета.</summary>
      <param name="stream" vsli:raw="The stream that is tested.">Проверяемый поток.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанный поток является составным файлом OLE с потоком зашифрованного пакета, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">Получает значение, показывающее, является ли указанный файл составным файлом OLE с потоком зашифрованного пакета.</summary>
      <param name="fileName" vsli:raw="The file that is tested.">Проверяемый файл.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанный файл является составным файлом OLE с потоком зашифрованного пакета, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">Открывает зашифрованный пакет в указанном потоке.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">Поток, содержащий зашифрованный пакет.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">Открывает зашифрованный пакет в указанном файле только для чтения без общего доступа.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Файл, содержащий зашифрованный пакет.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">Открывает зашифрованный пакет в указанном файле без общего доступа с указанным типом доступа.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Файл, содержащий зашифрованный пакет.</param>
      <param name="access" vsli:raw="The type of access.">Тип доступа.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">Открывает зашифрованный пакет в указанном файле и назначает ему указанный тип доступа и режим общего доступа.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Файл, содержащий зашифрованный пакет.</param>
      <param name="access" vsli:raw="The type of access.">Тип доступа.</param>
      <param name="sharing" vsli:raw="The type of sharing.">Тип общего доступа.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">Получает основные свойства пакета (название, тему и т. п.) для документа, защищенного службой управления правами.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> для пакета.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">Возвращает сведения об управлении правами, хранящиеся в объекте <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, а именно объекты <see cref="T:System.Security.RightsManagement.PublishLicense" /> и <see cref="T:System.Security.RightsManagement.UseLicense" />, которые хранятся в составном файле OLE, представляющем пакет, защищенный службой управления правами.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> для пакета.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">Получает объект, обеспечивающий доступ к потокам составного файла вне зашифрованного пакета.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">Объект <see cref="T:System.IO.Packaging.StorageInfo" />, который представляет потоки в составном файле OLE, находящиеся вне зашифрованного пакета.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Определяет режим шифрования для частей, входящих в <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Шифрование отсутствует.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Шифрование производится службой управления правами.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">Представляет метод обработки события <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />, которое происходит, когда <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> обнаруживает недопустимую подпись.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">Недопустимая подпись <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> — источник события.</param>
      <param name="e" vsli:raw="The event data.">Данные события.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Представляет контейнер, который может хранить несколько объектов данных.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.Package" />, использующий заданный режим <see cref="T:System.IO.FileAccess" />.</summary>
      <param name="openFileAccess">Разрешения файлового ввода-вывода для пакета.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="openFileAccess" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Сохраняет и закрывает пакет, а также все базовые потоки частей.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Создает новую несжатую часть с заданным URI и типом содержимого.</summary>
      <param name="partUri">Универсальный код ресурса (URI) новой части.</param>
      <param name="contentType">Тип содержимого потока данных.</param>
      <returns>Новая созданная часть.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="partUri" /> или <paramref name="contentType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Часть с указанным <paramref name="partUri" /> уже имеется в пакете.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой части невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Создает новую часть с заданными значениями URI, типа содержимого и режима сжатия.</summary>
      <param name="partUri">URI новой части.</param>
      <param name="contentType">Тип содержимого потока данных.</param>
      <param name="compressionOption">Режим сжатия потока данных — <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> или <see cref="F:System.IO.Packaging.CompressionOption.Normal" />.</param>
      <returns>Новая созданная часть.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="partUri" /> или <paramref name="contentType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является действительным универсальным кодом ресурса (URI) <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Часть с указанным <paramref name="partUri" /> уже имеется в пакете.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="compressionOption" /> является недопустимым.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой части невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>При переопределении в производном классе создает новую часть в пакете.</summary>
      <param name="partUri">Универсальный код ресурса (URI) для создаваемой части.</param>
      <param name="contentType">Тип содержимого потока данных.</param>
      <param name="compressionOption">Параметр сжатия потока данных.</param>
      <returns>Созданная часть.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Создает связь с частью на уровне пакета по заданным значениям URI, вида целевой части и типа связи.</summary>
      <param name="targetUri">Универсальный код ресурса (URI) целевой части.</param>
      <param name="targetMode">Показывает, является ли целевая часть внутренней (<see cref="F:System.IO.Packaging.TargetMode.Internal" />) или внешней (<see cref="F:System.IO.Packaging.TargetMode.External" />) по отношению к пакету.</param>
      <param name="relationshipType">Код URI, однозначно определяющий роль связи.</param>
      <returns>Связь с указанной частью на уровне пакета.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="targetUri" /> или <paramref name="relationshipType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Часть <paramref name="targetUri" /> представляет собой <see cref="T:System.IO.Packaging.PackageRelationship" />, или в качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" /> и <paramref name="targetUri" /> является абсолютным URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="targetMode" /> является недопустимым.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Создает связь с частью на уровне пакета по заданным значениям URI, вида целевой части, типа связи и идентификатор (ID).</summary>
      <param name="targetUri">Универсальный код ресурса (URI) целевой части.</param>
      <param name="targetMode">Показывает, является ли целевая часть внутренней (<see cref="F:System.IO.Packaging.TargetMode.Internal" />) или внешней (<see cref="F:System.IO.Packaging.TargetMode.External" />) по отношению к пакету.</param>
      <param name="relationshipType">Код URI, однозначно определяющий роль связи.</param>
      <param name="id">Уникальный идентификатор XML.</param>
      <returns>Связь с указанной частью на уровне пакета.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="targetUri" /> или <paramref name="relationshipType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Часть <paramref name="targetUri" /> представляет собой <see cref="T:System.IO.Packaging.PackageRelationship" />, или в качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" /> и <paramref name="targetUri" /> является абсолютным URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="targetMode" /> является недопустимым.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> не является допустимым идентификатором XML; или часть с указанным <paramref name="id" /> уже имеется в пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Удаляет из пакета часть с заданным URI.</summary>
      <param name="partUri">Универсальный код ресурса (URI) удаляемой части.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>При переопределении в производном классе удаляет часть с заданным URI.</summary>
      <param name="partUri">Свойство <see cref="P:System.IO.Packaging.PackagePart.Uri" /> удаляемого объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Удаляет связь уровня пакета.</summary>
      <param name="id">Свойство <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> удаляемого объекта <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="id" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Очищает и сохраняет содержимое всех частей и связей, закрывает пакет и освобождает все ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Получает значение режима доступа к файлу для пакета.</summary>
      <returns>Одно из значений <see cref="T:System.IO.FileAccess" />: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> или <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Сохраняет содержимое всех частей и связей, имеющихся в пакете.</summary>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения и не может быть изменен.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>При переопределении в производном классе сохраняет содержимое всех частей и связей в хранилище производного класса.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Возвращает часть с заданным URI.</summary>
      <param name="partUri">Универсальный код ресурса (URI) возвращаемой части.</param>
      <returns>Часть с указанным <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является действительным универсальным кодом ресурса (URI) <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Часть с указанным <paramref name="partUri" /> не содержится в пакете.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>При переопределении в производном классе возвращает часть, адресованную заданным URI.</summary>
      <param name="partUri">Универсальный код ресурса (URI) извлекаемой части.</param>
      <returns>Запрошенная часть или <see langword="null" />, если часть с указанным <paramref name="partUri" /> отсутствует в пакете.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Возвращает коллекцию, состоящую из всех частей пакета.</summary>
      <returns>Коллекция всех элементов <see cref="T:System.IO.Packaging.PackagePart" />, содержащихся в пакете.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>При переопределении в производном классе возвращает массив, состоящий из всех частей пакета.</summary>
      <returns>Массив всех частей, содержащихся в пакете.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Возвращает связь уровня пакета с заданным идентификатором.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> связи, которую требуется возвратить.</param>
      <returns>Связь уровня пакета с указанным <paramref name="id" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="id" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.InvalidOperationException">Связь с указанным <paramref name="id" /> отсутствует в пакете.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Возвращает коллекцию, состоящую из всех связей уровня пакета.</summary>
      <returns>Коллекция всех связей уровня пакета, содержащихся в данном пакете.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Возвращает коллекцию, состоящую из всех связей уровня пакета с заданным типом <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
      <param name="relationshipType">Свойство <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> для сопоставления и возврата в коллекцию.</param>
      <returns>Коллекция связей уровня пакета, соответствующих указанному типу <paramref name="relationshipType" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="relationshipType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relationshipType" /> равен пустой строке.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Открывает пакет в заданном потоке ввода-вывода.</summary>
      <param name="stream">Поток ввода-вывода, в котором требуется открыть пакет.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Для открываемого пакета требуются разрешения на чтение или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для записи, или для открываемого пакета требуются разрешения на запись или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Открывает пакет в заданном потоке ввода-вывода в указанном файловом режиме.</summary>
      <param name="stream">Поток ввода-вывода, в котором требуется открыть пакет.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимое значение параметра <paramref name="packageMode" />.</exception>
      <exception cref="T:System.IO.IOException">Для открываемого пакета требуются разрешения на чтение или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для записи, или для открываемого пакета требуются разрешения на запись или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Открывает пакет в заданном потоке ввода-вывода с указанными значениями файлового режима и режима доступа к файлу.</summary>
      <param name="stream">Поток ввода-вывода, в котором требуется открыть пакет.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <param name="packageAccess">Режим доступа к файлу, в котором следует открыть пакет.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" /> или <paramref name="packageAccess" /> является недопустимым.</exception>
      <exception cref="T:System.IO.IOException">Для открываемого пакета требуются разрешения на чтение или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для записи, или для открываемого пакета требуются разрешения на запись или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Открывает пакет с указанным путем и именем файла.</summary>
      <param name="path">Путь и имя файла пакета.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Открывает пакет на заданном пути в указанном файловом режиме.</summary>
      <param name="path">Путь и имя файла пакета.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Открывает пакет на заданном пути с указанными значениями файлового режима и режима доступа к файлу.</summary>
      <param name="path">Путь и имя файла пакета.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <param name="packageAccess">Режим доступа к файлу, в котором следует открыть пакет.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" /> или <paramref name="packageAccess" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Открывает пакет на заданном пути с указанными значениями файлового режима, режима доступа к файлу и режима общего доступа.</summary>
      <param name="path">Путь и имя файла пакета.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <param name="packageAccess">Режим доступа к файлу, в котором следует открыть пакет.</param>
      <param name="packageShare">Режим общего доступа, в котором следует открыть пакет.</param>
      <returns>Открытый пакет.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" />, <paramref name="packageAccess" /> или <paramref name="packageShare" /> является недопустимым.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Получает основные свойства пакета.</summary>
      <returns>Основные свойства пакета.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Показывает, содержится ли часть с заданным URI в пакете.</summary>
      <param name="partUri">
        <see cref="T:System.Uri" /> проверяемой части.</param>
      <returns>
        <see langword="true" />, если часть с указанным <paramref name="partUri" /> находится в пакете, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является действительным универсальным кодом ресурса (URI) <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение информации невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Показывается, содержится ли в пакете связь уровня пакета с заданным идентификатором.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> проверяемой связи.</param>
      <returns>
        <see langword="true" />, если связь уровня пакета с указанным <paramref name="id" /> находится в пакете, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="id" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Данный член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для использования в приложениях.  Использовать вместо этого типобезопасный метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">Представляет цифровую подпись, которая применяется к набору частей и отношений пакета.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">Получает параметр внедрения сертификата X.509.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">Одно из значений <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />, определяющее параметр для цифровой подписи.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">Возвращает упорядоченный список операций <see cref="T:System.Security.Cryptography.Xml.Transform" />, примененных к данной части.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">
        <see cref="T:System.Uri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" />, для которого возвращается список преобразований.</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">Упорядоченный список строк URI (например, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> или <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />), представляющий канонические XML-преобразования, примененные к части с данным URI (<paramref name="partName" />).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">Получает или задает цифровую подпись XML.</summary>
      <returns vsli:raw="The XML digital signature.">Цифровая подпись XML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">Получает объект <see cref="T:System.IO.Packaging.PackagePart" />, содержащий подпись.</summary>
      <returns vsli:raw="The package part that contains the signature.">Часть пакета, содержащая подпись.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">Возвращает строку URI, идентифицирующую тип подписи.</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">Строка URI, определяющая тип подписи. Значение по умолчанию — <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Получает зашифрованное хэш-значение объекта <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Массив байтов, содержащий зашифрованное хэш-значение объекта <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">Получает коллекцию, состоящую из всех объектов <see cref="T:System.IO.Packaging.PackagePart" />, подписанных данной сигнатурой.</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">Коллекция, содержащая все части пакета, подписанные данной сигнатурой.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Получает список частей <see cref="T:System.IO.Packaging.PackageRelationship" />, подписанных данной сигнатурой.</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Список частей <see cref="T:System.IO.Packaging.PackageRelationship" />, подписанных данной сигнатурой.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">Получает сертификат X.509 подписывающего лица.</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Цифровой сертификат подписывающего лица или значение <see langword="null" />, если сертификат не сохранен в пакете <see cref="T:System.IO.Packaging.Package" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">Возвращает дату и время создания подписи.</summary>
      <returns vsli:raw="The date and time that the signature was created.">Дата и время создания подписи.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Получает формат даты и времени, возвращаемых свойством <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Формат даты и времени, возвращаемых свойством <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">Проверяет цифровую на соответствие сертификату X.509.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">Значение <see cref="F:System.IO.Packaging.VerifyResult.Success" />, если проверка прошла успешно; в противном случае — одно из значений <see cref="T:System.IO.Packaging.VerifyResult" />, определяющее проблему.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">Проверяет цифровую подпись с учетом заданного сертификата X.509.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">Сертификат X.509 подписавшего для проверки цифровой подписи.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">Значение <see cref="F:System.IO.Packaging.VerifyResult.Success" />, если проверка прошла успешно; в противном случае — одно из значений <see cref="T:System.IO.Packaging.VerifyResult" />, определяющее проблему.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Предоставляет служебный класс для создания и проверки цифровых подписей в объекте <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> для использования с заданным объектом <see cref="T:System.IO.Packaging.Package" />.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">Пакет, связанный с данным диспетчером сигнатур.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">Возвращает или задает параметр внедрения сертификата X.509, который используется методом <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> для цифровой подписи частей пакета.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">Ставит вторые подписи для всех подписей в пакете с выбранным пользователем сертификатом X.509.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">Подпись, добавленная в качестве второй, или значение <see langword="null" />, если сертификат не найден или пользователь отменил диалоговое окно выбора сертификата.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">Ставит вторые подписи для всех подписей в пакете с указанным сертификатом X.509.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">Сертификат X.509, добавляемый в качестве второй подписи.</param>
      <returns vsli:raw="The signature that was added as a countersign.">Подпись, добавленная в качестве второй.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> равно <see langword="null" /></exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">Добавляет вторую подпись для списка подписей с помощью заданного сертификата X.509.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">Сертификат X.509 для добавления второй подписи для каждого из указанных <paramref name="signatures" />.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">Список подписей, для которых требуется поставить вторую подпись.</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">Цифровая подпись, используемая для добавления второй подписи для каждого из <paramref name="signatures" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="certificate" /> или <paramref name="signatures" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">Пакет не содержит подписанных объектов <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">Пакет не содержит частей <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">Получает строку URI, которая определяет хэш-алгоритм, используемый по умолчанию для создания и проверки подписей.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">Строка URI, определяющая алгоритм хэширования по умолчанию, используемый для создания и проверки подписей.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">Возвращает цифровую подпись для заданного универсального кода ресурса (URI) подписи.</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">URI цифровой подписи, которую требуется возвратить.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">Цифровая подпись для указанного <paramref name="signatureUri" /> или <see langword="null" />, если подпись с заданным <paramref name="signatureUri" /> не найдена.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Возвращает или задает идентификатор URI для экземпляра <see cref="T:System.Security.Cryptography.HashAlgorithm" />, используемого для создания и проверки подписей.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">
        <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> идентификатор URI для экземпляра <see cref="T:System.Security.Cryptography.HashAlgorithm" />, используемого для создания и проверки подписей.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">Строка для установки URI имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">Строка для установки URI пуста.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">Происходит при обнаружении недействительной подписи методом <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">Получает значение, показывающее, содержатся ли в пакете какие-либо подписи.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если пакет содержит подписи, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">Возвращает или задает дескриптор родительского окна для отображения диалогового окна выбора сертификата.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">Дескриптор родительского окна, используемого для отображения диалогового окна выбора сертификата.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">Удаляет все цифровые подписи из пакета.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">Удаляет цифровую подпись с заданным универсальным кодом ресурса (URI) подписи.</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">URI удаляемого объекта <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">Запрашивает у пользователя сертификат X.509, который затем используется для цифровой подписи указанного списка частей пакета.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Список универсальных идентификаторов ресурсов (URI) элементов <see cref="T:System.IO.Packaging.PackagePart" /> для подписи.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">Цифровая подпись для подписи списка <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">Подписывает список частей пакета с указанным сертификатом X.509.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Список универсальных идентификаторов ресурсов (URI) элементов <see cref="T:System.IO.Packaging.PackagePart" /> для подписи.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">Сертификат X.509, используемый для цифровой подписи каждого указанного <paramref name="parts" />.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">Цифровая подпись используется для подписи указанного списка <paramref name="parts" />; или <see langword="null" />, если не удалось найти сертификат либо пользователь щелкнул "Отмена" в диалоговом окне выбора сертификатов.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">Подписывает список частей пакета и взаимоотношений пакета заданным сертификатом X.509.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Список универсальных идентификаторов ресурсов (URI) объектов <see cref="T:System.IO.Packaging.PackagePart" /> для подписи.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Цифровая подпись, которая используется для подписывания элементов, указанных в списках <paramref name="parts" /> и <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">Ни <paramref name="parts" />, ни <paramref name="relationshipSelectors" /> не указывают объекты для подписи.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">Подписывает список частей пакета и взаимоотношений пакета заданным сертификатом X.509 и идентификатор (ID).</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Список универсальных идентификаторов ресурсов (URI) объектов <see cref="T:System.IO.Packaging.PackagePart" /> для подписи.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Идентификационная строка, которую следует связать с подписью.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Цифровая подпись, которая используется для подписывания элементов, указанных в списках <paramref name="parts" /> и <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">В списках <paramref name="parts" /> и <paramref name="relationshipSelectors" /> отсутствуют элементы для подписывания.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">Подписывает список частей пакета, связей пакета или пользовательских объектов с использованием указанного сертификата X.509 и подписи идентификатор (ID).</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Список универсальных идентификаторов ресурсов (URI) объектов <see cref="T:System.IO.Packaging.PackagePart" /> для подписи.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Идентификационная строка, которую следует связать с подписью.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">Список пользовательских объектов данных, которые требуется подписать.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">Список ссылок на подписываемые пользовательские объекты.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Цифровая подпись, которая используется для подписывания элементов, указанных в списках <paramref name="parts" /> и <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">В списках <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> и <paramref name="objectReferences" /> отсутствуют элементы для подписания.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">
        <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> подписываемой части ссылается на пустое, неопределенное или имеющее значение <see langword="null" /> свойство <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">Значение <paramref name="signatureId" /> отлично от <see langword="null" /> и не является допустимым идентификатором схемы XML (например, начинается с цифры).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">Возвращает универсальный код ресурса (URI) части источника подписи.</summary>
      <returns vsli:raw="The URI of the signature origin part.">Универсальный код ресурса (URI) части источника подписи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">Получает тип связи источника подписи по умолчанию.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">Тип связи источника подписи по умолчанию.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">Получает коллекцию всех сигнатур, содержащихся в пакете.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">Коллекция всех объектов <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Возвращает или задает формат даты/времени, используемый для создания значения <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> для подписи.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Формат даты/времени, используемый для создания значения <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> для подписи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Получает словарь, который содержит каждый определенный тип <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> и идентификатор соответствующего ему алгоритма XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> .</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Словарь, содержащий все определенные <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> и связанные с ними XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> .</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">Проверяет указанный сертификат X.509.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">Проверяемый сертификат X.509.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (значение 0), если сертификат проверен успешно; в противном случае побитовое перечисление флагов ошибок.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">Проверяет подписи всех подписанных частей в пакете.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">Значение <see langword="true" /> для выхода при первом сбое; в противном случае — значение <see langword="false" /> для продолжения обработки и проверки всех подписей.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">Значение <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (0), если все подписи проверены успешно; в противном случае — значение перечисления, которое идентифицирует ошибку.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Предоставляет базовый класс для частей, хранящихся в объекте <see cref="T:System.IO.Packaging.Package" />.  Это абстрактный класс.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackagePart" /> с использованием указанного родительского объекта <see cref="P:System.IO.Packaging.PackagePart.Package" /> и URI части.</summary>
      <param name="package">Родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</param>
      <param name="partUri">Универсальный код ресурса (URI) части относительно корня родительского объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="package" /> или <paramref name="partUri" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackagePart" /> с использованием указанного родительского объекта <see cref="P:System.IO.Packaging.PackagePart.Package" />, URI части и типа содержимого MIME.</summary>
      <param name="package">Родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</param>
      <param name="partUri">Универсальный код ресурса (URI) части относительно корня родительского объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="contentType">Тип MIME для содержимого потока данных части.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="package" /> или <paramref name="partUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackagePart" /> с использованием указанного родительского объекта <see cref="P:System.IO.Packaging.PackagePart.Package" />, URI части, типа содержимого MIME и <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
      <param name="package">Родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</param>
      <param name="partUri">Универсальный код ресурса (URI) части относительно корня родительского объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="contentType">Тип MIME для содержимого потока данных части.</param>
      <param name="compressionOption">Режим сжатия потока данных части.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="package" /> или <paramref name="partUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="compressionOption" /> является недопустимым.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Получает параметр сжатия потока содержимого части.</summary>
      <returns>Параметр сжатия потока содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Получает тип MIME потока содержимого.</summary>
      <returns>Тип MIME для потока данных содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).

или -
Метод <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> производного класса возвращает пустую строку.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Создает связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и указанным целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</summary>
      <param name="targetUri">URI целевой части.</param>
      <param name="targetMode">Одно из значений перечисления. Например, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> определяет целевую часть, находящуюся внутри <see cref="T:System.IO.Packaging.Package" />, а <see cref="F:System.IO.Packaging.TargetMode.External" /> — целевой ресурс вне <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Роль связи.</param>
      <returns>Связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="targetUri" /> или <paramref name="relationshipType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="targetMode" /> не является допустимым значением перечисления <see cref="T:System.IO.Packaging.TargetMode" />.</exception>
      <exception cref="T:System.ArgumentException">Часть, заданная параметром <paramref name="targetUri" />, является связью (целевым объектом связи не может быть другая связь).

или -
В качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" />, однако <paramref name="targetUri" /> является абсолютным внешним URI.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой связи невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Создает связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и указанным целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</summary>
      <param name="targetUri">URI целевой части.</param>
      <param name="targetMode">Одно из значений перечисления. Например, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> определяет целевую часть, находящуюся внутри <see cref="T:System.IO.Packaging.Package" />, а <see cref="F:System.IO.Packaging.TargetMode.External" /> — целевой ресурс вне <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Роль связи.</param>
      <param name="id">Уникальный идентификатор связи.</param>
      <returns>Связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="targetUri" /> или <paramref name="relationshipType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="targetMode" /> не является допустимым значением перечисления <see cref="T:System.IO.Packaging.TargetMode" />.</exception>
      <exception cref="T:System.ArgumentException">Часть, заданная параметром <paramref name="targetUri" />, является связью (целевым объектом связи не может быть другая связь).

или -
В качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" />, однако <paramref name="targetUri" /> является абсолютным внешним URI.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой связи невозможно).</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.

или -
Часть с указанным <paramref name="id" /> уже существует.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Удаляет указанную связь <see cref="T:System.IO.Packaging.PackageRelationship" /> уровня части.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> удаляемой связи.</param>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (удаление связей невозможно).</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>При переопределении в производном классе возвращает тип MIME содержимого части.</summary>
      <returns>Тип MIME содержимого части.</returns>
      <exception cref="T:System.NotSupportedException">Производный класс не предлагает переопределенную реализацию, необходимую для метода <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Возвращает связь с указанным <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> связи, которую требуется возвратить.</param>
      <returns>Связь, соответствующая указанному <paramref name="id" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="id" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relationshipType" /> равен пустой строке.</exception>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).

или -
Связь с указанным <paramref name="id" /> не существует в пакете.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Возвращает коллекцию всех связей, владельцем которых является данная часть.</summary>
      <returns>Коллекция всех связей, владельцем которых является данная часть.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Возвращает коллекцию связей, соответствующих указанному типу <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
      <param name="relationshipType">
        <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> для связей, которые требуется найти и возвратить в составе коллекции.</param>
      <returns>Коллекция связей, соответствующих указанному типу <paramref name="relationshipType" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="relationshipType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relationshipType" /> равен пустой строке.</exception>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Возвращает поток данных содержимого части.</summary>
      <returns>Поток данных содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Метод <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> производного подкласса возвращает <see langword="null" /> в качестве объекта потока.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Возвращает поток содержимого, открытый в указанном режиме ввода-вывода <see cref="T:System.IO.FileMode" />.</summary>
      <param name="mode">Режим ввода-вывода, в котором требуется открыть поток содержимого.</param>
      <returns>Поток содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="mode" /> не является допустимым значением перечисления <see cref="T:System.IO.FileMode" />.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="mode" /> несовместим с потоком пакета и части.

или -
Метод <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> производного подкласса возвращает <see langword="null" /> в качестве объекта потока.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Возвращает поток содержимого части, открытый в указанных режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.</summary>
      <param name="mode">Режим ввода-вывода, в котором требуется открыть поток содержимого.</param>
      <param name="access">Права доступа, используемые при открытии потока содержимого.</param>
      <returns>Поток содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="mode" /> не является допустимым значением перечисления <see cref="T:System.IO.FileMode" />.

или -
Параметр <paramref name="access" /> не является допустимым значением перечисления <see cref="T:System.IO.FileAccess" />.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="mode" /> или <paramref name="access" /> несовместим с потоком пакета и части.

или -
В качестве параметра <paramref name="access" /> задано <see cref="F:System.IO.FileAccess.Read" />, но режим <paramref name="mode" /> требует доступа для записи.  (Значения <see cref="T:System.IO.FileMode" />, равные <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> или <see cref="F:System.IO.FileMode.Append" />, требуют доступа <see cref="F:System.IO.FileAccess.Write" /> или <see cref="F:System.IO.FileAccess.ReadWrite" />.)
или -
Метод <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> производного подкласса возвращает <see langword="null" /> в качестве объекта потока.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>При переопределении в производном классе возвращает поток содержимого части, открытый в указанных режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.</summary>
      <param name="mode">Режим ввода-вывода, в котором требуется открыть поток содержимого.</param>
      <param name="access">Права доступа, используемые при открытии потока содержимого.</param>
      <returns>Поток данных содержимого части.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Получает родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</summary>
      <returns>Родительский пакет части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Возвращает значение, показывающее, является ли данная часть владельцем связи с указанным <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> проверяемой связи.</param>
      <returns>
        <see langword="true" />, если данная часть является владельцем связи с указанным <paramref name="id" />, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Получает URI части.</summary>
      <returns>URI части относительно корня пакета.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.

или -
Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Возвращает перечислитель для итерационного перебора частей, входящих в коллекцию.</summary>
      <returns>Перечислитель для итерационного перебора элементов <see cref="T:System.IO.Packaging.PackagePart" />, входящих в коллекцию.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов в коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который используется для прохода по коллекции.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Представляет основные свойства объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>При переопределении в производном классе получает или задает категорию объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Категория содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>При переопределении в производном классе получает или задает значение, представляющее состояние объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Состояние содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>При переопределении в производном классе получает или задает значение, представляющее тип содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Тип содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>При переопределении в производном классе получает или задает дату и время последнего создания объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Дата и время первоначального создания объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>При переопределении в производном классе получает или задает значение, которое идентифицирует лицо или сущность, создавшую объект <see cref="T:System.IO.Packaging.Package" /> и его содержимое.</summary>
      <returns>Лицо или сущность — создатель объекта <see cref="T:System.IO.Packaging.Package" /> и его содержимого.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>При переопределении в производном классе получает или задает описание содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Описание содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Освобождает все ресурсы, используемые экземпляром объекта <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые экземпляром объекта <see cref="T:System.IO.Packaging.PackageProperties" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>При переопределении в производном классе получает или задает значение, которое однозначно идентифицирует объект <see cref="T:System.IO.Packaging.Package" /> и его содержимое.</summary>
      <returns>Значение, однозначно идентифицирующее объект <see cref="T:System.IO.Packaging.Package" /> и его содержимое.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>При переопределении в производном классе получает или задает значение, которое определяет набор ключевых слов с разделителями, используемый при поиске и индексации объекта <see cref="T:System.IO.Packaging.Package" /> и его содержимого.</summary>
      <returns>Набор ключевых слов с разделителями, используемый при поиске и индексации объекта <see cref="T:System.IO.Packaging.Package" /> и его содержимого.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>При переопределении в производном классе получает или задает значение, которое идентифицирует язык содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Значение, идентифицирующее язык содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>При переопределении в производном классе получает или задает значение, которое идентифицирует пользователя, последним изменившего содержимое объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Пользователь, последним изменивший содержимое <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>При переопределении в производном классе получает или задает дату и время последней печати содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Дата и время последней печати содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>При переопределении в производном классе получает или задает дату и время последнего изменения объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Дата и время последнего изменения объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>При переопределении в производном классе получает или задает номер редакции объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Номер редакции <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>При переопределении в производном классе получает или задает тему содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Тема содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>При переопределении в производном классе получает или задает имя, присвоенное объекту <see cref="T:System.IO.Packaging.Package" /> и его содержимому.</summary>
      <returns>Имя, присвоенное объекту <see cref="T:System.IO.Packaging.Package" /> и его содержимому.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>При переопределении в производном классе получает или задает номер версии объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Номер версии <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Представляет ассоциацию между исходным объектом <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом, которым может быть <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Получает строку идентификатора связи.</summary>
      <returns>Строка идентификатора связи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Возвращает объект <see cref="T:System.IO.Packaging.Package" />, содержащий данную связь.</summary>
      <returns>Пакет, содержащий данную связь.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Получает уточненное имя типа связи.</summary>
      <returns>Уточненное имя типа связи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Возвращает URI пакета или части, которым принадлежит связь.</summary>
      <returns>Универсальный код ресурса (URI) <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" />, которому принадлежит связь.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Получает значение, указывающее, является ли целевой объект отношения <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> для <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Значение перечисления, указывающее, ссылается ли <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> на ресурс <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> для <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Получает URI целевого ресурса связи.</summary>
      <returns>URI целевого ресурса.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Представляет коллекцию элементов <see cref="T:System.IO.Packaging.PackageRelationship" />, владельцами которых является заданный объект <see cref="T:System.IO.Packaging.PackagePart" /> или <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Возвращает перечислитель для итерационного перебора связей, входящих в коллекцию.</summary>
      <returns>Перечислитель для итерационного перебора элементов <see cref="T:System.IO.Packaging.PackageRelationship" />, входящих в коллекцию.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Этот тип или член поддерживает инфраструктуру Windows Presentation Foundation и не предназначен для непосредственного использования из кода.</summary>
      <returns>Не используйте — используйте <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Определяет критерии <see cref="T:System.IO.Packaging.PackageRelationship" /> для выбора связей уровня части или уровня пакета.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
      <param name="sourceUri">Универсальный код ресурса (URI) <see cref="T:System.IO.Packaging.PackagePart" /> или <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>= "/"), который отвечает за связь.</param>
      <param name="selectorType">Тип критерия выбора <paramref name="selectionCriteria" /> — по значению <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> связи или по значению <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> связи.</param>
      <param name="selectionCriteria">Строка квалификации, используемая для выбора связей на основе <paramref name="selectorType" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourceUri" /> или <paramref name="selectionCriteria" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимый параметр <paramref name="selectorType" />.</exception>
      <exception cref="T:System.Xml.XmlException">В качестве параметра <paramref name="selectorType" /> указано <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />, однако <paramref name="selectionCriteria" /> не является допустимым Определение схемы XML (XSD) объекта идентификатор (ID).</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="selectionCriteria" /> недопустимо для указанного типа <paramref name="selectorType" />.

или -

<paramref name="sourceUri" /> не указывает на корень <see cref="T:System.IO.Packaging.Package" /> ("/") и не является допустимым URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Возвращает список объектов <see cref="T:System.IO.Packaging.PackageRelationship" />, соответствующих заданным значениям <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> и <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" />.</summary>
      <param name="package">Пакет, из которого требуется выбрать связи по данным критериям.</param>
      <returns>Список связей, соответствующих параметрам выбора, заданным для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Получает критерии выбора, заданные для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Критерии выбора на основе типа <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> (<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />), заданного для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Возвращает перечисление <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" />, заданное в конструкторе <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Тип селектора — <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />, заданный для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Получает URI корня пакета ("/") или <see cref="P:System.IO.Packaging.PackagePart.Uri" /> части, заданный для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> в качестве владельца связи.</summary>
      <returns>URI корня пакета ("/") или <see cref="P:System.IO.Packaging.PackagePart.Uri" /> части, заданный для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> в качестве владельца связи.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Определяет тип критериев выбора, используемых для сопоставления и возвращения выбранных объектов <see cref="T:System.IO.Packaging.PackageRelationship" /> через <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Выбор <see cref="T:System.IO.Packaging.PackageRelationship" /> производится по значению <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>Выбор <see cref="T:System.IO.Packaging.PackageRelationship" /> производится по значению <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Предоставляет служебные методы для составления и анализа объектов URI пакета.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Возвращает значение, указывающее, являются ли два URI типа pack эквивалентными.</summary>
      <param name="firstPackUri">Первый URI типа pack.</param>
      <param name="secondPackUri">Второй URI типа pack.</param>
      <returns>Целое число со знаком, указывающее на соотношение <paramref name="firstPackUri" /> и <paramref name="secondPackUri" />.
  Значение 
  Значение 
  Меньше 0 
 Значение <paramref name="firstPackUri" /> меньше <paramref name="secondPackUri" />.  
  
  0 
 <paramref name="firstPackUri" /> равно <paramref name="secondPackUri" />.  
  
  Больше 0 
 Значение <paramref name="firstPackUri" /> больше значения <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> или <paramref name="secondPackUri" /> не является абсолютным URI.

или -
<paramref name="firstPackUri" /> или <paramref name="secondPackUri" /> не начинается со схемы "pack://".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Возвращает значение, указывающее, равны ли URI двух частей пакета.</summary>
      <param name="firstPartUri">URI первого объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">URI второго объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Значение, указывающее на соотношение <paramref name="firstPartUri" /> и <paramref name="secondPartUri" />.
  Значение 
  Значение 
  Меньше 0 
 Значение <paramref name="firstPartUri" /> меньше <paramref name="secondPartUri" />.  
  
  0 
 <paramref name="firstPartUri" /> равно <paramref name="secondPartUri" />.  
  
  Больше 0 
 Значение <paramref name="firstPartUri" /> больше значения <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> или <paramref name="secondPartUri" /> не является допустимым синтаксисом URI части.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Создает новый пакет URI, указывающий на пакет.</summary>
      <param name="packageUri">URI связанного <see cref="T:System.IO.Packaging.Package" />.</param>
      <returns>Пакет URI для <see cref="T:System.IO.Packaging.Package" />, на который ссылается данный <paramref name="packageUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> не является абсолютным URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Создает URI пакета на основе URI <see cref="T:System.IO.Packaging.Package" /> и URI части пакета.</summary>
      <param name="packageUri">URI объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI части <see cref="T:System.IO.Packaging.PackagePart" /> в пакете.</param>
      <returns>URI типа pack заданного объекта <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> не является абсолютным URI.

или -
<paramref name="partUri" /> не является допустимым синтаксисом URI части.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Создает URI пакета на основе заданного URI <see cref="T:System.IO.Packaging.Package" />, URI части пакета и добавляемого фрагмента "#".</summary>
      <param name="packageUri">URI объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI части <see cref="T:System.IO.Packaging.PackagePart" /> в пакете.</param>
      <param name="fragment">Ссылка "#", идентифицирующая элемент в части пакета.</param>
      <returns>URI типа pack, определяющий заданный пакет, часть пакета и фрагмент.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> не является абсолютным URI.

или -
<paramref name="partUri" /> не является допустимым синтаксисом URI части.

или -
<paramref name="fragment" /> является пустым или начинается с символа "#".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Создает форматированный URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
      <param name="partUri">URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> пакета.</param>
      <returns>Форматированный URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является абсолютным <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Возвращает нормализованную форму заданного URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
      <param name="partUri">Подлежащий нормализации URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Нормализованная форма заданного <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В <paramref name="partUri" /> отсутствует допустимый синтаксис <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Возвращает внутренний универсальный код ресурса (URI), указывающий на весь пакет указанного кода URI типа pack.</summary>
      <param name="packUri">URI типа pack, из которого следует получить код URI пакета <see cref="T:System.IO.Packaging.Package" />.</param>
      <returns>Код URI пакета <see cref="T:System.IO.Packaging.Package" /> из указанного <paramref name="packUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="packUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> не является абсолютным <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Возвращает URI <see cref="T:System.IO.Packaging.PackagePart" /> в указанном URI типа pack.</summary>
      <param name="packUri">URI типа pack, из которого следует получить URI <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>URI <see cref="T:System.IO.Packaging.PackagePart" /> в указанном <paramref name="packUri" /> или значение <see langword="null" />, если <paramref name="packUri" /> указывает на пакет вместо <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="packUri" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Если <paramref name="packUri" /> не является абсолютным <see cref="T:System.Uri" />.

или -

<paramref name="packUri" /> не имеет схемы "pack://".

или -
Формат partUri, извлеченный из <paramref name="packUri" />, не соответствует допустимому синтаксису partUri.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Возвращает URI части связи, связанной с заданным объектом <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" /> для возврата URI связанного с ним объекта <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns>URI части <see cref="T:System.IO.Packaging.PackageRelationship" />, связанной с объектом <see cref="T:System.IO.Packaging.PackagePart" />, идентифицируемым <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом URI части пакета.

или -
<paramref name="partUri" /> является абсолютным URI.

или -
<paramref name="partUri" /> указывает на часть связи.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Возвращает относительный URI между двумя заданными URI объектов <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
      <param name="sourcePartUri">URI исходной части.</param>
      <param name="targetPartUri">URI целевой части.</param>
      <returns>Относительный URI от <paramref name="sourcePartUri" /> к <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourcePartUri" /> или <paramref name="targetPartUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В <paramref name="sourcePartUri" /> либо <paramref name="targetPartUri" /> отсутствует допустимый синтаксис <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Возвращает <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> из <see cref="T:System.IO.Packaging.PackageRelationship" /> с заданным URI.</summary>
      <param name="relationshipPartUri">URI части связи, из которой следует вернуть <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" /> из связи с заданным <paramref name="relationshipPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="relationshipPartUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> является абсолютным URI.

или -
Синтаксис <paramref name="relationshipPartUri" /> не является допустимым для <see cref="T:System.IO.Packaging.PackagePart" />.

или -
<paramref name="relationshipPartUri" /> не указывает на часть связи.

или -
<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> части связи указывает на другую часть связи (недопустимо).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Возвращает значение, указывающее, является ли заданный URI идентификатором URI части <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
      <param name="partUri">URI, проверяемый для части <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns>
        <see langword="true" />, если <paramref name="partUri" /> идентифицирует часть <see cref="T:System.IO.Packaging.PackageRelationship" />; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> является абсолютным URI.

или -
Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Возвращает URI части по заданному URI исходной части и URI с относительным путем к целевой части.</summary>
      <param name="sourcePartUri">URI исходной части или символ "/", обозначающий корень объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="targetUri">Относительный URI целевой части.</param>
      <returns>URI целевой части, разрешенный на основе исходного и относительного URI, заданных в параметрах <paramref name="SourcePartUri" /> и <paramref name="targetUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="sourcePartUri" /> или <paramref name="targetUri" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="sourcePartUri" /> не содержит допустимый URI части.

или -
Параметр <paramref name="targetUri" /> не содержит допустимый относительный URI.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Определяет имя pack схемы URI типа pack.</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Представляет сведения об управлении цифровыми правами (DRM), которые хранятся в <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">Получает или задает объект <see cref="T:System.Security.RightsManagement.CryptoProvider" /> для доступа к зашифрованному потоку данных управления правами в пакете.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">Объект <see cref="T:System.Security.RightsManagement.CryptoProvider" />, используемый для доступа к данным управления правами.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">Удаляет объект <see cref="T:System.Security.RightsManagement.UseLicense" /> указанного пользователя из зашифрованного потока данных управления правами.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">Пользователь <see cref="T:System.Security.RightsManagement.UseLicense" /> для удаления.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">Возвращает коллекцию-словарь, содержащую пары "ключ/значение" для пользователей и объектов <see cref="T:System.Security.RightsManagement.UseLicense" /> из зашифрованного потока данных управления правами.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">Коллекция пар "ключ/значение" для пользователей и объектов <see cref="T:System.Security.RightsManagement.UseLicense" />, содержащихся в пакете, защищенном средствами управления правами.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">Возвращает внедренный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> из зашифрованного потока данных управления правами.</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Внедренный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> или <see langword="null" />, если в пакете нет объектов <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">Возвращает внедренный объект <see cref="T:System.Security.RightsManagement.UseLicense" /> указанного пользователя из зашифрованного потока данных управления правами.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">Пользователь или группа пользователей, для которых требуется возвратить <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">Объект <see cref="T:System.Security.RightsManagement.UseLicense" /> указанного пользователя или <see langword="null" />, если в пакете нет объектов <see cref="T:System.Security.RightsManagement.UseLicense" /> соответствующих заданному <paramref name="userKey" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="userKey" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">Сохраняет заданный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> в зашифрованном потоке данных управления правами.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">Лицензия на публикацию, которую требуется сохранить и внедрить в пакет.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="publishLicense" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">Сохраняет заданный объект <see cref="T:System.Security.RightsManagement.UseLicense" /> для указанного пользователя в зашифрованном потоке данных управления правами.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Пользователь для объекта <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">Лицензия на использование, которую требуется сохранить и внедрить в пакет.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="userKey" /> или <paramref name="useLicense" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">Задает аргументы события, передаваемые в <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">Получает проверяемую цифровую подпись.</summary>
      <returns vsli:raw="The digital signature being verified.">Проверяемая цифровая подпись.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">Получает ошибку проверки подписи.</summary>
      <returns vsli:raw="The signature verification error.">Ошибка проверки подписи.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Предоставляет доступ и информацию для работы с хранилищами данных, входящими в <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">Создает новый поток с заданным именем.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Имя для нового потока.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Новый поток с именем, заданным параметром <paramref name="name" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">Создает новый поток с заданным именем и параметрами <see cref="T:System.IO.Packaging.CompressionOption" /> и <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Имя для нового потока.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">Параметр сжатия потока данных.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">Параметр шифрования потока данных.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">Новый поток с заданными параметрами <paramref name="name" />, <paramref name="compressionOption" /> и <paramref name="encryptionOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">Создает дочерний объект <see cref="T:System.IO.Packaging.StorageInfo" />, для которого этот объект <see cref="T:System.IO.Packaging.StorageInfo" /> является родительским.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">Имя для нового дочернего хранилища данных.</param>
      <returns vsli:raw="The new child data store.">Новое дочернее хранилище данных.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">Удаляет поток с указанным именем.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">Имя удаляемого потока <see cref="T:System.IO.Packaging.StreamInfo" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">Удаляет указанное вложенное хранилище.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">Имя удаляемого вложенного хранилища.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">Возвращает экземпляр объекта <see cref="T:System.IO.Packaging.StreamInfo" /> с заданным именем.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">Имя возвращаемого экземпляра <see cref="T:System.IO.Packaging.StreamInfo" />.</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Поток с именем, заданным параметром <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">Возвращает массив экземпляров объекта <see cref="T:System.IO.Packaging.StreamInfo" />, которые в настоящее время содержатся в данном хранилище.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">Массив объектов <see cref="T:System.IO.Packaging.StreamInfo" />, каждый из которых указывает на поток ввода-вывода, определенный в данном хранилище.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">Возвращает дочернее вложенное хранилище с указанным именем.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">Имя вложенного хранилища, которое требуется возвратить.</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Дочернее вложенное хранилище с указанным <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">Возвращает массив дочерних вложенных хранилищ, которые в настоящее время содержатся в этом хранилище.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">Массив объектов <see cref="T:System.IO.Packaging.StorageInfo" />, каждый из которых указывает на вложенное хранилище, определенное в данном хранилище.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">Получает имя хранилища.</summary>
      <returns vsli:raw="The name of this store.">Имя данного хранилища.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">Возвращает значение, показывающее, существует ли данный поток.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">Имя проверяемого объекта <see cref="T:System.IO.Packaging.StreamInfo" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если поток с указанным именем <paramref name="name" /> существует, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">Возвращает значение, которое указывает, существует ли указанное дочернее вложенное хранилище.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">Имя проверяемого дочернего объекта <see cref="T:System.IO.Packaging.StorageInfo" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если дочернее вложенное хранилище с указанным именем <paramref name="name" /> существует, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Предоставляет доступ и информацию для работы с потоками ввода-вывода в объекте <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">Получает значение параметра <see cref="T:System.IO.Packaging.CompressionOption" /> для потока.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">Значение параметра сжатия для потока пакета.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">Получает значение параметра <see cref="T:System.IO.Packaging.EncryptionOption" /> для потока.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">Значение параметра шифрования для потока пакета.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Возвращает поток, открытый в режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />, используемых по умолчанию.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Поток ввода-вывода, открытый в режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />, используемых для корня <see cref="T:System.IO.Packaging.Package" /> по умолчанию.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">Возвращает поток ввода-вывода, открытый в указанном режиме <see cref="T:System.IO.FileMode" />.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">Файловый режим, в котором открывается поток.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">Поток, открытый в указанном файловом режиме <paramref name="mode" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Возвращает поток ввода-вывода, открытый в указанном режиме <see cref="T:System.IO.FileMode" /> с заданным режимом <see cref="T:System.IO.FileAccess" />.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">Файловый режим, в котором открывается поток.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">Режим доступа к файлу, в котором требуется выполнять чтение и запись в поток.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Поток ввода-вывода, открытый в указанном режиме <see cref="T:System.IO.FileMode" /> с заданным режимом <see cref="T:System.IO.FileAccess" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">Получает имя потока.</summary>
      <returns vsli:raw="The name of this stream.">Имя данного потока.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Определяет, находится ли целевой объект связи <see cref="T:System.IO.Packaging.PackageRelationship" /> внутри или вне объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>Связь указывает на внешний по отношению к пакету ресурс.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>Связь указывает на часть, находящуюся внутри пакета.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">Указывает результат проверки сертификата или подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">Сертификат X.509 недоступен для проверки подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">Сертификат X.509 недействителен.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">Недопустимая подпись.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">Указанный пакет или часть не имеет подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">Не найдена ссылочная связь с подписью.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">Проверка пройдена успешно.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Реализует производный подкласс абстрактного базового класса <see cref="T:System.IO.Packaging.Package" /> — класс <see cref="T:System.IO.Packaging.ZipPackage" /> использует ZIP-архив в качестве хранилища контейнера. Этот класс не наследуется.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Представляет часть, которая хранится в <see cref="T:System.IO.Packaging.ZipPackage" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> описывает набор разрешений безопасности, который управляет возможностью работы мультимедиа (звука, изображений и видео) в приложении Windows Presentation Foundation (WPF) с частичным доверием.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для аудио.</summary>
      <param name="permissionAudio">Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для видео, аудио и изображений.</summary>
      <param name="permissionAudio">Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для изображений.</summary>
      <param name="permissionImage">Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для видео.</summary>
      <param name="permissionVideo">Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания состояния разрешения.</summary>
      <param name="state">Перечисляемое значение для <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Получает текущее значение уровня разрешений для аудио.</summary>
      <returns>Уровень разрешений для аудио.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения.</summary>
      <returns>Копия текущего разрешения.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает разрешение с указанным состоянием из кодировки XML.</summary>
      <param name="securityElement">Кодировка XML, используемая для восстановления разрешения.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Получает текущее значение уровня разрешений для изображений.</summary>
      <returns>Уровень разрешений для изображений.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений.</summary>
      <param name="target">Разрешение, пересекающееся с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Пересечением двух разрешений является разрешение, которое описывает состояние, включающее в себя описания обоих разрешений. Для пересеченного разрешения будет допустим только тот запрос, который передает оба исходных разрешения.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение подмножеством заданного разрешения.</summary>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Значение <see langword="true" />, если текущее разрешение является подмножеством указанного разрешения. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Возвращает значение, указывающее, является ли текущее разрешение неограниченным.</summary>
      <returns>Значение<see langword="true" /> , если все разрешения для звука, изображений и видео не ограничены; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Создает кодировку XML для разрешения и его текущего состояния.</summary>
      <returns>Кодировка XML разрешения, включающая любые сведения о состоянии.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего и указанного разрешений.</summary>
      <param name="target">Разрешение, которое требуется объединить с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Новое разрешение, представляющее собой объединение текущего и указанного разрешений.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Получает текущее значение уровня разрешений для видео.</summary>
      <returns>Уровень разрешений для мультимедиа.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Разрешает применять меры безопасности для <see cref="T:System.Security.Permissions.MediaPermission" /> к коду с помощью декларативной безопасности.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Одно из значений перечисления <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Возвращает или задает уровень разрешений для аудио для <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Состояние объекта <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Создает и возвращает новый объект <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>Объект <see cref="T:System.Security.Permissions.MediaPermission" />, соответствующий этому атрибуту.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Получает или задает уровень разрешений изображения для <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Состояние объекта <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Возвращает или задает уровень разрешений видео для <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Состояние объекта <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Задает уровень разрешений для аудиозаписей.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Разрешение, допускающее воспроизведение аудиозаписей без ограничений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Разрешение, запрещающее воспроизведение всех аудиозаписей.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Разрешение, допускающее безопасное воспроизведение аудиозаписей с ограничениями, предполагающее запрет на потоковый доступ к файлу изображения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Разрешение, допускающее воспроизведение только тех файлов аудиозаписей, которые расположены на исходном узле приложения.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Задает уровень разрешений для изображений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Разрешение на неограниченное отображение изображений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Разрешение, запрещающее отображение изображений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Разрешение на безопасное отображение изображений с ограничениями, предполагающее запрет на доступ потока к файлу изображения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Разрешение только на отображение изображений, расположенных на исходном узле приложения.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Задает уровень разрешений для видео.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Разрешение, допускающее воспроизведение видео без ограничений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Разрешение, запрещающее воспроизведение видео.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Разрешение, допускающее безопасное воспроизведение видео с ограничениями, предполагающее запрет на потоковый доступ к файлу изображения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Разрешение, допускающее воспроизведение только тех файлов видео, которые расположены на исходном узле приложения.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>Объект <see cref="T:System.Security.Permissions.WebBrowserPermission" /> контролирует возможность создания элемента управления WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" /> путем указания состояния разрешения.</summary>
      <param name="state">Перечисляемое значение для <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" /> путем указания уровня разрешений для веб-браузера.</summary>
      <param name="webBrowserPermissionLevel">Перечисляемое значение для <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения.</summary>
      <returns>Копия текущего разрешения.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает разрешение с указанным состоянием из кодировки XML.</summary>
      <param name="securityElement">Кодировка XML, используемая для восстановления разрешения.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений.</summary>
      <param name="target">Разрешение, пересекающееся с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Пересечением двух разрешений является разрешение, которое описывает состояние, включающее в себя описания обоих разрешений. Для пересеченного разрешения будет допустим только тот запрос, который передает оба исходных разрешения.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение подмножеством заданного разрешения.</summary>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Значение <see langword="true" />, если текущее разрешение является подмножеством указанного разрешения. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Возвращает значение, указывающее, является ли текущее разрешение неограниченным.</summary>
      <returns>Значение <see langword="true" />, если для свойства <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> задано значение <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Получает или задает текущее значение уровня разрешения веб-браузера.</summary>
      <returns>Текущее значение уровня разрешения веб-браузера.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Создает кодировку XML для разрешения и его текущего состояния.</summary>
      <returns>Кодировка XML разрешения, включающая любые сведения о состоянии.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего и указанного разрешений.</summary>
      <param name="target">Разрешение, которое требуется объединить с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Новое разрешение, представляющее собой объединение текущего и указанного разрешений.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Разрешает применять меры безопасности для <see cref="T:System.Security.Permissions.WebBrowserPermission" /> к коду с помощью декларативной безопасности.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> указанным значением <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Одно из значений перечисления <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Создает и возвращает новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>Объект <see cref="T:System.Security.Permissions.WebBrowserPermission" />, соответствующий объявлению безопасности.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Возвращает или задает текущий уровень разрешения веб-браузера для <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>Состояние текущего уровня разрешения для веб-браузера.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Указывает уровень разрешения для браузера.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>браузер не может перемещать фреймы в HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>браузер может безопасно перемещать фреймы в HTML, но с некоторыми ограничениями.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>браузер может перемещать фреймы в HTML без ограничений.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">Задает метод проверки подлинности управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">Неявная проверка подлинности любого запрашивающего пользователя.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Проверка подлинности Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">Проверка подлинности Windows в среде корпоративного домена.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Проверка подлинности Windows либо проверка подлинности Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">Представляет право, предоставленное пользователю для доступа к информации в документе с управляемыми правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentGrant" />, который предоставляет заданному пользователю <see cref="T:System.Security.RightsManagement.ContentUser" /> заданные права <see cref="T:System.Security.RightsManagement.ContentRight" />.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Пользователь, которому предоставлено право доступа.</param>
      <param name="right" vsli:raw="The access right that is granted.">Предоставленное право доступа.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentGrant" />, который предоставляет заданному пользователю <see cref="T:System.Security.RightsManagement.ContentUser" /> заданные права <see cref="T:System.Security.RightsManagement.ContentRight" /> на указанный срок <see cref="T:System.DateTime" />.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Пользователь, которому предоставлено право доступа.</param>
      <param name="right" vsli:raw="The access right that is granted.">Предоставленное право доступа.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">Дата и время начала срока действия права пользователя.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">Дата и время окончания срока действия права пользователя.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">Возвращает предоставленные права <see cref="T:System.Security.RightsManagement.ContentRight" />.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Право доступа, предоставленное пользователю <see cref="P:System.Security.RightsManagement.ContentGrant.User" /> и заданное конструктором <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">Возвращает пользователя, которому предоставлено право доступа <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Пользователь, которому предоставлено право доступа <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />, заданное конструктором <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">Возвращает дату и время начала срока действия предоставленных прав <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">Начальная дата и время <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> начала или. <see cref="T:System.DateTime" /><see cref="F:System.DateTime.MinValue" /> При отсутствии начального ограничения.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">Возвращает дату и время окончания срока действия предоставленного права <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">Дата и время окончания срока действия разрешения <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> , или. <see cref="T:System.DateTime" /><see cref="F:System.DateTime.MaxValue" /> При отсутствии ограничений на конец.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">Задает права, которые могут быть предоставлены пользователям для доступа к содержимому в документе с управлением правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">Пользователь может редактировать документ, содержащий защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">Пользователь может изменять и шифровать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">Пользователь может экспортировать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">Пользователь может извлекать (копировать и вставлять) защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">Пользователь может переадресовывать защищенное содержимое другому пользователю.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">Пользователь может управлять программируемым доступом к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Пользователь является владельцем содержимого.  Владелец может редактировать и шифровать защищенное содержимое и расшифровывать подписанные элементы <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">Пользователь может печатать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">Пользователь может отвечать отправителю защищенного содержимого.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">Пользователь может отвечать всем получателям защищенного содержимого.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">Пользователь может добавлять цифровую подпись в защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">Пользователь может просматривать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Пользователь может расшифровывать и просматривать права, заданные в подписанных элементах <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">Представляет пользователя или группу пользователей для предоставления доступа к содержимому с управлением правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name" vsli:raw="The user or group name.">Имя пользователя или группы.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">Способ проверки подлинности.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Возвращает экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Anyone.</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Anyone.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Возвращает перечисление <see cref="T:System.Security.RightsManagement.AuthenticationType" />, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Перечисление <see cref="T:System.Security.RightsManagement.AuthenticationType" />, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">Возвращает значение, позволяющее определить, эквивалентен ли этот пользователь <see cref="T:System.Security.RightsManagement.ContentUser" /> другому заданному экземпляру.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">Экземпляр пользователя, эквивалентность которого необходимо сравнить.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Если значения свойств <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> для этого пользователя и заданного пользователя совпадают, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Возвращает хэш-код, вычисленный на основе заданных для пользователя значений свойств <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Хэш-код, вычисленный на основе заданных для пользователя значений свойств <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">Возвращает значение, позволяющее определить, была ли выполнена для пользователя проверка подлинности.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">Если проверка подлинности для пользователя выполнена, значение <see langword="true" />, если нет, значение <see langword="false" />.  До проведения проверки подлинности по умолчанию задано значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Возвращает имя пользователя или группы, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Имя пользователя или группы, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Возвращает экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Owner.</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Owner.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">Предоставляет службы управления правами для шифрования и расшифровки защищенного содержимого.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">Возвращает размер блока шифра в байтах.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">Размер блока шифра в байтах.  Размер блока по умолчанию для AES (AES) — 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">Возвращает набор, в котором перечислены прошедшие проверку и предоставленные пользователю права.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">Набор, в котором перечислены прошедшие проверку и предоставленные пользователю права.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">Возвращает значение, позволяющее определить, есть ли у пользователя право на расшифровку.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />значение , <see langword="false" /> если предоставляет пользователю права на расшифровку; в противном случае —. <see cref="T:System.Security.RightsManagement.UseLicense" /></returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">Возвращает значение, позволяющее определить, есть ли у пользователя право на шифрование.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />значение, если <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставляет пользователю права на шифрование; в противном случае —. <see langword="false" /></returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">Возвращает значение, позволяющее определить, могут ли методы <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> принимать буферы с разной длиной блоков.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />значение, если размер буфера <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> , переданного в, может отличаться от размера <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />переданного буфера; <see langword="false" /> в противном случае, если <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> буферы передаются в и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> должны иметь точную одинаковую длину.  Для AES значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">Расшифровывает зашифрованный текст, преобразовывая его в открытый.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">Зашифрованный текст, который нужно расшифровать.</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">Расшифрованный открытый текст параметра <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">Параметр <paramref name="cipherText" /> имеет значение null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">Право на расшифровку не предоставляется.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.RightsManagement.CryptoProvider" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">Шифрует открытый текст, преобразовывая его в зашифрованный.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">Содержимое открытого текста, которое нужно зашифровать.</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">Зашифрованный текст данного параметра <paramref name="clearText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">Параметр <paramref name="clearText" /> имеет значение null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">Шифрование запрещено.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">Освобождает ресурсы и внутреннюю очистку, прежде чем экземпляр будет удален при сборке мусора.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">Представляет неизменяемую (доступную только для чтения) пару строк "Имя" и "Описание".</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">Значение свойства <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> языкового стандарта.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">Значение свойства <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> языкового стандарта.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="name" /> или <paramref name="description" /> равно <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">Получает описание языкового стандарта.</summary>
      <returns vsli:raw="The locale description.">Описание языкового стандарта.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Указывает, совпадают ли значения свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> данного объекта с соответствующими значениями этого экземпляра <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">Объект для сравнения свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Если значения свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> данного объекта совпадают с соответствующими значениями этого экземпляра, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">Возвращает вычисляемый хэш-код на основе свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Вычисляемый хэш-код на основе свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> для этого объекта <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">Возвращает имя языкового стандарта.</summary>
      <returns vsli:raw="The locale name.">Имя языкового стандарта.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">Представляет подписанную управляемую правами лицензию на публикацию.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.PublishLicense" /> из заданного сериализованного и подписанного класса <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">Подписанная и сериализованная лицензия на публикацию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="signedPublishLicense" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">Недопустимая лицензия.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Пытается получить класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Безопасная среда для активации лицензии и привязки.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">Класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <paramref name="secureEnvironment" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="secureEnvironment" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">Сбой проверки подлинности.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Пытается получить класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Безопасная среда для активации лицензии и привязки.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">Класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <paramref name="secureEnvironment" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">Сбой проверки подлинности.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">Возвращает созданный издателем идентификатор содержимого.</summary>
      <returns vsli:raw="The publisher-created content identifier.">Созданный издателем идентификатор содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Возвращает расшифрованную версию <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> подписанного класса <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">Служба управления правами, которая используется для расшифровки лицензии.</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">Расшифрованная неподписанная версия данной лицензии.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="cryptoProvider" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">Возвращает имя контакта, соответствующее автору или издателю содержимого.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Имя контакта, соответствующее автору или издателю содержимого.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">Возвращает URI контакта, соответствующий автору или издателю содержимого.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">Универсальный код ресурса (URI) контакта для автора или издателя содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">Возвращает сериализованную строку Язык XrML, которая использовалась для создания этой лицензии.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">Сериализованная строка Язык XrML (Extensible Rights Markup Language), которая использовалась для создания этой лицензии.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Возвращает URI, с помощью которого будет получен <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">URI, используемый для получения <see cref="T:System.Security.RightsManagement.UseLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">Представляет ошибку, если не удается надлежащим образом завершить операцию управления правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> и задает хранилище <see cref="T:System.Runtime.Serialization.SerializationInfo" />, в котором содержится информация об исключении.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданным перечислением <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Код ошибки.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> заданными свойствами <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> и <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Код ошибки.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Экземпляр исключения, вызвавший ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> заданными свойствами <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> и <see cref="P:System.Exception.Message" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Код ошибки.</param>
      <param name="message" vsli:raw="A message that describes the error.">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданными свойствами <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> и <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Код ошибки.</param>
      <param name="message" vsli:raw="A message that describes the error.">Сообщение, описывающее ошибку.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Экземпляр исключения, вызвавший ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданным сообщением.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> заданными свойствами <see cref="P:System.Exception.Message" /> и <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Сообщение, описывающее ошибку.</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">Экземпляр исключения, вызвавший данное исключение.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">Возвращает для ошибки перечисление <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.</summary>
      <returns vsli:raw="The failure code for the error.">Код ошибки.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">Задает хранилище <see cref="T:System.Runtime.Serialization.SerializationInfo" />, в котором содержится имя параметра и информация об исключении.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">Указывает ошибочные состояния, которые могут произойти при выполнении операции по управлению правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">Асинхронная операция отменена или произошла неустранимая ошибка.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">Сбой службы управления правами; службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">Текущий пользователь не найден в Active Directory (AD) для сертификации при проверке подлинности Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">Запрошенная операция уже выполняется.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">Возможная ошибка проверки подлинности (ошибка HTTP 401) в ответ на интернет-запрос. Или текущий пользователь не имеет действительных учетных данных домена при попытке активации пользователя без уведомления. Или сервер сертификации не находится в локальной сети или в доверенной зоне сайтов при попытке активации пользователя без уведомления.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">Передана недопустимая константа.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">Условие доступа не соответствует разрешающему субъекту, переданному привязке.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">Текущий пользователь не удовлетворяет условиям, определенным в лицензионном соглашении.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">Указанный ресурс не содержится ни в одном узле WORK этой лицензии.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">Разрешающий субъект не соответствует субъекту, определенному в лицензионном соглашении.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Определенный период времени для защищенного содержимого истек; доступ больше не разрешен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">Текущий компьютер не определен в удостоверении группы управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">Указанная группа прав отсутствует в лицензионном соглашении.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">Для лицензии требуется получить новый список отзыва.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">Лицензионное соглашение не содержит узлы WORK.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Определенный период времени для защищенного содержимого истек; доступ больше не разрешен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">Цепь сертификатов управления правами разорвана.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">Обнаружен перевод часов назад. Не удается получить доступ к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">Запрошенная операция шифрования не поддерживается. Например, передан объект шифрования RMS, используемый для расшифровки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">Не удается открыть или опубликовать содержимое с ограниченными разрешениями, так как обнаружен отладчик.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">Не удается проверить адрес электронной почты пользователя.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">Указанный субъект невозможно включить.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">Шифрование запрещено.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Не удается загрузить <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Не удается загрузить <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">Определенный в шаблоне выдачи лицензии период авторизации истек; доступ больше не разрешен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">Указанный параметр уже установлен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">Для сеанса клиента не указано имя пользователя.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">Идентификатор оборудования (HID), используемый при попытке активации компьютера, имеет неправильный формат. Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">Идентификатор оборудования (HID), используемый при попытке активации компьютера, является недопустимым. Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">Идентификатор содержимого в лицензии не соответствует идентификатору содержимого для сеанса хранения лицензии.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">Переданный тип объекта не совместим с этой операцией.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">При создании связанной лицензии указана лицензия на выпуск, а не лицензия на использование.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">Отсутствуют некоторые сведения.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">Сбой операции установки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">Указан недопустимый тип алгоритма.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">Сбой проверки адреса электронной почты сервера RMS.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">Указан недопустимый тип кодирования.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">Недопустимая среда или недопустимый дескриптор разрешающего субъекта.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">Шаблон служб управления правами содержит одну или несколько ошибок.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">Указанная в паре "ключ-значение" длина ключа недопустима.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">Недопустимая структура лицензии в одном из сертификатов.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">Не удается проверить подписанный цифровой сертификат на управление правами. (Возможно, подписанный сертификат подделан.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">Указано недопустимое числовое значение.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">Указанный путь реестра является недопустимым.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">Указанные сведения о времени являются недопустимыми.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">Неправильная версия управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">Указанный в паре "ключ-значение" тип ключа не поддерживается.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">Не удалось выполнить операцию библиотеки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">Указанный подключаемый модуль библиотеки не поддерживается.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">Лицензионное соглашение не удалось получить с сервера управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">Учетные данные текущего пользователя не пригодны для получения лицензии.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">Операция нарушает политику манифеста управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">Указанные метаданные не удалось установить.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">Не активирован пользователь или не предоставлен сертификат учетной записи службы управления правами (RAC), а в хранилище лицензий нет сертификата, соответствующего лицензии, связанной с этим сеансом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">Перед активацией пользователя необходимо активировать компьютер.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">Управление правами не может подключиться к URI сервера лицензирования.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">Защищенное содержимое повреждено.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">Требуемая лицензия недоступна.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">По указанному индексу не существует лицензий или сертификатов.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">Содержимое управления правами повреждено.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">Элемент, удаление которого запрошено, не существует.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">Достигнута максимальная квота лицензионных соглашений на сервере лицензирования.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">Документ не содержит лицензию владельца.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">Экземпляры запрашиваемого атрибута не существуют.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">Указанная лицензия не найдена.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">Сервер управления правами не разрешает временную сертификацию текущего пользователя.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">Не заданы сведения об отзыве сертификата или лицензии.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Текущий пользователь не имеет прав доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">Запрашиваемое право не указано при публикации содержимого с помощью службы управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">Операция завершена успешно.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">Число сертификатов превысило максимально допустимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">Создано слишком много экземпляров <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">Произошла неизвестная ошибка.  Также возникает, когда приложение выполняется в режиме отладки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">Если выполняется запрос на активацию компьютера или сертификата учетной записи прав, ответ <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> означает, что приложение должно передать <see langword="null" /> в качестве значения параметра ActServInfo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Определенный период времени для защищенного содержимого истек; доступ больше не разрешен.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">Представляет безопасный сеанс клиента для активации пользователей, привязки лицензии и других операций управления правами.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Возвращает свойство <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />, заданное при создании объекта <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">Манифест приложения, заданный для метода <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> при создании класса <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">Создает безопасный сеанс клиента при наличии манифеста прав приложения, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> и <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Манифест прав приложения.</param>
      <param name="authentication" vsli:raw="The method of authentication.">Метод проверки подлинности.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">Тип сертификата учетной записи прав пользователя.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Безопасный сеанс клиента для активации, привязки лицензии и других операций управления правами.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">Создает безопасный сеанс клиента для указанного пользователя с заданным манифестом прав.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Манифест прав приложения.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Пользователь или группа пользователей для предоставления доступа к содержимому с управлением правами.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Безопасный сеанс клиента для активации, привязки лицензии и других операций управления правами.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.RightsManagement.SecureEnvironment" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">Возвращает список активированных пользователей.</summary>
      <returns vsli:raw="A list of the currently activated users.">Список пользователей, которые активированы в данный момент.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">Указывает, активирован ли данный пользователь для доступа к содержимому с управлением правами.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Пользователь или группа пользователей для предоставления доступа к содержимому с управлением правами.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный <paramref name="user" /> был активирован для доступа к содержимому с управлением правами; в противном случае значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">Отменяет активацию лицензии для указанного пользователя.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">Пользователь, активацию лицензии для которого требуется удалить.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="user" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">Указанный <paramref name="user" /> не прошел проверку подлинности Windows или проверку подлинности по паспорту.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Возвращает пользователя или группу пользователей, заданную при создании объекта <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Пользователь или группа пользователей, заданные для метода <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> при создании объекта <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">Представляет неподписанный управляемый правами объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> или неподписанный шаблон <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> на основе заданного шаблона лицензии на опубликование Язык XrML.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">Шаблон лицензии на опубликование Язык XrML (Extensible Rights Markup Language), используемый для создания этой лицензии.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">Получает или задает созданный издателем идентификатор содержимого.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">Созданный издателем управляемый правами идентификатор содержимого.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">Возвращает набор присвоенных прав пользователя.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">Набор присвоенных прав пользователя, предоставляемых данной лицензией.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">Возвращает набор пар имен и описаний.</summary>
      <returns vsli:raw="A collection of name and description pairs.">Набор пар имен и описаний.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">Возвращает или задает владельца содержимого.</summary>
      <returns vsli:raw="The user who owns the published content.">Пользователь, которому принадлежит опубликованное содержимое.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">Возвращает или задает имя контакта, соответствующее автору или издателю содержимого.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Имя контакта, соответствующее автору или издателю содержимого.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">Возвращает или задает URI контакта, соответствующий автору или издателю содержимого.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">Универсальный код ресурса (URI) контакта для автора или издателя содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Создает подписанный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> и возвращает объект <see cref="T:System.Security.RightsManagement.UseLicense" /> для автора документа.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Безопасная среда для активации лицензии и привязки.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Объект <see cref="T:System.Security.RightsManagement.UseLicense" />, возвращенный для автора документа.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Подписанный класс <see cref="T:System.Security.RightsManagement.PublishLicense" />, созданный путем подписания класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Возвращает сериализованный шаблон, созданный из Язык XrML для <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Сериализованный шаблон, созданный из Язык XrML для <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">Представляет лицензию, позволяющую получить доступ к содержимому, защищенному системой управления правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">Лицензия на использование в сериализованной форме Язык XrML (Extensible Rights Markup Language).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="useLicense" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> недопустим.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Возвращает словарь данных приложения, содержащий пары ключ-значение, переданные из публикующего приложения в приложение, которое их использует.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Словарь данных приложения, содержащий пары ключ/значение, переданные из публикующего приложения в приложение, которое их использует.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Привязывает лицензию к данному объекту <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">Среда, к которой следует привязать лицензию.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Если привязка прошла успешно, экземпляр <see cref="T:System.Security.RightsManagement.CryptoProvider" />; если нет, значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">Возвращает созданный издателем идентификатор содержимого.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">Созданный издателем идентификатор содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">Указывает, эквивалентна ли эта лицензия другой заданной лицензии.</summary>
      <param name="x" vsli:raw="The license to compare.">Лицензия для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Если обе лицензии эквивалентны, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">Возвращает хэш-код, связанный с этой лицензией.</summary>
      <returns vsli:raw="A hash code for this license.">Хэш-код для этой лицензии.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">Возвращает владельца лицензии.</summary>
      <returns vsli:raw="The owner of the license.">Владелец лицензии.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">Возвращает сериализованную строку Язык XrML, которая используется для создания этой лицензии.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">Сериализованная строка Язык XrML (Extensible Rights Markup Language), которая изначально была передана в конструктор <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">Задает тип сертификата учетной записи службы управления правами для запроса активации управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">Постоянный сертификат учетной записи службы управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">Временный сертификат учетной записи службы управления правами.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">Предоставляет базовый класс для атрибутов .NET Framework, которые сообщают об области использования присоединенных свойств.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">Указывает, что присоединенное свойство отображается только для элементов, которые являются производными от указанного типа.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> с использованием предоставленного <paramref name="targetType" />.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">Тип, предназначенный для задания области использования вложенного свойства, к которому применяется Атрибут .NET Framework.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Определяет, равен ли текущий <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут .NET Framework заданному объекту.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Объект <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> для сравнения с текущим объектом <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> равен текущему объекту <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Возвращает хэш-код для этого атрибута <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">32-разрядное целое значение без знака.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">Возвращает базовый тип, определяющий область использования присоединенного свойства, в котором применяется Атрибут .NET Framework.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Запрошенный тип <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Возвращает уникальный идентификатор типа для данного <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут .NET Framework.</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Объект, являющийся уникальным идентификатором для <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">Указывает, что присоединенное свойство можно просмотреть только в элементе, который также имеет другой указанный атрибут .NET Framework, примененный к его определению класса.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">Объект <see cref="T:System.Type" /> класса Атрибут .NET Framework, который также необходимо применить к классу, чтобы присоединенное свойство было доступно для просмотра в классе, к которому применен <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">Получает тип Атрибут .NET Framework, который также необходимо применить к классу.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">Атрибут .NET Framework Тип.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Определяет, равен ли текущий <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Атрибут .NET Framework заданному объекту.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">Объект <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> для сравнения с текущим объектом <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> равен текущему объекту <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">Возвращает хэш-код для этого атрибута <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Атрибут .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">32-разрядное целое значение без знака.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">Содержит свойства, определяющие, как приложение должно работать по отношению к новым функциям WPF, находящимся в сборке WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Получает или задает значение, указывающее, сохранена ли информация о <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> в <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> если сведения о <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> сохраняются в <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />; в противном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">Определяет, каким образом диспетчер реагирует на сбои, возникающие при запросах на обработку.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">Значение, которое определяет, каким образом диспетчер реагирует на сбои.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">Предоставляет набор значений, который описывает, каким образом диспетчер реагирует на сбои, возникающие при обработке запроса.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">Продолжить после сбоя.
Это значение по умолчанию. Оно определяет поведение диспетчера Windows Presentation Foundation, предшествующего .NET Framework 4.7.1. При выборе этого параметра диспетчер может перестать отвечать.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">Сбросьте состояние диспетчера, чтобы в следующий раз попробовать другой запрос, когда он будет необходим.
Хотя этот параметр может иногда устранять проблему зависания, он не поддерживает обычное время обработки, что может иметь важное значение. Выбор этого параметра может привести к непредвиденному поведению.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">Создание исключения.
Этот параметр сразу же привлекает внимание разработчика приложений к проблеме.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">Получает или задает значение, указывающее, помещает ли метод <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> делегаты в очередь диспетчера или делегат вызывается напрямую.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если метод <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> помещает делегаты в очередь диспетчера или делегат вызывается напрямую; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">Получает или задает значение, указывающее, один ли <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> используется для нескольких операций отправки.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">значение true, если одно <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> используется для нескольких операций диспетчера; в противном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">Предоставляет шаблон для метода, вызываемого при оценке значения свойства зависимостей и запросе запрета изменения значения.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">Объект, содержащий свойство. При вызове ответа, система свойств передает это значение.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">Новое значение свойства до применения операции запрета изменения значения.</param>
      <returns vsli:raw="The coerced value (with appropriate type).">Запрещенное значение (с соответствующим типом).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Int32Rect" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Int32Rect" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Преобразуемая строка.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Int32Rect" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Int32Rect" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Строковое представление заданного объекта <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Point" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Point" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Преобразуемая строка.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Point" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Point" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Строковое представление заданного объекта <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Rect" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Rect" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Преобразуемая строка.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Rect" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Rect" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Строковое представление заданного объекта <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Size" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Size" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Преобразуемая строка.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Size" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Size" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Строковое представление заданного объекта <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Vector" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Vector" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Преобразуемая строка.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Vector" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Vector" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Строковое представление заданного объекта <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">Общий базовый класс и контракт для объектов <see cref="T:System.Windows.Data.DataSourceProvider" />, являющихся фабриками, выполняющими некоторые запросы для получения отдельного объекта или списка объектов, которые можно использовать в качестве объектов источника привязки.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.DataSourceProvider" />. Этот конструктор является защищенным.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">Указывает, что должна начаться инициализация этого объекта; неявный вызов метода <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> не выполняется до вызова соответствующего метода <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">При переопределении в производном классе базовый класс вызывает этот метод при условии, что были вызваны методы <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> или <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />. Базовый класс задерживает вызов метода, если включена задержка обновления или отключена начальная загрузка.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">Возвращает базовый объект данных.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">Значение типа <see cref="T:System.Object" />, представляющее базовый объект данных.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">Происходит в том случае, если свойство <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> имеет новое значение.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">Вводит цикл задержки, который можно использовать для изменения свойств поставщика и задержки автоматического обновления.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Объект <see cref="T:System.IDisposable" />, который можно использовать для уничтожения вызывающего объекта.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">Возвращает или задает текущий объект <see cref="T:System.Windows.Threading.Dispatcher" /> для использования в потоке ИП.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">Текущий объект <see cref="T:System.Windows.Threading.Dispatcher" /> в используемый поток ИП. По умолчанию это объект <see cref="T:System.Windows.Threading.Dispatcher" />, который связан с потоком, в котором был создан этот экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">Указывает, что инициализация этого объекта завершена; в результате будет вызван метод <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />, если в очереди не стоит никакой другой метод <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">Получает ошибку в последней операции запроса.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">Значение с типом <see cref="T:System.Exception" />, представляющее ошибку в последней операции запроса, либо значение <see langword="null" />, если ошибки не возникали.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Запускает начальный запрос в базовую модель данных. Результат возвращается в свойстве <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">Получает или задает значение, которое указывает, должна ли быть заблокирована либо задержана автоматическая загрузка данных.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="false" />, если автоматическая загрузка данных должна быть заблокирована или задержана; в противном случае — значение <see langword="true" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">Получает значение, которое указывает, используется ли метод <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> используется; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">Вызывает событие <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> с предоставленным аргументами.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Аргументы вызываемого события.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Этот метод вызывается в производных классах с целью определить, завершено ли выполнение запроса.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Данные, являющиеся результатом выполнения запроса.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Этот метод вызывается в производных классах с целью определить, завершено ли выполнение запроса.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Данные, являющиеся результатом выполнения запроса.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">При выполнении этого запроса произошла ошибка. Если ошибки отсутствуют, это значение равно <see langword="null" />.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">Необязательный делегат, который используется для выполнения действий, связанных с завершением запроса, в потоке ИП, например для установки дополнительных свойств.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">Необязательные аргументы для передачи в качестве параметра с делегатом <paramref name="completionWork" />.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Возникает при смене значения свойства.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Инициирует операцию обновления для базовой модели данных. Результат возвращается в свойстве <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Возникает при смене значения свойства.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">Представляет объект, участвующий в системе свойств зависимостей.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">Очищает локальное значение свойства. Очищаемое свойство задается идентификатором <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">Очищаемое свойство зависимости, указанное объектной ссылкой <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Предпринята попытка вызова <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> в запечатанном объекте <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">Очищает локальное значение свойства, доступного только для чтения. Очищаемое свойство задается ключом <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">Ключ для очищаемого свойства зависимостей.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Пытается вызвать метод <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> для запечатанного <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Приводит значение указанного свойства зависимостей. Это осуществляется путем вызова какой-либо функции <see cref="T:System.Windows.CoerceValueCallback" />, указанной в метаданных свойства зависимостей, которое существует в вызывающем объекте <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">Идентификатор приводимого свойства зависимостей.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">Указанный параметр <paramref name="dp" /> или его значение недопустимы, или их не существует.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Возвращает <see cref="T:System.Windows.DependencyObjectType" />, который создает обертку для типа CLR данного экземпляра.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">
        <see cref="T:System.Windows.DependencyObjectType" />, который создает обертку для типа CLR данного экземпляра.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Определяет, является ли указанный <see cref="T:System.Windows.DependencyObject" /> эквивалентом текущего <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">
        <see cref="T:System.Windows.DependencyObject" /> для сравнения с текущим экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если два экземпляра одинаковы; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Возвращает хэш-код для данного объекта <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Подписанный хэш-код в виде 32-разрядного целого числа.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Создает специализированный перечислитель для определения свойств зависимостей, которые локально установили значения для данного <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A specialized local value enumerator.">Специализированный перечислитель локальных значений.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Возвращает текущее действующее значение свойства зависимостей в этом экземпляре <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, значение которого требуется извлечь.</param>
      <returns vsli:raw="Returns the current effective value.">Возвращает текущее действующее значение.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">Указанный параметр <paramref name="dp" /> был недопустим, или его значение было недопустимо, или указанный <paramref name="dp" /> не существует.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">Повторно вычисляет действующее значение для указанного свойства зависимостей.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, которое следует сделать недействительным.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">Получает значение, указывающее, является ли этот экземпляр в данный момент запечатанным (доступным только для чтения).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если этот экземпляр запечатан; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">Вызывается каждый раз, когда обновляется действительное значение любого свойства зависимостей для данного <see cref="T:System.Windows.DependencyObject" />. Конкретное измененное свойство зависимостей сообщается в данных события.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">Данные события, в которых будет содержаться интересующий идентификатор свойства зависимостей, метаданные свойства для типа, а также старое и новое значения.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">Возвращает локальное значение свойства зависимостей, если таковое существует.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, значение которого требуется извлечь.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">Возвращает локальное значение или значение-метку <see cref="F:System.Windows.DependencyProperty.UnsetValue" />, если локальное значение не задано.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">Задает значение свойства зависимостей, не меняя источник значения.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Идентификатор задаваемого свойства зависимостей.</param>
      <param name="value" vsli:raw="The new local value.">Новое локальное значение.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Предпринята попытка изменить доступное только для чтения свойство зависимостей или свойство запечатанного объекта <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> не является правильным типом, зарегистрированным для свойства <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">Задает локальное значение свойства зависимостей, указанного идентификатором этого свойства.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Идентификатор задаваемого свойства зависимостей.</param>
      <param name="value" vsli:raw="The new local value.">Новое локальное значение.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Предпринята попытка изменить доступное только для чтения свойство зависимостей или свойство запечатанного объекта <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> не был корректным типом, зарегистрированным для свойства <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">Задает локальное значение свойства зависимости только для чтения, определяемое идентификатором <see cref="T:System.Windows.DependencyPropertyKey" /> свойства зависимостей.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">Идентификатор <see cref="T:System.Windows.DependencyPropertyKey" /> задаваемого свойства.</param>
      <param name="value" vsli:raw="The new local value.">Новое локальное значение.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">Возвращает значение, которое указывает, следует ли процессам сериализации выполнять сериализацию значения для предоставленного свойства зависимостей.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">Идентификатор для сериализуемого свойства зависимостей.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение предоставленного свойства зависимостей необходимо сериализовать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">Реализует кэш соответствующего типа для всех производных типов <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Получает <see cref="T:System.Windows.DependencyObjectType" /> непосредственного базового класса текущей <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="The type of the base class.">Тип базового класса.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">Возвращает <see cref="T:System.Windows.DependencyObjectType" />, представляющий тип данной системы (CLR).</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">Тип системы (CLR) для преобразования.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">Объект <see cref="T:System.Windows.DependencyObjectType" />, представляющий тип системы CLR.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">Получает начинающийся с нуля уникальный идентификатор для операций поиска массива постоянного времени.</summary>
      <returns vsli:raw="An internal identifier.">Внутренний идентификатор.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Определяет, является ли указанный объект экземпляром текущего типа <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Windows.DependencyObjectType" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если класс, представленный текущим <see cref="T:System.Windows.DependencyObjectType" />, входит в иерархию наследования <see cref="T:System.Windows.DependencyObject" />, переданную в качестве <paramref name="d" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Определяет, является ли текущий <see cref="T:System.Windows.DependencyObjectType" /> производным от указанного <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Windows.DependencyObjectType" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">Значение <see langword="true" />, если параметр <paramref name="dependencyObjectType" /> и текущий <see cref="T:System.Windows.DependencyObjectType" /> представляют типы классов, и при этом класс представлен текущим <see cref="T:System.Windows.DependencyObjectType" />, производным от класса, представленного <paramref name="dependencyObjectType" />. В противном случае — значение <see langword="false" />. Этот метод также возвращает значение <see langword="false" />, если параметр <paramref name="dependencyObjectType" /> и текущий объект <see cref="T:System.Windows.DependencyObjectType" /> представляют один и тот же класс.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">Получает имя представленного типа системы среда CLR.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">Имя представленного типа системы CLR.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Получает тип системы среда CLR, представленный данным <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Тип системы CLR, представленный данным <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">Представляет свойство, которое можно задать с помощью методов, например стили, привязки данных, анимации и наследование.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">Добавляет другой тип в качестве владельца свойства зависимостей, которое уже зарегистрировано.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">Тип для добавления в качестве владельца данного свойства зависимостей.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Ссылка на исходный идентификатор <see cref="T:System.Windows.DependencyProperty" />, который определяет свойство зависимостей. Этот идентификатор должен быть представлен путем добавления класса в качестве поля <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">Добавляет другой тип в качестве владельца свойства зависимостей, который уже был зарегистрирован, предоставляя метаданные свойства зависимости для свойства зависимостей в том виде, в котором оно будет существовать в предоставленном типе владельца.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">Тип для добавления в качестве владельца данного свойства зависимостей.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">Метаданные, квалифицирующие свойство зависимостей в том виде, в котором оно существует в указанном типе.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Ссылка на исходный идентификатор <see cref="T:System.Windows.DependencyProperty" />, который определяет свойство зависимостей. Этот идентификатор должен быть представлен путем добавления класса в качестве поля <see langword="public static readonly" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">Возвращает метаданные свойства зависимостей по умолчанию.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">Метаданные свойства зависимостей по умолчанию.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Возвращает хэш-код для данного свойства <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Хэш-код для этого экземпляра <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">Возвращает метаданные для этого свойства зависимостей в том виде, в котором оно представлено в указанном существующем типе.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">Конкретный тип, из которого необходимо извлечь метаданные свойства зависимостей.</param>
      <returns vsli:raw="A property metadata object.">Объект метаданных свойств.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">Возвращает метаданные для этого свойства зависимостей в том виде,в котором оно существует в указанном экземпляре объекта.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">Объект зависимости, проверяемый на наличие типа, чтобы определить, из какой типозависимой версии свойства зависимости нужно использовать метаданные.</param>
      <returns vsli:raw="A property metadata object.">Объект метаданных свойств.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">Возвращает метаданные для этого свойства зависимостей в том виде, в каком они представлены в указанном типе.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">Специальный объект, который записывает тип объекта зависимости, из которого запрашиваются метаданные свойства зависимостей.</param>
      <returns vsli:raw="A property metadata object.">Объект метаданных свойств.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">Возвращает внутреннее сгенерированное значение, уникальным образом идентифицирующее свойство зависимостей.</summary>
      <returns vsli:raw="A unique numeric identifier.">Уникальный числовой идентификатор.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">Определяет, приемлемо ли указанное значение для типа данного свойства зависимостей, проверяя его по типу свойства, указанного при исходной регистрации свойства зависимостей.</summary>
      <param name="value" vsli:raw="The value to check.">Проверяемое значение.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанное значение принадлежит к зарегистрированному типу свойства или приемлемому производному типу; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">Определяет, приемлемо ли указанное значение для типа свойства, путем базовой проверки типа, а также, находится ли оно потенциально в пределах разрешенного диапазона значений для данного типа.</summary>
      <param name="value" vsli:raw="The value to check.">Проверяемое значение.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если значение приемлемо и принадлежит к надлежащему или производному типу; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">Возвращает имя свойства зависимостей.</summary>
      <returns vsli:raw="The name of the property.">Имя свойства.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">Задает альтернативные метаданные для этого свойства зависимостей, если оно присутствует в экземплярах указанного типа, переопределяя метаданные, которые существовали для данного свойства зависимостей в том виде, в котором оно было унаследовано от базовых типов.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Тип, где это свойство зависимостей наследуется и где будут применены указанные альтернативные метаданные.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Метаданные для применения к свойству зависимостей в переопределяемом типе.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">Была предпринята попытка переопределения метаданных в доступном только для чтения свойстве зависимости (операция не может быть выполнена с помощью данной сигнатуры).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">Метаданные уже были установлены для данного свойства зависимостей в том виде, в котором оно существует в предоставленном типе.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">Предоставляет альтернативные метаданные для свойства зависимостей, доступного только для чтения, когда оно присутствует в экземплярах указанного типа, переопределяя метаданные, предоставленные при первоначальной регистрации свойства зависимостей. Вы должны передать <see cref="T:System.Windows.DependencyPropertyKey" /> для свойства зависимостей, доступного только для чтения, чтобы избежать возникновения исключения.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Тип, где это свойство зависимостей наследуется и где будут применены указанные альтернативные метаданные.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Метаданные для применения к свойству зависимостей в переопределяемом типе.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">Ключ доступа для свойства зависимостей, доступного только для чтения.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">Получает тип объекта, зарегистрировавшего свойство зависимостей в системе свойств или добавившего себя в качестве владельца свойства.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">Тип объекта, зарегистрировавшего свойство или добавившего себя в качестве владельца свойства.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">Возвращает тип, используемый свойством зависимостей для его значения.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">
        <see cref="T:System.Type" /> значения свойства.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">Возвращает значение, указывающее, является ли свойство зависимостей, идентифицируемое данным экземпляром <see cref="T:System.Windows.DependencyProperty" />, доступным только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если свойство зависимостей доступно только для чтения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">Регистрирует свойство зависимостей с указанием имени свойства, типа свойства и типа владельца.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">Имя регистрируемого свойства зависимостей. Имя должно быть уникальным в пределах пространства имен регистрации для типа владельца.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующий свойство зависимостей.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе. Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">Регистрирует свойство зависимостей с указанным именем свойства, типом свойства, типом владельца и метаданными свойства.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Метаданные свойства зависимостей.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе. Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">Регистрирует свойство зависимостей с указанным именем свойства, типом свойства, типом владельца, метаданными свойства и обратным вызовом проверки значения для свойства.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Метаданные свойства зависимостей.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ссылка на обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе. Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">Регистрирует присоединенное свойство с указанием имени свойства, типа свойства и типа владельца.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе. Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">Регистрирует присоединенное свойство с указанным именем и типом свойства, типом владельца и метаданными свойства.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Метаданные свойства зависимостей. Могут включать значение по умолчанию и другие характеристики.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе. Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">Регистрирует присоединенное свойство с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки значения свойства.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Метаданные свойства зависимостей. Могут включать значение по умолчанию и другие характеристики.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ссылка на обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе. Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">Регистрирует доступное только для чтения присоединенное свойство с указанным типом свойства, типом владельца и метаданными свойства.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Метаданные свойства зависимостей.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">Регистрирует доступное только для чтения присоединенное свойство с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Метаданные свойства зависимостей.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ссылка на созданный пользователем обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">Регистрирует доступное только для чтения свойство зависимостей с указанным типом свойства, типом владельца и метаданными свойства.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Метаданные свойства зависимостей.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">Регистрирует доступное только для чтения свойство зависимостей с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Имя регистрируемого свойства зависимостей.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Тип свойства.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Метаданные свойства зависимостей.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ссылка на созданный пользователем обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">Возвращает строковое представление свойства зависимостей.</summary>
      <returns vsli:raw="The string representation of the dependency property.">Строковое представление свойства зависимостей.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">Задает статическое значение, используемое системой свойств WPF вместо <see langword="null" /> для указания того, что свойство существует, но его значение не задано системой свойств.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">Возвращает обратный вызов для проверки значения свойства зависимостей.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">Обратный вызов для проверки значения данного свойства зависимостей, указанный параметром <paramref name="validateValueCallback" /> при изначальной регистрации свойства зависимостей.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">Предоставляет данные для различных событий изменения свойств. Обычно такие события сообщают об изменениях действительных значений в свойстве зависимостей только для чтения. Также они используются как часть реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">Идентификатор для измененного свойства зависимостей.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">Значение свойства до сообщения об изменении соответствующим событием или изменением состояния.</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">Значение свойства после сообщения об изменении соответствующим событием или изменением состояния.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Определяет, эквивалентен ли указанный объект текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Объект для сравнения с текущим объектом <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанный объект эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Определяет, эквивалентен ли указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Возвращает хэш-код для данного объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">Возвращает значение свойства после изменения.</summary>
      <returns vsli:raw="The property value after the change.">Значение свойства после изменения.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">Возвращает значение свойства перед изменением.</summary>
      <returns vsli:raw="The property value before the change.">Значение свойства перед изменением.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Второй объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">Определяет, различаются ли два заданных объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Второй экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> различаются; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">Возвращает идентификатор свойства зависимостей, в котором произошло изменение значения.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">Поле идентификатора свойства зависимостей, в котором произошло изменение значения.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">Представляет метод, обрабатывающий события, которое вызывается при изменении <see cref="T:System.Windows.DependencyProperty" /> в определенной реализации <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The event data.">Данные события.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">Предоставляет идентификатор свойства зависимостей для ограниченного доступа на запись к доступному только для чтения свойству зависимостей.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">Возвращает идентификатор свойства зависимостей, связанный с данным специализированным идентификатором доступного только для чтения свойства зависимостей.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">Соответствующий идентификатор свойства зависимостей.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">Переопределяет метаданные доступного только для чтения свойства зависимостей, представленного данным идентификатором свойства зависимостей.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">Тип, в котором существует данное свойство зависимостей и следует переопределить метаданные.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">Метаданные, переданные для этого типа.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">Попытка переопределения метаданных в доступном для чтения и записи свойстве зависимостей (не может быть осуществлена с помощью данной сигнатуры).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">Метаданные уже были установлены для свойства, так как они существуют в указанном типе.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Этот тип поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">Преобразует экземпляры <see cref="T:System.Windows.Expression" /> в иные типы и обратно.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">Возвращает значение, указывающее, может ли этот преобразователь преобразовать исходный объект в объект <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">Тип <see cref="T:System.Type" />, представляющий тип, из которого нужно выполнить преобразование.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Всегда <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">Возвращает значение, указывающее, может ли этот преобразователь преобразовать объект <see cref="T:System.Windows.Expression" /> в определенный целевой тип.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Объект <see cref="T:System.Type" />, представляющий тип, в который необходимо выполнить преобразование.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Всегда <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">Преобразует предоставленное значение в тип <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в качестве текущего языка и региональных параметров.</param>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда вызывает исключение и возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">Преобразует предоставленный объект <see cref="T:System.Windows.Expression" /> в заданный тип.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в качестве текущего языка и региональных параметров.</param>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Объект <see cref="T:System.Type" />, представляющий тип, в который необходимо выполнить преобразование.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда вызывает исключение и возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">Определяет объект, имеющий изменяемое состояние и состояние только для чтения (зафиксированное). Классы, производные от <see cref="T:System.Windows.Freezable" />, предоставляют подробные уведомления об изменениях, могут быть неизменяемыми и могут копировать себя.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Инициализирует новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">Возвращает значение, которое указывает, можно ли сделать объект неизменяемым.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если текущий объект можно сделать неизменяемым или если он уже является неизменяемым; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">Происходит, когда изменяется класс <see cref="T:System.Windows.Freezable" /> или объект, который входит в его состав.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">Создает изменяемый клон данного объекта <see cref="T:System.Windows.Freezable" />, делая глубокие копии значений этого объекта. При копировании свойств зависимостей объекта этот метод копирует выражения (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Изменяемая копия текущего объекта. Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта имеет значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта имеет значение <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Делает экземпляр клоном (глубокой копией) указанного объекта <see cref="T:System.Windows.Freezable" />, используя базовые (без анимации) значения свойств.</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">Объект, используемый для клонирования.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">Создает редактируемую копию (глубокую копию) объекта <see cref="T:System.Windows.Freezable" /> с использованием его текущих значений.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Изменяемая копия текущего объекта. Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта имеет значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта имеет значение <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">Делает экземпляр изменяемым клоном (глубокой копией) указанного объекта <see cref="T:System.Windows.Freezable" /> с использованием текущих значений свойств.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">Элемент привязки <see cref="T:System.Windows.Freezable" />, точную копию которого необходимо создать.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">Новый экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Если реализуется в производном классе, создает новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">Новый экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">Делает текущий объект неизменяемым и присваивает его свойству <see cref="P:System.Windows.Freezable.IsFrozen" /> значение <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">Объект <see cref="T:System.Windows.Freezable" /> невозможно сделать неизменяемым.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">Если параметр <paramref name="isChecking" /> имеет значение <see langword="true" />, данный метод показывает, можно ли сделать заданный объект <see cref="T:System.Windows.Freezable" /> нередактируемым. Если параметр <paramref name="isChecking" /> имеет значение <see langword="false" />, данный метод пытается сделать заданный объект <see cref="T:System.Windows.Freezable" /> нередактируемым и показывает, была ли операция успешной.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">Объект, который необходимо проверить или сделать нередактируемым. Если параметр <paramref name="isChecking" /> имеет значение <see langword="true" />, объект проверяется, чтобы определить, можно ли его сделать нередактируемым. Если параметр <paramref name="isChecking" /> имеет значение <see langword="false" />, объект делается нередактируемым, если это возможно.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">Значение <see langword="true" /> показывает, что объект можно заморозить (замораживание на самом деле не выполняется); значение <see langword="false" /> показывает, что объект замораживается на самом деле.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Если параметр <paramref name="isChecking" /> имеет значение <see langword="true" />, этот метод возвращает значение <see langword="true" />, если заданный объект <see cref="T:System.Windows.Freezable" /> можно сделать нередактируемым, или значение <see langword="false" />, если такая возможность отсутствует. Если параметр <paramref name="isChecking" /> имеет значение <see langword="false" />, этот метод возвращает значение <see langword="true" />, если заданный объект <see cref="T:System.Windows.Freezable" /> сейчас является нередактируемым, или значение <see langword="false" />, если его нельзя сделать нередактируемым.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">Если параметр <paramref name="isChecking" /> имеет значение <see langword="false" />, это показывает, что попытка сделать объект <paramref name="freezable" /> была безуспешной; теперь объект имеет неизвестное состояние (он может быть частично заморожен).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">Делает объект <see cref="T:System.Windows.Freezable" /> нередактируемым или проверяет, можно ли его сделать нередактируемым.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">Значение <see langword="true" /> показывает, что объект можно заморозить (замораживание на самом деле не выполняется); значение <see langword="false" /> показывает, что объект замораживается на самом деле.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Если параметр <paramref name="isChecking" /> имеет значение <see langword="true" />, этот метод возвращает значение <see langword="true" />, если данный объект <see cref="T:System.Windows.Freezable" /> можно сделать нередактируемым, или значение <see langword="false" />, если такая возможность отсутствует. Если параметр <paramref name="isChecking" /> имеет значение <see langword="false" />, этот метод возвращает значение <see langword="true" />, если заданный объект <see cref="T:System.Windows.Freezable" /> сейчас является нередактируемым, или значение <see langword="false" />, если его нельзя сделать нередактируемым.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Создает фиксированную копию объекта <see cref="T:System.Windows.Freezable" />, используя базовые (не анимационные) значения свойств. Так как копия является фиксированной, копируются только ссылки на фиксированные вложенные объекты.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Фиксированная копия объекта <see cref="T:System.Windows.Freezable" />. Свойство копии <see cref="P:System.Windows.Freezable.IsFrozen" /> имеет значение <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">Объект <see cref="T:System.Windows.Freezable" /> нельзя заморозить, так как он включает выражения или анимационные свойства.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Делает экземпляр зафиксированной копией указанного <see cref="T:System.Windows.Freezable" />, используя базовые (без анимации) значения свойств.</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">Копируемый экземпляр.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Создает фиксированную копию объекта <see cref="T:System.Windows.Freezable" /> с использованием текущих значений свойств. Так как копия является фиксированной, копируются только ссылки на фиксированные вложенные объекты.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Фиксированная копия объекта <see cref="T:System.Windows.Freezable" />. Свойство копии <see cref="P:System.Windows.Freezable.IsFrozen" /> имеет значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">Создает текущий экземпляр замороженной копии указанного объекта <see cref="T:System.Windows.Freezable" />. Если объект имеет анимированные свойства зависимостей, копируются их текущие анимированные значения.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">Объект <see cref="T:System.Windows.Freezable" />, который необходимо скопировать и заморозить.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">Получает значение, указывающее, доступен ли объект для изменения в настоящее время.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">Значение <see langword="true" />, если объект заморожен и не может быть изменен; значение <see langword="false" />, если объект может быть изменен.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">Вызывается при изменении текущего объекта <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">Обеспечивает создание соответствующих указателей контекста для элемента данных типа <see cref="T:System.Windows.DependencyObjectType" />, который был только что задан.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Предыдущее значение элемента данных.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Текущее значение элемента данных.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Предыдущее значение элемента данных.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Текущее значение элемента данных.</param>
      <param name="property" vsli:raw="The property that changed.">Измененное свойство.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">Переопределяет реализацию <see cref="T:System.Windows.DependencyObject" /> для <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />, чтобы также вызвать любой обработчик <see cref="E:System.Windows.Freezable.Changed" /> в ответ на изменение свойства зависимостей типа <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">Данные события, содержащие сведения об изменении свойства и его старое и новое значения.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">Обеспечивает доступ к <see cref="T:System.Windows.Freezable" /> из допустимого потока. Наследники объекта <see cref="T:System.Windows.Freezable" /> должны вызывать данный метод в начале любого API, который считывает элементы данных, не являющиеся свойствами зависимостей.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">Вызывает событие <see cref="E:System.Windows.Freezable.Changed" /> для объекта <see cref="T:System.Windows.Freezable" /> и вызывает его метод <see cref="M:System.Windows.Freezable.OnChanged" />. Классы, производные от <see cref="T:System.Windows.Freezable" />, должны вызывать этот метод в конце любого API, который изменяет члены класса, не сохраненные в виде свойств зависимостей.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">Проверяет, что объект <see cref="T:System.Windows.Freezable" /> не заморожен и доступ к нему осуществляется из допустимого контекста потока. Наследники объекта <see cref="T:System.Windows.Freezable" /> должны вызывать данный метод в начале любого API, который выполняет запись в элементах данных, не являющихся свойствами зависимостей.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">Экземпляр <see cref="T:System.Windows.Freezable" /> заморожен, и запись в его члены невозможна.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">Задает направление в пользовательском интерфейсе, в котором пытается выполниться запрос на изменение фокуса. Это направление либо основано на последовательности табуляции, либо определяется относительно направления в макете.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">Фокус перемещается к другому элементу, способному получать фокус, ниже текущего имеющего фокус элемента.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Фокус перемещается к первому элементу в последовательности табуляции, способному получать фокус. Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Фокус перемещается к последнему элементу в последовательности табуляции, способному получать фокус. Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">Фокус перемещается к другому элементу, способному получать фокус, слева от текущего имеющего фокус элемента.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Фокус перемещается к следующему элементу в последовательности табуляции, способному получать фокус. Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Фокус перемещается к предыдущему элементу в последовательности табуляции, способному получать фокус. Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">Фокус перемещается к другому элементу, способному получать фокус, справа от текущего имеющего фокус элемента.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">Фокус перемещается к другому элементу, способному получать фокус, выше текущего имеющего фокус элемента.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">Задает возможные значения клавиш на клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">Клавиша A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">Клавиша ABNT_C1 (Бразилия).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">Клавиша ABNT_C2 (Бразилия).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">Клавиша сложения.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">Клавиша приложения (клавиатура Microsoft Natural Keyboard). Также называется клавишей меню, так как с ее помощью отображается контекстное меню приложения.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">Клавиша ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">Клавиша B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">Клавиша BACKSPACE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">Клавиша браузера "Назад".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">Клавиша браузера "Избранное".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">Клавиша браузера "Вперед".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">Клавиша браузера "Главная".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">Клавиша браузера "Обновить".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">Клавиша браузера "Поиск".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">Клавиша браузера "Остановить".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">Клавиша C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">Клавиша "Отмена".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">Клавиша CAPS LOCK.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">Клавиша CAPS LOCK.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">Клавиша CLEAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">Клавиша CRSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">Клавиша D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">Клавиша 0 (нуль).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">Клавиша 1 (один).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">Клавиша 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">Клавиша 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">Клавиша 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">Клавиша 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">Клавиша 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">Клавиша 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">Клавиша 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">Клавиша 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">Клавиша DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">Клавиша DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">Клавиша DBE_DBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">Клавиша DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">Клавиша DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">Клавиша DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">Клавиша DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">Клавиша DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">Клавиша DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">Клавиша DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">Клавиша DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">Клавиша DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">Клавиша DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">Клавиша DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">Клавиша используется вместе с другой клавишей для создания одного объединенного символа.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">Клавиша десятичного разделителя.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">Клавиша DELETE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">Клавиша деления.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">Клавиша СТРЕЛКА ВНИЗ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">Клавиша E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">Клавиша END.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">Клавиша ВВОД.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">Клавиша ERASE EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">Клавиша ESC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">Клавиша "Выполнить".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">Клавиша EXSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">Клавиша F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">Клавиша F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">Клавиша F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">Клавиша F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">Клавиша F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">Клавиша F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">Клавиша F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">Клавиша F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">Клавиша F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">Клавиша F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">Клавиша F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">Клавиша F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">Клавиша F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">Клавиша F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">Клавиша F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">Клавиша F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">Клавиша F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">Клавиша F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">Клавиша F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">Клавиша F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">Клавиша F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">Клавиша F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">Клавиша F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">Клавиша F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">Клавиша F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">Клавиша режима "Последний" редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">Клавиша G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">Клавиша H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">Клавиша режима "Хангыль" редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">Клавиша режима "Ханджа" редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">Клавиша справки.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">Клавиша HOME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">Клавиша I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">Клавиша принятия в редакторе метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">Клавиша преобразования в редакторе метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">Запрос на изменение режима редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">Клавиша без преобразования в редакторе метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">Специальная клавиша, маскирующая фактическую клавишу, обрабатываемую редактором метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">Клавиша INSERT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">Клавиша J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">Клавиша режима "Джунджа" редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">Клавиша K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">Клавиша режима "Кана" редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">Клавиша режима "Кандзи" редактора метода ввода.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">Клавиша L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">Клавиша запуска приложения 1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">Клавиша запуска приложения 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">Клавиша запуска почты.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">Клавиша СТРЕЛКА ВЛЕВО.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">Левая клавиша ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">Левая клавиша CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">Левая клавиша SHIFT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">Клавиша перевода строки.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">Левая клавиша с логотипом Windows (клавиатура Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">Клавиша M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">Клавиша "Следующая запись".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">Клавиша приостановки воспроизведения.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">Клавиша "Предыдущая запись".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">Клавиша остановки воспроизведения.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">Клавиша умножения.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">Клавиша N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">Клавиша PAGE DOWN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">Константа, зарезервированная для будущего использования.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">Нет нажатых клавиш.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">Клавиша NUM LOCK.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">Клавиша 0 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">Клавиша 1 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">Клавиша 2 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">Клавиша 3 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">Клавиша 4 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">Клавиша 5 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">Клавиша 6 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">Клавиша 7 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">Клавиша 8 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">Клавиша 9 на цифровой клавиатуре.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">Клавиша O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">Клавиша OEM 1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">Клавиша OEM 102.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">Клавиша OEM 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">Клавиша OEM 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">Клавиша OEM 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">Клавиша OEM 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">Клавиша OEM 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">Клавиша OEM 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">Клавиша OEM 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">Клавиша OEM ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">Клавиша OEM AUTO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">Клавиша OEM с обратной косой чертой.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">Клавиша OEM BACKTAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">Клавиша OEM очистки.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">Клавиша OEM с закрывающими скобками.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">Клавиша OEM с запятой.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">Клавиша OEM COPY.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">Клавиша OEM ENLW.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">Клавиша OEM FINISH.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">Клавиша OEM с минусом.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">Клавиша OEM с открывающими скобками.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">Клавиша OEM с точкой.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">Клавиша OEM с вертикальной чертой.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">Клавиша OEM со сложением.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">Клавиша OEM с вопросительным знаком.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">Клавиша OEM с кавычками.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">Клавиша OEM с точкой с запятой.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">Клавиша OEM с тильдой.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">Клавиша P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">Клавиша PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">Клавиша PAGE DOWN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">Клавиша PAGE UP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">Клавиша паузы.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">Клавиша ВОСПРОИЗВЕСТИ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">Клавиша "Печать".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">Клавиша PRINT SCREEN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">Клавиша PAGE UP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Клавиша Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">Клавиша R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">Клавиша RETURN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">Клавиша СТРЕЛКА ВПРАВО.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">Правая клавиша ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">Правая клавиша CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">Правая клавиша SHIFT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">Правая клавиша с логотипом Windows (клавиатура Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">Клавиша S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">Клавиша SCROLL LOCK.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">Клавиша "Выбрать".</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">Клавиша выбора мультимедиа.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">Клавиша разделителя.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">Клавиша перевода компьютера в спящий режим.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">Клавиша PRINT SCREEN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">Клавиша ПРОБЕЛ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">Клавиша вычитания.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">Специальный клавиша, маскирующая фактическую клавишу, обрабатываемую в качестве системной клавиши.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">Клавиша T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">Клавиша TAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">Клавиша U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">Клавиша СТРЕЛКА ВВЕРХ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">Клавиша V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">Клавиша уменьшения громкости.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">Клавиша выключения звука.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">Клавиша увеличения громкости.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">Клавиша W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">Клавиша X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Клавиша Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Клавиша Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">Клавиша МАСШТАБ.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">Преобразует объект <see cref="T:System.Windows.Input.Key" /> в другие типы данных и обратно.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Windows.Input.Key" /> с использованием заданного контекста.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Тип, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="sourceType" /> имеет тип <see cref="T:System.String" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">Определяет, может ли экземпляр типа <see cref="T:System.Windows.Input.Key" /> быть преобразован к заданному типу с использованием заданного контекста.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Тип, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="destinationType" /> имеет тип <see cref="T:System.String" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Пытается преобразовать указанный объект в <see cref="T:System.Windows.Input.Key" />, используя заданный контекст.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="source" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted object.">Преобразованный объект.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">Пытается преобразовать объект <see cref="T:System.Windows.Input.Key" /> к заданному типу, используя заданный контекст.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Тип, в который требуется преобразовать объект.</param>
      <returns vsli:raw="The converted object.">Преобразованный объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">Параметр <paramref name="value" /> не может быть преобразован в <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Предоставляет статические методы преобразования между виртуальными клавишами Win32 и перечислением <see cref="T:System.Windows.Input.Key" /> WPF.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Преобразует виртуальную клавишу Win32 в WPF <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">Виртуальная клавиша для преобразования.</param>
      <returns vsli:raw="The WPF key.">Клавиша WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">Преобразует <see cref="T:System.Windows.Input.Key" /> WPF в виртуальную клавишу Win32.</summary>
      <param name="key" vsli:raw="The WPF to convert.">Преобразуемый объект WPF.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">Виртуальная клавиша Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Input.Key" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Определяет, можно ли преобразовать указанную строку <see cref="T:System.String" /> в экземпляр <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Input.Key" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">Клавиша, для которой необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Строка, преобразуемая в <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр <see cref="T:System.Windows.Input.Key" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Input.Key" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Клавиша для преобразования в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Инвариантное строковое представление заданного объекта <see cref="T:System.Windows.Input.Key" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">Задает набор клавиш CTRL, SHIFT и ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">Клавиша ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">Клавиша CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">Клавиши CTRL, SHIFT и ALT не нажаты.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">Клавиша SHIFT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">Клавиша WINDOWS.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">Преобразует объект <see cref="T:System.Windows.Input.ModifierKeys" /> в другие типы данных и обратно.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Windows.Input.ModifierKeys" /> с использованием заданного контекста.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Тип, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="sourceType" /> является типом <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">Определяет, может ли экземпляр типа <see cref="T:System.Windows.Input.ModifierKeys" /> быть преобразован к заданному типу с использованием заданного контекста.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Тип, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="destinationType" /> является типом <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Пытается преобразовать указанный объект в <see cref="T:System.Windows.Input.ModifierKeys" />, используя заданный контекст.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="source" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted object.">Преобразованный объект.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">Пытается преобразовать объект <see cref="T:System.Windows.Input.ModifierKeys" /> к заданному типу, используя заданный контекст.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Тип, в который требуется преобразовать объект.</param>
      <returns vsli:raw="The converted object.">Преобразованный объект.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Параметр <paramref name="value" /> не соответствует допустимому значению <see cref="T:System.Windows.Input.ModifierKeys" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Определяет, является ли заданное значение допустимым <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">Значение, проверяемое на допустимость.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если входящее значение <see cref="T:System.Windows.Input.ModifierKeys" /> допустимо, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Input.ModifierKeys" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, может ли указанный объект <see cref="T:System.Windows.Input.ModifierKeys" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">Клавиши CTRL, SHIFT и ALT, возможность преобразования которых необходимо оценить.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Преобразует <see cref="T:System.String" /> в значение <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Строка, преобразуемая в <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeys" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Input.ModifierKeys" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Клавиша для преобразования в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Инвариантное строковое представление заданного значения <see cref="T:System.Windows.Input.ModifierKeys" />.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">Представляет запрос на перемещение фокуса на другой элемент управления.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">Направление, в котором нужно переместить фокус, как значение из перечисления.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">Получает направление обхода.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">Одно из значений из перечисления, определяющего направления обхода.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">Получает или задает значение, указывающее, достигнут ли при обходе фокусом последний из дочерних элементов, которые могут иметь фокус.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если при данном обходе достигнут последний из дочерних элементов, которые могут иметь фокус; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">Описывает ширину, высоту и расположение целого прямоугольника.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">Инициализирует новый экземпляр <see cref="T:System.Windows.Int32Rect" /> с указанными координатами <see cref="P:System.Windows.Int32Rect.X" /> и <see cref="P:System.Windows.Int32Rect.Y" /> и заданными значениями <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">Значение <see cref="P:System.Windows.Int32Rect.X" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает координату по оси Х верхнего левого угла прямоугольника.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">Значение <see cref="P:System.Windows.Int32Rect.Y" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает координату по оси Y верхнего левого угла прямоугольника.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">Значение <see cref="P:System.Windows.Int32Rect.Width" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает ширину прямоугольника.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">Значение <see cref="P:System.Windows.Int32Rect.Height" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает высоту прямоугольника.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">Возвращает пустой прямоугольник (специальное значение, которое представляет прямоугольник без расположения или площади).</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">Пустой прямоугольник без расположения или площади.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Определяет, равен ли указанный прямоугольник данному прямоугольнику.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Объект, который требуется сравнить с текущим прямоугольником.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="o" /> является <see cref="T:System.Windows.Int32Rect" /> и имеет одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> с этим прямоугольником. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Определяет, равен ли указанный прямоугольник данному прямоугольнику.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Прямоугольник, который требуется сравнить с текущим прямоугольником.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> имеет одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> с этим прямоугольником. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">Определяет, равны ли указанные прямоугольники.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="int32Rect1" /> и <paramref name="int32Rect2" /> имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">Создает хэш-код с использованием значений <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> данного прямоугольника.</summary>
      <returns vsli:raw="This rectangle's hash code.">Хэш-код данного прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">Получает значение, определяющее, имеют ли свойства <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> объекта <see cref="T:System.Windows.Int32Rect" /> значения больше 0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="P:System.Windows.Int32Rect.Height" />
        <see cref="T:System.Windows.Int32Rect" /> значение, <see cref="P:System.Windows.Int32Rect.Width" /> Если свойства и объекта больше 0; в противном <see langword="false" /> случае —.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Возвращает или задает высоту прямоугольника.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Высота прямоугольника. Значение по умолчанию — <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">Возвращает значение, которое определяет, пуст ли прямоугольник.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />значение, если прямоугольник пуст; в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Проверяет точное равенство двух прямоугольников.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="int32Rect1" /> и <paramref name="int32Rect2" /> имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Проверяет, различны ли два прямоугольника.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="false" />, если<paramref name="int32Rect1" /> и <paramref name="int32Rect2" /> имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. В противном случае, если все эти значения совпадают, — значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">Создает структуру <see cref="T:System.Windows.Int32Rect" /> из заданного представления <see cref="T:System.String" />.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Строковое представление <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Эквивалентная структура <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Форматирует значение текущего экземпляра с использованием заданного формата.</summary>
      <param name="format" vsli:raw="The format to use.">Используемый формат.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Поставщик, используемый для форматирования значения.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Значение текущего экземпляра в указанном формате.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Создает строковое представление данной матрицы <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Строка, содержащая одинаковые значения <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> данной структуры <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">Создает строковое представление объекта <see cref="T:System.Windows.Int32Rect" /> на основе заданного значения <see cref="T:System.IFormatProvider" />.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">Используемый поставщик формата. Если поставщиком является <see langword="null" />, используется текущий язык и региональные параметры.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Строковое представление данного экземпляра объекта <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Получает или задает ширину прямоугольника.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Ширина прямоугольника. Значение по умолчанию — <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">Получает или задает координату по оси X левого верхнего угла прямоугольника.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Координата по оси X верхнего левого угла прямоугольника. Значение по умолчанию — <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">Получает или задает координату по оси Y левого верхнего угла прямоугольника.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Координата по оси Y верхнего левого угла прямоугольника. Значение по умолчанию — <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Преобразует экземпляры других типов в экземпляры <see cref="T:System.Windows.Int32Rect" /> и выполняет обратное преобразование.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Определяет, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Тип источника, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если тип может быть преобразован в <see cref="T:System.Windows.Int32Rect" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">Определяет, может ли экземпляр <see cref="T:System.Windows.Int32Rect" /> быть преобразован в другой тип.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">Требуемый тип, для которого <see cref="T:System.Windows.Int32Rect" /> проверяет возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Windows.Int32Rect" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Пытается преобразовать указанный тип в <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value" vsli:raw="The object being converted.">Преобразуемый объект.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Объект <see cref="T:System.Windows.Int32Rect" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Вызывается, если заданный объект имеет значение NULL или является типом, преобразование которого в <see cref="T:System.Windows.Int32Rect" /> невозможно.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">Пытается преобразовать <see cref="T:System.Windows.Int32Rect" /> в заданный тип.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">Преобразуемый объект <see cref="T:System.Windows.Int32Rect" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">Тип, в который преобразуется данный <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Объект, созданный в результате преобразования данного объекта <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Создается, если <paramref name="value" /> является <see langword="null" /> или не является <see cref="T:System.Windows.Int32Rect" />, или если <paramref name="destinationType" /> не является типом, действительным для преобразования.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">Разрешает совместное управление конвейером сообщений между Win32 и WPF в сценариях взаимодействия.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">Получает последнее созданное сообщение.</summary>
      <returns vsli:raw="The last message.">Последнее сообщение.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">Возникает, когда поток становится модальным.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">Получает значение, указывающее, является ли поток модальным.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если поток является модальным; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">Возникает, когда модальный поток становится немодальным.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">Вызывается для указания, что модальный поток более не является модальным.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">Вызывается для указания, что поток является модальным.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">Вызывается для указания, что поток бездействует.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">Указывает, что доступно новое сообщение для возможной обработки.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">Сообщение и связанные с ним данные.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">Значение <see langword="true" />, если один из модулей, прослушивающих цикл сообщений, обработал сообщение. Владелец цикла сообщений должен игнорировать это сообщение. <see langword="false" />, если сообщение не обработано. В этом случае владелец конвейера сообщений должен вызвать функцию Win32 TranslateMessage, за которой следует DispatchMessage.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Возникает, когда конвейер сообщений получает сообщение от клавиатуры.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">Возникает, когда поток бездействует.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Возникает, когда конвейер сообщений получает сообщение от клавиатуры.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Предоставляет приемник сообщений от клавиатуры для компонентов, управляющих переходами по табуляции и действиями, выполняемыми с использованием сочетаний клавиш и мнемоник между границами взаимодействия и между HWND. Этот интерфейс реализует управление сообщениями от клавиатуры в сценариях взаимодействия WPF и Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">Возвращает значение, указывающее, имеет ли приемник или один из содержащихся в нем компонентов фокус ввода.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если приемник или один из его дочерних компонентов в данный момент имеет фокус ввода; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Возвращает или задает указатель на интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> контейнера компонента.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Указатель на интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> контейнера.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">Вызывается, когда нажата одна из мнемоник (клавиш доступа) данного приемника.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">Сообщение для мнемоники и связанных данных. Не изменяйте структуру этого сообщения. Она передается по ссылке исключительно по соображениям производительности.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Клавиши CTRL, SHIFT и ALT.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">Регистрирует интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> размещенного компонента.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">Приемник <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> размещенного компонента.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">узел <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> размещенного компонента.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">Устанавливает фокус на первую или последнюю позицию табуляции приемника.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Указывает, на какой позиции табуляции должен быть установлен фокус: на первой или последней.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">
        <see langword="true" />, если фокус установлен, как запрашивалось; <see langword="false" />, если позиции табуляции отсутствуют.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">Обрабатывает ввод от клавиатуры на уровне сообщений KEYDOWN.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Сообщение и связанные с ним данные. Не изменяйте эту структуру. Она передается по ссылке исключительно по соображениям производительности.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Клавиши CTRL, SHIFT и ALT.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если сообщение обработано данной реализацией метода; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">Обрабатывает входные сообщения WM_CHAR, WM_SYSCHAR, WM_DEADCHAR и WM_SYSDEADCHAR перед вызовом <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Сообщение и связанные с ним данные. Не изменяйте эту структуру. Она передается по ссылке исключительно по соображениям производительности.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Клавиши CTRL, SHIFT и ALT.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если сообщение обработано и метод <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> вызывать не следует; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Управляет фокусом ввода в контейнере.  Этот интерфейс реализует управление сообщениями от клавиатуры в сценариях взаимодействия WPF и Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">Вызывается размещаемым компонентом по достижении им последней позиции табуляции, когда больше нет элемента, на который можно перейти.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Указывает, на какой позиции табуляции должен быть установлен фокус: на первой или последней.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">Если этот метод возвращает <see langword="true" />, узел переместил фокус на другой компонент. Если этот метод возвращает <see langword="false" />, фокус все еще на вызывающем компоненте. Компонент должен выполнить "циклический переход", установив фокус на первую позицию табуляции своего содержимого.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">Возвращает приемник ввода от клавиатуры, связанный с этим узелом.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">Интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> текущего узла.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">Отменяет регистрацию дочернего приемника ввода от клавиатуры в составе узла.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">Содержит информацию сообщения из очереди сообщений потока.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">Возвращает или задает дескриптор (HWND) окна, оконная процедура которого получает данное сообщение.</summary>
      <returns vsli:raw="The window handle (HWND).">Дескриптор окна (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">Возвращает или задает значение <paramref name="lParam" />, задающее дополнительную информацию о сообщении. Точный смысл зависит от значения члена <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">Значение <paramref name="lParam" /> сообщения.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">Возвращает или задает идентификатор сообщения.</summary>
      <returns vsli:raw="The message identifier.">Идентификатор сообщения.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">Возвращает или задает координату x позиции курсора на экране в момент, когда было сгенерировано сообщение.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">Координата x позиции курсора.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">Возвращает или задает координату y позиции курсора на экране в момент, когда было сгенерировано сообщение.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">Координата y позиции курсора.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">Возвращает или задает время, когда было передано сообщение.</summary>
      <returns vsli:raw="The time that the message was posted.">Время передачи сообщения.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">Возвращает или задает значение <paramref name="wParam" />, задающее дополнительную информацию о сообщении. Точный смысл зависит от значения сообщения.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">Значение <paramref name="wParam" /> сообщения.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">Представляет метод, обрабатывающий события <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> и <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">Структура с данными сообщения.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Предоставляет поддержку прослушивания событий для классов, ожидающих получения событий через шаблон WeakEvent и <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">Получает события от централизованного диспетчера событий.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">Тип объекта <see cref="T:System.Windows.WeakEventManager" />, который вызывает этот метод.</param>
      <param name="sender" vsli:raw="Object that originated the event.">Объект, в котором произошло событие.</param>
      <param name="e" vsli:raw="Event data.">Данные события.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">
        <see langword="true" />, если прослушиватель обработал событие. При обработке диспетчером <see cref="T:System.Windows.WeakEventManager" /> в WPF регистрация прослушивателя для события, которое он не обрабатывает, считается ошибкой. Вне зависимости от этого, метод должен вернуть <see langword="false" /> в случае получения события, которое он не может распознать или обработать.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">Представляет идентификатор свойства и значение свойства для локально заданного свойства зависимостей.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">Определяет, равны ли два экземпляра <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Объект <see cref="T:System.Windows.LocalValueEntry" />, с которым сравнивается текущий объект <see cref="T:System.Windows.LocalValueEntry" />.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">Данная реализация <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> сравнивает два значения <see cref="P:System.Windows.LocalValueEntry.Property" /> и потенциально сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Value" />. Компонент <see cref="P:System.Windows.LocalValueEntry.Property" /> объекта <see cref="T:System.Windows.LocalValueEntry" /> имеет тип значения, поэтому всегда будет выполняться побитовое сравнение. Для компонента <see cref="P:System.Windows.LocalValueEntry.Value" /> данная реализация задействует побитовое сравнение, если он имеет тип значения. Для локально заданных свойств ссылочного типа поведение перекладывается на механизмы определения равенства данного типа, так как в данном случае используется только внутреннее сравнение двух значений оператором ==. По умолчанию это было бы ссылочное равенство значений и поэтому равенство всего <see cref="T:System.Windows.LocalValueEntry" /> стало бы ссылочным равенством.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">32-разрядное целое значение со знаком.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">Сравнивает указанные экземпляры <see cref="T:System.Windows.LocalValueEntry" />, определяя, одинаковы ли они.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Первый экземпляр для сравнения.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Второй экземпляр для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="obj1" /> <see cref="T:System.Windows.LocalValueEntry" /> равно <paramref name="obj2" /> <see cref="T:System.Windows.LocalValueEntry" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">Сравнивает указанные экземпляры <see cref="T:System.Windows.LocalValueEnumerator" />, определяя, различаются ли они.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Первый экземпляр для сравнения.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Второй экземпляр для сравнения.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">Данная реализация сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Property" /> и <see cref="P:System.Windows.LocalValueEntry.Value" /> — компонентов объекта <see cref="T:System.Windows.LocalValueEntry" />. Компонент <see cref="P:System.Windows.LocalValueEntry.Property" /> объекта <see cref="T:System.Windows.LocalValueEntry" /> всегда имеет тип значения, поэтому всегда будет выполняться побитовое сравнение. Для компонента <see cref="P:System.Windows.LocalValueEntry.Value" /> данная реализация задействует побитовое сравнение, если он имеет тип значения.
Для локально заданных свойств ссылочного типа поведение перекладывается на механизмы определения равенства данного типа, так как в данном случае используется только внутреннее сравнение двух значений оператором <see langword="==" />. По умолчанию это ссылочное равенство значений.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">Получает идентификатор для локально заданного свойства зависимостей, представленного данной записью.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">Идентификатор для локально заданного свойства зависимостей.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">Возвращает значение локально заданного свойства зависимостей.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">Значение локально заданного свойства зависимостей в виде объекта.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Обеспечивает поддержку перечисления для локальных значений всех свойств зависимостей, которые существуют в <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">Возвращает число элементов, представленных в коллекции.</summary>
      <returns vsli:raw="The number of items in the collection.">Количество элементов в коллекции.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Получает текущий элемент в коллекции.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">Получает текущую <see cref="T:System.Windows.LocalValueEntry" /> в коллекции.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Определяет, эквивалентен ли указанный <see cref="T:System.Windows.LocalValueEnumerator" /> данному <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Объект <see cref="T:System.Windows.LocalValueEnumerator" />, с которым сравнивается текущий объект <see cref="T:System.Windows.LocalValueEnumerator" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.LocalValueEnumerator" /> равен текущему объекту <see cref="T:System.Windows.LocalValueEnumerator" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Возвращает хэш-код для текущего объекта <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">Хэш-код 32-разрядного целого числа.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Перемещает перечислитель к следующему элементу коллекции.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">Сравнивает два заданных объекта <see cref="T:System.Windows.LocalValueEnumerator" /> на равенство.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Первый из сравниваемых объектов.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Второй из сравниваемых объектов.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="obj1" /> <see cref="T:System.Windows.LocalValueEnumerator" /> равно <paramref name="obj2" /> <see cref="T:System.Windows.LocalValueEnumerator" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">Сравнивает два заданных объекта <see cref="T:System.Windows.LocalValueEnumerator" />, чтобы определить, являются ли они неравными.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Первый из сравниваемых объектов.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Второй из сравниваемых объектов.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если эти экземпляры не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">Описание этих членов см. в описании свойства <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current element in the collection.">Текущий элемент в коллекции.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">Определяет, как должно быть сериализовано свойство.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">Свойство должно быть сериализовано как атрибут.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">Задает для свойства флаги сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">Определяет, как должно быть сериализовано данное свойство.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> не является допустимым значением <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">Получает параметры <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />, заданные для этого атрибута.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">Параметр сериализации как значение перечисления.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">Абстрактный класс, внутренне используемый компилятором WPF XAML для поддержки использования внутренних типов.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">При переопределении в производном (созданном) классе присоединяет делегат обработчика событий к внутреннему событию.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">Информация о событии (информация об отражении CLR).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Целевой объект, к которому присоединен обработчик.</param>
      <param name="handler" vsli:raw="The event handler.">Обработчик событий.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">При переопределении в производном (созданном) классе создает делегат события для метода-обработчика, не являющегося открытым.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">Делегат класса <see cref="T:System.Type" />.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Целевой объект, к которому присоединен обработчик.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">Имя обработчика реализации.</param>
      <returns vsli:raw="The delegate reference.">Ссылка делегата.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">При переопределении в производном (созданном) классе создает экземпляр внутреннего типа.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">Создаваемый тип <see cref="T:System.Type" />.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <returns vsli:raw="The created instance.">Созданный экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">При переопределении в производном (созданном) классе возвращает значение внутреннего свойства целевого объекта.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">Информация о получаемом свойстве.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Объект, обладающий желаемым значением свойства.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <returns vsli:raw="The value of the property.">Значение свойства.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">При переопределении в производном (созданном) классе задает значение внутреннего свойства целевого объекта.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">Информация задаваемого свойства.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Объект, обладающий желаемым значением свойства.</param>
      <param name="value" vsli:raw="The value to set.">Задаваемое значение.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">Предоставляет механизм, с помощью которого типы могут объявлять, что они могут получать выражение (или другой класс) из расширения разметки, где выводом является другой тип свойства, а не целевое свойство. Не следует использовать для реализаций .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">Предоставляет обработку расширений разметки, которые обеспечивают значения свойств. Не следует использовать для реализаций .NET Framework 4; см. <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property" vsli:raw="The name of the target property.">Имя целевого свойства.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">Экземпляр расширения разметки входящих данных.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">Может предоставлять дополнительные службы, которые должны выполняться во время обработки данных расширения разметки для значения свойства.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">Абстрактный класс, представляющий объект, который может использоваться для перемещения по дереву объектов.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">При переопределении в производном классе присваивает корневое содержимое для классов <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" />, для которого следует присвоить корневое содержимое.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">При переопределении в производном классе возвращает атрибуты, связанные с данным <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The collection of attributes.">Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">При переопределении в производном классе возвращает объект, представляющий данный <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The instance of the object.">Объект</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">При переопределении в производном классе возвращает тип экземпляра <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The type of the object.">Тип объекта.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">При переопределении в производном классе возвращает свойства данного экземпляра <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />, которые должны быть записаны в XAML.</summary>
      <returns vsli:raw="The properties.">Свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">Абстрактный класс, предоставляющий описание свойств для использования при написании разметки, инкапсулирующей доступ к свойствам и их значениям.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">При переопределении в производном классе возвращает атрибуты, связанные с данным <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The collection of attributes.">Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">В случае переопределения в производном классе получает идентификатор <see cref="T:System.Windows.DependencyProperty" /> для свойства разметки, если это свойство реализуется как свойство зависимостей.</summary>
      <returns vsli:raw="The dependency property identifier.">Идентификатор для свойства зависимостей.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">При переопределении в производном классе определяет, является ли данное <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> вложенным <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если свойство является вложенным <see cref="T:System.Windows.DependencyProperty" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">При переопределении в производном классе определяет, является ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> составным.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если данное свойство является составным; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> аргумент конструктора.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данное свойство представляет аргумент конструктора; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> непосредственное содержимое коллекции.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если свойство представляет непосредственное содержимое; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ключ, используемый объектом <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> для хранения элемента в словаре.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если это свойство представляет ключ; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">При переопределении в производном классе определяет, представляет ли это свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> текст, передаваемый преобразователю типов для создания экземпляра свойства, или должен использоваться конструктор.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если это свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет строку; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">При переопределении в производном классе возвращает элементы, составляющие значение данного свойства.</summary>
      <returns vsli:raw="The items that make up the value of this property.">Элементы, составляющие значение данного свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">При переопределении в производном классе возвращает имя, используемое для диагностики ошибок и уведомления о них.</summary>
      <returns vsli:raw="The identifier property name.">Имя свойства идентификатора.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">При переопределении в производном классе возвращает<see cref="T:System.ComponentModel.PropertyDescriptor" /> для свойства разметки.</summary>
      <returns vsli:raw="The property descriptor.">Дескриптор свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">При переопределении в производном классе получает CLR-тип свойства.</summary>
      <returns vsli:raw="The CLR type.">Тип CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">При переопределении в производном классе возвращает строковое значение данного <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The string value.">Строковое значение.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">При переопределении в производном классе получает набор типов, на которые будет ссылаться данный объект <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> при сериализации его значения в виде строки.</summary>
      <returns vsli:raw="The set of types.">Набор типов.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">При переопределении в производном классе получает текущее значение данного <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The current value.">Текущее значение.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">Предоставляет реализацию для интерфейса <see cref="T:System.IServiceProvider" /> с методами, позволяющими добавлять службы.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">Добавляет службу в список.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">Тип новой службы.</param>
      <param name="service" vsli:raw="The service implementation class.">Класс реализации службы.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="serviceType" /> или <paramref name="service" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">Попытка добавить службу, которая уже существует в словаре.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">Возвращает объект обслуживания указанного типа.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">Тип объекта службы для получения.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Реализация службы для типа <paramref name="serviceType" />. Может принимать значение <see langword="null" />, если службы для типа <paramref name="serviceType" /> не существует.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Media.Matrix" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">Определяет, возможно ли преобразование из данного типа <see cref="T:System.String" /> в экземпляр класса <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Контекстные сведения, используемые при преобразовании.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение можно преобразовать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, возможно ли преобразование экземпляра <see cref="T:System.Windows.Media.Matrix" /> в объект типа <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Экземпляр <see cref="T:System.Windows.Media.Matrix" />, возможность преобразования которого необходимо оценить.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Контекстные сведения, используемые при преобразовании.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">Происходит при неравенстве значения параметра <paramref name="value" /> объекту <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Значение типа <see cref="T:System.String" />, преобразуемое в значение типа <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Контекстные сведения, используемые при преобразовании.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.Windows.Media.Matrix" /> на основе предоставленного параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.Windows.Media.Matrix" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Экземпляр <see cref="T:System.Windows.Media.Matrix" />, возможность преобразования которого необходимо оценить.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Контекстные сведения, используемые при преобразовании.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">Представление <see cref="T:System.String" /> объекта <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">Позволяет приложениям WPF отключать определение точек на дюйм (dpi) для всех элементов пользовательского интерфейса.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">Инициализирует новый экземпляр <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">Представляет матрицу аффинного преобразования 3 x 3, используемую для преобразований в двумерном пространстве.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M11" /> структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M12" /> структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M21" /> структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M22" /> структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">Новый коэффициент <see cref="P:System.Windows.Media.Matrix.OffsetX" /> структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">Новый коэффициент <see cref="P:System.Windows.Media.Matrix.OffsetY" /> структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет заданную структуру <see cref="T:System.Windows.Media.Matrix" /> в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Структура <see cref="T:System.Windows.Media.Matrix" />, которую необходимо добавить в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает определитель этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Определитель этой структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Определяет, является ли указанный <see cref="T:System.Object" /> структурой <see cref="T:System.Windows.Media.Matrix" />, идентичной данной структуре <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="o" /> является структурой <see cref="T:System.Windows.Media.Matrix" />, идентичной структуре <see cref="T:System.Windows.Media.Matrix" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">Определяет, идентична ли указанная структура <see cref="T:System.Windows.Media.Matrix" /> данному экземпляру.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">Экземпляр объекта <see cref="T:System.Windows.Media.Matrix" /> для сравнения с данным экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если экземпляры равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Определяет, совпадают ли две указанные структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Первая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Вторая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="matrix1" /> и <paramref name="matrix2" /> идентичны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Возвращает хэш-код данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The hash code for this instance.">Хэш-код данного экземпляра.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">Получает значение, указывающее, является ли эта структура <see cref="T:System.Windows.Media.Matrix" /> обратимой.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Windows.Media.Matrix" /> обратима; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Получает единичную <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="An identity matrix.">Единичная матрица.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Преобразует данную структуру <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">Структура <see cref="T:System.Windows.Media.Matrix" /> не является обратимой.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">Получает значение, указывающее, является ли эта структура <see cref="T:System.Windows.Media.Matrix" /> единичной матрицей.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, если структура <see cref="T:System.Windows.Media.Matrix" /> является единичной матрицей; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает или задает значение в первой строке и первом столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">Значение первой строки и первого столбца этой матрицы <see cref="T:System.Windows.Media.Matrix" />. Значение по умолчанию — 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает или задает значение в первой строке и втором столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Значение первой строки и второго столбца этой матрицы <see cref="T:System.Windows.Media.Matrix" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает или задает значение во второй строке и первом столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Значение второй строки и первого столбца этой матрицы <see cref="T:System.Windows.Media.Matrix" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает или задает значение во второй строке и втором столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">Значение во второй строке и втором столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />. Значение по умолчанию — 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Умножает структуру <see cref="T:System.Windows.Media.Matrix" /> на другую структуру <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Первая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Вторая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Результат умножения <paramref name="trans1" /> на <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает или задает значение в третьей строке и первом столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Значение в третьей строке и первом столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Получает или задает значение в третьей строке и втором столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Значение в третьей строке и втором столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Определяет, совпадают ли две указанные структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Первая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Вторая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="matrix1" /> и <paramref name="matrix2" /> идентичны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">Проверяет, являются ли две заданные структуры <see cref="T:System.Windows.Media.Matrix" /> не идентичными.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Первая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Вторая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="matrix1" /> и <paramref name="matrix2" /> не идентичны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Умножает структуру <see cref="T:System.Windows.Media.Matrix" /> на другую структуру <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Первая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Вторая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Результат умножения <paramref name="trans1" /> на <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Преобразует представление в виде <see cref="T:System.String" /> матрицы в эквивалентную структуру <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">Представление матрицы в виде <see cref="T:System.String" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Эквивалентная структура <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет заданную структуру <see cref="T:System.Windows.Media.Matrix" /> в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Структура <see cref="T:System.Windows.Media.Matrix" />, которую необходимо добавить в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Применяет поворот на указанный угол относительно начала координат к этой структуре <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation.">Угол поворота.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">Поворачивает эту матрицу относительно заданной точки.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">Угол поворота данной матрицы в градусах.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">Координату х точки, вокруг которой выполняется поворот данной матрицы.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">Координату y точки, вокруг которой выполняется поворот данной матрицы.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет поворот на заданный угол относительно заданной точки в начало этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">Угол поворота в градусах.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">Координата x центра поворота.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">Координата y центра поворота.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет поворот на заданный угол в начало этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">Добавляемый в начало угол поворота.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет заданный вектор масштабирования в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси X.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">Масштабирует эту структуру <see cref="T:System.Windows.Media.Matrix" /> на заданную величину относительно заданной точки.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси X.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси Y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">Координата x центральной точки, от которой производится масштабирование.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">Координата y центральной точки, от которой производится масштабирование.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Добавляет заданное масштабирование относительно заданной точки в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">Коэффициент масштабирования по оси X.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Коэффициент масштабирования по оси Y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">Координату х точки, от которой выполняется масштабирование.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">Координату y точки, от которой выполняется масштабирование.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет заданный вектор масштабирования в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси X.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">Преобразует эту структуру <see cref="T:System.Windows.Media.Matrix" /> в единичную матрицу.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Прибавляет отклонение на заданное значение по осям X и Y в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Угол по оси X, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Угол по оси x, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет отклонение на заданное значение по осям X и Y в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Угол по оси X, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Угол по оси x, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Форматирует значение текущего экземпляра с использованием заданного формата.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Используемый формат.

или -
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Поставщик, используемый для форматирования значения.

или -
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Значение текущего экземпляра в указанном формате.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Создает представление <see cref="T:System.String" /> для данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Объект <see cref="T:System.String" />, содержащий значения <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> и <see cref="P:System.Windows.Media.Matrix.OffsetY" /> данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">Создает представление в виде <see cref="T:System.String" /> данной структуры <see cref="T:System.Windows.Media.Matrix" /> с использованием сведений о форматировании, связанных с языком и региональными параметрами.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Объект <see cref="T:System.String" />, содержащий значения <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> и <see cref="P:System.Windows.Media.Matrix.OffsetY" /> данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">Преобразует заданную точку с использованием <see cref="T:System.Windows.Media.Matrix" /> и возвращает результат.</summary>
      <param name="point" vsli:raw="The point to transform.">Точка для преобразования.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Результат преобразования объекта <paramref name="point" /> посредством данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует заданные точки с использованием заданной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">точки для преобразования. Исходные точки в массиве заменяются их преобразованными значениями.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует заданный вектор с использованием данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Преобразуемый вектор.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Результат преобразования объекта <paramref name="vector" /> посредством данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует заданные векторы с использованием данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">Преобразуемые векторы. Исходные векторы в массиве заменяются их преобразованными значениями.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет перенос на заданное смещение в конец этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси X.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Добавляет перенос на заданное смещение в начало в этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси X.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси Y.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует экземпляры других типов в <see cref="T:System.Windows.Media.Matrix" /> и из него.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">Инициализирует новый экземпляр <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Определяет, может ли объект быть преобразован из определенного типа в экземпляр <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Контекстная информация типа.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Тип источника, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если тип можно преобразовать в <see cref="T:System.Windows.Media.Matrix" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">Определяет, может ли экземпляр <see cref="T:System.Windows.Media.Matrix" /> быть преобразован в другой тип.</summary>
      <param name="context" vsli:raw="The context information of a type.">Контекстная информация типа.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">Требуемый тип, для которого <see cref="T:System.Windows.Media.Matrix" /> проверяет возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Windows.Media.Matrix" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Пытается преобразовать заданный объект в <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Контекстная информация типа.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Сведения <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.</param>
      <param name="value" vsli:raw="The object being converted.">Преобразуемый объект.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Объект <see cref="T:System.Windows.Media.Matrix" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Заданный объект имеет значение null или является типом, преобразование которого в <see cref="T:System.Windows.Media.Matrix" /> невозможно.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">Пытается преобразовать <see cref="T:System.Windows.Media.Matrix" /> в заданный тип.</summary>
      <param name="context" vsli:raw="The context information of a type.">Контекстная информация типа.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Сведения <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">Преобразуемый объект <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">Тип, в который преобразуется данный <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Объект, созданный в результате преобразования данного объекта <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">
        <paramref name="value" /> имеет значение null, или не является <see cref="T:System.Windows.Media.Matrix" />, или <paramref name="destinationType" /> не является допустимым типом преобразования.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">Определяет методы форматирования, поддерживаемые классом <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">Указывает, что объект <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> размещает текст с использованием метрик шрифтов, совместимых с GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">Указывает, что объект <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> размещает текст с использованием наиболее оптимальных метрик шрифтов.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">Реализует базовую поддержку WPF для методов <see cref="T:System.Windows.Markup.INameScope" />, которые сохраняют или извлекают сопоставления "имя-объект" в определенную область имен XAML. Добавляет поддержку присоединенных свойств для упрощения динамического получения или задания имен области имен XAML на уровне элемента.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">Добавляет элемент в коллекцию.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">Объект <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />), представляющий сопоставление имен для добавления в область видимости имен XAML.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Один или оба компонента <paramref name="item" /> имеют значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">Добавляет элемент в коллекцию.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">Строковый ключ, представляющий собой имя в добавляемом сопоставлении области видимости имен XAML.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">Значение-объект, представляющее собой ссылку на объект в добавляемом сопоставлении области видимости имен XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="key" /> или <paramref name="value" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">Определяет, содержит ли коллекция указанный элемент.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Искомый элемент коллекции, заданный в виде <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Значение <see langword="true" />, если указанный параметр <see cref="T:System.Collections.Generic.KeyValuePair`2" /> обозначает имя существующего сопоставления в данной области <see cref="T:System.Windows.NameScope" />. Значение <see langword="false" />, если заданного ключа <see cref="T:System.Collections.Generic.KeyValuePair`2" /> не существует в текущей области <see cref="T:System.Windows.NameScope" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Возвращает значение, указывающее, существует ли заданное имя в данном объекте <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key" vsli:raw="The string key to find.">Искомый строковый ключ.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Значение <see langword="true" />, если указанный параметр <paramref name="key" /> обозначает имя существующего сопоставления в данной области <see cref="T:System.Windows.NameScope" />. Значение <see langword="false" />, если заданного ключа <paramref name="key" /> не существует в текущей области <see cref="T:System.Windows.NameScope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">Копирует элементы коллекции в массив начиная с определенного индекса в массиве.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">Одномерный массив, в который копируются элементы коллекции. Его индексация должна начинаться с нуля.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Возвращает число элементов в коллекции сопоставленных имен в данном объекте <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="The number of items in the collection.">Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">Возвращает соответствующий объект в области имен XAML, поддерживаемой данным <see cref="T:System.Windows.NameScope" />, на основании заданной строки имени.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">Часть имени существующего сопоставления для извлекаемой части объекта.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">Запрошенный объект, который сопоставляется с <paramref name="name" />. Может возвращать <see langword="null" />, если параметр <paramref name="name" /> был предоставлен в виде <see langword="null" /> или пустой строки, или если соответствующий объект найден.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Предоставляет метод доступа get присоединенного свойства для присоединенного свойства <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">Объект, из которого возвращается область имен XAML.</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">Область имен XAML как экземпляр <see cref="T:System.Windows.Markup.INameScope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">Получает или задает элемент с заданным ключом.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">Строковое имя для сопоставления имени XAML, которое требуется получить или задать.</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">Значение объекта, сопоставленное имени XAML, переданному в виде параметра <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" /> предоставляется в виде <see langword="null" />.

или -
Для операции установки <paramref name="value" /> задается как <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Получает коллекцию ключей в словаре <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Коллекция ключей в словаре <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">Получает или задает динамически присоединенные экземпляры <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Идентифицирует присоединенное свойство <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">Регистрирует новую пару "имя-объект" в текущем пространстве имен XAML.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">Имя, используемое для сопоставления указанного объекта.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">Объект для сопоставления с заданным именем.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="name" /> или <paramref name="scopedElement" /> был предоставлен в виде <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">Параметр <paramref name="name" /> был предоставлен в виде пустой строки.

или -
Предоставленный параметр <paramref name="name" /> был отклонен средством синтаксического анализа, так как он содержит символы, недопустимые для имени XAML.
или -
Предоставленный параметр <paramref name="name" /> приведет к регистрации дубликата имени.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">Удаляет из коллекции определенный объект.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Объект для удаления из коллекции, заданный в виде <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">Значение <see langword="true" />, если элемент был успешно удален из коллекции; в противном случае — значение <see langword="false" />. Также возвращает значение <see langword="false" />, если элемент не был найден в коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">Удаляет из коллекции сопоставление для заданного имени.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">Строковый ключ, представляющий собой имя в удаляемом сопоставлении области видимости имен XAML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">Значение <see langword="true" />, если элемент был успешно удален из коллекции; в противном случае — значение <see langword="false" />. Также возвращает значение <see langword="false" />, если элемент не был найден в коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Предоставляет метод доступа set присоединенного свойства для присоединенного свойства <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">Объект, для которого необходимо изменить область имен XAML.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">Новая область имен XAML, полученная с помощью приведения к интерфейсу.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="dependencyObject" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Возвращает перечислитель, который осуществляет итерацию по коллекции.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Перечислитель, который осуществляет перебор коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Возвращает перечислитель, который осуществляет итерацию по коллекции.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Перечислитель, который осуществляет перебор коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Получает значение, связанное с заданным ключом.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Ключ значения, которое необходимо получить.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">При возвращении метода содержит значение, связанное с заданным ключом, если ключ найден; в противном случае содержит пустой объект. Этот параметр передается неинициализированным.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Windows.NameScope" /> содержит сопоставление для имени, переданного в параметре <paramref name="key" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">Удаляет сопоставление имени и объекта из области имен XAML.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">Имя удаляемого сопоставления.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">Параметр <paramref name="name" /> был предоставлен в виде пустой строки.

или -
Предоставленный <paramref name="name" /> не зарегистрирован.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Получает коллекцию значений в словаре <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Коллекция значений в словаре <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">Представляет пару координат X и Y в двухмерном пространстве.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">Создает новую структуру <see cref="T:System.Windows.Point" />, содержащую заданные координаты.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Значение координаты X новой структуры <see cref="T:System.Windows.Point" />.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Значение координаты Y новой структуры <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Добавляет <see cref="T:System.Windows.Vector" /> в <see cref="T:System.Windows.Point" /> и возвращает результат в виде структуры <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">Добавляемая структура <see cref="T:System.Windows.Point" />.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">Добавляемая структура <see cref="T:System.Windows.Vector" />.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Возвращает сумму объектов <paramref name="point" /> и <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Определяет, является ли указанный <see cref="T:System.Object" /> объектом <see cref="T:System.Windows.Point" /> и содержит ли он те же координаты, что и данный <see cref="T:System.Windows.Point" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="o" /> является <see cref="T:System.Windows.Point" /> и содержит те же значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />, что и данный <see cref="T:System.Windows.Point" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Сравнивает две структуры <see cref="T:System.Windows.Point" /> на равенство.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">Точка для сравнения с данным экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если обе структуры <see cref="T:System.Windows.Point" /> содержат одинаковые значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Сравнивает две структуры <see cref="T:System.Windows.Point" /> на равенство.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Первая точка для сравнения.</param>
      <param name="point2" vsli:raw="The second point to compare.">Вторая точка для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="point1" /> и <paramref name="point2" /> содержат одинаковые значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Хэш-код для данной структуры <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Преобразует заданную структуру <see cref="T:System.Windows.Point" /> посредством указанной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="point" vsli:raw="The point to transform.">Точка для преобразования.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Матрица преобразования.</param>
      <returns vsli:raw="The transformed point.">Преобразованная точка.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">Смещает координаты точки <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> на указанные величины.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">Величина смещения координаты <see cref="P:System.Windows.Point.X" /> точки.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">Величина смещения координаты <see cref="P:System.Windows.Point.Y" /> точки.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">Перемещает заданную точку <see cref="T:System.Windows.Point" /> на заданный вектор <see cref="T:System.Windows.Vector" /> и возвращает результат.</summary>
      <param name="point" vsli:raw="The point to translate.">Точка, которую необходимо переместить.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">Величина, на которую перемещается <paramref name="point" />.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">Результат перемещения заданной точки на заданный вектор.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Сравнивает две структуры <see cref="T:System.Windows.Point" /> на равенство.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Первая сравниваемая структура <see cref="T:System.Windows.Point" />.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Вторая сравниваемая структура <see cref="T:System.Windows.Point" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если обе координаты <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> точек <paramref name="point1" /> и <paramref name="point2" /> равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Создает структуру <see cref="T:System.Windows.Size" /> со значением <see cref="P:System.Windows.Size.Width" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Size.Height" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</summary>
      <param name="point" vsli:raw="The point to convert.">Преобразуемая точка.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Структура <see cref="T:System.Windows.Size" /> со значением <see cref="P:System.Windows.Size.Width" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Size.Height" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Создает структуру <see cref="T:System.Windows.Vector" /> со значением <see cref="P:System.Windows.Vector.X" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Vector.Y" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</summary>
      <param name="point" vsli:raw="The point to convert.">Преобразуемая точка.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Вектор со значением <see cref="P:System.Windows.Vector.X" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Vector.Y" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">Сравнивает две структуры <see cref="T:System.Windows.Point" />, чтобы выявить различие.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Первая точка для сравнения.</param>
      <param name="point2" vsli:raw="The second point to compare.">Вторая точка для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">Значение <see langword="true" />, если точки <paramref name="point1" /> и <paramref name="point2" /> имеют разные координаты <see cref="P:System.Windows.Point.X" /> или <see cref="P:System.Windows.Point.Y" />; <see langword="false" />, если точки <paramref name="point1" /> и <paramref name="point2" /> имеют одинаковые координаты <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует заданный объект <see cref="T:System.Windows.Point" /> с помощью заданной матрицы <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="point" vsli:raw="The point to transform.">Точка для преобразования.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Матрица преобразования.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">Результат преобразования заданной точки с помощью заданной матрицы.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Вычитает заданную точку <see cref="T:System.Windows.Point" /> из другой заданной точки <see cref="T:System.Windows.Point" /> и возвращает разность в виде <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Точка, из которой вычитается <paramref name="point2" />.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Точка для вычитания из <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Разность между <paramref name="point1" /> и <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Вычитает заданный вектор <see cref="T:System.Windows.Vector" /> из заданной точки <see cref="T:System.Windows.Point" /> и возвращает результирующую точку <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Точка, из которой вычитается <paramref name="vector" />.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Вектор, который вычитается из <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Разность между <paramref name="point" /> и <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Создает <see cref="T:System.Windows.Point" /> из заданного <see cref="T:System.String" />.</summary>
      <param name="source" vsli:raw="A string representation of a point.">Строковое представление точки.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Эквивалентная структура <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" /> не состоит из двух разделенных запятой или пробелом значений типа double.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" /> не содержит два числа.
-или-
<paramref name="source" /> содержит слишком много разделителей.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Вычитает заданную точку <see cref="T:System.Windows.Point" /> из другой заданной точки <see cref="T:System.Windows.Point" /> и возвращает разность в виде <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Точка, из которой вычитается <paramref name="point2" />.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Точка для вычитания из <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Разность между <paramref name="point1" /> и <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Вычитает заданный вектор <see cref="T:System.Windows.Vector" /> из заданной точки <see cref="T:System.Windows.Point" /> и возвращает результирующую точку <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Точка, из которой вычитается <paramref name="vector" />.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">
        <paramref name="vector" />, вычитаемый из <paramref name="point" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Разность между <paramref name="point" /> и <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода. Описание этого члена см. в разделе <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Строка, задающая используемый формат.

или -
Значение <see langword="null" /> для использования формата по умолчанию, определенного для типа реализации <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">Объект <see langword="IFormatProvider" />, используемый для форматирования значения.

или -
Значение <see langword="null" /> для получения сведений о форматировании чисел на основе текущего значения параметра языкового стандарта операционной системы.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Строка, содержащая значение текущего экземпляра в заданном формате.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Создает представление <see cref="T:System.String" /> данного объекта <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Строка <see cref="T:System.String" />, содержащая значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> данной структуры <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Создает представление <see cref="T:System.String" /> данного объекта <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Строка <see cref="T:System.String" />, содержащая значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> данной структуры <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Получает или задает значение координаты <see cref="P:System.Windows.Point.X" /> этой структуры <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Значение координаты <see cref="P:System.Windows.Point.X" /> этой структуры <see cref="T:System.Windows.Point" />.  Значение по умолчанию — <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Получает или задает значение координаты <see cref="P:System.Windows.Point.Y" /> данной структуры <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Значение координаты <see cref="P:System.Windows.Point.Y" /> этой структуры <see cref="T:System.Windows.Point" />.  Значение по умолчанию — <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Преобразует экземпляры других типов в <see cref="T:System.Windows.Point" /> и из него.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Определяет, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Тип источника, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если тип можно преобразовать в <see cref="T:System.Windows.Point" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">Определяет, может ли экземпляр <see cref="T:System.Windows.Point" /> быть преобразован в другой тип.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">Требуемый тип, для которого <see cref="T:System.Windows.Point" /> проверяет возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Windows.Point" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Пытается преобразовать заданный объект в <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value" vsli:raw="The object being converted.">Преобразуемый объект.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Объект <see cref="T:System.Windows.Point" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Происходит, если заданный объект имеет значение NULL или является типом, который нельзя преобразовать в <see cref="T:System.Windows.Point" />.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">Пытается преобразовать <see cref="T:System.Windows.Point" /> в заданный тип.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">Преобразуемый объект <see cref="T:System.Windows.Point" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">Тип, в который преобразуется данный <see cref="T:System.Windows.Point" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Объект, созданный в результате преобразования данного объекта <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Происходит, если <paramref name="value" /> равно <see langword="null" /> или не принадлежит к типу <see cref="T:System.Windows.Point" />, или если <paramref name="destinationType" /> не является одним из типов, допустимых для преобразования.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">Представляет обратный вызов, который вызывается при изменении действующего значения свойства зависимостей.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">Объект <see cref="T:System.Windows.DependencyObject" />, значение свойства которого было изменено.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">Данные события, выдаваемые любым событием, которое отслеживает изменения действующего значения данного свойства.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">Определяет некоторые аспекты поведения свойства зависимостей применительно к определенному типу, включая условия, в которых оно было зарегистрировано.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" /> с указанным значением по умолчанию для свойства зависимостей, к которому будут применены метаданные.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">Как правило, значение по умолчанию, указанное для свойства зависимостей, представляет собой значение определенного типа.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> не может иметь значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" /> с указанным значением по умолчанию и ссылкой на реализацию <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Как правило, значение по умолчанию свойства зависимостей представляет собой значение определенного типа.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом изменении значения свойства.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> не может иметь значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">Инициализирует новый экземпляр <see cref="T:System.Windows.PropertyMetadata" /> класса с заданными значением по умолчанию и ответами.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Как правило, значение по умолчанию свойства зависимостей представляет собой значение определенного типа.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом изменении значения свойства.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом вызове <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> против данного свойства.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> не может иметь значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" /> с указанной ссылкой реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом изменении значения свойства.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">Возвращает или задает ссылку на реализацию <see cref="T:System.Windows.CoerceValueCallback" /> указанную в этих метаданных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">Ссылка реализации <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Невозможно задать свойство метаданных после того, как оно применено к ориентации свойства зависимостей.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">Возвращает или задает значение по умолчанию свойства зависимостей.</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">Значение свойства по умолчанию. Значением по умолчанию для <see cref="T:System.Windows.PropertyMetadata" /> экземпляра, созданного с помощью конструктора без параметров <see cref="F:System.Windows.DependencyProperty.UnsetValue" />, будет.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">Невозможно задать значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> после создания.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Невозможно задать свойство метаданных после того, как оно применено к ориентации свойства зависимостей.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">Возвращает значение, определяющее, были ли применены метаданные к свойству, что привело к запрету изменений экземпляра метаданных.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если экземпляр метаданных не подлежит изменениям; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">Совмещает эти метаданные с основными.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">Основные метаданные, с которыми следует совместить значения экземпляра.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">Свойство зависимостей, к которому применяются данные метаданные.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">Вызывается после применения данных метаданных к свойству, указывая на запечатывание метаданных.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">Свойство зависимостей, к которому были применены эти метаданные.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">Тип, связанный с этими метаданными, если это метаданные зависящие от типа. Если это метаданные по умолчанию, значением будет нулевая ссылка.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">Возвращает или задает ссылку на реализацию <see cref="T:System.Windows.PropertyChangedCallback" /> указанную в этих метаданных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Ссылка реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Невозможно задать свойство метаданных после того, как оно применено к ориентации свойства зависимостей.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">Описывает ширину, высоту и расположение прямоугольника.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанные координаты по оси Х и Y, а также ширину и высоту.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">Координата по оси X верхнего левого угла прямоугольника.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">Координата по оси Y верхнего левого угла прямоугольника.</param>
      <param name="width" vsli:raw="The width of the rectangle.">Ширина прямоугольника.</param>
      <param name="height" vsli:raw="The height of the rectangle.">Высота прямоугольника.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> является отрицательным значением.

или -
<paramref name="height" /> является отрицательным значением.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая достаточна велика, чтобы включать две указанных точки.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">Первая точка, которую должен включать новый прямоугольник.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">Вторая точка, которую должен включать новый прямоугольник.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанное расположение верхнего левого угла и указанные ширину и высоту.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">Точка, которая определяет расположение верхнего левого угла прямоугольника.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая достаточно велика, чтобы включать указанную точку и сумму указанной точки и указанного вектора.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">Первая точка, которую должен включать прямоугольник.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">Степень смещения указанной точки. Полученный прямоугольник будет достаточно большим, чтобы включать обе точки.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанный размер и расположена в точке с координатами (0,0).</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">Возвращает координату по оси Y нижней стороны прямоугольника.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">Координата по оси Y нижней стороны прямоугольника. Если прямоугольник пуст, значение — <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">Возвращает расположение левого нижнего угла прямоугольника.</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">Расположение левого нижнего угла прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">Возвращает расположение правого нижнего угла прямоугольника.</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">Расположение правого нижнего угла прямоугольника.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">Показывает, включает ли прямоугольник указанную координату по оси X и Y.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">Координата по оси X проверяемой точки.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">Координата по оси Y проверяемой точки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если прямоугольник включает точку с координатами <paramref name="x" /> и <paramref name="y" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">Определяет, включает ли прямоугольник указанную точку.</summary>
      <param name="point" vsli:raw="The point to check.">Проверяемая точка.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если прямоугольник содержит указанную точку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">Определяет, включает ли прямоугольник указанный прямоугольник.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Проверяемый прямоугольник.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если прямоугольник полностью включает <paramref name="rect" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">Возвращает специальное значение, которое представляет прямоугольник без расположения или области.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">Пустой прямоугольник, который имеет значения свойств <see cref="P:System.Windows.Rect.X" /> и <see cref="P:System.Windows.Rect.Y" /> равными <see cref="F:System.Double.PositiveInfinity" /> и значения свойств <see cref="P:System.Windows.Rect.Width" /> и <see cref="P:System.Windows.Rect.Height" /> равными <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">Показывает, равен ли указанный объект текущему прямоугольнику.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Объект, который требуется сравнить с текущим прямоугольником.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="o" /> является <see cref="T:System.Windows.Rect" /> и имеет те же значения <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />, что и текущий прямоугольник. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">Показывает, равен ли указанный прямоугольник текущему прямоугольнику.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Прямоугольник, который требуется сравнить с текущим прямоугольником.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанный прямоугольник имеет те же значения <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />, что и текущий прямоугольник. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">Показывает, являются ли указанные прямоугольники равными.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если прямоугольники имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">Создает хэш-код для прямоугольника.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">Хэш-код для текущей структуры <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Возвращает или задает высоту прямоугольника.</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">Положительное число, которое представляет высоту прямоугольника. Значение по умолчанию — 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">Свойству <see cref="P:System.Windows.Rect.Height" /> присваивается отрицательное значение.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Для <see cref="P:System.Windows.Rect.Height" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">Увеличивает или уменьшает прямоугольник по всем направлениям с использованием указанных значений ширины и высоты.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Степень увеличения или уменьшения левой и правой сторон прямоугольника.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Степень увеличения или уменьшения верхней и нижней сторон прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">Создает прямоугольник, который получается в результате увеличения или уменьшения данного прямоугольника с указанным изменением ширины и высоты по всем направлениям.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Структура <see cref="T:System.Windows.Rect" />, которую необходимо изменить.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Степень увеличения или уменьшения левой и правой сторон прямоугольника.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Степень увеличения или уменьшения верхней и нижней сторон прямоугольника.</param>
      <returns vsli:raw="The resulting rectangle.">Полученный прямоугольник.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> является прямоугольником <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Возвращает прямоугольник, который получается в результате увеличения данного прямоугольника с указанным коэффициентом <see cref="T:System.Windows.Size" /> по всем направлениям.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Структура <see cref="T:System.Windows.Rect" />, которую необходимо изменить.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Указывает степень расширения прямоугольника. Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Width" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" />. Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Height" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" />.</param>
      <returns vsli:raw="The resulting rectangle.">Полученный прямоугольник.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> является прямоугольником <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Расширяет прямоугольник во всех направлениях с использованием указанного значения <see cref="T:System.Windows.Size" />.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Указывает степень расширения прямоугольника. Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Width" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" />. Свойство <see cref="T:System.Windows.Size" /> структуры <see cref="P:System.Windows.Size.Height" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">Находит пересечение текущего прямоугольника и указанного прямоугольника и сохраняет результат как текущий прямоугольник.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">Прямоугольник, который должен пересекаться с текущим прямоугольником.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">Возвращает пересечение указанных прямоугольников.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">Пересечение двух прямоугольников. Если пересечение отсутствует, возвращается значение <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">Показывает, пересекается ли указанный прямоугольник с текущим прямоугольником.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Проверяемый прямоугольник.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если указанный прямоугольник пересекается с текущим прямоугольником. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Возвращает значение, которое показывает является ли прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если прямоугольник является <see cref="P:System.Windows.Rect.Empty" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">Возвращает координату по оси X левой стороны прямоугольника.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Координата по оси X левой стороны прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">Получает или задает расположение верхнего левого угла прямоугольника.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">Расположение верхнего левого угла прямоугольника. Значение по умолчанию — (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Для <see cref="P:System.Windows.Rect.Location" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">Перемещает прямоугольник на указанную величину по горизонтали и вертикали.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">Степень смещения прямоугольника по горизонтали.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">Степень смещения прямоугольника по вертикали.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">Возвращает прямоугольник, который получается в результате смещения указанного прямоугольника на заданные значения по горизонтали и вертикали.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">Перемещаемый прямоугольник.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">Горизонтальное смещение нового прямоугольника.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">Вертикальное смещение нового прямоугольника.</param>
      <returns vsli:raw="The resulting rectangle.">Полученный прямоугольник.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">Свойство <paramref name="rect" /> имеет значение <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">Возвращает прямоугольник, который получается в результате смещения указанного прямоугольника по заданному вектору.</summary>
      <param name="rect" vsli:raw="The original rectangle.">Исходный прямоугольник.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">Вектор, который показывает степень горизонтального и вертикального смещения нового прямоугольника.</param>
      <returns vsli:raw="The resulting rectangle.">Полученный прямоугольник.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> — <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">Перемещает прямоугольник по указанному вектору.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">Вектор, который показывает степень горизонтального и вертикального смещения прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Проверяет точное равенство двух прямоугольников.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если прямоугольники имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Проверяет, различны ли два прямоугольника.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Первый прямоугольник для сравнения.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Второй прямоугольник для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если прямоугольники не имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">Создает новый прямоугольник из заданного строкового представления.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">Строковое представление прямоугольника имеет следующий формат: "x, y, ширина, высота".</param>
      <returns vsli:raw="The resulting rectangle.">Полученный прямоугольник.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">Возвращает координату по оси X правой стороны прямоугольника.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">Координата по оси X правой стороны прямоугольника.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">Умножает размер текущего прямоугольника на указанные значения x и y.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">Коэффициент масштабирования по оси X.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">Коэффициент масштабирования по оси Y.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">Получает или задает ширину и высоту прямоугольника.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Для <see cref="P:System.Windows.Rect.Size" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Форматирует значение текущего экземпляра, используя указанный формат.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Используемый формат.

или -
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Поставщик, используемый для форматирования значения.

или -
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта.</param>
      <returns vsli:raw="A string representation of the rectangle.">Строковое представление прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">Возвращает координату по оси Y верхней стороны прямоугольника.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">Координата по оси Y верхней стороны прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">Возвращает расположение верхнего левого угла прямоугольника.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">Расположение верхнего левого угла прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">Возвращает расположение верхнего правого угла прямоугольника.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">Расположение верхнего правого угла прямоугольника.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">Возвращает строковое представление прямоугольника.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">Строковое представление текущего прямоугольника. Строка имеет следующий формат: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">Возвращает строковое представление прямоугольника с использованием указанного поставщика формата.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">Строковое представление текущего прямоугольника, которое определяется указанным поставщиком формата.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">Преобразовывает прямоугольник с использованием заданной матрицы.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Матрица, которая определяет применяемое преобразование.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">Возвращает прямоугольник, который получается в результате применения указанной матрицы к заданному прямоугольнику.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">Прямоугольник, который является основой для преобразования.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Матрица, которая определяет применяемое преобразование.</param>
      <returns vsli:raw="The rectangle that results from the operation.">Прямоугольник, полученный в результате операции.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">Увеличивает текущий прямоугольник на величину, достаточную, чтобы включить указанную точку.</summary>
      <param name="point" vsli:raw="The point to include.">Точка, которую необходимо включить.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">Увеличивает текущий прямоугольник на величину, достаточную, чтобы включить указанный прямоугольник.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Прямоугольник, который необходимо включить.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">Создает прямоугольник, который достаточно большой, чтобы включить указанный прямоугольник и указанную точку.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Прямоугольник, который необходимо включить.</param>
      <param name="point" vsli:raw="The point to include.">Точка, которую необходимо включить.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">Прямоугольник, который достаточно большой, чтобы включить указанный прямоугольник и указанную точку.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">Создает прямоугольник, который достаточно большой, чтобы включить два указанных прямоугольника.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">Первый прямоугольник, который необходимо включить.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">Второй прямоугольник, который необходимо включить.</param>
      <returns vsli:raw="The resulting rectangle.">Полученный прямоугольник.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Получает или задает ширину прямоугольника.</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">Положительное число, которое представляет ширину прямоугольника. Значение по умолчанию — 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">Свойству <see cref="P:System.Windows.Rect.Width" /> присваивается отрицательное значение.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Для <see cref="P:System.Windows.Rect.Width" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">Получает или задает координату по оси X левой стороны прямоугольника.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Координата по оси X левой стороны прямоугольника.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Для <see cref="P:System.Windows.Rect.X" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">Получает или задает координату по оси Y верхней стороны прямоугольника.</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">Координата по оси Y верхней стороны прямоугольника.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Для <see cref="P:System.Windows.Rect.Y" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Преобразует экземпляры других типов в экземпляры типа <see cref="T:System.Windows.Rect" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Определяет, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Тип источника, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если тип можно преобразовать в <see cref="T:System.Windows.Rect" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">Определяет, можно ли <see cref="T:System.Windows.Rect" /> преобразовать в указанный тип.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">Требуемый тип, для которого <see cref="T:System.Windows.Rect" /> проверяет возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <see cref="T:System.Windows.Rect" /> можно преобразовать в тип <paramref name="destinationType" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Пытается преобразовать заданный объект в <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">Информация о языке и региональных параметрах, которая учитывается при выполнении преобразования.</param>
      <param name="value" vsli:raw="The object being converted.">Преобразуемый объект.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Объект <see cref="T:System.Windows.Rect" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Происходит, если заданный объект имеет значение NULL или является типом, который нельзя преобразовать в <see cref="T:System.Windows.Rect" />.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">Пытается преобразовать <see cref="T:System.Windows.Rect" /> в заданный тип.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">Региональные особенности, учитываемые при выполнении преобразования.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">Преобразуемый объект <see cref="T:System.Windows.Rect" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">Тип, в который преобразуется данный <see cref="T:System.Windows.Rect" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Объект, созданный в результате преобразования данного объекта <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Свойство <paramref name="value" /> имеет значение <see langword="null" />.

или -
<paramref name="value" /> не является объектом <see cref="T:System.Windows.Rect" />.

-или-
Параметр <paramref name="destinationType" /> не является одним из допустимых типов для преобразования.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">Реализует структуру, которая используется для описания <see cref="T:System.Windows.Size" /> объекта.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Size" /> и присваивает ему начальные значения <paramref name="width" /> и <paramref name="height" />.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Исходная ширина экземпляра объекта <see cref="T:System.Windows.Size" />.</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Исходная высота экземпляра объекта <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Получает значение, которое представляет статический пустой объект <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Пустой экземпляр <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Сравнивает на равенство объект с экземпляром объекта <see cref="T:System.Windows.Size" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если размеры равны, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Сравнивает значение с экземпляром объекта <see cref="T:System.Windows.Size" /> на наличие равенства.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Размер для сравнения с текущим экземпляром объекта <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если экземпляры <see cref="T:System.Windows.Size" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Сравнивает на равенство два экземпляра <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если экземпляры <see cref="T:System.Windows.Size" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Получает хэш-код для этого экземпляра <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Хэш-код для этого экземпляра типа <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Получает или задает свойство <see cref="P:System.Windows.Size.Height" /> данного экземпляра <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">Свойство <see cref="P:System.Windows.Size.Height" /> данного экземпляра <see cref="T:System.Windows.Size" />. Значение по умолчанию — 0. Значение не может быть отрицательным.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">Получает значение, которое показывает, является ли данный экземпляр объекта <see cref="T:System.Windows.Size" /> свойством <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный экземпляр размера является свойством <see cref="P:System.Windows.Size.Empty" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Сравнивает на равенство два экземпляра <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если два экземпляра <see cref="T:System.Windows.Size" /> равны; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Явно преобразует экземпляр <see cref="T:System.Windows.Size" /> в экземпляр <see cref="T:System.Windows.Point" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Преобразуемое значение <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Объект <see cref="T:System.Windows.Point" />, значение которого равно значению данного экземпляра <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Явно преобразует экземпляр <see cref="T:System.Windows.Size" /> в экземпляр <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Преобразуемое значение <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Объект <see cref="T:System.Windows.Vector" />, значение которого равно значению данного экземпляра <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">Сравнивает два экземпляра <see cref="T:System.Windows.Size" /> на предмет их неравенства.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> если экземпляры <see cref="T:System.Windows.Size" /> не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">Возвращает экземпляр <see cref="T:System.Windows.Size" /> из преобразованного объекта <see cref="T:System.String" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">Значение <see cref="T:System.String" />, которое преобразовывается в значение <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Экземпляр <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Данный тип или член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
      <param name="format" vsli:raw="The format to use.">Используемый формат.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Поставщик для использования формата значения.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Значение текущего экземпляра в указанном формате.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Возвращает строку <see cref="T:System.String" />, которая представляет этот объект <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">Объект <see cref="T:System.String" />, задающий ширину, а вслед за ней — высоту.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Возвращает строку <see cref="T:System.String" />, которая представляет этот экземпляр объекта <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">Объект, который обеспечивает метод управления форматированием.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Строка <see cref="T:System.String" />, которая представляет данный объект <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Получает или задает свойство <see cref="P:System.Windows.Size.Width" /> данного экземпляра <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">Свойство <see cref="P:System.Windows.Size.Width" /> данного экземпляра <see cref="T:System.Windows.Size" />. Значение по умолчанию — <c>0</c>. Значение не может быть отрицательным.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">Преобразует экземпляры других типов в экземпляры класса <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Определяет, может ли класс быть преобразован из заданного типа в экземпляр структуры <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Предоставляет контекстные сведения по компоненту.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">Идентифицирует тип оцениваемых данных для преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="sourceType" /> может быть преобразован в экземпляр <see cref="T:System.Windows.Size" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">Определяет, может ли экземпляр <see cref="T:System.Windows.Size" /> быть преобразован в другой тип.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Предоставляет контекстные сведения по компоненту.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">Идентифицирует тип оцениваемых данных для преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный экземпляр <see cref="T:System.Windows.Size" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Пытается преобразовать указанный объект в экземпляр <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Предоставляет контекстные сведения по компоненту.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Соответствующая языку и региональным параметрам информация, которую следует учитывать при преобразовании.</param>
      <param name="value" vsli:raw="The source object that is being converted.">Преобразуемый исходный объект.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">Экземпляр <see cref="T:System.Windows.Size" />, созданный из преобразованного <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">Пытается преобразовать экземпляр <see cref="T:System.Windows.Size" /> в заданный тип.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Предоставляет контекстные сведения по компоненту.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Соответствующая языку и региональным параметрам информация, которую следует учитывать при преобразовании.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">Экземпляр <see cref="T:System.Windows.Size" /> для преобразования.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">Тип, в который преобразуется данный экземпляр <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Объект, созданный из преобразованного экземпляра <see cref="T:System.Windows.Size" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> является <see langword="null" /> или не является экземпляром <see cref="T:System.Windows.Size" />, или если <paramref name="destinationType" /> не является действительным конечным типом.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">Предоставляет экран запуска для приложения Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.SplashScreen" /> с указанной сборкой ресурсов.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">Сборка, содержащая внедренный ресурс.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Имя внедренного ресурса.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.SplashScreen" /> с указанным ресурсом.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Имя внедренного ресурса.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">Закрывает экран-заставку.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">Объект <see cref="T:System.TimeSpan" />, который определяет длительность периода времени, в течение которого исчезает экран-заставка после запуска операции закрытия.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Отображает экран-заставку.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">Значение <see langword="true" />, если экран-заставка автоматически закрывается; значение <see langword="false" />, если экран-заставка закрывается вручную.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">Не удалось найти ресурс, указанный в конструкторе.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Отображает экран-заставку.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">Значение <see langword="true" />, если экран-заставка автоматически закрывается; значение <see langword="false" />, если экран-заставка закрывается вручную.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если для окна экрана-заставки должен использоваться стиль WS_EX_TOPMOST; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">Предоставляет службы для управления очередью рабочих элементов для потока.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Выполняет указанный делегат асинхронно с указанными аргументами в потоке, в котором был создан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов, передаваемых в качестве аргументов указанному методу. Может иметь значение <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Выполняет указанный делегат асинхронно, с заданными приоритетом и аргументами, в потоке, в котором был создан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов, передаваемых в качестве аргументов указанному методу. Может иметь значение <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат асинхронно, с заданным приоритетом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода без аргументов, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат асинхронно, с заданными приоритетом и аргументом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с одним аргументом, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат асинхронно, с заданными приоритетом и массивом аргументов, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Массив объектов, передаваемых в качестве аргументов указанному методу.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> не является допустимым приоритетом.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">Инициализирует асинхронную остановку <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">Приоритет, с которым начинается остановка диспетчера.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Определяет, связан ли вызывающий поток с данным <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если вызывающий поток связан с данным <see cref="T:System.Windows.Threading.Dispatcher" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> для выполняющегося в данный момент потока и создает новый объект <see cref="T:System.Windows.Threading.Dispatcher" />, если с потоком еще не связан диспетчер.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">Диспетчер, связанный с текущим потоком.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Отменяет обработку очереди <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Структура, используемая для повторного включения диспетчера.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">Запрашивает выход для всех фреймов, включая вложенные.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> для заданного потока.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">Поток, из которого нужно получить <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">Диспетчер для <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">Определяет, завершил ли объект <see cref="T:System.Windows.Threading.Dispatcher" /> процесс остановки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если диспетчер завершил процесс остановки; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">Определяет, находится ли объект <see cref="T:System.Windows.Threading.Dispatcher" /> в процессе остановки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Windows.Threading.Dispatcher" /> начал процесс остановки; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Возвращает коллекцию ловушек, предоставляющих дополнительную информацию о <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Ловушки, связанные с данным <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет заданный объект <see cref="T:System.Action" /> синхронно в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Action" /> синхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Action" /> синхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Объект, указывающий, следует ли отменить действие.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Action" /> синхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Объект, указывающий, следует ли отменить действие.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Минимальное время ожидания запуска операции.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно с заданными аргументами в потоке, с которым связан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов, передаваемых в качестве аргументов указанному методу. Может иметь значение <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат в течение заданного промежутка времени, синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Максимальное время ожидания завершения операции.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Массив объектов, передаваемых в качестве аргументов указанному методу. Может иметь значение <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат в течение заданного промежутка времени, синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Максимальное время ожидания завершения операции.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов, передаваемых в качестве аргументов указанному методу. Может иметь значение <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Массив объектов, передаваемых в качестве аргументов указанному методу. Может иметь значение <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно, с заданным приоритетом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода без аргументов, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно, с заданными приоритетом и аргументом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с одним аргументом, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">Массив объектов, передаваемых в качестве аргументов указанному методу.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">Выполняет указанный делегат асинхронно, с заданными приоритетом и значением таймаута, в потоке, в котором был создан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Максимальное время ожидания завершения операции.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода без аргументов, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно, с заданными приоритетом и аргументом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Максимальное время ожидания завершения операции.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Объект, передаваемый в качестве аргумента указанному методу. Это может быть значение <see langword="null" />, если аргументы не требуются.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный делегат синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Максимальное время ожидания завершения операции.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Массив объектов, передаваемых в качестве аргументов указанному методу.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Значение, возвращаемое вызываемым делегатом, или <see langword="null" />, если делегат не возвращает никакого значения.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="method" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет заданный объект <see cref="T:System.Func`1" /> синхронно в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Func`1" /> синхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Func`1" /> синхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Объект, указывающий, следует ли отменить операцию.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Func`1" /> синхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Объект, указывающий, следует ли отменить операцию.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Минимальное время ожидания запуска операции.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет заданный объект <see cref="T:System.Action" /> асинхронно в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Action" /> асинхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Action" /> асинхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Объект, указывающий, следует ли отменить действие.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет заданный объект <see cref="T:System.Func`1" /> асинхронно в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Func`1" /> асинхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Выполняет указанный объект <see cref="T:System.Func`1" /> асинхронно с заданным приоритетом в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Делегат, вызываемый с помощью диспетчера.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Приоритет, определяющий очередность вызова указанного метода обратного вызова по отношению к другим ожидающим операциям в объекте <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Объект, указывающий, следует ли отменить операцию.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Тип возвращаемого значения указанного делегата.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Объект, возвращаемый сразу после вызова <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">Инициирует синхронный процесс остановки <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">Входит в цикл выполнения.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">Фрейм для обработки диспетчером.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="frame" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> равно <see langword="true" />

или -
<paramref name="frame" /> выполняется с другим <see cref="T:System.Windows.Threading.Dispatcher" />.

или -
Диспетчер отключен.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Помещает главный фрейм выполнения в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">Происходит после остановки <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">Происходит, когда начинается процесс остановки <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Возвращает поток, с которым связан данный <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The thread.">Поток.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">Происходит, когда выбрасывается и никаким кодом не перехватывается исключение потока при выполнении делегата с помощью <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> или <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">Происходит, когда выбрасывается и никаким кодом не перехватывается исключение потока при выполнении делегата с помощью <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> или <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> на стадии фильтра.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">Определяет, является ли <see cref="T:System.Windows.Threading.DispatcherPriority" /> допустимым приоритетом.</summary>
      <param name="priority" vsli:raw="The priority to check.">Проверяемый приоритет.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">Строка, которая будет возвращена исключением, которое будет сгенерировано, если приоритет окажется недействительным.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Создает объект типа awaitable, который асинхронно направляет элемент управления обратно текущему диспетчеру и предоставляет диспетчеру возможность обработки других событий.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Объект типа awaitable, который асинхронно направляет элемент управления обратно текущему диспетчеру и предоставляет диспетчеру возможность обработки других событий.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">Создает объект типа awaitable, который асинхронно направляет элемент управления обратно текущему диспетчеру и предоставляет диспетчеру возможность обработки других событий.  Работа, происходящая, когда элемент управления возвращается к коду, ожидающему результата этого метода, запланирован с указанным приоритетом.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">Приоритет, с которым следует планировать продолжение.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Объект типа awaitable, который асинхронно направляет элемент управления обратно текущему диспетчеру и предоставляет диспетчеру возможность обработки других событий.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">Предоставляет данные для событий, связанных с <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Объект <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с данным событием.</summary>
      <returns vsli:raw="The dispatcher.">Диспетчер.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Представляет цикл выполнения в <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherFrame" />, используя заданный флаг запроса завершения работы.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">Указывает, завершает ли работу этот фрейм, когда запрашивается завершение работы всех фреймов.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">Получает или задает значение, указывающее, должен ли этот <see cref="T:System.Windows.Threading.DispatcherFrame" /> продолжить работу.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, если фрейм должен продолжить работу; в противном случае — <see langword="false" />.  Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">Предоставляет данные для событий <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">Операция, связанная с данным событием.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Получает объект <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с данным событием.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Объект <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с данным событием.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">Получает объект <see cref="T:System.Windows.Threading.DispatcherOperation" />, связанный с данным событием.</summary>
      <returns vsli:raw="The operation.">Операция.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">Представляет метод обработки событий, связанных с <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The event data.">Данные события.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">Предоставляет дополнительные сведения о работе <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">Происходит, когда у диспетчера больше нет ни одной операции для обработки.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">Генерируется при отмене операции.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">Генерируется по завершении операции.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">Происходит, когда операция помещается в очередь диспетчера.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">Генерируется при изменении приоритета операции.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">Возникает при вызове операции.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Представляет объект, связанный с объектом <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если вызывающий поток имеет доступ к этому объекту; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, с которым связан этот объект <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="The dispatcher.">Диспетчер.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Обеспечивает наличие у вызывающего потока доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Представляет объект, используемый для взаимодействия с операцией, помещенной в очередь объекта <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">Отменяет операцию.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если операция отменена; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">Генерируется при отмене операции.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">Создается по завершении операции.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, в очередь которого помещена данная операция.</summary>
      <returns vsli:raw="The dispatcher.">Диспетчер.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">Возвращает объект , который уведомляется при завершении асинхронной операции.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">Объект , который уведомляется при завершении асинхронной операции.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Начинает операцию, связанную с данным объектом <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">Значение <see langword="null" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Возвращает или задает приоритет операции в очереди объекта <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">Приоритет делегата в очереди.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Возвращает результат операции по ее завершении.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">Результат операции -или- <see langword="null" />, если операция не завершилась.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">Получает текущее состояние операции.</summary>
      <returns vsli:raw="The status of the operation.">Состояние операции.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Получает объект <see cref="T:System.Threading.Tasks.Task`1" />, представляющий текущую операцию.</summary>
      <returns vsli:raw="An object that represents the current operation.">Объект, представляющий текущую операцию.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">Ожидает завершения операции.</summary>
      <returns vsli:raw="The status of the operation.">Состояние операции.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> равно <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Это может произойти при ожидании операции, которая уже выполняется в том же потоке.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">Ожидает завершения операции в течение заданного времени.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">Максимальное время ожидания.</param>
      <returns vsli:raw="The status of the operation.">Состояние операции.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> равно <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Это может произойти при ожидании операции, которая уже выполняется в том же потоке.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Представляет объект, используемый для взаимодействия с операцией, помещенной в очередь <see cref="T:System.Windows.Threading.Dispatcher" />, и содержит <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Тип, возвращаемый объектом <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">Возвращает объект, ожидающий асинхронную операцию, которая возвращает результат.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">Объект, ожидающий асинхронную операцию, которая возвращает результат.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Начинает операцию, связанную с данным объектом <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="The result of the operation.">Результат операции.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Возвращает результат операции по ее завершении.</summary>
      <returns vsli:raw="The result of the operation.">Результат операции.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Получает объект <see cref="T:System.Threading.Tasks.Task`1" />, представляющий текущую операцию.</summary>
      <returns vsli:raw="An object that represents the current operation.">Объект, представляющий текущую операцию.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">Представляет делегат для использования в операциях диспетчера.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">Аргумент, переданный в обратный вызов.</param>
      <returns vsli:raw="The object returned by the callback.">Объект, возвращаемый функцией обратного вызова.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Описывает возможные значения состояния <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">Операция отменена.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">Операция завершена.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">Выполнение операции началось, но еще не завершилось.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Операция находится в состоянии ожидания и все еще в очереди <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Описывает приоритеты, с которыми могут вызываться операции посредством <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">Значением перечисления является 2. Операции обрабатываются, когда приложение бездействует.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">Значением перечисления является 4. Операции обрабатываются после завершения всех остальных операций, которые не находятся в состоянии ожидания.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">Значением перечисления является 3. Операции обрабатываются после завершения фоновых операций.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">Значением перечисления является 8. Операции обрабатываются с таким же приоритетом, как и привязка данных.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">Значением перечисления является 0. Операции не обрабатываются.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">Значением перечисления является 5. Операции обрабатываются с таким же приоритетом, как и ввод данных.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">Значением перечисляемого типа является -1. Это недействительный приоритет.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">Значением перечисления является 6. Операции обрабатываются, когда завершены формирование структуры и отрисовка содержимого, но перед обработкой элементов с приоритетом ввода. Именно на этой стадии генерируется событие Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">Значением перечисления является 9. Операции обрабатываются с обычным приоритетом. Это типичный приоритет приложений.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">Значением перечисления является 7. Операции обрабатываются с таким же приоритетом, как и отрисовка.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">Значением перечисления является 10. Операции обрабатываются перед другими асинхронными операциями. Это наивысший приоритет.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">Значением перечисления является 1. Операции обрабатываются, когда система бездействует.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Представляет объект типа awaitable, который асинхронно направляет элемент управления обратно текущему диспетчеру и предоставляет диспетчеру возможность обработки других событий.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">Возвращает объект, который ожидает завершения асинхронной задачи.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">Объект, который ожидает завершения асинхронной задачи.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">Предоставляет объект, который ожидает завершения асинхронной задачи.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">Завершает ожидание завершения асинхронной задачи.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">Получает значение, показывающее, завершена ли асинхронная задача.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">Задает действие, выполняемое, когда объект <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> прекращает ожидать завершения выполнения асинхронной задачи.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">Действие, которое необходимо выполнить после завершения операции ожидания.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">Представляет объект Dispatcher, когда он отличен, и предоставляет средства для его повторного включения.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">Возобновляет работу диспетчера.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">Определяет, равен ли заданный объект <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> данному объекту <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">Объект, который необходимо проверить на равенство.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если заданный объект равен данному объекту <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Получает хэш-код для данного экземпляра.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">Определяет равенство двух объектов <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="left" vsli:raw="The first object to compare.">Первый из сравниваемых объектов.</param>
      <param name="right" vsli:raw="The second object to compare.">Второй из сравниваемых объектов.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объекты <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">Определяет, отличаются ли два объекта <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="left" vsli:raw="The first object to compare.">Первый из сравниваемых объектов.</param>
      <param name="right" vsli:raw="The second object to compare.">Второй из сравниваемых объектов.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объекты <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">Предоставляет контекст синхронизации для Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />, используя текущий объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />, используя указанный объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">Объект <see cref="T:System.Windows.Threading.Dispatcher" />, с которым требуется связать данный <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="dispatcher" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />, используя указанный объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">Объект <see cref="T:System.Windows.Threading.Dispatcher" />, с которым требуется связать данный <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">Приоритет, используемый для отправки и передачи методов обратного вызова.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Создает копию данного объекта <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="The copy of this synchronization context.">Копия данного контекста синхронизации.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">Асинхронно вызывает функцию обратного вызова в контексте синхронизации.</summary>
      <param name="d" vsli:raw="The delegate to call.">Вызываемый делегат.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Передаваемый делегату объект.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">Синхронно вызывает функцию обратного вызова в контексте синхронизации.</summary>
      <param name="d" vsli:raw="The delegate to call.">Вызываемый делегат.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Передаваемый делегату объект.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">Ожидает получения сигнала всеми элементами заданного массива или любым из его элементов.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">Массив, содержащий собственные обработчики операционной системы.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">
        <see langword="true" /> для ожидания всех обработчиков; <see langword="false" /> для ожидания любого обработчика.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">Индекс объекта, удовлетворившего операцию ожидания, в массиве.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">Таймер, интегрированный в очередь <see cref="T:System.Windows.Threading.Dispatcher" />, обрабатываемый с заданным интервалом времени и заданным приоритетом.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />, устанавливая для него заданные интервал, приоритет, обработчик событий и объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">Период времени между тактами.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Приоритет, с которым следует вызывать таймер.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">Обработчик для событий <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Диспетчер, с которым связан таймер.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> — <see langword="null" />.

или -

Свойство <paramref name="dispatcher" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Параметр <paramref name="interval" /> имеет значение меньше 0 или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />, обрабатывающий события таймера с заданным приоритетом.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Приоритет, с которым следует вызывать таймер.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />, который выполняется с заданным приоритетом заданным объектом <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Приоритет, с которым следует вызывать таймер.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Диспетчер, с которым связан таймер.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="dispatcher" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с этим объектом <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns vsli:raw="The dispatcher.">Диспетчер.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">Возвращает или задает период времени между тактами таймера.</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">Период времени между тактами. Значение по умолчанию — 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">Значение параметра <paramref name="interval" /> меньше 0 или больше <see cref="F:System.Int32.MaxValue" /> миллисекунд.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">Возвращает или задает значение, указывающее, работает ли таймер.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если таймер запущен; в противном случае — значение <see langword="false" />.  Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Запускает <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Останавливает <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">Получает или задает определенные пользователем данные объекта.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">Определенные пользователем данные.  Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">Происходит по истечении интервала таймера.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Предоставляет данные для события <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Возвращает исключение, сгенерированное при выполнении кода с помощью диспетчера.</summary>
      <returns vsli:raw="The exception.">Исключение.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">Возвращает или задает значение, указывающее, обработано ли событие исключения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если исключение обработано; в противном случае —<see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The event data.">Данные события.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Предоставляет данные для события <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Возвращает исключение, сгенерированное при выполнении кода с помощью диспетчера.</summary>
      <returns vsli:raw="The exception.">Исключение.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">Возвращает или задает значение, указывающее, следует ли перехватить исключение и вызвать обработчики события.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, если <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> должно быть сгенерировано; в противном случае — <see langword="false" />.  Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="The event data.">Данные события.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">Представляет метод, используемый как обратный вызов, проверяющий фактическое значение свойства зависимостей.</summary>
      <param name="value" vsli:raw="The value to be validated.">Значение, подлежащий проверке.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">
        <see langword="true" /> если значение допустимо; <see langword="false" /> если значение не является допустимым.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">Представляет смещение в двумерном пространстве.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Смещение <see cref="P:System.Windows.Vector.X" /> нового <see cref="T:System.Windows.Vector" />.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Смещение <see cref="P:System.Windows.Vector.Y" /> нового <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">Перемещает указанную точку по заданному вектору и возвращает результат в виде точки.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">Степень перемещения заданной точки.</param>
      <param name="point" vsli:raw="The point to translate.">Точка, которую необходимо переместить.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Результат перемещения <paramref name="point" /> по <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Складывает два вектора и возвращает результат в виде структуры <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Первый складываемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Второй складываемый вектор.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Сумма <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">Извлекает угол (в градусах) между двумя заданными векторами.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Первой оцениваемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Второй оцениваемый вектор.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Угол в градусах между <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">Вычисляет векторное произведение двух векторов.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Первой оцениваемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Второй оцениваемый вектор.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">Векторное произведение <paramref name="vector1" /> и <paramref name="vector2" />. При вычислении векторного произведения используется следующая формула:
<c>(Vector1.X * Vector2.Y) – (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">Вычисляет определитель двух векторов.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Первой оцениваемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Второй оцениваемый вектор.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Определитель <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Делит указанный вектор на заданный скаляр и возвращает результат в виде <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">Структура вектора, который необходимо разделить.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">Делитель <paramref name="vector" />.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Результат деления <paramref name="vector" /> на <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">Определяет, является ли указанный объект <see cref="T:System.Object" /> структурой <see cref="T:System.Windows.Vector" />. Если это так, проверяется, имеет ли структура те же значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, что и данный вектор.</summary>
      <param name="o" vsli:raw="The vector to compare.">Сравниваемый вектор.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="o" /> является <see cref="T:System.Windows.Vector" /> и имеет те же значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, что и данный вектор. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Сравнивает два вектора на наличие равенства.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">Вектор, который необходимо сравнить с данным вектором.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> имеет те же значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, что и данный вектор. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">Сравнивает два указанных вектора на наличие равенства.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Первый сравниваемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Второй сравниваемый вектор.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если компоненты <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector1" /> и <paramref name="vector2" /> равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">Возвращает хэш-код данного вектора.</summary>
      <returns vsli:raw="The hash code for this instance.">Хэш-код данного экземпляра.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">Возвращает длину данного вектора.</summary>
      <returns vsli:raw="The length of this vector.">Длина данного вектора.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">Возвращает квадрат длины данного вектора.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">Квадрат <see cref="P:System.Windows.Vector.Length" /> данного вектора.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Умножает указанный скаляр на заданный вектор и возвращает результат в виде <see cref="T:System.Windows.Vector" />.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Скаляр-множитель.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Умножаемый вектор.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Результат умножения <paramref name="scalar" /> на <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Умножает указанный вектор на заданный скаляр и возвращает результат в виде <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Умножаемый вектор.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Скаляр-множитель.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Результат умножения <paramref name="vector" /> на <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует координатное пространство указанного вектора с использованием заданного значения <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">Преобразуемая векторная структура.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Преобразование, которое применяется к <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Результат преобразования <paramref name="vector" /> посредством <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Вычисляет скалярное произведение двух заданных векторов и возвращает результат в виде <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Первый вектор, который необходимо умножить.</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">Вторая векторная структура, которую необходимо умножить.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">Объект <see cref="T:System.Double" />, который содержит скалярное произведение <paramref name="vector1" /> и <paramref name="vector2" />, вычисляемое с использованием следующей формулы:
<c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">Отрицает данный вектор. Вектор имеет ту же величину, что и раньше, но теперь его направление изменилось на противоположное.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">Нормализует данный вектор.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">Перемещает точку по заданному вектору и возвращает результат в виде точки.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">Вектор, используемый для перемещения <paramref name="point" />.</param>
      <param name="point" vsli:raw="The point to translate.">Точка, которую необходимо переместить.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Результат перемещения <paramref name="point" /> по <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">Складывает два вектора и возвращает результат в виде вектора.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Первый складываемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Второй складываемый вектор.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Сумма <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">Делит указанный вектор на заданный скаляр и возвращает результирующий вектор.</summary>
      <param name="vector" vsli:raw="The vector to divide.">Вектор, который необходимо разделить.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">Скаляр, на который делится <paramref name="vector" />.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Результат деления <paramref name="vector" /> на <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Сравнивает два вектора на наличие равенства.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Первый сравниваемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Второй сравниваемый вектор.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если компоненты <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector1" /> и <paramref name="vector2" /> равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">Создает объект <see cref="T:System.Windows.Point" /> со значениями <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> данного вектора.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Преобразуемый вектор.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">Точка со значениями координат <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />, которые равны значениям смещения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">Создает <see cref="T:System.Windows.Size" /> из смещений данного вектора.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Преобразуемый вектор.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">Объект <see cref="T:System.Windows.Size" />, чье значение <see cref="P:System.Windows.Size.Width" /> равно абсолютному значению свойства <see cref="P:System.Windows.Vector.X" /> данного вектора, а значение <see cref="P:System.Windows.Size.Height" /> равно абсолютному значению свойства <see cref="P:System.Windows.Vector.Y" /> данного вектора.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">Сравнивает два вектора на наличие неравенства.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Первый сравниваемый вектор.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Второй сравниваемый вектор.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если компоненты <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector1" /> и <paramref name="vector2" /> отличны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">Умножает указанный скаляр на заданный вектор и возвращает результирующий вектор.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Скаляр-множитель.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Умножаемый вектор.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Результат умножения <paramref name="scalar" /> на <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">Умножает указанный скаляр на заданный скаляр и возвращает результирующий вектор.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Умножаемый вектор.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Скаляр-множитель.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Результат умножения <paramref name="vector" /> на <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Преобразует координатное пространство указанного вектора с использованием заданного значения <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Преобразуемый вектор.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Преобразование, которое применяется к <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Результат преобразования <paramref name="vector" /> посредством <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Вычисляет скалярное произведение двух заданных векторных структур и возвращает результат в виде <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Первый вектор, который необходимо умножить.</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">Второй вектор, который необходимо умножить.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">Возвращает объект, <see cref="T:System.Double" />, который содержит скалярное произведение <paramref name="vector1" /> и <paramref name="vector2" />, вычисляемое с использованием следующей формулы:
<c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">Вычитает один указанный вектор из другого.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Вектор, из которого вычитается <paramref name="vector2" />.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Вектор, который вычитается из <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Разность между <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">Преобразует заданный вектор в отрицательный.</summary>
      <param name="vector" vsli:raw="The vector to negate.">Вектор, преобразуемый в отрицательный.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">Вектор со значениями <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, которые противоположны значениям <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Преобразовывает строковое представление вектора в эквивалентную структуру <see cref="T:System.Windows.Vector" />.</summary>
      <param name="source" vsli:raw="The string representation of the vector.">Строковое представление вектора.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Эквивалентная структура <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">Вычитает указанный вектор из другого заданного вектора.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Вектор, из которого вычитается <paramref name="vector2" />.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Вектор, который вычитается из <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Разность между <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода. Описание этого члена см. в разделе <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Строка, задающая используемый формат.

или -
Значение <see langword="null" /> для использования формата по умолчанию, определенного для типа реализации <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">Объект <see langword="IFormatProvider" />, используемый для форматирования значения.

или -
Значение <see langword="null" /> для получения сведений о форматировании чисел на основе текущего значения параметра языкового стандарта операционной системы.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Строка, содержащая значение текущего экземпляра в заданном формате.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Возвращает строковое представление данной структуры <see cref="T:System.Windows.Vector" />.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Строка, которая представляет значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> данного объекта <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">Возвращает строковое представление данной структуры <see cref="T:System.Windows.Vector" /> с заданными данными форматирования.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Строка, которая представляет значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> данного объекта <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">Получает или задает компонент <see cref="P:System.Windows.Vector.X" /> данного вектора.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">Компонент <see cref="P:System.Windows.Vector.X" /> данного вектора. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">Получает или задает компонент <see cref="P:System.Windows.Vector.Y" /> данного вектора.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">Компонент <see cref="P:System.Windows.Vector.Y" /> данного вектора. Значение по умолчанию — 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Преобразует экземпляры других типов в <see cref="T:System.Windows.Vector" /> и из него.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Указывает, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">Источник <see cref="T:System.Type" />, запрашиваемый для поддержки преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объекты заданного типа могут быть преобразованы в <see cref="T:System.Windows.Vector" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">Определяет, могут ли экземпляры <see cref="T:System.Windows.Vector" /> быть преобразованы в указанный тип.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">Требуемый тип, для которого <see cref="T:System.Windows.Vector" /> проверяет возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если экземпляры <see cref="T:System.Windows.Vector" /> могут быть преобразованы в <paramref name="destinationType" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Преобразует указанный объект в <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Определяет объект <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.</param>
      <param name="value" vsli:raw="The object being converted.">Преобразуемый объект.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Объект <see cref="T:System.Windows.Vector" />, созданный в результате преобразования <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">Преобразует указанный объект <see cref="T:System.Windows.Vector" /> в заданный тип.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Описывает контекстную информацию типа.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Определяет объект <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">Преобразуемый объект <see cref="T:System.Windows.Vector" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">Тип, в который преобразуется данный <see cref="T:System.Windows.Vector" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Объект, созданный в результате преобразования данного объекта <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">Предоставляет базовый класс для диспетчера событий, используемого в шаблоне слабых событий. Диспетчер добавляет и удаляет прослушиватели для событий (или обратных вызовов), которые также используют этот шаблон.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">Инициализирует значения базового класса при использовании этого метода в качестве инициализатора конструктором производного класса.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">Доставляет управляемое событие к каждому прослушивателю.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Объект, в котором обрабатывается событие.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">Объект <see cref="T:System.EventArgs" />, содержащий данные доставляемого события.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">Доставляет управляемое событие к каждому прослушивателю из предоставленного списка.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Объект, в котором обрабатывается событие.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Предоставленный <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">Возвращает реализацию <see cref="T:System.Windows.WeakEventManager" />, используемую для указанного типа.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">Тип, для которого необходимо получить <see cref="T:System.Windows.WeakEventManager" />.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">Соответствующая реализация <see cref="T:System.Windows.WeakEventManager" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">Получает или задает данные, сохраняемые для указанного источника.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">Отсчитываемый от нуля индекс запрошенного источника.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">Дата, сохраняемая диспетчером для данного источника.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Предоставляет встроенный список-коллекцию для хранения прослушивателей <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Windows.WeakEventManager.ListenerList" /> с указанными начальными возможностями.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Число элементов, которые следует разместить в исходном списке.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Добавляет объект <see cref="T:System.Windows.IWeakEventListener" /> в объект <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Элемент-прослушиватель для добавления в список <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Добавляет обработчик событий в <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Обработчик событий для добавления в <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">Объявляет список как используемый. Это предотвращает прямые изменения списка во время выполнения итерации по его элементам.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если список уже объявлен как используемый; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Создает изменяемый клон этого <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">Изменяемая копия текущего объекта.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Копирует текущий <see cref="T:System.Windows.WeakEventManager.ListenerList" /> в указанный <see cref="T:System.Windows.WeakEventManager.ListenerList" /></summary>
      <param name="newList" vsli:raw="The object to copy to.">Объект, в который требуется выполнить копирование.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Возвращает число элементов, содержащихся в списке <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Количество элементов, содержащихся в коллекции <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Доставляет управляемое событие к каждому прослушивателю в <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Объект, создавший событие.</param>
      <param name="args" vsli:raw="An object that contains the event data.">Объект, содержащий данные о событии.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Тип объекта <see cref="T:System.Windows.WeakEventManager" />, который вызывает этот метод.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если все прослушиватели в <see cref="T:System.Windows.WeakEventManager.ListenerList" /> ссылаются на объект, который был удален сборщиком мусора; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">Возвращает значение, представляющее пустой список с целью сравнения.</summary>
      <returns vsli:raw="The empty list representation.">Представление пустого списка.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">Снимает состояние блокировки, инициированное методом <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">Получает значение, объявляющее, является ли данный объект <see cref="T:System.Windows.WeakEventManager.ListenerList" /> пустым.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если список пуст; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">Получает или задает конкретный элемент-прослушиватель из списка <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">Индекс прослушивателя в списке (начиная с нуля).</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">Элемент по указанному индексу или указатель null, если по этому индексу нет элемента.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">Проверяет, используется ли в данный момент указанный список. и если это так, устанавливает ссылочный параметр списка на его копию вместо оригинала.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">Список для проверки состояния использования и потенциального копирования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">Значение <see langword="true" />, если указанный список использовался во время вызова и поэтому ссылка на параметр <paramref name="list" /> была сброшена к копии. Значение <see langword="false" />, если указанный список не использовался, что означает оставление ссылки на параметр <paramref name="list" /> без изменений.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">Удаляет все записи из списка, в которых базовая цель ссылки представляет собой указатель null.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Возвращает <see langword="true" />, если какие-либо записи были очищены; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Удаляет первое вхождение элемента-прослушивателя из списка <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The item to remove.">Удаляемый элемент.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Удаляет обработчик событий из <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Обработчик событий для удаления из <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">Предоставляет список типобезопасных коллекций для хранения прослушивателей <see cref="T:System.Windows.WeakEventManager" />. Этот класс определяет параметр типа для используемых данных событий.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Тип, в котором хранятся данные события.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> с указанными начальными возможностями.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Число элементов, которые следует разместить в исходном списке.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">Создает модифицируемый клон данного объекта <see cref="T:System.Windows.WeakEventManager.ListenerList" />, делая глубокие копии значений этого объекта.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">Изменяемая копия текущего объекта. Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта будет содержать значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержало значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">Доставляет управляемое событие к каждому прослушивателю в <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Объект, создавший событие.</param>
      <param name="e" vsli:raw="An object that contains the event data.">Объект, содержащий данные о событии.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Тип объекта <see cref="T:System.Windows.WeakEventManager" />, который вызывает этот метод.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если все прослушиватели в <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> ссылаются на объект, который был удален сборщиком мусора; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Возвращает новый объект для добавления прослушивателей в событие.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Новый объект для добавления прослушивателей в событие.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">Добавляет указанный делегат в качестве обработчика событий заданного источника.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">Исходный объект, на который подписывается делегат обработчика.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">Делегат, обрабатывающий событие, вызванное объектом <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">Добавляет указанный прослушиватель к указанному источнику для управляемого события.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">Источник, к которому прикрепляются прослушиватели.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Прослушивающий класс (который должен реализовать <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">Удаляет ранее добавленный обработчик из заданного источника.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">Источник для удаления из обработчика.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">Делегат для удаления из <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">Удаляет предварительно добавленный прослушиватель из указанного источника.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">Источник, из которого удаляются прослушиватели.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Прослушивающий класс (который должен реализовать <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">Удаляет неактивные записи прослушивателя из списка даты для предоставленного источника. Возвращает значение <see langword="true" />, если некоторые записи были фактически удалены из списка.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">Источник для прослушиваемых событий.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">Данные для проверки. Ожидается, что данный объект будет реализацией <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">Значение <see langword="true" />, чтобы остановить прослушивание <paramref name="source" /> и полностью удалить все записи из раздела <paramref name="data" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если некоторые записи были фактически удалены;в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Устанавливает блокировку на чтение для базовой таблицы данных и возвращает <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Объект, который может быть использован для блокировки членов таблицы данных и затем корректно удален с помощью конструкции <see langword="using" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">Удаляет все прослушиватели для заданного источника.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">Источник для удаления информации о прослушивателях.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">Запрашивает, чтобы очистка ненужных записей из базового списка прослушивателей выполнялась в потоке с более низким приоритетом.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">Задает текущий диспетчер для заданного типа диспетчера.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">Тип, для которого задается новый диспетчер событий.</param>
      <param name="manager" vsli:raw="The new event manager.">Новый диспетчер событий.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">При переопределении в производном классе начинает прослушивать управляемые события. После первого вызова метода <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> диспетчер должен находиться в состоянии вызова метода <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> или <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> при каждой обработке соответствующего события из указанного источника.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">Источник, прослушивание которого необходимо начать.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">При переопределении в производном классе прекращает прослушивать указанный источник управляемого события.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">Источник, прослушивание которого необходимо прекратить.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Устанавливает блокировку на запись для базовой таблицы данных и возвращает <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Объект, который может быть использован для блокировки членов таблицы данных и затем корректно удален с помощью конструкции <see langword="using" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">Предоставляет типобезопасный <see cref="T:System.Windows.WeakEventManager" />, позволяющий задавать обработчик событий для использования для шаблона "слабого" прослушивателя событий. Этот класс определяет параметр типа для источника событий и параметр типа для используемых данных событий.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">Тип, вызывающий событие.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Тип, в котором хранятся данные события.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">Добавляет указанный обработчик событий к указанному событию.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Исходный объект, вызвавший указанное событие.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">Имя события для подписки.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">Делегат, обрабатывающий событие.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Возвращает новый объект для добавления прослушивателей в событие.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Новый объект для добавления прослушивателей в событие.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">Удаляет заданный обработчик событий из заданного события.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Исходный объект, вызвавший указанное событие.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">Имя события, из которого требуется удалить обработчик.</param>
      <param name="handler" vsli:raw="The delegate to remove.">Делегат для удаления</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">Запускает прослушивание события в заданном объекте.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Объект, вызывающий событие.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">Останавливает прослушивание события в заданном объекте.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Объект, вызывающий событие.</param>
    </member>
  </members>
</doc>