<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary>マニフェスト アクティブ化アプリケーションを一意に識別する機能を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>
        <see cref="T:System.ApplicationIdentity" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="applicationIdentityFullName">アプリケーションの完全名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>配置マニフェストの場所を URL として取得します。</summary>
      <returns>配置マニフェストの URL</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>アプリケーションの完全名を取得します。</summary>
      <returns>アプリケーションの完全名。この名前は表示名とも呼ばれます。</returns>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、対象オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">シリアル化用の <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造体。</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>マニフェスト アクティブ化アプリケーションの完全名を返します。</summary>
      <returns>マニフェスト アクティブ化アプリケーションの完全名。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>メソッドまたはクラスが構成ファイルにアクセスできるようにするアクセス許可構造を提供します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">付与するアクセス許可レベル。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> の値が <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> または <see cref="F:System.Security.Permissions.PermissionState.None" /> のいずれでもありません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>同じアクセス許可レベルの新しい <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトを返します。</summary>
      <returns>同じアクセス許可レベルの新しい <see cref="T:System.Configuration.ConfigurationPermission" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML からアクセス許可の状態の値を読み取ります。</summary>
      <param name="securityElement">アクセス許可の状態の読み込み元の構成要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">指定された <paramref name="securityElement" /> の <see langword="unrestricted" /> 属性が <see langword="true" /> または <see langword="false" /> のいずれでもありません。

または -

指定された <paramref name="securityElement" /> の <see cref="P:System.Security.SecurityElement.Tag" /> が "IPermission" ではありません。

または -

指定された <paramref name="securityElement " /> の <see langword="class" /> 属性が <see langword="null" /> であるか、または <see cref="T:System.Configuration.ConfigurationPermission" /> の型名ではありません。

または -

指定された <paramref name="securityElement" /> の <see langword="version" /> 属性が 1 ではありません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトと、<see cref="T:System.Security.IPermission" /> インターフェイスを実装する指定されたオブジェクトとの間の論理積集合を返します。</summary>
      <param name="target">積集合を実行するためのアクセス許可を格納しているオブジェクト。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトと、<see cref="T:System.Security.IPermission" /> を実装する指定されたオブジェクトとの間の論理積集合。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Configuration.ConfigurationPermission" /> として型指定されていません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトを <see cref="T:System.Security.IPermission" /> インターフェイスを実装しているオブジェクトと比較します。</summary>
      <param name="target">比較対象のオブジェクト。</param>
      <returns>アクセス許可の状態が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Configuration.ConfigurationPermission" /> として型指定されていません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトのアクセス許可の状態が <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 列挙体の <see cref="T:System.Security.Permissions.PermissionState" /> 値であるかどうかを示します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" /> のアクセス許可の状態が <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> の <see cref="T:System.Security.Permissions.PermissionState" /> 値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>現在の <see cref="T:System.Security.SecurityElement" /> オブジェクトに基づく属性値を持つ <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトを返します。</summary>
      <returns>現在の <see cref="T:System.Security.SecurityElement" /> に基づく属性値を持つ <see cref="T:System.Configuration.ConfigurationPermission" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトと、<see cref="T:System.Security.IPermission" /> インターフェイスを実装するオブジェクトとの間の論理和集合を返します。</summary>
      <param name="target">和集合の実行に使用するオブジェクト。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" /> と <see cref="T:System.Security.IPermission" /> を実装するオブジェクトの論理和集合。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Configuration.ConfigurationPermission" /> として型指定されていません。</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>構成ファイルのセクションにアクセスするための、マークされた対象アクセス許可を付与はたは拒否する <see cref="T:System.Configuration.ConfigurationPermission" /> オブジェクトを作成します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の列挙体のメンバーによって表されるセキュリティ アクション。 属性のアクセス許可状態を決定します。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.IPermission" /> インターフェイスを実装するオブジェクトを作成し、返します。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> を実装するオブジェクト。</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>.NET Framework データ プロバイダーが、データ アクセスに関する適切なセキュリティ レベルをユーザーに割り当てることができるようにします。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>
        <see langword="DBDataPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>既存の <see langword="DBDataPermission" /> を使用して、<see langword="DBDataPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permission">新しい <see langword="DBDataPermission" /> の作成に使用する既存の <see langword="DBDataPermission" />。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>
        <see langword="DBDataPermission" /> を指定して、<see langword="DBDataPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAttribute">カスタム セキュリティ属性に関連付けられたセキュリティ アクション。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定した <see cref="T:System.Security.Permissions.PermissionState" /> 値を使用して、<see langword="DBDataPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>指定した <see cref="T:System.Security.Permissions.PermissionState" /> 値、および空白のパスワードを許可するかどうかを指定する値を使用して、<see langword="DBDataPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <param name="allowBlankPassword">空白のパスワードが許可されることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>
        <see langword="DBDataPermission" /> の既存の状態に、指定した接続文字列が表すアクセス権を追加します。</summary>
      <param name="connectionString">使用できる接続文字列。</param>
      <param name="restrictions">接続文字列のパラメーターが許可されるか禁止されるかを識別する文字列。</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> プロパティの 1 つ。</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>空白のパスワードを許可するかどうかを示す値を取得します。</summary>
      <returns>空白のパスワードを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>以前に <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" /> メソッドを使用して追加したすべての許可を削除します。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>現在のアクセス許可オブジェクトのコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>
        <see langword="DBDataPermission" /> クラスの新しいインスタンスを作成します。</summary>
      <returns>新しい <see langword="DBDataPermission" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="securityElement">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの積集合を表す、新しいアクセス許可オブジェクトを返します。</summary>
      <param name="target">現在のアクセス許可オブジェクトとの積集合を持つアクセス許可オブジェクト。 このオブジェクトは、現在のアクセス許可オブジェクトと同じ型である必要があります。</param>
      <returns>現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの積集合を表す新しいアクセス許可オブジェクト。 積集合が空の場合、この新しいアクセス許可オブジェクトは null 参照 (Visual Basic の場合は <see langword="Nothing" />) になります。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターは、null 参照 (Visual Basic の場合は <see langword="Nothing" />) ではなく、現在のアクセス許可オブジェクトと同じクラスのインスタンスではありません。</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトが、指定したアクセス許可オブジェクトのサブセットかどうかを示す値を返します。</summary>
      <param name="target">サブセットの関係を調べる対象のアクセス許可オブジェクト。 このオブジェクトは、現在のアクセス許可オブジェクトと同じ型であることが必要です。</param>
      <returns>現在のアクセス許可オブジェクトが、指定したアクセス許可オブジェクトのサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが、現在のアクセス許可オブジェクトと異なる型のオブジェクトを指定しています。</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>アクセス許可のセマンティクスがわからなくてもアクセス許可を無制限として表すことができるかどうかを示す値を返します。</summary>
      <returns>アクセス許可を無制限として表すことができる場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合である、新しいアクセス許可オブジェクトを返します。</summary>
      <param name="target">現在のアクセス許可オブジェクトと結合されるアクセス許可オブジェクト。 このオブジェクトは、現在のアクセス許可オブジェクトと同じ型である必要があります。</param>
      <returns>現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合を表す新しいアクセス許可オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> オブジェクトが、現在のアクセス許可オブジェクトと同じ型ではありません。</exception>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>セキュリティ アクションをカスタム セキュリティ属性に関連付けます。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.Common.DBDataPermissionAttribute" />の新しいインスタンスを初期化します。</summary>
      <param name="action">宣言セキュリティを使用して実行できる操作を表すセキュリティ アクション値の 1 つ。</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>空白のパスワードを許可するかどうかを示す値を取得または設定します。</summary>
      <returns>空白のパスワードを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>許可された接続文字列を取得または設定します。</summary>
      <returns>使用できる接続文字列。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>
        <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> プロパティで指定された接続文字列パラメーターのリストだけが、接続文字列パラメーターとして許可されるかどうかを指定します。</summary>
      <returns>
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>許可されている、または許可されていない接続文字列を取得または設定します。</summary>
      <returns>許可されている、または許可されていない 1 つ以上の接続文字列パラメーター。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>属性が接続文字列をシリアル化する必要があるかどうかを指定します。</summary>
      <returns>属性が接続文字列をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>属性がキーの制限のセットをシリアル化する必要があるかどうかを指定します。</summary>
      <returns>属性がキーの制限のセットをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>.NET Framework ODBC 用データ プロバイダーで、ODBC データ ソースへのアクセスに関するセキュリティ レベルをユーザーに適切に割り当てることができるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> クラスの新しいインスタンスを <see cref="T:System.Security.Permissions.PermissionState" /> の値のいずれかで初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see langword="System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <param name="allowBlankPassword">空白のパスワードを許可するかどうかを示します。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>アクセス許可の既存の状態に、指定した接続文字列が表すアクセス権を追加します。</summary>
      <param name="connectionString">使用できる接続文字列。</param>
      <param name="restrictions">接続文字列のパラメーターが許可されるか禁止されるかを識別する文字列。</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> を <see cref="T:System.Security.IPermission" /> として返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>セキュリティ アクションをカスタム セキュリティ属性に関連付けます。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> クラスの新しいインスタンスを <see cref="T:System.Security.Permissions.SecurityAction" /> の値のいずれかで初期化します。</summary>
      <param name="action">宣言方セキュリティを使用して実行できるアクションを表す <see cref="T:System.Security.Permissions.SecurityAction" /> の値のいずれか。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>属性プロパティに従って設定された <see cref="T:System.Data.Odbc.OdbcPermission" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>.NET Framework OLE DB 用データ プロバイダーで、OLE DB データ ソースへのアクセスに関するセキュリティ レベルをユーザーに適切に割り当てることができるようにします。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <param name="allowBlankPassword">空白のパスワードを許可するかどうかを示します。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> を <see cref="T:System.Security.IPermission" /> として返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>このプロパティは互換性のために残されています。 このプロパティを設定しても効果はありません。</summary>
      <returns>このプロパティは互換性のために残されています。 このプロパティを設定しても効果はありません。</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>セキュリティ アクションをカスタム セキュリティ属性に関連付けます。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">宣言方セキュリティを使用して実行できるアクションを表す <see cref="T:System.Security.Permissions.SecurityAction" /> の値のいずれか。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>属性プロパティに従って設定された <see cref="T:System.Data.OleDb.OleDbPermission" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>サポートされるプロバイダーのリストを示すコンマ区切り文字列を取得または設定します。</summary>
      <returns>セキュリティ ポリシーによって許可されているプロバイダーのコンマ区切りのリスト。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>.NET Framework Oracle 用データ プロバイダーで、Oracle データベースへのアクセスに関するセキュリティ レベルをユーザーに適切に割り当てることができるようにします。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Data.OracleClient.OraclePermission" /> クラスの新しいインスタンスを <see cref="T:System.Security.Permissions.PermissionState" /> の値のいずれかで初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>新しい権限のセットを作成します。</summary>
      <param name="connectionString">接続文字列。</param>
      <param name="restrictions">キーの制限。</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 列挙値の 1 つ。</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>空白のパスワードを許可するかどうかを示す値を取得します。</summary>
      <returns>空白のパスワードを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>派生クラスにより実装されると、現在のアクセス許可オブジェクトの同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>派生クラスでオーバーライドされると、XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> 式。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>派生クラスによって実装されるときに、現在のアクセス許可と、指定したアクセス許可の積集合で構成されるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>派生クラスによって実装されるときに、現在のアクセス許可が、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>アクセス許可のセマンティクスがわからなくてもアクセス許可を無制限として表すことができるかどうかを示す値を返します。</summary>
      <returns>アクセス許可を無制限として表すことができる場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>セキュリティ アクションをカスタム セキュリティ属性に関連付けます。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">宣言方セキュリティを使用して実行できるアクションを表す <see cref="T:System.Security.Permissions.SecurityAction" /> の値のいずれか。</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>空白のパスワードを許可するかどうかを示す値を取得または設定します。</summary>
      <returns>空白のパスワードを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>許可された接続文字列を取得または設定します。</summary>
      <returns>使用できる接続文字列。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>属性プロパティに従って設定された <see cref="T:System.Data.OracleClient.OraclePermission" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OraclePermission" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>
        <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> プロパティで指定された接続文字列パラメーターのリストだけが、接続文字列パラメーターとして許可されるかどうかを指定します。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>許可されている、または許可されていない接続文字列を取得または設定します。</summary>
      <returns>許可されている、または許可されていない 1 つ以上の接続文字列パラメーター。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>属性が接続文字列をシリアル化する必要があるかどうかを指定します。</summary>
      <returns>属性が接続文字列をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>属性がキーの制限のセットをシリアル化する必要があるかどうかを指定します。</summary>
      <returns>属性がキーの制限のセットをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>.NET Framework SQL Server 用データ プロバイダーで、データ ソースへのアクセスに関するセキュリティ レベルをユーザーに適切に割り当てることができるようにします。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <param name="allowBlankPassword">空白のパスワードを許可するかどうかを示します。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>新しい接続文字列および予約キーワードのセットを <see cref="T:System.Data.SqlClient.SqlClientPermission" /> オブジェクトに追加します。</summary>
      <param name="connectionString">接続文字列。</param>
      <param name="restrictions">キーの制限。</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> を <see cref="T:System.Security.IPermission" /> として返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>セキュリティ アクションをカスタム セキュリティ属性に関連付けます。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">宣言方セキュリティを使用して実行できるアクションを表す <see cref="T:System.Security.Permissions.SecurityAction" /> の値のいずれか。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>属性プロパティに従って設定された <see cref="T:System.Data.SqlClient.SqlClientPermission" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary>イベント ログに対するコード アクセス許可を制御します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>使用するコンピューターの名前とアクセス レベルを指定して、<see cref="T:System.Diagnostics.EventLogPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">アクセス レベルを指定する列挙値の 1 つ。</param>
      <param name="machineName">イベントを読み取るコンピューターまたは書き込むコンピューターの名前。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>アクセス許可エントリを指定して、<see cref="T:System.Diagnostics.EventLogPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccessEntries">アクセス許可エントリを表すオブジェクトの配列。 <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> プロパティは、この値に設定されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>アクセス許可の状態を指定して、<see cref="T:System.Diagnostics.EventLogPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">アクセス許可状態 (リソースへのフル アクセスまたはアクセスなし) を指定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary>アクセス許可要求に対するアクセス許可エントリのコレクションを取得します。</summary>
      <returns>アクセス許可要求に対するアクセス許可エントリが格納されているコレクション。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> アクセス許可クラスによって使用されるアクセス レベルを定義します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> では、イベント ソースの作成、既存のログの読み取り、イベント ソースまたはログの削除、エントリへの応答、イベント ログの消去、イベントの待機、および全イベント ログのコレクションへのアクセスができます。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> では、既存のログの読み取り、イベント ソースまたはログの削除、エントリへの応答、イベント ログの消去、イベントの待機、および全イベント ログのコレクションへのアクセスができます。 <see langword="Note" /> このメンバーは今後は使用しません。代わりに <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> を使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> では、既存のログを読み取ることができます。 <see langword="Note" /> このメンバーは今後は使用しません。代わりに <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> を使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> では、既存のログの読み取りまたは書き込みと、イベント ソースおよびイベント ログの作成を行うことができます。 <see langword="Note" /> このメンバーは今後は使用しません。代わりに <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> を使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> にはアクセス許可がありません。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> では、既存のログへの書き込みと、イベント ソースおよびイベント ログの作成を行うことができます。</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary>イベント ログに対する宣言アクセス許可チェックを可能にします。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary>
        <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> プロパティと対象となる属性の <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> プロパティを通じて設定される、要求されているアクセス レベルに基づいて、アクセス許可を作成します。</summary>
      <returns>作成されたアクセス許可を表す <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary>イベントを読み取るコンピューターの名前を取得または設定します。</summary>
      <returns>イベントを読み取るコンピューターの名前。 既定値は "." です。</returns>
      <exception cref="T:System.ArgumentException">コンピューター名が無効です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary>アクセス許可要求で使用されるアクセス レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> です。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> に対して設定するコード アクセス セキュリティ許可の最小単位を定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 値のビットごとの組み合わせ。 <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> プロパティは、この値に設定されます。</param>
      <param name="machineName">イベントを読み取るコンピューターまたは書き込むコンピューターの名前。 <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> プロパティは、この値に設定されます。</param>
      <exception cref="T:System.ArgumentException">コンピューター名が無効です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary>イベントを読み取るコンピューターまたは書き込むコンピューターの名前を取得します。</summary>
      <returns>イベントを読み取るコンピューターまたは書き込むコンピューターの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary>アクセス許可要求に使用するアクセス許可のアクセス レベルを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> オブジェクトの厳密に型指定されたコレクションを格納します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary>指定した <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> をコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</param>
      <returns>追加された <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> の 0 から始まるインデックス番号。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>指定した一連のアクセス許可エントリをコレクションに追加します。</summary>
      <param name="value">追加するアクセス許可エントリを格納している <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 型オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary>指定した一連のアクセス許可エントリをコレクションに追加します。</summary>
      <param name="value">追加するアクセス許可エントリを格納している <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary>指定した <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> がコレクションに格納されているかどうかを確認します。</summary>
      <param name="value">検索する <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</param>
      <returns>指定した <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> がコレクションに属している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary>配列内の特定のインデックスを開始位置として、その配列にコレクションからアクセス許可エントリをコピーします。</summary>
      <param name="array">このコレクションのアクセス許可エントリを受け取る <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 型の配列。</param>
      <param name="index">アクセス許可エントリのコピーを開始する位置を示す 0 から始まるインデックス番号。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary>コレクション内の指定したアクセス許可エントリのインデックスを確認します。</summary>
      <param name="value">検索対象のアクセス許可エントリ。</param>
      <returns>指定したアクセス許可エントリの 0 から始まるインデックス。コレクション内でアクセス許可エントリが見つからなかった場合は -1。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary>コレクションの指定したインデックス位置にアクセス許可エントリを挿入します。</summary>
      <param name="index">アクセス許可エントリを挿入する位置を示す、コレクション内の 0 から始まるインデックス番号。</param>
      <param name="value">コレクションに挿入するアクセス許可エントリ。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary>指定したインデックスにあるオブジェクトを取得または設定します。</summary>
      <param name="index">コレクションの 0 から始まるインデックス。</param>
      <returns>指定したインデックスにある <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary>コレクションの内容を消去した後に、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>コレクションに新しいアクセス許可エントリが挿入される前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" />を挿入する位置の、0 以上のインデックス。</param>
      <param name="value">
        <paramref name="index" /> にあるアクセス許可エントリの新しい値。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>コレクションから新しいアクセス許可エントリを削除する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="value">
        <paramref name="index" /> から削除するアクセス許可エントリ。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>コレクションに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="oldValue" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="oldValue">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue">
        <paramref name="index" /> にあるアクセス許可エントリの新しい値。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary>指定したアクセス許可エントリをコレクションから削除します。</summary>
      <param name="value">削除するアクセス許可エントリ。</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> に対するコード アクセス権の制御を可能にします。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>アクセス レベル、使用するコンピューターの名前、およびパフォーマンス カウンターに関連付けられているカテゴリを指定して、<see cref="T:System.Diagnostics.PerformanceCounterPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 値のいずれか。</param>
      <param name="machineName">パフォーマンス カウンターと、それに関連付けられているカテゴリが存在するサーバー。</param>
      <param name="categoryName">パフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>アクセス許可のアクセス レベル エントリを指定して、<see cref="T:System.Diagnostics.PerformanceCounterPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccessEntries">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクトの配列。 <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> プロパティは、この値に設定されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>アクセス許可の状態を指定して、<see cref="T:System.Diagnostics.PerformanceCounterPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary>アクセス許可要求に対するアクセス許可エントリのコレクションを取得します。</summary>
      <returns>アクセス許可要求に対するアクセス許可エントリが格納されている <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> アクセス許可クラスによって使用されるアクセス レベルを定義します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> では、カテゴリの読み取り、書き込み、および作成ができます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> は、カテゴリを読み取ることができます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> は、カテゴリを読み取り、書き込むことができます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> にはアクセス許可がありません。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> は、カテゴリを読み取ることができます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> は、カテゴリを書き込むことができます。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary>宣言パフォーマンス カウンターのアクセス許可チェックを可能にします。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary>パフォーマンス カウンター カテゴリの名前を取得または設定します。</summary>
      <returns>パフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</returns>
      <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary>属性の <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> プロパティを使用して設定される、要求されたアクセス レベルに基づいてアクセス許可を作成します。</summary>
      <returns>作成されたアクセス許可を表す <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary>パフォーマンス カウンターのコンピューター名を取得または設定します。</summary>
      <returns>パフォーマンス カウンターのカテゴリが格納されているサーバー。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> の書式が無効です。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary>アクセス許可要求で使用されるアクセス レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> です。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> に対して設定するコード アクセス セキュリティ アクセス許可の最小単位を定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 値のビットごとの組み合わせ。 <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> プロパティは、この値に設定されます。</param>
      <param name="machineName">パフォーマンス カウンターのカテゴリが格納されているサーバー。</param>
      <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> は <see langword="null" />です。

または -
<paramref name="machineName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionAccess" /> は有効な <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 値ではありません。

または -
<paramref name="machineName" /> が有効なコンピューター名ではありません。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary>パフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前を取得します。</summary>
      <returns>パフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary>パフォーマンス カウンターのカテゴリが格納されているサーバーの名前を取得します。</summary>
      <returns>カテゴリが格納されているサーバーの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary>エントリのアクセス許可のアクセス レベルを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary>厳密に型指定された <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクトのコレクションを格納します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>指定した <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> をコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクト。</param>
      <returns>追加された <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクトの 0 から始まるインデックス番号。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>指定した一連のアクセス許可エントリをコレクションに追加します。</summary>
      <param name="value">追加するアクセス許可エントリを格納している <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 型オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary>指定した一連のアクセス許可エントリをコレクションに追加します。</summary>
      <param name="value">追加するアクセス許可エントリを格納している <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>指定した <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクトがコレクションに格納されているかどうかを確認します。</summary>
      <param name="value">検索する <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクトがコレクションに属している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary>配列内の特定のインデックスを開始位置として、その配列にコレクションからアクセス許可エントリをコピーします。</summary>
      <param name="array">このコレクションのアクセス許可エントリを受け取る <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 型の配列。</param>
      <param name="index">アクセス許可エントリのコピーを開始する位置を示す 0 から始まるインデックス番号。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>コレクション内の指定したアクセス許可エントリのインデックスを確認します。</summary>
      <param name="value">検索対象のアクセス許可エントリ。</param>
      <returns>指定したアクセス許可エントリの 0 から始まるインデックス。コレクション内でアクセス許可エントリが見つからなかった場合は -1。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>コレクションの指定したインデックス位置にアクセス許可エントリを挿入します。</summary>
      <param name="index">アクセス許可エントリを挿入する位置を示す、コレクション内の 0 から始まるインデックス番号。</param>
      <param name="value">コレクションに挿入するアクセス許可エントリ。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary>指定したインデックスにあるオブジェクトを取得または設定します。</summary>
      <param name="index">コレクションの 0 から始まるインデックス。</param>
      <returns>指定されたインデックスにある <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary>コレクションの内容を消去した後に、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>コレクションに新しいアクセス許可エントリが挿入される前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" />を挿入する位置の、0 以上のインデックス。</param>
      <param name="value">
        <paramref name="index" /> にあるアクセス許可エントリの新しい値。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>コレクションから新しいアクセス許可エントリを削除する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="value">
        <paramref name="index" /> から削除するアクセス許可エントリ。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>コレクションに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="oldValue" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="oldValue">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue">
        <paramref name="index" /> にあるアクセス許可エントリの新しい値。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>指定したアクセス許可エントリをコレクションから削除します。</summary>
      <param name="value">削除するアクセス許可エントリ。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>プリンターへのアクセスを制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>印刷アクセスのレベルを指定して、<see cref="T:System.Drawing.Printing.PrintingPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="printingLevel">
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定に従って完全に制限されているか、または無制限のアクセスを持つ、<see cref="T:System.Drawing.Printing.PrintingPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効な <see cref="T:System.Security.Permissions.PermissionState" /> ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>現在のアクセス許可オブジェクトのコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="element">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトと、対象となるアクセス許可オブジェクトの積集合であるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可オブジェクトと同じ型のアクセス許可オブジェクト。</param>
      <returns>現在のオブジェクトと指定したオブジェクトの積集合を表す新しいアクセス許可オブジェクト。 積集合が空の場合、このオブジェクトは <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> は、現在のアクセス許可オブジェクトと異なる型のオブジェクトです。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトが、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる対象のアクセス許可オブジェクト。 このオブジェクトは、現在のアクセス許可オブジェクトと同じ型であることが必要です。</param>
      <returns>現在のアクセス許可オブジェクトが <paramref name="target" /> のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> は、現在のアクセス許可オブジェクトと異なる型のオブジェクトです。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>アクセス許可が無制限かどうかを示す値を取得します。</summary>
      <returns>アクセス許可が無制限の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>コードの印刷アクセスのレベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>アクセス許可オブジェクトと指定したアクセス許可オブジェクトを組み合わせたアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可オブジェクトと同じ型のアクセス許可オブジェクト。</param>
      <returns>現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合を表す新しいアクセス許可オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> は、現在のアクセス許可オブジェクトと異なる型のオブジェクトです。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>宣言印刷アクセス許可チェックができるようになります。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>要求されたアクセス レベルに基づいてアクセス許可を作成します。このアクセス レベルは、属性の <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> プロパティで設定されます。</summary>
      <returns>作成されたアクセス許可を表す <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>許可された印刷の種類を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 値のいずれか 1 つ。</returns>
      <exception cref="T:System.ArgumentException">値が、<see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 値ではありません。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>コードが実行を許可される印刷の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>すべてのプリンターに対してフル アクセスを与えます。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>既定のプリンターでの印刷をプログラム化します。部分的に制限されたダイアログ ボックスを使用して安全な印刷が行われます。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> は <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /> のサブセットです。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>プリンターへのアクセスを防止します。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> は <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> のサブセットです。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>制限されたダイアログ ボックスからの印刷だけが許可されます。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> は <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> のサブセットです。</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary>ネットワーク上のドメイン ネーム システム (DNS: Domain Name System) サーバーへのアクセス許可を制御します。</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>無制限の DNS アクセスを許可するか、DNS アクセスを禁止する <see cref="T:System.Net.DnsPermission" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効な <see cref="T:System.Security.Permissions.PermissionState" /> 値ではありません。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary>現在のアクセス許可インスタンスのコピーを作成します。</summary>
      <returns>現在のインスタンスのコピーである <see cref="T:System.Net.DnsPermission" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから <see cref="T:System.Net.DnsPermission" /> インスタンスを再構築します。</summary>
      <param name="securityElement">
        <see cref="T:System.Net.DnsPermission" /> インスタンスの再構築に使用する XML エンコーディング。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が <see cref="T:System.Net.DnsPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可インスタンスと指定したアクセス許可インスタンスの積集合を表すアクセス許可インスタンスを作成します。</summary>
      <param name="target">現在のインスタンスと積集合を持つ <see cref="T:System.Net.DnsPermission" /> インスタンス。</param>
      <returns>現在の <see cref="T:System.Net.DnsPermission" /> インスタンスと指定した <see cref="T:System.Net.DnsPermission" /> インスタンスの積集合を表す <see cref="T:System.Net.DnsPermission" /> インスタンス。または、積集合がない場合は <see langword="null" />。 現在のインスタンスと <paramref name="target" /> の両方が無制限である場合、このメソッドは新しい無制限の <see cref="T:System.Net.DnsPermission" /> インスタンスを返します。それ以外の場合は、<see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.DnsPermission" /> でも <see langword="null" /> でもありません。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可インスタンスが、指定したアクセス許可インスタンスのサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる 2 番目の <see cref="T:System.Net.DnsPermission" /> インスタンス。</param>
      <returns>現在のインスタンスが無制限で、<paramref name="target" /> が <see langword="false" /> または無制限のいずれかの場合は <see langword="null" />。それ以外の場合は <see langword="true" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.DnsPermission" /> でも <see langword="null" /> でもありません。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary>オブジェクトの全般的なアクセス許可状態をチェックします。</summary>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> インスタンスが <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> で作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary>
        <see cref="T:System.Net.DnsPermission" /> インスタンスとその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>ステータス情報を含むセキュリティ オブジェクトの XML でエンコードされた表現を格納している <see cref="T:System.Security.SecurityElement" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可インスタンスと指定したアクセス許可インスタンスの和集合を表すアクセス許可インスタンスを作成します。</summary>
      <param name="target">現在のインスタンスと組み合わせる <see cref="T:System.Net.DnsPermission" /> インスタンス。</param>
      <returns>現在の <see cref="T:System.Net.DnsPermission" /> インスタンスと指定した <see cref="T:System.Net.DnsPermission" /> インスタンスの和集合を表す <see cref="T:System.Net.DnsPermission" /> インスタンス。 <paramref name="target" /> が <see langword="null" /> の場合、このメソッドは現在のインスタンスのコピーを返します。 現在のインスタンスまたは <paramref name="target" /> が無制限である場合、このメソッドは無制限の <see cref="T:System.Net.DnsPermission" /> インスタンスを返します。それ以外の場合は、制限付きの <see cref="T:System.Net.DnsPermission" /> インスタンスを返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.DnsPermission" /> でも <see langword="null" /> でもありません。</exception>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary>ドメイン ネーム サーバーの情報を要求するためのアクセス許可を指定します。</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Security.Permissions.SecurityAction" /> 値を使用して、<see cref="T:System.Net.DnsPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> パラメーターが正しい <see cref="T:System.Security.Permissions.SecurityAction" /> ではありません。</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Net.DnsPermission" /> クラスの新しいインスタンスを作成して返します。</summary>
      <returns>セキュリティ宣言に対応する <see cref="T:System.Net.DnsPermission" />。</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> インスタンスが承認するエンドポイントを定義します。</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary>指定した <see langword="Object" /> が現在の <see langword="Object" /> と等しいかどうかを示します。</summary>
      <param name="obj">現在の <see cref="T:System.Object" /> と比較する <see langword="Object" />。</param>
      <returns>指定した <see langword="true" /> が現在の <see langword="Object" /> と等しい場合は <see langword="Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary>特定の型のハッシュ関数として機能します。</summary>
      <returns>現在の <see cref="T:System.Object" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary>エンドポイントに関連付けられているサーバーの DNS ホスト名または IP アドレスを取得します。</summary>
      <returns>サーバーの DNS ホスト名または IP アドレスを格納する文字列。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary>エンドポイントに関連付けられているネットワーク ポート番号を取得します。</summary>
      <returns>要求に関連付けられているネットワーク ポート番号または <see cref="F:System.Net.SocketPermission.AllPorts" />。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary>エンドポイントに関連付けられているトランスポート タイプを取得します。</summary>
      <returns>
        <see cref="T:System.Net.TransportType" /> 値のいずれか。</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>SMTP (Simple Mail Transport Protocol) サーバーに対するアクセス許可のレベルを指定します。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>既定のポート (ポート 25) で SMTP ホストに接続する。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>任意のポートで SMTP ホストに接続する。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>SMTP ホストにアクセスしない。</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>SMTP (Simple Mail Transport Protocol) サーバーへのアクセスを制御します。</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>状態を指定して、<see cref="T:System.Net.Mail.SmtpPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="unrestricted">新しいアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>アクセス レベルを指定して、<see cref="T:System.Net.Mail.SmtpPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>アクセス許可の状態値を指定して、<see cref="T:System.Net.Mail.SmtpPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>アクセス許可によって制御される SMTP サーバーへのアクセス レベルを取得します。</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpAccess" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>指定したアクセス レベルの値をアクセス許可に追加します。</summary>
      <param name="access">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可と同一の <see cref="T:System.Net.Mail.SmtpPermission" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>指定した XML エンコーディングを使用するアクセス許可の状態を設定します。</summary>
      <param name="securityElement">現在のアクセス許可の状態を設定するために使用する XML エンコーディング。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> には <see cref="T:System.Net.Mail.SmtpPermission" /> オブジェクトを記述しません。

または -
<paramref name="securityElement" /> には、アクセス許可を再構築するために必要な状態情報は含まれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との積集合を持つ <see cref="T:System.Security.IPermission" />。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の積集合を表す <see cref="T:System.Net.Mail.SmtpPermission" />。 積集合が空であるか、<paramref name="target" /> が <see langword="null" /> の場合は、<see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.Mail.SmtpPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットかどうかを示す値を返します。</summary>
      <param name="target">サブセットの関係を調べる対象の <see cref="T:System.Security.IPermission" />。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.Mail.SmtpPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>アクセス許可の状態の XML エンコーディングを作成します。</summary>
      <returns>現在のアクセス許可の XML エンコーディングを格納している <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可との積集合を持つ <see cref="T:System.Security.IPermission" />。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の和集合を表す新しい <see cref="T:System.Net.Mail.SmtpPermission" /> アクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.Mail.SmtpPermission" /> ではありません。</exception>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>SMTP (Simple Mail Transport Protocol) サーバーへのアクセスを制御します。</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Net.Mail.SmtpPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">アクセス許可の動作を指定する <see cref="T:System.Security.Permissions.SecurityAction" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> は有効な <see cref="T:System.Security.Permissions.SecurityAction" /> ではありません。</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>属性によって制御される SMTP サーバーへのアクセス レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.String" /> 値。 有効値は "Connect" と "None" です。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>アセンブリのメタデータ内の <see cref="T:System.Security.Permissions.SecurityAction" /> で格納できるアクセス許可オブジェクトを作成します。</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" /> インスタンス。</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>ネットワーク アクセス許可を指定します。</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>アプリケーションが、インターネットからのローカル リソースへの接続の受け入れを許可されていることを示します。 これは、Accept を使用してローカル リソース (アドレス/ポート) へのアクセスを許可するローカル ホストを保護します。 ソケットがこのローカル リソースにバインドしようとするときに、アクセス許可がチェックされ、そのリソースに Accept が存在するかどうかが確認されます。</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>アプリケーションが、固有のインターネット リソースへの接続を許可されていることを示します。 リモート ホスト リソースの場合は、Connect アクセス許可が存在するかどうかは確認されません。 これは接続リモート ホストのポートが不明なためであり、適切なアクセス許可をあらかじめ構築できるからではありません。 待機中のソケットに接続しようとしているリモート ホストのアクセス許可のチェックは、アプリケーションで行う必要があります。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>ネットワーク インターフェイスに関する情報およびトラフィック統計情報にアクセスするためのアクセス許可を指定します。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>ネットワーク情報にアクセスできません。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>ネットワーク情報への Ping アクセス。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>ネットワーク情報への読み取りアクセス。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>ローカル コンピューターのネットワーク情報とトラフィック統計情報へのアクセスを制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>指定した <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 値を使用して、<see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> の値の 1 つ。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定した <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> を使用して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>このアクセス許可によって制御されるネットワーク情報へのアクセス レベルを取得します。</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> の値の 1 つ。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>指定した値を、このアクセス許可に追加します。</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> の値の 1 つ。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>このアクセス許可と同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可と同一の <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /></returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>指定した XML エンコーディングを使用して、このアクセス許可の状態を設定します。</summary>
      <param name="securityElement">現在のアクセス許可の状態を設定するために使用する XML エンコーディングを格納する <see cref="T:System.Security.SecurityElement" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> は、アクセス許可のエンコーディングではありません。

または -
<paramref name="securityElement" /> は、<see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> のエンコーディングではありません。

または -
<paramref name="securityElement" /> に無効な <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 値があります。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との積集合を持つ <see cref="T:System.Security.IPermission" />。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の積集合を表す <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />。 積集合が空か <see langword="null" /> が <paramref name="target" /> の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる対象の <see cref="T:System.Security.IPermission" />。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>このアクセス許可の状態の XML エンコーディングを作成します。</summary>
      <returns>現在のアクセス許可の XML エンコーディングを格納している <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>このアクセス許可と指定したアクセス許可の和集合を表すアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合する <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> アクセス許可。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">アクセス許可の動作を指定する <see cref="T:System.Security.Permissions.SecurityAction" /> 値。</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>ネットワーク情報のアクセス レベルを取得または設定します。</summary>
      <returns>アクセスレベルを指定する文字列。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> オブジェクトを作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>
        <see cref="N:System.Net.PeerToPeer.Collaboration" /> オブジェクトのアクセス許可を定義する値、またはこのオブジェクトのアクセス許可で使用される値を指定します。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />の新しいインスタンスを初期化します。 コンストラクターが呼び出されるときに、このインスタンスの初期の <see cref="T:System.Security.Permissions.PermissionState" /> が渡されます。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値の値の 1 つ。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> のコピーを作成して返します。</summary>
      <returns>
        <see cref="T:System.Object" /> の現在のインスタンスのコピーが格納された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>セキュリティ オブジェクトのエンコーディングの XML オブジェクト モデルを表します。</summary>
      <param name="e">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentException">パラメーターが、有効なアクセス許可要素ではありません。

または -

パラメーターが、有効な型またはクラスを含んでいません。

または -

パラメーターのバージョン番号がサポートされていません。</exception>
      <exception cref="T:System.ArgumentNullException">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> と指定した <paramref name="target" /> アクセス許可の積集合を表すアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可を持つ <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> へのアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> と指定した <paramref name="target" /> の積集合を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) になります。</returns>
      <exception cref="T:System.ArgumentException">指定するパラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) ではなく、現在のアクセス許可と同じクラスのインスタンスではありません。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> が、指定した <paramref name="target" /> アクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる対象のアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> が無制限かどうかを指定する値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> とその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> と指定した <paramref name="target" /> アクセス許可の和集合を表すアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> と指定したアクセス許可の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値を指定します。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.IPermission" /> を作成して返します。</summary>
      <returns>新しい <see cref="T:System.Security.IPermission" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>
        <see cref="N:System.Net.PeerToPeer" /> オブジェクトのアクセス許可で使用される値を指定します。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定した初期アクセス許可状態を使用して、<see cref="T:System.Net.PeerToPeer.PnrpPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値の値の 1 つ。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> のコピーを作成して返します。</summary>
      <returns>インスタンスに <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> の現在のインスタンスのコピーを格納している、IPermission インターフェイスを持つオブジェクト。</returns>
      <exception cref="T:System.ArgumentException">パラメーターが有効な <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 要素ではありません。

または -

パラメーターのバージョン番号がサポートされていません。</exception>
      <exception cref="T:System.ArgumentNullException">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentException">パラメーターが有効な <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 要素ではありません。

または -

パラメーターのバージョン番号がサポートされていません。</exception>
      <exception cref="T:System.ArgumentNullException">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> と指定したアクセス許可の積集合を表すアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> を実行するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> と指定したアクセス許可の積集合を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) になります。</returns>
      <exception cref="T:System.ArgumentException">指定するパラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) ではなく、現在のアクセス許可と同じクラスのインスタンスではありません。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> が、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる対象のアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">指定するパラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) ではなく、現在のアクセス許可と同じクラスのインスタンスではありません。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> が無制限かどうかを指定する値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>
        <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> とその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>アクセス許可のステータス情報を含むアクセス許可の XML エンコーディングを格納している <see cref="T:System.Security.SecurityElement" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> と指定したアクセス許可の和集合を表すアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> と指定したアクセス許可の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが無効です。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>
        <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値の 1 つ。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.IPermission" /> を作成して返します。</summary>
      <returns>新しい <see cref="T:System.Security.IPermission" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>PNRP クラウドのさまざまなスコープを指定します。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>すべての IP アドレスを PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録できます。 任意のスコープとすべてのスコープとの間に違いはありません。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>スコープはグローバルです。すべての有効な IP アドレスを PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録できます。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>スコープはリンクローカルです。ローカル エリア サブネットに対して定義された IP アドレスだけを PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録できます。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>スコープはサイトローカルです。サイトに対して定義された IP アドレスだけを PNRP に登録できます。</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>トランスポート アドレス上で接続を確立または受け入れるための権限を制御します。</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>指定したトランスポート アドレスと指定したアクセス許可で、<see cref="T:System.Net.SocketPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> 値のいずれか 1 つ。</param>
      <param name="transport">
        <see cref="T:System.Net.TransportType" /> 値のいずれか 1 つ。</param>
      <param name="hostName">トランスポート アドレスのホスト名。</param>
      <param name="portNumber">トランスポート アドレスのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> への無制限のアクセスを許可するか、<see cref="T:System.Net.Sockets.Socket" /> へのアクセスを禁止する <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>このアクセス許可インスタンスの制約下で受け入れられるエンドポイントを識別する <see cref="T:System.Net.EndpointPermission" /> インスタンスの一覧を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> インスタンスを格納している <see cref="T:System.Net.EndpointPermission" /> インターフェイスを実装するインスタンス。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>トランスポート アドレスのアクセス許可のセットにアクセス許可を追加します。</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> 値のいずれか。</param>
      <param name="transport">
        <see cref="T:System.Net.TransportType" /> 値のいずれか 1 つ。</param>
      <param name="hostName">トランスポート アドレスのホスト名。</param>
      <param name="portNumber">トランスポート アドレスのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>すべてのポートを表す定数を定義します。</summary>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>このアクセス許可インスタンスの制約下で接続できるエンドポイントを識別する <see cref="T:System.Net.EndpointPermission" /> インスタンスの一覧を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> インスタンスを格納している <see cref="T:System.Net.EndpointPermission" /> インターフェイスを実装するインスタンス。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> インスタンスのコピーを作成します。</summary>
      <returns>現在のインスタンスのコピーである <see cref="T:System.Net.SocketPermission" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディング用の <see cref="T:System.Net.SocketPermission" /> インスタンスを再構築します。</summary>
      <param name="securityElement">
        <see cref="T:System.Net.SocketPermission" /> インスタンスの再構築に使用する XML エンコーディング。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が、この種類のアクセス許可要素ではありません。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>2 つの <see cref="T:System.Net.SocketPermission" /> インスタンス間の論理積集合を返します。</summary>
      <param name="target">現在のインスタンスと積集合を持つ <see cref="T:System.Net.SocketPermission" /> インスタンス。</param>
      <returns>2 つの <see cref="T:System.Net.SocketPermission" /> インスタンスの積集合を表す <see cref="T:System.Net.SocketPermission" /> インスタンス。 積集合が空の場合、このメソッドは <see langword="null" /> を返します。 <paramref name="target" /> パラメーターが null 参照の場合、このメソッドは <see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see cref="T:System.Net.SocketPermission" /> ではありません。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> が、メソッドの呼び出し側では付与されていません。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる対象の <see cref="T:System.Net.SocketPermission" />。</param>
      <returns>
        <paramref name="target" /> が <see langword="null" /> で、現在のインスタンスがアクセス許可を定義していない場合、このメソッドは <see langword="true" /> を返します。それ以外の場合は、<see langword="false" /> を返します。 <paramref name="target" /> が <see langword="null" /> ではなく、現在のインスタンスが <paramref name="target" /> のアクセス許可のサブセットを定義している場合は、<see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.Sockets.SocketException" /> ではありません。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> が、メソッドの呼び出し側では付与されていません。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>オブジェクトの全般的なアクセス許可状態をチェックします。</summary>
      <returns>
        <see cref="T:System.Net.SocketPermission" /> インスタンスが <see cref="T:System.Security.Permissions.PermissionState" /> の <see langword="true" /> 値で作成された場合は <see langword="Unrestricted" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> インスタンスとその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>状態情報を含む <see cref="T:System.Security.SecurityElement" /> インスタンスの XML エンコードされた表現を格納する <see cref="T:System.Net.SocketPermission" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>2 つの <see cref="T:System.Net.SocketPermission" /> インスタンス間の論理和集合を返します。</summary>
      <param name="target">現在のインスタンスと組み合わせる <see cref="T:System.Net.SocketPermission" /> インスタンス。</param>
      <returns>2 つの <see cref="T:System.Net.SocketPermission" /> インスタンスの和集合を表す <see cref="T:System.Net.SocketPermission" /> インスタンス。 <paramref name="target" /> が <see langword="null" /> の場合、このパラメーターは現在のインスタンスのコピーを返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Net.SocketPermission" /> ではありません。</exception>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 接続を制御するセキュリティ アクションを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Security.Permissions.SecurityAction" /> 値を使用して、<see cref="T:System.Net.SocketPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> は有効な <see cref="T:System.Security.Permissions.SecurityAction" /> 値ではありません。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>この <see cref="T:System.Net.SocketPermissionAttribute" /> によって許可されるネットワーク アクセス メソッドを取得または設定します。</summary>
      <returns>この <see cref="T:System.Net.SocketPermissionAttribute" /> のインスタンスによって許可されるネットワーク アクセス メソッドを含む文字列。 有効値は "Accept" と "Connect" です。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.SocketPermissionAttribute.Access" /> プロパティが <see langword="null" /> ではありません。 複数の Access メソッドを指定するには、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> クラスの新しいインスタンスを作成して返します。</summary>
      <returns>セキュリティ宣言に対応する <see cref="T:System.Net.SocketPermission" /> クラスのインスタンス。</returns>
      <exception cref="T:System.ArgumentException">現在のインスタンスのプロパティ (<see cref="P:System.Net.SocketPermissionAttribute.Access" />、<see cref="P:System.Net.SocketPermissionAttribute.Host" />、<see cref="P:System.Net.SocketPermissionAttribute.Transport" />、または <see cref="P:System.Net.SocketPermissionAttribute.Port" />) のうち、1 つ以上が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>この <see cref="T:System.Net.SocketPermissionAttribute" /> で指定したドメイン ネーム サービス (DNS: Domain Name Service) ホスト名または IP アドレスを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.SocketPermissionAttribute" /> のインスタンスに関連付けられた DNS ホスト名または IP アドレスを含んでいる文字列。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.SocketPermissionAttribute.Host" /> が <see langword="null" /> ではありません。 複数のホストを指定するには、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>この <see cref="T:System.Net.SocketPermissionAttribute" /> に関連付けられているポート番号を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.SocketPermissionAttribute" /> のこのインスタンスに関連付けられているポート番号を含む文字列。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしたときの <see cref="P:System.Net.SocketPermissionAttribute.Port" /> プロパティは <see langword="null" /> です。 複数のポートを指定するには、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>この <see cref="T:System.Net.TransportType" /> で指定した <see cref="T:System.Net.SocketPermissionAttribute" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Net.TransportType" /> に関連付けられている <see cref="T:System.Net.SocketPermissionAttribute" /> を含む文字列。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.SocketPermissionAttribute.Transport" /> が <see langword="null" /> ではありません。 複数のトランスポート タイプを指定するには、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> クラスと <see cref="T:System.Net.Sockets.Socket" /> クラスのトランスポート タイプを定義します。</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>すべてのトランスポート タイプ。</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>トランスポート タイプは、UDP などのコネクションレスです。 この値を指定することは、<see cref="F:System.Net.TransportType.Udp" /> を指定するのと同じ効果があります。</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>トランスポートは、TCP などのコネクション指向です。 この値を指定することは、<see cref="F:System.Net.TransportType.Tcp" /> を指定するのと同じ効果があります。</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>TCP トランスポート。</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>UDP トランスポート。</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>HTTP インターネット リソースへのアクセス権を制御します。</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>
        <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>指定した URI に対して指定したアクセス権を持つ <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">URI に与えられるアクセス権を指定する NetworkAccess。 <see cref="F:System.Net.NetworkAccess.Accept" />アプリケーションが、インターネットからのローカル リソースへの接続の受け入れを許可されていることを示します。 <see cref="F:System.Net.NetworkAccess.Connect" />アプリケーションが、固有のインターネット リソースへの接続を許可されていることを示します。</param>
      <param name="uriString">アクセス権が与えられる対象となる URI 文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>指定した URI 正規表現に対するアクセス権を指定して、<see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">URI に与えられるアクセス権を指定する <see cref="T:System.Net.NetworkAccess" />。 <see cref="F:System.Net.NetworkAccess.Accept" />アプリケーションが、インターネットからのローカル リソースへの接続の受け入れを許可されていることを示します。 <see cref="F:System.Net.NetworkAccess.Connect" />アプリケーションが、固有のインターネット リソースへの接続を許可されていることを示します。</param>
      <param name="uriRegex">アクセスが与えられる対象の URI を記述する正規表現。</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>すべての要求を渡すか、すべての要求を失敗させる <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値。</param>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>このプロパティは、この <see cref="T:System.Net.WebPermission" /> で保持される単一の受け入れ許可の列挙体を返します。 返された列挙体に格納される可能性のあるオブジェクトの型は、<see cref="T:System.String" /> および <see cref="T:System.Text.RegularExpressions.Regex" /> です。</summary>
      <returns>受け入れ許可を格納している <see cref="T:System.Collections.IEnumerator" /> インターフェイス。</returns>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>指定したアクセス権を持つ指定した URI 文字列を現在の <see cref="T:System.Net.WebPermission" /> に追加します。</summary>
      <param name="access">URI に与えられるアクセス権を指定する <see cref="T:System.Net.NetworkAccess" />。</param>
      <param name="uriString">アクセス権が与えられる対象となる URI を記述している文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>指定したアクセス権を持つ指定した URI を現在の <see cref="T:System.Net.WebPermission" /> に追加します。</summary>
      <param name="access">URI に与えられるアクセス権を指定する NetworkAccess。</param>
      <param name="uriRegex">アクセス権が与えられる対象の URI のセットを記述する正規表現。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriRegex" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>このプロパティは、この <see cref="T:System.Net.WebPermission" /> で保持される単一の接続許可の列挙体を返します。 返された列挙体に格納される可能性のあるオブジェクトの型は、<see cref="T:System.String" /> および <see cref="T:System.Text.RegularExpressions.Regex" /> です。</summary>
      <returns>接続許可を格納している <see cref="T:System.Collections.IEnumerator" /> インターフェイス。</returns>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>
        <see cref="T:System.Net.WebPermission" /> のコピーを作成します。</summary>
      <returns>元のクラスと同じ値を持つ <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから <see cref="T:System.Net.WebPermission" /> を再構築します。</summary>
      <param name="securityElement">
        <see cref="T:System.Net.WebPermission" /> を再構築するための元となる XML エンコーディング。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> パラメーターが <see langword="null." /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が、この種類のアクセス許可要素ではありません。</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>2 つの <see cref="T:System.Net.WebPermission" /> インスタンスの論理積集合を返します。</summary>
      <param name="target">現在のインスタンスと比較する <see cref="T:System.Net.WebPermission" />。</param>
      <returns>現在のインスタンスと <paramref name="target" /> パラメーターの積集合を表す新しい <see cref="T:System.Net.WebPermission" />。 積集合が空の場合、このメソッドは <see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> または <see cref="T:System.Net.WebPermission" /> 型ではありません。</exception>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Net.WebPermission" /> が、指定したオブジェクトのサブセットかどうかを判断します。</summary>
      <param name="target">現在の <see cref="T:System.Net.WebPermission" /> と比較する <see cref="T:System.Net.WebPermission" />。</param>
      <returns>現在のインスタンスが <paramref name="target" /> パラメーターのサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 ターゲットが <see langword="null" /> の場合は、メソッドは無制限ではない現在の空のアクセス許可に対して <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">指定するパラメーターが、<see cref="T:System.Net.WebPermission" /> のインスタンスではありません。</exception>
      <exception cref="T:System.NotSupportedException">現在のインスタンスに Regex エンコードされた権利が格納されていて、指定するインスタンスには同じ権利がない場合。</exception>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>
        <see cref="T:System.Net.WebPermission" /> の全般的なアクセス許可状態をチェックします。</summary>
      <returns>
        <see cref="T:System.Net.WebPermission" /> が <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> で作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>
        <see cref="T:System.Net.WebPermission" /> とその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>ステータス情報を含む <see cref="T:System.Security.SecurityElement" /> の XML エンコードされた表現を格納する <see cref="T:System.Net.WebPermission" />。</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Net.WebPermission" /> クラスの 2 つのインスタンス間の論理和集合を返します。</summary>
      <param name="target">現在の <see cref="T:System.Net.WebPermission" /> と結合する <see cref="T:System.Net.WebPermission" />。</param>
      <returns>現在のインスタンスと <paramref name="target" /> パラメーターの和集合を表す <see cref="T:System.Net.WebPermission" />。 いずれかの <see langword="WebPermission" /> が <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> の場合、このメソッドは <see cref="T:System.Net.WebPermission" /> である <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> を返します。 WebPermission が <see langword="null" /> である場合、このメソッドは現在の <see cref="T:System.Net.WebPermission" /> のコピーを返します。</returns>
      <exception cref="T:System.ArgumentException">ターゲットが <see langword="null" /> または <see cref="T:System.Net.WebPermission" /> 型ではありません。</exception>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>インターネット リソースへのアクセス許可を指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>このクラスで実行できるセキュリティ アクションを指定する値で、<see cref="T:System.Net.WebPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> は有効な <see cref="T:System.Security.Permissions.SecurityAction" /> 値ではありません。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で受け入れられる URI 文字列を取得または設定します。</summary>
      <returns>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で受け入れられる URI を格納している文字列。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.WebPermissionAttribute.Accept" /> が <see langword="null" /> ではありません。 複数の Accept URI を指定する場合は、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で受け入れられる URI を記述する正規表現パターンを取得または設定します。</summary>
      <returns>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で受け入れられる URI を記述する正規表現パターンを含む文字列。 この文字列は、<see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクター文字列のエンコーディング規則に従って、エスケープする必要があります。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> が <see langword="null" /> ではありません。 複数の Accept URI を指定する場合は、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で制御される URI 接続文字列を取得または設定します。</summary>
      <returns>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で制御される URI 接続を格納している文字列。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.WebPermissionAttribute.Connect" /> が <see langword="null" /> ではありません。 複数の Connect URI を指定する場合は、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>現在の <see cref="T:System.Net.WebPermissionAttribute" /> で制御される URI 接続を記述する正規表現パターンを取得または設定します。</summary>
      <returns>この <see cref="T:System.Net.WebPermissionAttribute" /> で制御される URI 接続を記述する正規表現パターンを含む文字列。</returns>
      <exception cref="T:System.ArgumentException">値を設定しようとしましたが、<see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> が <see langword="null" /> ではありません。 複数の Connect URI を指定する場合は、追加の属性宣言ステートメントを使用します。</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを作成して返します。</summary>
      <returns>セキュリティ宣言に対応する <see cref="T:System.Net.WebPermission" />。</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary>コード アクセス許可すべての基になる構造を定義します。</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary>
        <see cref="T:System.Security.CodeAccessPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary>呼び出し側コードが、このメソッドを呼び出すコードを通じて、アクセス許可要求によって保護されているリソースにアクセス可能であるということ、それも、スタックの中で上位に位置する呼び出し側にリソースへのアクセス許可が付与されていない場合でさえそれが可能であることを宣言します。 <see cref="M:System.Security.CodeAccessPermission.Assert" /> を使用すると、セキュリティ上の問題が発生することがあります。</summary>
      <exception cref="T:System.Security.SecurityException">呼び出し元のコードに <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /> がありません。

または -
現在のフレームにはアクティブな <see cref="M:System.Security.CodeAccessPermission.Assert" /> が既に存在しています。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary>派生クラスにより実装されると、現在のアクセス許可オブジェクトの同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary>呼び出し履歴の上位にあるすべての呼び出し元に、現在のインスタンスによって指定されているアクセス許可が付与されていない場合、実行時に <see cref="T:System.Security.SecurityException" /> を強制します。</summary>
      <exception cref="T:System.Security.SecurityException">呼び出し履歴の上位にある呼び出し元には、現在のインスタンスで指定されたアクセス許可がありません。

または -
呼び出し履歴の上位にある呼び出し元は、現在のアクセス許可オブジェクトで <see cref="M:System.Security.CodeAccessPermission.Deny" /> を呼び出しました。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary>呼び出し履歴内の上位の呼び出し元が、このメソッドを呼び出すコードを使用して、現在のインスタンスで指定されたリソースにアクセスしないようにします。</summary>
      <exception cref="T:System.Security.SecurityException">現在のフレームにはアクティブな <see cref="M:System.Security.CodeAccessPermission.Deny" /> が既に存在しています。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.CodeAccessPermission" /> オブジェクトが、現在の <see cref="T:System.Security.CodeAccessPermission" /> と等しいかどうかを判断します。</summary>
      <param name="obj">現在の <see cref="T:System.Security.CodeAccessPermission" /> と比較する <see cref="T:System.Security.CodeAccessPermission" /> オブジェクト。</param>
      <returns>指定した <see langword="true" /> オブジェクトが現在の <see cref="T:System.Security.CodeAccessPermission" /> と等しい場合は <see cref="T:System.Security.CodeAccessPermission" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary>派生クラスでオーバーライドされると、XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="elem">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> パラメーターには、現在のインスタンスと同じ型のインスタンスの XML エンコードが含まれていません。

または -
<paramref name="elem" /> パラメーターのバージョン番号は、サポートされていません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適している、<see cref="T:System.Security.CodeAccessPermission" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.CodeAccessPermission" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary>派生クラスで実装される場合、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターは <see langword="null" /> ではなく、現在のアクセス許可と同じクラスのインスタンスでもありません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>派生クラスによって実装された場合は、現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary>呼び出し履歴内の上位の呼び出し元が、このメソッドを呼び出すコードでは一切リソースにアクセスできないようにします。ただし、現在のインスタンスで指定されているリソースは例外です。</summary>
      <exception cref="T:System.Security.SecurityException">現在のフレームにはアクティブな <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> が既に存在しています。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary>現在のフレームの以前のオーバーライドすべてが削除され、有効ではなくなります。</summary>
      <exception cref="T:System.InvalidOperationException">現在のフレームには以前の <see cref="M:System.Security.CodeAccessPermission.Assert" />、<see cref="M:System.Security.CodeAccessPermission.Deny" />、または <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> はありません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary>現在のフレームの以前の <see cref="M:System.Security.CodeAccessPermission.Assert" /> がすべて削除され、有効ではなくなります。</summary>
      <exception cref="T:System.InvalidOperationException">現在のフレームには以前の <see cref="M:System.Security.CodeAccessPermission.Assert" /> はありません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary>現在のフレームの以前の <see cref="M:System.Security.CodeAccessPermission.Deny" /> がすべて削除され、有効ではなくなります。</summary>
      <exception cref="T:System.InvalidOperationException">現在のフレームには以前の <see cref="M:System.Security.CodeAccessPermission.Deny" /> はありません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary>現在のフレームの以前の <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> がすべて削除され、有効ではなくなります。</summary>
      <exception cref="T:System.InvalidOperationException">現在のフレームには以前の <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> はありません。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary>現在のアクセス許可オブジェクトの文字列形式を作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトの文字列形式。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary>派生クラスでオーバーライドされた場合、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary>派生クラスでオーバーライドされると、現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="other">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="other" /> パラメーターが <see langword="null" /> ではありません。 このメソッドは、<see langword="null" /> に渡された場合に、このレベルでのみサポートされます。</exception>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary>ホスト リソースの拒否が検出されたときにスローされる例外です。</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary>
        <see cref="T:System.Security.HostProtectionException" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定されたシリアル化情報とストリーム コンテキストを使用して、<see cref="T:System.Security.HostProtectionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.Security.HostProtectionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Security.HostProtectionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="e">現在の例外の原因となった例外。 <c>innerException</c> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary>指定したエラー メッセージ、保護されるホスト リソース、および例外がスローされる原因となったホスト リソースを使用して、<see cref="T:System.Security.HostProtectionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="protectedResources">部分的に信頼されたコードにアクセスできないホスト リソースを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="demandedResources">要求されるホスト リソースを指定する列挙値のビットごとの組み合わせ。</param>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary>例外がスローされる原因となった、要求されたホスト保護リソースを取得または設定します。</summary>
      <returns>例外がスローされる原因となった保護リソースを識別する、<see cref="T:System.Security.Permissions.HostProtectionResource" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.HostProtectionResource.None" /> です。</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary>部分的に信頼されたコードにアクセスできないホスト保護リソースを取得または設定します。</summary>
      <returns>アクセスできないホスト保護のカテゴリを示す <see cref="T:System.Security.Permissions.HostProtectionResource" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.HostProtectionResource.None" /> です。</returns>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary>現在のホスト保護例外の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Security.HostProtectionException" /> の文字列表記。</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary>アプリケーション ドメインのセキュリティ動作の制御およびカスタマイズを実行できるようにします。</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary>
        <see cref="T:System.Security.HostSecurityManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary>アプリケーションを実行するかどうかを決定します。</summary>
      <param name="applicationEvidence">アクティブ化されるアプリケーションの証拠。</param>
      <param name="activatorEvidence">アクティブ化されるアプリケーション ドメインの証拠 (オプション)。</param>
      <param name="context">信頼コンテキスト。</param>
      <returns>アプリケーションの信頼情報を格納するオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationEvidence" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">アプリケーションの証拠に、<see cref="T:System.Runtime.Hosting.ActivationArguments" /> オブジェクトが見つかりませんでした。

または -
アクティベーション引数の <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> プロパティが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 許可セットに、<see cref="T:System.ActivationContext" /> により指定される最小限の要求セットが含まれていません。</exception>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary>派生クラスでオーバーライドされると、現在のアプリケーション ドメインのセキュリティ ポリシーを取得します。</summary>
      <returns>現在のアプリケーション ドメインに対するセキュリティ ポリシー。 既定値は、<see langword="null" /> です。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary>ホストにとって重要なセキュリティ ポリシー コンポーネントを表すフラグを取得します。</summary>
      <returns>セキュリティ ポリシー コンポーネントを指定する列挙値の 1 つ。 既定値は、<see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /> です。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary>アプリケーション ドメインの特定の証拠型を要求します。</summary>
      <param name="evidenceType">証拠の型。</param>
      <returns>要求されたアプリケーション ドメインの証拠。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary>アセンブリの特定の証拠型を要求します。</summary>
      <param name="evidenceType">証拠の型。</param>
      <param name="assembly">対象のアセンブリ。</param>
      <returns>要求されたアセンブリの証拠。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary>要求された場合に、アプリケーション ドメインに対してホストが提供できる証拠の型を決定します。</summary>
      <returns>証拠の型の配列。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary>要求された場合に、アセンブリに対してホストが提供できる証拠の型を決定します。</summary>
      <param name="assembly">対象のアセンブリ。</param>
      <returns>証拠の型の配列。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary>読み込まれるアセンブリに対するアプリケーション ドメインの証拠を提供します。</summary>
      <param name="inputEvidence">
        <see cref="T:System.AppDomain" /> の証拠に追加する証拠。</param>
      <returns>
        <see cref="T:System.AppDomain" /> に使用される証拠。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary>読み込まれるアセンブリに対するアセンブリの証拠を提供します。</summary>
      <param name="loadedAssembly">読み込まれるアセンブリ。</param>
      <param name="inputEvidence">アセンブリの証拠に追加する証拠。</param>
      <returns>アセンブリに使用される証拠。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>指定された証拠に基づいて、コードに与えるアクセス許可を決定します。</summary>
      <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
      <returns>セキュリティ システムによって付与されるアクセス許可セット。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary>ホストのセキュリティ マネージャーで使用されるセキュリティ ポリシー コンポーネントを指定します。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary>すべてのセキュリティ ポリシー コンポーネントを使用します。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary>アプリケーション ドメインの証拠を使用します。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary>アセンブリの証拠を使用します。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary>
        <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> メソッドへの呼び出しを、最初に <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" /> メソッドにルーティングします。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary>
        <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> プロパティで指定されているポリシー レベルを使用します。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary>
        <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> メソッドを使用して、アプリケーションの証拠を解決します。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary>セキュリティ ポリシー コンポーネントを使用しません。</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary>オブジェクトの <see cref="T:System.Security.Policy.Evidence" /> を取得します。</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary>現在のオブジェクトの ID を検証する <see cref="T:System.Security.Policy.Evidence" /> を取得します。</summary>
      <returns>現在のオブジェクトの ID の <see cref="T:System.Security.Policy.Evidence" />。</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary>アクセス許可オブジェクトの状態を XML 要素表記に、またはその逆に変換するメソッドをサポートします。</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">指定されたアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <param name="level">指定されたアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
      <returns>ポリシー オブジェクトの XML 表記のルート要素。</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary>名前および名前と関連付けられた説明を持つアクセス許可セットを定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary>別の名前付きアクセス許可セットから <see cref="T:System.Security.NamedPermissionSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permSet">新しいインスタンスの作成元の名前付きアクセス許可セット。</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary>名前を指定して、<see cref="T:System.Security.NamedPermissionSet" /> クラスの新しい空のインスタンスを初期化します。</summary>
      <param name="name">新しい名前付きアクセス許可セットの名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.NamedPermissionSet" /> クラスの新しいインスタンスを、無制限状態または完全制限状態のいずれかで、指定した名前を使用して初期化します。</summary>
      <param name="name">新しい名前付きアクセス許可セットの名前。</param>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary>アクセス許可セットからの名前を指定して、<see cref="T:System.Security.NamedPermissionSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">名前付きアクセス許可セットの名前。</param>
      <param name="permSet">新しい名前付きアクセス許可セットの値を取得するアクセス許可セット。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary>名前付きアクセス許可セットからアクセス許可セットのコピーを作成します。</summary>
      <returns>名前付きアクセス許可セットのアクセス許可をコピーしたアクセス許可セット。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary>異なる名前の同じアクセス許可を使用して、名前付きアクセス許可セットのコピーを作成します。</summary>
      <param name="name">新しい名前付きアクセス許可セットの名前。</param>
      <returns>新しい名前の名前付きアクセス許可セットのコピー。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary>現在の名前付きアクセス許可セットの説明テキストを取得または設定します。</summary>
      <returns>名前付きアクセス許可セットの説明テキスト。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.NamedPermissionSet" /> オブジェクトが、現在の <see cref="T:System.Security.NamedPermissionSet" /> と等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Security.NamedPermissionSet" /> と比較する <see cref="T:System.Security.NamedPermissionSet" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Security.NamedPermissionSet" /> が現在の <see cref="T:System.Security.NamedPermissionSet" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから特定の状態を使用して、名前付きアクセス許可セットを再構築します。</summary>
      <param name="et">名前付きアクセス許可セットの XML 表現を格納するセキュリティ要素。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> パラメーターが、名前付きアクセス許可セットの有効な表現ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適している、<see cref="T:System.Security.NamedPermissionSet" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.NamedPermissionSet" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary>現在の名前付きアクセス許可セットの名前を取得または設定します。</summary>
      <returns>名前付きアクセス許可セットの名前。</returns>
      <exception cref="T:System.ArgumentException">名前が <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary>名前付きアクセス許可セットの XML 要素の説明を作成します。</summary>
      <returns>名前付きアクセス許可セットの XML 表現。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>暗号化されたデータとメモリにアクセスする機能を制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>指定したアクセス許可フラグを使用して、<see cref="T:System.Security.Permissions.DataProtectionPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> は <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 値の有効な組み合わせではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定したアクセス許可状態を使用して、<see cref="T:System.Security.Permissions.DataProtectionPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効な <see cref="T:System.Security.Permissions.PermissionState" /> 値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>データおよびメモリの保護フラグを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 値のビットごとの組み合わせ。</returns>
      <exception cref="T:System.ArgumentException">指定された値は、<see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 値の有効な組み合わせではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードからの特定の状態で、アクセス許可を再構築します。</summary>
      <param name="securityElement">アクセス許可の再構築に使用する XML エンコードを含む <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が正しいアクセス許可要素ではありません。

または -
<paramref name="securityElement" /> のバージョン番号はサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型のアクセス許可が指定されていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型のアクセス許可が指定されていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型のアクセス許可が指定されていません。</exception>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.DataProtectionPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.DataProtectionPermission" /> を作成して返します。</summary>
      <returns>対象の属性に対応する <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>データ保護のアクセス許可を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedData" /> クラスを使用してデータを暗号化できるかどうかを示す値を取得または設定します。</summary>
      <returns>データを暗号化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedMemory" /> クラスを使用してメモリを暗号化できるかどうかを示す値を取得または設定します。</summary>
      <returns>メモリを暗号化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedData" /> クラスを使用してデータを復号化できるかどうかを示す値を取得または設定します。</summary>
      <returns>データを復号化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedMemory" /> クラスを使用してメモリを復号化できるかどうかを示す値を取得または設定します。</summary>
      <returns>メモリを復号化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>データとメモリを暗号化するためのアクセス許可を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>データの暗号化、メモリの暗号化、データの復号化、およびメモリの復号化を行うためのアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>保護に関連するアクセス許可はありません。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>データを暗号化するためのアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>メモリを暗号化するためのアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>データを復号化するためのアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>メモリを復号化するためのアクセス許可。</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary>システム環境変数、およびユーザー環境変数へのアクセスを制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>指定した環境変数への指定したアクセスを使用して、<see cref="T:System.Security.Permissions.EnvironmentPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の値の 1 つ。</param>
      <param name="pathList">アクセスが許可されている環境変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> パラメーターが <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定どおりに制限されているか、無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.EnvironmentPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>指定した環境変数へのアクセス権を既存のアクセス許可の状態に設定します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の値の 1 つ。</param>
      <param name="pathList">環境変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> パラメーターが <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary>指定された <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> のすべての環境変数を取得します。</summary>
      <param name="flag">環境変数アクセスの単一の型を表す <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 値の 1 つ。</param>
      <returns>選択されたフラグの環境変数のリスト (セミコロン区切り)。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> が <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の正しい値ではありません。

または -
<paramref name="flag" /> が <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> (環境変数アクセスの複数の型を表す) か、または <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> (環境変数アクセスの型を表すものではない) です。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>指定の環境変数への指定されたアクセスを、アクセス許可の既存の状態に設定します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の値の 1 つ。</param>
      <param name="pathList">環境変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> パラメーターが <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="other">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary>環境変数に対するアクセスを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary>環境変数への <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> アクセス許可と <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> アクセス許可。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> は、複数の <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 値を表し、1 つの値が要求される <see cref="T:System.ArgumentException" /> メソッドの <paramref name="flag" /> パラメーターとして使用すると、<see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" /> が発生します。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary>環境変数へのアクセス許可はありません。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> は、有効な <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 値がないことを表すため、1 つの値を要求する <see cref="T:System.ArgumentException" /> メソッドのパラメーターとして使用すると、<see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" /> が発生します。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary>環境変数に対する読み取りアクセスだけを指定します。 このアクセス レベルでは、環境変数を変更、削除、および作成できません。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary>環境変数に対する書き込みアクセスだけを指定します。 書き込みアクセスがあると、環境変数の既存の値を変更するだけでなく、環境変数を作成および削除できます。 このアクセス レベルでは、環境変数を読み取ることはできません。</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.EnvironmentPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> パラメーターが <see cref="T:System.Security.Permissions.SecurityAction" /> の正しい値ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary>文字列値が指定する環境変数へのフル アクセスを設定します。</summary>
      <returns>フル アクセス用の環境変数の一覧。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティでは、GET メソッドがサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.EnvironmentPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary>文字列値が指定する環境変数への読み取りアクセスを取得または設定します。</summary>
      <returns>読み取りアクセス用の環境変数の一覧。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary>文字列値が指定する環境変数への書き込みアクセスを取得または設定します。</summary>
      <returns>書き込みアクセス用の環境変数の一覧。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary>[ファイル] ダイアログ ボックスからファイルまたはフォルダーにアクセスする機能を制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary>指定したアクセスで <see cref="T:System.Security.Permissions.FileDialogPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが、<see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 値の有効な組み合わせではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定どおりに制限されているまたは無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.FileDialogPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか (<see langword="Unrestricted" /> または <see langword="None" />)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary>ファイルに対して許可されているアクセスを取得または設定します。</summary>
      <returns>ファイルに対して許可されているアクセス。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターを <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 値の無効な組み合わせの値に設定しようとしました。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号は、サポートされていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary>[ファイル] ダイアログ ボックスを使用して実行できるファイルへのアクセスの種類を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary>[ファイル] ダイアログ ボックスを使用してファイルにアクセスできません。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary>[ファイル] ダイアログ ボックスを使用してファイルを開くことができます。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary>[ファイル] ダイアログ ボックスを使用してファイルを開き、保存することができます。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary>[ファイル] ダイアログ ボックスを使用してファイルを保存できます。</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.FileDialogPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.FileDialogPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.FileDialogPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary>ファイル ダイアログを使用してファイルを開くためのアクセス許可が宣言されているかどうかを示す値を取得または設定します。</summary>
      <returns>ファイル ダイアログを使用してファイルを開くためのアクセス許可が宣言されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary>ファイル ダイアログを使用してファイルを保存するためのアクセス許可が宣言されているかどうかを示す値を取得または設定します。</summary>
      <returns>ファイル ダイアログを使用してファイルを保存するためのアクセス許可が宣言されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary>ファイルとフォルダーにアクセスする機能を制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>指定されたファイルまたはディレクトリへの指定のアクセスと、ファイル制御情報への指定のアクセス権を使用して、<see cref="T:System.Security.Permissions.FileIOPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列挙値のビットごとの組み合わせ。</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 列挙値のビットごとの組み合わせ。</param>
      <param name="path">ファイルまたはディレクトリの絶対パス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="path" /> パラメーターが有効な文字列ではありません。

または -
<paramref name="path" /> パラメーターで、ファイルまたはディレクトリへの絶対パスが指定されませんでした。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary>指定されたファイルとディレクトリへの指定のアクセスと、ファイル制御情報への指定のアクセス権を使用して、<see cref="T:System.Security.Permissions.FileIOPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列挙値のビットごとの組み合わせ。</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 列挙値のビットごとの組み合わせ。</param>
      <param name="pathList">ファイルとディレクトリの絶対パスを格納する配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> 配列内のエントリが、有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>指定されたファイルまたはディレクトリに対する指定されたアクセスにより、<see cref="T:System.Security.Permissions.FileIOPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列挙値のビットごとの組み合わせ。</param>
      <param name="path">ファイルまたはディレクトリの絶対パス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="path" /> パラメーターが有効な文字列ではありません。

または -
<paramref name="path" /> パラメーターで、ファイルまたはディレクトリへの絶対パスが指定されませんでした。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>指定されたファイルおよびディレクトリに対する指定されたアクセスにより、<see cref="T:System.Security.Permissions.FileIOPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列挙値のビットごとの組み合わせ。</param>
      <param name="pathList">ファイルとディレクトリの絶対パスを格納する配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> 配列内のエントリが、有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定に従って完全に制限されているか、または無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.FileIOPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>指定したファイルまたはディレクトリに対するアクセス権を、既存のアクセス許可の状態に追加します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。</param>
      <param name="path">ファイルまたはディレクトリの絶対パス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="path" /> パラメーターが有効な文字列ではありません。

または -
<paramref name="path" /> パラメーターで、ファイルまたはディレクトリへの絶対パスが指定されませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> パラメーターの形式が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>指定したファイルおよびディレクトリに対するアクセス権を、既存のアクセス許可の状態に追加します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。</param>
      <param name="pathList">ファイルとディレクトリの絶対パスを格納する配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> 配列内のエントリが、有効ではありません。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pathList" /> 配列内のエントリが、正しくない形式です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary>すべてのファイルへの許可されたアクセスを取得または設定します。</summary>
      <returns>すべてのファイルのファイル I/O フラグのセット。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary>すべてのローカル ファイルへの許可されたアクセスを取得または設定します。</summary>
      <returns>すべてのローカル ファイルのファイル I/O フラグのセット。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.Permissions.FileIOPermission" /> オブジェクトが、現在の <see cref="T:System.Security.Permissions.FileIOPermission" /> と等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Permissions.FileIOPermission" /> と比較する <see cref="T:System.Security.Permissions.FileIOPermission" /> オブジェクト。</param>
      <returns>指定した <see langword="true" /> が現在の <see cref="T:System.Security.Permissions.FileIOPermission" /> オブジェクトと等しい場合は <see cref="T:System.Security.Permissions.FileIOPermission" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号は、互換性のないものです。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適している、<see cref="T:System.Security.Permissions.FileIOPermission" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Permissions.FileIOPermission" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary>指定した <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> を含むすべてのファイルとディレクトリを取得します。</summary>
      <param name="access">ファイル アクセスの単一の型を表す <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値の 1 つです。</param>
      <returns>
        <paramref name="access" /> パラメーターで指定されたアクセスが付与されているファイルおよびディレクトリのパスを含む配列です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> が <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の正しい値ではありません。

または -
<paramref name="access" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> で、ファイル アクセスの 2 つ以上の型を表しているか、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> がファイル アクセスのどの型も表していません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>指定したアクセスを指定したファイルまたはディレクトリに設定し、既存のアクセス許可の状態を置き換えます。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。</param>
      <param name="path">ファイルまたはディレクトリの絶対パス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="path" /> パラメーターが有効な文字列ではありません。

または -
<paramref name="path" /> パラメーターで、ファイルまたはディレクトリへの絶対パスが指定されませんでした。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>指定したアクセスを指定したファイルとディレクトリに設定し、指定したアクセスの現在の状態を新しいパスのセットで置き換えます。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。</param>
      <param name="pathList">ファイルとディレクトリの絶対パスを格納する配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> パラメーター内のエントリが正しい文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="other">現在のアクセス許可と結合するアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary>要求されたファイル アクセスの種類を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary>ファイルまたはディレクトリへの <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> アクセス許可。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> は、複数の <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値を表し、1 つの値が要求される <see cref="T:System.ArgumentException" /> メソッドの <paramref name="access" /> パラメーターとして使用すると、<see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> が発生します。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary>ファイルまたはディレクトリにデータを追加するためのアクセス許可。 <see langword="FileIOPermissionAccess.Append" /> アクセス許可には、新しいファイルまたはディレクトリを作成するための許可も含まれます。 ファイルを作成するには、コードに <see langword="Append" /> と、<see langword="Write" /> または <see langword="Read" /> アクセスいずれかの、両方を付与する必要があります。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary>ファイルまたはディレクトリへのアクセス許可なし。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> は、有効な <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値がないことを表すため、1 つの値を要求する <see cref="T:System.ArgumentException" /> メソッドのパラメーターとして使用すると、<see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> が発生します。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary>パス自体に存在する情報へのアクセス。 これにより、ユーザー名などのパス中の機密情報だけではなく、パスによって判明するディレクトリ構造についての情報も保護されます。 この値は、パスによって表されたファイルまたはフォルダーへのアクセスを与えません。
パフォーマンス上の理由から、<see langword="PathDiscovery" /> はファイルではなく、ディレクトリにのみ付与する必要があります。 たとえば、<see langword="PathDiscovery" /> アクセス許可は、C:\test\example.txt ではなく、C:\test や C:\test\\ のようなパスに付与する必要があります。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary>ファイルまたはディレクトリから読み取るためのアクセス。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary>ファイルまたはディレクトリに書き込むか、ファイルまたはディレクトリを削除するためのアクセス許可。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> アクセス許可には、ファイルまたはディレクトリの削除と上書きの許可が含まれます。</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.FileIOPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> パラメーターが正しい <see cref="T:System.Security.Permissions.SecurityAction" /> ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary>文字列値で指定されるファイルまたはディレクトリへのフル アクセスを取得または設定します。</summary>
      <returns>フル アクセスのための、ファイルまたはディレクトリの絶対パス。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティでは、GET メソッドがサポートされていません。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary>すべてのファイルに対して許可されているアクセスを取得または設定します。</summary>
      <returns>すべてのファイルのアクセス許可を表す <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary>すべてのローカル ファイルへの許可されたアクセスを取得または設定します。</summary>
      <returns>すべてのローカル ファイルに対するアクセス許可を表す <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary>文字列値で指定されるファイルまたはディレクトリへの追加アクセスを取得または設定します。</summary>
      <returns>追加アクセスのための、ファイルまたはディレクトリの絶対パス。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary>アクセス制御情報を変更できるファイルまたはディレクトリを取得または設定します。</summary>
      <returns>アクセス制御情報を変更できるファイルまたはディレクトリの絶対パス。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.FileIOPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.FileIOPermission" />。</returns>
      <exception cref="T:System.ArgumentException">アクセスを制限するファイルまたはディレクトリのパス情報に、無効な文字やワイルドカード文字が含まれています。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary>パス探索を与えるファイルまたはディレクトリを取得または設定します。</summary>
      <returns>ファイルまたはディレクトリの絶対パス。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary>文字列値が指定するファイルまたはディレクトリへの読み取りアクセスを取得または設定します。</summary>
      <returns>読み取りアクセスのための、ファイルまたはディレクトリの絶対パス。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary>アクセス制御情報を表示できるファイルまたはディレクトリを取得または設定します。</summary>
      <returns>アクセス制御情報を表示できるファイルまたはディレクトリの絶対パス。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary>ファイル データを表示して変更できるファイルまたはディレクトリを取得または設定します。</summary>
      <returns>ファイル データを表示して変更できるファイルまたはディレクトリの絶対パス。</returns>
      <exception cref="T:System.NotSupportedException">
        <see langword="get" /> アクセサーが呼び出されています。 このアクセサーは、C# コンパイラとの互換性のためだけに用意されています。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary>文字列値が指定するファイルまたはディレクトリへの書き込みアクセスを取得または設定します。</summary>
      <returns>書き込みアクセスのための、ファイルまたはディレクトリの絶対パス。</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary>グローバル アセンブリ キャッシュで作成されたファイルの ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>完全に制限した <see cref="T:System.Security.Permissions.GacIdentityPermission" /> を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効な <see cref="T:System.Security.Permissions.PermissionState" /> 値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングからアクセス許可を作成します。</summary>
      <param name="securityElement">アクセス許可の作成に使用する XML エンコーディングを格納している <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が有効なアクセス許可要素ではありません。

または -
<paramref name="securityElement" /> のバージョン番号が無効です。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットかどうかを示します。</summary>
      <param name="target">サブセットの関係を調べるアクセス許可オブジェクト。 このアクセス許可は、現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含むアクセス許可の XML エンコーディングを表す <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の和集合を表すアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> 値を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> パラメーターが有効な <see cref="T:System.Security.Permissions.SecurityAction" /> の値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.GacIdentityPermission" /> オブジェクトを作成します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.GacIdentityPermission" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary>ホスト保護要件を決める宣言セキュリティ アクションの使用を許可します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 値を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> が <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary>新しいホスト保護のアクセス許可を作成して返します。</summary>
      <returns>現在の属性に対応する <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary>外部プロセス管理が公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>外部プロセス管理が公開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary>外部スレッド処理が公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>外部スレッド処理が公開されている場合は <see langword="true" />それ以外の場合は、<see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary>操作が終了した場合にリソースがメモリをリークする可能性があるかどうかを示す値を取得または設定します。</summary>
      <returns>終了時にリソースがメモリをリークする可能性がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary>ホストに害を及ぼす可能性がある機能のカテゴリを指定するフラグを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.HostProtectionResource.None" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary>セキュリティ インフラストラクチャが公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>セキュリティ インフラストラクチャが公開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary>自己作用型のプロセス管理が公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>自己作用型のプロセス管理が公開されている場合は <see langword="true" />それ以外の場合は、<see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary>自己作用型のスレッド処理が公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>自己作用型のスレッド処理が公開されている場合は <see langword="true" />。それ以外の場合は、<see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary>共有状態が公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>共有状態が公開されている場合は <see langword="true" />それ以外の場合は、<see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary>同期が公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>同期が公開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary>ユーザー インターフェイスが公開されているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> (ユーザーインターフェイスが公開されている場合)。それ以外の場合は、<see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary>メソッドまたはクラスによって呼び出された場合にホストに害を及ぼす可能性がある機能のカテゴリを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary>すべてのホスト リソースを公開します。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary>他のプロセスを作成または破棄することがあります。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary>他のスレッドを作成または操作します。この動作によって、ホストに害を及ぼすことがあります。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary>セーフ ハンドルによってまたはリソースを確実に解放するその他の方法によって保護されていない場合は、終了時にリソースのリークが発生することがあります。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary>ホスト リソースを公開しません。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary>セキュリティ インフラストラクチャを公開します。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary>現在のプロセスを終了し、サーバーを終了することがあります。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary>ユーザー コードだけに影響するようにスレッドを操作します。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary>スレッド間で共有される可能性がある状態を公開します。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary>同期を公開します。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary>ユーザー インターフェイスを公開します。</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary>使用できる分離ストレージを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary>ユーザー ストアの無制限の管理機能。 ユーザー ストア全体の参照と削除を許可しますが、ユーザー独自のドメイン/アセンブリ ID 以外の読み取りアクセスは許可しません。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary>ストレージは、初めにコンピューターごとに分離され、次にアプリケーションごとに分離されます。 これは、任意のドメイン コンテキストでアクセスできるアプリケーションのデータ ストアを提供します。 アプリケーションごとのデータ コンパートメントでは、さらに信頼性が必要となります。これは、アプリケーション間に "トンネル" が発生し、特定の Web サイトでアプリケーションのデータ分離を損なう可能性があるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary>ストレージは、初めにユーザーごとに分離され、次にアプリケーションの証拠ごとに分離されます。 Windows ユーザー データ ローミングが有効になっている場合、ストレージは移動します。 これは、任意のドメイン コンテキストでアクセスできるアプリケーションのデータ ストアを提供します。 アプリケーションごとのデータ コンパートメントでは、さらに信頼性が必要となります。これは、アプリケーション間に "トンネル" が発生し、特定の Web サイトでアプリケーションのデータ分離を損なう可能性があるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary>ストレージは、初めにユーザーごとに分離され、次にアプリケーションごとに分離されます。 また、ストレージは、コンピューターごとにも分離されます。 これは、任意のドメイン コンテキストでアクセスできるアプリケーションのデータ ストアを提供します。 アプリケーションごとのデータ コンパートメントでは、さらに信頼性が必要となります。これは、アプリケーション間に "トンネル" が発生し、特定の Web サイトでアプリケーションのデータ分離を損なう可能性があるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary>ストレージは、初めにコンピューターごとに分離され、次にコード アセンブリごとに分離されます。 これは、任意のドメイン コンテキストでアクセスできるアセンブリにデータ ストアを提供します。 アセンブリごとのデータ コンパートメントでは、さらに信頼性が必要となります。これは、アプリケーション間に "トンネル" が発生し、特定の Web サイトでアプリケーションのデータ分離を損なう可能性があるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary>ストレージは、初めにユーザーごとに分離され、次にアセンブリの証拠ごとに分離されます。 Windows ユーザー データ ローミングが有効になっている場合、ストレージは移動します。 これは、任意のドメイン コンテキストでアクセスできるアセンブリにデータ ストアを提供します。 アセンブリごとのデータ コンパートメントでは、さらに信頼性が必要となります。これは、アプリケーション間に "トンネル" が発生し、特定の Web サイトでアプリケーションのデータ分離を損なう可能性があるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary>ストレージは、初めにユーザーごとに分離され、次にコード アセンブリごとに分離されます。 また、ストレージは、コンピューターごとにも分離されます。 これは、任意のドメイン コンテキストでアクセスできるアセンブリにデータ ストアを提供します。 アセンブリごとのデータ コンパートメントでは、さらに信頼性が必要となります。これは、アプリケーション間に "トンネル" が発生し、特定の Web サイトでアプリケーションのデータ分離を損なう可能性があるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary>ストレージは、初めにコンピューターごとに分離され、次にドメインとアセンブリごとに分離されます。 同じアプリケーションのコンテキストで、同じコンピューター上で実行する場合にだけデータにアクセスできます。 これはサード パーティ アセンブリが、プライベート データ ストアを保持する場合に役立ちます。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary>ストレージは、初めにユーザーごとに分離され、次にドメインとアセンブリごとに分離されます。 Windows ユーザー データ ローミングが有効になっている場合、ストレージは移動します。 同じアプリケーションのコンテキストで、同じユーザーが実行する場合にだけデータにアクセスできます。 これはサード パーティ アセンブリが、プライベート データ ストアを保持する場合に役立ちます。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary>ストレージは、初めにユーザーごとに分離され、次にドメインとアセンブリごとに分離されます。 また、ストレージは、コンピューターごとにも分離されます。 同じアプリケーションのコンテキストで、同じユーザーが実行する場合にだけデータにアクセスできます。 これはサード パーティ アセンブリが、プライベート データ ストアを保持する場合に役立ちます。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary>分離ストレージの使用は許可されません。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary>分離ストレージの使用は、制限なしに許可されます。 コードは、ドメインまたはアセンブリの ID にかかわらずユーザー ストアの任意の部分へのフル アクセスを持ちます。 この分離ストレージの使用には、分離ストレージ データ ストアの内容を列挙する機能が含まれています。</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary>プライベート仮想ファイル システムを使用できることを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>制限されたアクセス許可か無制限のアクセス許可のいずれかを指定して、<see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との積集合を持つアクセス許可オブジェクト。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary>分離ストレージの汎用機能へのアクセスを表します。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定どおりに制限されているか、無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary>追加が許可されている分離ストレージの種類を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> の値の 1 つ。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary>各ユーザーのストア全体の全サイズに対するクォータを取得または設定します。</summary>
      <returns>ユーザーに割り当てられているリソースのサイズ (バイト単位)。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary>宣言する必要がある分離ストレージのレベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary>ユーザー ストレージ クォータの最大サイズを取得または設定します。</summary>
      <returns>ユーザー ストレージ クォータの最大サイズ (バイト単位)。</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary>アクセス許可で無制限の状態を公開できるようにします。</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary>アクセス許可によって保護されているリソースに無制限でアクセスできるかどうかを示す値を返します。</summary>
      <returns>アクセス許可によって保護されているリソースを無制限に使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary>キー コンテナーにアクセスする機能を制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>指定したアクセスで <see cref="T:System.Security.Permissions.KeyContainerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> は <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値の有効な組み合わせではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary>指定されたグローバル アクセス権と特定のキー コンテナー アクセス権で、<see cref="T:System.Security.Permissions.KeyContainerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="accessList">特定のキー コンテナー アクセス権を識別する <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> は <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値の有効な組み合わせではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessList" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>制限されているまたは無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.KeyContainerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効な <see cref="T:System.Security.Permissions.PermissionState" /> 値ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary>現在のアクセス許可に関連付けられた <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトのコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトを格納している <see cref="T:System.Security.Permissions.KeyContainerPermission" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary>アクセス許可に関連付けられているすべてのキー コンテナーに適用されるキー コンテナーのアクセス許可フラグを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="securityElement">アクセス許可の再構築に使用する XML エンコードを含む <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が正しいアクセス許可要素ではありません。

または -
<paramref name="securityElement" /> のバージョン番号はサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型のアクセス許可が指定されていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型のアクセス許可が指定されていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを判別します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコードを含む <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではなく、現在のアクセス許可と同じ型のアクセス許可が指定されていません。</exception>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary>特定のキー コンテナーのアクセス権を指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>暗号化サービス プロバイダー (CSP: Cryptographic Service Provider) パラメーターとアクセス許可を指定して、<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameters">暗号化サービス プロバイダー (CSP) パラメーターを格納している <see cref="T:System.Security.Cryptography.CspParameters" /> オブジェクト。</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>キー コンテナーの名前とアクセス許可を指定して、<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyContainerName">キー コンテナーの名前。</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>指定したプロパティ値を使用して、<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyStore">キー ストアの名前。</param>
      <param name="providerName">プロバイダーの名前。</param>
      <param name="providerType">プロバイダーの種類コード。 値については、<see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> プロパティのトピックを参照してください。</param>
      <param name="keyContainerName">キー コンテナーの名前。</param>
      <param name="keySpec">キーの仕様。 値については、<see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> プロパティのトピックを参照してください。</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトが現在のインスタンスと等しいかどうかを判断します。</summary>
      <param name="o">現在のインスタンスと比較する <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> が現在の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary>キー コンテナーのアクセス許可を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" /> です。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適した現在のインスタンスのハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary>キー コンテナー名を取得または設定します。</summary>
      <returns>キー コンテナーの名前。</returns>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary>キーの仕様を取得または設定します。</summary>
      <returns>Wincrypt.h ヘッダー ファイルで定義する AT_ 値の 1 つ。</returns>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary>キー ストアの名前を取得または設定します。</summary>
      <returns>キー ストアの名前。</returns>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary>プロバイダー名を取得または設定します。</summary>
      <returns>プロバイダーの名前。</returns>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary>プロバイダーの種類を取得または設定します。</summary>
      <returns>Wincrypt.h ヘッダー ファイルで定義する PROV_ 値の 1 つ。</returns>
      <exception cref="T:System.ArgumentException">結果のエントリに無制限のアクセス権が含まれることになります。</exception>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトをコレクションに追加します。</summary>
      <param name="accessEntry">追加する <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</param>
      <returns>新しい要素が挿入された位置のインデックス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary>すべての <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトをコレクションから削除します。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <param name="array" />
      <param name="index" />
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary>コピー先配列の指定されたインデックスを開始位置として、コレクションの要素を互換性のある 1 次元配列にコピーします。</summary>
      <param name="array">現在のコレクションから要素がコピーされる 1 次元の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 配列。</param>
      <param name="index">
        <paramref name="array" /> 内のコピー開始位置を示すインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は、<paramref name="array" /> の下限を下回っています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。

または -
コレクション内の要素の数が <paramref name="index" /> からコピー先の <paramref name="array" /> の末尾までに格納できる数を超えています。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary>コレクション内の項目の数を取得します。</summary>
      <returns>コレクションに含まれる <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトの数。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary>コレクション内のオブジェクトを反復処理するために使用できる <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> オブジェクトを返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>指定した <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトがコレクション内に存在する場合は、コレクション内でのそのインデックスを取得します。</summary>
      <param name="accessEntry">検索する <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</param>
      <returns>コレクション内の指定した <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトのインデックス。一致するオブジェクトが見つからない場合は -1。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary>コレクションの同期がとられている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary>コレクション内の指定したインデックス位置にある項目を取得します。</summary>
      <param name="index">アクセスする要素の 0 から始まるインデックス。</param>
      <returns>コレクション内の指定したインデックス位置にある <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> がコレクション数以上です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> が負の値です。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>指定した <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトをコレクションから削除します。</summary>
      <param name="accessEntry">削除する <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクション内のオブジェクトを反復処理するために使用できる <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> オブジェクトを返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 内の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> オブジェクトの列挙子を表します。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary>コレクション内の現在のエントリを取得します。</summary>
      <returns>コレクション内の現在の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> メソッドを先に呼び出す前に <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> プロパティにアクセスしています。 カーソルは、コレクション内の最初のオブジェクトより前に位置しています。

または -
<see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> メソッドの呼び出しが <see langword="false" /> を返した (カーソルがコレクション内の最後のオブジェクトの後ろに配置されていることを示す) 後で <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> プロパティにアクセスしています。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary>コレクションの次の要素に移動します。</summary>
      <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary>列挙子をコレクションの先頭にリセットします。</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary>コレクション内の現在のオブジェクトを取得します。</summary>
      <returns>コレクション内の現在のオブジェクト。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定したセキュリティ アクションを使用して <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.KeyContainerPermission" /> を作成して返します。</summary>
      <returns>対象の属性に対応する <see cref="T:System.Security.Permissions.KeyContainerPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary>キー コンテナーのアクセス許可を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary>キー コンテナーの名前を取得または設定します。</summary>
      <returns>キー コンテナーの名前。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary>キーの仕様を取得または設定します。</summary>
      <returns>Wincrypt.h ヘッダー ファイルで定義する AT_ 値の 1 つ。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary>キー ストアの名前を取得または設定します。</summary>
      <returns>キー ストアの名前。 既定値は "*" です。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary>プロバイダー名を取得または設定します。</summary>
      <returns>プロバイダーの名前。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary>プロバイダーの種類を取得または設定します。</summary>
      <returns>Wincrypt.h ヘッダー ファイルで定義する PROV_ 値の 1 つ。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary>キー コンテナーへの許可されているアクセス権の種類を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary>キー コンテナーの作成/復号化/削除/オープン、キーのエクスポートとインポート、キーを使用してファイルへ署名、およびキー コンテナーのアクセス制御リストの表示と変更を行います。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary>キー コンテナーのアクセス制御リスト (ACL: Access Control List) を変更します。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary>キー コンテナーを作成します。
キー コンテナーを作成すると、ディスク上にファイルも作成されます。 作成されたキー コンテナーは、使用されなくなったときに削除されるという点が非常に重要です。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary>キー コンテナーを復号化します。
復号化には秘密キーが使われるため、これは特権を必要とする操作となります。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary>キー コンテナーを削除します。
キー コンテナーの削除はサービス拒否攻撃につながる可能性があります。そのキーを使って暗号化または署名されたファイルを使用できなくなるためです。 そのため、削除は特権を必要とする操作となります。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary>キー コンテナーからキーをエクスポートします。
キーをエクスポートする機能は、そのキーの排他性を損なうため、有害な可能性があります。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary>キーをキー コンテナーにインポートします。キーをインポートする機能は、コンテナーを削除する機能と同様の危険性を持つ可能性があります。名前付きのキー コンテナーにキーをインポートすると、既存のキーが置き換えられるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary>キー コンテナーにアクセスできません。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary>キー コンテナーを開いて、公開キーを使用します。

<see langword="Open" /> を使うと、秘密キーを使ってファイルを署名または復号化する権限は付与されませんが、ユーザーはファイルの署名の検証およびファイルの暗号化を行えるようになります。 キーの所有者のみが秘密キーを使ってこれらのファイルを復号化できます。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary>キーを使用してファイルに署名します。
ファイルに署名する機能は有害な可能性があります。あるユーザーが別のユーザーのキーを使ってファイルに署名できるようになるためです。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary>キー コンテナーのアクセス制御リスト (ACL) を表示します。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> は、部分的に信頼された Windows Presentation Foundation (WPF) アプリケーションで動作する、オーディオ、画像、およびビデオ メディアの機能を制御するセキュリティのアクセス許可のセットについて説明します。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>オーディオのアクセス許可レベルを指定して、<see cref="T:System.Security.Permissions.MediaPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> の列挙値。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>オーディオ、ビデオ、イメージのアクセス許可レベルを指定することによって、<see cref="T:System.Security.Permissions.MediaPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> の列挙値。</param>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> の列挙値。</param>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> の列挙値。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>画像のアクセス許可レベルを指定することによって、<see cref="T:System.Security.Permissions.MediaPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> の列挙値。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>ビデオのアクセス許可レベルを指定して、<see cref="T:System.Security.Permissions.MediaPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> の列挙値。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定したアクセス許可状態を使用して、<see cref="T:System.Security.Permissions.MediaPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の列挙値。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>オーディオのアクセス許可レベルの現在の値を取得します。</summary>
      <returns>オーディオのアクセス許可レベル。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="securityElement">アクセス許可の再構築に使用する XML エンコード。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>オーディオのアクセス許可レベルの現在の値を取得します。</summary>
      <returns>イメージ許可レベル。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>2 つのアクセス許可の積集合となるアクセス許可には、両方に共通する状態が記述されています。 両方の元のアクセス許可に適合する要求のみが、アクセス許可の積集合に対して有効になります。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>オーディオ、画像、および動画のアクセス許可がすべて無制限である場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>ビデオのアクセス許可レベルの現在の値を取得します。</summary>
      <returns>メディアのアクセス許可レベル。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> の新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値の 1 つ。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> のオーディオのアクセス許可レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> の状態。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.MediaPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.MediaPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> のイメージのアクセス許可レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> の状態。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> のビデオのアクセス許可レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> の状態。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>オーディオのアクセス許可レベルを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>無制限にオーディオを再生できるアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>すべてのオーディオ再生を拒否するアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>制限された安全なオーディオ再生を実行できるアクセス許可。イメージ ファイルへのストリーム アクセスの拒否が含まれます。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>アプリケーションの元のサイトにあるファイルのオーディオ再生のみを実行できるアクセス許可。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>イメージのアクセス許可レベルを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>無制限にイメージを表示できるアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>すべてのイメージが表示されることを拒否するアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>制限された安全なイメージ表示を実行できるアクセス許可。イメージ ファイルへのストリーム アクセスの拒否が含まれます。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>アプリケーションの元のサイトにあるイメージの表示のみを実行できるアクセス許可。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>ビデオのアクセス許可レベルを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>無制限にビデオを再生できるアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>すべてのビデオ再生を拒否するアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>制限された安全なビデオ再生を実行できるアクセス許可。イメージ ファイルへのストリーム アクセスの拒否が含まれます。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>アプリケーションの元のサイトにあるファイルのビデオ再生のみを実行できるアクセス許可。</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary>宣言セキュリティを使用して、<see cref="T:System.Security.PermissionSet" /> のセキュリティ アクションをコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定したセキュリティ アクションを使用して <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">セキュリティ アクションを指定する列挙値のいずれか。</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary>このメソッドは使用されません。</summary>
      <returns>常に null 参照 (Visual Basic の場合は <see langword="nothing" />) です。</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary>このアクセス許可セットの属性オブジェクトに基づいて新しいアクセス許可セットを作成して返します。</summary>
      <returns>新しいアクセス許可セット。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary>宣言するカスタム アクセス許可の XML 表現を格納したファイルを取得または設定します。</summary>
      <returns>アクセス許可セットの XML 表現を格納したファイルの物理パス。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary>XML エンコード済みのアクセス許可セットの 16 進数表現を取得または設定します。</summary>
      <returns>XML エンコード済みのアクセス許可セットの 16 進数表現。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary>アクセス許可セットの名前を取得または設定します。</summary>
      <returns>変更不可の <see cref="T:System.Security.NamedPermissionSet" /> の名前。既定のポリシーに含まれる複数のアクセス許可セットの 1 つです。これは変更できません。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary>
        <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> で指定したファイルが Unicode または ASCII のどちらでエンコードされるかを示す値を取得または設定します。</summary>
      <returns>ファイルが Unicode でエンコードされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary>アクセス許可セットの XML 表現を取得または設定します。</summary>
      <returns>アクセス許可セットの XML 表現。</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary>宣言型と命令型の両方のセキュリティ アクションに対して定義された言語コンストラクトを使用した、アクティブなプリンシパルに対するチェックを許可します (<see cref="T:System.Security.Principal.IPrincipal" /> を参照)。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定した <see cref="T:System.Security.Permissions.PrincipalPermission" /> を使用して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが正しい <see cref="T:System.Security.Permissions.PermissionState" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary>指定した <see cref="T:System.Security.Permissions.PrincipalPermission" /> および <paramref name="name" /> の <paramref name="role" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーの名前</param>
      <param name="role">管理者など、<see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーのロール。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary>指定した <see cref="T:System.Security.Permissions.PrincipalPermission" />、<paramref name="name" />、および認証ステータスの <paramref name="role" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーの名前</param>
      <param name="role">管理者など、<see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーのロール。</param>
      <param name="isAuthenticated">ユーザーが認証されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary>実行時に、現在のプリンシパルが、現在のアクセス許可で指定されたプリンシパルと一致するかどうかを判別します。</summary>
      <exception cref="T:System.Security.SecurityException">現在のプリンシパルは、現在のアクセス許可で指定されたプリンシパルに対するセキュリティ チェックに合格しません。

または -
現在の <see cref="T:System.Security.Principal.IPrincipal" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトが、現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> と等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> と比較する <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクト。</param>
      <returns>指定した <see langword="true" /> が現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトと等しい場合は <see cref="T:System.Security.Permissions.PrincipalPermission" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="elem">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="elem" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適している、<see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターは <see langword="null" /> ではなく、現在のアクセス許可と同じクラスのインスタンスでもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターは現在のアクセス許可と同じ型ではないオブジェクトです。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary>現在のアクセス許可を表す文字列を作成して返します。</summary>
      <returns>現在のアクセス許可の表現。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="other">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> パラメーターは現在のアクセス許可と同じ型ではないオブジェクトです。</exception>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.PrincipalPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値の 1 つ。</param>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary>現在のプリンシパルが、基になるロール ベース セキュリティ プロバイダーによって認証されているかどうかを示す値を取得するか、設定します。</summary>
      <returns>現在のプリンシパルが認証されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.PrincipalPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.PrincipalPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary>現在のプリンシパルに関連付けられた ID の名前を取得または設定します。</summary>
      <returns>基になるロール ベースのセキュリティ プロバイダーによって提供される名前に一致する名前。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary>指定されたセキュリティ ロールのメンバーシップを取得または設定します。</summary>
      <returns>基になるロール ベースのセキュリティ プロバイダーからのロールの名前。</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary>ソフトウェアの発行元の ID を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Authenticode X.509v3 証明書を指定して、<see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificate">ソフトウェア発行元の ID を表す X.509 証明書。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="certificate" /> パラメーターが有効な証明書ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary>ソフトウェア発行元の ID を表す Authenticode X.509v3 証明書を取得または設定します。</summary>
      <returns>ソフトウェア発行元の ID を表す X.509 証明書。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> が有効な証明書ではありません。</exception>
      <exception cref="T:System.NotSupportedException">ID があいまいなため、プロパティを設定できません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。

または -
2 つのアクセス許可は同じではありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary>Authenticode X.509v3 証明書を格納する証明書ファイルを取得または設定します。</summary>
      <returns>X.509 証明書ファイルのファイル パス。通常は .cer の拡張子が付きます。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> の新しいインスタンスを作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary>Authenticode X.509v3 証明書を抽出する署名されたファイルを取得または設定します。</summary>
      <returns>Authenticode シグネチャで署名したファイルのファイル パス。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary>呼び出し元のコードの発行元を識別する Authenticode X.509v3 証明書を取得または設定します。</summary>
      <returns>X.509 証明書の 16 進表現。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary>
        <see cref="N:System.Reflection" /> API を通じて、非パブリック型とメンバーへのアクセスを制御します。 <see cref="N:System.Reflection.Emit" /> API の一部の機能を制御します。</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定どおりに完全に制限されているまたは無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.ReflectionPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary>指定したアクセスで <see cref="T:System.Security.Permissions.ReflectionPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> パラメーターが <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary>現在のアクセス許可で許可されるリフレクションの型を取得または設定します。</summary>
      <returns>現在のアクセス許可のセット フラグ。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを正しくない値に設定しようとしています。 有効な値については、<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> を参照してください。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="other">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.ReflectionPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.ReflectionPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.ReflectionPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary>現在使用できるリフレクションを取得または設定します。</summary>
      <returns>ビットごとの OR を使用して結合した 1 つ以上の <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 値。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを無効な値に設定しようとしました。 有効な値については、<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> を参照してください。</exception>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary>非パブリック メンバーに対して操作を呼び出すことができるかどうかを示す値を取得または設定します。</summary>
      <returns>非パブリック メンバーに対して操作を呼び出すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary>
        <see cref="N:System.Reflection.Emit" /> の特定の機能 (デバッグ記号の出力など) を使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>対象の機能を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary>非パブリック メンバーの制限付き呼び出しが可能かどうかを示す値を取得または設定します。 制限付き呼び出しでは、呼び出される非パブリック メンバーを格納しているアセンブリの許可セットが、呼び出し元アセンブリの許可セットと同じか、またはそのサブセットであることが必要です。</summary>
      <returns>非パブリック メンバーの制限付き呼び出しが可能である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary>表示されていないメンバーに対してリフレクションを使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>表示されていないメンバーに対してリフレクションを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary>使用を許可する <see cref="N:System.Reflection" /> 名前空間および <see cref="N:System.Reflection.Emit" /> 名前空間を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary>
        <see langword="TypeInformation" />、<see langword="MemberAccess" />、および <see langword="ReflectionEmit" /> が設定されています。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> に <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /> は含まれません。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary>許可セットに関係なく、すべてのメンバーに対する呼び出し操作が許可されます。 このフラグを設定しないと、呼び出し操作は参照できるメンバーに対してのみ許可されます。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary>型およびメンバーの列挙が許可されます。 呼び出し操作は参照できる型およびメンバーに対して許可されます。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary>デバッグ記号の出力が許可されます。 .NET Framework 2.0 Service Pack 1 以降では、コードの出力にこのフラグを指定する必要がなくなりました。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary>部分的に信頼されたコードに対して、制限付きメンバー アクセスが提供されます。 部分的に信頼されたコードを使用して、非パブリックな型とメンバーにアクセスできます。ただし、部分的に信頼されたコードの許可セットに、アクセス対象の非パブリックな型とメンバーを含むアセンブリの許可セット内のすべての権限が含まれている場合に限定されます。 このフラグは .NET Framework 2.0 SP1 で新たに追加されました。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary>このフラグは、互換性のために残されています。 型とメンバーを列挙し、そのメタデータを確認する際には、フラグは不要です。 代わりに、<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> を使用してください。</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary>レジストリ変数へのアクセスを制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定どおりに完全に制限されているまたは無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.RegistryPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>指定されたレジストリ変数への指定のアクセスと、レジストリ制御情報への指定のアクセス権を使用して、<see cref="T:System.Security.Permissions.RegistryPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の値の 1 つ。</param>
      <param name="control">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 値のビットごとの組み合わせ。</param>
      <param name="pathList">アクセスが許可されているレジストリ変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>指定したレジストリ変数への指定したアクセスを使用して、<see cref="T:System.Security.Permissions.RegistryPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の値の 1 つ。</param>
      <param name="pathList">アクセスが許可されているレジストリ変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>指定されたレジストリ変数のために、権限の既存の状態へのアクセスを追加し、レジストリのアクセス許可とアクセス制御のアクションを指定します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の値の 1 つ。</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> の値の 1 つ。</param>
      <param name="pathList">レジストリ変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>指定したレジストリ変数へのアクセス権を既存のアクセス許可の状態に追加します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の値の 1 つ。</param>
      <param name="pathList">レジストリ変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="elem">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="elem" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary>指定した <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> を含むレジストリ変数すべてのパスを取得します。</summary>
      <param name="access">レジストリ変数アクセスの単一の型を表す <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値の 1 つです。</param>
      <returns>指定した <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> を含むレジストリ変数の一覧 (セミコロン区切り)。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> が <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の正しい値ではありません。

または -
<paramref name="access" /> が <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> で、レジストリ変数アクセスの 2 つ以上の型を表しているか、<see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> で、レジストリ変数アクセスのどの型も表していません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>指定したレジストリの変数名の新しいアクセス権を、既存のアクセス許可の状態に設定します。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の値の 1 つ。</param>
      <param name="pathList">レジストリ変数の一覧 (セミコロン区切り)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> パラメーターが <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> の有効な値ではありません。

または -
<paramref name="pathList" /> パラメーターが有効な文字列ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="other">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary>レジストリ キーと値へのアクセス許可を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary>レジストリ変数への <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /> アクセス許可、<see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> アクセス許可、および <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> アクセス許可。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> は、複数の <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値を表し、1 つの値が要求される <see cref="T:System.ArgumentException" /> メソッドの <paramref name="access" /> パラメーターとして使用すると、<see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" /> が発生します。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary>レジストリ変数に対する作成アクセス。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary>レジストリ変数へのアクセスはありません。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> は、有効な <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 値がないことを表すため、1 つの値を要求する <see cref="T:System.ArgumentException" /> メソッドのパラメーターとして使用すると、<see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" /> が発生します。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary>レジストリ変数に対する読み取りアクセス。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary>レジストリ変数への書き込みアクセス。</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.RegistryPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> パラメーターが、有効な <see cref="T:System.Security.Permissions.SecurityAction" /> ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary>指定したレジストリ キーのフル アクセスを取得または設定します。</summary>
      <returns>フル アクセスを設定するレジストリ キーのパスをセミコロンで区切ったリスト。</returns>
      <exception cref="T:System.NotSupportedException">get アクセサーが呼び出されています。get アクセサーは、C# コンパイラとの互換性のためだけに用意されています。</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary>指定したレジストリ キーの変更アクセス制御を取得または設定します。</summary>
      <returns>変更アクセス制御を取得または設定するレジストリ キーのパスをセミコロンで区切ったリスト。 .</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary>指定したレジストリ キーに対し、作成レベルのアクセスを取得または設定します。</summary>
      <returns>作成レベルのアクセスを取得または設定するレジストリ キーのパスをセミコロンで区切ったリスト。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.RegistryPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.RegistryPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary>指定したレジストリ キーの読み取りアクセスを取得または設定します。</summary>
      <returns>読み取りアクセスを取得または設定するレジストリ キーのパスをセミコロンで区切ったリスト。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary>指定したレジストリ キーの表示アクセス制御を取得または設定します。</summary>
      <returns>表示アクセス制御を取得または設定するレジストリ キーのパスをセミコロンで区切ったリスト。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary>表示および変更できるレジストリ キーの指定したセットを取得または設定します。</summary>
      <returns>作成、読み取り、および書き込みのアクセスを設定するレジストリ キーのパスをセミコロンで区切ったリスト。</returns>
      <exception cref="T:System.NotSupportedException">get アクセサーが呼び出されています。get アクセサーは、C# コンパイラとの互換性のためだけに用意されています。</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary>指定したレジストリ キーの書き込みアクセスを取得または設定します。</summary>
      <returns>書き込みアクセスを取得または設定するレジストリ キーのパスをセミコロンで区切ったリスト。</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>コード アクセス セキュリティ アクセス許可を制御できるようにします。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>作成時にリソースへのアクセス レベルを指定して、<see cref="T:System.Security.Permissions.ResourcePermissionBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>アクセス許可にアクセス許可エントリを追加します。</summary>
      <param name="entry">追加する <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
      <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> プロパティ内の要素の数が、<see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> プロパティ内の要素の数と等しくありません。

または -
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> が既にアクセス許可に含まれています。</exception>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>ワイルドカード文字を表すために使用する文字を指定します。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>追加されたアクセス許可エントリのアクセス許可を削除します。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>現在のアクセス許可オブジェクトのコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="securityElement">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="securityElement" /> パラメーターのバージョン番号は、サポートされていません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>このアクセス許可に追加された <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> オブジェクトの配列を返します。</summary>
      <returns>このアクセス許可に追加された <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトと、対象のアクセス許可オブジェクトの積集合であるアクセス許可オブジェクトを作成して返します。</summary>
      <param name="target">現在のアクセス許可オブジェクトと同じ型のアクセス許可オブジェクト。</param>
      <returns>現在のオブジェクトと指定したオブジェクトの積集合を表す新しいアクセス許可オブジェクト。 積集合が空の場合、このオブジェクトは <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">対象のアクセス許可オブジェクトが、現在のアクセス許可オブジェクトと同じ型ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトが、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係を調べる対象のアクセス許可オブジェクト。</param>
      <returns>現在のアクセス許可オブジェクトが、指定したアクセス許可オブジェクトのサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>アクセス許可が無制限かどうかを示す値を取得します。</summary>
      <returns>アクセス許可が無制限の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>ローカル参照を表すために使用される文字を指定します。</summary>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>リソースに与えているアクセスの種類を記述する列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Type" /> から派生し、リソースに与えているアクセスの種類を記述する列挙値。</returns>
      <exception cref="T:System.ArgumentNullException">プロパティ値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">プロパティ値が列挙値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>アクセス許可からアクセス許可エントリを削除します。</summary>
      <param name="entry">削除する <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
      <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> プロパティ内の要素の数が、<see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> プロパティ内の要素の数と等しくありません。

または -
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> がアクセス許可内にありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>保護しているリソースを識別する文字列の配列を取得または設定します。</summary>
      <returns>保護しようとしているリソースを識別する文字列の配列。</returns>
      <exception cref="T:System.ArgumentNullException">プロパティ値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">配列の長さが 0 です。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成して返します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可オブジェクトと対象のアクセス許可オブジェクトを結合した、アクセス許可オブジェクトを作成します。</summary>
      <param name="target">現在のアクセス許可オブジェクトと結合されるアクセス許可オブジェクト。 このオブジェクトは、現在のアクセス許可オブジェクトと同じ型である必要があります。</param>
      <returns>現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合を表す新しいアクセス許可オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> アクセス許可オブジェクトが、現在のアクセス許可オブジェクトと同じ型ではありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>コード アクセス セキュリティのアクセス許可セットの最小単位を定義します。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>アクセス許可のアクセス レベルおよびアクセス許可のアクセス パスを指定して、<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">アクセス許可のアクセス レベル列挙値の整数表現。 <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> プロパティは、この値に設定されます。</param>
      <param name="permissionAccessPath">保護しているリソースを識別する文字列の配列。 <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> プロパティは、この値に設定されます。</param>
      <exception cref="T:System.ArgumentNullException">指定された <paramref name="permissionAccessPath" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>アクセス レベル列挙値の整数表現を取得します。</summary>
      <returns>アクセス レベル列挙値。</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>保護しているリソースを識別する文字列の配列を取得します。</summary>
      <returns>保護しているリソースを識別する文字列の配列。</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary>コードに適用されるセキュリティのアクセス許可のセットについて説明します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定どおりに制限されているか、無制限のアクセス許可を持つ、<see cref="T:System.Security.Permissions.SecurityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary>指定したフラグの初期設定の状態を使用して、<see cref="T:System.Security.Permissions.SecurityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> で定義されているアクセス許可ビットのビットごとの OR の組み合わせで表される、アクセス許可の初期状態。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> パラメーターが <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary>セキュリティ権限フラグを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> で定義されているアクセス許可ビットのビットごとの OR の組み合わせで表される、現在のアクセス許可の状態。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを正しくない値に設定しようとしています。 有効な値については、<see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> を参照してください。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号がサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可オブジェクト。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary>コードのダウンロード元の Web サイトに対して ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary>指定したサイト ID を表す <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="site">サイト名またはワイルドカード式。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> パラメーターが有効な文字列ではありません。または、有効なワイルドカード サイト名と一致しません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。
または
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary>現在のサイトを取得または設定します。</summary>
      <returns>現在のサイト。</returns>
      <exception cref="T:System.NotSupportedException">あいまいな ID が含まれるため、サイト ID を取得できません。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。
または
アクセス許可は同一ではありません。互いのサブセットでもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> の新しいインスタンスを作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.SiteIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary>呼び出しコードのサイト名を取得または設定します。</summary>
      <returns>セキュリティ プロバイダーが指定するサイト名の比較対象となるサイト名。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>X.509 証明書が含まれるストアへのアクセスを制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>完全に制限されている、あるいは無制限のアクセス許可状態で、<see cref="T:System.Security.Permissions.StorePermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効な <see cref="T:System.Security.Permissions.PermissionState" /> 値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>指定したアクセスで <see cref="T:System.Security.Permissions.StorePermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> は、<see cref="T:System.Security.Permissions.StorePermissionFlags" /> 値の有効な組み合わせではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>現在のアクセス許可によって許可される <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> アクセスの種類を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 値のビットごとの組み合わせ。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを正しくない値に設定しようとしています。 有効な値については、<see cref="T:System.Security.Permissions.StorePermissionFlags" /> を参照してください。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="securityElement">アクセス許可の再構築に使用する XML エンコードを含む <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> が正しいアクセス許可要素ではありません。

または -
<paramref name="securityElement" /> のバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> は <see langword="null" /> ではなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> は <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコードが入っている <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> は <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.StorePermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定したセキュリティ アクションを使用して <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>コードでストアへの追加が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>ストアに追加するためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.StorePermission" /> を作成して返します。</summary>
      <returns>対象の属性に対応する <see cref="T:System.Security.Permissions.StorePermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>コードでストアの作成が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>ストアを作成するためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>コードでストアの削除が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>ストアを削除するためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>コードでストア内の証明書の列挙が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>証明書を列挙するためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>コードでストアの列挙が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>ストアを列挙するためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>ストアのアクセス許可を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" /> です。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>コードでストアを開くことが許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>ストアを開くためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>コードでストア内の証明書の削除が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>ストアから証明書を削除するためのアクセス許可が付与されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>X.509 証明書ストアへの許可されているアクセス権を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>証明書をストアに追加するためのアクセス許可。
セキュリティ上の理由により、この機能は信頼性の高いコードにのみ与えられるべきです。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>証明書とストアに関するすべての操作を実行するためのアクセス許可。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>新しいストアを作成するためのアクセス許可。
新しいストアは <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> メソッドを呼び出すことで作成されます。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>ストアを削除するためのアクセス許可。
この機能は <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> クラスで公開されていません。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>ストア内の証明書を列挙するためのアクセス許可。
プライバシー上の理由から、この機能は完全に信頼されたコードにのみ与えられるべきです。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>コンピューター上のストアを列挙するためのアクセス許可。
この機能は <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> クラスで公開されていません。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>証明書またはストアに関する操作を実行するためのアクセス許可は付与されません。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>ストアを開くためのアクセス許可。
ストアを開く機能には、証明書の列挙 (プライバシー上の問題が発生) や証明書の追加または削除 (セキュリティ上の問題が発生) を実行する機能は含まれません。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>証明書をストアから削除するためのアクセス許可。
証明書の削除はサービス拒否につながる可能性があるため、この機能は信頼性の高いコードにのみ与えられるべきです。</summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary>厳密な名前の ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定した <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> を使用して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>指定した厳密な名前 ID の <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="blob">厳密な名前 ID の名前空間を定義する公開キー。</param>
      <param name="name">厳密な名前 ID の簡易名の部分。 これは、アセンブリの名前に対応します。</param>
      <param name="version">ID のバージョン番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="e">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="e" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。積集合が空の場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary>厳密な名前 ID の簡易名の部分を取得または設定します。</summary>
      <returns>ID の簡易名。</returns>
      <exception cref="T:System.ArgumentException">値は、空の文字列 ("") です。</exception>
      <exception cref="T:System.NotSupportedException">不明な ID が含まれているので、プロパティ値を取得できません。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary>厳密な名前 ID の名前空間を定義する公開キー blob を取得または設定します。</summary>
      <returns>ID の公開キーを格納する <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />、またはキーが存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">プロパティ値が <see langword="null" /> に設定されています。</exception>
      <exception cref="T:System.NotSupportedException">不明な ID が含まれているので、プロパティ値を取得できません。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。

または -
2 つのアクセス許可は等しくありません。その 1 つは、他方のサブセットです。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary>ID のバージョン番号を取得または設定します。</summary>
      <returns>ID のバージョン。</returns>
      <exception cref="T:System.NotSupportedException">不明な ID が含まれているので、プロパティ値を取得できません。</exception>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</returns>
      <exception cref="T:System.ArgumentException">キーが <see langword="null" /> のため、メソッドが失敗しました。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary>厳密な名前 ID の名前を取得または設定します。</summary>
      <returns>セキュリティ プロバイダーが指定する名前の比較対象となる名前。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary>16 進数文字列として表現される厳密な名前 ID の公開キー値を取得または設定します。</summary>
      <returns>16 進数文字列として表現される厳密な名前 ID の公開キー値。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary>厳密な名前 ID のバージョンを取得または設定します。</summary>
      <returns>厳密な名前 ID のバージョン番号。</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary>厳密な名前の BLOB という公開キー情報を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> クラスの新しいインスタンスを公開キー BLOB の生バイトを使用して初期化します。</summary>
      <param name="publicKey">公開キーの生データを表すバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary>現在の公開キー BLOB が指定した公開キー BLOB と同じかどうかを示す値を取得または設定します。</summary>
      <param name="o">公開キー BLOB を格納するオブジェクト。</param>
      <returns>現在のオブジェクトの公開キー BLOB が <paramref name="o" /> パラメーターの公開キー BLOB と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary>公開キーに基づくハッシュ コードを返します。</summary>
      <returns>公開キーに基づくハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary>公開キー BLOB の文字列形式を作成して返します。</summary>
      <returns>公開キー BLOB の 16 進バージョン。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> クラスへの部分信頼アクセスを定義します。</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">要求する <see cref="T:System.Security.Permissions.PermissionState" />。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> および <see cref="F:System.Security.Permissions.PermissionState.None" /> のみが有効です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> は有効なアクセス許可の状態ではありません。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> および <see cref="F:System.Security.Permissions.PermissionState.None" /> のみが有効です。</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>アクセス許可フラグを指定して、<see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flag">要求するアクセス許可フラグ。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary>派生クラスにより実装されると、現在のアクセス許可オブジェクトの同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>型記述子の <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> を取得または設定します。</summary>
      <returns>型記述子の <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary>派生クラスによってオーバーライドされるときに、XML エンコーディングから、指定した状態のセキュリティ オブジェクトを再構築します。</summary>
      <param name="securityElement">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary>派生クラスによって実装されるときに、現在のアクセス許可と、指定したアクセス許可の積集合で構成されるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>派生クラスによって実装されるときに、現在のアクセス許可が、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>部分的に信頼されているコードから型記述子を呼び出すことができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> プロパティが <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary>派生クラスでオーバーライドされた場合、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary>派生クラスでオーバーライドされると、現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> に適用するアクセス許可フラグを判断します。</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary>派生クラス内でオーバーライドされるときに、後からバイナリ形式にシリアル化でき、<see cref="T:System.Security.Permissions.SecurityAction" /> と共にアセンブリのメタデータに永続的に格納できるアクセス許可オブジェクトを作成します。</summary>
      <returns>シリアル化できるアクセス許可オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> の <see cref="T:System.ComponentModel.TypeDescriptor" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> の <see cref="T:System.ComponentModel.TypeDescriptor" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>部分信頼から型記述子にアクセスできるかどうかを示す値を取得または設定します。</summary>
      <returns>部分信頼から型記述子にアクセスできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>型記述子のアクセス許可の設定を定義します。</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>型記述子にアクセス許可フラグが設定されていません。</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>型記述子は、部分的に信頼されているコードから呼び出すことができます。</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary>ユーザー インターフェイスとクリップボードに関連したアクセス許可を制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定に従って完全に制限されているか、または無制限のアクセスを持つ、<see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが正しい <see cref="T:System.Security.Permissions.PermissionState" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary>クリップボードのためのアクセス許可があり、ウィンドウへのアクセス許可がない、<see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="clipboardFlag">列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="clipboardFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> の値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary>ウィンドウのためのアクセス許可があり、クリップボードへのアクセス許可がない <see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="windowFlag">列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="windowFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionWindow" /> の値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary>ウィンドウとクリップボードのアクセス許可を指定して、<see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="windowFlag">列挙値の 1 つ。</param>
      <param name="clipboardFlag">列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="windowFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionWindow" /> の値ではありません。

または -
<paramref name="clipboardFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> の値ではありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary>アクセス許可で指定されたクリップボードのアクセスを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> の値の 1 つ。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary>アクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary>アクセス許可で指定されたウィンドウへのアクセスを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionWindow" /> の値の 1 つ。</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.UIPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary>許可されるクリップボードへのアクセスの種類を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 値のいずれか。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.UIPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.UIPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary>許可されるウィンドウ リソースへのアクセスの種類を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary>呼び出し元のコードに対して許可されているクリップボードへのアクセスの種類を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary>クリップボードは、無制限に使用できます。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary>クリップボードは使用できません。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary>クリップボードにデータを貼り付ける権限 (<see langword="Copy" />、<see langword="Cut" />) は制限されません。 テキスト ボックスなど、<see langword="Paste" /> を受け入れる組み込みコントロールは、クリップボードのデータを受け入れることができますが、クリップボードをプログラムによって読み込む必要があるユーザー コントロールはクリップボードのデータを受け入れることができません。</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary>コードでの使用が許可されるウィンドウの種類を指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary>ユーザーは、すべてのウィンドウとユーザー入力イベントを無制限に使用できます。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary>ユーザーは、ウィンドウおよびユーザー インターフェイス イベントを使用できません。 ユーザー インターフェイスは使用できません。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary>ユーザーは、描画を行うために <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> だけを使用できます。また、そのサブウィンドウ内のユーザー インターフェイスとしてユーザー入力イベントだけを使用できます。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> の例としては、<see cref="T:System.Windows.Forms.MessageBox" />、コモン ダイアログのコントロール、ブラウザー内に表示されるコントロールがあります。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary>ユーザーは、描画を行うために <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> と <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> だけを使用できます。また、それらのトップレベル ウィンドウとサブウィンドウ内のユーザー インターフェイスとしてユーザー入力イベントだけを使用できます。 詳細については、次の「解説」を参照してください。</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary>コードのダウンロード元の URL に対して ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary>
        <paramref name="site" /> に指定された URL の ID を表す <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="site">URL またはワイルドカード式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="site" /> パラメーターの長さが 0 です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> パラメーターの URL、ディレクトリ、またはサイト部分が有効ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。
または
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。

または -
Url プロパティが、有効な URL ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。

または -
Url プロパティが、有効な URL ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。
または
<see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> プロパティが、有効な URL ではありません。
または
2 つのアクセス許可は同一ではありません。互いのサブセットでもありません。</exception>
      <exception cref="T:System.NotSupportedException">アクセス許可が複数の ID を表しているため、操作があいまいです。</exception>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary>インターネット コードの ID を表す URL を取得または設定します。</summary>
      <returns>インターネット コードの ID を表す URL。</returns>
      <exception cref="T:System.NotSupportedException">URL にあいまいな ID が含まれるため、URL を取得できません。</exception>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.UrlIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary>呼び出し元のコードのフル URL を取得または設定します。</summary>
      <returns>ホストが指定する URL と一致する URL。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> オブジェクトは、WebBrowser コントロールを作成する機能を制御します。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定したアクセス許可状態を使用して、<see cref="T:System.Security.Permissions.WebBrowserPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> の列挙値。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Web ブラウザーのアクセス許可レベルを指定して、<see cref="T:System.Security.Permissions.WebBrowserPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="webBrowserPermissionLevel">
        <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" /> の列挙値。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="securityElement">アクセス許可の再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>2 つのアクセス許可の積集合となるアクセス許可には、両方に共通する状態が記述されています。 両方の元のアクセス許可に適合する要求のみが、アクセス許可の積集合に対して有効になります。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> プロパティが <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Web ブラウザーのアクセス許可レベルの現在の値を取得または設定します。</summary>
      <returns>Web ブラウザーのアクセス許可レベルの現在の値。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>指定した <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> の値の 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> クラスの新しいインスタンスを作成して返します。</summary>
      <returns>セキュリティ宣言に対応する <see cref="T:System.Security.Permissions.WebBrowserPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> の現在の Web ブラウザーのアクセス許可レベルを取得または設定します。</summary>
      <returns>現在の Web ブラウザーのアクセス許可レベルの状態。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Web ブラウザーのアクセス許可レベルを指定します。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>フレームを HTML に移動できない Web ブラウザー。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>フレームを HTML に安全に移動できるがいくつかの制限がある Web ブラウザー。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>制限なく移動できる Web ブラウザー。</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary>コードのダウンロード元のゾーンに対して ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary>指定されたゾーン ID を表す <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="zone">ゾーン識別子。</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。

または -
<paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> ではなく、このアクセス許可が <see cref="F:System.Security.SecurityZone.NoZone" /> セキュリティ ゾーンを現さず、指定した権限が現在のアクセス許可と等しくありません。</exception>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary>現在の <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> で表されるゾーンを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.SecurityZone" /> 値のいずれか 1 つ。</returns>
      <exception cref="T:System.ArgumentException">パラメーター値が <see cref="T:System.Security.SecurityZone" /> の有効値ではありません。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。

または -
2 つのアクセス許可は同じではありません。現在のアクセス許可は、<see cref="F:System.Security.SecurityZone.NoZone" /> セキュリティ ゾーンを表していません。</exception>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary>新しい <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> を作成して返します。</summary>
      <returns>この属性に対応する <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary>プロパティ値が指定するコンテンツ ゾーンのメンバーシップを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.SecurityZone" /> 値のいずれか。</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary>すべてのコードに一致するメンバーシップ条件を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.AllMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行うときに対象となる証拠のセット。</param>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary>指定したメンバーシップ条件が <see cref="T:System.Security.Policy.AllMembershipCondition" /> かどうかを確認します。</summary>
      <param name="o">
        <see cref="T:System.Security.Policy.AllMembershipCondition" /> と比較されるオブジェクト。</param>
      <returns>指定したメンバーシップ条件が <see cref="T:System.Security.Policy.AllMembershipCondition" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">名前付きアクセス許可セットへの参照を解決するために使用するポリシー レベル コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>メンバーシップ条件の表現。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">名前付きアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary>ポリシーを評価するために使用する証拠としてアプリケーション ディレクトリを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">アプリケーション ディレクトリのパス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> の新しいコピーを作成します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> と同一の新しいコピー。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary>アプリケーション ディレクトリのパスを取得します。</summary>
      <returns>アプリケーション ディレクトリのパス。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary>同じ型の証拠オブジェクトのインスタンスが等しいかどうかを確認します。</summary>
      <param name="o">現在の証拠オブジェクトと同じ型のオブジェクト。</param>
      <returns>2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary>現在のアプリケーション ディレクトリのハッシュ コードを取得します。</summary>
      <returns>現在のアプリケーション ディレクトリのハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 証拠オブジェクトの状態の文字列形式を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 証拠オブジェクトの状態の表現。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary>アセンブリがコード グループに属するかどうかをそのアセンブリのアプリケーション ディレクトリをテストして確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たすかどうかを確認します。</summary>
      <param name="evidence">テストを行うときに対象となる証拠のセット。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary>指定したメンバーシップ条件が <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> かどうかを確認します。</summary>
      <param name="o">
        <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> と比較されるオブジェクト。</param>
      <returns>指定したメンバーシップ条件が <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なアプリケーション ディレクトリ メンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">指定されたアクセス許可セットへの参照を解決するために使用するポリシー レベル コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なアプリケーション ディレクトリ メンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>メンバーシップ条件の状態の文字列形式。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">名前付きアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary>アプリケーションに関するセキュリティの決定をカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> を指定して、<see cref="T:System.ApplicationIdentity" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="identity">アプリケーションを一意に識別する <see cref="T:System.ApplicationIdentity" />。</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary>提供された許可セットおよび完全信頼アセンブリのコレクションを使用して、<see cref="T:System.Security.Policy.ApplicationTrust" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultGrantSet">特定のアクセス許可を持たないすべてのアセンブリに付与される既定のアクセス許可セット。</param>
      <param name="fullTrustAssemblies">アプリケーション ドメインで完全に信頼されていると見なされるアセンブリを表す厳密な名前の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fullTrustAssemblies" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fullTrustAssemblies" /> に、<see cref="T:System.Security.Policy.StrongName" /> がないアセンブリが含まれています。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary>アプリケーションの信頼オブジェクトのアプリケーション ID を取得または設定します。</summary>
      <returns>アプリケーションの信頼オブジェクトの <see cref="T:System.ApplicationIdentity" />。</returns>
      <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> のため、<see cref="T:System.ApplicationIdentity" /> を設定できません。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary>既定のアクセス許可セットを定義するポリシー ステートメントを取得または設定します。</summary>
      <returns>既定のアクセス許可を表す <see cref="T:System.Security.Policy.PolicyStatement" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary>アプリケーションに関する追加のセキュリティ情報を取得または設定します。</summary>
      <returns>アプリケーションに関する追加のセキュリティ情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから特定の状態の <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトを再構築します。</summary>
      <param name="element">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトの再構築に使用する XML エンコーディング。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> に使用された XML エンコーディングが無効です。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary>このアプリケーション信頼の完全信頼アセンブリのリストを取得します。</summary>
      <returns>完全信頼アセンブリのリスト。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary>アプリケーションに必要なアクセス許可が設定されており、アプリケーションを信頼して実行できるかどうかを示す値を取得または設定します。</summary>
      <returns>アプリケーションを信頼して実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary>アプリケーションの信頼情報が永続化されているかどうかを示す値を取得または設定します。</summary>
      <returns>アプリケーションの信頼情報が永続化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトとその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary>要素をコレクションに追加します。</summary>
      <param name="trust">追加する <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクト。</param>
      <returns>新しい要素が挿入された位置のインデックス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" /> 内に指定された <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> の <see cref="T:System.Security.Policy.ApplicationTrust" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary>指定した <see cref="T:System.Security.Policy.ApplicationTrust" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="trusts">コレクションに追加するオブジェクトを格納している <see cref="T:System.Security.Policy.ApplicationTrust" /> 型の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" /> 内に指定された <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> の <see cref="T:System.Security.Policy.ApplicationTrust" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>指定した <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> の要素をコレクションの末尾にコピーします。</summary>
      <param name="trusts">コレクションに追加するオブジェクトを格納している <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" /> 内に指定された <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> の <see cref="T:System.Security.Policy.ApplicationTrust" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary>コレクションからすべてのアプリケーション信頼を削除します。</summary>
      <exception cref="T:System.ArgumentException">コレクション内の項目の <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary>コレクション全体を互換性のある 1 次元配列にコピーします。コピー操作は、コピー先配列の指定したインデックスから始まります。</summary>
      <param name="array">現在のコレクションからコピーされる要素のコピー先である <see cref="T:System.Security.Policy.ApplicationTrust" /> 型の 1 次元配列。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は、<paramref name="array" /> の下限を下回っています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。

または -
<see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 内の要素の数が、<paramref name="index" /> からコピー先の <paramref name="array" /> の末尾までに格納できる数を超えています。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary>コレクション内に格納されている項目の数を取得します。</summary>
      <returns>コレクションに格納されている項目数。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>指定したアプリケーション ID に一致する、コレクション内のアプリケーション信頼を取得します。</summary>
      <param name="applicationIdentity">検索対象のアプリケーションを表す <see cref="T:System.ApplicationIdentity" /> オブジェクト。</param>
      <param name="versionMatch">
        <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 値のいずれか 1 つ。</param>
      <returns>一致するすべての <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> オブジェクトを格納している <see cref="T:System.Security.Policy.ApplicationTrust" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary>コレクションを反復処理するために使用できるオブジェクトを返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary>コレクション内の指定したインデックス位置にある <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトを取得します。</summary>
      <param name="index">コレクション内のオブジェクトの 0 から始まるインデックス。</param>
      <returns>コレクション内の指定したインデックス位置にある <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> がコレクション内のオブジェクトの数以上です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> が負の値です。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary>指定したアプリケーションに対する <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトを取得します。</summary>
      <param name="appFullName">アプリケーションの完全名。</param>
      <returns>指定したアプリケーションの <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクト。オブジェクトが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>指定した基準に一致するアプリケーション信頼オブジェクトをコレクションから削除します。</summary>
      <param name="applicationIdentity">削除する <see cref="T:System.ApplicationIdentity" /> オブジェクトの <see cref="T:System.Security.Policy.ApplicationTrust" />。</param>
      <param name="versionMatch">
        <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary>指定したアプリケーション信頼をコレクションから削除します。</summary>
      <param name="trust">削除する <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" /> で指定された <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> オブジェクトの <see cref="T:System.Security.Policy.ApplicationTrust" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary>指定した配列内のアプリケーション信頼オブジェクトをコレクションから削除します。</summary>
      <param name="trusts">現在のコレクションから削除する項目を格納している <see cref="T:System.Security.Policy.ApplicationTrust" /> 型の 1 次元配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>指定したコレクション内のアプリケーション信頼オブジェクトをコレクションから削除します。</summary>
      <param name="trusts">現在のコレクションから削除するアイテムを含む <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するために使用するオブジェクト。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>指定した <see cref="T:System.Collections.ICollection" /> に <see cref="T:System.Array" /> の要素をコピーします。このコピーは、<see cref="T:System.Array" /> の指定したインデックスから開始されます。</summary>
      <param name="array">
        <see cref="T:System.Array" /> からコピーされる要素のコピー先となる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。
または
コピー元の <see cref="T:System.Collections.ICollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> コレクション内の <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> オブジェクトの列挙子を表します。</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> コレクション内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> コレクションの次の要素に移動します。</summary>
      <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary>列挙子を <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> コレクションの先頭にリセットします。</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Object" /> コレクション内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> 内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary>コレクション内のアプリケーション信頼を検索する場合にバージョンを一致させる方法を指定します。</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary>すべてのバージョンで一致します。</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary>特定のバージョンで一致します。</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary>コードに許可されたネットワーク リソース アクセスを指定します。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="T:System.Security.Policy.CodeConnectAccess" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowScheme">現在のインスタンスによって表される URI スキーム。</param>
      <param name="allowPort">現在のインスタンスによって表されるポート。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowScheme" /> が <see langword="null" /> です。

または -
<paramref name="allowScheme" /> が空の文字列 ("") です。

または -
<paramref name="allowScheme" /> には、スキームで許可されていない文字が含まれています。

または -
<paramref name="allowPort" /> が 0 未満です。

または -
<paramref name="allowPort" /> が 65,535 より大きい値です。</exception>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary>スキーム ワイルドカードを表す文字列値を含んでいます。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary>任意のスキームを使用して指定されたポートへのアクセスを表す <see cref="T:System.Security.Policy.CodeConnectAccess" /> インスタンスを返します。</summary>
      <param name="allowPort">返されたインスタンスによって表されるポート。</param>
      <returns>指定したポートの <see cref="T:System.Security.Policy.CodeConnectAccess" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> が 0 未満です。
または
<paramref name="allowPort" /> が 65,535 より大きい値です。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary>コードの元のスキームを使用して指定されたポートへのアクセスを表す <see cref="T:System.Security.Policy.CodeConnectAccess" /> インスタンスを返します。</summary>
      <param name="allowPort">返されたインスタンスによって表されるポート。</param>
      <returns>指定したポートの <see cref="T:System.Security.Policy.CodeConnectAccess" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> が 0 未満です。

または -
<paramref name="allowPort" /> が 65,535 より大きい値です。</exception>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary>既定のポートを表すために使用される値を含んでいます。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary>2 つの <see cref="T:System.Security.Policy.CodeConnectAccess" /> オブジェクトが同じスキームおよびポートを表すかどうかを示す値を返します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.CodeConnectAccess" /> オブジェクトと比較するオブジェクト。</param>
      <returns>2 つのオブジェクトが同一のスキームおよびポートを表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary>特定の型のハッシュ関数として機能します。</summary>
      <returns>現在の <see cref="T:System.Object" /> のハッシュ コード。</returns>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary>コードのダウンロード元 URI のポート値を表すために使用される値を含んでいます。</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary>コードのダウンロード元 URL のスキームを表すために使用される値を含んでいます。</summary>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary>現在のインスタンスによって表されるポートを取得します。</summary>
      <returns>
        <see cref="T:System.Int32" /> と一緒に使用され、コンピューター ポートを識別する <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> 値。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary>現在のインスタンスによって表される URI スキームを取得します。</summary>
      <returns>URI スキームを識別する <see cref="T:System.String" />。小文字に変換されます。</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary>コード グループのすべての実装の派生元である抽象基本クラスを表します。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>
        <see cref="T:System.Security.Policy.CodeGroup" /> の新しいインスタンスを初期化します。</summary>
      <param name="membershipCondition">証拠を確認して、コード グループがポリシーを適用するかどうかを決定するためのメンバーシップ条件。</param>
      <param name="policy">メンバーシップ条件に一致するコードに許可するアクセス許可セットと属性という形式の、コード グループに対するポリシー ステートメント。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> パラメーターの型が有効ではありません。

または -
<paramref name="policy" /> パラメーターの型が有効ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary>子コード グループを現在のコード グループに追加します。</summary>
      <param name="group">子として追加されるコード グループ。 この新しい子コード グループは、リストの末尾に追加されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="group" /> パラメーターが、有効なコード グループではありません。</exception>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary>コード グループのポリシー ステートメントの属性の文字列形式を取得します。</summary>
      <returns>コード グループのポリシー ステートメントの属性の文字列形式。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary>コード グループの子コード グループを順序付けして示したリストを取得または設定します。</summary>
      <returns>子コード グループのリスト。</returns>
      <exception cref="T:System.ArgumentNullException">このプロパティを <see langword="null" /> に設定しようとしました。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Security.Policy.CodeGroup" /> オブジェクトではない子のリストを使用して、このプロパティを設定しようとしています。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary>派生クラスでオーバーライドされると、現在のコード グループの詳細コピーを作成します。</summary>
      <returns>メンバーシップ条件と子コード グループも含む、現在のコード グループの同等コピー。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>派生クラスでオーバーライドされると、派生コード グループに固有のプロパティと内部状態をシリアル化し、指定した <see cref="T:System.Security.SecurityElement" /> にシリアル化した内容を追加します。</summary>
      <param name="element">シリアル化した内容を追加する対象となる XML エンコーディング。</param>
      <param name="level">中にコード グループが存在するポリシー レベル。</param>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary>コード グループの説明を取得または設定します。</summary>
      <returns>コード グループの説明。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary>指定したコード グループが現在のコード グループと等しいかどうかを確認します。</summary>
      <param name="o">現在のコード グループと比較するコード グループ。</param>
      <returns>指定したコード グループが現在のコード グループと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary>指定したコード グループが、現在のコード グループと等しいかどうかを確認します。指定した場合は子コード グループも確認されます。</summary>
      <param name="cg">現在のコード グループと比較するコード グループ。</param>
      <param name="compareChildren">子コード グループも比較する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>指定したコード グループが現在のコード グループと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから、特定の状態のセキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコーディングから、特定の状態とポリシー レベルのセキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">中にコード グループが存在するポリシー レベル。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary>現在のコード グループのハッシュ コードを取得します。</summary>
      <returns>現在のコード グループのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary>コード グループのメンバーシップ条件を取得または設定します。</summary>
      <returns>どの証拠にコード グループを適用するかを決定するメンバーシップ条件。</returns>
      <exception cref="T:System.ArgumentNullException">このパラメーターを <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary>派生クラスでオーバーライドされると、コード グループのマージ ロジックを取得します。</summary>
      <returns>コード グループのマージ ロジックの説明。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary>コード グループの名前を取得または設定します。</summary>
      <returns>コード グループの名前。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>派生クラスでオーバーライドされると、指定した <see cref="T:System.Security.SecurityElement" /> から派生したコード グループに固有のプロパティと内部状態を再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">中にコード グループが存在するポリシー レベル。</param>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary>コード グループの名前付きアクセス許可セットの名前を取得します。</summary>
      <returns>ポリシー レベルの名前付きアクセス許可セットの名前。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary>コード グループに関連付けられているポリシー ステートメントを取得または設定します。</summary>
      <returns>コード グループのポリシー ステートメント。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary>指定した子コード グループを削除します。</summary>
      <param name="group">子として削除されるコード グループ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="group" /> パラメーターが、現在のコード グループの直下の子コード グループではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>派生クラスでオーバーライドされると、証拠のセットのために、コード グループおよびその子孫のポリシーを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>オプション属性を持つコード グループによって与えられたアクセス許可で構成されているポリシー ステートメント。コード グループが適用されない場合は (メンバーシップ条件が指定した証拠と一致しない)、<see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>派生クラスでオーバーライドされると、一致するコード グループを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>一致するコード グループのツリーのルートである <see cref="T:System.Security.Policy.CodeGroup" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>セキュリティ オブジェクト、その現在の状態、およびコードが存在するポリシー レベルの XML エンコーディングを作成します。</summary>
      <param name="level">中にコード グループが存在するポリシー レベル。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>セキュリティ ポリシーがアクセス許可を決定するときに使用する一連の情報を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.Evidence" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>ホストが提供する証拠とアセンブリが提供する証拠から成る複数の証拠セットから <see cref="T:System.Security.Policy.Evidence" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="hostEvidence">新しいインスタンスの作成元となる、ホストが提供する証拠。</param>
      <param name="assemblyEvidence">新しいインスタンスの作成元となる、アセンブリが提供する証拠。</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>既存のインスタンスの簡易コピーから <see cref="T:System.Security.Policy.Evidence" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="evidence">新しいインスタンスの作成元の <see cref="T:System.Security.Policy.Evidence" /> インスタンス。 このインスタンスは詳細コピーされません。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> パラメーターが、<see cref="T:System.Security.Policy.Evidence" /> の有効なインスタンスではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>ホストが提供する証拠とアセンブリが提供する証拠から成る複数の証拠セットから <see cref="T:System.Security.Policy.Evidence" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="hostEvidence">新しいインスタンスの作成元となる、ホストが提供する証拠。</param>
      <param name="assemblyEvidence">新しいインスタンスの作成元となる、アセンブリが提供する証拠。</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>アセンブリによって提供される特定の証拠を証拠セットに追加します。</summary>
      <param name="id">任意の証拠オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> がシリアル化できません。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>指定された型の証拠オブジェクトを、アセンブリによって提供される証拠リストに追加します。</summary>
      <param name="evidence">追加するアセンブリ証拠。</param>
      <typeparam name="T">
        <paramref name="evidence" /> 内のオブジェクトの型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> 型の証拠が既にリスト内にあります。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> がシリアル化できません。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>ホストによって提供される特定の証拠を証拠セットに追加します。</summary>
      <param name="id">任意の証拠オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> がシリアル化できません。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>指定された型のホスト証拠をホスト証拠コレクションに追加します。</summary>
      <param name="evidence">追加するホスト証拠。</param>
      <typeparam name="T">
        <paramref name="evidence" /> 内のオブジェクトの型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> 型の証拠が既にリスト内にあります。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>ホストおよびアセンブリ証拠を証拠セットから削除します。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>この証拠オブジェクトのコピーを返します。</summary>
      <returns>この証拠オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Array" /> に証拠オブジェクトをコピーします。</summary>
      <param name="array">証拠オブジェクトのコピー先の配列。</param>
      <param name="index">証拠オブジェクトのコピー開始位置を示す、配列内の 0 から始まるインデックス位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が null です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は、対象となる配列の範囲外です。</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>証拠セット内の証拠オブジェクトの数を取得します。</summary>
      <returns>証拠セット内の証拠オブジェクトの数。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>アセンブリによって提供される証拠を列挙します。</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> メソッドによって追加された証拠に対する列挙子。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>指定した型のアセンブリ証拠をコレクションから取得します。</summary>
      <typeparam name="T">取得する証拠の型。</typeparam>
      <returns>アセンブリ証拠コレクション内の <paramref name="T" /> 型の証拠。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>ホストが提供する証拠とアセンブリが提供する証拠の両方を含め、証拠セット内のすべての証拠を列挙します。</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> メソッドと <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> メソッドの両方によって追加された証拠に対する列挙子。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>ホストによって提供される証拠を列挙します。</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> メソッドによって追加された証拠に対する列挙子。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>指定した型のホスト証拠をコレクションから取得します。</summary>
      <typeparam name="T">取得する証拠の型。</typeparam>
      <returns>ホスト証拠コレクション内の <paramref name="T" /> 型の証拠。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>証拠セットが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>読み取り専用の証拠セットはサポートされていないため、常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>証拠セットがスレッド セーフかどうかを示す値を取得します。</summary>
      <returns>スレッド セーフな証拠セットがサポートされていないため、常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>証拠がロックされているかどうかを示す値を取得または設定します。</summary>
      <returns>証拠がロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>指定した証拠セットを現在の証拠セットにマージします。</summary>
      <param name="evidence">現在の証拠セットにマージされる証拠セット。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> パラメーターが、<see cref="T:System.Security.Policy.Evidence" /> の有効なインスタンスではありません。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" /> が <see langword="true" /> であり、このメソッドを呼び出すコードに <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> がなく、<paramref name="evidence" /> パラメーターに空ではないホスト リストが指定されています。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>特定の型の証拠をホストおよびアセンブリ列挙から削除します。</summary>
      <param name="t">削除する証拠の型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> が null です。</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>同期ルートを取得します。</summary>
      <returns>証拠セットの同期はサポートされていないため、常に <see langword="this" /> (Visual Basic では <see langword="Me" />)。</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>証拠として使用するすべてのオブジェクトの派生元である基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.EvidenceBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <exception cref="T:System.InvalidOperationException">証拠として使用されたオブジェクトがシリアル化できません。</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>現在のインスタンスの完全なコピーである新しいオブジェクトを作成します。</summary>
      <returns>この証拠オブジェクトのコピー。</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary>コード アセンブリ内にあるファイルを操作するためのアクセス許可をメンバーシップ条件に一致したコード アセンブリに与えます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary>
        <see cref="T:System.Security.Policy.FileCodeGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="membershipCondition">証拠を確認して、コード グループがポリシーを適用するかどうかを決定するためのメンバーシップ条件。</param>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のいずれか 1 つ。 この値は、与えられる <see cref="T:System.Security.Permissions.FileIOPermission" /> を生成するために使用されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> パラメーターの型が有効ではありません。

または -
<paramref name="access" /> パラメーターの型が有効ではありません。</exception>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary>コード グループのポリシー ステートメントの属性の文字列形式を取得します。</summary>
      <returns>常に <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary>現在のコード グループの詳細コピーを作成します。</summary>
      <returns>メンバーシップ条件と子コード グループも含む、現在のコード グループの同等コピー。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary>指定したコード グループが現在のコード グループと等しいかどうかを確認します。</summary>
      <param name="o">現在のコード グループと比較するコード グループ。</param>
      <returns>指定したコード グループが現在のコード グループと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary>現在のコード グループのハッシュ コードを取得します。</summary>
      <returns>現在のコード グループのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary>マージ ロジックを取得します。</summary>
      <returns>文字列 "Union"。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary>コード グループの名前付きアクセス許可セットの名前を取得します。</summary>
      <returns>文字列 "同じディレクトリのディレクトリ " とアクセスの種類を連結したもの。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>一連の証拠について、コード グループおよびその子孫のポリシーを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>オプションの属性を持つコード グループによって与えられたアクセス許可から成るポリシー ステートメント。コード グループがポリシーを適用しない (指定した証拠とメンバーシップ条件が一致しない) 場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">現在のポリシーが <see langword="null" /> です。

または -
複数のコード グループ (親コード グループとすべての子コード グループを含む) が <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /> とマークされています。</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>一致しているコード グループを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>一致するコード グループのツリーのルートである <see cref="T:System.Security.Policy.CodeGroup" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary>コード グループのポリシー ステートメントと、一致した最初の子コード グループのポリシー ステートメントの和集合によってセキュリティ ポリシーを定義できます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>
        <see cref="T:System.Security.Policy.FirstMatchCodeGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="membershipCondition">証拠を確認して、コード グループがポリシーを適用するかどうかを決定するためのメンバーシップ条件。</param>
      <param name="policy">メンバーシップ条件に一致するコードに許可するアクセス許可セットと属性という形式の、コード グループに対するポリシー ステートメント。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> パラメーターの型が有効ではありません。

または -
<paramref name="policy" /> パラメーターの型が有効ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary>コード グループの詳細コピーを作成します。</summary>
      <returns>メンバーシップ条件と子コード グループを含む、コード グループの同等コピー。</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary>マージ ロジックを取得します。</summary>
      <returns>文字列 "First Match"。</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>一連の証拠について、コード グループおよびその子孫のポリシーを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>オプションの属性を持つコード グループによって与えられたアクセス許可から成るポリシー ステートメント。コード グループがポリシーを適用しない (指定した証拠とメンバーシップ条件が一致しない) 場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">複数のコード グループ (親コード グループと子コード グループを含む) が <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /> とマークされています。</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>一致しているコード グループを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>一致するコード グループのツリーのルートである <see cref="T:System.Security.Policy.CodeGroup" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary>コード アセンブリがポリシーの評価の証拠としてグローバル アセンブリ キャッシュ (GAC) から派生していることを確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.GacInstalled" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary>現在のオブジェクトの同等コピーを作成します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.GacInstalled" />の同等コピー。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>現在のオブジェクトに対応する新しい ID アクセス許可を作成します。</summary>
      <param name="evidence">ID アクセス許可の生成元の <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>現在のオブジェクトに対応する新しい ID アクセス許可。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary>現在のオブジェクトが指定したオブジェクトと同等であるかどうかを示します。</summary>
      <param name="o">現在のオブジェクトと比較するオブジェクト。</param>
      <returns>
        <paramref name="o" /> が <see cref="T:System.Security.Policy.GacInstalled" /> オブジェクトである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary>現在のオブジェクトのハッシュ コードを返します。</summary>
      <returns>現在のオブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary>現在のオブジェクトの文字列形式を返します。</summary>
      <returns>現在のオブジェクトの文字列形式。</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary>グローバル アセンブリ キャッシュ メンバーシップをテストして、そのアセンブリがコード グループに属しているかどうかを判断します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.GacMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを示します。</summary>
      <param name="evidence">テストを行う対象の <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>新しい <see cref="T:System.Security.Policy.GacMembershipCondition" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary>現在のオブジェクトが指定したオブジェクトと同等であるかどうかを示します。</summary>
      <param name="o">現在のオブジェクトと比較するオブジェクト。</param>
      <returns>
        <paramref name="o" /> が <see cref="T:System.Security.Policy.GacMembershipCondition" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>指定した XML エンコーディングを使用して、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコーディングを含む <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> が有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>指定した XML エンコーディングを使用し、ポリシー レベル コンテキストを指定して、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコーディングを含む <see cref="T:System.Security.SecurityElement" />。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するための <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> が有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件に対するハッシュ コードを取得します。</summary>
      <returns>0 (ゼロ)。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を返します。</summary>
      <returns>メンバーシップ条件の文字列形式。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>セキュリティ オブジェクトとそのすべての状態情報を含む XML エンコーディングを含んでいる <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>ポリシー レベル コンテキストを指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するための <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <returns>セキュリティ オブジェクトとそのすべての状態情報を含む XML エンコーディングを含んでいる <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary>アセンブリのハッシュ値に関する証拠を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assembly">ハッシュ値が計算されるアセンブリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> がランタイム <see cref="T:System.Reflection.Assembly" /> オブジェクトではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> ハッシュ値を含む <see cref="T:System.Security.Cryptography.MD5" /> オブジェクトを作成します。</summary>
      <param name="md5">
        <see cref="T:System.Security.Cryptography.MD5" /> ハッシュ値を含むバイト配列。</param>
      <returns>
        <paramref name="md5" /> パラメーターによって提供されたハッシュ値を含むオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="md5" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> ハッシュ値を含む <see cref="T:System.Security.Cryptography.SHA1" /> オブジェクトを作成します。</summary>
      <param name="sha1">
        <see cref="T:System.Security.Cryptography.SHA1" /> ハッシュ値を含むバイト配列。</param>
      <returns>
        <paramref name="sha1" /> パラメーターによって提供されたハッシュ値を含むオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sha1" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> ハッシュ値を含む <see cref="T:System.Security.Cryptography.SHA256" /> オブジェクトを作成します。</summary>
      <param name="sha256">
        <see cref="T:System.Security.Cryptography.SHA256" /> ハッシュ値を含むバイト配列。</param>
      <returns>
        <paramref name="sha256" /> パラメーターによって提供されたハッシュ値を含むハッシュ オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sha256" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary>指定したハッシュ アルゴリズムを使用してアセンブリのハッシュ値を計算します。</summary>
      <param name="hashAlg">アセンブリのハッシュ値を計算するために使用するハッシュ アルゴリズム。</param>
      <returns>アセンブリのハッシュ値を表すバイト配列。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlg" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">アセンブリのハッシュ値は生成できません。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>パラメーター名と追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを取得します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary>アセンブリの <see cref="T:System.Security.Cryptography.MD5" /> ハッシュ値を取得します。</summary>
      <returns>アセンブリの <see cref="T:System.Security.Cryptography.MD5" /> ハッシュ値を表すバイト配列。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary>アセンブリの <see cref="T:System.Security.Cryptography.SHA1" /> ハッシュ値を取得します。</summary>
      <returns>アセンブリの <see cref="T:System.Security.Cryptography.SHA1" /> ハッシュ値を表すバイト配列。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary>アセンブリの <see cref="T:System.Security.Cryptography.SHA256" /> ハッシュ値を取得します。</summary>
      <returns>アセンブリの <see cref="T:System.Security.Cryptography.SHA256" /> ハッシュ値を表すバイト配列。</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.Hash" /> の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.Hash" /> の文字列形式。</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary>アセンブリのハッシュ値をテストして、そのアセンブリがコード グループに属するかどうかを判断します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary>メンバーシップを確認するハッシュ アルゴリズムとハッシュ値を使用して、<see cref="T:System.Security.Policy.HashMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="hashAlg">アセンブリのハッシュ値を計算するために使用するハッシュ アルゴリズム。</param>
      <param name="value">テスト対象のハッシュ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlg" /> パラメーターが <see langword="null" /> です。
または
<paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlg" /> パラメーターが、有効なハッシュ アルゴリズムではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行うときに対象となる証拠のセット。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary>指定したオブジェクトの <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> および <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> が、現在の <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> に含まれている <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> および <see cref="T:System.Security.Policy.HashMembershipCondition" /> と等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.HashMembershipCondition" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトの <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> および <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> が、現在の <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> に含まれている <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> および <see cref="T:System.Security.Policy.HashMembershipCondition" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">指定されたアクセス許可セットへの参照を解決するために使用するポリシー レベル コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary>メンバーシップ条件に使用するハッシュ アルゴリズムを取得または設定します。</summary>
      <returns>メンバーシップ条件に使用するハッシュ アルゴリズム。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> を <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary>メンバーシップ条件のテスト対象のハッシュ値を取得または設定します。</summary>
      <returns>メンバーシップ条件のテスト対象のハッシュ値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> を <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>オブジェクト グラフ全体が逆シリアル化された時点で実行します。</summary>
      <param name="sender">コールバックを開始したオブジェクト。 このパラメーターの機能は、現在実装されていません。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化先 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>メンバーシップ条件の状態の文字列形式。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">名前付きアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary>新しい ID アクセス許可を作成するメソッドを定義します。</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>指定した証拠の新しい ID アクセス許可を作成します。</summary>
      <param name="evidence">新しい ID アクセス許可の作成元の証拠。</param>
      <returns>新しい ID アクセス許可。</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary>コード アセンブリがコード グループのメンバーかどうかを判断するテストを定義します。</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行うときに対象となる証拠のセット。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> が現在の <see cref="T:System.Object" /> と等しいかどうかを示します。</summary>
      <param name="obj">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Object" />。</param>
      <returns>指定した <see langword="true" /> が現在の <see cref="T:System.Object" /> と等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>現在のメンバーシップ条件の状態の文字列形式。</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary>アセンブリのダウンロード元のサイトに Web アクセス許可を与えます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary>
        <see cref="T:System.Security.Policy.NetCodeGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="membershipCondition">このコード グループがコード アクセスのセキュリティ ポリシーに適用されるかどうかを判断するために証拠をテストするメンバーシップ条件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> パラメーターの型が有効ではありません。</exception>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary>コードの元のスキームが未知であるか、または認識されない場合にコードの接続アクセスを指定するための値を含みます。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary>指定された接続アクセスを現在のコード グループに追加します。</summary>
      <param name="originScheme">コードのスキームに一致するスキームを含む <see cref="T:System.String" />。</param>
      <param name="connectAccess">コードで元のサーバーへの接続に使用できるスキームおよびポートを指定する、<see cref="T:System.Security.Policy.CodeConnectAccess" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="originScheme" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="originScheme" /> には、スキームで許可されていない文字が含まれています。
または
<paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> および <paramref name="connectAccess" /> は、<see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> をスキームとして指定します。</exception>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary>他の指定されていない元のスキームを指定するために使用される値を含んでいます。</summary>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary>コード グループのポリシー ステートメントの属性の文字列形式を取得します。</summary>
      <returns>常に <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary>現在のコード グループの詳細コピーを作成します。</summary>
      <returns>メンバーシップ条件と子コード グループも含む、現在のコード グループの同等コピー。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary>指定したコード グループが現在のコード グループと等しいかどうかを確認します。</summary>
      <param name="o">現在のコード グループと比較する <see cref="T:System.Security.Policy.NetCodeGroup" /> オブジェクト。</param>
      <returns>指定したコード グループが現在のコード グループと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary>現在のコード グループの接続アクセス情報を取得します。</summary>
      <returns>接続アクセス情報を含む <see cref="T:System.Collections.DictionaryEntry" /> 配列。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary>現在のコード グループのハッシュ コードを取得します。</summary>
      <returns>現在のコード グループのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary>グループをマージするために使用するロジックを取得します。</summary>
      <returns>文字列 "Union"。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary>コード グループの <see cref="T:System.Security.NamedPermissionSet" /> の名前を取得します。</summary>
      <returns>常に文字列 "Same site Web"。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary>現在のコード グループの接続アクセス情報をすべて削除します。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>一連の証拠について、コード グループおよびその子孫のポリシーを解決します。</summary>
      <param name="evidence">アセンブリの <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>オプションの属性を持つ、コード グループが与えたアクセス許可で構成される <see cref="T:System.Security.Policy.PolicyStatement" />。または、コード グループが適用されない場合 (メンバーシップ条件が指定した証拠と一致しない場合) は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">複数のコード グループ (親コード グループと子コード グループを含む) が <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /> とマークされています。</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>一致しているコード グループを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>証拠と一致するコード グループの完全なセット。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary>アクセス許可要求を表す証拠を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>コード アセンブリのアクセス許可要求を指定して、<see cref="T:System.Security.Policy.PermissionRequestEvidence" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="request">コードを実行するために必要な最小アクセス許可。</param>
      <param name="optional">与えられるとコードで使用できるけれども必須ではないアクセス許可。</param>
      <param name="denied">与えられないことをコードが明示的に要求するアクセス許可。</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary>現在の <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> の同等コピーを作成します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> の同等コピー。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary>与えられないことをコードが明示的に要求するアクセス許可を取得します。</summary>
      <returns>与えられないことをコードが明示的に要求するアクセス許可。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary>与えられるとコードで使用できるけれども必須ではないアクセス許可を取得します。</summary>
      <returns>与えられるとコードで使用できるけれども必須ではないアクセス許可。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary>コードを実行するために必要な最小アクセス許可を取得します。</summary>
      <returns>コードを実行するために必要な最小アクセス許可。</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary>
        <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> の状態の文字列形式を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> の状態の表現。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary>ポリシーでコードの実行を禁止するとスローされる例外。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.PolicyException" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Security.Policy.PolicyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.Security.Policy.PolicyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Security.Policy.PolicyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="exception">現在の例外の原因となった例外。 <paramref name="exception" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary>共通言語ランタイムのセキュリティ ポリシー レベルを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>アセンブリが評価の不要なアセンブリのグループのメンバーかどうかを判断するために使用する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> オブジェクトのリストに、指定した <see cref="T:System.Security.Policy.StrongName" /> に対応する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> を追加します。</summary>
      <param name="sn">アセンブリが評価の不要なアセンブリのグループのメンバーかどうかを判断するために使用する <see cref="T:System.Security.Policy.StrongName" /> オブジェクトのリストに追加する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> の作成に使用する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sn" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sn" /> パラメーターで指定された <see cref="T:System.Security.Policy.StrongName" /> が、既に完全信頼を得ています。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>アセンブリが評価の不要なアセンブリのグループのメンバーかどうかを判断するために使用する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> オブジェクトのリストに、指定した <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> を追加します。</summary>
      <param name="snMC">アセンブリが評価の不要なアセンブリのグループのメンバーかどうかを判断するために使用する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> オブジェクトのリストに追加する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snMC" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snMC" /> パラメーターで指定された <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> が、既に完全信頼を得ています。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>
        <see cref="T:System.Security.NamedPermissionSet" /> を現在のポリシー レベルに追加します。</summary>
      <param name="permSet">現在のポリシー レベルに追加する <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permSet" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permSet" /> パラメーターが、<see cref="T:System.Security.NamedPermissionSet" /> の既存の <see cref="T:System.Security.Policy.PolicyLevel" /> と同じ名前です。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary>指定した <see cref="T:System.Security.NamedPermissionSet" /> に、現在のポリシー レベル内の <see cref="T:System.Security.PermissionSet" /> を置換します。</summary>
      <param name="name">置換する <see cref="T:System.Security.NamedPermissionSet" /> の名前。</param>
      <param name="pSet">
        <paramref name="name" /> パラメーターで指定された <see cref="T:System.Security.PermissionSet" /> を置換する <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <returns>置換された <see cref="T:System.Security.NamedPermissionSet" /> のコピー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。

または -
<paramref name="pSet" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが、予約されたアクセス許可セットの名前と等価です。
または
<paramref name="pSet" /> パラメーターで指定された <see cref="T:System.Security.PermissionSet" /> が見つかりません。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary>アプリケーション ドメイン ポリシー レベルで使用する新しいポリシー レベルを作成します。</summary>
      <returns>新しく作成された <see cref="T:System.Security.Policy.PolicyLevel" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから、特定の状態のセキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコーディング。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターで指定された <see cref="T:System.Security.SecurityElement" /> が無効です。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary>アセンブリがセキュリティ ポリシーの評価に使用されるアセンブリのグループのメンバーかどうかを判断するために使用する <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> オブジェクトのリストを取得します。</summary>
      <returns>アセンブリがセキュリティ ポリシーの評価に使用されるアセンブリのグループのメンバーかどうかを判断するために使用する、<see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> オブジェクトのリスト。 これらのアセンブリには、リスト内に存在しないアセンブリのセキュリティ ポリシーの評価中に完全信頼が与えられます。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary>指定した名前を使用して、現在のポリシー レベル内の <see cref="T:System.Security.NamedPermissionSet" /> を返します。</summary>
      <param name="name">検索する <see cref="T:System.Security.NamedPermissionSet" /> の名前。</param>
      <returns>存在する場合は、指定した名前を持つ、現在のポリシー レベル内の <see cref="T:System.Security.NamedPermissionSet" />。それ以外の場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary>ポリシー レベルを説明するラベルを取得します。</summary>
      <returns>ポリシー レベルに関連付けられるラベル。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary>ポリシー レベルに対して定義された名前付きアクセス許可セットのリストを取得します。</summary>
      <returns>ポリシー レベルに対して定義された名前付きアクセス許可セットのリスト。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary>この <see cref="T:System.Security.Policy.PolicyLevel" /> の構成ファイルを最終バックアップに置換し (最後に保存されたポリシーの前の状態を反映し)、構成ファイルを最終保存時の状態に戻します。</summary>
      <exception cref="T:System.Security.Policy.PolicyException">ポリシー レベルに有効な構成ファイルがありません。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>ポリシー レベルでポリシーの評価に使用するアセンブリのリストから、指定した <see cref="T:System.Security.Policy.StrongName" /> を持つアセンブリを削除します。</summary>
      <param name="sn">ポリシーの評価に使用するアセンブリのリストから削除するアセンブリの <see cref="T:System.Security.Policy.StrongName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sn" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sn" /> パラメーターで指定された <see cref="T:System.Security.Policy.StrongName" /> を持つアセンブリが、完全信頼を得ていません。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>ポリシー レベルでポリシーの評価に使用するアセンブリのリストから、指定した <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> を持つアセンブリを削除します。</summary>
      <param name="snMC">ポリシーの評価に使用するアセンブリのリストから削除するアセンブリの <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snMC" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snMC" /> パラメーターで指定された <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> が、完全信頼を得ていません。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>現在のポリシー レベルから、指定した <see cref="T:System.Security.NamedPermissionSet" /> を削除します。</summary>
      <param name="permSet">現在のポリシー レベルから削除する <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <returns>削除された <see cref="T:System.Security.NamedPermissionSet" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="permSet" /> パラメーターで指定された <see cref="T:System.Security.NamedPermissionSet" /> が見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permSet" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary>現在のポリシー レベルから、指定した名前を持つ <see cref="T:System.Security.NamedPermissionSet" /> を削除します。</summary>
      <param name="name">削除する <see cref="T:System.Security.NamedPermissionSet" /> の名前。</param>
      <returns>削除された <see cref="T:System.Security.NamedPermissionSet" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが、予約されたアクセス許可セットの名前と等価です。

または -
指定した名前を持つ <see cref="T:System.Security.NamedPermissionSet" /> が見つかりません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary>現在のポリシー レベルを既定の状態に戻します。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary>ポリシー レベルの証拠に基づいてポリシーを解決し、結果として得られる <see cref="T:System.Security.Policy.PolicyStatement" /> を返します。</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> を解決するために使用する <see cref="T:System.Security.Policy.PolicyLevel" />。</param>
      <returns>結果として得られる <see cref="T:System.Security.Policy.PolicyStatement" />。</returns>
      <exception cref="T:System.Security.Policy.PolicyException">ポリシー レベルには、排他としてマークされた、複数の一致するコード グループが含まれます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>ポリシー レベルでポリシーを解決し、証拠と一致するコード グループ ツリーのルートを返します。</summary>
      <param name="evidence">ポリシーを解決するために使用する <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定した証拠と一致するコード グループのツリーのルートを表す <see cref="T:System.Security.Policy.CodeGroup" />。</returns>
      <exception cref="T:System.Security.Policy.PolicyException">ポリシー レベルには、排他としてマークされた、複数の一致するコード グループが含まれます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary>ポリシー レベルのルート コード グループを取得または設定します。</summary>
      <returns>ポリシー レベル コード グループのツリーのルートである <see cref="T:System.Security.Policy.CodeGroup" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> の値は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary>ポリシー ファイルが格納されているパスを取得します。</summary>
      <returns>ポリシー ファイルが格納されているパス。<see cref="T:System.Security.Policy.PolicyLevel" /> に格納場所がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary>ポリシー レベルの種類を取得します。</summary>
      <returns>
        <see cref="T:System.Security.PolicyLevelType" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary>
        <see cref="T:System.Security.Policy.CodeGroup" /> のステートメントを表し、特定の証拠のセットでコードに適用されるアクセス許可情報、およびその他の情報を記述します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyStatement" /> を指定して、<see cref="T:System.Security.PermissionSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permSet">新しいインスタンスを初期化するために使用する <see cref="T:System.Security.PermissionSet" />。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyStatement" /> と属性を指定して、<see cref="T:System.Security.PermissionSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permSet">新しいインスタンスを初期化するために使用する <see cref="T:System.Security.PermissionSet" />。</param>
      <param name="attributes">
        <see cref="T:System.Security.Policy.PolicyStatementAttribute" /> 値のビットごとの組み合わせ。</param>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary>ポリシー ステートメントの属性を取得または設定します。</summary>
      <returns>ポリシー ステートメントの属性。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary>ポリシー ステートメントの属性の文字列形式を取得します。</summary>
      <returns>ポリシー ステートメントの属性を表す文字列。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary>現在のポリシー ステートメントと等価のコピーを作成します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.PolicyStatement" /> と同一の <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> および <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> を持つ <see cref="T:System.Security.Policy.PolicyStatement" /> の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.Policy.PolicyStatement" /> オブジェクトが、現在の <see cref="T:System.Security.Policy.PolicyStatement" /> と等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.PolicyStatement" /> と比較する <see cref="T:System.Security.Policy.PolicyStatement" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Security.Policy.PolicyStatement" /> が現在の <see cref="T:System.Security.Policy.PolicyStatement" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから、特定の状態のセキュリティ オブジェクトを再構築します。</summary>
      <param name="et">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> パラメーターが、有効な <see cref="T:System.Security.Policy.PolicyStatement" /> エンコーディングではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコーディングから、特定の状態のセキュリティ オブジェクトを再構築します。</summary>
      <param name="et">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 値の検索用の <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> パラメーターが、有効な <see cref="T:System.Security.Policy.PolicyStatement" /> エンコーディングではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適している、<see cref="T:System.Security.Policy.PolicyStatement" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.PolicyStatement" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary>ポリシー ステートメントの <see cref="T:System.Security.PermissionSet" /> を取得または設定します。</summary>
      <returns>ポリシー ステートメントの <see cref="T:System.Security.PermissionSet" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 値の検索用の <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary>コード グループのセキュリティ ポリシーに対する特別な属性フラグを定義します。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary>すべての属性フラグが設定されます。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary>排他コード グループのフラグ。 コード グループにこのフラグが設定されている場合は、そのコード グループに関連付けられているアクセス許可だけが、コード グループに属しているコードに与えられます。 指定されたコードの一部に一致する、最大 1 つのコード グループを排他として設定できます。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary>下位のポリシー レベルが解決操作の一部として評価されない原因となるポリシー ステートメントを表すフラグ。実際には、ポリシー レベルで下位のレベルをオーバーライドできます。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary>フラグが設定されていません。</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary>ポリシー評価のための証拠として、コード アセンブリの Authenticode X.509v3 デジタル署名を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>発行元の公開キーを含む X.509v3 証明書を指定して、<see cref="T:System.Security.Policy.Publisher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cert">ソフトウェア発行元の公開キーを含む <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cert" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary>発行元の Authenticode X.509v3 証明書を取得します。</summary>
      <returns>発行元の <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary>
        <see cref="T:System.Security.Policy.Publisher" /> の同等コピーを作成します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.Publisher" /> と同一の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.Security.Policy.Publisher" /> クラスの現在のインスタンスに対応する ID アクセス許可を作成します。</summary>
      <param name="evidence">ID アクセス許可の生成元の <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定された <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> の <see cref="T:System.Security.Policy.Publisher" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Security.Policy.Publisher" /> と指定したオブジェクトが等しいかどうかを比較します。</summary>
      <param name="o">現在のオブジェクトと等しいかどうかをテストする <see cref="T:System.Security.Policy.Publisher" />。</param>
      <returns>
        <see cref="T:System.Security.Policy.Publisher" /> クラスの 2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> パラメーターが <see cref="T:System.Security.Policy.Publisher" /> オブジェクトではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary>現在の <see cref="P:System.Security.Policy.Publisher.Certificate" /> のハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="P:System.Security.Policy.Publisher.Certificate" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.Publisher" /> の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.Publisher" /> の文字列形式。</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary>アセンブリがコード グループに属するかどうかをソフトウェア発行元の Authenticode X.509v3 証明書をテストして確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>メンバーシップを確認する Authenticode X.509v3 証明書を使用して、<see cref="T:System.Security.Policy.PublisherMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificate">ソフトウェア発行元の公開キーを含む <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary>メンバーシップ条件のテスト対象の Authenticode X.509v3 証明書を取得または設定します。</summary>
      <returns>メンバーシップ条件のテスト対象の <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
      <exception cref="T:System.ArgumentNullException">プロパティ値が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行う対象の <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary>指定したオブジェクトからの発行元証明書が、現在の <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> に含まれている発行元証明書と等しいかどうかを確認します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトからの発行元証明書が、現在の <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> に含まれている発行元証明書と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するために使用する <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary>
        <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> の文字列形式を作成して返します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> の表現。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するために使用する <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary>ポリシー評価のための証拠として、コード アセンブリの開始位置の Web サイトを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary>コード アセンブリの開始位置の Web サイトを使用して <see cref="T:System.Security.Policy.Site" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">関連付けられたコード アセンブリの開始位置の Web サイト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary>
        <see cref="T:System.Security.Policy.Site" /> オブジェクトの同等コピーを作成します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.Site" /> オブジェクトと同一の新しいオブジェクト。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary>指定した URL から新しい <see cref="T:System.Security.Policy.Site" /> オブジェクトを作成します。</summary>
      <param name="url">新しい <see cref="T:System.Security.Policy.Site" /> オブジェクトの作成元の URL。</param>
      <returns>新しいサイト オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> パラメーターが、有効な URL ではありません。

または -
<paramref name="url" /> パラメーターはファイル名です。</exception>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>現在の <see cref="T:System.Security.Policy.Site" /> オブジェクトに対応する新しい ID アクセス許可を作成します。</summary>
      <param name="evidence">ID アクセス許可の生成元の証拠。</param>
      <returns>現在の <see cref="T:System.Security.Policy.Site" /> オブジェクトのサイト ID のアクセス許可。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Security.Policy.Site" /> と指定したオブジェクトが等しいかどうかを比較します。</summary>
      <param name="o">現在のオブジェクトと等しいかどうかをテストするオブジェクト。</param>
      <returns>
        <see cref="T:System.Security.Policy.Site" /> クラスの 2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary>現在の Web サイト名のハッシュ コードを返します。</summary>
      <returns>現在の Web サイト名のハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary>コード アセンブリの開始位置の Web サイトを取得します。</summary>
      <returns>コード アセンブリの開始位置の Web サイトの名前。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.Site" /> オブジェクトの文字列形式を返します。</summary>
      <returns>現在のサイトの表現。</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary>アセンブリがコード グループに属するかどうかをアセンブリの開始位置のサイトをテストして確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary>メンバーシップを決定するサイトの名前を使用して <see cref="T:System.Security.Policy.SiteMembershipCondition" /> クラスの新しいインスタンス初期化します。</summary>
      <param name="site">サイトの名前またはワイルドカード式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> パラメーターが正しい <see cref="T:System.Security.Policy.Site" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行う対象の <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Security.Policy.SiteMembershipCondition" /> オブジェクトのサイトが、現在の <see cref="T:System.Security.Policy.SiteMembershipCondition" /> に含まれているサイトと等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.SiteMembershipCondition" /> と比較する <see cref="T:System.Security.Policy.SiteMembershipCondition" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Security.Policy.SiteMembershipCondition" /> オブジェクトのサイトが、現在の <see cref="T:System.Security.Policy.SiteMembershipCondition" /> に含まれているサイトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">現在のオブジェクトまたは指定したオブジェクトの <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するために使用する <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary>メンバーシップ条件のテスト対象のサイトを取得または設定します。</summary>
      <returns>メンバーシップ条件のテスト対象のサイト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> を <see langword="null" /> に設定しようとしました。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> を無効な <see cref="T:System.Security.Policy.Site" /> に設定しようとしました。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>メンバーシップ条件の文字列形式。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するために使用する <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary>ポリシー評価の証拠としてコード アセンブリの厳密な名前を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>厳密な名前の公開キー BLOB、名前、およびバージョンを使用して、<see cref="T:System.Security.Policy.StrongName" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="blob">ソフトウェア発行元の <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />。</param>
      <param name="name">厳密な名前の簡易名部分。</param>
      <param name="version">厳密な名前の <see cref="T:System.Version" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> パラメーターが <see langword="null" /> です。

または -
<paramref name="name" /> パラメーターが <see langword="null" /> です。

または -
<paramref name="version" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary>現在の <see cref="T:System.Security.Policy.StrongName" /> の同等コピーを作成します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongName" /> と同一の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>現在の <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> に対応する <see cref="T:System.Security.Policy.StrongName" /> を作成します。</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> の生成元の <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</param>
      <returns>指定された <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> の <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary>指定した厳密な名前が現在の厳密な名前と等しいかどうかを判断します。</summary>
      <param name="o">現在の厳密な名前と比較する厳密な名前。</param>
      <returns>指定した厳密な名前が現在の厳密な名前と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary>現在の <see cref="T:System.Security.Policy.StrongName" /> のハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongName" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary>現在の <see cref="T:System.Security.Policy.StrongName" /> の簡易名を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.StrongName" /> の簡易名部分。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary>現在の <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> の <see cref="T:System.Security.Policy.StrongName" /> を取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongName" /> の <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.StrongName" /> の文字列形式を作成します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongName" /> の文字列形式。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary>現在の <see cref="T:System.Version" /> の <see cref="T:System.Security.Policy.StrongName" /> を取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongName" /> の <see cref="T:System.Version" />。</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary>アセンブリの厳密な名前をテストして、そのアセンブリがコード グループに属しているかどうかを確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>メンバーシップを決定する情報として厳密な名前の公開キー BLOB、名前、およびバージョン番号を指定して、<see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="blob">ソフトウェア発行元の厳密な名前の公開キー BLOB。</param>
      <param name="name">厳密な名前の簡易名部分。</param>
      <param name="version">厳密な名前のバージョン番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。

または -
<paramref name="name" /> パラメーターが空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行う対象の <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary>現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> の同等コピーを作成します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> と同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary>指定したオブジェクトの <see cref="T:System.Security.Policy.StrongName" /> が、現在の <see cref="T:System.Security.Policy.StrongName" /> に含まれている <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> と等しいかどうかを確認します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトの <see cref="T:System.Security.Policy.StrongName" /> が現在の <see cref="T:System.Security.Policy.StrongName" /> に含まれている <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">現在のオブジェクトまたは指定したオブジェクトの <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するために使用する <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary>現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> のハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> のハッシュ コード。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> プロパティが <see langword="null" /> である。</exception>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary>メンバーシップ条件に対してテストする対象の <see cref="T:System.Security.Policy.StrongName" /> の簡易名を取得または設定します。</summary>
      <returns>メンバーシップ条件に対してテストする対象の <see cref="T:System.Security.Policy.StrongName" /> の簡易名。</returns>
      <exception cref="T:System.ArgumentException">値が <see langword="null" /> です。

または -
値が空の文字列 ("") です。</exception>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary>メンバーシップ条件に対してテストする対象の <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> の <see cref="T:System.Security.Policy.StrongName" /> を取得または設定します。</summary>
      <returns>メンバーシップ条件に対してテストする対象の <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> の <see cref="T:System.Security.Policy.StrongName" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> を <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> の文字列表現を作成して返します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> の文字列形式。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 参照を解決するために使用する <see cref="T:System.Security.NamedPermissionSet" /> コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary>メンバーシップ条件に対してテストする対象の <see cref="T:System.Version" /> の <see cref="T:System.Security.Policy.StrongName" /> を取得または設定します。</summary>
      <returns>メンバーシップ条件に対してテストする対象の <see cref="T:System.Version" /> の <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary>アプリケーションの実行を決定する場合およびアプリケーションを実行する新しい <see cref="T:System.AppDomain" /> でセキュリティを設定する場合に考慮する信頼マネージャーのコンテキストを表します。</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.TrustManagerContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary>指定した <see cref="T:System.Security.Policy.TrustManagerUIContext" /> オブジェクトを使用して、<see cref="T:System.Security.Policy.TrustManagerContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uiContext">使用する信頼マネージャーのユーザー インターフェイスの種類を指定する <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 値の 1 つ。</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary>アプリケーションのセキュリティ マネージャーで、永続化された決定を無視して信頼マネージャーを呼び出すかどうかを示す値を取得または設定します。</summary>
      <returns>信頼マネージャーを呼び出す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary>信頼マネージャーでこのアプリケーションの状態をキャッシュするかどうかを示す値を取得または設定して、アプリケーション信頼の決定を求めるその後の要求を簡略化します。</summary>
      <returns>状態データをキャッシュする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary>信頼マネージャーが信頼性を判断するためにユーザーにプロンプトを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーにプロンプトを表示しない場合は <see langword="true" />。ユーザーにプロンプトを表示する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary>同意ダイアログに対するユーザーの応答を永続化するかどうかを示す値を取得または設定します。</summary>
      <returns>状態データをキャッシュする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary>以前のアプリケーション ID を取得または設定します。</summary>
      <returns>以前の <see cref="T:System.ApplicationIdentity" /> を表す <see cref="T:System.ApplicationIdentity" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary>信頼マネージャーが表示するユーザー インターフェイスの種類を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 値のいずれか。 既定値は、<see cref="F:System.Security.Policy.TrustManagerUIContext.Run" /> です。</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary>信頼マネージャーが信頼の決定に使用するユーザー インターフェイス (UI) の種類を指定します。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary>インストール用 UI。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary>実行用 UI。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary>アップグレード用 UI。</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary>現在のコード グループのポリシー ステートメントと、メンバーシップ条件が一致しているその子コード グループのポリシー ステートメントの和集合であるポリシー ステートメントを持つコード グループを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>
        <see cref="T:System.Security.Policy.UnionCodeGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="membershipCondition">証拠を確認して、コード グループがポリシーを適用するかどうかを決定するためのメンバーシップ条件。</param>
      <param name="policy">メンバーシップ条件に一致するコードに許可するアクセス許可セットと属性という形式の、コード グループに対するポリシー ステートメント。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> パラメーターの型が有効ではありません。

または -
<paramref name="policy" /> パラメーターの型が有効ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary>現在のコード グループの詳細コピーを作成します。</summary>
      <returns>メンバーシップ条件と子コード グループも含む、現在のコード グループの同等コピー。</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary>マージ ロジックを取得します。</summary>
      <returns>常に文字列 "Union"。</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>一連の証拠について、コード グループおよびその子孫のポリシーを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>オプションの属性を持つコード グループによって与えられたアクセス許可から成るポリシー ステートメント。コード グループがポリシーを適用しない (指定した証拠とメンバーシップ条件が一致しない) 場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">複数のコード グループ (親コード グループと子コード グループを含む) が <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /> とマークされています。</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>一致しているコード グループを解決します。</summary>
      <param name="evidence">アセンブリの証拠。</param>
      <returns>証拠と一致するコード グループの完全なセット。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary>ポリシーを評価するための証拠として、コード アセンブリの発生元の URL を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary>コード アセンブリの発生元の URL を指定して、<see cref="T:System.Security.Policy.Url" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">関連付けられているコード アセンブリの発生元の URL。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary>証拠オブジェクトの新しいコピーを作成します。</summary>
      <returns>証拠オブジェクトと同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.Security.Policy.Url" /> 証拠クラスの現在のインスタンスに対応する ID アクセス許可を作成します。</summary>
      <param name="evidence">ID アクセス許可の生成元の証拠セット。</param>
      <returns>指定した <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 証拠の <see cref="T:System.Security.Policy.Url" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Security.Policy.Url" /> 証拠オブジェクトと指定したオブジェクトが等しいかどうかを比較します。</summary>
      <param name="o">現在のオブジェクトと等しいかどうかをテストする対象の <see cref="T:System.Security.Policy.Url" /> 証拠オブジェクト。</param>
      <returns>2 つの <see cref="T:System.Security.Policy.Url" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary>現在の URL のハッシュ コードを取得します。</summary>
      <returns>現在の URL のハッシュ コード。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.Url" /> の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.Url" /> の文字列形式。</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary>コード アセンブリの発生元の URL を取得します。</summary>
      <returns>コード アセンブリの発生元の URL。</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary>アセンブリの URL をテストして、そのアセンブリがコード グループに属するかどうかを確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary>メンバーシップを決定する URL を指定して、<see cref="T:System.Security.Policy.UrlMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="url">テスト対象の URL。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> は絶対 URL である必要があります。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行うときに対象となる証拠のセット。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary>指定したオブジェクトの URL が、現在の <see cref="T:System.Security.Policy.UrlMembershipCondition" /> に含まれている URL と等しいかどうかを確認します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.UrlMembershipCondition" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトの URL が、現在の <see cref="T:System.Security.Policy.UrlMembershipCondition" /> に含まれている URL と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">現在のオブジェクトまたは指定したオブジェクトの <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">指定されたアクセス許可セットへの参照を解決するために使用するポリシー レベル コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>メンバーシップ条件の状態の文字列形式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">名前付きアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> プロパティが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary>メンバーシップ条件に対してテストする対象の URL を取得または設定します。</summary>
      <returns>メンバーシップ条件に対してテストする対象の URL。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> を <see langword="null" /> に設定しようとしました。</exception>
      <exception cref="T:System.ArgumentException">値が絶対 URL ではありません。</exception>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary>ポリシーを評価するための証拠として、コード アセンブリのセキュリティ ゾーンを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary>コード アセンブリの発生元のゾーンを指定して、<see cref="T:System.Security.Policy.Zone" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="zone">関連付けられているコード アセンブリの発生元のゾーン。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> パラメーターが正しい <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary>証拠オブジェクトの同等コピーを作成します。</summary>
      <returns>証拠オブジェクトと同等の新しいコピー。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary>指定した URL の新しいゾーンを作成します。</summary>
      <param name="url">ゾーンを作成する対象の URL。</param>
      <returns>指定した URL の新しいゾーン。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.Security.Policy.Zone" /> 証拠クラスの現在のインスタンスに対応する ID アクセス許可を作成します。</summary>
      <param name="evidence">ID アクセス許可の生成元の証拠セット。</param>
      <returns>指定した <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 証拠の <see cref="T:System.Security.Policy.Zone" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Security.Policy.Zone" /> 証拠オブジェクトと指定したオブジェクトが等しいかどうかを比較します。</summary>
      <param name="o">現在のオブジェクトと等しいかどうかをテストする対象の <see cref="T:System.Security.Policy.Zone" /> 証拠オブジェクト。</param>
      <returns>2 つの <see cref="T:System.Security.Policy.Zone" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> パラメーターが <see cref="T:System.Security.Policy.Zone" /> オブジェクトではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary>現在のゾーンのハッシュ コードを取得します。</summary>
      <returns>現在のゾーンのハッシュ コード。</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary>コード アセンブリの発生元のゾーンを取得します。</summary>
      <returns>コード アセンブリの発生元のゾーン。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary>現在の <see cref="T:System.Security.Policy.Zone" /> の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Security.Policy.Zone" /> の文字列形式。</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary>アセンブリの発生元のゾーンをテストして、そのアセンブリがコード グループに属しているかどうかを確認します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary>メンバーシップを決定するゾーンを指定して、<see cref="T:System.Security.Policy.ZoneMembershipCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="zone">テスト対象の <see cref="T:System.Security.SecurityZone" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> パラメーターが正しい <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指定した証拠がメンバーシップ条件を満たしているかどうかを確認します。</summary>
      <param name="evidence">テストを行うときに対象となる証拠のセット。</param>
      <returns>指定した証拠がメンバーシップ条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> である。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary>メンバーシップ条件の同等コピーを作成します。</summary>
      <returns>現在のメンバーシップ条件と同等の新しいコピー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> である。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary>指定したオブジェクトのゾーンが、現在の <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> に含まれているゾーンと等しいかどうかを確認します。</summary>
      <param name="o">現在の <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトのゾーンが、現在の <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> に含まれているゾーンと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">現在のオブジェクトまたは指定したオブジェクトの <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">現在のオブジェクトまたは指定したオブジェクトの <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="e">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <param name="level">名前付きアクセス許可セットへの参照を解決するために使用するポリシー レベル コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターが有効なメンバーシップ条件要素ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary>現在のメンバーシップ条件のハッシュ コードを取得します。</summary>
      <returns>現在のメンバーシップ条件のハッシュ コード。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> である。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary>メンバーシップ条件に対してテストする対象のゾーンを取得または設定します。</summary>
      <returns>メンバーシップ条件に対してテストする対象のゾーン。</returns>
      <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> を無効な <see cref="T:System.Security.SecurityZone" /> に設定しようとしました。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary>メンバーシップ条件の文字列形式を作成して返します。</summary>
      <returns>メンバーシップ条件の状態の文字列形式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> である。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> である。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="T:System.Security.Policy.PolicyLevel" /> を指定して、セキュリティ オブジェクトとその現在の状態の XML エンコーディングを作成します。</summary>
      <param name="level">名前付きアクセス許可セットへの参照を解決するためのポリシー レベル コンテキスト。</param>
      <returns>状態情報のすべてを含む、セキュリティ オブジェクトの XML エンコーディング。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが <see langword="null" /> である。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> プロパティが、有効な <see cref="T:System.Security.SecurityZone" /> ではありません。</exception>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary>マネージド コードのポリシー レベルの種類を指定します。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary>アプリケーション内のすべてのマネージド コードに適用されるセキュリティ ポリシー。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary>エンタープライズ内のすべてのマネージド コードに適用されるセキュリティ ポリシー。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary>コンピューター上で実行されるすべてのマネージド コードに適用されるセキュリティ ポリシー。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary>ユーザーが実行するすべてのマネージド コードに適用されるセキュリティ ポリシー。</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary>複数のスレッド間で転送される実行コンテキストのすべてのセキュリティ関連データをカプセル化し、反映します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary>現在のスレッドのセキュリティ コンテキストをキャプチャします。</summary>
      <returns>現在のスレッドのセキュリティ コンテキスト。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary>現在のセキュリティ コンテキストのコピーを作成します。</summary>
      <returns>現在のスレッドのセキュリティ コンテキスト。</returns>
      <exception cref="T:System.InvalidOperationException">現在のセキュリティ コンテキストが以前にも使用されたことがあるか、複数のアプリケーション ドメイン間でマーシャリングされたか、<see cref="M:System.Security.SecurityContext.Capture" /> メソッドを使用して取得されませんでした。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary>
        <see cref="T:System.Security.SecurityContext" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary>セキュリティ コンテキストのフローが中止されたかどうかを判断します。</summary>
      <returns>フローが中止された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary>現在のセキュリティ コンテキストの Windows ID 部分のフローが中止されたかどうかを判断します。</summary>
      <returns>フローが中止された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary>複数の非同期スレッド間におけるセキュリティ コンテキストのフローを復元します。</summary>
      <exception cref="T:System.InvalidOperationException">セキュリティ コンテキストが <see langword="null" /> または空の文字列です。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary>現在のスレッドの指定されたセキュリティ コンテキストで、指定されたメソッドを実行します。</summary>
      <param name="securityContext">設定するセキュリティ コンテキスト。</param>
      <param name="callback">指定されたセキュリティ コンテキストで実行するメソッドを表すデリゲート。</param>
      <param name="state">コールバック メソッドに渡すオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="securityContext" /> は <see langword="null" />です。

または -
キャプチャ操作で <paramref name="securityContext" /> が取得されませんでした。

または
<paramref name="securityContext" /> は、<see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> メソッド呼び出しの引数として既に使用されています。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary>複数の非同期スレッド間におけるセキュリティ コンテキストのフローを中止します。</summary>
      <returns>フローを復元するための <see cref="T:System.Threading.AsyncFlowControl" /> 構造体。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary>複数の非同期スレッドにおける現在のセキュリティ コンテキストの Windows ID 部分のフローを中止します。</summary>
      <returns>フローを復元するための構造体。</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary>セキュリティ コンテキストのソースを識別します。</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary>現在のアプリケーション ドメインがセキュリティ コンテキストのソースです。</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary>現在のアセンブリがセキュリティ コンテキストのソースです。</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary>セキュリティ システムと対話するクラスに、主要なアクセス ポイントを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary>コードを実行するために <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> が必要かどうかを示す値を取得または設定します。</summary>
      <returns>コードを実行するために <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary>後で現在のスレッドのセキュリティ状態を再作成する必要がある場合に、そのスレッドにセキュリティ コンテキスト キャプチャが必要かどうかを判断します。</summary>
      <returns>部分的に信頼されたアプリケーション ドメイン、部分的に信頼されたアセンブリ、および現在アクティブな <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> 修飾子または <see cref="M:System.Security.CodeAccessPermission.Deny" /> 修飾子がスタックに格納されていない場合は <see langword="false" />。これらすべてがスタックに格納されていないことを共通言語ランタイムで保証できない場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary>指定された証拠を持つアプリケーションに安全に付与できるアクセス許可セットを取得します。</summary>
      <param name="evidence">アクセス許可セットと一致させるホスト証拠。</param>
      <returns>指定された証拠を持つアプリケーションの許可セットとして使用できるアクセス許可セット。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary>現在のアセンブリに付与されているゾーン ID アクセス許可セットと URL ID アクセス許可セットを取得します。</summary>
      <param name="zone">付与された <see cref="T:System.Collections.ArrayList" /> オブジェクトの <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> を格納している出力パラメーター。</param>
      <param name="origin">付与された <see cref="T:System.Collections.ArrayList" /> オブジェクトの <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> を格納している出力パラメーター。</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> への要求が失敗しました。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary>アクセス許可が呼び出し元に与えられているかどうかを判断します。</summary>
      <param name="perm">呼び出し元に与えられたかどうかをテストするアクセス許可。</param>
      <returns>呼び出し元に与えられているアクセス許可に、アクセス許可 <paramref name="perm" /> が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary>指定されたファイルから <see cref="T:System.Security.Policy.PolicyLevel" /> を読み込みます。</summary>
      <param name="path">セキュリティ ポリシー情報を含むファイルへの物理ファイル パス。</param>
      <param name="type">読み込まれるポリシー レベルの種類を指定する列挙値の 1 つ。</param>
      <returns>読み込まれたポリシー レベル。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> パラメーターが指定したファイルは存在しません。</exception>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。

または -
このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> がありません。

または -
このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> がありません。

または -
このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> がありません。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary>指定した文字列から <see cref="T:System.Security.Policy.PolicyLevel" /> を読み込みます。</summary>
      <param name="str">構成ファイルでの表示と同じ形式によるセキュリティ ポリシー レベルの XML 表現。</param>
      <param name="type">読み込まれるポリシー レベルの種類を指定する列挙値の 1 つ。</param>
      <returns>読み込まれたポリシー レベル。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> パラメーターが正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary>セキュリティ ポリシーの階層にアクセスする列挙子を、コンピューター ポリシーとユーザー ポリシーのようなレベルで提供します。</summary>
      <returns>セキュリティ ポリシーの階層を構成する <see cref="T:System.Security.Policy.PolicyLevel" /> オブジェクトの列挙子。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>指定された証拠に基づいて、コードに与えるアクセス許可を決定します。</summary>
      <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
      <returns>セキュリティ システムで付与できるアクセス許可。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary>指定された証拠と要求に基づいて、コードに与えるアクセス許可を決定します。</summary>
      <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
      <param name="reqdPset">コードを実行するために必要なアクセス許可。</param>
      <param name="optPset">与えられた場合に使用するオプションのアクセス許可。ただし、コードを実行するためには必要ありません。</param>
      <param name="denyPset">ポリシーがその他の方法で許可しても、コードに決して与えられない拒否されるアクセス許可。</param>
      <param name="denied">与えられないアクセス許可のセットを格納する出力パラメーター。</param>
      <returns>セキュリティ システムが与えるアクセス許可のセット。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">ポリシーが <paramref name="reqdPset" /> パラメーターで指定される最小限の要求アクセス許可の付与に失敗しました。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary>指定された証拠に基づいて、コードに与えるアクセス許可を決定します。</summary>
      <param name="evidences">ポリシーの評価に使用される証拠オブジェクトの配列。</param>
      <returns>指定された証拠のすべてに適切なアクセス許可のセット。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary>指定した証拠と一致するコード グループのコレクションを取得します。</summary>
      <param name="evidence">ポリシーが評価される証拠セット。</param>
      <returns>証拠と一致するコード グループのセットの列挙体。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary>指定した証拠に基づいたコードに対して与えるアクセス許可を判断します。<see cref="T:System.AppDomain" /> レベルのポリシーは除きます。</summary>
      <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
      <returns>セキュリティ システムで付与できるアクセス許可。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary>変更されたセキュリティ ポリシーの状態を保存します。</summary>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" /> で読み込まれて変更されたセキュリティ ポリシー レベルを保存します。</summary>
      <param name="level">保存するポリシー レベル オブジェクト。</param>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ (CAS) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のために CAS ポリシーを有効にするには、&lt;legacyCasPolicy&gt; 要素を使用します。</exception>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary>セキュリティが有効かどうかを示す値を取得または設定します。</summary>
      <returns>セキュリティが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary>
        <see cref="T:System.AppDomainManager" /> オブジェクトからアクションのセキュリティ ステータスを要求するための基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary>
        <see cref="T:System.Security.SecurityState" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary>派生クラスでオーバーライドしたとき、<see cref="T:System.Security.SecurityState" /> で表される状態をホストで確実に使用できるようにします。</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary>
        <see cref="T:System.Security.SecurityState" /> クラスの実装の状態が現在のホストで使用できるかどうかを示す値を取得します。</summary>
      <returns>状態が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary>セキュリティ ポリシーが使用するセキュリティ ゾーンに対応する整数値を定義します。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary>インターネット ゾーンは、別のゾーンに属さないインターネット上の Web サイトで使用します。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary>ローカル イントラネット ゾーンは、会社のイントラネットにあるコンテンツで使用します。 サーバーと情報は、会社のファイアウォール内にあるため、ユーザーまたは会社はより高い信頼レベルをイントラネットのコンテンツに割り当てることができます。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary>ローカル コンピューター ゾーンは、ユーザーのコンピューターに存在するコンテンツが使用する暗黙のゾーンです。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary>ゾーンが指定されていません。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary>信頼されたサイト ゾーンは、インターネット上の他のサイトよりも評判が高く信頼できると見なされた Web サイトにあるコンテンツで使用されます。 このゾーンを使用して、これらのサイトにより高い信頼レベルを割り当て、認証要求の数を最小限にすることができます。 これらの信頼されている Web サイトの URL は、ユーザーがこのゾーンに割り当てる必要があります。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary>制限付きサイト ゾーンは、ダウンロードした場合に問題が発生するか、発生させる可能性があるコンテンツを持つ Web サイトで使用します。 これらの信頼されていない Web サイトは、ユーザーがこのゾーンに割り当てる必要があります。</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary>XML 解析で構文エラーが存在する場合にスローされる例外。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary>
        <see cref="T:System.Security.XmlSyntaxException" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Security.XmlSyntaxException" /> クラスの新しいインスタンスを、例外が検出された行番号を使用して初期化します。</summary>
      <param name="lineNumber">XML 構文エラーが検出された XML ストリームの行番号。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary>
        <see cref="T:System.Security.XmlSyntaxException" /> クラスの新しいインスタンスを、指定したエラー メッセージと例外が検出された行番号を使用して初期化します。</summary>
      <param name="lineNumber">XML 構文エラーが検出された XML ストリームの行番号。</param>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.Security.XmlSyntaxException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Security.XmlSyntaxException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="inner">現在の例外の原因となった例外。 <paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>サービス コントローラーに対するコード アクセス セキュリティ アクセス許可を制御できるようにします。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>リソースへのアクセス レベルを指定して、<see cref="T:System.ServiceProcess.ServiceControllerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の正しい値ではありません。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>アクセス許可のアクセス レベル、サービスが常駐するコンピューターの名前、システムでサービスを識別するための短い名前を指定して、<see cref="T:System.ServiceProcess.ServiceControllerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 値のいずれか 1 つ。</param>
      <param name="machineName">サービスが常駐するコンピューターの名前。</param>
      <param name="serviceName">システムでサービスを識別するための短い名前。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>アクセス許可エントリを指定して、<see cref="T:System.ServiceProcess.ServiceControllerPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccessEntries">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクトの配列。 <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> プロパティは、この値に設定されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>アクセス許可要求に対するアクセス許可エントリのコレクションを取得します。</summary>
      <returns>アクセス許可要求に対するアクセス許可エントリが格納されている <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> アクセス許可クラスによって使用されるアクセス レベルを定義します。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> は既存のサービスに接続できますが、そのサービスを制御することはできません。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> は既存のサービスに接続し、そのサービスを制御できます。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> にはアクセス許可がありません。</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>宣言サービス コントローラーのアクセス許可をチェックできるようにします。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>属性の <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> プロパティを使用して設定される、要求されたアクセス レベルに基づいてアクセス許可を作成します。</summary>
      <returns>作成されたアクセス許可を表す <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>サービスが常駐するコンピューターの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceController" /> に関連付けられているサービスを実行しているコンピューターの名前。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> 構文が無効です。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>アクセス許可要求で使用されるアクセス レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>システムでサービスを識別するための短い名前を取得または設定します。</summary>
      <returns>サービスの名前。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> プロパティの構文が無効です。</exception>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> に対して設定するコード アクセス セキュリティ アクセス許可の最小単位を定義します。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>アクセス許可のアクセス レベル、コンピューターの名前、およびサービスを識別する短い名前を指定して、<see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="permissionAccess">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 値のいずれか 1 つ。</param>
      <param name="machineName">サービスが常駐するコンピューターの名前。</param>
      <param name="serviceName">システムでサービスを識別するための短い名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> が無効です。
または
<paramref name="serviceName" /> が無効です。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>サービスが常駐するコンピューターの名前を取得します。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceController" /> に関連付けられているサービスを実行しているコンピューターの名前。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>アクセス許可要求で使用されるアクセス レベルを取得します。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>システムでサービスを識別するための短い名前を取得します。</summary>
      <returns>サービスの名前。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクトの厳密に型指定されたコレクションを格納します。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>指定した <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> をコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクト。</param>
      <returns>追加された <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクトの 0 から始まるインデックス番号。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>指定した一連のアクセス許可エントリをコレクションに追加します。</summary>
      <param name="value">追加するアクセス許可エントリを格納している <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 型オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>指定した一連のアクセス許可エントリをコレクションに追加します。</summary>
      <param name="value">追加するアクセス許可エントリを格納している <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>指定した <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクトがコレクションに格納されているかどうかを確認します。</summary>
      <param name="value">検索する <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクトがコレクションに属している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>配列内の特定のインデックスを開始位置として、その配列にコレクションからアクセス許可エントリをコピーします。</summary>
      <param name="array">アクセス許可エントリのコピー先となる <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 型の配列。</param>
      <param name="index">アクセス許可エントリのコピーを開始する位置を示す 0 から始まるインデックス番号。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>コレクション内の指定したアクセス許可エントリのインデックスを確認します。</summary>
      <param name="value">検索対象のアクセス許可エントリ。</param>
      <returns>指定したアクセス許可エントリの 0 から始まるインデックス。コレクション内でアクセス許可エントリが見つからなかった場合は -1。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>コレクションの指定したインデックス位置にアクセス許可エントリを挿入します。</summary>
      <param name="index">アクセス許可エントリを挿入する位置を示す、コレクション内の 0 から始まるインデックス番号。</param>
      <param name="value">コレクションに挿入するアクセス許可エントリ。</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>指定したインデックスにあるオブジェクトを取得または設定します。</summary>
      <param name="index">コレクションの 0 から始まるインデックス。</param>
      <returns>指定されたインデックスにある <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> オブジェクト。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear">
      <summary>コレクションの内容を消去した後に、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>コレクションに新しいアクセス許可エントリが挿入される前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" />を挿入する位置の、0 以上のインデックス。</param>
      <param name="value">
        <paramref name="index" /> にあるアクセス許可エントリの新しい値。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>コレクションから新しいアクセス許可エントリを削除する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="value">
        <paramref name="index" /> から削除するアクセス許可エントリ。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>コレクションに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="oldValue" /> が存在する位置の、0 以上のインデックス番号。</param>
      <param name="oldValue">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue">
        <paramref name="index" /> にあるアクセス許可エントリの新しい値。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>指定したアクセス許可エントリをコレクションから削除します。</summary>
      <param name="value">削除するアクセス許可エントリ。</param>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>トランザクションの管理を MSDTC にエスカレートする場合に、<see cref="N:System.Transactions" /> が要求するアクセス許可。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Transactions.DistributedTransactionPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可のコピー。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
      <param name="securityElement">アクセス許可の再構築に使用する XML エンコード。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを示す値を返します。</summary>
      <param name="target">サブセットの関係を調べるアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在の <see cref="T:System.Security.IPermission" /> が、指定した <see cref="T:System.Security.IPermission" /> のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>現在のアクセス許可によって保護されているリソースに無制限でアクセスできるかどうかを示す値を返します。</summary>
      <returns>アクセス許可によって保護されているリソースを無制限に使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>セキュリティ オブジェクトとその現在の状態の XML エンコードを作成します。</summary>
      <returns>セキュリティ オブジェクトとそのすべての状態情報を含む XML エンコーディングを含んでいる <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の和集合を表す <see cref="T:System.Security.IPermission" />。</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>
        <see cref="T:System.Transactions.DistributedTransactionPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>後からバイナリ形式にシリアル化でき、<see cref="T:System.Security.Permissions.SecurityAction" /> と共にアセンブリのメタデータに永続的に格納できるアクセス許可オブジェクトを作成します。</summary>
      <returns>シリアル化可能な、アクセス許可オブジェクト。</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>属性によって保護されているリソースに対して完全な (無制限の) アクセス許可が宣言されているかどうかを示す値を取得または設定します。</summary>
      <returns>保護されているリソースに対して完全なアクセス許可が宣言されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>ASP.NET ホスト環境でアクセス許可を制御します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Web.AspNetHostingPermission" /> 列挙値を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> に <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値の 1 つが設定されていません。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>アクセス許可レベルを指定して、<see cref="T:System.Web.AspNetHostingPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="level">
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 列挙値。</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>派生クラスにより実装されると、現在のアクセス許可オブジェクトの同一のコピーを作成して返します。</summary>
      <returns>現在のアクセス許可オブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコーディングから、指定した状態のアクセス許可オブジェクトを再構築します。</summary>
      <param name="securityElement">アクセス許可オブジェクトの再構築に使用する XML エンコーディングを含む <see cref="T:System.Security.SecurityElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> の <see cref="P:System.Security.SecurityElement.Tag" /> プロパティが "IPermission" ではありません。

または -
<paramref name="securityElement" /> の <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> クラスが <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>派生クラスで実装される場合、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定されたアクセス許可の積集合を表す <see cref="T:System.Security.IPermission" />。積集合がない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Web.AspNetHostingPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在のアクセス許可が、指定したアクセス許可のサブセットかどうかを示す値を返します。</summary>
      <param name="target">現在のアクセス許可と結合する <see cref="T:System.Security.IPermission" />。 これは、現在の <see cref="T:System.Security.IPermission" /> と同じ型である必要があります。</param>
      <returns>現在の <see cref="T:System.Security.IPermission" /> が、指定した <see cref="T:System.Security.IPermission" /> のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Web.AspNetHostingPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>現在のアクセス許可によって保護されているリソースに無制限でアクセスできるかどうかを示す値を返します。</summary>
      <returns>アクセス許可により保護されているリソースの無制限使用が可能な場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>ASP.NET アプリケーションで現在ホストしているアクセス許可レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 列挙値のいずれか。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>アクセス許可オブジェクトとその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>アクセス許可オブジェクトとそのすべての状態情報を含む XML エンコーディングを含む <see cref="T:System.Security.SecurityElement" />。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
      <param name="target">現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
      <returns>現在のアクセス許可と指定したアクセス許可の和集合を表す <see cref="T:System.Security.IPermission" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Web.AspNetHostingPermission" /> ではありません。</exception>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>
        <see cref="T:System.Web.AspNetHostingPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 列挙値のいずれか。</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Web.AspNetHostingPermission" /> プロパティによって以前に設定されたアクセス許可レベルで新しい <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" /> を作成します。</summary>
      <returns>新しい <see cref="T:System.Security.IPermission" /> である <see cref="T:System.Web.AspNetHostingPermission" />。</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>現在ホストしているアクセス許可レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 列挙値のいずれか。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>ASP.NET Web アプリケーションに付与される信頼レベルを指定します。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>信頼レベルが <see langword="High" /> 以下のレベルに対する要求で保護された機能が成功することを示します。 このレベルは、信頼度の低いアクセスをサポートする大部分のマネージド アクセス許可を使用する必要がある、信頼度の高いマネージド コード アプリケーションのために用意されています。 最も高い一部のアクセス許可 (ネイティブ コードを呼び出す機能など) は与えられませんが、信頼されたアプリケーションを最小の特権で実行したり、信頼度の高いアプリケーションに一定レベルの制約を与えたりする手段が提供されます。 このレベルは、構成ファイルの trust セクションで、<see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 以上の信頼レベルを設定することによって与えられます。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>
        <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> レベル以下のレベルに対する要求で保護された機能が成功することを示します。 このレベルは、制約のある環境で限定的なリソースに対する読み取り専用アクセスを許可するために用意されています。 このレベルは、構成ファイルの trust セクションで、<see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 信頼レベルを指定することによって与えられます。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>
        <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> レベル以下のレベルに対する要求で保護された機能が成功することを示します。 このレベルは、構成ファイルの trust セクションで、<see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 以上の信頼レベルを設定することによって与えられます。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>
        <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> レベルの要求で保護された機能が成功することを示します。 このレベルでは、コードの実行は許可されますが、システムに存在するリソースとの対話は許可されません。 このレベルは、構成ファイルの trust セクションで、<see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 以上の信頼レベルを設定することによって与えられます。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>アクセス許可が許可されていないことを示します。 <see cref="T:System.Web.AspNetHostingPermission" /> に対するすべての要求は失敗します。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>アプリケーションのすべての機能を使用するためのアクセス許可に対する要求が、すべて許可されることを示します。 これは、構成ファイルの trust セクションで <see langword="Full" /> 信頼レベルを与えることと同じです。</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>XAML 読み込みのためのアセンブリと型に対するアクセス制御を定義します。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> で要求されたアセンブリに基づいて <see cref="T:System.Reflection.Assembly" /> インスタンスを返します。</summary>
      <param name="assembly">要求対象のアセンブリ。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のソース情報として使用される <paramref name="assembly" /> 値を持つ <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> で要求されたアセンブリに基づいて <see cref="T:System.Reflection.AssemblyName" /> インスタンスを返します。</summary>
      <param name="assemblyName">要求のアセンブリ名。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のソース情報として使用される <paramref name="assemblyName" /> 値を持つ <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> が有効な完全修飾アセンブリ名ではありません。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>この <see cref="T:System.Reflection.AssemblyName" /> がアクセス許可を決定するアセンブリの <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> を取得します。</summary>
      <returns>この <see cref="T:System.Reflection.AssemblyName" /> がアクセス許可を決定するアセンブリの <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>修飾名によって指定された特定の型に基づく <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> インスタンスを返します。</summary>
      <param name="assemblyQualifiedTypeName">アセンブリ修飾型名として解析される文字列。</param>
      <returns>型に対するリフレクションによって決定する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> および <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> のソース情報として使用される <paramref name="assemblyQualifiedTypeName" /> 値を持つ、<see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> は、有効なアセンブリ修飾型名ではありません。
または
<paramref name="assemblyQualifiedTypeName" /> 内のアセンブリ名が有効なアセンブリ名ではありません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> によって指定された特定の型に基づく <see cref="T:System.Type" /> インスタンスを返します。</summary>
      <param name="type">アクセスを要求する対象の <see cref="T:System.Type" />。</param>
      <returns>型に対するリフレクションによって決定する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> および <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> のソース情報として使用される <paramref name="type" /> 値を持つ、<see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> がアクセス許可を決定する型の非修飾文字列名を取得します。</summary>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> がアクセス許可を決定する型の非修飾文字列名。</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>XAML リーダーまたはライターで使用されるアセンブリから型を読み込むためのアクセス許可を宣言します。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>固有の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 値の列挙可能なセットを使用して、<see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowedAccess">固有の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 値の列挙可能なセット。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> に、null の項目などの無効な情報が含まれていました。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>既存のアクセス許可を使用して、<see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値。</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>単一の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 値を使用して、<see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowedAccess">定義する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> で表されるすべての <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 値のリストを取得します。</summary>
      <returns>読み取り専用の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 値のリスト、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> のコピーを作成して返します。</summary>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> のコピー。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="elem">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> に、<see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の XML エンコーディングが含まれていません。

または -
<paramref name="elem" /> 内の version 属性はサポートされていません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のリスト内に指定された <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> が含まれるかどうかを返します。</summary>
      <param name="requestedAccess">チェックする特定の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</param>
      <returns>現在の <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> のリスト内のアイテムとして <paramref name="requestedAccess" /> が存在する場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> が null です。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定されたアクセス許可の積集合である <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> を作成して返します。</summary>
      <param name="target">現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> との積集合を持つ <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 <see langword="null" /> の可能性があります。</param>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定した <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の積集合を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではないか、または <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 <see langword="null" /> の可能性があります。</param>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではないか、または <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が無制限のアクセス許可を示すかどうかを返します。</summary>
      <returns>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が無制限のアクセス許可を示す場合は <see langword="true" />。 この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> に固有のアクセス レベル制限が含まれている場合や、アクセス許可がない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> とその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>状態情報を含む、この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の XML エンコーディング。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定したアクセス許可の和集合を表すアクセス許可を作成します。</summary>
      <param name="other">現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と結合する <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 <see langword="null" /> の可能性があります。</param>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定した <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の和集合を表す新しい <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> が <see langword="null" /> ではないか、または <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ではありません。</exception>
    </member>
  </members>
</doc>