<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.PerformanceCounter</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.CounterCreationData">
      <summary>カスタム カウンターのカウンター タイプ、名前、およびヘルプ文字列を定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor">
      <summary>空の名前およびヘルプ文字列を指定して、<see cref="T:System.Diagnostics.CounterCreationData" /> クラスの新しいインスタンスを <see langword="NumberOfItems32" /> タイプのカウンターに初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <summary>カウンター名およびヘルプ文字列を指定して、<see cref="T:System.Diagnostics.CounterCreationData" /> クラスの新しいインスタンスを、指定したタイプのカウンターに初期化します。</summary>
      <param name="counterName">カウンター名。カテゴリ内で一意である必要があります。</param>
      <param name="counterHelp">カウンターの動作を説明するテキスト。</param>
      <param name="counterType">カウンターの動作を識別する <see cref="T:System.Diagnostics.PerformanceCounterType" />。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定した <paramref name="counterType" /> の値が <see cref="T:System.Diagnostics.PerformanceCounterType" /> 列挙体のメンバーではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterHelp" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <summary>カスタム カウンターの説明を取得または設定します。</summary>
      <returns>カウンターの動作を説明するテキスト。</returns>
      <exception cref="T:System.ArgumentNullException">指定された値が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterName">
      <summary>カスタム カウンターの名前を取得または設定します。</summary>
      <returns>カテゴリ内で一意なカウンター名。</returns>
      <exception cref="T:System.ArgumentNullException">指定された値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">指定された値が 1 ～ 80 文字の長さではないか、二重引用符、制御文字、または空白 (先頭または末尾) があります。</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterType">
      <summary>カスタム カウンターのパフォーマンス カウンター タイプを取得または設定します。</summary>
      <returns>パフォーマンス カウンターの動作を定義する <see cref="T:System.Diagnostics.PerformanceCounterType" />。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> 列挙体のメンバーではないタイプを指定しました。</exception>
    </member>
    <member name="T:System.Diagnostics.CounterCreationDataCollection">
      <summary>厳密に型指定された <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> インスタンスに関連付けずに、<see cref="T:System.Diagnostics.CounterCreationData" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> インスタンスの配列を指定して、<see cref="T:System.Diagnostics.CounterCreationData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">この <see cref="T:System.Diagnostics.CounterCreationData" /> を初期化するために使用する <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> インスタンスの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> のインスタンスのコレクションを指定して、<see cref="T:System.Diagnostics.CounterCreationData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">この <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> を初期化するために使用する <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスが格納されている <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <summary>コレクションに <see cref="T:System.Diagnostics.CounterCreationData" /> クラスのインスタンスを追加します。</summary>
      <param name="value">既存のコレクションに追加する <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクト。</param>
      <returns>新しい <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトのインデックス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトではありません。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <summary>指定された <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスの配列をコレクションに追加します。</summary>
      <param name="value">既存のコレクションに追加する <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <summary>指定された <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスのコレクションをコレクションに追加します。</summary>
      <param name="value">既存のコレクションに追加する <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスのコレクション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスがコレクションにあるかどうかを判断します。</summary>
      <param name="value">コレクションから検索する <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationData" /> の要素を array にコピーします。コピーは、array 内の指定したインデックス位置から開始されます。</summary>
      <param name="array">コレクションに追加する <see cref="T:System.Diagnostics.CounterCreationData" /> インスタンスの配列。</param>
      <param name="index">新しいインスタンスを追加する位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> の要素数が、<paramref name="index" /> からコピー先の配列の末尾までに格納できる数を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <summary>コレクション内の <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトのインデックスを返します。</summary>
      <param name="value">コレクション内で検索する <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクト。</param>
      <returns>指定された <see cref="T:System.Diagnostics.CounterCreationData" /> がコレクション内に存在する場合は、その値の 0 から始まるインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <summary>コレクション内の指定したインデックス位置に、<see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトを挿入します。</summary>
      <param name="index">
        <see cref="T:System.Diagnostics.CounterCreationData" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">コレクションに挿入する <see cref="T:System.Diagnostics.CounterCreationData" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が、コレクション内の項目数を超えています。</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationData" /> コレクションのインデックスを作成します。</summary>
      <param name="index">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> のインデックス。</param>
      <returns>コレクションの個別要素にアクセスするために使用されるコレクション インデックス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> がコレクション内の項目数以上です。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <summary>指定されたオブジェクトをチェックして、有効な <see cref="T:System.Diagnostics.CounterCreationData" /> 型であるかどうかを決定します。</summary>
      <param name="value">検証されるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトではありません。</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <summary>
        <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトをコレクションから削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:System.Diagnostics.CounterCreationData" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は <see cref="T:System.Diagnostics.CounterCreationData" /> オブジェクトではありません。

または -
<paramref name="value" /> がコレクション内に存在しません。</exception>
    </member>
    <member name="T:System.Diagnostics.CounterSample">
      <summary>パフォーマンス カウンター用の生データを保持する構造体を定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <summary>
        <see cref="T:System.Diagnostics.CounterSample" /> 構造体の新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> プロパティを 0 (ゼロ) に設定します。</summary>
      <param name="rawValue">パフォーマンス カウンターのサンプルに関連付けられている数値。</param>
      <param name="baseValue">サンプルが複数のカウンターに基づいている場合にだけ使用されるカウンターの生のベース値。省略できます。</param>
      <param name="counterFrequency">カウンターを読み取る頻度。</param>
      <param name="systemFrequency">システムがカウンターを読み取る頻度。</param>
      <param name="timeStamp">生のタイム スタンプ。</param>
      <param name="timeStamp100nSec">信頼性の高い生のタイム スタンプ。</param>
      <param name="counterType">このサンプルがスナップショットになるカウンターの種類を示す <see cref="T:System.Diagnostics.PerformanceCounterType" /> オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <summary>
        <see cref="T:System.Diagnostics.CounterSample" /> 構造体の新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> プロパティを渡された値に設定します。</summary>
      <param name="rawValue">パフォーマンス カウンターのサンプルに関連付けられている数値。</param>
      <param name="baseValue">サンプルが複数のカウンターに基づいている場合にだけ使用されるカウンターの生のベース値。省略できます。</param>
      <param name="counterFrequency">カウンターを読み取る頻度。</param>
      <param name="systemFrequency">システムがカウンターを読み取る頻度。</param>
      <param name="timeStamp">生のタイム スタンプ。</param>
      <param name="timeStamp100nSec">信頼性の高い生のタイム スタンプ。</param>
      <param name="counterType">このサンプルがスナップショットになるカウンターの種類を示す <see cref="T:System.Diagnostics.PerformanceCounterType" /> オブジェクト。</param>
      <param name="counterTimeStamp">サンプルを取得した時刻。</param>
    </member>
    <member name="P:System.Diagnostics.CounterSample.BaseValue">
      <summary>カウンターの省略可能な生のベース値を取得します。</summary>
      <returns>サンプルが複数のカウンターに基づいている場合にだけ使用される生のベース値。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <summary>単一サンプル ポイントを使用して、カウンターのパフォーマンス データを計算します。 通常、このメソッドは、計算されないパフォーマンス カウンター タイプに使用します。</summary>
      <param name="counterSample">パフォーマンス データ計算用のベース ポイントとして使用する <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <returns>計算されたパフォーマンス値。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>2 つのサンプル ポイントを使用して、カウンターのパフォーマンス データを計算します。 このメソッドは、通常、平均など、計算されるパフォーマンス カウンター タイプに使用します。</summary>
      <param name="counterSample">パフォーマンス データ計算用のベース ポイントとして使用する <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <param name="nextCounterSample">パフォーマンス データ計算用の終了ポイントとして使用する <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <returns>計算されたパフォーマンス値。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterFrequency">
      <summary>生のカウンターの頻度を取得します。</summary>
      <returns>カウンターを読み取る頻度。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <summary>カウンターのタイム スタンプを取得します。</summary>
      <returns>サンプルを取得した時刻。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterType">
      <summary>パフォーマンス カウンター タイプを取得します。</summary>
      <returns>このサンプルがスナップショットになるカウンターの種類を示す <see cref="T:System.Diagnostics.PerformanceCounterType" /> オブジェクト。</returns>
    </member>
    <member name="F:System.Diagnostics.CounterSample.Empty">
      <summary>
        <see langword="NumberOfItems32" /> タイプの、初期化されていない空のパフォーマンス カウンターのサンプルを定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <summary>指定した <see cref="T:System.Diagnostics.CounterSample" /> 構造体が、現在の <see cref="T:System.Diagnostics.CounterSample" /> 構造体と等しいかどうかを示します。</summary>
      <param name="sample">このインスタンスと比較する <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <returns>
        <paramref name="sample" /> が現在のインスタンスと等しい場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <summary>指定された構造体が <see cref="T:System.Diagnostics.CounterSample" /> 構造体かどうか、および現在の <see cref="T:System.Diagnostics.CounterSample" /> 構造体と同一かどうかを示します。</summary>
      <param name="o">現在の構造体と比較する <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <returns>
        <paramref name="o" /> が <see cref="T:System.Diagnostics.CounterSample" /> 構造体で、現在のインスタンスに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.GetHashCode">
      <summary>現在のカウンター サンプルのハッシュ コードを取得します。</summary>
      <returns>現在のカウンター サンプルのハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>2 つの <see cref="T:System.Diagnostics.CounterSample" /> 構造体が等しいかどうかを示す値を返します。</summary>
      <param name="a">
        <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <param name="b">
        <paramref name="a" /> パラメーターで指定された構造体と比較する別の <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <returns>
        <see langword="true" /> と <paramref name="a" /> が等しい場合は <paramref name="b" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>2 つの <see cref="T:System.Diagnostics.CounterSample" /> 構造体が等しくないかどうかを示す値を返します。</summary>
      <param name="a">
        <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <param name="b">
        <paramref name="a" /> パラメーターで指定された構造体と比較する別の <see cref="T:System.Diagnostics.CounterSample" /> 構造体。</param>
      <returns>
        <paramref name="a" /> と <paramref name="b" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.RawValue">
      <summary>カウンターの生の値を取得します。</summary>
      <returns>パフォーマンス カウンターのサンプルに関連付けられている数値。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.SystemFrequency">
      <summary>生のシステムの頻度を取得します。</summary>
      <returns>システムがカウンターを読み取る頻度。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp">
      <summary>生のタイム スタンプを取得します。</summary>
      <returns>システム タイム スタンプ。</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <summary>信頼性の高い生のタイム スタンプを取得します。</summary>
      <returns>0.1 ミリ秒の単位で表されるシステム タイム スタンプ。</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSampleCalculator">
      <summary>パフォーマンス カウンターのデータを解釈するユーティリティ関数のセットを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <summary>単一の生のカウンター サンプルの計算された値を算出します。</summary>
      <param name="newSample">システムが取得した最新のサンプルを示す <see cref="T:System.Diagnostics.CounterSample" />。</param>
      <returns>パフォーマンス カウンターの計算された値の浮動小数点表現。</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>2 つの生のカウンター サンプルの計算された値を算出します。</summary>
      <param name="oldSample">システムが取得した以前のサンプルを示す <see cref="T:System.Diagnostics.CounterSample" />。</param>
      <param name="newSample">システムが取得した最新のサンプルを示す <see cref="T:System.Diagnostics.CounterSample" />。</param>
      <returns>パフォーマンス カウンターの計算された値の浮動小数点表現。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="oldSample" /> が、<paramref name="newSample" /> とは異なるカウンター タイプを使用しています。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
        <paramref name="newSample" /> カウンター タイプで PDH (Performance Data Helper) エラーが発生しました。 詳細については、このドキュメントの「Win32 と COM の開発」セクションの「Checking PDH Interface Return Values」を参照してください。</exception>
    </member>
    <member name="T:System.Diagnostics.ICollectData">
      <summary>パフォーマンス カウンターを使用するときにシステムに読み込まれるパフォーマンス DLL のパフォーマンス データを用意します。</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CloseData">
      <summary>パフォーマンス DLL の Close パフォーマンス データ関数によって呼び出されます。</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>パフォーマンス DLL のパフォーマンス データを収集します。</summary>
      <param name="id">呼び出しインデックス。</param>
      <param name="valueName">要求されたオブジェクト識別子を含む Unicode 文字列リストへのポインター。</param>
      <param name="data">データ バッファーへのポインター。</param>
      <param name="totalBytes">バイト数へのポインター。</param>
      <param name="res">このメソッドから制御が戻るときに、データ (エラーの場合は -1、サイズの大きいバッファーが必要な場合は -2) の後の最初のバイトに対する <see cref="T:System.IntPtr" /> を格納します。 このパラメーターは初期化せずに渡されます。</param>
    </member>
    <member name="T:System.Diagnostics.InstanceData">
      <summary>パフォーマンス カウンターのサンプルに関連付けられたインスタンス データを保持します。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <summary>指定したサンプルとパフォーマンス カウンター インスタンスを使用して、InstanceData クラスの新しいインスタンスを初期化します。</summary>
      <param name="instanceName">パフォーマンス カウンターに関連付けられたインスタンスの名前。</param>
      <param name="sample">
        <paramref name="instanceName" /> パラメーターで指定したインスタンスから取得された <see cref="T:System.Diagnostics.CounterSample" />。</param>
    </member>
    <member name="P:System.Diagnostics.InstanceData.InstanceName">
      <summary>このインスタンス データに関連付けられているインスタンス名を取得します。</summary>
      <returns>パフォーマンス カウンターに関連付けられたインスタンスの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.RawValue">
      <summary>パフォーマンス カウンター サンプルに関連付けられた生のデータ値を取得します。</summary>
      <returns>
        <see cref="P:System.Diagnostics.InstanceData.Sample" /> プロパティに関連付けられているパフォーマンス カウンター サンプルで読み取られた生の値。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.Sample">
      <summary>このデータを生成したパフォーマンス カウンター サンプルを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.CounterSample" /> プロパティで指定したインスタンスから取得された <see cref="P:System.Diagnostics.InstanceData.InstanceName" />。</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollection">
      <summary>厳密に型指定された <see cref="T:System.Diagnostics.InstanceData" /> オブジェクトのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <summary>(パフォーマンス インスタンスを定義する) 指定したパフォーマンス カウンターを使用して、<see cref="T:System.Diagnostics.InstanceDataCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="counterName">カウンターの名前。カウンターは、通常、カウントされている数量を示します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <summary>(インデックスを作成した <see cref="T:System.Diagnostics.InstanceData" /> オブジェクトの 1 つによって識別される) 指定した名前のパフォーマンス インスタンスが、コレクション内に存在しているかどうかを確認します。</summary>
      <param name="instanceName">コレクション内で検索するインスタンスの名前。</param>
      <returns>インスタンスがコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <summary>指定した 1 次元配列の指定したインデックス位置に、コレクション内の項目をコピーします。</summary>
      <param name="instances">コレクションから値がコピーされる先の 1 次元の <see cref="T:System.Array" />。</param>
      <param name="index">新しいインスタンスを追加する位置の 0 から始まるインデックス値。</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <summary>インスタンス データを取得するパフォーマンス カウンターの名前を取得します。</summary>
      <returns>パフォーマンス カウンター名。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <summary>このカウンターに関連付けられているインスタンス データを取得します。 通常、これは一連の生のカウンター値です。</summary>
      <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
      <returns>
        <see cref="T:System.Diagnostics.InstanceData" /> オブジェクトのインデックス作成に使用する <see cref="T:System.Diagnostics.InstanceDataCollection" /> 項目。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
      <summary>オブジェクトと、インスタンス データに関連付けられているオブジェクトのカウンター レジストリ キーを取得します。</summary>
      <returns>オブジェクト固有のレジストリ キーのセットを表す <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Values">
      <summary>カウンターのインスタンス データを構成する生のカウンター値を取得します。</summary>
      <returns>カウンターの生データ値を表す <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollectionCollection">
      <summary>厳密に型指定された <see cref="T:System.Diagnostics.InstanceDataCollection" /> オブジェクトのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <summary>(インデックスを作成した <see cref="T:System.Diagnostics.InstanceDataCollection" /> オブジェクトの 1 つによって識別される) 指定したカウンターのインスタンス データ コレクションが、コレクション内に存在しているかどうかを確認します。</summary>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <returns>指定したカウンターを格納しているインスタンス データ コレクションがコレクション内に存在している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <summary>
        <see cref="T:System.Diagnostics.InstanceDataCollection" /> インスタンスの配列を、コレクションの指定したインデックスにコピーします。</summary>
      <param name="counters">コレクションに追加する (格納しているカウンターによって識別される) インスタンスの <see cref="T:System.Diagnostics.InstanceDataCollection" /> の配列。</param>
      <param name="index">新しいインスタンスを追加する位置。</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <summary>指定したカウンターのインスタンス データを取得します。</summary>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <returns>
        <see cref="T:System.Diagnostics.InstanceDataCollection" /> オブジェクトのインデックス作成に使用する <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 項目。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <summary>オブジェクトと、インスタンス データ コレクションに関連付けられているオブジェクトのカウンター レジストリ キーを取得します。</summary>
      <returns>オブジェクト固有のレジストリ キーのセットを表す <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <summary>カウンターのインスタンスのコレクションを構成するインスタンス データ値を取得します。</summary>
      <returns>カウンターのインスタンスとそれぞれに関連付けられているデータ値を表す <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounter">
      <summary>Windows NT パフォーマンス カウンター コンポーネントを表します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor">
      <summary>システム パフォーマンス カウンターにもカスタム パフォーマンス カウンターにも関連付けずに、<see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンターに関連付けます。 このコンストラクターを使用するには、カテゴリに含まれるインスタンスが 1 つだけである必要があります。</summary>
      <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> が空の文字列 ("") です。

または -
<paramref name="counterName" /> が空の文字列 ("") です。

または
指定されたカテゴリが存在しません。

または -
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。

または -
<paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスまたは読み取り/書き込み可能インスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンターに関連付けます。 このコンストラクターを使用するには、カテゴリに含まれるインスタンスが 1 つだけである必要があります。</summary>
      <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <param name="readOnly">カウンターに (カウンター自身が読み取り/書き込み可能であっても) 読み取り専用モードでアクセスする場合は <see langword="true" />。読み取り/書き込みモードでアクセスする場合は <see langword="false" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> が空の文字列 ("") です。
または
<paramref name="counterName" /> が空の文字列 ("") です。

または -
指定されたカテゴリが存在しません。 (<paramref name="readOnly" /> が <see langword="true" /> の場合)

または -
指定されたカテゴリは、.NET Framework カスタム カテゴリではありません (<paramref name="readOnly" /> が <see langword="false" /> の場合)。

または -
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。

または -
<paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンター、およびカテゴリ インスタンスに関連付けます。</summary>
      <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> が空の文字列 ("") です。

または -
<paramref name="counterName" /> が空の文字列 ("") です。

または -
指定されたカテゴリが有効ではありません。

または -
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。

または -
<paramref name="instanceName" /> が 127 文字を超えています。

または -
<paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスまたは読み書き可能なインスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンター、およびカテゴリ インスタンスに関連付けます。</summary>
      <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
      <param name="readOnly">読み取り専用モードでカウンターにアクセスする場合は <see langword="true" />。読み書き可能モードでアクセスする場合は <see langword="false" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> が空の文字列 ("") です。
または
<paramref name="counterName" /> が空の文字列 ("") です。
または
要求した読み取り/書き込みアクセス許可の設定は、このカウンターでは無効です。
または
指定されたカテゴリが存在しません (<paramref name="readOnly" /> が <see langword="true" /> の場合)。

または -
指定されたカテゴリは、.NET Framework カスタム カテゴリではありません (<paramref name="readOnly" /> が <see langword="false" /> の場合)。

または -
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。


または
<paramref name="instanceName" /> が 127 文字を超えています。

または -
<paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化し、指定したコンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンター、およびカテゴリ インスタンスに関連付けます。</summary>
      <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <param name="counterName">パフォーマンス カウンターの名前。</param>
      <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
      <param name="machineName">パフォーマンス カウンターと、それに関連付けられているカテゴリが存在するコンピューター。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> が空の文字列 ("") です。

または -
<paramref name="counterName" /> が空の文字列 ("") です。

または -
要求した読み取り/書き込みアクセス許可の設定は、このカウンターでは無効です。


または
指定したコンピューター上にカウンターが存在しません。
または
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。

または -
<paramref name="instanceName" /> が 127 文字を超えています。

または -
<paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> パラメーターが有効ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <summary>フォームまたは別のコンポーネントで使用する <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスの初期化を開始します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <summary>このパフォーマンス カウンターのパフォーマンス カウンター カテゴリ名を取得または設定します。</summary>
      <returns>このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Close">
      <summary>パフォーマンス カウンターを閉じ、このパフォーマンス カウンター インスタンスで割り当てられたすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <summary>カウンターによって割り当てられた共有状態のパフォーマンス カウンター ライブラリを解放します。</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <summary>このパフォーマンス カウンターの説明を取得します。</summary>
      <returns>このパフォーマンス カウンターが測定する項目または量の説明。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスがパフォーマンス カウンターに関連付けられていません。
または
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterName">
      <summary>この <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスに関連付けられているパフォーマンス カウンター名を取得または設定します。</summary>
      <returns>カウンター名は、通常、カウントする量を説明します。 この名前は、パフォーマンス カウンター マネージャー MMC スナップインの [カウンターの追加] ダイアログ ボックスのカウンターの一覧に表示されます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterType">
      <summary>関連付けられているパフォーマンス カウンターのカウンター タイプを取得します。</summary>
      <returns>カウンターと監視中のアプリケーションがやり取りする方法と、カウンターに格納される値の性質 (計算される値か、計算されない値かなど) の両方を説明する <see cref="T:System.Diagnostics.PerformanceCounterType" />。</returns>
      <exception cref="T:System.InvalidOperationException">インスタンスがパフォーマンス カウンターに正しく関連付けられていません。
または
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Decrement">
      <summary>有効な分割不可能な操作を通じて、関連付けられたパフォーマンス カウンターを 1 ずつデクリメントします。</summary>
      <returns>デクリメントされたカウンター値。</returns>
      <exception cref="T:System.InvalidOperationException">カウンターは読み取り専用です。そのため、アプリケーションによるデクリメントができません。

または -
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。

または
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <summary>パフォーマンス カウンターが共有するグローバル メモリのサイズをバイト単位で指定します。 既定のサイズは 524,288 バイトです。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.EndInit">
      <summary>フォームまたは別のコンポーネントで使用する <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスの初期化を終了します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Increment">
      <summary>有効な分割不可能な操作を通じて、関連付けられたパフォーマンス カウンターを 1 ずつインクリメントします。</summary>
      <returns>インクリメントされたカウンター値。</returns>
      <exception cref="T:System.InvalidOperationException">カウンターは読み取り専用です。そのため、アプリケーションによるインクリメントができません。
または
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。
または
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <summary>有効な分割不可能な操作を通じて、関連付けられたパフォーマンス カウンターの値を指定した量ずつインクリメントまたはデクリメントします。</summary>
      <param name="value">インクリメントする値の単位。 負の値を指定すると、カウンターはデクリメントされます。</param>
      <returns>新しいカウンター値。</returns>
      <exception cref="T:System.InvalidOperationException">カウンターは読み取り専用です。そのため、アプリケーションによるインクリメントができません。

または -
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。

または -
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <summary>プロセスの有効期間を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">設定される値は、<see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 列挙体のメンバーではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> は <see cref="T:System.Diagnostics.PerformanceCounter" /> が初期化された後に設定されます。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <summary>このパフォーマンス カウンターのインスタンス名を取得または設定します。</summary>
      <returns>パフォーマンス カウンター カテゴリ インスタンスの名前。単一インスタンス カウンターの場合は空の文字列 ("")。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.MachineName">
      <summary>このパフォーマンス カウンターのコンピューター名を取得または設定します。</summary>
      <returns>パフォーマンス カウンターと、それに関連付けられているカテゴリが存在するサーバー。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> の書式が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextSample">
      <summary>カウンター サンプルを取得し、生の、つまり計算されない値を返します。</summary>
      <returns>このカウンターのためにシステムで取得された値の、次の生の値を表す <see cref="T:System.Diagnostics.CounterSample" />。</returns>
      <exception cref="T:System.InvalidOperationException">インスタンスがパフォーマンス カウンターに正しく関連付けられていません。
または
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextValue">
      <summary>カウンター サンプルを取得し、計算される値を返します。</summary>
      <returns>このカウンターのためにシステムで取得された計算される値の次の値。</returns>
      <exception cref="T:System.InvalidOperationException">インスタンスがパフォーマンス カウンターに正しく関連付けられていません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.RawValue">
      <summary>このカウンターの、生の、つまり計算されない値を取得または設定します。</summary>
      <returns>カウンターの生の値。</returns>
      <exception cref="T:System.InvalidOperationException">カウンターの生の値を設定しようとしていますが、カウンターが読み取り専用です。

または -
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。

または
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <summary>この <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスが読み取り専用モードかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスが読み取り専用モードの場合は (カウンター自身がカスタム .NET Framework カウンターの場合でも) <see langword="true" />。読み取り/書き込みモードの場合は <see langword="false" />。 既定値は、コンストラクターによって設定された値です。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクトの <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /> プロパティで指定されたカテゴリ インスタンスを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">このカウンターは読み取り専用です。そのため、カテゴリに関連付けられたインスタンスは削除できません。

または -
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。

または -
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategory">
      <summary>パフォーマンス カウンターのカテゴリを定義するパフォーマンス オブジェクトを表します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティを空のままにし、<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティをローカル コンピューターに設定します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティを指定した値に設定し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティをローカル コンピューターに設定します。</summary>
      <param name="categoryName">この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスを関連付けるパフォーマンス カウンター カテゴリまたはパフォーマンス オブジェクトの名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> が空の文字列 ("") です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティと <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティを指定した値に設定します。</summary>
      <param name="categoryName">この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスを関連付けるパフォーマンス カウンター カテゴリまたはパフォーマンス オブジェクトの名前。</param>
      <param name="machineName">パフォーマンス カウンター カテゴリと、それに関連付けられているカウンターが存在するコンピューター。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> が空の文字列 ("") です。

または -
<paramref name="machineName" /> 構文が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <summary>カテゴリのヘルプ テキストを取得します。</summary>
      <returns>このカテゴリが測定するパフォーマンス オブジェクトの説明。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 カテゴリ ヘルプを取得する前に、カテゴリ名を設定する必要があります。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <summary>このカテゴリを定義するパフォーマンス オブジェクト名を取得または設定します。</summary>
      <returns>この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスを関連付けるパフォーマンス カウンター カテゴリまたはパフォーマンス オブジェクトの名前。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> が空の文字列 ("") です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <summary>パフォーマンス カウンター カテゴリ タイプを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <summary>指定したカウンターがこのカテゴリに登録されているかどうかを判断します。カテゴリは、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティと <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティで指定されます。</summary>
      <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
      <returns>カウンターが、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティと <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティで指定されたカテゴリに登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが設定されていません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <summary>指定したカウンターが、ローカル コンピューター上の指定したカテゴリに登録されているかどうかを判断します。</summary>
      <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
      <param name="categoryName">指定したパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <returns>カウンターがローカル コンピューター上の指定したカテゴリに登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。

または -
<paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> が空の文字列 ("") です。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <summary>指定したカウンターが、リモート コンピューター上の指定したカテゴリに登録されているかどうかを判断します。</summary>
      <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
      <param name="categoryName">指定したパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
      <param name="machineName">パフォーマンス カウンター カテゴリと、それに関連付けられているカウンターが存在するコンピューターの名前。</param>
      <returns>カウンターが指定したコンピューター上の指定したカテゴリに登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。

または -
<paramref name="counterName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> が空の文字列 ("") です。

または -
<paramref name="machineName" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <summary>指定したカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
      <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
      <param name="categoryHelp">カスタム カテゴリの説明。</param>
      <param name="counterData">新しいカテゴリの一部として作成するカウンターを指定する <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
      <returns>新しいカスタム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterData" /> コレクションで指定されているカウンター名が <see langword="null" /> または空の文字列 ("") です。

または -
<paramref name="counterData" /> コレクションで指定されているカウンターが既に存在します。

または -
<paramref name="counterName" /> パラメーターの構文が無効です。 円記号文字 ("\") が含まれているか、長さが 80 文字を超えています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。

または -
<paramref name="counterData" /> コレクションのレイアウトが、ベース カウンターに適合していません。 カウンターのタイプが <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" />、または <see langword="SampleCounter" /> の場合は、直後にベース カウンター タイプのいずれか (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" />、または <see langword="SampleBase" />) が必要です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <summary>指定したカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
      <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
      <param name="categoryHelp">カスタム カテゴリの説明。</param>
      <param name="categoryType">
        <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値のいずれか。</param>
      <param name="counterData">新しいカテゴリの一部として作成するカウンターを指定する <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
      <returns>新しいカスタム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterData" /> コレクションで指定されているカウンター名が <see langword="null" /> または空の文字列 ("") です。

または -
<paramref name="counterData" /> コレクションで指定されているカウンターが既に存在します。

または -
<paramref name="counterName" /> に無効な構文が含まれています。 円記号文字 ("\") が含まれているか、長さが 80 文字を超えています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。

または -
<paramref name="counterData" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="categoryType" /> 値が <see langword="MultiInstance" />、<see langword="SingleInstance" />、<see langword="Unknown" /> のいずれの値でもありません。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。

または -
<paramref name="counterData" /> コレクションのレイアウトが、ベース カウンターに適合していません。 カウンターのタイプが <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" />、または <see langword="SampleCounter" /> の場合は、直後にベース カウンター タイプのいずれか (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" />、または <see langword="SampleBase" />) が必要です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <summary>
        <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> タイプの単一のカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
      <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
      <param name="categoryHelp">カスタム カテゴリの説明。</param>
      <param name="categoryType">カテゴリが <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />、または <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> のいずれであるかを指定する、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" /> 値の 1 つ。</param>
      <param name="counterName">新しいカテゴリの一部として作成する新しいカウンターの名前。</param>
      <param name="counterHelp">新しいカスタム カテゴリに関連付けるカウンターの説明。</param>
      <returns>新しいシステム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> が <see langword="null" /> または空の文字列 ("") です。

または -
<paramref name="counterName" /> で指定されているカウンターが既に存在します。

または -
<paramref name="counterName" /> に無効な構文が含まれています。 円記号文字 ("\") が含まれているか、長さが 80 文字を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。

または -
<paramref name="counterHelp" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <summary>
        <see langword="NumberOfItems32" /> タイプの単一のカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
      <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
      <param name="categoryHelp">カスタム カテゴリの説明。</param>
      <param name="counterName">新しいカテゴリの一部として作成する <see langword="NumberOfItems32" /> タイプの新しいカウンターの名前。</param>
      <param name="counterHelp">新しいカスタム カテゴリに関連付けるカウンターの説明。</param>
      <returns>新しいシステム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> が <see langword="null" /> または空の文字列 ("") です。

または -
<paramref name="counterName" /> で指定されているカウンターが既に存在します。

または -
<paramref name="counterName" /> に無効な構文が含まれています。 円記号文字 ("\") が含まれているか、長さが 80 文字を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> が <see langword="null" /> です。

または -
<paramref name="counterHelp" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <summary>カテゴリとそれに関連付けられているカウンターをローカル コンピューターから削除します。</summary>
      <param name="categoryName">削除するカスタム パフォーマンス カウンター カテゴリの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> パラメーターの構文が無効です。 円記号文字 ("\") が含まれているか、長さが 80 文字を超えています。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリがカスタム カテゴリではないため、削除できません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <summary>カテゴリがローカル コンピューターに登録されているかどうかを判断します。</summary>
      <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
      <returns>カテゴリが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <summary>指定したコンピューター上にカテゴリが登録されているかどうかを判断します。</summary>
      <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
      <param name="machineName">カテゴリを調べるコンピューターの名前。</param>
      <returns>カテゴリが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。

または -
<paramref name="machineName" /> パラメーターが正しくありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.IO.IOException">ネットワーク パスが見つかりません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。

または -

管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary>ローカル コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
      <returns>ローカル コンピューターに登録されているカテゴリを指す <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの配列。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <summary>指定したコンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
      <param name="machineName">検索対象のコンピューター。</param>
      <returns>指定したコンピューターに登録されているカテゴリを指す <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの配列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> パラメーターが正しくありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary>インスタンスが 1 つだけ含まれているパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
      <returns>この単一インスタンスのパフォーマンス カウンター カテゴリに関連付けられたカウンターを指す <see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクトの配列。</returns>
      <exception cref="T:System.ArgumentException">カテゴリが、単一のインスタンスではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException">カテゴリには関連付けられたインスタンスはありません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <summary>インスタンスが 1 つ以上含まれているパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
      <param name="instanceName">関連付けられたカウンターの一覧を取得する対象のパフォーマンス オブジェクト インスタンス。</param>
      <returns>このパフォーマンス カウンター カテゴリの指定したオブジェクト インスタンスに関連付けられたカウンターを指す <see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクトの配列。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">この <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> インスタンスの <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> プロパティが設定されていません。

または -
<paramref name="instanceName" /> パラメーターで指定されたインスタンスがカテゴリに含まれていません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <summary>このカテゴリに関連付けられたパフォーマンス オブジェクト インスタンスの一覧を取得します。</summary>
      <returns>このカテゴリに関連付けられたパフォーマンス オブジェクト インスタンス名を表す文字列の配列。または、カテゴリに含まれるパフォーマンス オブジェクト インスタンスが 1 つだけの場合は、空の文字列 ("") が格納された単一エントリの配列。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。

または -
カテゴリには関連付けられたインスタンスはありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <summary>この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティで識別されるカテゴリに、指定したパフォーマンス オブジェクト インスタンスがあるかどうかを判断します。</summary>
      <param name="instanceName">検索に使用するパフォーマンス カウンター カテゴリのパフォーマンス オブジェクト インスタンス。</param>
      <returns>カテゴリに指定したパフォーマンス オブジェクト インスタンスが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <summary>ローカル コンピューター上の指定したカテゴリに、指定したパフォーマンス オブジェクト インスタンスが含まれているかどうかを判断します。</summary>
      <param name="instanceName">検索するパフォーマンス オブジェクト インスタンス。</param>
      <param name="categoryName">検索するパフォーマンス カウンター カテゴリ。</param>
      <returns>カテゴリに指定したパフォーマンス オブジェクト インスタンスが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。

または -
<paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <summary>指定したコンピューターの指定したカテゴリに、指定したパフォーマンス オブジェクト インスタンスが含まれているかどうかを判断します。</summary>
      <param name="instanceName">検索するパフォーマンス オブジェクト インスタンス。</param>
      <param name="categoryName">検索するパフォーマンス カウンター カテゴリ。</param>
      <param name="machineName">カテゴリ インスタンスのペアを検索するコンピューターの名前。</param>
      <returns>カテゴリに指定したパフォーマンス オブジェクト インスタンスが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。

または -
<paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。

または -
<paramref name="machineName" /> パラメーターが正しくありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <summary>このカテゴリが存在するコンピューターの名前を取得または設定します。</summary>
      <returns>パフォーマンス カウンター カテゴリと、それに関連付けられているカウンターが存在するコンピューターの名前。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 構文が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <summary>このパフォーマンス カウンター カテゴリに関連付けられたすべてのカウンターとパフォーマンス オブジェクト インスタンスのデータを読み取ります。</summary>
      <returns>カテゴリのカウンターとパフォーマンス オブジェクト インスタンスのデータを格納している <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategoryType">
      <summary>パフォーマンス カウンターのカテゴリに複数インスタンスを設定できるかどうかを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <summary>パフォーマンス カウンター カテゴリに複数のインスタンスを設定できます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <summary>パフォーマンス カウンター カテゴリに 1 つのインスタンスのみ設定できます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <summary>パフォーマンス カウンター カテゴリのインスタンス機能が不明です。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <summary>パフォーマンス カウンター インスタンスの有効期間を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <summary>プロセス カテゴリを使用しているカウンターが存在しない場合は、パフォーマンス カウンター インスタンスを削除します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <summary>プロセスが終了している場合は、パフォーマンス カウンター インスタンスを削除します。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterManager">
      <summary>パフォーマンス カウンターを使用するときにシステムに読み込まれる performance.dll のパフォーマンス データを用意します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <summary>perf dll の Close パフォーマンス データによって呼び出されます。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>パフォーマンス データ収集ルーチン。 PerfCount perf dll によって呼び出されます。</summary>
      <param name="callIdx">呼び出しインデックス。</param>
      <param name="valueNamePtr">要求されたオブジェクト識別子を含む Unicode 文字列リストへのポインター。</param>
      <param name="dataPtr">データ バッファーへのポインター。</param>
      <param name="totalBytes">バイト数へのポインター。</param>
      <param name="res">このメソッドから制御が戻るときに、-1 の値を持つ <see cref="T:System.IntPtr" /> を格納します。</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterType">
      <summary>
        <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> インスタンスの <see cref="T:System.Diagnostics.PerformanceCounter" /> メソッドを計算するために使用する数式を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <summary>
        <see langword="AverageTimer32" /> や <see langword="AverageCount64" /> など、時間または回数の平均を計算するために使用されるベース カウンター。 "操作ごとの時間" または "操作ごとの回数" を表すカウンターの計算に使用する分母を格納します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <summary>処理された項目の数を操作中の平均で示す平均カウンター。 このタイプのカウンターは、完了した処理数に対する処理された項目の比率を表示します。 比率は、最後の間隔で処理された項目数と、最後の間隔で完了した操作の数を比較することによって計算されます。 このタイプのカウンターとして、PhysicalDisk\ Avg.Disk Bytes/Transfer があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <summary>処理または操作を完了するまでに経過した時間の平均を計測する平均カウンター。 このタイプのカウンターは、サンプル間隔で完了した処理または操作に対する、その間隔での経過時間の合計の比率を表示します。 このカウンター タイプは、システム時計のタイマー刻みで時間を計測します。 このタイプのカウンターとして、PhysicalDisk\ Avg.Disk sec/Transfer があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <summary>2 つの最新のサンプル間隔を使用して、その間の計測対象の属性の変化を示す差カウンター。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <summary>2 つの最新のサンプル間隔を使用して、その間の計測対象の属性の変化を示す差カウンター。 これは <see langword="CounterDelta32" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <summary>サンプリングする項目の数を示すベース カウンター。 複数の似た項目について、タイミングをとりながらサンプリングされた項目の平均を取得する計算で、分母として使用されます。 <see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、および <see langword="CounterMultiTimer100NsInverse" /> で使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <summary>1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで表示するパーセント カウンター。 分子は、同時に運用されるコンポーネントのアクティブな時間を記録するため、結果のパーセントは 100 パーセントを超えることがあります。 このカウンター タイプは、システム パフォーマンス タイマーのタイマー刻みの単位で時間を計測するという点で、100 ナノ秒単位で計測する <see langword="CounterMultiTimer100Ns" /> と異なります。 このカウンター タイプはマルチタイマーです。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <summary>1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで示すパーセント カウンター。 時間を 100 ナノ秒 (ns) 単位で計測します。 このカウンター タイプはマルチタイマーです。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <summary>1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで示すパーセント カウンター。 このカウンター タイプは、時間を 100 ナノ秒 (ns) 単位で計測します。 コンポーネントがアクティブでなかった時間を計測し、監視するオブジェクト数かける 100 パーセントから計測値を減算することによってアクティブな時間を導出します。 このカウンター タイプは逆マルチタイマーです。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <summary>1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで示すパーセント カウンター。 コンポーネントがアクティブでなかった時間を計測し、監視するオブジェクト数かける 100 パーセントから計測値を減算することによってアクティブな時間を導出します。 このカウンター タイプは逆マルチタイマーです。 これは、100 ナノ秒単位ではなく、システム パフォーマンス タイマーのタイマー刻みの単位で時間を計測するという点で、CounterMultiTimer100NsInverse とは異なります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <summary>コンポーネントがアクティブだった平均時間をサンプル時間合計に対するパーセントで示すパーセント カウンター。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <summary>サンプル間隔中に記録されたアクティブな時間の平均パーセントを表示するパーセント カウンター。 このカウンターの値は、サービスがアクティブでなかった時間のパーセントを監視し、この値を 100 パーセントから減算することによって計算されます。 逆カウンター タイプです。 これは、100 ナノ秒単位ではなく、システム パフォーマンス タイマーのタイマー刻みの単位で時間を計測するという点を除き、CounterTimer100NsInv と同じです。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <summary>一定時間の間のリソースに対するキューの長さの平均を監視するようにデザインされた平均カウンター。 間隔の存続期間で分割された最後の 2 つのサンプル間隔の間で監視されたキューの長さの差を示します。 このカウンター タイプは、通常、キューに置かれた項目または待機中の項目の数を追跡するために使用されます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <summary>一定時間の間のリソースに対するキューの長さの平均を監視する平均カウンター。 このカウンター タイプは、間隔の存続期間で分割された最後の 2 つのサンプル間隔の間で監視されたキューの長さの差を示します。 このカウンター タイプは、<see langword="CountPerTimeInterval32" /> と同じですが、大きな値を処理できるように、大きなフィールドを使用します。 このカウンター タイプは、通常、キューに置かれたまたは待機中の大量または多数の項目の数を追跡するために使用されます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <summary>コンポーネントまたはプロセスが開始された時間と、この値が計算された時間の間の合計時間を示す差タイマー。 このタイプのカウンターとして、System\ System Up Time があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <summary>最新の記録値を示す即時カウンター。 項目または操作の単純なカウントを保持するときなどに使用します。 このタイプのカウンターとして、Memory\Available Bytes があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <summary>最新の記録値を示す即時カウンター。 大量の項目または操作の単純なカウントを保持するときなどに使用します。 <see langword="NumberOfItems32" /> と同じですが、大きな値を処理できるように、大きなフィールドを使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <summary>最新の記録値を 16 進形式で示す即時カウンター。 項目または操作の単純なカウントを保持するときなどに使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <summary>最新の記録値を示す即時カウンター。 大量の項目または操作の単純なカウントを保持するときなどに使用します。 <see langword="NumberOfItemsHEX32" /> と同じですが、大きな値を処理できるように、大きなフィールドを使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <summary>サンプル間隔の各秒で完了した平均操作数を示す差カウンター。 このタイプのカウンターは、システム時計のタイマー刻みで時間を計測します。 このタイプのカウンターとして、System\ File Read Operations/sec があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <summary>サンプル間隔の各秒で完了した平均操作数を示す差カウンター。 このタイプのカウンターは、システム時計のタイマー刻みで時間を計測します。 このカウンター タイプは <see langword="RateOfCountsPerSecond32" /> タイプと同じですが、バイト転送速度など 1 秒ごとに大量の項目数または操作数を追跡するために、大きな値を処理できるように、大きなフィールドを使用します。 このタイプのカウンターとして、System\ File Read Bytes/sec があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <summary>通常の算術的な分数を表すカウンターの分母を格納するベース カウンター。 <see langword="RawFraction" /> 値の計算で分母として使用する前に、この値がゼロを超えることを確認してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <summary>セットに対するサブセットの比率をパーセントで示す即時パーセント カウンター。 たとえば、ディスクで使用中のバイト数とディスクの総バイト数を比較します。 このタイプのカウンターは、一定期間の平均ではなく、現在のパーセントだけを表示します。 このタイプのカウンターとして、Paging File\% Usage Peak があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <summary>取得したサンプリング割り込みの回数を格納するベース カウンター。サンプリング分数の分母として使用されます。 サンプリング分数は、サンプリング割り込みに対して 1 (または <see langword="true" />) だったサンプルの数です。 <see langword="SampleFraction" /> の計算で分母として使用する前に、この値が 0 より大きいことを確認してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <summary>1 秒間に完了した平均操作数を示す平均カウンター。 このタイプのカウンターがデータをサンプリングすると、各サンプリング割り込みが 1 または 0 を返します。 カウンター データは、サンプリングされたデータの数です。 システム パフォーマンス タイマーのタイマー刻みの時間単位を計測します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <summary>最後の 2 つのサンプル間隔中に発生したすべての操作に対するヒット カウントの平均比率を示すパーセント カウンター。 このタイプのカウンターとして、Cache\Pin Read Hits % があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <summary>コンポーネントのアクティブな時間をサンプル間隔の合計経過時間に対するパーセントで示すパーセント カウンター。 時間を 100 ナノ秒 (ns) 単位で計測します。 このタイプのカウンターは、あるコンポーネントのある時点でのアクティビティを計測するようにデザインされています。 このタイプのカウンターとして、Processor\ % User Time があります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <summary>サンプル間隔中に記録されたアクティブな時間の平均パーセントを示すパーセント カウンター。 逆カウンターです。 このタイプのカウンターとして、Processor\ % Processor Time があります。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary>カウンターの生データを格納します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Decrement">
      <summary>カウンター値を 1 だけデクリメントします。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Increment">
      <summary>カウンター値を 1 だけインクリメントします。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)">
      <summary>カウンター値を指定した量だけインクリメントします。</summary>
      <param name="value">カウンター値をインクリメントする量。 インクリメント値は、正の場合もあれば負の場合もあります。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.RawValue">
      <summary>カウンターの生データを設定または取得します。</summary>
      <returns>カウンターの生データ。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary>カウンター データを設定または取得します。</summary>
      <returns>カウンター データ。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary>論理カウンターのセットを定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="providerGuid">カウンター データのプロバイダーを一意に識別する GUID。 マニフェストに指定した GUID を使用します。</param>
      <param name="counterSetGuid">プロバイダーのカウンター セットを一意に識別する GUID。 マニフェストに指定した GUID を使用します。</param>
      <param name="instanceType">カウンター セットの種類を識別します。たとえば、カウンター セットが単一インスタンスのカウンター セットであるか、複数インスタンスのカウンター セットであるかを示します。</param>
      <exception cref="T:System.InsufficientMemoryException">メモリ不足のため、操作を完了できません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Windows Vista 以前ではサポートされていません。</exception>
      <exception cref="T:System.ArgumentException">パラメーターの 1 つが NULL または無効です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">基になる Win32 関数呼び出しが失敗しました。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary>指定したカウンター ID とカウンター タイプを使用して、カウンター セットにカウンターを追加します。</summary>
      <param name="counterId">カウンターを識別します。 マニフェストでカウンターの定義に使用した値と同じ値を使用します。</param>
      <param name="counterType">カウンター タイプを識別します。 カウンター タイプによって、カウンター データの計算方法、その平均値の求め方、および表示方法が決まります。</param>
      <exception cref="T:System.ArgumentException">カウンター ID が既にセット内に存在するか、負の値であるか、カウンター タイプが NULL または無効です。</exception>
      <exception cref="T:System.InvalidOperationException">カウンター セットのインスタンスを作成した後に、カウンター セットにカウンターを追加することはできません。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary>指定したカウンター ID、カウンター タイプ、およびカウンターの表示名を使用して、カウンター セットにカウンターを追加します。</summary>
      <param name="counterId">カウンターを識別します。 マニフェストでカウンターの定義に使用した値と同じ値を使用します。</param>
      <param name="counterType">カウンター タイプを識別します。 カウンター タイプによって、カウンター データの計算方法、その平均値の求め方、および表示方法が決まります。</param>
      <param name="counterName">カウンターの名前。 この名前を使用して、カウンター セット インスタンス内のカウンターにインデックスを作成できます。 (「<see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />」を参照)。</param>
      <exception cref="T:System.ArgumentException">カウンター ID が既にセット内に存在するか、負の値であるか、カウンター タイプが NULL または無効です。</exception>
      <exception cref="T:System.InvalidOperationException">カウンター セットのインスタンスを作成した後に、カウンター セットにカウンターを追加することはできません。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary>カウンター セットのインスタンスを作成します。</summary>
      <param name="instanceName">インスタンスの名前。 この名前は一意である必要があります。</param>
      <returns>カウンター データを格納するカウンター セットのインスタンス。</returns>
      <exception cref="T:System.ArgumentException">インスタンス名が NULL です。</exception>
      <exception cref="T:System.InvalidOperationException">カウンター セットのインスタンスを作成する前に、カウンター セットにカウンターを追加する必要があります。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <summary>このオブジェクトによって使用されているすべてのアンマネージ リソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <summary>このオブジェクトによって使用されているすべてのアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">Dispose メソッドから呼び出された場合は <see langword="True" />。ファイナライザーから呼び出された場合は <see langword="False" />。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <summary>ガベージ コレクションでオブジェクトがクリアされる前に、リソースを解放します。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> クラス内で定義されている論理カウンターのインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary>カウンター セット インスタンスのカウンター データのコレクションを取得します。</summary>
      <returns>カウンター セット インスタンスに格納されているカウンター データのコレクション。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <summary>このオブジェクトによって使用されているすべてのアンマネージ リソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize">
      <summary>アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary>カウンター値のコレクションを保持します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <summary>このオブジェクトによって使用されているすべてのアンマネージ リソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary>指定したカウンター ID を使用して、コレクション内のカウンター値にアクセスします。</summary>
      <param name="counterId">カウンターの ID。 これは、カウンター セットにカウンターを追加したときに使用した ID です。</param>
      <returns>カウンター データ。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary>指定したカウンター名を使用して、コレクション内のカウンター値にアクセスします。</summary>
      <param name="counterName">カウンターの名前。 これは、カウンター セットにカウンターを追加したときに使用した名前です。</param>
      <returns>カウンター データ。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary>カウンター セットで、プロセスや物理ディスクのような複数インスタンスを許可するか、メモリのような単一インスタンスに制限するかを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary>カウンター セットは、1 つ以上のソースから集計値が取得される単一インスタンスのカウンターを含みます。 たとえば、この種類のカウンター セットのカウンターでは、コンピューターの 3 つのハード ディスクのそれぞれから読み取り回数を取得し、それらの値を合計できます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary>この種類は <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" /> に似ていますが、この種類のカウンター セットは、コンシューマー アプリケーションの有効期間中のすべてのカウンター値を格納します (カウンター値はカウンターの有効期間を超えてキャッシュされます)。 たとえば、グローバルな集計の例にあるハード ディスクの 1 つが利用不可になったとしても、そのディスクで読み取られた合計バイト数は引き続き保持され、集計値の計算に使用されます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary>この種類は <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> に似ていますが、すべてのインスタンス データを 1 つの集計 (_Total) インスタンスに集計するのではなく、同じ名前のインスタンスからカウンター データを集計します。 たとえば、プロバイダーの複数のプロセスに IExplore という名前のインスタンスが含まれている場合、<see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" /> および <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> の CounterSet では、複数の IExplore インスタンス (IExplore、IExplore#1、IExplore#2 など) が示されますが、インスタンスの種類が <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" /> の場合は、IExplore という名前のすべてのインスタンスから集計されたカウンター データを持つ IExplore インスタンスが 1 つだけ公開されます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary>カウンター セットは、複数インスタンスのカウンター (プロセスに対するディスク I/O の平均を測定するカウンターなど) を含みます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary>カウンター セットは、カウンターのすべてのインスタンスから集計値が取得される複数インスタンスのカウンターを含みます。 たとえば、この種類のカウンター セットのカウンターでは、マルチスレッド アプリケーション内のすべてのスレッドについてスレッド実行時間の合計を取得し、それらの値を合計できます。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary>カウンター セットは、単一インスタンスのカウンター (物理メモリを測定するカウンターなど) を含みます。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary>使用できるカウンター タイプを定義します。 各カウンターには、カウンター タイプが割り当てられます。 カウンター タイプによって、カウンター データの計算方法、その平均値の求め方、および表示方法が決まります。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary>このカウンターは、<see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" /> カウンター タイプおよび <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" /> カウンター タイプで時間または回数の平均を計算するときに、基本データ (分母) として使用されます。 このカウンター タイプは、最後に計測された値だけを収集します。 Deployment Kit で PERF_AVERAGE_BASE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary>このカウンター タイプは、処理された項目の数を操作中の平均で示します。 このタイプのカウンターは、完了した処理数に対する処理された項目 (送信されたバイト数など) の比率を表示します。 比率は、最後の間隔で処理された項目数と、最後の間隔で完了した操作の数を比較することによって計算されます。 Deployment Kit で PERF_AVERAGE_BULK カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary>このカウンター タイプは、処理または操作を完了するまでに経過した時間の平均を計測します。 このタイプのカウンターは、サンプル間隔で完了した処理または操作に対する、その間隔での経過時間の合計の比率を表示します。 このカウンター タイプは、システム時計のタイマー刻みで時間を計測します。 Deployment Kit で PERF_AVERAGE_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary>このカウンター タイプは、2 つの最新のサンプル間隔を使用して、その間の計測対象の属性の変化を示します。 Deployment Kit で PERF_COUNTER_DELTA カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary>このカウンター タイプは、2 つの最新のサンプル間隔を使用して、その間の計測対象の属性の変化を示します。 これは <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。 Deployment Kit で PERF_COUNTER_LARGE_DELTA カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary>このカウンター タイプは、コンポーネントまたはプロセスが開始された時点から、この値が計算された時点までの合計時間を示します。 Deployment Kit で PERF_ELAPSED_TIME カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary>このカウンター タイプは、時間の経過に伴うリソースに対するキューの長さの平均を監視します。 このカウンター タイプは、間隔の存続期間で分割された最後の 2 つのサンプル間隔の間で監視されたキューの長さの差を示します。 このカウンター タイプは <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。 Deployment Kit で PERF_COUNTER_LARGE_QUEUELEN_TYPE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary>サンプリングする項目の数を示します。 複数の似た項目について、タイミングをとりながらサンプリングされた項目の平均を取得する計算で、分母として使用されます。 このタイプは、<see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />、<see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />、<see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" />、および <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" /> の各カウンター タイプをサポートします。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary>このカウンター タイプはマルチタイマーです。 マルチタイマーは、プロセッサやディスクなど、コンポーネントの複数のインスタンスからデータを収集します。 このタイプのカウンターは、1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで表示します。 分子は、同時に運用されるコンポーネントのアクティブな時間を記録するため、結果のパーセントは 100 パーセントを超えることがあります。 このカウンター タイプは、システム パフォーマンス タイマーのタイマー刻みの単位で時間を計測するという点で、100 ナノ秒単位で計測する <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> と異なります。 Deployment Kit で PERF_COUNTER_MULTI_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary>このカウンター タイプは、1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで示します。 時間を 100 ナノ秒単位で計測します。 このカウンター タイプはマルチタイマーです。 マルチタイマーは、プロセッサやディスクなど、コンポーネントの複数のインスタンスを監視するようにデザインされています。 Deployment Kit で PERF_100NSEC_MULTI_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary>このカウンター タイプは、1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで示します。 このカウンター タイプは逆マルチタイマーです。 マルチタイマーは、プロセッサやディスクなど、コンポーネントの複数のインスタンスを監視します。 逆カウンターは、コンポーネントがアクティブでない時間を計測し、この計測値からアクティブな時間を導出します。 このカウンターは、システム パフォーマンス タイマーのタイマー刻みの単位で時間を計測するという点で、100 ナノ秒単位で計測する <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" /> と異なります。 Deployment Kit で PERF_COUNTER_MULTI_TIMER_INV カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary>このカウンター タイプは、1 つ以上のコンポーネントのアクティブな時間をサンプル間隔の合計時間に対するパーセントで示します。 このタイプのカウンターは、時間を 100 ナノ秒単位で計測します。 このカウンター タイプは逆マルチタイマーです。 マルチタイマーは、プロセッサやディスクなど、コンポーネントの複数のインスタンスを監視するようにデザインされています。 逆カウンターは、コンポーネントがアクティブでない時間を計測し、アクティブでない時間の計測値からアクティブな時間を導出します。 Deployment Kit で PERF_100NSEC_MULTI_TIMER_INV カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary>この 64 ビットのカウンター タイプは、オブジェクト固有の単位で表示するタイマーです。 Deployment Kit で PERF_OBJ_TIME_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary>このカウンター タイプは、コンポーネントがアクティブだった平均時間をサンプル時間合計に対するパーセントで示します。 Deployment Kit で PERF_COUNTER_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary>このカウンター タイプは、コンポーネントのアクティブな時間をサンプル間隔の合計経過時間に対するパーセントで示します。 時間を 100 ナノ秒単位で計測します。 このタイプのカウンターは、あるコンポーネントのある時点でのアクティビティを計測するようにデザインされています。 Deployment Kit で PERF_100NSEC_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary>逆カウンター タイプです。 逆カウンターは、コンポーネントがアクティブでない時間を計測し、この計測値からアクティブな時間を導出します。 このタイプのカウンターは、サンプル間隔中に記録されたアクティブな時間の平均パーセントを表示します。 このカウンターの値は、サービスがアクティブでなかった時間のパーセントを監視し、この値を 100 パーセントから減算することによって計算されます。 このカウンター タイプは <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" /> カウンター タイプと同じですが、100 ナノ秒単位ではなく、システム パフォーマンス タイマーのタイマー刻みの単位で時間を計測するという点が異なります。 Deployment Kit で PERF_COUNTER_TIMER_INV カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary>このカウンター タイプは、サンプル間隔中に記録されたアクティブな時間の平均パーセントを示します。 逆カウンターです。 逆カウンターは、サービスがアクティブでなかった時間のパーセントを監視し、この値を 100 パーセントから減算することによって計算されます。 Deployment Kit で PERF_100NSEC_TIMER_INV カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary>このカウンター タイプは、監視されているイベントの経過時間のカウントと、オブジェクト ヘッダーの PerfFreq フィールドに指定された周波数という、2 つのカウンター値で構成される値を示します。 このカウンター タイプが他のカウンター タイマーと異なるのは、関数呼び出しからの待機時間によって生じる可能性のある違いをなくすために、クロック タイマー刻みの値がカウンター値に付随しているという点です。 精密なカウンター タイプは、標準的なシステム タイマーでは正確な読み取りのために十分でない場合に使用されます。 Deployment Kit で PERF_PRECISION_OBJECT_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary>このカウンター タイプは、監視されているイベントの経過時間のカウントと、システム パフォーマンス タイマーの周波数という、2 つのカウンター値で構成される値を示します。 このカウンター タイプが他のカウンター タイマーと異なるのは、関数呼び出しからの待機時間によって生じる可能性のある違いをなくすために、クロック タイマー刻みの値がカウンター値に付随しているという点です。 精密なカウンター タイプは、標準的なシステム タイマーでは正確な読み取りのために十分でない場合に使用されます。 Deployment Kit で PERF_PRECISION_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary>このカウンター タイプは、監視されているイベントの経過時間のカウントと、同じ単位のプライベート タイマーの "クロック" 時間という、2 つのカウンター値で構成される値を示します。 時間を 100 ナノ秒単位で計測します。 このカウンター タイプが他のカウンター タイマーと異なるのは、関数呼び出しからの待機時間によって生じる可能性のある違いをなくすために、クロック タイマー刻みの値がカウンター値に付随しているという点です。 精密なカウンター タイプは、標準的なシステム タイマーでは正確な読み取りのために十分でない場合に使用されます。 Deployment Kit で PERF_PRECISION_100NS_TIMER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary>このカウンター タイプは、時間の経過に伴うリソースに対するキューの長さの平均を監視するようにデザインされています。 間隔の存続期間で分割された最後の 2 つのサンプル間隔の間で監視されたキューの長さの差を示します。 Deployment Kit で PERF_COUNTER_QUEUELEN_TYPE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary>このカウンター タイプは、100 ナノ秒の時間ベースを使用して、キューの長さの空間時間積を計測します。 Deployment Kit で PERF_COUNTER_100NS_QUEUELEN_TYPE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary>このカウンター タイプは、オブジェクト固有の時間ベースを使用して、キューの長さの空間時間積を計測します。 Deployment Kit で PERF_COUNTER_OBJ_QUEUELEN_TYPE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary>このカウンター タイプは、サンプル間隔の各秒で完了した平均操作数を示します。 このタイプのカウンターは、システム時計のタイマー刻みで時間を計測します。 Deployment Kit で PERF_COUNTER_COUNTER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary>このカウンター タイプは、サンプル間隔の各秒で完了した平均操作数を示します。 このタイプのカウンターは、システム時計のタイマー刻みで時間を計測します。 このカウンター タイプは <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" /> タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。 Deployment Kit で PERF_COUNTER_BULK_COUNT カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary>このカウンター タイプは、最後に計測された値だけを収集します。 この値は、通常の算術的な分数を表すカウンターの分母として使用されます。 このタイプは、<see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" /> カウンター タイプをサポートします。 Deployment Kit で PERF_RAW_BASE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary>このカウンター タイプは、最後に計測された値を収集します。 これは <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。 このタイプは、<see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" /> カウンター タイプをサポートします。 Deployment Kit で PERF_LARGE_RAW_BASE カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary>このカウンター タイプは、最後に計測された値だけを示します。 これは平均を表示しません。 Deployment Kit で PERF_COUNTER_RAWCOUNT カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary>このカウンター タイプは、平均ではなく、最後に計測された値だけを示します。 これは <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。 Deployment Kit で PERF_COUNTER_LARGE_RAWCOUNT カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary>このカウンター タイプは、最後に計測された値を 16 進形式で示します。 これは平均を表示しません。 Deployment Kit で PERF_COUNTER_RAWCOUNT_HEX カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary>このカウンター タイプは、最後に計測された値を 16 進形式で示します。 これは <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。 Deployment Kit で PERF_COUNTER_LARGE_RAWCOUNT_HEX カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary>このカウンター タイプは、セットに対するサブセットの比率をパーセントで示します。 たとえば、ディスクで使用中のバイト数とディスクの総バイト数を比較します。 このタイプのカウンターは、一定期間の平均ではなく、現在のパーセントだけを表示します。 Deployment Kit で PERF_RAW_FRACTION カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary>このカウンター タイプは、セットに対するサブセットの比率をパーセントで示します。 たとえば、ディスクで使用中のバイト数とディスクの総バイト数を比較します。 このタイプのカウンターは、一定期間の平均ではなく、現在のパーセントだけを表示します。 これは <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" /> カウンター タイプと同じですが、より大きな値を処理できるように、より大きなフィールドを使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary>このカウンターは、取得したサンプリング割り込みの回数を格納し、サンプリング分数の分母として使用されます。 このタイプは、<see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" /> カウンター タイプをサポートします。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary>このカウンター タイプは、1 秒間に完了した平均操作数を示します。 システム パフォーマンス タイマーのタイマー刻みの時間単位を計測します。 変数 F は、1 秒間に発生するタイマー刻みの数を表します。 F の値が数式で考慮されるため、結果は秒単位で表示されます。 Deployment Kit で PERF_SAMPLE_COUNTER カウンター タイプを参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary>このカウンター タイプは、最後の 2 つのサンプル間隔中に発生したすべての操作に対するヒット カウントの平均比率を示します。 Deployment Kit で PERF_SAMPLE_FRACTION カウンター タイプを参照してください。</summary>
    </member>
  </members>
</doc>