<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary>アプリケーション設定プロパティがアプリケーションのすべてのユーザーに対して共通の値を持つことを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary>Windows フォーム アプリケーションでアプリケーション設定機能を実装する、具象ラッパー クラスを派生する基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを既定の状態に初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary>指定された所有者コンポーネントを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</summary>
      <param name="owner">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary>指定された所有者コンポーネントと設定キーを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</summary>
      <param name="owner">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</param>
      <param name="settingsKey">ラッパー クラスの個々のインスタンスを一意に識別する <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary>指定された設定キーを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</summary>
      <param name="settingsKey">ラッパー クラスの個々のインスタンスを一意に識別する <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary>設定グループに関連付けられているアプリケーション設定のコンテキストを取得します。</summary>
      <returns>設定グループに関連付けられている <see cref="T:System.Configuration.SettingsContext" />。</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary>同じアプリケーションの以前のバージョンの、名前付き設定プロパティの値を返します。</summary>
      <param name="propertyName">値が返される設定プロパティの名前を含む <see cref="T:System.String" />。</param>
      <returns>設定プロパティが見つかった場合は、指定した <see cref="T:System.Object" /> の値を含む <see cref="T:System.Configuration.SettingsProperty" />、それ以外の場合は <see langword="null" /> です。</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">プロパティが存在しません。 プロパティ カウントが 0 か、データ ストアでプロパティが見つかりません。</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary>指定したアプリケーション設定プロパティの値を取得または設定します。</summary>
      <param name="propertyName">アクセスするプロパティの名前を含む <see cref="T:System.String" />。</param>
      <returns>指定した設定プロパティが見つかった場合は、そのプロパティの値。それ以外の場合は <see langword="null" />。</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">現在のラッパーに関連付けられたプロパティが存在しないか、指定したプロパティが見つかりませんでした。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">読み取り専用プロパティを設定しようとしました。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">指定された値は、設定操作時の設定プロパティと型の互換性がありません。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを解析できませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> イベントを発生させます。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Configuration.SettingChangingEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> イベントを発生させます。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Configuration.SettingsLoadedEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> イベントを発生させます。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary>ラッパーの設定プロパティのコレクションを取得します。</summary>
      <returns>現在のラッパーで使用するすべての <see cref="T:System.Configuration.SettingsPropertyCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProperty" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">関連付けられた設定プロバイダーが見つからなかったか、設定プロバイダーをインスタンス化できませんでした。</exception>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary>アプリケーション設定プロパティの値が変更された後に発生します。</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary>プロパティ値のコレクションを取得します。</summary>
      <returns>プロパティ値の <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary>ラッパーが使用するアプリケーション設定プロバイダーのコレクションを取得します。</summary>
      <returns>現在の設定ラッパーの設定プロパティが使用する、すべての <see cref="T:System.Configuration.SettingsProviderCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProvider" />。</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary>永続ストレージからアプリケーション設定プロパティ値を更新します。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary>保持されているアプリケーション設定値を対応する既定のプロパティに復元します。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを解析できませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary>アプリケーション設定プロパティの現在の値を格納します。</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary>アプリケーション設定プロパティの値が変更される前に発生します。</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary>アプリケーション設定グループの設定キーを取得または設定します。</summary>
      <returns>現在の設定グループの設定キーを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary>アプリケーション設定をストレージから取得した後に発生します。</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary>データ ストアに値が保存される前に発生します。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary>アプリケーション設定を更新して、アプリケーションの最新のインストールを反映します。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを解析できませんでした。</exception>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary>構成ファイル内の関連するアプリケーション設定セクションのグループを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary>
        <see cref="T:System.Configuration.ApplicationSettingsGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary>構成から特定のタイプの値を読み取るメソッドを提供します。</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary>
        <see cref="T:System.Configuration.AppSettingsReader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary>指定したキーの値を <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> プロパティから取得し、構成から読み取った値を格納している指定した型のオブジェクトを返します。</summary>
      <param name="key">値を取得するキー。</param>
      <param name="type">返すオブジェクトの型。</param>
      <returns>指定したキーの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が <see langword="null" /> です。

または -
<paramref name="type" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="key" /> が、<see langword="&lt;appSettings&gt;" /> 構成セクションに存在しません。

または -
<paramref name="key" /> の <see langword="&lt;appSettings&gt;" /> 構成セクションの値が、<paramref name="type" /> の型ではありません。</exception>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>構成システムに <see langword="appSettings" /> 構成セクションのサポートを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.AppSettingsSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>追加設定の指定、または <see langword="appSettings" /> 要素で指定された設定のオーバーライドを行う構成ファイルを取得または設定します。</summary>
      <returns>追加設定を提供するか、<see langword="appSettings" /> 要素で指定された設定をオーバーライドする構成ファイル。</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>アプリケーション設定を含むキーと値のペアのコレクションを取得します。</summary>
      <returns>構成ファイルのアプリケーション設定を含むキーと値のペアのコレクション。</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>オブジェクトの動的な検証を提供します。</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>
        <see cref="T:System.Configuration.CallbackValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">検証されるオブジェクトの型。</param>
      <param name="callback">デリゲートとして使用される <see cref="T:System.Configuration.ValidatorCallback" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>オブジェクトの型を検証できるかどうかを判断します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <see langword="type" /> パラメーターが <see cref="T:System.Configuration.CallbackValidator" /> のインスタンス作成時に最初のパラメーターとして使用される型と一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクトの値。</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>コードの検証に使用する <see cref="T:System.Configuration.CallbackValidator" /> オブジェクトを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.CallbackValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>コールバック メソッドの名前を取得または設定します。</summary>
      <returns>呼び出されるメソッドの名前。</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>検証コントロールの型を取得または設定します。</summary>
      <returns>現在の検証コントロールの属性インスタンスの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>検証コントロールのインスタンスを取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.ConfigurationValidatorBase" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> プロパティの値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> プロパティが、オブジェクトのパラメーターが 1 つある、パブリックな静的 void メソッドに設定されていません。</exception>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary>構成ファイル内のユーザー スコープのアプリケーション設定のグループを表します。</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ClientSettingsSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary>セクションのクライアント設定のコレクションを取得します。</summary>
      <returns>現在の構成セクションで検出されたすべてのクライアント設定を格納している <see cref="T:System.Configuration.SettingElementCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>コンマで区切られた文字列要素のコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>コンマ区切りのコレクションに文字列を追加します。</summary>
      <param name="value">文字列値。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>文字列配列のすべての文字列をコレクションに追加します。</summary>
      <param name="range">コレクションに追加する文字列の配列。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>コレクションを空にします。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>コレクションのコピーを作成します。</summary>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> のコピー。</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>コレクション内の指定したインデックス位置に、文字列要素を追加します。</summary>
      <param name="index">新しい要素が追加される位置を示す、コレクション内のインデックス。</param>
      <param name="value">コレクションに追加する新しい要素の値。</param>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>コレクションが変更されたかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> が変更されている場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>コレクション オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 内の指定された文字列要素が読み取り専用の場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>インデックスに基づいてコレクション内の文字列要素を取得または設定します。</summary>
      <param name="index">コレクション内の文字列要素のインデックス。</param>
      <returns>コレクション内の文字列要素。</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>文字列要素をコレクションから削除します。</summary>
      <param name="value">削除する文字列。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>コレクション オブジェクトを読み取り専用に設定します。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>オブジェクトの文字列形式を返します。</summary>
      <returns>オブジェクトの文字列形式。</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>コンマ区切りの文字列値と <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> オブジェクトとの間の変換を行います。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> オブジェクトを <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> オブジェクトに変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="data">変換するコンマ区切りの <see cref="T:System.String" />。</param>
      <returns>変換後の値を含む <see cref="T:System.Configuration.CommaDelimitedStringCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> オブジェクトを <see cref="T:System.String" /> オブジェクトに変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する値。</param>
      <param name="type">変換の型。</param>
      <returns>変換後の <see cref="T:System.String" /> パラメーター (<paramref name="value" />) を表す <see cref="T:System.Configuration.CommaDelimitedStringCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>特定のコンピューター、アプリケーション、またはリソースに適用できる構成ファイルを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>この <see cref="T:System.Configuration.AppSettingsSection" /> オブジェクトに適用される <see cref="T:System.Configuration.Configuration" /> オブジェクトの構成セクションを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.AppSettingsSection" /> オブジェクトに適用される <see langword="appSettings" /> 構成セクションを表す <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>構成ファイル内のアセンブリの文字列を変換するために使用される関数デリゲートを指定します。</summary>
      <returns>型の文字列を変換するデリゲート。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>この <see cref="T:System.Configuration.ConnectionStringsSection" /> オブジェクトに適用される <see cref="T:System.Configuration.Configuration" /> 構成セクション オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConnectionStringsSection" /> オブジェクトに適用される <see langword="connectionStrings" /> 構成セクションを表す <see cref="T:System.Configuration.Configuration" /> 構成セクション オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>
        <see cref="T:System.Configuration.ContextInformation" /> オブジェクトの <see cref="T:System.Configuration.Configuration" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ContextInformation" /> オブジェクトの <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトによって表される構成ファイルへの物理パスを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.Configuration" /> オブジェクトによって表される構成ファイルへの物理パス。</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを返します。</summary>
      <param name="sectionName">返されるセクションへのパス。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。または、要求したセクションが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを取得します。</summary>
      <param name="sectionGroupName">返す <see cref="T:System.Configuration.ConfigurationSectionGroup" /> のパス名。</param>
      <returns>指定された <see cref="T:System.Configuration.ConfigurationSectionGroup" />。または、要求したセクション グループが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトによって表されるリソース用の構成ファイルがあるかどうかを示す値を取得します。</summary>
      <returns>構成ファイルがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクト内で定義されている位置を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationLocationCollection" /> オブジェクト内で定義されている位置が格納されている <see cref="T:System.Configuration.Configuration" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>構成ファイルに XML 名前空間があるかどうかを示す値を取得または設定します。</summary>
      <returns>構成ファイルに XML 名前空間がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトのルート <see cref="T:System.Configuration.Configuration" /> を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.Configuration" /> オブジェクトのルート セクション グループ。</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトに格納されている構成設定を、現在の XML 構成ファイルに書き込みます。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。

または -

構成ファイルが変更されています。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトに格納されている構成設定を、現在の XML 構成ファイルに書き込みます。</summary>
      <param name="saveMode">保存するプロパティ値を決定する <see cref="T:System.Configuration.ConfigurationSaveMode" /> 値。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。

または -

構成ファイルが変更されています。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトに格納されている構成設定を、現在の XML 構成ファイルに書き込みます。</summary>
      <param name="saveMode">保存するプロパティ値を決定する <see cref="T:System.Configuration.ConfigurationSaveMode" /> 値。</param>
      <param name="forceSaveAll">構成が変更されていなくても保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。

または -

構成ファイルが変更されています。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトに格納されている構成設定を、指定された XML 構成ファイルに書き込みます。</summary>
      <param name="filename">構成ファイルの保存先のパスとファイル名。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。

または -

構成ファイルが変更されています。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトに格納されている構成設定を、指定された XML 構成ファイルに書き込みます。</summary>
      <param name="filename">構成ファイルの保存先のパスとファイル名。</param>
      <param name="saveMode">保存するプロパティ値を決定する <see cref="T:System.Configuration.ConfigurationSaveMode" /> 値。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。

または -

構成ファイルが変更されています。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトに格納されている構成設定を、指定された XML 構成ファイルに書き込みます。</summary>
      <param name="filename">構成ファイルの保存先のパスとファイル名。</param>
      <param name="saveMode">保存するプロパティ値を決定する <see cref="T:System.Configuration.ConfigurationSaveMode" /> 値。</param>
      <param name="forceSaveAll">構成が変更されていなくても保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> は null か空の文字列 ("") です。</exception>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>この構成で定義されているセクション グループのコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトのセクション グループのコレクションを表す <see cref="T:System.Configuration.Configuration" /> コレクション。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>この <see cref="T:System.Configuration.Configuration" /> オブジェクトで定義されているセクションのコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.Configuration" /> オブジェクトで定義されているセクションのコレクション。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>以前のバージョンの .NET Framework をターゲット フレームワークとして使用する場合に、対象のバージョンを指定します。</summary>
      <returns>対象となる .NET Framework のバージョンの名前。 既定値は <see langword="null" /> で、現在のバージョンが対象であることを示します。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>構成ファイル内の型の文字列を変換するために使用される関数デリゲートを指定します。</summary>
      <returns>型の文字列を変換するデリゲート。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに格納されたプロパティを設定またはオーバーライドできる構成ファイルの階層内の位置を指定します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、任意の場所に定義できます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、Machine.config ファイルでだけ定義できます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、Machine.config ファイル、Machine.config と同じディレクトリに存在するコンピューター レベルの Web.config ファイル、または仮想ディレクトリのルートに存在するトップ レベルのアプリケーション Web.config ファイルのいずれかで定義できますが、仮想ルートのサブディレクトリでは定義できません。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、Machine.config ファイルまたは Machine.config と同じディレクトリに存在するコンピューター レベルの Web.config ファイルのいずれかで定義できますが、アプリケーション Web.config ファイルでは定義できません。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに格納されたプロパティを設定またはオーバーライドできる構成ファイルの階層内の位置を指定します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、Machine.config ファイルでだけ定義できます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、クライアント アプリケーションのディレクトリの Machine.config ファイルまたは Exe.config ファイルのいずれかで定義できます。 これが既定値です。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、クライアント アプリケーションのディレクトリの Machine.config ファイルか Exe.config ファイル、ローミング ユーザーのディレクトリの User.config ファイル、またはローカル ユーザーのディレクトリの User.config ファイルで定義できます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> は、クライアント アプリケーションのディレクトリの Machine.config ファイルか Exe.config ファイル、またはローミング ユーザーのディレクトリの User.config ファイルで定義できます。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>.NET Framework が構成要素のコレクションのインスタンスを作成するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="itemType">作成するプロパティのコレクションの型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>
        <see langword="&lt;add&gt;" /> 構成要素の名前を取得または設定します。</summary>
      <returns>構成項目において、標準名 "add" に代わる名前。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>
        <see langword="&lt;clear&gt;" /> 構成要素の名前を取得または設定します。</summary>
      <returns>構成項目において、標準名 "clear" に代わる名前。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 属性の型を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> の型。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>コレクション要素の型を取得します。</summary>
      <returns>コレクション要素の型。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>
        <see langword="&lt;remove&gt;" /> 構成要素の名前を取得または設定します。</summary>
      <returns>構成要素において、標準名 "remove" に代わる名前。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>構成コンバーター型の基本クラス。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationConverterBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>変換できるかどうかを確認します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="type">変換対象の <see cref="T:System.Type" />。</param>
      <returns>変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>変換できるかどうかを確認します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="type">変換後の型。</param>
      <returns>変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>構成ファイル内の構成要素を表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>現在の <see cref="T:System.Configuration.Configuration" /> インスタンスが属している構成階層を表す最上位の <see cref="T:System.Configuration.ConfigurationElement" /> インスタンスへの参照を取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.Configuration" /> インスタンスが属している最上位の <see cref="T:System.Configuration.ConfigurationElement" /> インスタンス。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>構成ファイルから XML を読み取ります。</summary>
      <param name="reader">構成ファイルから読み取る <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="serializeCollectionKey">コレクションのキー プロパティだけをシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">読み取り対象の要素がロックされています。

または -

現在のノードの属性が認識されません。

または -

現在のノードのロック ステータスを判断できません。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>
        <see cref="T:System.Configuration.ElementInformation" /> オブジェクトのカスタマイズできない情報と機能を格納する <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ElementInformation" /> のカスタマイズできない情報と機能を格納する <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> オブジェクト自体を表す <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> 自体を表す <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Configuration.ConfigurationElement" /> インスタンスを、指定したオブジェクトと比較します。</summary>
      <param name="compareTo">比較対象のオブジェクト。</param>
      <returns>比較対象のオブジェクトが現在の <see cref="T:System.Configuration.ConfigurationElement" /> インスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>
        <see cref="T:System.Configuration.ContextInformation" /> オブジェクトの <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ContextInformation" /> の <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">現在の要素はコンテキストに関連付けられていません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>現在の <see cref="T:System.Configuration.ConfigurationElement" /> インスタンスを表す一意の値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> の現在のインスタンスを表す一意の値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>指定されたアセンブリ名を変換して返します。</summary>
      <param name="assemblyName">アセンブリの名前。</param>
      <returns>変換後のアセンブリ名。 利用できるトランスフォーマーがない場合は、<paramref name="assemblyName" /> パラメーターの値がそのまま返されます。 利用できるトランスフォーマーがないと、<see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> プロパティは <see langword="null" /> になります。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>指定された型名を変換して返します。</summary>
      <param name="typeName">型の名前。</param>
      <returns>変換後の型名。 利用できるトランスフォーマーがない場合は、<paramref name="typeName" /> パラメーターの値がそのまま返されます。 利用できるトランスフォーマーがないと、<see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> プロパティは <see langword="null" /> になります。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary>
        <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> プロパティが <see langword="null" /> であるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> プロパティが <see langword="null" /> の場合は false、それ以外の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトを初期状態に設定します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの既定の値セットを初期化するために使用します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>派生クラスに実装された場合、この構成要素が最後の保存または読み込み以降に変更されたかどうかを示します。</summary>
      <returns>要素が変更された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>この構成要素のプロパティまたは属性を取得または設定します。</summary>
      <param name="prop">アクセスするプロパティ。</param>
      <returns>指定したプロパティ、属性、または子要素。</returns>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="prop" /> が <see langword="null" /> です。または要素内に存在しません。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> は読み取り専用です。またはロックされています。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>この構成要素のプロパティ、属性、または子要素を取得または設定します。</summary>
      <param name="propertyName">アクセスする <see cref="T:System.Configuration.ConfigurationProperty" /> の名前。</param>
      <returns>指定されたプロパティ、属性、または子要素。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> は読み取り専用です。またはロックされています。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>この <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトおよびすべてのサブ要素の無効なプロパティのエラーを、渡されたリストに追加します。</summary>
      <param name="errorList">
        <see cref="T:System.Collections.IList" /> インターフェイスを実装するオブジェクト。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>ロックされている属性のコレクションを取得します。</summary>
      <returns>要素のロックされている属性 (プロパティ) の <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>ロックされている要素のコレクションを取得します。</summary>
      <returns>ロックされている要素の <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>ロックされている属性のコレクションを取得します。</summary>
      <returns>要素のロックされている属性 (プロパティ) の <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>ロックされている要素のコレクションを取得します。</summary>
      <returns>ロックされている要素の <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>要素がロックされているかどうかを示す値を取得または設定します。</summary>
      <returns>要素がロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">要素はより高い構成レベルでロック済みです。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>逆シリカル化中に不明な属性が発生したかどうかを示す値を取得します。</summary>
      <param name="name">認識されない属性の名前。</param>
      <param name="value">認識されない属性の値。</param>
      <returns>逆シリアル化中に不明な属性が発生した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>逆シリカル化中に不明な要素が発生したかどうかを示す値を取得します。</summary>
      <param name="elementName">不明なサブ要素の名前。</param>
      <param name="reader">逆シリアル化に使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>逆シリアル化中に不明な要素が発生した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="elementName" /> によって識別される要素がロックされています。

または -
1 つまたは複数の要素の属性がロックされています。

または -
<paramref name="elementName" /> が認識されないか、要素に認識されない属性があります。

または -
要素に無効な値のブール型属性があります。

または -
プロパティの逆シリアル化が複数回試行されました。

または -
有効な要素数ではないプロパティの逆シリアル化が試行されました。

または -
この要素に CDATA またはテキスト要素を含むことはできません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>必要なプロパティが見つからないと例外がスローされます。</summary>
      <param name="name">見つからなかった必要な属性の名前。</param>
      <returns>なし。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">すべての場合。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>逆シリアル化後に呼び出されます。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>シリアル化前に呼び出されます。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> をシリアル化するために使用する <see cref="T:System.Configuration.ConfigurationElement" />。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>プロパティのコレクションを取得します。</summary>
      <returns>要素のプロパティの <see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの内部状態 (ロックやプロパティ コレクションなど) をリセットします。</summary>
      <param name="parentElement">構成要素の親ノード。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> メソッドの値が派生クラスに実装されたときに、<see langword="false" /> にリセットします。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>派生クラスに実装されている場合、この構成要素の内容を構成ファイルに書き込みます。</summary>
      <param name="writer">構成ファイルへの書き込みを行う <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="serializeCollectionKey">コレクションのキー プロパティだけをシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns>データが実際にシリアル化された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">現在の属性は、より高い構成レベルでロックされています。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>派生クラスに実装されている場合、この構成要素の外側のタグを構成ファイルに書き込みます。</summary>
      <param name="writer">構成ファイルへの書き込みを行う <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="elementName">書き込まれる <see cref="T:System.Configuration.ConfigurationElement" /> の名前。</param>
      <returns>書き込みが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Exception">要素に複数の子要素があります。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>プロパティを指定した値に設定します。</summary>
      <param name="prop">設定する要素プロパティ。</param>
      <param name="value">プロパティに割り当てる値。</param>
      <param name="ignoreLocks">プロパティのロックを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">要素が読み取り専用であるか、<paramref name="ignoreLocks" /> が <see langword="true" /> であるのにロックを無視できない場合に発生します。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> オブジェクトおよびすべてのサブ要素に <see cref="T:System.Configuration.ConfigurationElement" /> プロパティを設定します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>保存しないすべての値を削除するには、<see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトを変更します。</summary>
      <param name="sourceElement">プロパティのマージされたビューを格納する、現在のレベルの <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <param name="parentElement">親である <see cref="T:System.Configuration.ConfigurationElement" />。これが最上位である場合は <see langword="null" />。</param>
      <param name="saveMode">含めるプロパティ値を決定する列挙値のうちの 1 つ。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>子要素のコレクションを格納する構成要素を表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="comparer">使用する <see cref="T:System.Collections.IComparer" /> 比較子。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Configuration.ConfigurationElement" /> での追加操作に関連付ける <see cref="T:System.Configuration.ConfigurationElementCollection" /> の名前を取得または設定します。</summary>
      <returns>要素の名前。</returns>
      <exception cref="T:System.ArgumentException">選択した値は予約済みのプレフィックス「config」または「lock」で始まります。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> に構成要素を追加します。</summary>
      <param name="element">追加する <see cref="T:System.Configuration.ConfigurationElement" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>構成要素のコレクションに構成要素を追加します。</summary>
      <param name="element">追加する <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <param name="throwIfExists">指定した <see cref="T:System.Configuration.ConfigurationElement" /> が <see cref="T:System.Configuration.ConfigurationElementCollection" /> に既に含まれているときに例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Exception">追加する <see cref="T:System.Configuration.ConfigurationElement" /> は <see cref="T:System.Configuration.ConfigurationElementCollection" /> に既に存在し、<paramref name="throwIfExists" /> パラメーターが <see langword="true" /> です。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>構成要素のコレクションに構成要素を追加します。</summary>
      <param name="index">指定した <see cref="T:System.Configuration.ConfigurationElement" /> を追加するインデックス位置。</param>
      <param name="element">追加する <see cref="T:System.Configuration.ConfigurationElement" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>コレクションからすべての構成要素オブジェクトを削除します。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成は読み取り専用です。

または -

コレクション項目はより高いレベルの構成でロックされました。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>指定したインデックス位置にある構成要素を取得します。</summary>
      <param name="index">返される <see cref="T:System.Configuration.ConfigurationElement" /> のインデックス位置。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> は <see langword="0" /> より小さい値です。

または -
指定された <paramref name="index" /> の位置に <see cref="T:System.Configuration.ConfigurationElement" /> がありません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>指定したキーを持つ構成要素を返します。</summary>
      <param name="key">返される要素のキー。</param>
      <returns>指定したキーを持つ <see cref="T:System.Configuration.ConfigurationElement" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> に格納されているすべての構成要素のキーの配列を返します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> に格納されているすべての <see cref="T:System.Configuration.ConfigurationElementCollection" /> オブジェクトのキーを含む配列。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationElement" /> のキーを取得します。</summary>
      <param name="index">
        <see cref="T:System.Configuration.ConfigurationElement" /> のインデックス位置。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationElement" /> のキー。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> は <see langword="0" /> より小さい値です。

または -
指定された <paramref name="index" /> の位置に <see cref="T:System.Configuration.ConfigurationElement" /> がありません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationElement" /> のインデックスを示します。</summary>
      <param name="element">指定したインデックス位置の <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationElement" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>指定したキーを持つ <see cref="T:System.Configuration.ConfigurationElement" /> が <see cref="T:System.Configuration.ConfigurationElementCollection" /> から削除されているかどうかを示します。</summary>
      <param name="key">チェックする要素のキー。</param>
      <returns>指定したキーを持つ <see cref="T:System.Configuration.ConfigurationElement" /> が削除されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> をコレクションから削除します。</summary>
      <param name="key">削除する <see cref="T:System.Configuration.ConfigurationElement" /> のキー。</param>
      <exception cref="T:System.Exception">指定したキーを持つ <see cref="T:System.Configuration.ConfigurationElement" /> がコレクションに存在しないか、この要素は既に削除されています。または、<see cref="P:System.Configuration.ConfigurationProperty.Type" /> の値が <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> ではないため、この要素を削除できません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationElement" /> を削除します。</summary>
      <param name="index">削除する <see cref="T:System.Configuration.ConfigurationElement" /> のインデックス位置。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成は読み取り専用です。

または -
<paramref name="index" /> が <see langword="0" /> 未満か、コレクションに含まれる <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクト数を上回っています。

または -
<see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトは既に削除されています。

または -
<see cref="T:System.Configuration.ConfigurationElement" /> オブジェクト値はより高度なレベルでロックされました。

または -
<see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが継承されました。

または -
<see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの <see cref="P:System.Configuration.ConfigurationProperty.Type" /> は、<see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />、または <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" /> ではありません。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Configuration.ConfigurationElement" /> での消去操作に関連付ける <see cref="T:System.Configuration.ConfigurationElementCollection" /> の名前を取得または設定します。</summary>
      <returns>要素の名前。</returns>
      <exception cref="T:System.ArgumentException">選択した値は予約済みのプレフィックス「config」または「lock」で始まります。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> の型を取得します。</summary>
      <returns>このコレクションの <see cref="T:System.Configuration.ConfigurationElementCollectionType" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> の内容を配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> の内容のコピー先となる配列。</param>
      <param name="index">コピーを開始するインデックス位置。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>コレクション内の要素の数を取得します。</summary>
      <returns>コレクション内の要素の数。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>派生クラスでオーバーライドされると、新しい <see cref="T:System.Configuration.ConfigurationElement" /> を作成します。</summary>
      <returns>新しく作成した <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>派生クラスでオーバーライドされると、新しい <see cref="T:System.Configuration.ConfigurationElement" /> を作成します。</summary>
      <param name="elementName">作成する <see cref="T:System.Configuration.ConfigurationElement" /> の名前。</param>
      <returns>指定した名前の新しい <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>派生クラスでオーバーライドされると、構成ファイル内のこの要素のコレクションを識別するために使用する名前を取得します。</summary>
      <returns>コレクションの名前。それ以外の場合は空の文字列。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>コレクションが削除されたかどうかを示す値を取得または設定します。</summary>
      <returns>コレクションが削除されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成は読み取り専用です。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> と指定したオブジェクトを比較します。</summary>
      <param name="compareTo">比較対象のオブジェクト。</param>
      <returns>比較対象のオブジェクトが現在の <see cref="T:System.Configuration.ConfigurationElementCollection" /> インスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>派生クラスでオーバーライドされると、指定した構成要素の要素キーを取得します。</summary>
      <param name="element">キーを返す <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <returns>指定した <see cref="T:System.Object" /> のキーとして機能する <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.IEnumerator" /> の反復処理に使用する <see cref="T:System.Configuration.ConfigurationElementCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の反復処理に使用する <see cref="T:System.Configuration.ConfigurationElementCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> インスタンスを表す一意の値を取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.ConfigurationElementCollection" /> インスタンスを表す一意の値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationElement" /> が <see cref="T:System.Configuration.ConfigurationElementCollection" /> に存在するかどうかを示します。</summary>
      <param name="elementName">検査する要素の名前。</param>
      <returns>要素がコレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationElement" /> を <see cref="T:System.Configuration.ConfigurationElementCollection" /> から削除できるかどうかを示します。</summary>
      <param name="element">チェックする要素。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationElement" /> をこの <see cref="T:System.Configuration.ConfigurationElementCollection" /> から削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>派生クラスでオーバーライドされると、この <see cref="T:System.Configuration.ConfigurationElementCollection" /> が最後に保存された後または読み込まれた後に、変更されているかどうかを示します。</summary>
      <returns>格納されている要素が変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> オブジェクトが読み取り専用かどうかを示します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> へのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>構成システムが例外をスローするようにします。</summary>
      <param name="elementName">認識できない要素の名前。</param>
      <param name="reader">構成ファイルから XML を読み取る入力ストリーム。</param>
      <returns>認識されない要素が正常に逆シリアル化された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="elementName" /> に指定されている要素は、<see langword="&lt;clear&gt;" /> 要素です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" /> は予約済みのプレフィックス「config」または「lock」で始まります。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Configuration.ConfigurationElement" /> での削除操作に関連付ける <see cref="T:System.Configuration.ConfigurationElementCollection" /> の名前を取得または設定します。</summary>
      <returns>要素の名前。</returns>
      <exception cref="T:System.ArgumentException">選択した値は予約済みのプレフィックス「config」または「lock」で始まります。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Configuration.ConfigurationElementCollection" /> を変更されていない状態にリセットします。</summary>
      <param name="parentElement">コレクションの親要素が存在する場合は、その要素を表す <see cref="T:System.Configuration.ConfigurationElement" />。それ以外の場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> プロパティの値を <see langword="false" /> にリセットします。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>派生クラスでオーバーライドされると、構成データを構成ファイルの XML 要素に書き込みます。</summary>
      <param name="writer">構成ファイルに XML を書き込む出力ストリーム。</param>
      <param name="serializeCollectionKey">コレクション キーをシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> が構成ファイルに正常に書き込まれた場合は <see langword="true" />。</returns>
      <exception cref="T:System.ArgumentException">コレクションのいずれかの要素が追加または置換され、予約済みのプレフィックス「config」または「lock」で始まります。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> オブジェクトとすべてのサブ要素の <see cref="T:System.Configuration.ConfigurationElementCollection" /> プロパティを設定します。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> へのアクセスを同期するために使用するオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> へのアクセスを同期するために使用するオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> を配列にコピーします。</summary>
      <param name="arr">この <see cref="T:System.Configuration.ConfigurationElementCollection" /> のコピー先となる配列。</param>
      <param name="index">コピーを開始するインデックス位置。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>重複する <see cref="T:System.Configuration.ConfigurationElement" /> を <see cref="T:System.Configuration.ConfigurationElementCollection" /> に追加しようとしたときに、例外をスローするかどうかを示す値を取得します。</summary>
      <returns>重複する <see cref="T:System.Configuration.ConfigurationElement" /> をこの <see cref="T:System.Configuration.ConfigurationElementCollection" /> に追加しようとしたときに、例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>構成階層の異なるレベルの構成情報をマージした効果を元に戻します。</summary>
      <param name="sourceElement">プロパティのマージされたビューを格納する、現在のレベルの <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクト。</param>
      <param name="parentElement">現在の要素の親 <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクト。この要素がトップレベルの場合は <see langword="null" />。</param>
      <param name="saveMode">含めるプロパティ値を決定する列挙値のうちの 1 つ。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> オブジェクトの型を指定します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> の既定の型。 この型のコレクションには、構成ファイルのすべての階層でマージできる要素が格納されます。 このような階層内の任意のレベルで、<see langword="add" />、<see langword="remove" />、および <see langword="clear" /> の各ディレクティブを使用して、任意の継承プロパティの変更と新しいプロパティの指定を行います。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>この型は <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> とほぼ同じですが、この型を使用すると、<see cref="T:System.Configuration.ConfigurationElementCollection" /> オブジェクトが、継承された要素がリストの最後になるように、その内容を並べ替える点が異なります。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>この型のコレクションには、要素が指定されているレベルとすべての子レベルに適用される要素が格納されます。 子レベルは、この型の親要素で指定されているプロパティを変更できません。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>この型は <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" /> とほぼ同じですが、この型を使用すると、<see cref="T:System.Configuration.ConfigurationElementCollection" /> オブジェクトが、継承された要素がリストの最後になるように、その内容を並べ替える点が異なります。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>構成要素のプロパティを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.ConfigurationElementProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="validator">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> オブジェクトの検証に使用される <see cref="T:System.Configuration.ConfigurationElementProperty" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>構成エラーが発生したときにスローされる例外。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">逆シリアル化する情報を保持しているオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.InvalidOperationException">現在の型が <see cref="T:System.Configuration.ConfigurationException" /> または <see cref="T:System.Configuration.ConfigurationErrorsException" /> ではありません。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされる原因となった例外。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされる原因となった内部例外。</param>
      <param name="filename">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされる原因となった構成ファイルのパス。</param>
      <param name="line">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた構成ファイル内の行番号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされる原因となった内部例外。</param>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされる原因となった内部例外。</param>
      <param name="reader">この <see cref="T:System.Xml.XmlReader" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="filename">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされる原因となった構成ファイルのパス。</param>
      <param name="line">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた構成ファイル内の行番号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="reader">この <see cref="T:System.Xml.XmlReader" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>この構成上の例外がスローされた理由の記述を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationErrorsException" /> がスローされた理由の記述。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由の詳細なエラーのコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Collections.ICollection" /> 例外がスローされた理由を示すエラーが格納されている <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>この構成上の例外がスローされる原因となった構成ファイルのパスを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationErrorsException" /> がスローされる原因となった構成ファイルのパス。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlNode" /> オブジェクトの読み込み元であった構成ファイルのパスを取得します。</summary>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
      <returns>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlNode" /> オブジェクトの読み込み元であった構成ファイルのパス。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlReader" /> が読み取っていた構成ファイルのパスを取得します。</summary>
      <param name="reader">この <see cref="T:System.Xml.XmlReader" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
      <returns>例外の発生時に、内部 <see cref="T:System.Xml.XmlReader" /> オブジェクトがアクセスしていた構成ファイルのパス。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlNode" /> オブジェクトが表していた構成ファイル内の行番号を取得します。</summary>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
      <returns>この構成上の例外がスローされたときに解析されていた <see cref="T:System.Xml.XmlNode" /> オブジェクトが格納されている構成ファイル内の行番号。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlReader" /> オブジェクトが処理していた構成ファイル内の行番号を取得します。</summary>
      <param name="reader">この <see cref="T:System.Xml.XmlReader" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationErrorsException" /> オブジェクト。</param>
      <returns>例外の発生時に、<see cref="T:System.Xml.XmlReader" /> オブジェクトがアクセスしていた構成ファイル内の行番号。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ファイル名とこの構成上の例外が発生した行番号を使用して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info">シリアル化する情報を保持しているオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>この構成上の例外がスローされた構成ファイル内の行番号を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた構成ファイル内の行番号。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>この構成上の例外がスローされた理由の拡張された記述を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationErrorsException" /> 例外がスローされた理由の拡張された記述。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary>構成システムのエラーが発生したときにスローされる例外。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">逆シリアル化する情報を保持しているオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由を記述しているメッセージ。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされた場合にその原因となった内部例外。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされた場合にその原因となった内部例外。</param>
      <param name="filename">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされる原因となった構成ファイルのパス。</param>
      <param name="line">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされた構成ファイル内の行番号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="inner">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされた場合にその原因となった内部例外。</param>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> がスローされる原因となった <see cref="T:System.Configuration.ConfigurationException" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="filename">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされる原因となった構成ファイルのパス。</param>
      <param name="line">この <see cref="T:System.Configuration.ConfigurationException" /> がスローされた構成ファイル内の行番号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由を記述しているメッセージ。</param>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> がスローされる原因となった <see cref="T:System.Configuration.ConfigurationException" />。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary>この構成上の例外がスローされた理由の記述を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由の記述。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary>この構成上の例外がスローされる原因となった構成ファイルのパスを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされる原因となった構成ファイルのパス。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ファイル名とこの構成上の例外が発生した行番号を使用して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info">シリアル化する情報を保持しているオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlNode" /> オブジェクトの読み込み元であった構成ファイルのパスを取得します。</summary>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationException" />。</param>
      <returns>ノード ファイル名を表す <see langword="string" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary>この構成上の例外がスローされたときに、内部 <see cref="T:System.Xml.XmlNode" /> オブジェクトが表していた構成ファイル内の行番号を取得します。</summary>
      <param name="node">この <see cref="T:System.Xml.XmlNode" /> 例外がスローされる原因となった <see cref="T:System.Configuration.ConfigurationException" />。</param>
      <returns>ノード行番号を表す <see langword="int" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary>この構成上の例外がスローされた構成ファイル内の行番号を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた構成ファイル内の行番号。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary>この構成上の例外がスローされた理由の拡張された記述を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationException" /> 例外がスローされた理由の拡張された記述。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>コンピューターの構成ファイルに対する構成ファイルの対応付けを定義します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationFileMap" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.ConfigurationFileMap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="machineConfigFilename">コンピューターの構成ファイルの名前。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>既存の <see cref="T:System.Configuration.ConfigurationFileMap" /> オブジェクトのコピーを作成します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationFileMap" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>コンピューターの構成ファイル名を取得または設定します。</summary>
      <returns>コンピューターの構成ファイル名。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>構成ファイル内の <see langword="location" /> 要素を表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>構成オブジェクトのインスタンスを作成します。</summary>
      <returns>構成オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>この <see cref="T:System.Configuration.ConfigurationLocation" /> オブジェクトで構成設定が表されているリソースへの相対パスを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationLocation" /> で構成設定が表されているリソースへの相対パス。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>
        <see cref="T:System.Configuration.ConfigurationLocationCollection" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationLocationCollection" /> オブジェクトを取得します。</summary>
      <param name="index">返される <see cref="T:System.Configuration.ConfigurationLocationCollection" /> のインデックス位置。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.Configuration.ConfigurationLocationCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>ロックされている構成オブジェクトのコレクションを格納します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>構成オブジェクトを、コレクションに追加することによってロックします。</summary>
      <param name="name">構成オブジェクトの名前。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="name" /> がコレクション内の既存の構成オブジェクトに一致しない場合に発生します。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>コレクションに格納されている構成オブジェクトのリストを取得します。</summary>
      <returns>コレクション内のロック構成オブジェクトの一覧を示すコンマ区切りの文字列。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>コレクションからすべての構成オブジェクトを消去します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>特定の構成オブジェクトがロックされているかどうかを検査します。</summary>
      <param name="name">検査する構成オブジェクトの名前。</param>
      <returns>指定した構成オブジェクトが <see cref="T:System.Configuration.ConfigurationLockCollection" /> に格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクション全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まります。</summary>
      <param name="array">
        <see cref="T:System.Array" /> からコピーされる要素のコピー先となる 1 次元 <see cref="T:System.Configuration.ConfigurationLockCollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>コレクションに格納されている、ロックされている構成オブジェクトの数を取得します。</summary>
      <returns>コレクションに格納されている、ロックされている構成オブジェクトの数。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>この <see cref="T:System.Collections.IEnumerator" /> コレクションを反復処理するために使用される <see cref="T:System.Configuration.ConfigurationLockCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>ロックされているオブジェクトのコレクションに親要素があるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクションに親要素がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>コレクションが変更されたかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクションが変更された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>特定の構成オブジェクトが読み取り専用かどうかを検査します。</summary>
      <param name="name">検査する構成オブジェクトの名前。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクションにある指定した構成オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">指定した構成オブジェクトはコレクション内に存在しません。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>コレクションの同期がとられているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクションの同期がとられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>構成オブジェクトをコレクションから削除します。</summary>
      <param name="name">構成オブジェクトの名前。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="name" /> がコレクション内の既存の構成オブジェクトに一致しない場合に発生します。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>指定されたリストに基づいて、構成オブジェクトのセットをロックします。</summary>
      <param name="attributeList">コンマ区切りの文字列。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="attributeList" /> パラメーター内の項目がロックできる有効な構成属性ではない場合に発生します。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>この <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクションへのアクセスを同期するために使用するオブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクションへのアクセスを同期するために使用するオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> コレクション全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まります。</summary>
      <param name="array">
        <see cref="T:System.Array" /> コレクションからコピーされる要素のコピー先となる 1 次元 <see cref="T:System.Configuration.ConfigurationLockCollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>クライアント アプリケーションの構成ファイルにアクセスできるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>現在のアプリケーションの既定構成の <see cref="T:System.Configuration.AppSettingsSection" /> データを取得します。</summary>
      <returns>現在のアプリケーションの既定の構成の <see cref="T:System.Configuration.AppSettingsSection" /> オブジェクトの内容を格納している <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">アプリケーション設定データを持つ <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクトを取得できませんでした。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>現在のアプリケーションの既定構成の <see cref="T:System.Configuration.ConnectionStringsSection" /> データを取得します。</summary>
      <returns>現在のアプリケーションの既定の構成の <see cref="T:System.Configuration.ConnectionStringsSection" /> オブジェクトの内容を格納している <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトを取得できませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>現在のアプリケーションの既定構成の、指定した構成セクションを取得します。</summary>
      <param name="sectionName">構成セクションのパスと名前。 ノード名は、"system.net/mailSettings/smtp" のように、スラッシュで区切られます。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。セクションが存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>現在のアプリケーションの構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</summary>
      <param name="userLevel">構成を開く対象となる <see cref="T:System.Configuration.ConfigurationUserLevel" />。</param>
      <returns>
        <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>指定したクライアント構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</summary>
      <param name="exePath">実行可能 (exe) ファイルのパスです。</param>
      <returns>
        <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>現在のコンピューターのマシン構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</summary>
      <returns>
        <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>指定したクライアント構成ファイルを、指定したファイル マップとユーザー レベルを使用する <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</summary>
      <param name="fileMap">アプリケーションの既定の構成ファイルの代わりに使用する構成ファイルを参照する <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</param>
      <param name="userLevel">構成を開く対象となる <see cref="T:System.Configuration.ConfigurationUserLevel" /> オブジェクト。</param>
      <returns>構成オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary>指定したクライアント構成ファイルを、指定したファイル マップ、ユーザー レベル、およびプリロード オプションを使用する <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</summary>
      <param name="fileMap">既定のアプリケーションの構成ファイルの代わりに使用する構成ファイルを参照する <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</param>
      <param name="userLevel">構成を開く対象となる <see cref="T:System.Configuration.ConfigurationUserLevel" /> オブジェクト。</param>
      <param name="preLoad">すべてのセクション グループとセクションをプリロードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>構成オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>マシン構成ファイルを、指定したファイル マップを使用する <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</summary>
      <param name="fileMap">アプリケーションの既定の構成ファイルの代わりに使用する構成ファイルを参照する <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>名前付きセクションを次回取得するときに、ディスクから再読み取りするように、名前付きセクションを更新します。</summary>
      <param name="sectionName">更新する構成セクション名、またはセクションの構成パスとセクション名。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>属性または構成要素の子を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">構成エンティティの名前。</param>
      <param name="type">構成エンティティの型。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">構成エンティティの名前。</param>
      <param name="type">構成エンティティの型。</param>
      <param name="defaultValue">構成エンティティの既定値。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">構成エンティティの名前。</param>
      <param name="type">構成エンティティの型。</param>
      <param name="defaultValue">構成エンティティの既定値。</param>
      <param name="typeConverter">適用するコンバーターの型。</param>
      <param name="validator">使用する検証コントロール。</param>
      <param name="options">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 列挙値のいずれか。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">構成エンティティの名前。</param>
      <param name="type">構成エンティティの型。</param>
      <param name="defaultValue">構成エンティティの既定値。</param>
      <param name="typeConverter">適用するコンバーターの型。</param>
      <param name="validator">使用する検証コントロール。</param>
      <param name="options">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 列挙値のいずれか。</param>
      <param name="description">構成エンティティの説明。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">構成エンティティの名前。</param>
      <param name="type">構成エンティティの型。</param>
      <param name="defaultValue">構成エンティティの既定値。</param>
      <param name="options">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 列挙値のいずれか。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>構成ファイルへの書き込みを目的として、この <see cref="T:System.ComponentModel.TypeConverter" /> を XML 表現に変換するために使用する <see cref="T:System.Configuration.ConfigurationProperty" /> を取得します。</summary>
      <returns>構成ファイルへの書き込みを目的として、この <see cref="T:System.ComponentModel.TypeConverter" /> を XML 表現に変換するために使用する <see cref="T:System.Configuration.ConfigurationProperty" />。</returns>
      <exception cref="T:System.Exception">この <see cref="T:System.Configuration.ConfigurationProperty" /> は変換できません。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>この <see cref="T:System.Configuration.ConfigurationProperty" /> プロパティの既定値を取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> プロパティで指定された型にキャストできる <see cref="P:System.Configuration.ConfigurationProperty.Type" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>
        <see cref="T:System.Configuration.ConfigurationProperty" /> に関連付けられている説明を取得します。</summary>
      <returns>プロパティを説明する <see langword="string" /> 値。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>以前のバージョンの .NET Framework 用に構成プロパティのアセンブリ名をシリアル化する場合に、アセンブリ名の変換が必要かどうかを示します。</summary>
      <returns>アセンブリ名の変換が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>プロパティが要素の既定のコレクションであるかどうかを示す値を取得します。</summary>
      <returns>プロパティが、要素の既定のコレクションである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>この <see cref="T:System.Configuration.ConfigurationProperty" /> が、格納する側の <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトのキーかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationProperty" /> オブジェクトがコンテナー要素のキーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>この <see cref="T:System.Configuration.ConfigurationProperty" /> が必要かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationProperty" /> が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>以前のバージョンの .NET Framework 用に構成プロパティの型名をシリアル化する場合に、型名の変換が必要かどうかを示します。</summary>
      <returns>型名の変換が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>構成プロパティを XML にシリアル化するかどうかを判断するために、シリアル化時に構成プロパティの親構成セクションを照会する必要があるかどうかを示します。</summary>
      <returns>親構成セクションを照会する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>この <see cref="T:System.Configuration.ConfigurationProperty" /> の名前を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationProperty" /> の名前。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>この <see cref="T:System.Configuration.ConfigurationProperty" /> オブジェクトの型を取得します。</summary>
      <returns>この <see cref="T:System.Type" /> オブジェクトの型を表す <see cref="T:System.Configuration.ConfigurationProperty" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>この <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> オブジェクトを検証するために使用する <see cref="T:System.Configuration.ConfigurationProperty" /> を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationValidatorBase" /> を検証するために使用する <see cref="T:System.Configuration.ConfigurationProperty" /> 検証コントロール。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>.NET Framework が構成プロパティをインスタンス化するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">定義された <see cref="T:System.Configuration.ConfigurationProperty" /> オブジェクトの名前。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>装飾されたプロパティの既定値を取得または設定します。</summary>
      <returns>装飾された構成要素のプロパティの既定値を表すオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>これが、装飾された構成プロパティに対する既定プロパティのコレクションかどうかを示す値を取得または設定します。</summary>
      <returns>プロパティが、要素の既定のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>これが、装飾された要素のプロパティに対する主要プロパティかどうかを示す値を取得または設定します。</summary>
      <returns>プロパティが、コレクションの要素に対する主要プロパティの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>装飾された要素のプロパティが必要かどうかを示す値を取得または設定します。</summary>
      <returns>プロパティが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>装飾された構成要素のプロパティの名前を取得します。</summary>
      <returns>装飾された構成要素のプロパティの名前。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>装飾された構成要素のプロパティの <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> を取得または設定します。</summary>
      <returns>プロパティに関連付けられた <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 列挙値の 1 つ。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>構成要素のプロパティのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>構成プロパティをコレクションに追加します。</summary>
      <param name="property">追加する <see cref="T:System.Configuration.ConfigurationProperty" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>コレクションからすべての構成プロパティ オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>このコレクションに構成プロパティが格納されているかどうかを指定します。</summary>
      <param name="name">検証対象となる <see cref="T:System.Configuration.ConfigurationProperty" /> の識別子。</param>
      <returns>指定された <see cref="T:System.Configuration.ConfigurationProperty" /> がコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>この ConfigurationPropertyCollection を配列にコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピーを開始する位置のインデックス。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>コレクション内のプロパティの数を取得します。</summary>
      <returns>コレクション内のプロパティの数。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>コレクションに適用する <see cref="T:System.Collections.IEnumerator" /> オブジェクトを取得します。</summary>
      <returns>コレクションに適用する <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> へのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>指定した名前を持つコレクション項目を取得します。</summary>
      <param name="name">返される <see cref="T:System.Configuration.ConfigurationProperty" />。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationProperty" /> の <paramref name="name" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>構成プロパティをコレクションから削除します。</summary>
      <param name="name">削除する <see cref="T:System.Configuration.ConfigurationProperty" />。</param>
      <returns>指定した <see cref="T:System.Configuration.ConfigurationProperty" /> が削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するためのオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するためのオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このコレクションを配列にコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピーを開始するインデックスの位置。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>プロパティに適用するオプションを指定します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>以前のバージョンの .NET Framework 用に構成プロパティのアセンブリ名をシリアル化する場合に、アセンブリ名の変換が必要かどうかを示します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>プロパティが既定のコレクションであることを示します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>プロパティがコレクションのキーであることを示します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>プロパティが必要であることを示します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>以前のバージョンの .NET Framework 用に構成プロパティの型名をシリアル化する場合に、型名の変換が必要かどうかを示します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>構成プロパティを XML にシリアル化するかどうかを判断するために、シリアル化時に構成プロパティの親構成セクションを照会する必要があるかどうかを示します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>プロパティにオプションが適用されないことを示します。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>構成ファイルに書き出されるプロパティを確認します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>すべてのプロパティが構成ファイルに書き込まれます。 これは、主に情報構成ファイルを作成する場合、または別のコンピューターに構成値を移動する場合に役立ちます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>継承された値と異なるプロパティだけが構成ファイルに書き込まれます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>変更されたプロパティだけが構成ファイルに書き込まれます。値が継承された値と同じでも書き込まれます。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>構成ファイル内のセクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>構成ファイルから XML を読み取ります。</summary>
      <param name="reader">構成ファイルから読み込む <see cref="T:System.Xml.XmlReader" /> オブジェクト。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" /> が、構成ファイルで要素を見つけることができませんでした。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>派生クラスでオーバーライドされると、カスタム オブジェクトを返します。</summary>
      <returns>セクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>派生クラスに実装された場合、この構成要素が最後の保存または読み込み以降に変更されたかどうかを示します。</summary>
      <returns>要素が変更された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> メソッドの値が派生クラスに実装されたときに、<see langword="false" /> にリセットします。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>
        <see cref="T:System.Configuration.SectionInformation" /> オブジェクトのカスタマイズできない情報と機能を格納する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SectionInformation" /> オブジェクトのカスタマイズできない情報と機能を格納する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>ファイルに書き込む 1 つのセクションとして、<see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトのアンマージされたビューを含む XML 文字列を作成します。</summary>
      <param name="parentElement">アンマージを実行する場合に親として使用する <see cref="T:System.Configuration.ConfigurationElement" /> インスタンス。</param>
      <param name="name">作成するセクションの名前。</param>
      <param name="saveMode">文字列に書き込むときに使用する <see cref="T:System.Configuration.ConfigurationSaveMode" /> インスタンス。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトのアンマージされたビューを含む XML 文字列。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>指定されたターゲット バージョンの .NET Framework 用に構成オブジェクト階層をシリアル化するとき、指定された要素がシリアル化されるかどうかを示します。</summary>
      <param name="element">シリアル化の候補となる <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクト。</param>
      <param name="elementName">XML での <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの名前。</param>
      <param name="targetFramework">.NET Framework のターゲット バージョン。</param>
      <returns>
        <paramref name="element" /> をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>指定されたターゲット バージョンの .NET Framework 用に構成オブジェクト階層をシリアル化するとき、指定されたプロパティがシリアル化されるかどうかを示します。</summary>
      <param name="property">シリアル化の候補となる <see cref="T:System.Configuration.ConfigurationProperty" /> オブジェクト。</param>
      <param name="propertyName">XML での <see cref="T:System.Configuration.ConfigurationProperty" /> オブジェクトの名前。</param>
      <param name="targetFramework">.NET Framework のターゲット バージョン。</param>
      <param name="parentConfigurationElement">プロパティの親要素。</param>
      <returns>
        <paramref name="property" /> をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>指定されたターゲット バージョンの .NET Framework 用に構成オブジェクト階層をシリアル化するとき、現在の <see cref="T:System.Configuration.ConfigurationSection" /> インスタンスがシリアル化されるかどうかを示します。</summary>
      <param name="targetFramework">.NET Framework のターゲット バージョン。</param>
      <returns>現在のセクションをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>構成ファイル内の関連セクションのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトに <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを追加します。</summary>
      <param name="name">追加するセクションの名前。</param>
      <param name="section">追加するセクション。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトをクリアします。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトのコピー先の配列。</param>
      <param name="index">コピーを開始するインデックスの位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" /> の長さが、<see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> に <paramref name="index" /> を加算した値より小さい値です。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクト内のセクションの数を取得します。</summary>
      <returns>コレクション内のセクションの数を表す整数。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに格納されている、指定した <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトを取得します。</summary>
      <param name="index">取得する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに格納されている、指定した <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトを取得します。</summary>
      <param name="name">取得する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトの名前。</param>
      <returns>指定した名前の <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> は null か空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトを反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> オブジェクトを反復処理するために使用できる <see cref="T:System.Configuration.ConfigurationSectionCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに格納されている、指定した <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトのキーを取得します。</summary>
      <param name="index">キーを取得する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトのキー。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化中にシステムにより使用されます。</summary>
      <param name="info">適用できる <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">適用できる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを取得します。</summary>
      <param name="index">取得する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを取得します。</summary>
      <param name="name">取得する <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトの名前。</param>
      <returns>指定した名前の <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに格納されているすべての <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトに対するキーを取得します。</summary>
      <returns>このコレクション内のすべてのセクションのキーを格納している <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを、この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトから削除します。</summary>
      <param name="name">削除されるセクションの名前。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを、この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクトから削除します。</summary>
      <param name="index">削除するセクションのインデックス。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>構成ファイル内の関連するセクションのグループを表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの宣言を強制的に行います。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの宣言を強制的に行います。</summary>
      <param name="force">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトをファイルに書き込む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトがルート セクション グループです。

または -
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトに位置があります。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト宣言が必要かどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 宣言が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトが宣言されているかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> が宣言されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの名前プロパティを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの名前プロパティ。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> に関連付けられているセクション グループ名を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトのセクション グループ名。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトの子であるすべての <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを格納している <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトの子であるすべての <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを格納している <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクト内のすべての <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを格納している <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionCollection" /> オブジェクト内のすべての <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを格納している <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>指定されたターゲット バージョンの .NET Framework 用に構成オブジェクト階層をシリアル化するとき、現在の <see cref="T:System.Configuration.ConfigurationSectionGroup" /> インスタンスがシリアル化されるかどうかを示します。</summary>
      <param name="targetFramework">.NET Framework のターゲット バージョン。</param>
      <returns>現在のセクション グループをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの型を取得または設定します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの型。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトがルート セクション グループです。

または -
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトに位置があります。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">セクションまたはグループが既に別のレベルで定義されています。</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを、この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトに追加します。</summary>
      <param name="name">追加される <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの名前。</param>
      <param name="sectionGroup">追加される <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>コレクションを空にします。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">オブジェクトのコピー先の配列。</param>
      <param name="index">コピーを開始するインデックスの位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" /> の長さが、<see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> に <paramref name="index" /> を加算した値より小さい値です。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>コレクション内のセクション グループの数を取得します。</summary>
      <returns>コレクション内のセクション グループの数を表す整数。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>コレクション内の指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを取得します。</summary>
      <param name="index">取得する <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトをコレクションから取得します。</summary>
      <param name="name">取得する <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの名前。</param>
      <returns>指定した名前の <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> は null か空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトを反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> オブジェクトを反復処理するために使用できる <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトに格納されている、指定した <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトのキーを取得します。</summary>
      <param name="index">キーが返されるセクション グループのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトのキー。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化中にシステムにより使用されます。</summary>
      <param name="info">適用できる <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">適用できる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>インデックスを指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトをコレクションから取得します。</summary>
      <param name="index">取得する <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。
C# では、このプロパティは <see cref="T:System.Configuration.ConfigurationSectionCollection" /> クラスのインデクサーです。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>名前を指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトをコレクションから取得します。</summary>
      <param name="name">取得する <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトの名前。</param>
      <returns>指定した名前の <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクト。
C# では、このプロパティは <see cref="T:System.Configuration.ConfigurationSectionCollection" /> クラスのインデクサーです。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>この <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトに格納されているすべての <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトに対するキーを取得します。</summary>
      <returns>このコレクション内のすべてのセクション グループの名前を格納している <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>名前を指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを、この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトから削除します。</summary>
      <param name="name">削除されるセクション グループの名前。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>インデックスを指定した <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトを、この <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> オブジェクトから削除します。</summary>
      <param name="index">削除するセクション グループのインデックス。</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary>構成セクションおよび共通の構成設定を読み取るためのランタイム バージョン 1.0 および 1.1 のサポートを提供します。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary>構成ファイルのアプリケーション設定セクションにある読み取り専用の <see cref="T:System.Collections.Specialized.NameValueCollection" /> を取得します。</summary>
      <returns>構成ファイルのアプリケーション設定セクションにある読み取り専用の <see cref="T:System.Collections.Specialized.NameValueCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary>渡される構成セクション名およびパスの <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを返します。</summary>
      <param name="sectionName">"system.net/settings" などの構成名およびパス。</param>
      <returns>渡される構成セクション名およびパスの <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。

<see cref="T:System.Configuration.ConfigurationSettings" /> クラスは、下位互換性のみを提供します。 代わりに、<see cref="T:System.Configuration.ConfigurationManager" /> クラスまたは <see cref="T:System.Web.Configuration.WebConfigurationManager" /> クラスを使用する必要があります。</returns>
      <exception cref="T:System.Configuration.ConfigurationException">要求されたセクションを取得できません。</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>構成オブジェクトで表される構成ファイルを指定するために使用されます。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>すべてのユーザーに適用する <see cref="T:System.Configuration.Configuration" /> を取得します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>現在のユーザーに適用するローミング <see cref="T:System.Configuration.Configuration" /> を取得します。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>現在のユーザーに適用するローカル <see cref="T:System.Configuration.Configuration" /> を取得します。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>
        <see cref="N:System.Configuration" /> 検証コントロールの属性型の基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>検証コントロールの型を指定して、<see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="validator">
        <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> のインスタンスの作成時に使用する検証コントロールの型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="validator" /> は <see cref="T:System.Configuration.ConfigurationValidatorBase" /> から派生していません。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>検証コントロールの属性のインスタンスを取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.ConfigurationValidatorBase" /> です。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>検証コントロールの属性の型を取得します。</summary>
      <returns>現在の検証コントロールの属性インスタンスの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>オブジェクトの値を検証できるように、検証のクラスを派生するための基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>オブジェクトを型に基づいて検証できるかどうかを確認します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーター値が指定できる <see langword="true" /> と一致する場合は <see langword="type" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクト値。</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary>対応する <see cref="T:System.Xml.XmlDocument" /> 型をラップし、またファイル名や行番号をレポートするために必要な情報が含まれます。</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConfigXmlDocument" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>構成要素属性を作成します。</summary>
      <param name="prefix">プレフィックスの定義。</param>
      <param name="localName">ローカルで使用される名前。</param>
      <param name="namespaceUri">名前空間に割り当てられる URL。</param>
      <returns>
        <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" /> 属性。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary>XML の CData セクションを作成します。</summary>
      <param name="data">使用するデータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlCDataSection" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary>XML コメントを作成します。</summary>
      <param name="data">コメント データ。</param>
      <returns>
        <see cref="T:System.Xml.XmlComment" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>構成要素を作成します。</summary>
      <param name="prefix">プレフィックスの定義。</param>
      <param name="localName">ローカルで使用される名前。</param>
      <param name="namespaceUri">URL の名前空間。</param>
      <returns>
        <see cref="T:System.Xml.XmlElement" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>空白を作成します。</summary>
      <param name="data">使用するデータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlSignificantWhitespace" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary>テキスト ノードを作成します。</summary>
      <param name="text">使用するテキスト。</param>
      <returns>
        <see cref="T:System.Xml.XmlText" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary>空白を作成します。</summary>
      <param name="data">使用するデータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlWhitespace" /> 値。</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary>構成ファイル名を取得します。</summary>
      <returns>構成ファイル名。</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary>現在のノードの行番号を取得します。</summary>
      <returns>現在のノードの行番号。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary>構成ファイルを読み込みます。</summary>
      <param name="filename">ファイルの名前です。</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary>1 つの構成要素を読み込みます。</summary>
      <param name="filename">ファイルの名前です。</param>
      <param name="sourceReader">リーダーのソース。</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary>構成ファイル名を取得します。</summary>
      <returns>ファイル名。</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary>構成行番号を取得します。</summary>
      <returns>行番号。</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>構成ファイルの接続文字列セクション内の名前付きで単一の接続文字列を表します。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">接続文字列の名前。</param>
      <param name="connectionString">接続文字列。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトの新しいインスタンスを初期化します。</summary>
      <param name="name">接続文字列の名前。</param>
      <param name="connectionString">接続文字列。</param>
      <param name="providerName">接続文字列と共に使用するプロバイダーの名前。</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>接続文字列を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> プロパティに代入された文字列値。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 名を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> プロパティに代入された文字列値。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>プロバイダー名プロパティを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /> プロパティ。</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>オブジェクトの文字列形式を返します。</summary>
      <returns>オブジェクトの文字列形式。</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトをコレクションに追加します。</summary>
      <param name="settings">コレクションに追加する <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>すべての <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトをコレクションから削除します。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>渡された <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトのコレクション インデックスを返します。</summary>
      <param name="settings">コレクション内の <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクト。</param>
      <returns>指定した <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトのコレクション インデックス。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>コレクション内の指定したインデックスでの接続文字列を取得または設定します。</summary>
      <param name="index">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトの、コレクション内でのインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>コレクション内の指定した名前の <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトを取得または設定します。</summary>
      <param name="name">コレクション内の <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトの名前。</param>
      <returns>指定した名前を持つ <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクト。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>指定した <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトをコレクションから削除します。</summary>
      <param name="settings">コレクション内の <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>指定した <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name">コレクション内の <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトの名前。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>コレクション内の指定したインデックス位置にある <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトを削除します。</summary>
      <param name="index">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> オブジェクトの、コレクション内でのインデックス。</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>接続文字列に関する構成ファイル セクションにプログラムからアクセスできるようにします。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringsSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトの <see cref="T:System.Configuration.ConnectionStringSettings" /> コレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトの <see cref="T:System.Configuration.ConnectionStringSettings" /> コレクション。</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトに関連付けられているコンテキスト情報をカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>指定されたセクション名に基づいて、構成セクション情報が格納されているオブジェクトを提供します。</summary>
      <param name="sectionName">構成セクションの名前。</param>
      <returns>構成内の指定されたセクションが格納されているオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>構成プロパティが評価される環境のコンテキストを取得します。</summary>
      <returns>構成プロパティが評価される環境を示すオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>構成プロパティがコンピューターの構成レベルで評価されるかどうかを示す値を取得します。</summary>
      <returns>構成プロパティがコンピューターの構成レベルで評価される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>構成セクションの XML を読み書きの両方のアクセス用に公開する、基本構成セクション ハンドラーを表します。</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.DefaultSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary>アプリケーション設定プロパティの既定値を指定します。</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.DefaultSettingValueAttribute" /> クラスのインスタンスを初期化します。</summary>
      <param name="value">プロパティの既定値を表す <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary>アプリケーション設定プロパティの既定値を取得します。</summary>
      <returns>プロパティの既定値を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>オブジェクトの検証を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>
        <see cref="T:System.Configuration.DefaultValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>オブジェクトを型に基づいて検証できるかどうかを確認します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>検証されるすべての型に対して <see langword="true" />。</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクト値。</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary>構成セクションからキー/値ペア構成情報を提供します。</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.DictionarySectionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>新しい構成ハンドラーを作成し、指定されたパラメーターに基づいてセクション ハンドラー コレクションに追加します。</summary>
      <param name="parent">親オブジェクト。</param>
      <param name="context">構成のコンテキスト オブジェクト。</param>
      <param name="section">セクション XML ノード。</param>
      <returns>構成オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary>キー/値ペアでキーとして使用する XML 属性名を取得します。</summary>
      <returns>キー属性の名前が格納されている文字列値。</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary>キー/値ペアで値として使用する XML 属性名を取得します。</summary>
      <returns>値属性の名前が格納されている文字列値。</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Windows データ保護 API (DPAPI: Data Protection API) を使用して構成データの暗号化と復号化を行う <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトを提供します。</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>既定の設定を使用して <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>渡される <see cref="T:System.Xml.XmlNode" /> オブジェクトを復号化します。</summary>
      <param name="encryptedNode">復号化する <see cref="T:System.Xml.XmlNode" /> オブジェクト。</param>
      <returns>復号化された <see cref="T:System.Xml.XmlNode" /> オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" /> に、"EncryptedData" に設定された <see cref="P:System.Xml.XmlNode.Name" />、および <see cref="T:System.Xml.XmlNodeType" /> に設定された <see cref="F:System.Xml.XmlNodeType.Element" /> がありません。

または -
<paramref name="encryptedNode" /> に、"CipherValue" という名前の子ノードを持つ、"CipherData" という名前の子ノードがありません。

または -
"CipherData" という名前の子ノードが空のノードです。</exception>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>渡される <see cref="T:System.Xml.XmlNode" /> オブジェクトを暗号化します。</summary>
      <param name="node">暗号化する <see cref="T:System.Xml.XmlNode" /> オブジェクト。</param>
      <returns>暗号化された <see cref="T:System.Xml.XmlNode" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>既定の設定でプロバイダーを初期化します。</summary>
      <param name="name">オブジェクトに対して使用するプロバイダー名。</param>
      <param name="configurationValues">オブジェクトを初期化するときに使用する値の <see cref="T:System.Collections.Specialized.NameValueCollection" /> コレクション。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> に、認識されない構成設定が含まれています。</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>
        <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> オブジェクトがコンピューター固有の保護またはユーザー アカウント固有の保護のいずれを使用しているかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> がコンピューター固有の保護を使用している場合は <see langword="true" />。ユーザー アカウント固有の保護を使用している場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>構成内の個々の要素に関するメタ情報が含まれています。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>関連付けられている要素およびサブ要素のエラーを取得します。</summary>
      <returns>関連付けられている要素およびサブ要素のエラーが含まれているコレクション。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが <see cref="T:System.Configuration.ConfigurationElementCollection" /> コレクションであるかどうかを示す値を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが <see cref="T:System.Configuration.ConfigurationElementCollection" /> コレクションである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが変更できないかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが変更できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが構成ファイル内に存在するかどうかを示す値を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが構成ファイル内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>構成ファイル内の、関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが定義されている位置の行番号を取得します。</summary>
      <returns>構成ファイル内の、関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトが定義されている位置の行番号。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>関連付けられている <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクトのプロパティの <see cref="T:System.Configuration.ConfigurationElement" /> コレクションを取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクトのプロパティの <see cref="T:System.Configuration.ConfigurationElement" /> コレクション。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの生成元であるソース ファイルを取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの生成元であるソース ファイル。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの型を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの型。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの検証に使用されるオブジェクトを取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトの検証に使用されるオブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>実行可能アプリケーション (.exe) に対する構成ファイルの対応付けを定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>
        <see cref="T:System.Configuration.ExeConfigurationFileMap" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>指定されたコンピューター構成ファイル名を使用して、<see cref="T:System.Configuration.ExeConfigurationFileMap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="machineConfigFileName">完全な物理パスを含むコンピューター構成ファイルの名前 (<c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c> など)。</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>既存の <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクトのコピーを作成します。</summary>
      <returns>
        <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>構成ファイルの名前を取得または設定します。</summary>
      <returns>構成ファイル名。</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>ローカル ユーザーの構成ファイルの名前を取得または設定します。</summary>
      <returns>構成ファイル名。</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>ローミング ユーザーの構成ファイルの名前を取得または設定します。</summary>
      <returns>構成ファイル名。</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>現在のアプリケーションのパスのコンテキストを管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>アプリケーションの現在のパスを取得します。</summary>
      <returns>現在のパスを含んでいる文字列値。</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>現在のアプリケーションのパス レベルを表すオブジェクトを取得します。</summary>
      <returns>現在のアプリケーションのパス レベルを表す <see cref="T:System.Configuration.ConfigurationUserLevel" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>文字列と列挙型との間の変換を行います。</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.GenericEnumConverter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="typeEnum">変換する列挙型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeEnum" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.Enum" /> 型に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <paramref name="data" /> パラメーターを表す <see cref="T:System.Enum" /> 型。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> は null か空の文字列 ("") です。

または -
<paramref name="data" /> は数値の文字で始まります。

または -
<paramref name="data" /> には空白が含まれます。</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Enum" /> 型を <see cref="T:System.String" /> 値に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換後の値。</param>
      <param name="type">変換後の型。</param>
      <returns>
        <paramref name="value" /> パラメーターを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary>クライアント ベースのアプリケーション設定プロバイダーの拡張機能を定義します。</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>同じアプリケーションの前のバージョンの、指定した設定プロパティの値を返します。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="property">値が返される <see cref="T:System.Configuration.SettingsProperty" />。</param>
      <returns>前のバージョンのアプリケーションで最後に設定されたときの、指定したプロパティ設定の値を格納している <see cref="T:System.Configuration.SettingsPropertyValue" />。設定が見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>指定したアプリケーションに関連付けられたアプリケーション設定を、その既定値にリセットします。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>アプリケーションがアップグレードされたことをプロバイダーに示します。 これにより、プロバイダーは格納している値を必要に応じてアップグレードできます。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="properties">値の取得対象となる設定プロパティ グループを格納している <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary>特定の構成セクションへのアクセスを処理します。</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>構成セクション ハンドラーを作成します。</summary>
      <param name="parent">親オブジェクト。</param>
      <param name="configContext">構成のコンテキスト オブジェクト。</param>
      <param name="section">セクション XML ノード。</param>
      <returns>作成されたセクション ハンドラー オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary>標準の構成メソッドを提供します。</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary>指定した構成を取得します。</summary>
      <param name="configKey">構成キー。</param>
      <returns>構成を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary>初期化に使用されます。</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary>
        <see cref="T:System.Uri" /> クラスで処理する国際化ドメイン名 (IDN: International Domain Name) の構成設定を提供します。</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> 構成設定の値を取得または設定します。</summary>
      <returns>IDN 処理の現在の構成設定を含む <see cref="T:System.UriIdnScope" />。</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>
        <see cref="N:System.Configuration" /> 型によって処理されない構成セクションのラッパー型定義を提供します。</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.IgnoreSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary>
        <see cref="N:System.Configuration" /> 型によって処理されない構成セクションのレガシ セクション ハンドラー定義を提供します。</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.IgnoreSectionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>新しい構成ハンドラーを作成し、指定した構成オブジェクトをセクション ハンドラー コレクションに追加します。</summary>
      <param name="parent">対応する親の構成セクションにおける構成設定。</param>
      <param name="configContext">構成セクション ハンドラーが構成値を計算する対象となる仮想パス。 通常、このパラメーターは予約されており、<see langword="null" /> です。</param>
      <param name="section">処理する構成情報を格納している <see cref="T:System.Xml.XmlNode" />。 構成セクションの XML の内容に直接アクセスできるようにします。</param>
      <returns>作成された構成ハンドラー オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>文字列と標準の無限値または整数値との間の変換を行います。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.InfiniteIntConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.Int32" /> に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <see cref="F:System.Int32.MaxValue" /> パラメーターが <paramref name="data" /> "infinite" の場合は <see cref="T:System.String" />、それ以外の場合は <see cref="T:System.Int32" /> パラメーターの整数値を表す <paramref name="data" />。</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Int32" /> を <see cref="T:System.String" /> に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換後の値。</param>
      <param name="type">変換後の型。</param>
      <returns>
        <see cref="T:System.String" /> が <paramref name="value" /> の場合は <see cref="F:System.Int32.MaxValue" /> "infinite"、それ以外の場合は、<see cref="T:System.String" /> パラメーターを表す <paramref name="value" />。</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>文字列と標準の無限 <see cref="T:System.TimeSpan" /> 値との間の変換を行います。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.InfiniteTimeSpanConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.TimeSpan" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" /> パラメーターが <paramref name="data" /> infinite の場合は <see cref="T:System.String" />、それ以外の場合は <see cref="T:System.TimeSpan" /> パラメーターを分単位で表す <paramref name="data" />。</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> を <see cref="T:System.String" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">オブジェクト変換中に使用される <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する値。</param>
      <param name="type">変換の型。</param>
      <returns>
        <see cref="T:System.String" /> パラメーターが <paramref name="value" /> の場合は <see cref="F:System.TimeSpan.MaxValue" /> "infinite"、それ以外の場合は <see cref="T:System.String" /> パラメーターを分単位で表す <paramref name="value" />。</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>
        <see cref="T:System.Int32" /> 値の検証について説明します。</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">最小値を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
      <param name="maxValue">最大値を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">最小値を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
      <param name="maxValue">最大値を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
      <param name="rangeIsExclusive">検証範囲を排他的として指定する場合は <see langword="true" />。 包含 (Inclusive) とは、検証対象の値が指定された範囲内に存在しなければならないことを意味します。一方、排他 (Exclusive) とは、検証対象の値が最小値より小さいか最大値より大きい値でなければならないことを意味します。</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">整数値の最小長を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
      <param name="maxValue">整数値の最大長を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
      <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="resolution">一致する必要がある値を指定する <see cref="T:System.Int32" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> は <see langword="0" /> より小さい値です。

または -
<paramref name="minValue" /> が <paramref name="maxValue" /> より大きくなっています。</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>オブジェクトの型を検証できるかどうかを判断します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが <see cref="T:System.Int32" /> 値と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">検証される値。</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して整数の検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.IntegerValidatorAttribute" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>整数を、<see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> プロパティ値と <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> プロパティ値によって定義された範囲内に含めるか、その範囲から除外するかを示す値を取得または設定します。</summary>
      <returns>値が除外される必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>プロパティに指定できる最大値を取得または設定します。</summary>
      <returns>指定できる最大値を示す整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> 未満です。</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>プロパティに指定できる最小値を取得または設定します。</summary>
      <returns>指定できる最小値を示す整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> を超えています。</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.IntegerValidator" /> クラスのインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 検証コントロールのインスタンス。</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> インターフェイスのすべてのメンバーを、ホストの別のインスタンスにデリゲートします。</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>
        <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>新しい構成コンテキストを作成します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <param name="locationSubPath">位置サブパスを表す文字列。</param>
      <returns>新しい構成コンテキストを表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>使用されなくなった構成コンテキストを作成します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>使用されなくなった構成コンテキストを表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>暗号化された構成セクションを復号化します。</summary>
      <param name="encryptedXml">構成ファイルの暗号化されたセクション。</param>
      <param name="protectionProvider">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクト。</param>
      <param name="protectedConfigSection">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> オブジェクト。</param>
      <returns>復号化された構成セクションを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトを削除します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>構成オブジェクトのセクションを暗号化します。</summary>
      <param name="clearTextXml">暗号化されていない構成セクション。</param>
      <param name="protectionProvider">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクト。</param>
      <param name="protectedConfigSection">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> オブジェクト。</param>
      <returns>構成オプションの暗号化されたセクションを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>位置サブパスに基づいて構成パスを返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <param name="locationSubPath">位置サブパスを表す文字列。</param>
      <returns>構成パスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>構成の型を表す <see cref="T:System.Type" /> を返します。</summary>
      <param name="typeName">構成の型を表す文字列。</param>
      <param name="throwOnError">エラーが発生したときに例外がスローされる場合は <see langword="true" />。エラーが発生したときに例外がスローされない場合は <see langword="false" />。</param>
      <returns>構成の型を表す <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>構成オブジェクトの型名を表す文字列を返します。</summary>
      <param name="t">
        <see cref="T:System.Type" /> オブジェクト。</param>
      <returns>構成オブジェクトの型名を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>アクセス許可セットがホスト オブジェクト内で使用できる場合、指定されたアクセス許可セットを設定します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
      <param name="permissionSet">
        <see cref="T:System.Security.PermissionSet" /> オブジェクト。</param>
      <param name="isHostReady">ホストの初期化が完了している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>構成元で I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を返します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="configSource">構成元を表す文字列。</param>
      <returns>構成元で I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>構成ファイルで I/O タスクを実行する <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> オブジェクトのバージョンを表す <see cref="T:System.IO.Stream" /> オブジェクトを返します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <returns>構成ファイルで I/O タスクを実行する <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> オブジェクトのバージョンを表す <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>ホストに対して偽装を指示し、.NET Framework が内部的に必要とする <see cref="T:System.IDisposable" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>構成ホストを初期化します。</summary>
      <param name="configRoot">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> オブジェクト。</param>
      <param name="hostInitParams">構成ホストを初期化するために使用する値を含むパラメーター オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>構成ホストを初期化します。</summary>
      <param name="locationSubPath">位置サブパスを表す文字列 (参照渡し)。</param>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <param name="locationConfigPath">構成の位置パス。</param>
      <param name="configRoot">構成ルート要素。</param>
      <param name="hostInitConfigurationParams">ホストの初期化に使用されるパラメーターを表すパラメーター オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>この構成が構成の階層構造内でアプリケーション構成よりも上位にあるかどうかを示す値を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>この構成が構成の階層構造内でアプリケーション構成よりも上位にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>ホスト構成の初期化に構成レコードが必要かどうかを示す値を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>ホスト構成の初期化に構成レコードが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>ホスト構成での定義を制限または許可します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <param name="allowDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> オブジェクト。</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> オブジェクト。</param>
      <returns>ホスト構成での定義の許可または制限が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>構成ファイルを読み取るために <see cref="T:System.IO.Stream" /> オブジェクトが使用するファイル パスが有効なパスであるかどうかを示す値を返します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <returns>構成ファイルを読み取るために <see cref="T:System.IO.Stream" /> オブジェクトが使用するパスが有効なパスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>構成セクションで完全に信頼できるコード アクセス セキュリティ レベルを要求し、<see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 属性で暗黙のリンク確認要求を無効にできないようにするかどうかを表す値を返します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
      <returns>構成セクションで完全に信頼できるコード アクセス セキュリティ レベルを要求し、<see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 属性で暗黙のリンク確認要求を無効にできないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>構成オブジェクトの初期化を遅延と見なすかどうかを示す値を返します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
      <returns>構成オブジェクトの初期化を遅延と見なす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>構成オブジェクトが位置タグをサポートしているかどうかを示す値を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>構成オブジェクトが位置タグをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>構成がリモートかどうかを示す値を取得します。</summary>
      <returns>構成がリモートである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>構成パスが、内容をルートとして扱う必要がある構成ノードへのパスであるかどうかを示す値を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>構成パスが、内容をルートとして扱う必要がある構成ノードへのパスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>構成パスが信頼されているかどうかを示す値を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>構成パスを信頼できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>
        <see cref="T:System.IO.Stream" /> オブジェクトを開いて、構成ファイルを読み取ります。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <returns>
        <paramref name="streamName" /> で指定されたオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>
        <see cref="T:System.IO.Stream" /> オブジェクトを開いて、構成ファイルを読み取ります。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="assertPermissions">アクセス許可をアサートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="streamName" /> で指定されたオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>構成ファイルに書き込むために、または構成ファイルの作成に使用する一時ファイルに書き込むために、<see cref="T:System.IO.Stream" /> オブジェクトを開きます。 ファイル属性をコピーするために、<see cref="T:System.IO.Stream" /> オブジェクトをテンプレートとして指定できるようにします。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="templateStreamName">ファイル属性をテンプレートとしてコピーする際のコピー元となる <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="writeContext">
        <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト (参照渡し)。</param>
      <returns>
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>構成ファイルに書き込むために <see cref="T:System.IO.Stream" /> オブジェクトを開きます。 ファイル属性をコピーするために、<see cref="T:System.IO.Stream" /> オブジェクトをテンプレートとして指定できるようにします。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="templateStreamName">ファイル属性をテンプレートとしてコピーする際のコピー元となる <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="writeContext">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト (参照渡し)。</param>
      <param name="assertPermissions">アクセス許可をアサートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="streamName" /> パラメーターで指定されたオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>指定した <see cref="T:System.IO.Stream" /> オブジェクトによって構成ファイル全体を読み取ることができるかどうかを示す値を返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <returns>
        <paramref name="streamName" /> で指定した <see cref="T:System.IO.Stream" /> オブジェクトによって構成ファイル全体を読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクトに対して、関連付けられている構成ファイルの指定セクションを読み取るように指示します。</summary>
      <param name="sectionGroupName">構成ファイルのセクション グループの名前を表す文字列。</param>
      <param name="sectionName">構成ファイルのセクションの名前を表す文字列。</param>
      <returns>
        <paramref name="sectionGroupName" /> パラメーターおよび <paramref name="sectionName" /> パラメーターで指定した構成ファイルのセクションを、<see cref="T:System.IO.Stream" /> オブジェクトによって読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>新しい構成レコードで完全な初期化が必要なことを示します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>構成ファイルの変更について、関連付けられている <see cref="T:System.IO.Stream" /> オブジェクトを監視するように、ホストに対して指示します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="callback">返された、構成ファイルでの変更を表すデータを受け取る <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> オブジェクト。</param>
      <returns>変更された構成設定を含む <see cref="T:System.Object" /> インスタンス。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>構成ファイルの変更について、関連付けられている <see cref="T:System.IO.Stream" /> オブジェクトを監視するのを停止するように、ホスト オブジェクトに対して指示します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="callback">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>ホスト構成が変更通知をサポートしているかどうかを示す値を取得します。</summary>
      <returns>ホストが変更通知をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>ホスト構成が位置タグをサポートしているかどうかを示す値を取得します。</summary>
      <returns>ホストが位置タグをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>ホスト構成がパスをサポートしているかどうかを示す値を取得します。</summary>
      <returns>ホスト構成がパスをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>ホスト構成が更新をサポートしているかどうかを示す値を取得します。</summary>
      <returns>ホスト構成が更新をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>構成の定義が構成レコードで許可されることを検証します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <param name="allowDefinition">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> オブジェクト。</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> オブジェクト。</param>
      <param name="errorInfo">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>構成ファイルへのすべての書き込みが完了したことを示します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="success">構成ファイルへの書き込みが正常に完了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeContext">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>構成ファイルへのすべての書き込みが完了したことを示し、アクセス許可をアサートする必要があるかどうかを指定します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="success">書き込みが正常に完了したことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeContext">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト。</param>
      <param name="assertPermissions">アクセス許可をアサートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>エラー構成レコードの作成をサポートするために .NET Framework によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>構成の詳細に関するファイル名を示す文字列を取得します。</summary>
      <returns>ファイル名を指定する文字列。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>構成の詳細に関する行番号を指定する整数を取得します。</summary>
      <returns>行番号を指定する整数。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>構成プロパティの初期化をサポートするために .NET Framework によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>構成ホストを取得します。</summary>
      <returns>アプリケーション構成プロパティを初期化するために .NET Framework によって使用される <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>構成オブジェクトを初期化します。</summary>
      <param name="typeConfigHost">構成ホストの種類。</param>
      <param name="hostInitParams">構成ホストのパラメーターの配列。</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>構成階層のルートを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>構成管理をサポートするために .NET Framework によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>ネットワーク構成が読み込まれるようにします。</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>構成プロパティを初期化するために .NET Framework によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>アプリケーションのパスに関連する構成ファイル名を取得します。</summary>
      <returns>構成ファイル名を表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>入力アセンブリに基づいて、アプリケーションのローカル構成ディレクトリを取得します。</summary>
      <returns>ローカル構成ディレクトリを表す文字列。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>入力アセンブリに基づいて、アプリケーションのローカル構成パスを取得します。</summary>
      <returns>アプリケーションのローカル構成パスを表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>入力アセンブリに基づいて、アプリケーションの製品名を取得します。</summary>
      <returns>アプリケーションの製品名を表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>入力アセンブリに基づいて、アプリケーションの製品バージョンを取得します。</summary>
      <returns>アプリケーションの製品バージョンを表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>入力アセンブリに基づいて、アプリケーションのローミング構成ディレクトリを取得します。</summary>
      <returns>アプリケーションのローミング構成ディレクトリを表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>アプリケーションの入力アセンブリに基づいて、ローミング ユーザーの構成パスを取得します。</summary>
      <returns>ローミング ユーザーの構成パスを表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Machine.config ファイルの構成パスを取得します。</summary>
      <returns>Machine.config ファイルのパスを表す文字列値。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>構成システムのステータスを表す値を取得します。</summary>
      <returns>構成システムが初期化処理中である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>ユーザーの構成設定がサポートされるかどうかを指定する値を取得します。</summary>
      <returns>構成システムがユーザーの構成設定をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>ユーザーの構成設定を格納するために使用するファイルの名前を取得します。</summary>
      <returns>ユーザーの構成設定を保管するために使用するファイルの名前を指定する文字列。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>内部の .NET Framework インフラストラクチャで構成をカスタマイズできるようにするインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>アプリケーション構成ファイルへのパスを返します。</summary>
      <returns>アプリケーション構成ファイルへのパスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>既知のローカル ユーザー構成ファイルへのパスを表す文字列を返します。</summary>
      <returns>既知のローカル ユーザー構成ファイルへのパスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>既知のローミング ユーザー構成ファイルへのパスを表す文字列を返します。</summary>
      <returns>既知のローミング ユーザー構成ファイルへのパスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>構成ファイルのパスが現在認識されているアプリケーション構成ファイルのパスと同じであるかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルへのパスを表す文字列。</param>
      <returns>構成パスを表す文字列がアプリケーション構成ファイルへのパスと同じである場合は <see langword="true" />。構成パスを表す文字列がアプリケーション構成ファイルへのパスと異なる場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>構成ファイルのパスが現在認識されているローカル ユーザーの構成ファイルのパスと同じであるかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルへのパスを表す文字列。</param>
      <returns>構成パスを表す文字列が既知のローカル ユーザー構成ファイルへのパスと同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>構成ファイルのパスが現在認識されているローミング ユーザーの構成ファイルのパスと同じであるかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルへのパスを表す文字列。</param>
      <returns>構成パスを表す文字列が既知のローミング ユーザー構成ファイルへのパスと同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>
        <see cref="T:System.Configuration.Configuration" /> オブジェクトを作成するために、内部デザイン時 API で使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>
        <see cref="T:System.Configuration.Configuration" /> オブジェクトを構築して、初期化します。</summary>
      <param name="typeConfigHost">作成する <see cref="T:System.Type" /> オブジェクトの <see cref="T:System.Configuration.Configuration" />。</param>
      <param name="hostInitConfigurationParams">作成した <see cref="T:System.Object" /> オブジェクトに適用されるパラメーターを格納する <see cref="T:System.Configuration.Configuration" /> のパラメーター配列。</param>
      <returns>
        <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>構成ファイルへのパスの位置サブパスを正規化します。</summary>
      <param name="subPath">構成ファイルへのパスを表す文字列。</param>
      <param name="errorInfo">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> のインスタンスまたは <see langword="null" />。</param>
      <returns>正規化されたサブパスの文字列。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>アプリケーション構成のプロパティを初期化するために、内部 .NET 構造体によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>アプリケーション構成の <see cref="T:System.Configuration.ConfigurationElement" /> のコンテキスト オブジェクトを作成して返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <param name="locationSubPath">構成要素のサブパスの位置を表す文字列。</param>
      <returns>アプリケーション構成の <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトのコンテキスト オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>アプリケーション構成の使用されなくなったコンテキスト オブジェクトを作成して返します。</summary>
      <param name="configPath">アプリケーション構成ファイルへのパスを表す文字列。</param>
      <returns>アプリケーション構成の使用されなくなったコンテキスト オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>暗号化された構成セクションを復号化し、文字列として返します。</summary>
      <param name="encryptedXml">構成セクションを表す暗号化された XML 文字列。</param>
      <param name="protectionProvider">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクト。</param>
      <param name="protectedConfigSection">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> オブジェクト。</param>
      <returns>文字列として復号化された構成セクション。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>アプリケーション構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトを削除します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>構成セクションを暗号化し、文字列として返します。</summary>
      <param name="clearTextXml">暗号化する構成セクションを表す XML 文字列。</param>
      <param name="protectionProvider">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクト。</param>
      <param name="protectedConfigSection">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> オブジェクト。</param>
      <returns>文字列として表された、暗号化された構成セクション。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>位置サブパスに基づいてアプリケーション構成ファイルへの絶対パスを返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <param name="locationSubPath">構成ファイルのサブパスの位置。</param>
      <returns>アプリケーション構成ファイルへの絶対パスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>構成オブジェクトの型を表す <see cref="T:System.Type" /> オブジェクトを返します。</summary>
      <param name="typeName">型名。</param>
      <param name="throwOnError">エラーの発生時に例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>構成オブジェクトの型を表す <see cref="T:System.Type" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>構成の型を表す <see cref="T:System.Type" /> オブジェクトの型名を表す文字列を返します。</summary>
      <param name="t">
        <see cref="T:System.Type" /> オブジェクト。</param>
      <returns>構成の型を表す <see cref="T:System.Type" /> オブジェクトの型名を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>構成を <see cref="T:System.Security.PermissionSet" /> オブジェクトに関連付けます。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
      <param name="permissionSet">構成に関連付ける <see cref="T:System.Security.PermissionSet" /> オブジェクト。</param>
      <param name="isHostReady">関連付けられているアクセス許可の作成を構成ホストが完了していることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトに関連付けられている構成ファイル名を表す文字列を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <returns>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> に関連付けられている構成ファイル名を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>リモート構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトに関連付けられている構成ファイル名を表す文字列を返します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトに関連付けられている構成ファイル名を表す文字列。</param>
      <param name="configSource">リモート構成ファイルへのパスを表す文字列。</param>
      <returns>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトに関連付けられている構成ファイル名を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>構成ファイルに関連付けられている <see cref="T:System.IO.Stream" /> オブジェクトのバージョンを返します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <returns>構成ファイルに関連付けられている <see cref="T:System.IO.Stream" /> オブジェクトのバージョン。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>ホストに対して偽装を指示し、内部 .NET 構造体が必要とする <see cref="T:System.IDisposable" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 値。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>構成ホストを初期化します。</summary>
      <param name="configRoot">構成ルート オブジェクト。</param>
      <param name="hostInitParams">構成ホストを初期化するために使用する値を含むパラメーター オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>構成オブジェクトを初期化します。</summary>
      <param name="locationSubPath">構成ファイルのサブパスの位置。</param>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <param name="locationConfigPath">構成パスの位置を表す文字列。</param>
      <param name="configRoot">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> オブジェクト。</param>
      <param name="hostInitConfigurationParams">構成ホストを初期化するために使用する値を含むパラメーター オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>構成ファイルが構成の階層構造内でアプリケーション構成よりも上位レベルにあるかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <returns>構成ファイルが構成の階層構造内でアプリケーション構成よりも上位レベルにある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>子構成パスに子レコードが必要かどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <returns>子構成パスに子レコードが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>アプリケーション構成オブジェクトに対して別の <see cref="T:System.Type" /> 定義を使用できるかどうかを判断します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <param name="allowDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> オブジェクト。</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> オブジェクト。</param>
      <returns>アプリケーション構成オブジェクトに対して別の <see cref="T:System.Type" /> 定義を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>構成ファイルを読み取るために <see cref="T:System.IO.Stream" /> オブジェクトが使用するファイル パスが有効なパスであるかどうかを示す値を返します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <returns>構成ファイルを読み取るために <see cref="T:System.IO.Stream" /> オブジェクトが使用するパスが有効なパスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>構成セクションで完全に信頼できるコード アクセス セキュリティ レベルを要求し、<see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 属性で暗黙のリンク確認要求を無効にできないようにするかどうかを表す値を返します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
      <returns>構成セクションで完全に信頼できるコード アクセス セキュリティ レベルを要求し、<see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 属性で暗黙のリンク確認要求を無効にできないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>構成オブジェクトの初期化を遅延と見なすかどうかを示す値を返します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
      <returns>構成オブジェクトの初期化を遅延と見なす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>構成オブジェクトが位置タグをサポートしているかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <returns>構成オブジェクトが位置タグをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>構成がリモートかどうかを示す値を返します。</summary>
      <returns>構成がリモートである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>構成パスが、内容をルートとして扱う必要がある構成ノードへのパスであるかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <returns>構成パスが、内容をルートとして扱う必要がある構成ノードへのパスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>構成パスが信頼されているかどうかを示す値を返します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <returns>構成パスを信頼できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>構成ファイルを読み取るために <see cref="T:System.IO.Stream" /> を開きます。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <returns>
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>
        <see cref="T:System.IO.Stream" /> オブジェクトを開いて、構成ファイルを読み取ります。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="assertPermissions">アクセス許可をアサートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="streamName" /> によって指定されたオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>構成ファイルに書き込むために、または構成ファイルの作成に使用する一時ファイルに書き込むために、<see cref="T:System.IO.Stream" /> オブジェクトを開きます。 ファイル属性をコピーするために、<see cref="T:System.IO.Stream" /> オブジェクトをテンプレートとして指定できるようにします。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="templateStreamName">ファイル属性をテンプレートとしてコピーする際のコピー元となる <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
      <param name="writeContext">
        <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト。</param>
      <returns>
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>構成ファイルに書き込むために <see cref="T:System.IO.Stream" /> オブジェクトを開きます。 ファイル属性をコピーするために、<see cref="T:System.IO.Stream" /> オブジェクトをテンプレートとして指定できるようにします。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="templateStreamName">ファイル属性をテンプレートとしてコピーする際のコピー元となる <see cref="T:System.IO.Stream" /> の名前。</param>
      <param name="writeContext">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト。</param>
      <param name="assertPermissions">アクセス許可をアサートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="streamName" /> によって指定されたオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>指定した <see cref="T:System.IO.Stream" /> オブジェクトによって構成ファイル全体を読み取ることができるかどうかを示す値が返されます。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <returns>
        <paramref name="streamName" /> で指定した <see cref="T:System.IO.Stream" /> オブジェクトによって構成ファイル全体を読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクトに対して、関連付けられている構成ファイルの指定セクションを読み取るように指示します。</summary>
      <param name="sectionGroupName">構成ファイルのセクション グループの識別名を表す文字列。</param>
      <param name="sectionName">構成ファイル セクションの識別名を表す文字列。</param>
      <returns>
        <paramref name="sectionGroupName" /> および <paramref name="sectionName" /> で指定した構成ファイルのセクションを、<see cref="T:System.IO.Stream" /> オブジェクトによって読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>新しい構成レコードで完全な初期化が必要なことを示します。</summary>
      <param name="configRecord">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>構成ファイルの変更について、関連付けられている <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクトを監視するように、<see cref="T:System.IO.Stream" /> オブジェクトに対して指示します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="callback">返された、構成ファイルでの変更を表すデータを受け取る <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> オブジェクト。</param>
      <returns>変更された構成設定を含む <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>構成ファイルの変更について、関連付けられている <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクトの監視を停止するように、<see cref="T:System.IO.Stream" /> オブジェクトに対して指示します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="callback">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>ホスト構成が変更通知をサポートしているかどうかを示す値を返します。</summary>
      <returns>構成が変更通知をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>ホスト構成が位置タグをサポートしているかどうかを示す値を返します。</summary>
      <returns>構成が位置タグをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>ホスト構成がパス タグをサポートしているかどうかを示す値を返します。</summary>
      <returns>構成がパス タグをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>ホスト構成が構成の更新をサポートしているかどうかを示す値を返します。</summary>
      <returns>構成が構成の更新をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>構成の定義が構成レコードで許可されることを検証します。</summary>
      <param name="configPath">アプリケーション構成ファイルのパスを表す文字列。</param>
      <param name="allowDefinition">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> オブジェクト。</param>
      <param name="allowExeDefinition">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> オブジェクト</param>
      <param name="errorInfo">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>構成ファイルへのすべての書き込みが完了したことを示します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="success">構成ファイルへの書き込みが正常に完了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeContext">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>構成ファイルへのすべての書き込みが完了したことを示し、アクセス許可をアサートする必要があるかどうかを指定します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</param>
      <param name="success">書き込みが正常に完了したことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeContext">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの書き込みコンテキスト。</param>
      <param name="assertPermissions">アクセス許可をアサートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>新しい構成レコードの作成をサポートするために、内部 .NET 構造体によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>構成ファイルのパスを表す文字列を取得します。</summary>
      <returns>構成ファイルのパスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>最後に認識された正しい (LKG) 構成の構成セクションを表すオブジェクトを返します。</summary>
      <param name="configKey">構成セクションへのキーを表す文字列。</param>
      <returns>
        <paramref name="configKey" /> によって指定された、最後に認識された正しい構成のセクションを表す <see cref="T:System.Object" /> インスタンス。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>構成ファイルのセクションを表す <see cref="T:System.Object" /> インスタンスを返します。</summary>
      <param name="configKey">構成セクションへのキーを表す文字列。</param>
      <returns>構成ファイルのセクションを表す <see cref="T:System.Object" /> インスタンス。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>構成オブジェクトの初期化中にエラーが発生したかどうかを示す値を返します。</summary>
      <returns>構成オブジェクトの初期化中にエラーが発生した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>構成オブジェクトの指定したセクションを再初期化します。</summary>
      <param name="configKey">更新する構成セクションへのキーを表す文字列。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>構成レコードを削除します。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を返します。</summary>
      <returns>構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前を表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>初期化中にエラーが発生した場合に例外をスローするアクセス許可を、構成オブジェクトに与えます。</summary>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>構成ルート オブジェクトをサポートするために、内部 .NET 構造体によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>
        <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> オブジェクトの <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>
        <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> オブジェクトの <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>構成パスによって指定された構成を表す <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクトを返します。</summary>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>
        <paramref name="configPath" /> によって指定された構成を表す <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>構成ファイルのセクション内のデータを表す <see cref="T:System.Object" /> を返します。</summary>
      <param name="section">構成ファイルのセクションを表す文字列。</param>
      <param name="configPath">構成ファイルへのパスを表す文字列。</param>
      <returns>構成ファイルのセクション内のデータを表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>構成データを持つ、最も近い構成の先祖のファイル パスを表す値を返します。</summary>
      <param name="configPath">構成ファイルのパス。</param>
      <returns>構成データを持つ、最も近い構成の先祖のファイル パスを表す文字列。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>指定した構成パスの一意の構成レコードを表す <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクトを返します。</summary>
      <param name="configPath">構成ファイルのパス。</param>
      <returns>指定した構成パスの一意の構成レコードを表す <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>構成オブジェクトを初期化します。</summary>
      <param name="host">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> オブジェクト。</param>
      <param name="isDesignTime">デザイン時の場合は <see langword="true" />。実行時の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>構成がデザイン時の構成であるかどうかを示す値を返します。</summary>
      <returns>構成がデザイン時の構成である場合は <see langword="true" />。構成がデザイン時の構成ではない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>指定した構成パスの構成レコードとそのすべての子を検索して削除します。</summary>
      <param name="configPath">構成ファイルのパス。</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSettings" /> クラスを設定するために構成システムで使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>構成システムの初期化が完了したことを示します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>階層的な構成設定と ASP.NET に固有な拡張機能を構成システムに提供します。</summary>
      <param name="internalConfigSystem">
        <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> クラスが使用する <see cref="T:System.Configuration.ConfigurationSettings" /> オブジェクト。</param>
      <param name="initComplete">構成システムの初期化処理が完了している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>アプリケーション構成プロパティを初期化するために .NET Framework によって使用されるインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>指定したキーに基づいて構成オブジェクトを返します。</summary>
      <param name="configKey">構成キーの値。</param>
      <returns>構成オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>指定されたセクション名に基づいて、構成システムを更新します。</summary>
      <param name="sectionName">構成セクションの名前。</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>ユーザーの構成がサポートされているかどうかを示す値を取得します。</summary>
      <returns>ユーザーの構成がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>.NET Framework インフラストラクチャが構成イベントのイベント引数を指定できるようにするクラスを定義します。</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="configPath">構成パス。</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>
        <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> オブジェクトに関する構成パスを取得または設定します。</summary>
      <returns>構成パスを指定する文字列値。</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>構成イベントをサポートするために .NET Framework インフラストラクチャによって使用されるクラスを定義します。</summary>
      <param name="sender">イベントのソース オブジェクト。</param>
      <param name="e">構成イベントの引数。</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>監視対象のストリームが変更されたときにホストが呼び出すメソッドを表します。</summary>
      <param name="streamName">構成ファイルで I/O タスクを実行する <see cref="T:System.IO.Stream" /> オブジェクトの名前。</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary>アプリケーション設定の格納および取得を行うコントロールまたはライブラリの標準機能を定義します。</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary>コントロールのアプリケーション設定を対応するプロパティに読み込み、コントロールの状態を更新します。</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary>コントロールのアプリケーション設定プロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary>コントロールのアプリケーション設定プロパティを保持します。</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary>コントロールのアプリケーション設定プロパティを自動的に保持するかどうかを示す値を取得または設定します。</summary>
      <returns>コントロールの状態を自動的に保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary>コントロールの現在のインスタンスのアプリケーション設定キーの値を取得または設定します。</summary>
      <returns>コントロールの現在のインスタンスの設定キーを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary>
        <see cref="T:System.Uri" /> クラスで処理する IRI (International Resource Identifier) の構成設定を提供します。</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.IriParsingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary>
        <see cref="T:System.Configuration.IriParsingElement" /> 構成設定の値を取得または設定します。</summary>
      <returns>IRI (International Resource Identifier) 処理が有効であるかどうかを示すブール値。</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary>代替アプリケーション設定プロバイダーを定義するためのインターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary>指定した設定プロパティと互換性のある設定プロバイダーを返します。</summary>
      <param name="property">シリアル化が必要な <see cref="T:System.Configuration.SettingsProperty" />。</param>
      <returns>見つかった場合は、指定した設定プロパティを永続化できる <see cref="T:System.Configuration.SettingsProvider" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトをコレクションに追加します。</summary>
      <param name="keyValue">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />。</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトをコレクションに追加します。</summary>
      <param name="key">キーを指定する文字列。</param>
      <param name="value">値を指定する文字列。</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> コレクションに格納されているすべての項目のキーを取得します。</summary>
      <returns>文字列配列。</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> コレクションを空にします。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>派生クラスでオーバーライドされた場合、<see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> メソッドは、新しい <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトを作成します。</summary>
      <returns>新しく作成した <see cref="T:System.Configuration.KeyValueConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>派生クラスでオーバーライドされると、指定した構成要素の要素キーを取得します。</summary>
      <param name="element">キーを返す先の <see cref="T:System.Configuration.KeyValueConfigurationElement" />。</param>
      <returns>指定された <see cref="T:System.Configuration.KeyValueConfigurationElement" /> のキーとして動作するオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトを取得します。</summary>
      <param name="key">コレクションに格納されている <see cref="T:System.Configuration.KeyValueConfigurationElement" /> のキー。</param>
      <returns>構成要素。キーがコレクションに存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>構成プロパティのコレクションを取得します。</summary>
      <returns>構成プロパティのコレクション。</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトをコレクションから削除します。</summary>
      <param name="key">
        <paramref name="key" /> を指定する文字列。</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>重複する <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトを <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> コレクションに追加しようとしたときに、例外をスローするかどうかを示す値を取得します。</summary>
      <returns>重複する <see langword="true" /> を <see cref="T:System.Configuration.KeyValueConfigurationElement" /> に追加しようとしたときに、例外をスローする場合は <see cref="T:System.Configuration.KeyValueConfigurationCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>キーと値のペアを格納する構成要素を表します。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.KeyValueConfigurationElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="key">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> のキー。</param>
      <param name="value">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> の値。</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトを初期状態に設定します。</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトのキーを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> のキー。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>プロパティのコレクションを取得します。</summary>
      <returns>要素のプロパティの <see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> オブジェクトの値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> の値。</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary>アプリケーション設定クラスに永続性を持たせます。</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary>
        <see cref="T:System.Configuration.LocalFileSettingsProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary>現在実行中のアプリケーションの名前を取得または設定します。</summary>
      <returns>アプリケーションの表示名が格納された文字列。</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>同じアプリケーションの以前のバージョンの、名前付き設定プロパティの値を返します。</summary>
      <param name="context">アプリケーション設定プロパティが使用されている場所を記述する <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="property">値が返される <see cref="T:System.Configuration.SettingsProperty" />。</param>
      <returns>アプリケーション設定が見つかった場合は、そのアプリケーション設定を表す <see cref="T:System.Configuration.SettingsPropertyValue" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>指定したアプリケーションのインスタンスと設定プロパティ グループの、設定プロパティ値のコレクションを返します。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="properties">値の取得対象となる設定プロパティ グループを格納している <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
      <returns>指定した設定プロパティ グループの値を格納している <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープの設定が見つかりましたが、現在の構成はアプリケーション スコープの設定しかサポートしていません。</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>プロバイダーを初期化します。</summary>
      <param name="name">プロバイダーのフレンドリ名。</param>
      <param name="values">このプロバイダーの構成で指定された、プロバイダー固有の属性を表す名前と値のペアのコレクション。</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>指定したアプリケーションに関連付けられているすべてのアプリケーション設定プロパティを既定値にリセットします。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープの設定が見つかりましたが、現在の構成はアプリケーション スコープの設定しかサポートしていません。</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>指定したプロパティ設定グループの値を設定します。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="values">設定するプロパティ設定のグループを表す <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープの設定が見つかりましたが、現在の構成はアプリケーション スコープの設定しかサポートしていません。

または -

構成ファイルに設定を保存する際に一般的なエラーが発生しました。</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>同じアプリケーションの以前のバージョンから、ユーザー スコープの以前の設定の移行を試みます。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="properties">値の取得対象となる設定プロパティ グループを格納している <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープの設定が見つかりましたが、現在の構成はアプリケーション スコープの設定しかサポートしていません。

または -

構成ファイルの以前のバージョンにアクセスできませんでした。</exception>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>
        <see cref="T:System.Int64" /> 値の検証について説明します。</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">
        <see langword="long" /> 値の最小長を指定する <see cref="T:System.Int64" /> 値。</param>
      <param name="maxValue">
        <see langword="long" /> 値の最大長を指定する <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">
        <see langword="long" /> 値の最小長を指定する <see cref="T:System.Int64" /> 値。</param>
      <param name="maxValue">
        <see langword="long" /> 値の最大長を指定する <see cref="T:System.Int64" /> 値。</param>
      <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">
        <see langword="long" /> 値の最小長を指定する <see cref="T:System.Int64" /> 値。</param>
      <param name="maxValue">
        <see langword="long" /> 値の最大長を指定する <see cref="T:System.Int64" /> 値。</param>
      <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="resolution">一致する必要がある特定の値を指定する <see cref="T:System.Int64" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> が <see langword="0" /> 以下です。
または
<paramref name="maxValue" /> は <paramref name="minValue" /> より小さい値です。</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>オブジェクトの型を検証できるかどうかを判断します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが <see cref="T:System.Int64" /> 値と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクトの値。</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して長整数の検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.LongValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>整数を、<see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> プロパティ値と <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> プロパティ値によって定義された範囲内に含めるか、その範囲から除外するかを示す値を取得または設定します。</summary>
      <returns>値が除外される必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>プロパティに指定できる最大値を取得または設定します。</summary>
      <returns>指定できる最大値を示す長整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> 未満です。</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>プロパティに指定できる最小値を取得または設定します。</summary>
      <returns>指定できる最小値を示す整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> を超えています。</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.LongValidator" /> クラスのインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 検証コントロールのインスタンス。</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトのコレクションを含んでいます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトをコレクションに追加します。</summary>
      <param name="nameValue">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationCollection" /> に格納されているすべての項目のキーを取得します。</summary>
      <returns>文字列配列。</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationCollection" /> を消去します。</summary>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトを取得または設定します。</summary>
      <param name="name">コレクションに格納されている <see cref="T:System.Configuration.NameValueConfigurationElement" /> の名前。</param>
      <returns>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトをコレクションから削除します。</summary>
      <param name="nameValue">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの名前。</param>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>
        <see cref="T:System.String" /> 名と <see cref="T:System.String" /> 値を格納する構成要素。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.NameValueConfigurationElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの名前。</param>
      <param name="value">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの値。</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの名前を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの名前。</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> オブジェクトの値。</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary>構成ファイルにアクセスできるようにします。 この型は .NET Framework の構成インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.NameValueFileSectionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>新しい構成ハンドラーを作成し、指定されたパラメーターに基づいてセクション ハンドラー コレクションに追加します。</summary>
      <param name="parent">親オブジェクト。</param>
      <param name="configContext">構成コンテキスト オブジェクト。</param>
      <param name="section">セクションの XML ノード。</param>
      <returns>構成オブジェクト。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="section" /> の <see langword="file" /> 属性で指定されたファイルは、存在しますが読み込めません。

または -
<paramref name="section" /> の <see langword="name" /> 属性が、<see langword="file" /> 属性で指定されたファイルのルート要素と一致しません。</exception>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary>構成セクションから名前と値のペアの構成情報を提供します。</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.NameValueSectionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>新しい構成ハンドラーを作成し、指定されたパラメーターに基づいてセクション ハンドラー コレクションに追加します。</summary>
      <param name="parent">親オブジェクト。</param>
      <param name="context">構成のコンテキスト オブジェクト。</param>
      <param name="section">セクション XML ノード。</param>
      <returns>構成オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary>キー/値ペアでキーとして使用する XML 属性名を取得します。</summary>
      <returns>キー属性の名前を格納している <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary>キー/値ペアで値として使用する XML 属性名を取得します。</summary>
      <returns>値属性の名前を格納している <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary>アプリケーションのアップグレードが検出されたときに呼び出されるすべてのロジックを設定プロバイダーが無効にする必要があることを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>子ディレクトリの構成要素に対する、構成要素のオーバーライド動作を指定します。</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>要素またはグループの構成設定は、子ディレクトリの構成設定によりオーバーライドできます。</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>要素またはグループの構成設定は、子ディレクトリの構成設定によりオーバーライドできません。</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>現在の構成要素または構成グループの親要素によって明示的に許可されている場合、要素またはグループの構成設定は、子ディレクトリの構成設定によりオーバーライドされます。 オーバーライドするためのアクセス許可は、<see langword="OverrideMode" /> 属性を使用して指定します。</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>
        <see cref="T:System.TimeSpan" /> オブジェクトの検証を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>
        <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>オブジェクトの型が検証可能かどうかを判断します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが <see cref="T:System.TimeSpan" /> オブジェクトと一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクトの値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> を正の <see cref="T:System.TimeSpan" /> 値として解決できません。</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して時間の検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> クラスのインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 検証コントロールのインスタンス。</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>構成内の個々のプロパティのメタ情報が含まれています。 この型は継承できません。</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>構成属性に関連する <see cref="T:System.ComponentModel.TypeConverter" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>構成属性に関連する既定値を格納しているオブジェクトを取得します。</summary>
      <returns>構成属性の既定値を格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>構成属性に対応するオブジェクトの説明を取得します。</summary>
      <returns>構成属性の説明。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>構成属性がキーであるかどうかを指定する値を取得します。</summary>
      <returns>構成属性がキーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>構成属性がロックされているかどうかを指定する値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトがロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>構成属性が変更されているかどうかを指定する値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>構成属性が必須かどうかを指定する値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトが必須の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>構成属性に関連する構成ファイル内の行番号を取得します。</summary>
      <returns>構成ファイルの行番号。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>構成属性に対応するオブジェクトの名前を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトの名前。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>構成属性に対応するソース ファイルを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトのソース ファイル。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>構成属性に対応するオブジェクトの <see cref="T:System.Type" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Type" /> オブジェクトの <see cref="T:System.Configuration.PropertyInformation" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>構成属性に関連する <see cref="T:System.Configuration.ConfigurationValidatorBase" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>構成属性に関連する値が格納されているオブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトの値が格納されているオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>構成属性に関連する <see cref="T:System.Configuration.PropertyValueOrigin" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.PropertyValueOrigin" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトのコレクションを含んでいます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>
        <see cref="T:System.Configuration.PropertyInformationCollection" /> コレクション全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まります。</summary>
      <param name="array">
        <see cref="T:System.Array" /> コレクションからコピーされる要素のコピー先となる 1 次元 <see cref="T:System.Configuration.PropertyInformationCollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" /> の <see cref="P:System.Array.Length" /> プロパティが、<see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" /> の値未満です。</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>この <see cref="T:System.Collections.IEnumerator" /> コレクションを反復処理するために使用される <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Collections.IEnumerator" /> を反復処理するために使用される <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、<see cref="T:System.Configuration.PropertyInformationCollection" /> インスタンスをシリアル化するために必要なデータを設定します。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクト。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> インスタンスに関連付けられているシリアル化ストリームのソースおよびデスティネーションを格納する <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>指定されたプロパティ名に基づいて、コレクション内の <see cref="T:System.Configuration.PropertyInformation" /> オブジェクトを取得します。</summary>
      <param name="propertyName">
        <see cref="T:System.Configuration.PropertyInformationCollection" /> オブジェクトに格納されている構成属性の名前。</param>
      <returns>
        <see cref="T:System.Configuration.PropertyInformation" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>構成プロパティ値の設定元である構成階層内のレベルを指定します。</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>構成プロパティ値は、<see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" /> プロパティから設定されます。</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>構成プロパティ値は、構成の親レベルから継承されます。</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>構成プロパティ値は、階層の現在のレベルで定義されます。</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>現在のアプリケーションの構成ファイルに対して保護された構成プロバイダーへのアクセスを提供します。</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>データ保護プロバイダーの名前。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>既定の保護された構成プロバイダーの名前を取得します。</summary>
      <returns>既定の保護された構成プロバイダーの名前。</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>保護されたデータ セクションの名前。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>インストールされている保護された構成プロバイダーのコレクションを取得します。</summary>
      <returns>インストールされている <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> オブジェクトの <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> コレクション。</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>RSA プロバイダーの名前。</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>保護された構成データの暗号化と復号化を行うプロバイダーを作成する基本クラスです。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>既定の設定を使用して <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>構成ファイルから渡される <see cref="T:System.Xml.XmlNode" /> オブジェクトを復号化します。</summary>
      <param name="encryptedNode">復号化する <see cref="T:System.Xml.XmlNode" /> オブジェクト。</param>
      <returns>復号化されたデータを格納している <see cref="T:System.Xml.XmlNode" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>構成ファイルから渡される <see cref="T:System.Xml.XmlNode" /> オブジェクトを暗号化します。</summary>
      <param name="node">暗号化する <see cref="T:System.Xml.XmlNode" /> オブジェクト。</param>
      <returns>暗号化されたデータを格納している <see cref="T:System.Xml.XmlNode" />。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>既定の設定を使用して <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトをコレクションに追加します。</summary>
      <param name="provider">コレクションに追加する <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> は <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトではありません。</exception>
      <exception cref="T:System.Configuration.ConfigurationException">追加する <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトは、コレクションに既に存在しています。

または -
コレクションは読み取り専用です。</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>コレクション内の、指定した名前の <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトを取得します。</summary>
      <param name="name">コレクション内の <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクトの名前。</param>
      <returns>指定した名前を持つ <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> オブジェクト。その名前を持つオブジェクトが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>
        <see langword="configProtectedData" /> 構成セクションにプログラムからアクセスできるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>既定の設定を使用して <see cref="T:System.Configuration.ProtectedConfigurationSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> コレクション プロパティの既定の <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> オブジェクトの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> コレクション プロパティの既定の <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> オブジェクトの名前。</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>参加しているすべての構成ファイル内のすべての <see cref="T:System.Configuration.ProviderSettingsCollection" /> オブジェクトの <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> コレクションを取得します。</summary>
      <returns>参加しているすべての構成ファイル内のすべての <see cref="T:System.Configuration.ProviderSettingsCollection" /> オブジェクトの <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> コレクション。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>
        <see langword="&lt;configProtectedData&gt;" /> 構成セクションのプロバイダーを構成する、構成要素のグループを表します。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>
        <see cref="T:System.Configuration.ProtectedProviderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>保護された構成データのプロバイダーのプロパティを表す <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> コレクションを取得します。</summary>
      <returns>保護された構成データのプロバイダーのプロパティを表す <see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>保護された構成データのプロバイダーのプロパティを表す <see cref="T:System.Configuration.ProviderSettings" /> オブジェクトのコレクションを取得します。</summary>
      <returns>保護された構成データのプロバイダーのプロパティを表す <see cref="T:System.Configuration.ProviderSettings" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>拡張可能なプロバイダー モデルの基本実装を提供します。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>管理ツールまたは他のユーザー インターフェイス (UI) での表示に適した、簡単でわかりやすい説明を取得します。</summary>
      <returns>管理ツールまたは他の UI での表示に適した、簡単でわかりやすい説明。</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>構成ビルダーを初期化します。</summary>
      <param name="name">プロバイダーのフレンドリ名。</param>
      <param name="config">このプロバイダーの構成で指定された、プロバイダー固有の属性を表す名前と値のペアのコレクション。</param>
      <exception cref="T:System.ArgumentNullException">プロバイダーの名前は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">プロバイダーの名前の長さは 0 です。</exception>
      <exception cref="T:System.InvalidOperationException">プロバイダーが既に初期化された後に、プロバイダーで <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> の呼び出しが試行されます。</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>構成時にプロバイダーを参照するために使用される表示名を取得します。</summary>
      <returns>構成時にプロバイダーを参照するために使用される表示名。</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderBase" /> から継承するプロバイダー オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>プロバイダーをコレクションに追加します。</summary>
      <param name="provider">追加されるプロバイダー。</param>
      <exception cref="T:System.NotSupportedException">コレクションは読み取り専用です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> の <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> が <see langword="null" /> です。

または -
<paramref name="provider" /> の <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> の長さが 1 未満です。</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
      <exception cref="T:System.NotSupportedException">コレクションが読み取り専用に設定されています。</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>指定したインデックスを開始位置として、特定の配列にコレクションの内容をコピーします。</summary>
      <param name="array">コレクションの要素のコピー先となる配列。</param>
      <param name="index">コレクション項目の、コピー処理を開始する位置のインデックス。</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>コレクション内のプロバイダーの数を取得します。</summary>
      <returns>コレクション内のプロバイダーの数。</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>コレクションを反復処理するための <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装するオブジェクトを返します。</summary>
      <returns>コレクションを反復処理する <see cref="T:System.Collections.IEnumerator" /> を実装するオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>指定した名前のプロバイダーを取得します。</summary>
      <param name="name">プロバイダーを識別するキー。</param>
      <returns>指定した名前を持つプロバイダー。</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>コレクションからプロバイダーを削除します。</summary>
      <param name="name">削除されるプロバイダーの名前。</param>
      <exception cref="T:System.NotSupportedException">コレクションが読み取り専用に設定されています。</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>コレクションを読み取り専用に設定します。</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>現在のオブジェクトを取得します。</summary>
      <returns>現在のオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>特定の配列インデックスを開始位置として、配列に <see cref="T:System.Configuration.Provider.ProviderCollection" /> の要素をコピーします。</summary>
      <param name="array">コレクションの要素のコピー先となる配列。</param>
      <param name="index">配列の、コレクションからのプロバイダー インスタンスのコピーを開始する位置のインデックス。</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>構成プロバイダー エラーが発生したときにスローされる例外。 この例外クラスは、他の既存の例外クラスに割り当てられていないプロバイダー内で内部エラーが発生したときに、プロバイダーが例外をスローするためにも使用されます。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="info">逆シリアル化する情報を保持しているオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="message">この <see cref="T:System.Configuration.Provider.ProviderException" /> がスローされた理由を記述しているメッセージ。</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Configuration.Provider.ProviderException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="message">この <see cref="T:System.Configuration.Provider.ProviderException" /> がスローされた理由を記述しているメッセージ。</param>
      <param name="innerException">この <see cref="T:System.Configuration.Provider.ProviderException" /> がスローされる原因となった例外。</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>プロバイダーに関連付けられた構成要素を表します。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">設定を構成する対象となるプロバイダーの名前。</param>
      <param name="type">設定を構成する対象となるプロバイダーの型。</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>このクラスが構成するプロバイダーの名前を取得または設定します。</summary>
      <returns>プロバイダーの名前。</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>プロバイダーのユーザー定義のパラメーターのコレクションを取得します。</summary>
      <returns>プロバイダーのパラメーターの <see cref="T:System.Collections.Specialized.NameValueCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>このクラスが構成するプロバイダーの型を取得または設定します。</summary>
      <returns>この <see cref="T:System.Configuration.ProviderSettings" /> インスタンスが構成するプロバイダーの型の完全修飾名前空間およびクラス名。</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.ProviderSettingsCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>
        <see cref="T:System.Configuration.ProviderSettings" /> オブジェクトをコレクションに追加します。</summary>
      <param name="provider">追加する <see cref="T:System.Configuration.ProviderSettings" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>コレクションを空にします。</summary>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Configuration.ProviderSettingsCollection" /> コレクション内の指定したインデックス位置にある値を取得または設定します。</summary>
      <param name="index">返される <see cref="T:System.Configuration.ProviderSettings" /> のインデックス。</param>
      <returns>指定された <see cref="T:System.Configuration.ProviderSettings" />。</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>コレクションから項目を取得します。</summary>
      <param name="key">コレクション内の <see cref="T:System.Configuration.ProviderSettings" /> オブジェクトへの文字列参照。</param>
      <returns>コレクション内に含まれる <see cref="T:System.Configuration.ProviderSettings" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>コレクションから要素を削除します。</summary>
      <param name="name">削除する <see cref="T:System.Configuration.ProviderSettings" /> オブジェクトの名前。</param>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>正規表現によって指定される規則に基づいた文字列の検証を提供します。</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.RegexStringValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="regex">正規表現を指定する文字列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="regex" /> は null か空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>オブジェクトの型を検証できるかどうかを判断します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが文字列と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクトの値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="T:System.Text.RegularExpressions.Regex" /> クラスのパラメーターに適合しません。</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して正規表現を使用した文字列の検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> オブジェクトの新しいインスタンスを初期化します。</summary>
      <param name="regex">正規表現の検証に使用する文字列。</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>正規表現の検証を実行するために使用される文字列を取得します。</summary>
      <returns>装飾された構成要素のプロパティに割り当てられる文字列をフィルター処理するために使用される正規表現を含んだ文字列。</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.RegexStringValidator" /> クラスのインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 検証コントロールのインスタンス。</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>構成データの暗号化と復号化を行うために RSA 暗号方式を使用する <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> インスタンスを提供します。</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>RSA キー コンテナーにキーを追加します。</summary>
      <param name="keySize">追加するキーのサイズ。</param>
      <param name="exportable">キーをエクスポートできることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Windows Cryptography API (crypto API) 暗号化サービス プロバイダー (CSP: Cryptographic Service Provider) の名前を取得します。</summary>
      <returns>CryptoAPI 暗号化サービス プロバイダーの名前。</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>渡される XML ノードを復号化します。</summary>
      <param name="encryptedNode">復号化する <see cref="T:System.Xml.XmlNode" />。</param>
      <returns>復号化された XML ノードです。</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>RSA キー コンテナーからキーを削除します。</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>渡される XML ノードを暗号化します。</summary>
      <param name="node">暗号化する <see cref="T:System.Xml.XmlNode" />。</param>
      <returns>暗号化された <see cref="T:System.Xml.XmlNode" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>RSA キーをキー コンテナーからエクスポートします。</summary>
      <param name="xmlFileName">キーのエクスポート先ファイルの名前とパス。</param>
      <param name="includePrivateParameters">プライベート パラメーターがエクスポートされることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときにエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> が読み取り専用のファイルを指定しました。

または -
この操作は、現在のプラットフォームではサポートされていません。

または -
<paramref name="path" /> がディレクトリを指定しました。

または -
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
      <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>RSA キーをキー コンテナーにインポートします。</summary>
      <param name="xmlFileName">キーのインポート元ファイルの名前とパス。</param>
      <param name="exportable">キーをエクスポートできることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException">ファイルを開くときにエラーが発生しました。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> によって、書き込み専用のファイルが指定されました。

または -
この操作は、現在のプラットフォームではサポートされていません。

または -
<paramref name="path" /> がディレクトリを指定しました。

または -
呼び出し元に、必要なアクセス許可がありません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> で指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> の形式が正しくありません。</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>既定の設定でプロバイダーを初期化します。</summary>
      <param name="name">オブジェクトに対して使用するプロバイダー名。</param>
      <param name="configurationValues">オブジェクトを初期化するときに使用する値の <see cref="T:System.Collections.Specialized.NameValueCollection" /> コレクション。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> に 1 つ以上の認識されない値が含まれています。</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>キー コンテナーの名前を取得します。</summary>
      <returns>キー コンテナーの名前。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>プロバイダーが使用するパブリック キーを取得します。</summary>
      <returns>プロバイダーが使用するパブリック キーを格納する <see cref="T:System.Security.Cryptography.RSAParameters" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary>プロバイダーが FIPS を使用するかどうかを示す値を取得します。</summary>
      <returns>プロバイダーが FIPS を使用する場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> オブジェクトがコンピューターのキー コンテナーを使用しているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> オブジェクトがコンピューターのキー コンテナーを使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>プロバイダーが OAEP (Optimal Asymmetric Encryption Padding) キー交換データを使用しているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> オブジェクトが OAEP キー交換データを使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> クラスの要素を表します。</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> インスタンスから GenericUriParserOptions エントリの値を取得します。</summary>
      <returns>GenericUriParserOptions エントリの値。</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> インスタンスから Name エントリの値を取得します。</summary>
      <returns>このスキーマ設定で使用されるプロトコル。</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElement" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> の既定のコレクション型を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> の既定のコレクション型。</returns>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary>指定した <see cref="T:System.Configuration.SchemeSettingElement" /> のインデックス。</summary>
      <param name="element">指定したインデックス位置の <see cref="T:System.Configuration.SchemeSettingElement" />。</param>
      <returns>指定した <see cref="T:System.Configuration.SchemeSettingElement" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> コレクション内の指定したインデックス位置にある項目を取得します。</summary>
      <param name="index">返される <see cref="T:System.Configuration.SchemeSettingElement" /> のインデックス。</param>
      <returns>指定された <see cref="T:System.Configuration.SchemeSettingElement" />。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> パラメーターが 0 未満。
または
パラメーターで指定された項目が <see langword="null" /> であるか、削除されています。</exception>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> コレクションから項目を取得します。</summary>
      <param name="name">コレクション内の <see cref="T:System.Configuration.SchemeSettingElement" /> オブジェクトへの文字列参照。</param>
      <returns>コレクション内に含まれる <see cref="T:System.Configuration.SchemeSettingElement" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>構成階層内の個々のセクションのメタデータが含まれています。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>構成ファイル階層内の、関連付けられている構成セクションを定義できる位置を示す値を取得または設定します。</summary>
      <returns>構成ファイル階層内の、関連付けられている <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを宣言できる位置を示す値。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値が定義済みの値と競合します。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>構成ファイル階層内の、関連付けられている構成セクションを宣言できる位置を示す値を取得または設定します。</summary>
      <returns>構成ファイル階層内の、関連付けられている <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを .exe ファイルに対して宣言できる位置を示す値。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値が定義済みの値と競合します。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>構成セクションで <see langword="location" /> 属性を使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> 属性を使用できる場合は <see langword="location" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値が定義済みの値と競合します。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>関連付けられている構成セクションを下位レベルの構成ファイルでオーバーライドできるかどうかを示す値を取得または設定します。</summary>
      <returns>セクションをオーバーライドできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>関連付けられている構成セクションが定義されたインクルード ファイルが存在する場合は、その名前を取得または設定します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationSection" /> が定義されたインクルード ファイルが存在する場合はその名前。それ以外の場合は空の文字列 ("")。</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>関連付けられている構成セクションを強制的に構成ファイルに表示します。</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>関連付けられている構成セクションを強制的に構成ファイルに表示したり、既存のセクションを構成ファイルから削除したりします。</summary>
      <param name="force">関連付けられているセクションを構成ファイルに書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" /> が <see langword="true" /> のときに、関連付けられているセクションを子構成ファイルにエクスポートできないか、そのセクションが宣言されていません。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>関連付けられている構成セクションが変更されていない場合も保存されるかどうかを示す値を取得または設定します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトが変更されていない場合も保存される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。

構成ファイルが保存されている場合は (変更されていなくても)、ASP.NET はアプリケーションを再起動します。</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>このオブジェクトに関連付けられている構成セクションが含まれている構成セクションを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトに関連付けられている <see cref="T:System.Configuration.SectionInformation" /> が含まれている構成セクション。</returns>
      <exception cref="T:System.InvalidOperationException">メソッドが親セクションから呼び出されます。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>関連付けられている構成セクション オブジェクトを表す XML ノード オブジェクトを返します。</summary>
      <returns>この構成ファイルの XML 表現。</returns>
      <exception cref="T:System.InvalidOperationException">この構成オブジェクトはロックされているので、編集できません。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>関連する構成セクションで指定されている設定を、関連アプリケーションのサブディレクトリにあるアプリケーションが継承するかどうかを示す値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトで指定されている設定が子アプリケーションに継承される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>構成セクションが構成ファイルで定義される必要があるかどうかを示す値を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトが構成ファイルで宣言される必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>関連付けられている構成セクションが構成ファイルで定義されているかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSection" /> が構成ファイルで定義されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>関連付けられている構成セクションがロックされているかどうかを示す値を取得します。</summary>
      <returns>セクションがロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>関連付けられている構成セクションが保護されているかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSection" /> が保護されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>関連付けられている構成セクションの名前を取得します。</summary>
      <returns>構成セクションの完全な名前。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>関連付けられている構成セクションを子構成ファイルでオーバーライドできるかどうかを示す <see cref="T:System.Configuration.OverrideMode" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.OverrideMode" /> 列挙値のいずれか。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> プロパティおよび <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> プロパティの両方を変更しようとしました。これは、互換性の問題からサポートされません。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>子構成ファイルによる構成セクションの既定のオーバーライド動作を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.OverrideMode" /> 列挙値のいずれか。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">オーバーライド動作は、親構成セクションで指定されています。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>構成セクションを子構成ファイルでロックできるかどうかということに基づく、その構成セクションのオーバーライド動作を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.OverrideMode" /> 列挙値のいずれか。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>関連付けられている構成セクションの保護された構成プロバイダーを取得します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトの保護された構成プロバイダー。</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>保護の構成セクションをマークします。</summary>
      <param name="protectionProvider">使用する保護プロバイダーの名前。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> プロパティが <see langword="false" /> に設定されている。
または
ターゲット セクションが既に保護されているデータ セクションである。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>関連付けられている構成セクションがアクセス許可を必要とするかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> 属性が <see langword="requirePermission" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値が定義済みの値と競合します。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>外部構成インクルード ファイルが変更されたときにアプリケーションの再起動が必要かどうかを示す値を取得または設定します。</summary>
      <returns>外部構成インクルード ファイルが変更されたときにアプリケーションの再起動が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値が定義済みの値と競合します。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>関連付けられている構成セクションのすべての値がその親セクションから継承されます。</summary>
      <exception cref="T:System.InvalidOperationException">このメソッドは、編集モード以外の場合には呼び出すことができません。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>関連付けられている構成セクションの名前を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトの名前。</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>オブジェクトを、構成ファイル内の関連付けられている構成セクションの XML 表現に設定します。</summary>
      <param name="rawXml">使用する XML。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawXml" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>セクションのクラス名を取得または設定します。</summary>
      <returns>この <see cref="T:System.Configuration.ConfigurationSection" /> セクションに関連付けられているクラスの名前。</returns>
      <exception cref="T:System.ArgumentException">選択した値が <see langword="null" /> または空の文字列 ("") です。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値が定義済みの値と競合します。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>関連付けられている構成セクションの保護された構成の暗号化を解除します。</summary>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary>設定情報を設定プロパティに関連付けるために使用するカスタム設定属性を表します。</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary>
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> クラスのインスタンスを初期化します。</summary>
      <param name="settingName">アプリケーション設定の名前を格納している <see cref="T:System.String" />。</param>
      <param name="settingClass">設定のカテゴリの説明を格納している <see cref="T:System.String" />。 多くの場合、このパラメーターは、アプリケーション設定グループ名に設定されます。</param>
      <param name="settingKey">アプリケーション設定キーを格納している <see cref="T:System.String" />。</param>
      <param name="newValue">アプリケーション設定プロパティに割り当てられる新しい値を格納している <see cref="T:System.Object" />。</param>
      <param name="cancel">イベントをキャンセルする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary>アプリケーション設定プロパティに割り当てられる新しい値を取得します。</summary>
      <returns>アプリケーション設定プロパティに割り当てられる新しい値を格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary>アプリケーション設定プロパティのカテゴリを取得します。</summary>
      <returns>設定のカテゴリの説明を格納している <see cref="T:System.String" />。 通常、このパラメーターは、アプリケーション設定グループ名に設定されます。</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary>プロパティに関連付けられたアプリケーション設定キーを取得します。</summary>
      <returns>アプリケーション設定キーを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary>アプリケーション設定プロパティに関連付けられたアプリケーション設定の名前を取得します。</summary>
      <returns>アプリケーション設定の名前を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントの発生元。通常は、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスから派生したアプリケーション設定ラッパー クラス。</param>
      <param name="e">イベントのデータを格納している <see cref="T:System.Configuration.SettingChangingEventArgs" />。</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary>構成内の要素の更新に使用する簡略化した構成要素を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトの名前。</param>
      <param name="serializeAs">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> オブジェクト。 このオブジェクトは、構成設定を格納するためのシリアル化方式として使用される列挙体です。</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Configuration.SettingElement" /> インスタンスを、指定したオブジェクトと比較します。</summary>
      <param name="settings">比較対象のオブジェクト。</param>
      <returns>
        <see cref="T:System.Configuration.SettingElement" /> インスタンスが指定したオブジェクトと同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary>現在の <see cref="T:System.Configuration.SettingElement" /> インスタンスを表す一意の値を取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.SettingElement" /> インスタンスを表す一意の値。</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトの名前。</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトの値を保持するために使用するシリアル化機構を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsSerializeAs" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトを使用して、<see cref="T:System.Configuration.SettingValueElement" /> オブジェクトの値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingValueElement" /> オブジェクトの値を格納している <see cref="T:System.Configuration.SettingElement" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトのコレクションを含んでいます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトをコレクションに追加します。</summary>
      <param name="element">コレクションに追加する <see cref="T:System.Configuration.SettingElement" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary>コレクションからすべての <see cref="T:System.Configuration.SettingElement" /> オブジェクトを削除します。</summary>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary>構成コレクションの型を取得します。</summary>
      <returns>コレクションの <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary>コレクションから <see cref="T:System.Configuration.SettingElement" /> オブジェクトを取得します。</summary>
      <param name="elementKey">コレクション内の <see cref="T:System.Configuration.SettingElement" /> オブジェクトを表す文字列値。</param>
      <returns>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary>
        <see cref="T:System.Configuration.SettingElement" /> オブジェクトをコレクションから削除します。</summary>
      <param name="element">
        <see cref="T:System.Configuration.SettingElement" /> オブジェクト。</param>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary>構成オブジェクト、および <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを記述するために使用するキーと値のペアのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributes">構成設定に関連するキーと値のペアのコレクション。</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary>ユーザーのプロパティ設定をサポートするために使用する基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary>関連付けられた設定コンテキストを取得します。</summary>
      <returns>設定のインスタンスに関連付けられた <see cref="T:System.Configuration.SettingsContext" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary>
        <see cref="T:System.Configuration.SettingsBase" /> オブジェクトによって使用される内部プロパティを初期化します。</summary>
      <param name="context">設定プロパティに関連する設定コンテキスト。</param>
      <param name="properties">
        <see cref="T:System.Configuration.SettingsBase" /> インスタンスからアクセスできる設定プロパティ。</param>
      <param name="providers">プロパティ値の読み込み時と保存時に使用する必要がある初期化されたプロバイダー。</param>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary>オブジェクトへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsBase" /> へのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary>指定した設定プロパティの値を取得または設定します。</summary>
      <param name="propertyName">アクセスするプロパティの名前を含む <see cref="T:System.String" />。</param>
      <returns>存在する場合は、名前付き設定プロパティの値。</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">現在のオブジェクトに関連付けられたプロパティが存在しないか、指定したプロパティが見つかりませんでした。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">読み取り専用プロパティを設定しようとしました。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">指定された値は、設定操作時の設定プロパティと型の互換性がありません。</exception>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary>設定プロパティのコレクションを取得します。</summary>
      <returns>すべての <see cref="T:System.Configuration.SettingsPropertyCollection" /> オブジェクトが格納されている <see cref="T:System.Configuration.SettingsProperty" /> コレクション。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary>設定プロパティ値のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> インスタンスで管理されるプロパティの実際のデータの値を表す <see cref="T:System.Configuration.SettingsBase" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary>設定プロバイダーのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProvider" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary>設定プロパティの現在の値を格納します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary>同期されている (スレッド セーフな) <see cref="T:System.Configuration.SettingsBase" /> クラスを提供します。</summary>
      <param name="settingsBase">ユーザーのプロパティ設定をサポートするために使用するクラス。</param>
      <returns>同期されている <see cref="T:System.Configuration.SettingsBase" /> クラス。</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary>設定を保持する場合にプロバイダーが使用できるコンテキスト情報を提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary>個々の構成プロパティを説明する文字列を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsDescriptionAttribute" /> クラスのインスタンスを初期化します。</summary>
      <param name="description">説明テキストとして使用する <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary>関連付けられた構成プロパティの説明テキストを取得します。</summary>
      <returns>関連付けられた構成プロパティの説明テキストを含む <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary>アプリケーション設定プロパティ グループを説明する文字列を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="description">アプリケーション設定グループの説明テキストを格納する <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary>アプリケーション設定プロパティ グループの説明テキスト。</summary>
      <returns>アプリケーション設定グループの説明テキストを格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary>アプリケーション設定プロパティ グループの名前を指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsGroupNameAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="groupName">アプリケーション設定プロパティ グループの名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary>アプリケーション設定プロパティ グループの名前を取得します。</summary>
      <returns>アプリケーション設定プロパティ グループの名前を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary>
        <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider">設定の読み込み元の <see cref="T:System.Configuration.SettingsProvider" /> オブジェクト。</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary>構成設定を格納するために使用する設定プロバイダーを取得します。</summary>
      <returns>設定プロバイダー。</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース (通常は設定クラス)。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary>アプリケーション設定で利用できるようにする必要のあるサービスを示す値を提供します。</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary>アプリケーション設定をローミング ユーザー プロファイルに格納できるようにします。 ローミング ユーザー プロファイルの詳細については、「分離ストレージとローミング」を参照してください。</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary>アプリケーション設定プロパティの特別なサービスを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary>
        <see cref="T:System.Configuration.SettingsManageabilityAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="manageability">要求されているサービスを列挙する <see cref="T:System.Configuration.SettingsManageability" /> 値。</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary>要求されている特殊なサービスのセットを取得します。</summary>
      <returns>論理 <see langword="OR" /> 演算子を使用して、要求されているサービスに対応するすべての <see cref="T:System.Configuration.SettingsManageability" /> 列挙値を組み合わせた結果の値。</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary>個々の構成プロパティに関するメタデータを表すクラスとして内部的に使用されます。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsProperty" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyToCopy">既存の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトのコピーを指定します。</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> クラスの新しいインスタンスを初期化します。 初期化は、指定されたパラメーターに基づいて行われます。</summary>
      <param name="name">既存の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの名前を指定します。</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsProperty" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの名前。</param>
      <param name="propertyType">
        <see cref="T:System.Configuration.SettingsProperty" />オブジェクトの型。</param>
      <param name="provider">永続化に使用する <see cref="T:System.Configuration.SettingsProvider" /> オブジェクト。</param>
      <param name="isReadOnly">
        <see cref="T:System.Boolean" /> オブジェクトが読み取り専用かどうかを指定する <see cref="T:System.Configuration.SettingsProperty" /> 値。</param>
      <param name="defaultValue">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの既定値。</param>
      <param name="serializeAs">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> オブジェクト。 このオブジェクトは、アプリケーション設定を格納するためのシリアル化方式を設定するために使用される列挙体です。</param>
      <param name="attributes">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> オブジェクト。</param>
      <param name="throwOnErrorDeserializing">プロパティが正常に逆シリアル化されなかった場合にエラーがスローされるかどうかを指定するブール値。</param>
      <param name="throwOnErrorSerializing">プロパティが正常にシリアル化されなかった場合にエラーがスローされるかどうかを指定するブール値。</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> オブジェクトの属性を格納している <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの既定値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの既定値を格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトが読み取り専用かどうかを指定する値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Configuration.SettingsProperty" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> の名前。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> の型を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> の型。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> のプロバイダーを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProvider" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary>
        <see cref="T:System.Configuration.SettingsSerializeAs" /> の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsSerializeAs" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary>プロパティが正常に逆シリアル化されなかった場合にエラーがスローされるかどうかを指定する値を取得または設定します。</summary>
      <returns>プロパティが正常に逆シリアル化されなかった場合にエラーがスローされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary>プロパティが正常にシリアル化されなかった場合にエラーがスローされるかどうかを指定する値を取得または設定します。</summary>
      <returns>プロパティが正常にシリアル化されなかった場合にエラーがスローされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトをコレクションに追加します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクト。</param>
      <exception cref="T:System.NotSupportedException">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary>コレクションからすべての <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを削除します。</summary>
      <exception cref="T:System.NotSupportedException">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary>既存のコレクションのコピーを作成します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> クラス。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>この <see cref="T:System.Configuration.SettingsPropertyCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">オブジェクトのコピー先の配列。</param>
      <param name="index">コピーの開始位置を示すインデックス。</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary>コレクション内の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの数を示す値を取得します。</summary>
      <returns>コレクション内の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの数。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary>コレクションに適用する <see cref="T:System.Collections.IEnumerator" /> オブジェクトを取得します。</summary>
      <returns>コレクションに適用される <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> へのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary>指定した名前を持つコレクション項目を取得します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの名前。</param>
      <returns>指定した <paramref name="name" /> の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> インスタンスの内容に追加するときに、追加のカスタム処理を実行します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> インスタンスの内容に追加した後に、追加のカスタム処理を実行します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> インスタンスの内容を消去するときに、追加のカスタム処理を実行します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> インスタンスの内容を消去した後に、追加のカスタム処理を実行します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> インスタンスの内容を削除するときに、追加のカスタム処理を実行します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> インスタンスの内容を削除した後に、追加のカスタム処理を実行します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの名前。</param>
      <exception cref="T:System.NotSupportedException">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary>コレクションを読み取り専用に設定します。</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するためのオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するためのオブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary>読み取り専用の <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの例外を提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">シリアル化ストリームの転送元または転送先に関するコンテキスト情報を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージが含まれた文字列。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージが含まれた文字列。</param>
      <param name="innerException">現在の例外の原因となった例外。</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary>見つからない <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの例外を提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">シリアル化ストリームの転送元または転送先に関するコンテキスト情報を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージが含まれた文字列。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージが含まれた文字列。</param>
      <param name="innerException">現在の例外の原因となった例外。</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary>
        <see cref="T:System.Configuration.SettingsBase" /> のインスタンスによって読み込みおよび格納できる設定プロパティの値を格納します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを指定します。</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値が逆シリアル化されているかどうかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値が逆シリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値が変更されているかどうかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値が変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary>関連付けられている <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトからプロパティの名前を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの名前。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを記述する <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値。 この値が設定されると、<see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> プロパティは <see langword="true" /> に設定され、<see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> は <see langword="false" /> に設定されます。
値が初めて <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> プロパティからアクセスされ、その値が当初は <see cref="T:System.Configuration.SettingsPropertyValue" /> プロパティを使用してシリアル化された表現として <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" /> オブジェクトに格納されていた場合、<see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> プロパティによって、基になる値の逆シリアル化が発生します。  その結果、<see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> プロパティは <see langword="true" /> に設定されます。
この一連のイベントが ASP.NET の下で発生し、逆シリアル化の処理中にエラーが発生した場合は、ASP.NET の状態監視機能を使用してエラーがログに記録されます。 つまり、ASP.NET で実行している場合、既定では、逆シリアル化のエラーはアプリケーション イベント ログに表示されます。 この処理が ASP.NET の外部で行われた場合は、逆シリアル化中にエラーが発生しても、そのエラーは出力されず、逆シリアル化の残りのロジックが実行されます。 逆シリアル化が試行されたときに逆シリアル化対象のシリアル化された値がない場合、<see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトは、既定値が、関連付けられている <see cref="T:System.Configuration.SettingsProperty" /> インスタンスで定義されて構成されていれば、代わりにその既定値を返そうとします。 その際に <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> プロパティが <see langword="null" /> または文字列 "[null]" に設定されていると、<see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトは <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> プロパティを、参照型の場合は <see langword="null" />、関連付けられている値型の場合は既定値に初期化します。  一方、<see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> プロパティに有効なオブジェクト参照または文字列値 ("[null]" 以外) が格納されている場合は、<see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> プロパティが返されます。
逆シリアル化が試行されたときに逆シリアル化対象のシリアル化された値がなく、既定値も指定されていない場合、文字列型については空の文字列が返されます。 それ以外のすべての型では、を呼び出す<see cref="M:System.Activator.CreateInstance(System.Type)" />ことによって既定のインスタンスが返されます。これは、パラメーターなしのコンストラクターを使用してオブジェクトインスタンスを作成しようとしたことを意味します。  この試行が失敗した場合は、<see langword="null" /> が返されます。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> プロパティの既定値を使用しようとしているときにエラーが発生しました。  <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> プロパティを有効な型に変換しようとして失敗したか、結果の値が <see cref="P:System.Configuration.SettingsProperty.PropertyType" /> で定義されている型と互換性がないかのいずれかです。</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトのシリアル化された値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトのシリアル化された値。</returns>
      <exception cref="T:System.ArgumentException">プロパティのシリアル化オプションで文字列の型コンバーターを使用するように示されていますが、型コンバーターが使用できませんでした。</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトの値が、関連付けられている <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> オブジェクトの <see cref="T:System.Configuration.SettingsProperty" /> プロパティ値で定義されている既定値であるかどうかを示すブール値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトの値が既定値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary>
        <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトを <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトに対応付ける、設定プロパティ値のコレクションを格納します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトをコレクションに追加します。</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクト。</param>
      <exception cref="T:System.NotSupportedException">コレクションに項目を追加しようとしましたが、コレクションが読み取り専用としてマークされています。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary>コレクションからすべての <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary>既存のコレクションのコピーを作成します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> クラス。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>この <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array">コレクションのコピー先の配列。</param>
      <param name="index">コピーの開始位置を示すインデックス。</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary>コレクション内の <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトの数を示す値を取得します。</summary>
      <returns>コレクション内の <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトの数。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary>コレクションに適用する <see cref="T:System.Collections.IEnumerator" /> オブジェクトを取得します。</summary>
      <returns>コレクションに適用される <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されるかどうか (スレッド セーフかどうか) を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> コレクションへのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary>コレクションから項目を取得します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクト。</param>
      <returns>指定した <paramref name="name" /> の <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> オブジェクトの名前。</param>
      <exception cref="T:System.NotSupportedException">コレクションから項目を削除しようとしましたが、コレクションが読み取り専用としてマークされています。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary>コレクションを読み取り専用に設定します。</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するためのオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するためのオブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary>無効な型が <see cref="T:System.Configuration.SettingsProperty" /> オブジェクトで使用された場合にスローされる例外を提供します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">シリアル化ストリームの転送元または転送先に関するコンテキスト情報を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージが含まれた文字列。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージが含まれた文字列。</param>
      <param name="innerException">現在の例外の原因となった例外。</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary>アプリケーション設定アーキテクチャでカスタム設定プロバイダーを派生させるための基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsProvider" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary>現在実行中のアプリケーションの名前を取得または設定します。</summary>
      <returns>完全なパスまたは拡張子を含まないアプリケーションの短縮名を含む。たとえば、simpleappsettings です。 <c></c><see cref="T:System.String" /></returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>指定したアプリケーションのインスタンスと設定プロパティ グループの、設定プロパティ値のコレクションを返します。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="collection">値の取得対象となる設定プロパティ グループを格納している <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
      <returns>指定した設定プロパティ グループの値を格納している <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>指定したプロパティ設定グループの値を設定します。</summary>
      <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="collection">設定するプロパティ設定のグループを表す <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</param>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary>現在のアプリケーション設定クラスまたはアプリケーション設定プロパティのストレージを提供するために使用する設定プロバイダーを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Configuration.SettingsProviderAttribute" /> クラスのインスタンスを初期化します。</summary>
      <param name="providerTypeName">設定プロバイダーの名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.SettingsProviderAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="providerType">
        <see cref="T:System.Type" /> はプロバイダーの種類の設定を格納しています。</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary>設定プロバイダーの型名を取得します。</summary>
      <returns>設定プロバイダーの名前を格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary>アプリケーション設定プロバイダーのコレクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>新しい設定プロバイダーをコレクションに追加します。</summary>
      <param name="provider">コレクションに追加する <see cref="T:System.Configuration.Provider.ProviderBase" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> パラメーターが <see cref="T:System.Configuration.SettingsProvider" /> 型ではありません。

または -
プロバイダーのパラメーターの <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> プロパティが、null または空の文字列です。

または -
同じ <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> の設定プロバイダーがコレクション内に既に存在します。</exception>
      <exception cref="T:System.NotSupportedException">コレクションは読み取り専用です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary>指定した名前と一致するコレクション内の設定プロバイダーを取得します。</summary>
      <param name="name">設定プロバイダーの表示名を格納している <see cref="T:System.String" />。</param>
      <returns>見つかった場合は、名前のパラメーターで指定された名前と一致する名前を持つ <see cref="T:System.Configuration.SettingsProvider" />。見つからなかった場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">コレクションは、この値の設定時は読み取り専用です。</exception>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary>
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。通常は、データ コンテナーまたはデータ バインド コレクション。</param>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary>アプリケーション設定を格納するために使用するシリアル化方式を決定します。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary>設定プロパティは、バイナリ オブジェクトのシリアル化を使用してシリアル化されます。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary>設定プロバイダーは、プロパティまたはその型を暗黙的に認識しており、適切なシリアル化機構を選択します。 多くの場合、カスタムのシリアル化に使用されます。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary>設定プロパティは、プレーンテキストとしてシリアル化されます。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary>設定プロパティは、XML のシリアル化を使用して XML としてシリアル化されます。</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary>設定プロバイダーが使用するシリアル化機構を指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary>
        <see cref="T:System.Configuration.SettingsSerializeAsAttribute" /> クラスのインスタンスを初期化します。</summary>
      <param name="serializeAs">シリアル化方式を指定する <see cref="T:System.Configuration.SettingsSerializeAs" /> 列挙値。</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary>シリアル化方式を指定する <see cref="T:System.Configuration.SettingsSerializeAs" /> 列挙値を取得します。</summary>
      <returns>シリアル化方式を指定する <see cref="T:System.Configuration.SettingsSerializeAs" /> 列挙値。</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary>シリアル化された設定の値を表す XML を格納します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary>
        <see cref="T:System.Configuration.SettingValueElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Configuration.SettingValueElement" /> インスタンスを、指定したオブジェクトと比較します。</summary>
      <param name="settingValue">比較対象のオブジェクト。</param>
      <returns>
        <see cref="T:System.Configuration.SettingValueElement" /> インスタンスが指定したオブジェクトと同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary>現在の <see cref="T:System.Configuration.SettingValueElement" /> インスタンスを表す一意の値を取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.SettingValueElement" /> インスタンスを表す一意の値。</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary>
        <see cref="T:System.Configuration.SettingValueElement" /> オブジェクトを使用して、<see cref="T:System.Xml.XmlNode" /> オブジェクトの値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> の値を含んでいる <see cref="T:System.Configuration.SettingElement" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary>.config ファイルの単一の XML タグで表される構成セクションを処理します。</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary>
        <see cref="T:System.Configuration.SingleTagSectionHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>このオブジェクトの新しいインスタンスを作成する目的で内部的に使用されます。</summary>
      <param name="parent">このオブジェクトの親。</param>
      <param name="context">このオブジェクトのコンテキスト。</param>
      <param name="section">構成内の <see cref="T:System.Xml.XmlNode" /> オブジェクト。</param>
      <returns>作成された オブジェクト ハンドラー。</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary>アプリケーション設定プロパティの特殊な設定カテゴリを指定します。</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary>構成プロパティは、通常、データ ストアまたはネットワーク リソースの接続文字列を表します。</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary>構成プロパティは、Web サービスの URL (Uniform Resource Locator) を表します。</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary>アプリケーション設定プロパティに特別な意味が含まれていることを示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary>
        <see cref="T:System.Configuration.SpecialSettingAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="specialSetting">アプリケーション設定プロパティのカテゴリを定義する <see cref="T:System.Configuration.SpecialSetting" /> 列挙値。</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary>アプリケーション設定プロパティの特別な設定カテゴリを説明する値を取得します。</summary>
      <returns>アプリケーション設定プロパティのカテゴリを定義する <see cref="T:System.Configuration.SpecialSetting" /> 列挙値。</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>文字列の検証を提供します。</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.StringValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minLength">文字列値の最小長を指定する整数。</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.StringValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minLength">文字列値の最小長を指定する整数。</param>
      <param name="maxLength">文字列値の最大長を指定する整数。</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.StringValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minLength">文字列値の最小長を指定する整数。</param>
      <param name="maxLength">文字列値の最大長を指定する整数。</param>
      <param name="invalidCharacters">無効な文字を表す文字列。</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>オブジェクトを型に基づいて検証できるかどうかを確認します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが文字列と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクト値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は、コンストラクターに定義されている <paramref name="minValue" /> 未満か、<paramref name="maxValue" /> より大きい値です。

または -
<paramref name="value" /> に無効な文字が含まれています。</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して文字列の検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.StringValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>プロパティに対して無効な文字を取得または設定します。</summary>
      <returns>プロパティに指定できない文字のセットが含まれる文字列。</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>プロパティに割り当てることができる文字列の最大長を取得または設定します。</summary>
      <returns>プロパティに割り当てることができる文字列の最大長を示す整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" /> 未満です。</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>プロパティに割り当てることができる文字列の最小値を取得または設定します。</summary>
      <returns>プロパティに割り当てることができる文字列の最小長を示す整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" /> を超えています。</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.StringValidator" /> クラスのインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.StringValidator" /> 検証コントロール インスタンスの現在の <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 設定。</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>オブジェクトが指定した型の派生クラスであることを検証します。</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.SubclassTypeValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="baseClass">検証対象となる基本クラス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseClass" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>オブジェクトを型に基づいて検証できるかどうかを確認します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが、検証できる型と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクト値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が、コンストラクターで定義された <paramref name="baseClass" /> から派生できる <see cref="T:System.Type" /> ではありません。</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="baseClass">基本クラスの型。</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>検証されるオブジェクトの基本型を取得します。</summary>
      <returns>検証されるオブジェクトの基本型。</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>検証コントロールの属性のインスタンスを取得します。</summary>
      <returns>現在の <see cref="T:System.Configuration.ConfigurationValidatorBase" /> インスタンス。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>分単位で表された期間を変換します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanMinutesConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.TimeSpan" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <paramref name="data" /> パラメーターを分単位で表す <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> を <see cref="T:System.String" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換後の値。</param>
      <param name="type">変換後の型。</param>
      <returns>
        <paramref name="value" /> パラメーターを分単位で表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>分単位または標準の無期限の期間として表される <see cref="T:System.TimeSpan" /> を変換します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.TimeSpan" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <paramref name="data" /> パラメーターが <see cref="F:System.TimeSpan.MaxValue" /> "infinite" の場合は <see cref="T:System.String" />。それ以外の場合は <paramref name="data" /> パラメーターを分単位で表す <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> を <see cref="T:System.String" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換する値。</param>
      <param name="type">変換の型。</param>
      <returns>
        <paramref name="value" /> パラメーターが <see cref="F:System.TimeSpan.MaxValue" /> の場合は <see cref="T:System.String" /> "infinite"、それ以外の場合は <paramref name="value" /> パラメーターを分単位で表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>秒単位で表された期間を変換します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.TimeSpan" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <paramref name="data" /> パラメーターを秒単位で表す <see cref="T:System.TimeSpan" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> を整数値として解析できません。</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> を <see cref="T:System.String" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換後の値。</param>
      <param name="type">変換後の型。</param>
      <returns>
        <paramref name="value" /> パラメーターを分単位で表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>秒単位または標準の無期限の期間として表される <see cref="T:System.TimeSpan" /> を変換します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を <see cref="T:System.TimeSpan" />に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <paramref name="data" /> パラメーターが <see cref="F:System.TimeSpan.MaxValue" /> "infinite" の場合は <see cref="T:System.String" />。それ以外の場合は <paramref name="data" /> パラメーターを秒単位で表す <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.TimeSpan" /> を a に変換します。 <see cref="T:System.String" />。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換する値。</param>
      <param name="type">変換の型。</param>
      <returns>
        <paramref name="value" /> パラメーターが <see cref="T:System.String" /> の場合は <see cref="F:System.TimeSpan.MaxValue" /> "infinite"。それ以外の場合は <paramref name="value" /> パラメーターを秒単位で表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>
        <see cref="T:System.TimeSpan" /> オブジェクトの検証を提供します。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.TimeSpanValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">検証に合格できる最小時間を指定する <see cref="T:System.TimeSpan" /> オブジェクト。</param>
      <param name="maxValue">検証に合格できる最大時間を指定する <see cref="T:System.TimeSpan" /> オブジェクト。</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.TimeSpanValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">検証に合格できる最小時間を指定する <see cref="T:System.TimeSpan" /> オブジェクト。</param>
      <param name="maxValue">検証に合格できる最大時間を指定する <see cref="T:System.TimeSpan" /> オブジェクト。</param>
      <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>指定されたパラメーターに基づいて、<see cref="T:System.Configuration.TimeSpanValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minValue">検証に合格できる最小時間を指定する <see cref="T:System.TimeSpan" /> オブジェクト。</param>
      <param name="maxValue">検証に合格できる最大時間を指定する <see cref="T:System.TimeSpan" /> オブジェクト。</param>
      <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="resolutionInSeconds">秒数を指定する <see cref="T:System.Int64" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolutionInSeconds" /> は <see langword="0" /> より小さい値です。
または
<paramref name="minValue" /> が <paramref name="maxValue" /> より大きくなっています。</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>オブジェクトの型を検証できるかどうかを判断します。</summary>
      <param name="type">オブジェクトの型。</param>
      <returns>
        <paramref name="type" /> パラメーターが <see cref="T:System.TimeSpan" /> 値と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>オブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value">オブジェクトの値。</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>.NET Framework が構成プロパティに対して時間の検証を実行するように、宣言によって指示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>整数を、<see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> と <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" /> によって定義された範囲内に含めるか、その範囲から除外するかを示す値を取得または設定します。</summary>
      <returns>値が除外される必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>
        <see cref="T:System.TimeSpan" /> の最大の絶対値を取得します。</summary>
      <returns>指定できる最大の <see cref="T:System.TimeSpan" /> 値。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>
        <see cref="T:System.TimeSpan" /> の最大の相対値を取得または設定します。</summary>
      <returns>指定できる最大の <see cref="T:System.TimeSpan" /> 値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" /> 未満の値を表しています。</exception>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>
        <see cref="T:System.TimeSpan" /> の最小の絶対値を取得します。</summary>
      <returns>指定できる最小の <see cref="T:System.TimeSpan" /> 値。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>
        <see cref="T:System.TimeSpan" /> の最小の相対値を取得または設定します。</summary>
      <returns>指定できる最小の <see cref="T:System.TimeSpan" /> 値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" /> を超える値を表しています。</exception>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>指定できる最大の絶対値を取得します。</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>指定できる最小の絶対値を取得します。</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>
        <see cref="T:System.Configuration.TimeSpanValidator" /> クラスのインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 検証コントロールのインスタンス。</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>型と文字列値との間の変換を行います。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.TypeNameConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> オブジェクトを <see cref="T:System.Type" /> オブジェクトに変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>
        <paramref name="data" /> パラメーターを表す <see cref="T:System.Type" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Type" /> 値を解決できません。</exception>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Type" /> オブジェクトを <see cref="T:System.String" /> オブジェクトに変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換後の値。</param>
      <param name="type">変換後の型。</param>
      <returns>
        <paramref name="value" /> パラメーターを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary>構成ファイル内の URI セクションを表します。</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary>
        <see cref="T:System.Configuration.UriSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> クラスで処理する国際化ドメイン名 (IDN) の構成設定を格納する <see cref="T:System.Uri" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Uri" /> クラスで処理する国際化ドメイン名 (IDN) の構成設定。</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary>
        <see cref="T:System.Configuration.IriParsingElement" /> クラスで解析する IRI (International Resource Identifier) の構成設定を格納する <see cref="T:System.Uri" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Uri" /> クラスで解析する IRI (International Resource Identifier) の構成設定。</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary>
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> クラスのスキーム解析の構成設定を格納する <see cref="T:System.Uri" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Uri" /> クラスのスキーム解析の構成設定。</returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary>アプリケーション設定グループまたはアプリケーション設定プロパティがアプリケーションのユーザーごとに個別の値を格納するように指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary>
        <see cref="T:System.Configuration.UserScopedSettingAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary>構成ファイル内の関連するユーザー設定セクションのグループ化を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary>
        <see cref="T:System.Configuration.UserSettingsGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>オブジェクトの検証後に呼び出されるメソッドを表します。</summary>
      <param name="value">コールバック メソッド。</param>
      <param name="o">コールバック メソッド。</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>文字列を標準の形式に変換します。</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>
        <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.String" /> を標準の形式に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="data">変換対象の <see cref="T:System.String" /> オブジェクト。</param>
      <returns>変換後の値を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.String" /> を標準の形式に変換します。</summary>
      <param name="ctx">型変換に使用される <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="ci">変換中に使用される <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換後の値。</param>
      <param name="type">変換後の型。</param>
      <returns>変換後の値を表すオブジェクト。</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary>
        <see cref="N:System.Drawing" /> 名前空間のクラスによって使用される構成セクションを表します。</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary>
        <see cref="T:System.Drawing.Configuration.SystemDrawingSection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> または <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> を使用してアセンブリが宣言される場合に <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> で示されるファイル名に付加するサフィックスを取得または設定します。</summary>
      <returns>ビットマップ サフィックス。</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>
        <see cref="T:System.Configuration.IdnElement" /> 名前空間の <see cref="N:System.Configuration" /> の構成設定に有効な値を提供します。</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>この値は、Unicode のドメイン名があれば、それを等価の Punycode (IDN 名) に変換します。</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>この値は、すべての外部 Unicode ドメイン名を、等価の Punycode (IDN 名) を使用するように変換します。 このように、ローカルなイントラネットで国際名を処理する場合、このイントラネットで使用する DNS サーバーは Unicode 名をサポートしている必要があります。</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>この値は、どの Unicode のドメイン名も、Punycode を使用するように変換しません。 これは、.NET Framework 2.0 の動作と一貫した既定値です。</summary>
    </member>
  </members>
</doc>