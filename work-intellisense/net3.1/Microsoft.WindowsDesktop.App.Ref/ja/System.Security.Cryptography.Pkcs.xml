<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary vsli:raw="Contains a type and a collection of values associated with that type.">型と、その型に関連付けられている値のコレクションを格納します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; class using an attribute represented by the specified &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object.">指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトで表される属性を使用して、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid" vsli:raw="The attribute to store in this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object.">この <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトに格納する属性。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; class using an attribute represented by the specified &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object and the set of values associated with that attribute represented by the specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedDataCollection&quot; /&gt; collection.">指定された <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトで表される属性と、指定された <see cref="T:System.Security.Cryptography.Oid" /> コレクションで表される属性に関連付けられた値のセットを使用して、<see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid" vsli:raw="The attribute to store in this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object.">この <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトに格納する属性。</param>
      <param name="values" vsli:raw="The set of values associated with the attribute represented by the &lt;paramref name=&quot;oid&quot; /&gt; parameter.">
        <paramref name="oid" /> パラメーターで表される属性に関連付けられている値のセット。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection contains duplicate items.">コレクションに重複した項目が含まれています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that specifies the object identifier for the attribute.">属性のオブジェクト識別子を指定する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The object identifier for the attribute.">属性のオブジェクト識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedDataCollection&quot; /&gt; collection that contains the set of values that are associated with the attribute.">属性に関連付けられている値のセットを含む <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> コレクションを取得します。</summary>
      <returns vsli:raw="The set of values that is associated with the attribute.">属性に関連付けられている値のセット。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary vsli:raw="Contains a set of &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; objects.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトのセットを格納します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; class, adding a specified &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; to the collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> クラスの新しいインスタンスを初期化し、指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> をコレクションに追加します。</summary>
      <param name="attribute" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object that is added to the collection.">コレクションに追加される <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object to the collection.">指定した <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトをコレクションに追加します。</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object to add to the collection.">コレクションに追加する <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method returns the zero-based index of the added item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">追加される項目の 0 から始まるインデックスをメソッドが返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asnEncodedData" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to the collection.">指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトをコレクションに追加します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to add to the collection.">コレクションに追加する <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method returns the zero-based index of the added item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">追加される項目の 0 から始まるインデックスをメソッドが返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asnEncodedData" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified item already exists in the collection.">指定された項目は、コレクションに既に存在しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection to an array of &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; objects.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションを <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトの配列にコピーします。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; objects that the collection is copied to.">コレクションがコピーされる <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトの配列。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; to which the collection is to be copied.">コレクションがコピーされる <paramref name="array" /> 内の、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; was passed to a method that does not accept it as a valid argument.">
        <see langword="null" /> を有効な引数として受け付けないメソッドに null 値が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary vsli:raw="Gets the number of items in the collection.">コレクション内の項目の数を取得します。</summary>
      <returns vsli:raw="The number of items in the collection.">コレクション内の項目数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator&quot; /&gt; object for the collection.">コレクションの <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method returns a &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator&quot; /&gt; object that can be used to enumerate the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コレクションの列挙に使用できる <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> オブジェクトをメソッドが返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized, or thread safe.">コレクションへのアクセスが同期されている、つまりスレッド セーフであるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the collection is thread safe; otherwise &lt;see langword=&quot;false&quot; /&gt;.">コレクションへのアクセスがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object at the specified index in the collection.">コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the zero-based index of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to retrieve.">取得する <see cref="T:System.Int32" /> オブジェクトの 0 から始まるインデックスを表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 値。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object at the specified index.">指定したインデックス位置にある <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object from the collection.">指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトをコレクションから削除します。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to remove from the collection.">コレクションから削除する <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;attribute&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the collection.">コレクションへのアクセスを同期するために使用する <see cref="T:System.Object" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">コレクションへの<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />アクセスを同期するために使用するオブジェクト。 <see cref="T:System.Object" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt; array, starting at a particular index.">特定のインデックスを開始位置として、<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 配列に、この <see cref="T:System.Array" /> コレクションの要素をコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; array that is the destination of the elements copied from this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; array must have zero-based indexing.">この <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 配列。 <see cref="T:System.Array" /> 配列では 0 から始まるインデックスを使用する必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Collections.IEnumerator" /> コレクションを反復処理するために使用できる <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary vsli:raw="Provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection. This class cannot be inherited.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションの列挙機能を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">現在の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトを <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションから取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object that represents the current cryptographic attribute in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの現在の暗号属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumeration to the next &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">列挙子を <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの次の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトに進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object; &lt;see langword=&quot;false&quot; /&gt; if the enumerator is at the end of the enumeration.">列挙子を正常に次の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトに進めることができた場合は <see langword="true" /> を、列挙子が最後に到達した場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary vsli:raw="Resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">列挙子を <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの最初の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトにリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">現在の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトを <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションから取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object that represents the current cryptographic attribute in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの現在の暗号属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class defines the algorithm used for a cryptographic operation.">
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスは、暗号操作に使用するアルゴリズムを定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class by using a set of default parameters.">
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> コンストラクターは、既定のパラメーターを使用して <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスのインスタンスを作成します。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class with the specified algorithm identifier.">
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> コンストラクターは、指定されたアルゴリズム識別子を使用して <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスのインスタンスを作成します。</summary>
      <param name="oid" vsli:raw="An object identifier for the algorithm.">アルゴリズムのオブジェクト識別子。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class with the specified algorithm identifier and key length.">
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> コンストラクターは、指定されたアルゴリズム識別子とキー長を使用して <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスのインスタンスを作成します。</summary>
      <param name="oid" vsli:raw="An object identifier for the algorithm.">アルゴリズムのオブジェクト識別子。</param>
      <param name="keyLength" vsli:raw="The length, in bits, of the key.">キーの長さ (ビット数)。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength&quot; /&gt; property sets or retrieves the key length, in bits. This property is not used for algorithms that use a fixed key length.">
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> プロパティは、キー長 (ビット数) を設定または取得します。 キー長が固定されているアルゴリズムの場合、このパラメーターは使用されません。</summary>
      <returns vsli:raw="An int value that represents the key length, in bits.">キー長 (ビット数) を表す整数値。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid&quot; /&gt; property sets or retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that specifies the object identifier for the algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> プロパティは、アルゴリズムのオブジェクト識別子を指定する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを設定または取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the algorithm.">アルゴリズムを表すオブジェクト。 <see cref="T:System.Security.Cryptography.Oid" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters&quot; /&gt; property sets or retrieves any parameters required by the algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> プロパティは、アルゴリズムに必要なすべてのパラメーターを設定または取得します。</summary>
      <returns vsli:raw="An array of byte values that specifies any parameters required by the algorithm.">アルゴリズムに必要なすべてのパラメーターを指定するバイト値配列。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class defines the recipient of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスは、CMS/PKCS #7 メッセージの受取人を定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified certificate and recipient identifier type, using the default encryption mode for the public key algorithm.">公開キー アルゴリズムの既定の暗号化モードを使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを指定の証明書と受信者の識別子の型で初期化します。</summary>
      <param name="recipientIdentifierType" vsli:raw="The scheme to use for identifying which recipient certificate was used.">使用された受信者の証明書を識別するために使用するスキーム。</param>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">この受信者に対する暗号化に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;recipientIdentifierType&quot; /&gt; value is not supported.">
        <paramref name="recipientIdentifierType" /> 値はサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified RSA certificate, RSA encryption padding, and subject identifier.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを、指定の RSA 証明書、RSA 暗号化パディング、およびサブジェクト識別子で初期化します。</summary>
      <param name="recipientIdentifierType" vsli:raw="The scheme to use for identifying which recipient certificate was used.">使用された受信者の証明書を識別するために使用するスキーム。</param>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">この受信者に対する暗号化に使用する証明書。</param>
      <param name="rsaEncryptionPadding" vsli:raw="The RSA padding mode to use when encrypting for this recipient.">この受信者に対する暗号化に使用する RSA パディング モード。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;rsaEncryptionPadding&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> パラメーターまたは <paramref name="rsaEncryptionPadding" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter public key is not recognized as an RSA public key.">
        <paramref name="certificate" /> パラメーター公開キーは、RSA 公開キーとして認識されません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified certificate, using the default encryption mode for the public key algorithm and an &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber&quot; /&gt; subject identifier.">公開キー アルゴリズム向けの既定の暗号化モードと <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> サブジェクト識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを指定の証明書で初期化します。</summary>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">この受信者に対する暗号化に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified RSA certificate and RSA encryption padding, using an &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber&quot; /&gt; subject identifier.">
        <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> サブジェクト識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを、指定された RSA 証明書と RSA 暗号化パディングで初期化します。</summary>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">この受信者に対する暗号化に使用する証明書。</param>
      <param name="rsaEncryptionPadding" vsli:raw="The RSA padding mode to use when encrypting for this recipient.">この受信者に対する暗号化に使用する RSA パディング モード。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;rsaEncryptionPadding&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> パラメーターまたは <paramref name="rsaEncryptionPadding" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter public key is not recognized as an RSA public key.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;recipientIdentifierType&quot; /&gt; value is not supported.">
        <paramref name="certificate" /> パラメーター公開キーは、RSA 公開キーとして認識されません。

または -

<paramref name="recipientIdentifierType" /> 値はサポートされていません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary vsli:raw="Gets the certificate to use when encrypting for this recipient.">この受信者に対する暗号化に使用する証明書を取得します。</summary>
      <returns vsli:raw="The certificate to use when encrypting for this recipient.">この受信者に対する暗号化に使用する証明書。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary vsli:raw="Gets the scheme to use for identifying which recipient certificate was used.">使用された受信者の証明書を識別するために使用するスキームを取得します。</summary>
      <returns vsli:raw="The scheme to use for identifying which recipient certificate was used.">使用された受信者の証明書を識別するために使用するスキーム。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary vsli:raw="Gets the RSA encryption padding to use when encrypting for this recipient.">この受信者に対する暗号化に使用する RSA 暗号化パディングを取得します。</summary>
      <returns vsli:raw="The RSA encryption padding to use when encrypting for this recipient.">この受信者の暗号化に使用する RSA 暗号化埋め込み。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class represents a set of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; objects. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスは、一連の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトを表します。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> では、<see cref="T:System.Collections.ICollection" /> インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class and adds the specified recipient.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスのインスタンスを作成し、指定された受取人を追加します。</summary>
      <param name="recipient" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class that represents the specified CMS/PKCS #7 recipient.">指定された CMS/PKCS #7 受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスのインスタンス。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class and adds recipients based on the specified subject identifier and set of certificates that identify the recipients.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスのインスタンスを作成し、指定されたサブジェクト識別子と、その受取人を識別する一連の証明書に基づいて受取人を追加します。</summary>
      <param name="recipientIdentifierType" vsli:raw="A member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration that specifies the type of subject identifier.">サブジェクト識別子のタイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列挙型のメンバーです。</param>
      <param name="certificates" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; collection that contains the certificates that identify the recipients.">受取人を識別する証明書が格納された <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> コレクション。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)&quot; /&gt; method adds a recipient to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> メソッドは、受取人を <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションに追加します。</summary>
      <param name="recipient" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the recipient to add to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションに追加する受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</param>
      <returns vsli:raw="If the method succeeds, the method returns an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the zero-based position where the recipient is to be inserted.  &#xA;  &#xA; If the method fails, it throws an exception.">メソッドが成功した場合は、受取人の挿入位置を表す <see cref="T:System.Int32" /> 値 (先頭位置は 0) が返されます。
メソッドが失敗した場合、例外がスローされます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;recipient&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipient" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection to an array.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; object to which the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Array" /> コレクションのコピー先の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is copied.">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to hold the specified elements.  &#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;array&quot; /&gt; does not contain the proper number of dimensions.">
        <paramref name="array" /> は、指定された要素を格納できるほど大きくありません。

または -

<paramref name="array" /> の次元数が不適切です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of elements in &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> が、<paramref name="array" /> の要素の範囲内にありません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection to a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; array.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションを <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 配列にコピーします。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; objects where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションをコピーする <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> の配列。</param>
      <param name="index" vsli:raw="The zero-based index for the array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; objects in &lt;paramref name=&quot;array&quot; /&gt; to which the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトを保持する配列の 0 から始まるインデックス。<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションが、<paramref name="array" /> のこの位置にコピーされます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to hold the specified elements.  &#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;array&quot; /&gt; does not contain the proper number of dimensions.">
        <paramref name="array" /> は、指定された要素を格納できるほど大きくありません。

または -

<paramref name="array" /> の次元数が不適切です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of elements in &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> が、<paramref name="array" /> の要素の範囲内にありません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count&quot; /&gt; property retrieves the number of items in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクション内のアイテム数を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the number of items in the collection.">コレクション内のアイテム数を表す <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized&quot; /&gt; property retrieves whether access to the collection is synchronized, or thread safe. This property always returns &lt;see langword=&quot;false&quot; /&gt;, which means that the collection is not thread safe.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> プロパティは、コレクションへのアクセスを同期させて、スレッド セーフにするかどうかを示します。 このプロパティは常に、コレクションがスレッド セーフではないことを意味する <see langword="false" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value of &lt;see langword=&quot;false&quot; /&gt;, which means that the collection is not thread safe.">コレクションがスレッド セーフではないことを意味する <see cref="T:System.Boolean" /> 値 (<see langword="false" />) を返します。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object at the specified index in the collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> プロパティは、コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the index in the collection. The index is zero based.">コレクション内のインデックスを表す <see cref="T:System.Int32" /> 値。 インデックスは 0 から始まります。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object at the specified index.">指定したインデックスの位置にある <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)&quot; /&gt; method removes a recipient from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> メソッドは、受取人を <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションから削除します。</summary>
      <param name="recipient" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the recipient to remove from the collection.">コレクションから削除する受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;recipient&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipient" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot&quot; /&gt; property retrieves an &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> プロパティは、<see cref="T:System.Object" /> コレクションへのアクセスを同期化するための <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object that is used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Object" /> コレクションへのアクセスを同期するために使用する <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; class provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションの列挙機能を提供します。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> では、<see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the current recipient in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの現在の受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext&quot; /&gt; method advances the enumeration to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの次の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトに列挙子を進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object; &lt;see langword=&quot;false&quot; /&gt; if the enumeration moved past the last item in the enumeration.">列挙子を正常に次の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトに進めることができた場合は <see langword="true" /> を、列挙子が列挙体の最後の項目を越えた場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset&quot; /&gt; method resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの最初の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトに列挙子をリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the current recipient in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの現在の受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary vsli:raw="Represents a potential signer for a CMS/PKCS#7 signed message.">CMS/PKCS#7 署名付きメッセージでの署名者候補を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with default values.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class from a persisted key.">保存されているキーから <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameters" vsli:raw="The CSP parameters to describe which signing key to use.">使用する署名キーを記述する CSP パラメーター。</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core のみ: このメンバーはサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified subject identifier type.">指定したサブジェクト識別子型を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="signerIdentifierType" vsli:raw="The scheme to use for identifying which signing certificate was used.">使用された署名証明書を識別するために使用するスキーム。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified signer certificate and subject identifier type.">指定した署名者証明書とサブジェクト識別子型を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="signerIdentifierType" vsli:raw="The scheme to use for identifying which signing certificate was used.">使用された署名証明書を識別するために使用するスキーム。</param>
      <param name="certificate" vsli:raw="The certificate whose private key will be used to sign a message.">メッセージの署名に使用される秘密キーを持つ証明書。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified signer certificate, subject identifier type, and private key object.">指定した署名者証明書、サブジェクト識別子型、および秘密キー オブジェクトを使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="signerIdentifierType" vsli:raw="One of the enumeration values that specifies the scheme to use for identifying which signing certificate was used.">使用された署名証明書の識別に使用するスキームを指定する列挙値の 1 つ。</param>
      <param name="certificate" vsli:raw="The certificate whose private key will be used to sign a message.">メッセージの署名に使用される秘密キーを持つ証明書。</param>
      <param name="privateKey" vsli:raw="The private key object to use when signing the message.">メッセージへの署名時に使用する秘密キー オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified signer certificate.">指定した署名者証明書を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificate" vsli:raw="The certificate whose private key will be used to sign a message.">メッセージの署名に使用される秘密キーを持つ証明書。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate&quot; /&gt; property sets or retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2&quot; /&gt; object that represents the signing certificate.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> プロパティは、署名証明書を表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定または取得します。</summary>
      <returns vsli:raw="An  &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2&quot; /&gt; object that represents the signing certificate.">署名証明書を表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary vsli:raw="Gets a collection of certificates which are considered with &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot&quot; /&gt;.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> および <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> と見なされる証明書のコレクションを取得します。</summary>
      <returns vsli:raw="A collection of certificates which are considered with &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot&quot; /&gt;.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> と <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />と見なされる証明書のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary vsli:raw="Gets or sets the algorithm identifier for the hash algorithm to use with the signature.">署名と共に使用するハッシュ アルゴリズムのアルゴリズム識別子を取得または設定します。</summary>
      <returns vsli:raw="The algorithm identifier for the hash algorithm to use with the signature.">署名に使用するハッシュアルゴリズムのアルゴリズム識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary vsli:raw="Gets or sets the option indicating how much of a the signer certificate's certificate chain should be embedded in the signed message.">署名されたメッセージに埋め込む署名者証明書の証明書チェーンの数を示すオプションを取得または設定します。</summary>
      <returns vsli:raw="One of the enumeration values that indicates how much of a the signer certificate's certificate chain should be embedded in the signed message.">署名されたメッセージに埋め込まれる、署名者証明書の証明書チェーンの量を示す列挙値の1つ。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary vsli:raw="Gets or sets the private key object to use during signing.">署名時に使用する秘密キー オブジェクトを取得または設定します。</summary>
      <returns vsli:raw="The private key to use during signing, or &lt;see langword=&quot;null&quot; /&gt; to use the private key associated with the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate&quot; /&gt; property.">署名時に使用する秘密キー、または <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> プロパティに関連付けられている秘密キーを使用する <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary vsli:raw="Gets a collections of attributes to associate with this signature that are also protected by the signature.">この署名に関連付けられ、この署名に保護もされている属性のコレクションを取得します。</summary>
      <returns vsli:raw="A collections of attributes to associate with this signature that are also protected by the signature.">署名によっても保護されている、このシグネチャに関連付ける属性のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary vsli:raw="Gets the scheme to use for identifying which signing certificate was used.">使用された署名証明書を識別するために使用するスキームを取得します。</summary>
      <returns vsli:raw="The scheme to use for identifying which recipient certificate was used.">使用された受信者の証明書を識別するために使用するスキーム。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary vsli:raw="Gets a collections of attributes to associate with this signature that are not protected by the signature.">この署名に関連付けられているが、この署名に保護はされていない属性のコレクションを取得します。</summary>
      <returns vsli:raw="A collections of attributes to associate with this signature that are not protected by the signature.">署名によって保護されていない、この署名に関連付ける属性のコレクション。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; class represents the CMS/PKCS #7 ContentInfo data structure as defined in the CMS/PKCS #7 standards document. This data structure is the basis for all CMS/PKCS #7 messages.">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> クラスは、CMS/PKCS #7 標準文書で規定されている CMS/PKCS #7 ContentInfo データ構造体を表します。 このデータ構造体は、すべての CMS/PKCS #7 メッセージの基礎となるものです。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])&quot; /&gt; constructor  creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; class by using an array of byte values as the data and a default &lt;paramref name=&quot;object identifier&quot; /&gt; (OID) that represents the content type.">
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> コンストラクターは、データを表すバイト値配列と、コンテンツ タイプを表す既定の <paramref name="object identifier" /> (OID) を使用し、<see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> クラスのインスタンスを作成します。</summary>
      <param name="content" vsli:raw="An array of byte values that represents the data from which to create the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクトの作成に使用するデータのバイト値配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference  was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])&quot; /&gt; constructor  creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; class by using the specified content type and an array of byte values as the data.">
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> コンストラクターは、指定されたコンテンツ タイプおよびデータのバイト値配列を使用して、<see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> クラスのインスタンスを作成します。</summary>
      <param name="contentType" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains an &lt;c&gt;object identifier&lt;/c&gt; (OID) that specifies the content type of the content. This can be data, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData, or signedData.  For more information, see  Remarks.">コンテンツ タイプを指定する <c>object identifier</c> (OID) が格納された <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。 コンテンツ タイプには、data、digestedData、encryptedData、envelopedData、hashedData、signedAndEnvelopedData、signedData のいずれかを指定します。  詳細については、「解説」を参照してください。</param>
      <param name="content" vsli:raw="An array of byte values that represents the data from which to create the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクトの作成に使用するデータのバイト値配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference  was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.ContentInfo.Content&quot; /&gt; property  retrieves the content of the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> プロパティは、CMS/PKCS #7 メッセージのコンテンツを取得します。</summary>
      <returns vsli:raw="An array of byte values that represents the content data.">コンテンツ データを表すバイト値配列。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType&quot; /&gt; property  retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the &lt;paramref name=&quot;object identifier&quot; /&gt; (OID)  of the content type of the inner content of the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> プロパティは、CMS/PKCS #7 メッセージの内部コンテンツ タイプの <paramref name="object identifier" /> (OID) を保持する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the OID value that represents the content type.">コンテンツタイプを表す OID 値を格納しているオブジェクト。 <see cref="T:System.Security.Cryptography.Oid" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary vsli:raw="Retrieves the outer content type of an encoded CMS ContentInfo message.">
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" /> 静的メソッドは、バイト値配列で表現されたエンコード済み <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの外部コンテンツ タイプを取得します。</summary>
      <param name="encodedMessage" vsli:raw="An array of byte values that represents the encoded CMS ContentInfo message from which to retrieve the outer content type.">外部コンテンツ タイプを取得する、エンコード済み <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージを表すバイト値配列。</param>
      <returns vsli:raw="The outer content type of the specified encoded CMS ContentInfo message.">メソッドが成功した場合は、指定されたエンコード済み <see cref="T:System.Security.Cryptography.Oid" /> メッセージの外部コンテンツ タイプを保持する <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクトが返されます。
メソッドが失敗した場合、例外がスローされます。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; cannot be decoded as a valid CMS ContentInfo value.">暗号操作時にエラーが発生しました。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary vsli:raw="Represents a CMS/PKCS#7 structure for enveloped data.">エンベロープ データの CMS/PKCS#7 構造体を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.EnvelopedCms&quot; /&gt; class with default values.">
        <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.EnvelopedCms&quot; /&gt; class with specified content information.">指定された内容の情報を使用して、<see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="contentInfo" vsli:raw="The message content to encrypt.">暗号化するメッセージの内容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;contentInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentInfo" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.EnvelopedCms&quot; /&gt; class with a specified symmetric encryption algorithm and content information.">指定された対称暗号化アルゴリズムと内容の情報を使用して、<see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="contentInfo" vsli:raw="The message content to encrypt.">暗号化するメッセージの内容。</param>
      <param name="encryptionAlgorithm" vsli:raw="The identifier for the symmetric encryption algorithm to use when encrypting the message content.">メッセージの内容を暗号化するときに使用する対称暗号化アルゴリズムの識別子。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;contentInfo&quot; /&gt; or &lt;paramref name=&quot;encryptionAlgorithm&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentInfo" /> パラメーターまたは <paramref name="encryptionAlgorithm" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary vsli:raw="Gets the collection of certificates associated with the enveloped CMS/PKCS#7 message.">エンベロープ CMS/PKCS#7 メッセージに関連付けられた証明書のコレクションを取得します。</summary>
      <returns vsli:raw="The collection of certificates associated with the enveloped CMS/PKCS#7 message.">CMS/PKCS # 7 エンベロープメッセージに関連付けられている証明書のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary vsli:raw="Gets the identifier of the symmetric encryption algorithm associated with this message.">このメッセージに関連付けられている対称暗号化アルゴリズムの識別子を取得します。</summary>
      <returns vsli:raw="The identifier of the symmetric encryption algorithm associated with this message.">このメッセージに関連付けられている対称暗号化アルゴリズムの識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary vsli:raw="Gets the content information for the enveloped CMS/PKCS#7 message.">エンベロープ CMS/PKCS#7 メッセージの内容の情報を取得します。</summary>
      <returns vsli:raw="The content information for the enveloped CMS/PKCS#7 message.">CMS/PKCS # 7 エンベロープメッセージのコンテンツ情報。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary vsli:raw="Decodes an array of bytes as a CMS/PKCS#7 EnvelopedData message.">CMS/PKCS#7 EnvelopedData メッセージとしてバイトの配列をデコードします。</summary>
      <param name="encodedMessage" vsli:raw="The byte array containing the sequence of bytes to decode.">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;encodedMessage&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encodedMessage" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encodedMessage&quot; /&gt; parameter was not successfully decoded.">
        <paramref name="encodedMessage" /> パラメーターが正常にデコードされませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via any available recipient by searching certificate stores for a matching certificate and key.">証明書ストアで一致する証明書とキーを検索することにより、使用可能な任意の受信者で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via a specified recipient info by searching certificate stores for a matching certificate and key.">証明書ストアで一致する証明書とキーを検索することにより、指定された受信者の情報で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <param name="recipientInfo" vsli:raw="The recipient info to use for decryption.">暗号化解除に使用する受信者の情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipientInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipientInfo" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via a specified recipient info with a specified private key.">指定された受信者情報と指定された秘密キーを使用して、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <param name="recipientInfo" vsli:raw="The recipient info to use for decryption.">暗号化解除に使用する受信者の情報。</param>
      <param name="privateKey" vsli:raw="The private key to use to decrypt the recipient-specific information.">受信者固有の情報の暗号化解除に使用する秘密キー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipientInfo&quot; /&gt; or &lt;paramref name=&quot;privateKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipientInfo" /> パラメーターまたは <paramref name="privateKey" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via a specified recipient info by searching certificate stores and a provided collection for a matching certificate and key.">証明書ストアと提供されたコレクションで一致する証明書とキーを検索することにより、指定された受信者の情報で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <param name="recipientInfo" vsli:raw="The recipient info to use for decryption.">暗号化解除に使用する受信者の情報。</param>
      <param name="extraStore" vsli:raw="A collection of certificates to use in addition to the certificate stores for finding a recipient certificate and private key.">受信者の証明書と秘密キーを検索するために、証明書ストアに加えて使用する証明書のコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipientInfo&quot; /&gt; or &lt;paramref name=&quot;extraStore&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipientInfo" /> パラメーターまたは <paramref name="extraStore" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via any available recipient info by searching certificate stores and a provided collection for a matching certificate and key.">証明書ストアと提供されたコレクションで一致する証明書とキーを検索することにより、使用可能な任意の受信者の情報で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を復号化します。</summary>
      <param name="extraStore" vsli:raw="A collection of certificates to use in addition to the certificate stores for finding a recipient certificate and private key.">受信者の証明書と秘密キーを検索するために、証明書ストアに加えて使用する証明書のコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;extraStore&quot; /&gt; parameter was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="extraStore" /> パラメーターは <see langword="null" /> でした。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary vsli:raw="Encodes the contents of the enveloped CMS/PKCS#7 message and returns it as a byte array.">エンベロープ CMS/PKCS#7 メッセージの内容をエンコードし、バイト配列として返します。</summary>
      <returns vsli:raw="A byte array representing the encoded form of the CMS/PKCS#7 message.">CMS/PKCS#7 メッセージのエンコード形式を表すバイト配列。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="Encrypts the contents of the CMS/PKCS#7 message for a single specified recipient.">指定された 1 人の受信者に対する CMS/PKCS#7 メッセージの内容を暗号化します。</summary>
      <param name="recipient" vsli:raw="The recipient information describing the single recipient of this message.">このメッセージの 1 人の受信者が記述されている受信者情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipient&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipient" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary vsli:raw="Encrypts the contents of the CMS/PKCS#7 message for one or more recipients.">1 人以上の受信者に対する CMS/PKCS#7 メッセージの内容を暗号化します。</summary>
      <param name="recipients" vsli:raw="A collection describing the recipients for the message.">メッセージの受信者が記述されているコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipients&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipients" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary vsli:raw="Gets a collection that represents the recipients list for a decoded message. The default value is an empty collection.">デコードされたメッセージの受信者リストを表すコレクションを取得します。 既定値は空のコレクションです。</summary>
      <returns vsli:raw="A collection that represents the recipients list for a decoded message. The default value is an empty collection.">デコードされたメッセージの受信者リストを表すコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary vsli:raw="Gets the collection of unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS#7 message.">エンベロープ CMS/PKCS#7 メッセージに関連付けられた非保護 (非暗号化) 属性のコレクションを取得します。</summary>
      <returns vsli:raw="The collection of unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS#7 message.">CMS/PKCS # 7 エンベロープメッセージに関連付けられている、保護されていない (暗号化されていない) 属性のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary vsli:raw="Gets the version of the decoded enveloped CMS/PKCS#7 message.">デコードされたエンベロープ CMS/PKCS#7 メッセージのバージョンを取得します。</summary>
      <returns vsli:raw="The version of the decoded enveloped CMS/PKCS#7 message.">デコードされた CMS/PKCS # 7 メッセージのバージョン。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo&quot; /&gt; class defines key agreement recipient information. Key agreement algorithms typically use the Diffie-Hellman key agreement algorithm, in which the two parties that establish a shared cryptographic key both take part in its generation and, by definition, agree on that key. This is in contrast to key transport algorithms, in which one party generates the key unilaterally and sends, or transports it, to the other party.">
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> クラスは、キーの承諾の受取人情報を定義します。 キーの承諾アルゴリズムでは、共有用の暗号化キーの生成に双方が関わり、使用するキーについて相互の承諾を確立する Diffie-Hellman キーの承諾アルゴリズムを使用するのが一般的です。 これは、当事者の一人がキーを生成し、一方的に相手に送信するキー トランスポートアルゴリズムとは対照的です。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date&quot; /&gt; property retrieves the date and time of the start of the key agreement protocol by the originator.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> プロパティは、差出人によるキーの承諾プロトコルの開始日時を取得します。</summary>
      <returns vsli:raw="The date and time of the start of the key agreement protocol by the originator.">差出人によるキーの承諾プロトコルの開始日時。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The recipient identifier type is not a subject key identifier.">受取人識別子タイプがサブジェクト キー識別子ではありません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey&quot; /&gt; property retrieves the encrypted recipient keying material.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> プロパティは、受取人用の暗号化されたキー マテリアル (暗号化キーにおける関係を確立、維持するために必要な情報) を取得します。</summary>
      <returns vsli:raw="An array of byte values that contain the encrypted recipient keying material.">受取人用の暗号化されたキー マテリアルが格納されるバイト値配列です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm&quot; /&gt; property retrieves the algorithm used to perform the key agreement.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> プロパティは、キーの承諾を実行するためのアルゴリズムを取得します。</summary>
      <returns vsli:raw="The value of the algorithm used to perform the key agreement.">キーの承諾を実行するために使用されるアルゴリズムの値。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey&quot; /&gt; property retrieves information about the originator of the key agreement for key agreement algorithms that warrant it.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> プロパティは、キーの承諾の差出人に関する情報を取得します。キーの承諾アルゴリズムでは、この情報を基に差出人が証明されます。</summary>
      <returns vsli:raw="An object that contains information about the originator of the key agreement.">キーの承諾の差出人についての情報を保持するオブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute&quot; /&gt; property retrieves attributes of the keying material.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> プロパティは、キー マテリアルの属性を取得します。</summary>
      <returns vsli:raw="The attributes of the keying material.">キー マテリアルの属性。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The recipient identifier type is not a subject key identifier.">受取人識別子タイプがサブジェクト キー識別子ではありません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier&quot; /&gt; property retrieves the identifier of the recipient.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> プロパティは、受取人の識別子を取得します。</summary>
      <returns vsli:raw="The identifier of the recipient.">受信者の識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version&quot; /&gt; property retrieves the version of the key agreement recipient. This is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key agreement algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> プロパティは、キーの承諾における受取人の CMS バージョン番号を取得します。 キーの承諾における受取人の CMS バージョン番号は、このクラスのオブジェクトに対して自動的に設定され、この値によって、受取人がキーの承諾アルゴリズムに参加していることが示されます。</summary>
      <returns vsli:raw="The version of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> オブジェクトのバージョン。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo&quot; /&gt; class defines key transport recipient information.        Key transport algorithms typically use the RSA algorithm, in which  an originator establishes a shared cryptographic key with a recipient by generating that key and  then transporting it to the recipient. This is in contrast to key agreement algorithms, in which the two parties that will be using a cryptographic key both take part in its generation, thereby mutually agreeing to that key.">
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> クラスは、キー トランスポートの受取人情報を定義します。        キー トランスポート アルゴリズムでは、差出人が共有用の暗号化キーを生成し、それを受取人に配布することによって、受取人との間で暗号化通信を可能にする RSA アルゴリズムを使用するのが一般的です。 これは、当事者の双方がキーの生成に関わることによって、使用する暗号化キーについて相互の合意を確立するキーの承諾アルゴリズムとは対照的です。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey&quot; /&gt; property retrieves the encrypted key for this key transport recipient.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> プロパティは、キー トランスポートの受取人用の暗号化キーを取得します。</summary>
      <returns vsli:raw="An array of byte values that represents the encrypted key.">暗号化キーを表すバイト値配列です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm&quot; /&gt; property retrieves the key encryption algorithm used to encrypt the content encryption key.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> プロパティは、コンテンツ暗号化キーを暗号化するためのキー暗号化アルゴリズムを取得します。</summary>
      <returns vsli:raw="An  &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; object that stores the key encryption algorithm identifier.">キー暗号化アルゴリズム識別子を格納するオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier&quot; /&gt; property retrieves the subject identifier associated with the encrypted content.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> プロパティは、暗号化コンテンツに関連付けられたサブジェクト識別子を取得します。</summary>
      <returns vsli:raw="A   &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; object that  stores the identifier of the recipient taking part in the key transport.">キートランスポートに参加している受信者の識別子を格納するオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version&quot; /&gt; property retrieves the version of the key transport recipient. The version of the key transport recipient is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key transport algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> プロパティは、キー トランスポートにおける受取人の CMS バージョン番号を取得します。 キー トランスポートにおける受取人の CMS バージョン番号は、このクラスのオブジェクトに対して自動的に設定され、この値によって、受取人がキー トランスポート アルゴリズムに参加していることが示されます。</summary>
      <returns vsli:raw="An int value that represents the version of the key transport &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object.">キー トランスポートにおける <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトの CMS バージョン番号を表す整数値です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary vsli:raw="Enables the creation of PKCS#12 PFX data values. This class cannot be inherited.">PKCS # 12 PFX データ値の作成を有効にします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary vsli:raw="Initializes a new value of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12Builder&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> クラスの新しい値を初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a byte-based password from a byte array.">PFX に、バイト配列からバイトベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX に追加するコンテンツ。</param>
      <param name="passwordBytes" vsli:raw="The byte array to use as a password when encrypting the contents.">コンテンツを暗号化するときにパスワードとして使用するバイト配列。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;pbeParameters&quot; /&gt; indicates that &lt;see cref=&quot;F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12&quot; /&gt; should be used, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.">
        <paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a byte-based password from a span.">PFX に、スパンからバイトベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX に追加するコンテンツ。</param>
      <param name="passwordBytes" vsli:raw="The byte span to use as a password when encrypting the contents.">コンテンツを暗号化するときにパスワードとして使用するバイト スパン。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;pbeParameters&quot; /&gt; indicates that &lt;see cref=&quot;F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12&quot; /&gt; should be used, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.">
        <paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a char-based password from a span.">PFX に、スパンから文字列ベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX に追加するコンテンツ。</param>
      <param name="password" vsli:raw="The span to use as a password when encrypting the contents.">コンテンツを暗号化するときにパスワードとして使用するスパン。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a char-based password from a string.">PFX に、文字列から文字列ベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX に追加するコンテンツ。</param>
      <param name="password" vsli:raw="The string to use as a password when encrypting the contents.">コンテンツを暗号化するときにパスワードとして使用する文字列。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary vsli:raw="Add contents to the PFX without encrypting them.">PFX には暗号化せずにコンテンツを追加します。</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX に追加するコンテンツ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary vsli:raw="Encodes the contents of a sealed PFX and returns it as a byte array.">封印された PFX のコンテンツをエンコードし、それをバイト配列として返します。</summary>
      <returns vsli:raw="A byte array representing the encoded form of the PFX.">PFX のエンコードされた形式を表すバイト配列。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is not sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">PFX は封印されていません (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は <see langword="false" />)。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether the PFX data has been sealed.">PFX データが封印されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="A value that indicates whether the PFX data has been sealed.">PFX データが封印されているかどうかを示す値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary vsli:raw="Seals the PFX against further changes by applying a password-based Message Authentication Code (MAC) over the contents with a password from a span.">スパンからのパスワードを使用し、パスワードベースのメッセージ認証コード (MAC) をコンテンツに適用することによって、これ以上変更されないように PFX を封印します。</summary>
      <param name="password" vsli:raw="The password to use as a key for computing the MAC.">MAC の計算のキーとして使用するパスワード。</param>
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use when computing the MAC.">MAC の計算で使用するハッシュ アルゴリズム。</param>
      <param name="iterationCount" vsli:raw="The iteration count for the Key Derivation Function (KDF) used in computing the MAC.">MAC の計算で使用されるキー派生関数 (KDF) の反復回数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;iterationCount&quot; /&gt; parameter is less than or equal to 0.">
        <paramref name="iterationCount" /> パラメーターが 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary vsli:raw="Seals the PFX against further changes by applying a password-based Message Authentication Code (MAC) over the contents with a password from a string.">文字列からのパスワードを使用し、パスワードベースのメッセージ認証コード (MAC) を、コンテンツに適用することによって、これ以上変更されないように PFX を封印します。</summary>
      <param name="password" vsli:raw="The password to use as a key for computing the MAC.">MAC の計算のキーとして使用するパスワード。</param>
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use when computing the MAC.">MAC の計算で使用するハッシュ アルゴリズム。</param>
      <param name="iterationCount" vsli:raw="The iteration count for the Key Derivation Function (KDF) used in computing the MAC.">MAC の計算で使用されるキー派生関数 (KDF) の反復回数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;iterationCount&quot; /&gt; parameter is less than or equal to 0.">
        <paramref name="iterationCount" /> パラメーターが 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary vsli:raw="Seals the PFX from further changes without applying tamper-protection.">改ざん防止を適用せずに、これ以上変更されないように PFX を封印します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to encode the contents of a sealed PFX into a provided buffer.">指定したバッファーへの封印された PFX のコンテンツのエンコードが試行されます。</summary>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#12 PFX data.">PKCS#12 PFX データを受け取るバイト スパン。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is not sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">PFX は封印されていません (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は <see langword="false" />)。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary vsli:raw="Represents the PKCS#12 CertBag. This class cannot be inherited.">PKCS#12 CertBag を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12CertBag&quot; /&gt; class using the specified certificate type and encoding.">指定した証明書の種類とエンコードを使って、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificateType" vsli:raw="The Object Identifier (OID) for the certificate type.">証明書の種類のオブジェクト識別子 (OID) です。</param>
      <param name="encodedCertificate" vsli:raw="The encoded certificate value.">エンコードされた証明書の値です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificateType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificateType" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encodedCertificate&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="encodedCertificate" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary vsli:raw="Gets the uninterpreted certificate contents of the CertSafeBag.">CertSafeBag の解釈されていない証明書のコンテンツを取得します。</summary>
      <returns vsli:raw="The uninterpreted certificate contents of the CertSafeBag.">CertSafeBag の解釈されていない証明書の内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary vsli:raw="Gets the contents of the CertBag interpreted as an X.509 public key certificate.">X.509 公開キー証明書として解釈される CertBag のコンテンツを取得します。</summary>
      <returns vsli:raw="A certificate decoded from the contents of the CertBag.">CertBag のコンテンツからデコードされた証明書。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The content type is not the X.509 public key certificate content type.">コンテンツの種類が、x.509 公開キー証明書のコンテンツの種類ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The contents were not valid for the X.509 certificate content type.">コンテンツが、x.509 証明書のコンテンツの種類に対して有効ではありませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary vsli:raw="Gets the Object Identifier (OID) which identifies the content type of the encoded certificte value.">エンコードされた証明書の値のコンテンツの種類を識別するオブジェクト識別子 (OID) を取得します。</summary>
      <returns vsli:raw="The Object Identifier (OID) which identifies the content type of the encoded certificate value.">エンコードされた証明書の値のコンテンツの種類を識別するオブジェクト識別子 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary vsli:raw="Gets a value indicating whether the content type of the encoded certificate value is the X.509 public key certificate content type.">エンコードされた証明書の値のコンテンツの種類が、x.509 公開キー証明書のコンテンツの種類であるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the content type is the X.509 public key certificate content type (1.2.840.113549.1.9.22.1); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンテンツの種類が x.509 公開キー証明書のコンテンツタイプ (1.2.840.113549.1.9.22.1) である場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary vsli:raw="Represents the kind of encryption associated with a PKCS#12 SafeContents value.">PKCS#12 SafeContents 値で関連付けられている暗号化の種類を表わします。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary vsli:raw="The SafeContents value is not encrypted.">SafeContents 値は暗号化されていません。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary vsli:raw="The SafeContents value is encrypted with a password.">SafeContents 値はパスワードで暗号化されています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary vsli:raw="The SafeContents value is encrypted using public key cryptography.">SafeContents 値は、公開キー暗号を使用して暗号化されています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary vsli:raw="The kind of encryption applied to the SafeContents is unknown or could not be determined.">SafeContents に適用されている暗号化の種類は不明であるか、判断できません。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary vsli:raw="Represents the data from PKCS#12 PFX contents. This class cannot be inherited.">PKCS#12 PFX の内容からのデータを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary vsli:raw="Gets a read-only collection of the SafeContents values present in the PFX AuthenticatedSafe.">PFX AuthenticatedSafe 内に存在する SafeContents 値の読み取り専用のコレクションを取得します。</summary>
      <returns vsli:raw="A read-only collection of the SafeContents values present in the PFX AuthenticatedSafe.">PFX 認証 Atedsafe に存在する SafeContents 値の読み取り専用コレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary vsli:raw="Reads the provided data as a PKCS#12 PFX and returns an object view of the contents.">指定されたデータを PKCS#12 PFX として読み取り、その内容のオブジェクト ビューを返します。</summary>
      <param name="encodedBytes" vsli:raw="The data to interpret as a PKCS#12 PFX.">PKCS#12 PFX として解釈されるデータ。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains a value that indicates the number of bytes from &lt;paramref name=&quot;encodedBytes&quot; /&gt; which were read by this method. This parameter is treated as uninitialized.">このメソッドから戻ったときには、このメソッドによって <paramref name="encodedBytes" /> から読み取られたバイト数を示す値が格納されています。 このパラメーターは初期化前として処理されます。</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;encodedBytes&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">防御用のコピーを作成しないで <paramref name="encodedBytes" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <returns vsli:raw="An object view of the PKCS#12 PFX decoded from the input.">入力からデコードされた PKCS#12 PFX のオブジェクト ビュー。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The contents of the &lt;paramref name=&quot;encodedBytes&quot; /&gt; parameter were not successfully decoded as a PKCS#12 PFX.">
        <paramref name="encodedBytes" /> パラメーターの内容は、PKCS#12 PFX として正常にデコードされませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary vsli:raw="Gets a value that indicates the type of tamper protection provided for the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容に対して提供されている改ざん防止の種類を示す値を取得します。</summary>
      <returns vsli:raw="One of the enumeration members that indicates the type of tamper protection provided for the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> コンテンツに対して提供される改ざん防止の種類を示す列挙体メンバーの1つ。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Attempts to verify the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents with a password represented by a &lt;c&gt;System.ReadOnlySpan{System.Char}&lt;/c&gt;.">
        <c>System.ReadOnlySpan {System.Char}</c> で表されるパスワードを使用して、<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> コンテンツの整合性の検証を試みます。</summary>
      <param name="password" vsli:raw="The password to use to attempt to verify integrity.">整合性の検証を試みるために使用されるパスワード。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the password successfully verifies the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents; &lt;see langword=&quot;false&quot; /&gt; if the password is not correct or the contents have been altered.">パスワードによって <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性が正常に検証された場合は <see langword="true" />、パスワードが正しくない場合、または内容が変更されている場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode&quot; /&gt; value is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> の値が <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The hash algorithm option specified by the PKCS#12 PFX contents could not be identified or is not supported by this platform.">PKCS#12 PFX の内容によって指定されたハッシュ アルゴリズム オプションは、識別できなかったか、またはこのプラットフォームでサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary vsli:raw="Attempts to verify the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents with a password represented by a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" /> によって表されたパスワードを使用して、<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性の検証を試みます。</summary>
      <param name="password" vsli:raw="The password to use to attempt to verify integrity.">整合性の検証を試みるために使用されるパスワード。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the password successfully verifies the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents; &lt;see langword=&quot;false&quot; /&gt; if the password is not correct or the contents have been altered.">パスワードによって <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性が正常に検証された場合は <see langword="true" />、パスワードが正しくない場合、または内容が変更されている場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode&quot; /&gt; value is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> の値が <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The hash algorithm option specified by the PKCS#12 PFX contents could not be identified or is not supported by this platform.">PKCS#12 PFX の内容によって指定されたハッシュ アルゴリズム オプションは、識別できなかったか、またはこのプラットフォームでサポートされていません。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary vsli:raw="Represents the type of anti-tampering applied to a PKCS#12 PFX value.">PKCS#12 PFX 値に適用された改ざん防止の種類を表わします。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary vsli:raw="The PKCS#12 PFX value is not protected from tampering.">PKCS#12 PFX 値は改ざんから守られていません。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary vsli:raw="The PKCS#12 PFX value is protected from tampering with a Message Authentication Code (MAC) keyed with a password.">PKCS#12 PFX 値は、パスワードで鍵を掛ける Message Authentication Code (MAC) で改ざんから守られています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary vsli:raw="The PKCS#12 PFX value is protected from tampering with a digital signature using public key cryptography.">PKCS#12 PFX 値は、公開キー暗号を利用したデジタル署名により改ざんから守られています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary vsli:raw="The type of anti-tampering applied to the PKCS#12 PFX is unknown or could not be determined.">PKCS#12 PFX に適用されている改ざん防止の種類は不明であるか、判断できません。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary vsli:raw="Represents the KeyBag from PKCS#12, a container whose contents are a PKCS#8 PrivateKeyInfo. This class cannot be inherited.">PKCS#12 の KeyBag を表します。これは、コンテンツが PKCS#8 PrivateKeyInfo であるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag&quot; /&gt; from an existing encoded PKCS#8 PrivateKeyInfo value.">既存のエンコードされた PKCS#8 PrivateKeyInfo 値から、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> の新しいインスタンスを初期化します。</summary>
      <param name="pkcs8PrivateKey" vsli:raw="A BER-encoded PKCS#8 PrivateKeyInfo value.">BER でエンコードされた PKCS#8 PrivateKeyInfo 値。</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;pkcs8PrivateKey&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">防御用のコピーを作成しないで <paramref name="pkcs8PrivateKey" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;pkcs8privateKey&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="pkcs8privateKey" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary vsli:raw="Gets a memory value containing the PKCS#8 PrivateKeyInfo value transported by this bag.">このバッグによって転送された PKCS#8 PrivateKeyInfo 値を格納しているメモリ値を取得します。</summary>
      <returns vsli:raw="A memory value containing the PKCS#8 PrivateKeyInfo value transported by this bag.">このバッグによって転送された PKCS # 8 PrivateKeyInfo 値を含むメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary vsli:raw="Defines the core behavior of a SafeBag value from the PKCS#12 specification and provides a base for derived classes.">PKCS#12 仕様からの SafeBag 値のコア動作を定義し、派生クラスの基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Called from constructors in derived classes to initialize the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" /> クラスを初期化するために、派生クラスのコンストラクターから呼び出されます。</summary>
      <param name="bagIdValue" vsli:raw="The Object Identifier (OID), in dotted decimal form, indicating the data type of this SafeBag.">この SafeBag のデータ型を示す、ドット 10 進形式のオブジェクト識別子 (OID)。</param>
      <param name="encodedBagValue" vsli:raw="The ASN.1 BER encoded value of the SafeBag contents.">SafeBag の内容の ASN.1 BER でエンコードされた値。</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;encodedBagValue&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">防御用のコピーを作成しないで <see langword="true" /> を格納する場合は <paramref name="encodedBagValue" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;bagIdValue&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or the empty string.">
        <paramref name="bagIdValue" /> パラメーターが <see langword="null" /> または空の文字列です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encodedBagValue&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="encodedBagValue" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary vsli:raw="Gets the modifiable collection of attributes to encode with the SafeBag value.">SafeBag 値でエンコードする属性の変更可能なコレクションを取得します。</summary>
      <returns vsli:raw="The modifiable collection of attributes to encode with the SafeBag value.">SafeBag 値を使用してエンコードする属性の変更可能なコレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary vsli:raw="Encodes the SafeBag value and returns it as a byte array.">SafeBag 値をエンコードし、それをバイト配列として返します。</summary>
      <returns vsli:raw="A byte array representing the encoded form of the SafeBag.">SafeBag のエンコードされた形式を表すバイト配列。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The object identifier value passed to the constructor was invalid.">コンストラクターに渡されたオブジェクト識別子の値が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary vsli:raw="Gets the ASN.1 BER encoding of the contents of this SafeBag.">この SafeBag の内容の ASN.1 BER エンコードを取得します。</summary>
      <returns vsli:raw="The ASN.1 BER encoding of the contents of this SafeBag.">この SafeBag の内容の asn.1 BER エンコード。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary vsli:raw="Gets the Object Identifier (OID) identifying the content type of this SafeBag.">この SafeBag のコンテンツ タイプを示すオブジェクト識別子 (OID) を取得します。</summary>
      <returns vsli:raw="The Object Identifier (OID) identifying the content type of this SafeBag.">この SafeBag のコンテンツ タイプを示すオブジェクト識別子 (OID)。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to encode the SafeBag value into a provided buffer.">指定されたバッファーへの SafeBag の値のエンコードを試みます。</summary>
      <param name="destination" vsli:raw="The byte span to receive the encoded SafeBag value.">エンコードされた SafeBag の値を受け取るためのバイト スパン。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The object identifier value passed to the constructor was invalid.">コンストラクターに渡されたオブジェクト識別子の値が無効です。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary vsli:raw="Represents a PKCS#12 SafeContents value. This class cannot be inherited.">PKCS#12 SafeContents 値を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Adds a certificate to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12CertBag&quot; /&gt; and returns the newly created bag instance.">新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> を介して証明書を SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="certificate" vsli:raw="The certificate to add.">追加する証明書。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is in an invalid state.">
        <paramref name="certificate" /> パラメーターが無効な状態です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Adds an asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag&quot; /&gt; and returns the newly created bag instance.">新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> を介して非対称秘密キーを SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">追加する非対称秘密キー。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary vsli:raw="Adds a nested SafeContents to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag&quot; /&gt; and returns the newly created bag instance.">新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" /> を介して入れ子になった SafeContents を SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="safeContents" vsli:raw="The nested contents to add to the SafeContents.">SafeContents に追加する入れ子になったコンテンツ。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter is encrypted.">
        <paramref name="safeContents" /> パラメーターは暗号化されています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary vsli:raw="Adds a SafeBag to the SafeContents.">SafeContents に SafeBag を追加します。</summary>
      <param name="safeBag" vsli:raw="The SafeBag value to add.">追加する SafeBag 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeBag&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeBag" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Adds an ASN.1 BER-encoded value with a specified type identifier to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag&quot; /&gt; and returns the newly created bag instance.">新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" /> を介して、指定された型識別子を持つ ASN.1 BER でエンコードされた値を SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="secretType" vsli:raw="The Object Identifier (OID) which identifies the data type of the secret value.">シークレット値のデータ型を識別するオブジェクト識別子 (OID)。</param>
      <param name="secretValue" vsli:raw="The BER-encoded value representing the secret to add.">追加するシークレットを表す、BER でエンコードされた値。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;secretType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secretType" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;secretValue&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="secretValue" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a byte-based password in an array and returns the newly created bag instance.">配列内のバイトベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">追加する非対称秘密キー。</param>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a byte-based password in a span and returns the newly created bag instance.">スパン内のバイトベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">追加する非対称秘密キー。</param>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a character-based password in a span and returns the newly created bag instance.">スパン内の文字ベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">追加する非対称秘密キー。</param>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a character-based password in a string and returns the newly created bag instance.">文字列内の文字ベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">追加する非対称秘密キー。</param>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary vsli:raw="Gets a value that indicates the type of encryption applied to the contents.">コンテンツに適用される暗号化の種類を示す値を取得します。</summary>
      <returns vsli:raw="One of the enumeration values that indicates the type of encryption applied to the contents. The default value is &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None&quot; /&gt;.">コンテンツに適用される暗号化の種類を示す列挙値の1つ。 既定値は <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" /> です。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a byte-based password from an array.">配列のバイトベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password for decrypting the encrypted contents.">暗号化されたコンテンツの暗号化を解除するためのパスワードとして使用するバイト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">パスワードが正しくありません。

または -

コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a byte-based password from a span.">スパンのバイトベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password for decrypting the encrypted contents.">暗号化されたコンテンツの暗号化を解除するためのパスワードとして使用するバイト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">パスワードが正しくありません。
または
コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a character-based password from a span.">スパンの文字ベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="password" vsli:raw="The password to use for decrypting the encrypted contents.">暗号化されたコンテンツの暗号化を解除するために使用するパスワード。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">パスワードが正しくありません。
または
コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a character-based password from a string.">文字列の文字ベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="password" vsli:raw="The password to use for decrypting the encrypted contents.">暗号化されたコンテンツの暗号化を解除するために使用するパスワード。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">パスワードが正しくありません。

または -

コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary vsli:raw="Gets an enumerable representation of the SafeBag values contained within the SafeContents.">SafeContents 内に格納されている SafeBag 値の列挙可能な表現を取得します。</summary>
      <returns vsli:raw="An enumerable representation of the SafeBag values contained within the SafeContents.">SafeContents 内に格納されている SafeBag 値の列挙可能な表現。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The contents are encrypted.">コンテンツは暗号化されています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this instance in a read-only state.">このインスタンスが読み取り専用状態であるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this value is in a read-only state; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />この値が読み取り専用状態である場合は。それ以外<see langword="false" />の場合は。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary vsli:raw="Represents the SafeContentsBag from PKCS#12, a container whose contents are a PKCS#12 SafeContents value. This class cannot be inherited.">PKCS#12 の SafeContentsBag を表します。これは、コンテンツが PKCS#12 SafeContents 値であるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary vsli:raw="Gets the SafeContents value contained within this bag.">このバックに格納されている SafeContents 値を取得します。</summary>
      <returns vsli:raw="The SafeContents value contained within this bag.">このバッグ内に格納されている SafeContents の値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary vsli:raw="Represents the SecretBag from PKCS#12, a container whose contents are arbitrary data with a type identifier. This class cannot be inherited.">PKCS#12 の SecretBag を表します。これは、コンテンツが型識別子を持つ任意のデータであるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary vsli:raw="Gets the Object Identifier (OID) which identifies the data type of the secret value.">シークレット値のデータ型を識別するオブジェクト識別子 (OID) を取得します。</summary>
      <returns vsli:raw="The Object Identifier (OID) which identifies the data type of the secret value.">シークレット値のデータ型を識別するオブジェクト識別子 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary vsli:raw="Gets a memory value containing the BER-encoded contents of the bag.">バッグの BER でエンコードされたコンテンツを格納しているメモリ値を取得します。</summary>
      <returns vsli:raw="A memory value containing the BER-encoded contents of the bag.">バッグの BER でエンコードされたコンテンツを含むメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary vsli:raw="Represents the ShroudedKeyBag from PKCS#12, a container whose contents are a PKCS#8 EncryptedPrivateKeyInfo. This class cannot be inherited.">PKCS#12 の ShroudedKeyBag を表します。これは、コンテンツが PKCS#8 EncryptedPrivateKeyInfo であるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from an existing encoded PKCS#8 EncryptedPrivateKeyInfo value.">既存のエンコードされた PKCS#8 EncryptedPrivateKeyInfo 値から、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> の新しいインスタンスを初期化します。</summary>
      <param name="encryptedPkcs8PrivateKey" vsli:raw="A BER-encoded PKCS#8 EncryptedPrivateKeyInfo value.">BER でエンコードされた PKCS#8 EncryptedPrivateKeyInfo 値。</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;encryptedPkcs8PrivateKey&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">防御用のコピーを作成しないで <paramref name="encryptedPkcs8PrivateKey" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encryptedPkcs8privateKey&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="encryptedPkcs8privateKey" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary vsli:raw="Gets a memory value containing the PKCS#8 EncryptedPrivateKeyInfo value transported by this bag.">このバッグによって転送された PKCS#8 EncryptedPrivateKeyInfo 値を含むメモリ値を取得します。</summary>
      <returns vsli:raw="A memory value containing the PKCS#8 EncryptedPrivateKeyInfo value transported by this bag.">このバッグによって転送された PKCS # 8 EncryptedPrivateKeyInfo 値を格納しているメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary vsli:raw="Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values. This class cannot be inherited.">PKCS#8 の PrivateKeyInfo と EncryptedPrivateKeyInfo の値の検査と作成を有効にします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="algorithmId" vsli:raw="The Object Identifier (OID) identifying the asymmetric algorithm this key is for.">このキーの対象となる非対称アルゴリズムを示すオブジェクト識別子 (OID)。</param>
      <param name="algorithmParameters" vsli:raw="The BER-encoded algorithm parameters associated with this key, or &lt;see langword=&quot;null&quot; /&gt; to omit algorithm parameters when encoding.">このキーに関連付けられている BER でエンコードされたアルゴリズム パラメーター、またはエンコード時にアルゴリズム パラメーターを省略する場合は <see langword="null" />。</param>
      <param name="privateKey" vsli:raw="The algorithm-specific encoded private key.">アルゴリズム固有のエンコードされた秘密キー。</param>
      <param name="skipCopies" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;algorithmParameters&quot; /&gt; and &lt;paramref name=&quot;privateKey&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">防御用のコピーを作成しないで <see langword="true" /> および <paramref name="algorithmParameters" /> を格納する場合は <paramref name="privateKey" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;algorithmId&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="algorithmId" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;algorithmParameters&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, empty, or a single BER-encoded value.">
        <paramref name="algorithmParameters" /> パラメーターが、<see langword="null" /> ではないか、空であるか、または 1 つの BER でエンコードされた値です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary vsli:raw="Gets the Object Identifier (OID) value identifying the algorithm this key is for.">このキーの対象となるアルゴリズムを示すオブジェクト識別子 (OID) の値を取得します。</summary>
      <returns vsli:raw="The Object Identifier (OID) value identifying the algorithm this key is for.">このキーのアルゴリズムを識別するオブジェクト識別子 (OID) 値。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary vsli:raw="Gets a memory value containing the BER-encoded algorithm parameters associated with this key.">このキーに関連付けられている BER でエンコードされたアルゴリズム パラメーターが格納されているメモリ値を取得します。</summary>
      <returns vsli:raw="A memory value containing the BER-encoded algorithm parameters associated with this key, or &lt;see langword=&quot;null&quot; /&gt; if no parameters were present.">このキーに関連付けられている BER でエンコードされたアルゴリズムパラメーターを格納しているメモリ値。または、パラメーターが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary vsli:raw="Gets the modifiable collection of attributes for this private key.">この秘密キーに対する属性の変更可能なコレクションを取得します。</summary>
      <returns vsli:raw="The modifiable collection of attributes to encode with the private key.">秘密キーを使用してエンコードする、変更可能な属性のコレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.">指定されたキーを PKCS#8 PrivateKeyInfo としてエクスポートし、デコードされた解釈を返します。</summary>
      <param name="privateKey" vsli:raw="The private key to represent in a PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo で表す秘密キー。</param>
      <returns vsli:raw="The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.">エクスポートされた PKCS#8 PrivateKeyInfo のデコードされた解釈。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;privateKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="privateKey" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary vsli:raw="Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.">指定されたデータを PKCS#8 PrivateKeyInfo として読み取り、その内容のオブジェクト ビューを返します。</summary>
      <param name="source" vsli:raw="The data to interpret as a PKCS#8 PrivateKeyInfo value.">PKCS#8 PrivateKeyInfo 値として解釈するデータ。</param>
      <param name="bytesRead" vsli:raw="When this method returns, contains a value that indicates the number of bytes read from &lt;paramref name=&quot;source&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;source&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">防御用のコピーを作成しないで <see langword="true" /> を格納する場合は <paramref name="source" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <returns vsli:raw="An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The contents of the &lt;paramref name=&quot;source&quot; /&gt; parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.">
        <paramref name="source" /> パラメーターの内容は、PKCS#8 PrivateKeyInfo として正常にデコードされませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary vsli:raw="Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.">指定されたバイト ベースのパスワードを使用して指定されたデータを復号化し、その出力を PKCS#8 PrivateKeyInfo のオブジェクト ビューにデコードします。</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when decrypting the key material.">キー マテリアルを暗号化解除するときにパスワードとして使用するバイト。</param>
      <param name="source" vsli:raw="The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.">ASN.1-BER エンコードで PKCS#8 EncryptedPrivateKeyInfo 構造体として読み取るデータ。</param>
      <param name="bytesRead" vsli:raw="When this method returns, contains a value that indicates the number of bytes read from &lt;paramref name=&quot;source&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.">復号化されて PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents of &lt;paramref name=&quot;source&quot; /&gt; indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.&#xA;&#xA;-or-&#xA;&#xA;The contents of &lt;paramref name=&quot;source&quot; /&gt; do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.">パスワードが正しくありません。

または -

<paramref name="source" /> のコンテンツは、適用するキー派生関数 (KDF) が、<see cref="T:System.Char" /> ベースのパスワードを必要とするレガシの PKCS#12 KDF であることを示しています。

または -

<paramref name="source" /> のコンテンツは、ASN.1-BER でエンコードされた PKCS#8 EncryptedPrivateKeyInfo 構造体を表していません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary vsli:raw="Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.">指定された文字ベースのパスワードを使用して指定されたデータを復号化し、その出力を PKCS#8 PrivateKeyInfo のオブジェクト ビューにデコードします。</summary>
      <param name="password" vsli:raw="The password to use when decrypting the key material.">キー マテリアルを復号化するときに使用するパスワード。</param>
      <param name="source" vsli:raw="The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.">ASN.1-BER エンコードでの PKCS#8 EncryptedPrivateKeyInfo 構造体のバイト。</param>
      <param name="bytesRead" vsli:raw="When this method returns, contains a value that indicates the number of bytes read from &lt;paramref name=&quot;source&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.">復号化されて PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary vsli:raw="Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.">このインスタンスのプロパティ データを PKCS#8 PrivateKeyInfo としてエンコードし、エンコードをバイト配列として返します。</summary>
      <returns vsli:raw="A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo のエンコード形式を表すバイト配列。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.">指定されたバイト ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成します。</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns vsli:raw="A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.">PKCS#8 EncryptedPrivateKeyInfo のエンコード形式が格納されているバイト配列。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;pbeParameters&quot; /&gt; indicates that &lt;see cref=&quot;F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12&quot; /&gt; should be used, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.">
        <paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.">指定された文字ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成します。</summary>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns vsli:raw="A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.">PKCS#8 EncryptedPrivateKeyInfo のエンコード形式が格納されているバイト配列。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary vsli:raw="Gets a memory value that represents the algorithm-specific encoded private key.">アルゴリズム固有のエンコードされた秘密キーを表すメモリ値を取得します。</summary>
      <returns vsli:raw="A memory value that represents the algorithm-specific encoded private key.">アルゴリズム固有のエンコードされた秘密キーを表すメモリ値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.">このインスタンスのプロパティ データを PKCS#8 PrivateKeyInfo としてエンコードすることを試み、指定されたバッファーに結果を書き込みます。</summary>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#8 PrivateKeyInfo data.">PKCS#8 PrivateKeyInfo データを受け取るバイト スパン。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.">指定されたバイト ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成することを試み、指定されたバッファーに結果を書き込みます。</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.">PKCS#8 EncryptedPrivateKeyInfo データを受け取るバイト スパン。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.">指定された文字ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成することを試み、指定されたバッファーに結果を書き込みます。</summary>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.">PKCS#8 EncryptedPrivateKeyInfo データを受け取るバイト スパン。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary vsli:raw="Represents an attribute used for CMS/PKCS #7 and PKCS #9 operations.">CMS/PKCS #7 および PKCS #9 の操作に使用する属性を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class using a specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object as its attribute type and value.">指定された <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトを対応する属性のタイプおよび値とし、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="asnEncodedData" vsli:raw="An object that contains the PKCS #9 attribute type and value to use.">使用する PKCS #9 属性のタイプおよび値を保持するオブジェクト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of the &lt;paramref name=&quot;Value&quot; /&gt; member of the &lt;paramref name=&quot;Oid&quot; /&gt; member of &lt;paramref name=&quot;asnEncodedData&quot; /&gt; is zero.">
        <paramref name="Value" /> の <paramref name="Oid" /> メンバーの <paramref name="asnEncodedData" /> メンバーの長さはゼロです。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;Oid&quot; /&gt; member of &lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;Value&quot; /&gt; member of the &lt;paramref name=&quot;Oid&quot; /&gt; member of &lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Oid" /> の <paramref name="asnEncodedData" /> メンバーは <see langword="null" /> です。
または
<paramref name="Value" /> の <paramref name="Oid" /> メンバーの <paramref name="asnEncodedData" /> メンバーは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class using a specified &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object as the attribute type and a specified ASN.1 encoded data as the attribute value.">属性タイプとして <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトを、また、属性値として ASN.1 でエンコードされたデータを指定することによって、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。、</summary>
      <param name="oid" vsli:raw="An object that represents the PKCS #9 attribute type.">PKCS #9 の属性タイプを表すオブジェクト。</param>
      <param name="encodedData" vsli:raw="An array of byte values that represents the PKCS #9 attribute value.">PKCS #9 の属性値を表すバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class using a specified string representation of an object identifier (OID) as the attribute type and a specified ASN.1 encoded data as the attribute value.">属性タイプとしてオブジェクト識別子 (OID) の文字列表現を、また、属性値として ASN.1 でエンコードされたデータを指定することによって、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> クラスの新しいインスタンスを初期化します。、</summary>
      <param name="oid" vsli:raw="The string representation of an OID that represents the PKCS #9 attribute type.">PKCS #9 属性タイプを表す OID の文字列表現。</param>
      <param name="encodedData" vsli:raw="An array of byte values that contains the PKCS #9 attribute value.">PKCS #9 の属性値を保持するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies a PKCS #9 attribute type and value for this &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">指定された <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトから、この <see cref="T:System.Security.Cryptography.AsnEncodedData" /> の PKCS #9 属性の型と値をコピーします。</summary>
      <param name="asnEncodedData" vsli:raw="An object that contains the PKCS #9 attribute type and value to use.">使用する PKCS #9 属性のタイプおよび値を保持するオブジェクト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asnEncodeData&quot; /&gt; does not represent a compatible attribute type.">
        <paramref name="asnEncodeData" /> は、互換性のある属性型を表しません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asnEncodedData" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the type of attribute associated with this &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; object.">この <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトに関連付けられた属性のタイプを表す <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An object that represents the type of attribute associated with this &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; object.">この <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトに関連付けられた属性のタイプを表すオブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9ContentType&quot; /&gt; class defines the type of the content of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> クラスは、CMS/PKCS #7 メッセージのコンテンツ タイプを定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9ContentType&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType&quot; /&gt; property gets an &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the content type.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> プロパティは、コンテンツ タイプを保持する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An  &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the content type.">コンテンツ タイプを保持する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class defines the description of the content of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスは、CMS/PKCS #7 メッセージのコンテンツの説明を定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class by using the specified array of byte values as the encoded description of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> コンストラクターは、指定されたバイト値配列を CMS/PKCS #7 メッセージ コンテンツのエンコード済みの説明として使用し、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスのインスタンスを作成します。</summary>
      <param name="encodedDocumentDescription" vsli:raw="An array of byte values that specifies the encoded description of the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージのエンコード済みの説明を指定するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class by using the specified description of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> コンストラクターは、CMS/PKCS #7 メッセージ コンテンツの説明を引数として受け取り、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスのインスタンスを作成します。</summary>
      <param name="documentDescription" vsli:raw="An instance of the &lt;see cref=&quot;T:System.String&quot; /&gt; class that specifies the description for the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージの説明を指定する <see cref="T:System.String" /> クラスのインスタンス。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription&quot; /&gt; property retrieves the document description.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> プロパティは、ドキュメントの説明を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the document description.">ドキュメントの説明を格納している <see cref="T:System.String" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class defines the name of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスは、CMS/PKCS #7 メッセージの名前を定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class by using the specified array of byte values as the encoded name of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> コンストラクターは、指定されたバイト値配列を CMS/PKCS #7 メッセージ コンテンツのエンコード済みの名前として使用し、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスのインスタンスを作成します。</summary>
      <param name="encodedDocumentName" vsli:raw="An array of byte values that specifies the encoded name of the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージのエンコード済みの名前を指定するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)&quot; /&gt; constructor creates an instance of the  &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class by using the specified name for the CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> コンストラクターは、CMS/PKCS #7 メッセージ コンテンツの名前を引数として受け取り、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスのインスタンスを作成します。</summary>
      <param name="documentName" vsli:raw="A  &lt;see cref=&quot;T:System.String&quot; /&gt; object that specifies the name for the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージの名前を指定する <see cref="T:System.String" /> オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName&quot; /&gt; property retrieves the document name.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> プロパティは、ドキュメントの名前を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the document name.">ドキュメントの名前を格納している <see cref="T:System.String" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary vsli:raw="Represents the LocalKeyId attribute from PKCS#9.">PKCS#9 の LocalKeyId 属性を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId&quot; /&gt; class with an empty key identifier value.">空のキー識別子の値を使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId&quot; /&gt; class with a key identifier specified by a byte array.">バイト配列によって指定されたキー識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyId" vsli:raw="A byte array containing the key identifier.">キー識別子が格納されているバイト配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId&quot; /&gt; class with a key identifier specified by a byte span.">バイト スパンによって指定されたキー識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyId" vsli:raw="A byte array containing the key identifier.">キー識別子が格納されているバイト配列。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary vsli:raw="Gets a memory value containing the key identifier from this attribute.">この属性からのキー識別子が格納されているメモリ値を取得します。</summary>
      <returns vsli:raw="A memory value containing the key identifier from this attribute.">この属性のキー識別子を格納しているメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest&quot; /&gt; class defines the message digest of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> クラスは、CMS/PKCS #7 メッセージのメッセージ ダイジェストを定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest&quot; /&gt; property retrieves the message digest.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> プロパティは、メッセージ ダイジェストを取得します。</summary>
      <returns vsli:raw="An array of byte values that contains the message digest.">メッセージ ダイジェストを保持するバイト値配列です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary vsli:raw="Defines the signing date and time of a signature. A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; object can be used as an authenticated attribute of a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object when an authenticated date and time are to accompany a digital signature.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスは署名日時を定義します。 デジタル署名に認証の日付と時刻が付加されている場合、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> オブジェクトを <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクトの認証済み属性として使用できます。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; class by using the specified array of byte values as the encoded signing date and time of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> コンストラクターは、指定されたバイト値配列を CMS/PKCS #7 メッセージ コンテンツのエンコード済みの署名日時として使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスのインスタンスを作成します。</summary>
      <param name="encodedSigningTime" vsli:raw="An array of byte values that specifies the encoded signing date and time of the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージのエンコード済みの署名日時を指定するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; class by using the specified signing date and time.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> コンストラクターは、指定された署名日時を使用して <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスのインスタンスを作成します。</summary>
      <param name="signingTime" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure that represents the signing date and time of the signature.">署名日時を表す <see cref="T:System.DateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from a &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime&quot; /&gt; property retrieves a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure that represents the date and time that the message was signed.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> プロパティは、メッセージが署名された日時を表す <see cref="T:System.DateTime" /> 構造体を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure that contains the date and time the document was signed.">ドキュメントが署名された日時を保持する <see cref="T:System.DateTime" /> 構造体。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.PublicKeyInfo&quot; /&gt; class represents information associated with a public key.">
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> クラスは、公開キーに関連付けられた情報を表します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm&quot; /&gt; property retrieves the algorithm identifier associated with the public key.">
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> プロパティは、公開キーに関連付けられたアルゴリズム識別子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; object that represents the algorithm.">アルゴリズムを表すオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue&quot; /&gt; property retrieves the value of the encoded public component of the public key pair.">
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> プロパティは、公開キー ペアのエンコード済み公開コンポーネントの値を取得します。</summary>
      <returns vsli:raw="An array of byte values  that represents the encoded public component of the public key pair.">公開キー ペアのエンコード済みの公開コンポーネントを表すバイト値配列です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; class represents information about a CMS/PKCS #7 message recipient. The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; class is an abstract class inherited by the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo&quot; /&gt; classes.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> クラスは、CMS/PKCS #7 メッセージの受取人に関する情報を表します。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> クラスおよび <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> クラスによって継承される抽象クラスです。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey&quot; /&gt; abstract property retrieves the encrypted recipient keying material.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 抽象プロパティは、受取人用の暗号化されたキー マテリアル (暗号化キーにおける関係を確立、維持するために必要な情報) を取得します。</summary>
      <returns vsli:raw="An array of byte values that contain the encrypted recipient keying material.">受取人用の暗号化されたキー マテリアルが格納されるバイト値配列です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm&quot; /&gt; abstract property retrieves the algorithm used to perform the key establishment.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 抽象プロパティは、キーを確立するためのアルゴリズムを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; object that contains the value of the algorithm used to establish the key between the originator and recipient of the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージの差出人と受取人との間でキーを確立するためのアルゴリズムの値を保持する <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> オブジェクトです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier&quot; /&gt; abstract property retrieves the identifier of the recipient.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 抽象プロパティは、受取人の識別子を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; object that contains the identifier of the recipient.">受取人の識別子を保持する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> オブジェクトです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.Type&quot; /&gt; property retrieves the type of the recipient. The type of the recipient determines which of two major protocols is used to establish a key between the originator and the recipient of a CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> プロパティは、受取人のタイプを取得します。 受取人のタイプにより、CMS/PKCS #7 メッセージの差出人と受取人との間で、2 つの主要なプロトコルのうち、どちらを使ってキーを確立するかが決定されます。</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoType&quot; /&gt; enumeration that defines the type of the recipient.">受取人のタイプを定義する <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 列挙型の値です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.Version&quot; /&gt; abstract property retrieves the version of the recipient information. Derived classes automatically set this property for their objects, and the value indicates whether it is using PKCS #7 or Cryptographic Message Syntax (CMS) to protect messages. The version also implies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object establishes a cryptographic key by a key agreement algorithm or a key transport algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 抽象プロパティは、受取人情報の CMS バージョン番号を取得します。 派生クラスのオブジェクトでは、このプロパティが自動的に設定され、この値によって、メッセージの保護に PKCS #7 と Cryptographic Message Syntax (CMS) のどちらを使用しているかが示されます。 また、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトによって暗号化キーが確立される際に、キーの承諾アルゴリズムとキー トランスポート アルゴリズムのどちらが使われているかも、このバージョン番号によって暗黙的にわかります。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the version of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object.">
        <see cref="T:System.Int32" /> オブジェクトの CMS バージョン番号を表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 値です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; class represents a collection of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; objects. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトのコレクションを表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> クラス。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> では、<see cref="T:System.Collections.ICollection" /> インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection to an array.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; object to which  the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Array" /> コレクションのコピー先の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクト。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is copied.">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection to a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; array.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションを <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 配列にコピーします。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; objects where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションをコピーする <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> の配列。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is copied.">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count&quot; /&gt; property retrieves the number of items in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクション内のアイテム数を取得します。</summary>
      <returns vsli:raw="An int value that represents the number of items in the collection.">コレクション内のアイテム数を表す整数値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized&quot; /&gt; property retrieves whether access to the collection is synchronized, or thread safe. This property always returns &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> プロパティは、コレクションへのアクセスを同期させて、スレッド セーフにするかどうかを示します。 このプロパティは常に、コレクションがスレッド セーフではないことを意味する <see langword="false" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value of &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">コレクションがスレッド セーフではないことを意味する <see cref="T:System.Boolean" /> 値 (<see langword="false" />) を返します。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object at the specified index in the collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> プロパティは、コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="An int value that represents the index in the collection. The index is zero based.">コレクション内のインデックスを表す整数値。 インデックスは 0 から始まります。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object at the specified index.">指定したインデックスの位置にある <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot&quot; /&gt; property retrieves an &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> プロパティは、<see cref="T:System.Object" /> コレクションへのアクセスを同期化するための <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">コレクションへの<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />アクセスを同期するために使用するオブジェクト。 <see cref="T:System.Object" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; class provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションの列挙機能を提供します。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> では、<see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object that represents the current recipient information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションにおける現在の受取人情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext&quot; /&gt; method advances the enumeration to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションの次の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトに列挙子を進めます。</summary>
      <returns vsli:raw="This method returns a bool that specifies whether the enumeration successfully advanced. If the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object, the method returns &lt;see langword=&quot;true&quot; /&gt;. If the enumeration moved past the last item in the enumeration, it returns &lt;see langword=&quot;false&quot; /&gt;.">このメソッドは、列挙子が正常に進められたかどうかを示すブール値を返します。 列挙子を正常に次の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトに進めることができた場合は、<see langword="true" /> が返されます。 列挙子が列挙体の最後のアイテムを越えると、<see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset&quot; /&gt; method resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションの最初の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトに列挙子をリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object that represents the current recipient information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションにおける現在の受取人情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoType&quot; /&gt; enumeration defines the types of recipient information.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 列挙型は、受取人情報のタイプを定義します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary vsli:raw="Key agreement recipient information.">キーの承諾の受取人情報です。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary vsli:raw="Key transport recipient information.">キー トランスポートの受取人情報です。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary vsli:raw="The recipient information type is unknown.">受取人情報のタイプは不明です。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="data" vsli:raw="The data to timestamp, which will be hashed by this method." />
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use with this timestamp request." />
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for a timestamp policy the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference." />
      <param name="nonce" vsli:raw="An optional nonce (number used once) to uniquely identify this request to pair it with the response. The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format." />
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="hash" vsli:raw="The pre-computed hash value to be timestamped." />
      <param name="hashAlgorithm" vsli:raw="The hash algorithm used to produce &lt;paramref name=&quot;hash&quot; /&gt;." />
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for the timestamp policy that the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference." />
      <param name="nonce" vsli:raw="An optional value used to uniquely match a request to a response, or &lt;see langword=&quot;null&quot; /&gt; to not include a nonce in the request." />
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary vsli:raw="Create a timestamp request using a pre-computed hash value and the Object Identifier for the hash algorithm.">事前計算済みのハッシュ値を使って、タイムスタンプ要求を作成します。</summary>
      <param name="hash" vsli:raw="The pre-computed hash value to be timestamped.">タイムスタンプを付ける事前計算済みのハッシュ値です。</param>
      <param name="hashAlgorithmId" vsli:raw="The Object Identifier (OID) for the hash algorithm that produced &lt;paramref name=&quot;hash&quot; /&gt;.">
        <paramref name="hash" /> を生成したハッシュ アルゴリズムのオブジェクト識別子 (OID) です。</param>
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for a timestamp policy the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference.">タイムスタンプ局 (TSA) で使う必要があるタイムスタンプ ポリシーのオブジェクト識別子 (OID) です。<see langword="null" /> の場合は優先設定がありません。</param>
      <param name="nonce" vsli:raw="An optional nonce (number used once) to uniquely identify this request to pair it with the response. The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format.">この要求を一意に識別して応答とペアリングするための、省略可能な nonce (一度だけ使われる数) です。 値は、符号なしのビッグ エンディアンの整数として解釈され、エンコード形式に正規化されることがあります。</param>
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">発行されたタイムスタンプ トークンの署名証明書がタイムスタンプ局 (TSA) に含まれる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request.">要求を示す RFC3161 の拡張機能です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest&quot; /&gt; representing the chosen values.">選択した値を表す <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> です。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="signerInfo" vsli:raw="The CMS signer information to build a timestamp request for." />
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use with this timestamp request." />
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for the timestamp policy that the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference." />
      <param name="nonce" vsli:raw="An optional nonce (number used once) to uniquely identify this request to pair it with the response. The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format." />
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <param name="responseBytes" vsli:raw="The DER encoded timestamp response." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the number of bytes that were read from &lt;paramref name=&quot;responseBytes&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <param name="encodedBytes" vsli:raw="The buffer containing a DER-encoded timestamp request." />
      <param name="request" vsli:raw="When this method returns, the successfully decoded timestamp request if decoding succeeded, or &lt;see langword=&quot;null&quot; /&gt; if decoding failed. This parameter is treated as uninitialized." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the number of bytes that were read from &lt;paramref name=&quot;encodedBytes&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="The buffer to receive the encoded request." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written into &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary vsli:raw="Gets a Signed Cryptographic Message Syntax (CMS) representation of the RFC3161 time-stamp token.">RFC3161 タイムスタンプ トークンの署名済み Cryptographic Message Syntax (CMS) 形式を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken&quot; /&gt;.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> の <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" /> 形式です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <param name="encodedBytes" vsli:raw="The buffer containing a DER-encoded time-stamp token." />
      <param name="token" vsli:raw="When this method returns, the successfully decoded time-stamp token if decoding succeeded, or &lt;see langword=&quot;null&quot; /&gt; if decoding failed. This parameter is treated as uninitialized." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the number of bytes that were read from &lt;paramref name=&quot;encodedBytes&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="data" vsli:raw="The data to verify against this time-stamp token." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) which signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" vsli:raw="The cryptographic hash to verify against this time-stamp token." />
      <param name="hashAlgorithm" vsli:raw="The algorithm which produced &lt;paramref name=&quot;hash&quot; /&gt;." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) which signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" vsli:raw="The cryptographic hash to verify against this time-stamp token." />
      <param name="hashAlgorithmId" vsli:raw="The OID of the hash algorithm." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) which signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="signerInfo" vsli:raw="The CMS signer information to verify the timestamp was built for." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) that signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" vsli:raw="An OID representing the TSA's policy under which the response was produced." />
      <param name="hashAlgorithmId" vsli:raw="A hash algorithm OID of the data to be timestamped." />
      <param name="messageHash" vsli:raw="A hash value of the data to be timestamped." />
      <param name="serialNumber" vsli:raw="An integer assigned by the TSA to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo&quot; /&gt;." />
      <param name="timestamp" vsli:raw="The timestamp encoded in the token." />
      <param name="accuracyInMicroseconds" vsli:raw="The accuracy with which &lt;paramref name=&quot;timestamp&quot; /&gt; is compared. Also see &lt;paramref name=&quot;isOrdering&quot; /&gt;." />
      <param name="isOrdering" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ensure that every timestamp token from the same TSA can always be ordered based on the &lt;paramref name=&quot;timestamp&quot; /&gt;, regardless of the accuracy; &lt;see langword=&quot;false&quot; /&gt; to make &lt;paramref name=&quot;timestamp&quot; /&gt; indicate when token has been created by the TSA." />
      <param name="nonce" vsli:raw="The nonce associated with this timestamp token. Using a nonce always allows to detect replays, and hence its use is recommended." />
      <param name="timestampAuthorityName" vsli:raw="The hint in the TSA name identification. The actual identification of the entity that signed the response will always occur through the use of the certificate identifier." />
      <param name="extensions" vsli:raw="The extension values associated with the timestamp." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" vsli:raw="The input or source buffer." />
      <param name="timestampTokenInfo" vsli:raw="When this method returns &lt;see langword=&quot;true&quot; /&gt;, the decoded data. When this method returns &lt;see langword=&quot;false&quot; /&gt;, the value is &lt;see langword=&quot;null&quot; /&gt;, meaning the data could not be decoded." />
      <param name="bytesConsumed" vsli:raw="The number of bytes used for decoding." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="The destination buffer." />
      <param name="bytesWritten" vsli:raw="When this method returns &lt;see langword=&quot;true&quot; /&gt;, contains the bytes written to the &lt;paramref name=&quot;destination&quot; /&gt; buffer." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class enables signing and verifying of CMS/PKCS #7 messages.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスは、CMS/PKCS #7 メッセージの署名と検証を可能にします。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified content information as the inner content.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> コンストラクターは、指定したコンテンツ情報を内部コンテンツとして使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified content information as the inner content and by using the detached state.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> コンストラクターは、指定したコンテンツ情報を内部コンテンツとして使用し、デタッチ ステートを使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <param name="detached" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature. If &lt;paramref name=&quot;detached&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the signature is detached. If &lt;paramref name=&quot;detached&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the signature is not detached.">
        <see cref="T:System.Boolean" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 値。 <paramref name="detached" /> が <see langword="true" /> の場合、署名が分離されます。 <paramref name="detached" /> が <see langword="false" /> の場合、署名が分離されません。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified subject identifier type as the default subject identifier type for signers.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> コンストラクターは、指定したサブジェクト識別子タイプを署名者の既定のサブジェクト識別子タイプとして使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="signerIdentifierType" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; member that specifies the default subject identifier type for signers.">署名者の既定のサブジェクト識別子タイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified subject identifier type as the default subject identifier type for signers and content information as the inner content.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> コンストラクターは、指定したサブジェクト識別子タイプを署名者の既定のサブジェクト識別子タイプとして使用し、コンテンツ情報を内部コンテンツとして使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="signerIdentifierType" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; member that specifies the default subject identifier type for signers.">署名者の既定のサブジェクト識別子タイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー。</param>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified subject identifier type as the default subject identifier type for signers, the content information as the inner content, and by using the detached state.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> コンストラクターは、指定したサブジェクト識別子タイプを署名者の既定のサブジェクト識別子タイプとして使用し、コンテンツ情報を内部コンテンツとして使用したうえで、さらにデタッチ ステートを使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="signerIdentifierType" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; member that specifies the default subject identifier type for signers.">署名者の既定のサブジェクト識別子タイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー。</param>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <param name="detached" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature. If &lt;paramref name=&quot;detached&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the signature is detached. If detached is &lt;see langword=&quot;false&quot; /&gt;, the signature is not detached.">
        <see cref="T:System.Boolean" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 値。 <paramref name="detached" /> が <see langword="true" /> の場合、署名が分離されます。 detached が <see langword="false" /> の場合、署名が分離されません。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Adds a certificate to the collection of certificates for the encoded CMS/PKCS #7 message.">エンコードされた CMS/PKCS #7 メッセージに対する証明書のコレクションに証明書を追加します。</summary>
      <param name="certificate" vsli:raw="The certificate to add to the collection.">コレクションに追加する証明書。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The certificate already exists in the collection.">証明書はコレクションに既に存在しています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.Certificates&quot; /&gt; property retrieves the certificates associated with the encoded CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> プロパティは、エンコードされた CMS/PKCS #7 メッセージに関連付けられた証明書を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; collection that represents the set of certificates for the encoded CMS/PKCS #7 message.">エンコードされた CMS/PKCS #7 メッセージで使用する証明書セットを表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> コレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash&quot; /&gt; method verifies the data integrity of the CMS/PKCS #7 message. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash&quot; /&gt; is a specialized method used in specific security infrastructure applications that only wish to check the hash of the CMS message, rather than perform a full digital signature verification. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash&quot; /&gt; does not authenticate the author nor sender of the message because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of a CMS/PKCS #7 message, use the &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; methods.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> メソッドは、CMS/PKCS #7 メッセージのデータの整合性を検証します。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> は、デジタル署名の完全な検証を実行するのではなく、CMS メッセージのハッシュをチェックすることが唯一の目的の、特定のセキュリティ インフラストラクチャ アプリケーションで使用される特殊なメソッドです。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> メソッドは、デジタル署名の検証機能を備えていないため、メッセージの作成者と送信元の認証には使用できません。 CMS/PKCS #7 メッセージの整合性と信頼性を検証する一般的な用途では、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> メソッドまたは <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドを使用してください。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)&quot; /&gt; method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers' certificates.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> メソッドは、署名済み CMS/PKCS #7 メッセージのデジタル署名を検証するだけでなく、オプションで署名者の証明書を検証します。</summary>
      <param name="verifySignatureOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether only the digital signatures are verified without the signers' certificates being validated.  &#xA;  &#xA; If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the digital signatures are verified. If it is &lt;see langword=&quot;false&quot; /&gt;, the digital signatures are verified, the signers' certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.">署名者の証明書を検証せずにデジタル署名だけを検証するかどうかを指定する <see cref="T:System.Boolean" />。
<paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、デジタル署名だけが検証されます。 <see langword="false" /> の場合、デジタル署名、署名者の証明書、および証明書の目的が検証されます。 証明書にキー使用法が設定されていない場合、またはキー使用法がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers' certificates.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドは、指定した証明書コレクションを使用して、署名済み CMS/PKCS #7 メッセージのデジタル署名を検証するだけではなく、オプションで署名者の証明書を検証します。</summary>
      <param name="extraStore" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that can be used to validate the certificate chain. If no additional certificates are to be used to validate the certificate chain, use &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)&quot; /&gt; instead of &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt;.">証明書チェーンを検証するために使用できる <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> オブジェクト。 証明書チェーンの検証に追加の証明書を使用しない場合は、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> ではなく、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> を使用してください。</param>
      <param name="verifySignatureOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether only the digital signatures are verified without the signers' certificates being validated.  &#xA;  &#xA; If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the digital signatures are verified. If it is &lt;see langword=&quot;false&quot; /&gt;, the digital signatures are verified, the signers' certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.">署名者の証明書を検証せずにデジタル署名だけを検証するかどうかを指定する <see cref="T:System.Boolean" />。
<paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、デジタル署名だけが検証されます。 <see langword="false" /> の場合、デジタル署名、署名者の証明書、および証明書の目的が検証されます。 証明書にキー使用法が設定されていない場合、またはキー使用法がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary vsli:raw="Creates a signature and adds the signature to the CMS/PKCS #7 message.">署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Framework (all versions) and .NET Core 3.0 and later: The recipient certificate is not specified.">.NET Framework (すべてのバージョン) および .NET Core 3.0 以降: 受信者の証明書が指定されていません。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core version 2.2 and earlier: No signer certificate was provided.">.NET Core バージョン 2.2 以前: 署名者証明書が指定されていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary vsli:raw="Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> メソッドは、指定した署名者を使用して署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。</summary>
      <param name="signer" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object that represents the signer.">署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary vsli:raw="Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.">指定した署名者を使用して署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。</summary>
      <param name="signer" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object that represents the signer.">署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクト。</param>
      <param name="silent" vsli:raw=".NET Core and .NET 5+ only: &lt;see langword=&quot;true&quot; /&gt; to request opening keys with PIN prompts disabled, where supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;. In .NET Framework, this parameter is not used and a PIN prompt is always shown, if required.">このパラメーターは使用されません。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Framework only: A signing certificate is not specified.">.NET Framework のみ: 署名証明書が指定されていません。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: A signing certificate is not specified.">.NET Core のみ: 署名証明書が指定されていません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo&quot; /&gt; property retrieves the inner contents of the encoded CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> プロパティは、エンコードされた CMS/PKCS #7 メッセージの内部コンテンツを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that represents the contents of the encoded CMS/PKCS #7 message.">エンコードされた CMS/PKCS #7 メッセージの内容を表す <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary vsli:raw="Decodes an encoded &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> メソッドは、エンコードされた <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> メッセージをデコードします。 デコードが正常に実行された場合、デコードされた情報を <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトのプロパティから取得できます。</summary>
      <param name="encodedMessage" vsli:raw="An array of byte values that represents the encoded CMS/PKCS#7 message to be decoded.">デコードするエンコード済み CMS/PKCS #7 メッセージを表すバイト値配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; could not be decoded successfully.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.Detached&quot; /&gt; property retrieves whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature. If this property is &lt;see langword=&quot;true&quot; /&gt;, the signature is detached. If this property is &lt;see langword=&quot;false&quot; /&gt;, the signature is not detached.">
        <see cref="T:System.Boolean" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 値。 このプロパティが <see langword="true" /> の場合、署名は分離されます。 このプロパティが <see langword="false" /> の場合、署名は分離されません。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.Encode&quot; /&gt; method encodes the information in the object into a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> メソッドは、オブジェクト内の情報を CMS/PKCS #7 メッセージにエンコードします。</summary>
      <returns vsli:raw="An array of byte values that represents the encoded message. The encoded message can be decoded by the &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])&quot; /&gt; method.">エンコードされたメッセージを表すバイト値配列。 エンコードされたメッセージは、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> メソッドでデコードできます。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Removes the specified certificate from the collection of certificates for the encoded CMS/PKCS #7 message.">エンコードされた CMS/PKCS #7 メッセージに対する証明書のコレクションから、指定された証明書を削除します。</summary>
      <param name="certificate" vsli:raw="The certificate to remove from the collection.">コレクションから削除する証明書。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The certificate was not found.">証明書が見つかりませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary vsli:raw="Removes the signature at the specified index of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> コレクションの指定したインデックス位置にある署名を削除します。</summary>
      <param name="index" vsli:raw="The zero-based index of the signature to remove.">削除する署名の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A CMS/PKCS #7 message is not signed, and &lt;paramref name=&quot;index&quot; /&gt; is invalid.">CMS/PKCS #7 メッセージが署名されておらず、<paramref name="index" /> が無効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than the signature count minus 1.">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が "署名数 - 1" を超えています。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The signature could not be removed.  &#xA;  &#xA; -or-  &#xA;  &#xA; An internal cryptographic error occurred.">署名を削除できなかった。

または -

内部の暗号エラーが発生しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)&quot; /&gt; method removes the signature for the specified &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> メソッドは、指定した <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの署名を削除します。</summary>
      <param name="signerInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the countersignature being removed.">削除対象の副署名を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection associated with the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> プロパティは、CMS/PKCS #7 メッセージに関連付けられた <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; object that represents the signer information for the CMS/PKCS #7 message.">CMS/PKCS #7 メッセージの署名者情報を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.Version&quot; /&gt; property retrieves the version of the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> プロパティは、CMS/PKCS #7 メッセージのバージョン情報を取得します。</summary>
      <returns vsli:raw="An int value that represents the CMS/PKCS #7 message version.">CMS/PKCS #7 メッセージのバージョン番号を表す整数値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; class represents a signer associated with a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object that represents a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> クラスは、CMS/PKCS #7 メッセージを表す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトに関連付けられた署名者を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Adds the specified attribute to the current document.">指定した属性を現在のドキュメントに追加します。</summary>
      <param name="asnEncodedData">ドキュメントに追加する ASN.1 でエンコードされた属性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="Cannot find the original signer.&#xA;        &#xA; -or-&#xA;&#xA;ASN1 corrupted data.">元の署名者が見つかりません。

または -

ASN1 のデータが壊れています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate&quot; /&gt; property retrieves the signing certificate associated with the signer information.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> プロパティは、署名者情報に関連付けられた署名証明書を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2&quot; /&gt; object that represents the signing certificate.">署名証明書を表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash&quot; /&gt; method verifies the data integrity of the CMS/PKCS #7 message signer information. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash&quot; /&gt; is a specialized method used in specific security infrastructure applications in which the subject uses the HashOnly member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration when setting up a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash&quot; /&gt; does not authenticate the signer information because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; methods.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> メソッドは、CMS/PKCS #7 メッセージの署名者情報について、データの整合性を検証します。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> は、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクトの設定時に、サブジェクトが <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列挙型の HashOnly メンバーを使用する、特定のセキュリティ インフラストラクチャ アプリケーション用に特化したメソッドです。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> メソッドは、デジタル署名の検証機能を備えていないため、署名者情報の認証には使用できません。 CMS/PKCS #7 メッセージの署名者情報と副署名について、整合性と信頼性を検証する一般的な用途では、<see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> メソッドまたは <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドを使用してください。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)&quot; /&gt; method verifies the digital signature of the message and, optionally, validates the certificate.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> メソッドでは、メッセージのデジタル署名および証明書 (オプション) が検証されます。</summary>
      <param name="verifySignatureOnly" vsli:raw="A bool value that specifies whether only the digital signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.">デジタル署名のみを検証の対象とするかを指定するブール値。 <paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、署名だけが検証されます。 <paramref name="verifySignatureOnly" /> が <see langword="false" /> の場合、デジタル署名の検証に加え、証明書チェーンの有効性と証明書の目的が検証されます。 証明書にキーの使用目的が設定されていないか、キーの使用目的がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドは、指定された証明書のコレクションを使ってメッセージのデジタル署名を検証するほか、オプションで証明書の検証まで実行します。</summary>
      <param name="extraStore" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that can be used to validate the chain. If no additional certificates are to be used to validate the chain, use &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)&quot; /&gt; instead of &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt;.">チェーンを検証するために使用できる <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> オブジェクト。 チェーンの検証に追加の証明書を使用しない場合は、<see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> ではなく、<see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> を使用してください。</param>
      <param name="verifySignatureOnly" vsli:raw="A bool value that specifies whether only the digital signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.">デジタル署名のみを検証の対象とするかを指定するブール値。 <paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、署名だけが検証されます。 <paramref name="verifySignatureOnly" /> が <see langword="false" /> の場合、デジタル署名の検証に加え、証明書チェーンの有効性と証明書の目的が検証されます。 証明書にキーの使用目的が設定されていないか、キーの使用目的がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature&quot; /&gt; method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> メソッドは、署名証明書を選択するよう求めるメッセージを表示し、副署名を作成して、その署名を CMS/PKCS #7 メッセージに追加します。 副署名の使用は、1 レベルに限定されています。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)&quot; /&gt; method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> メソッドは、指定された署名者で副署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。 副署名の使用は、1 レベルに限定されています。</summary>
      <param name="signer" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object that represents the counter signer.">副署名の署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos&quot; /&gt; property retrieves the set of counter signers associated with the signer information.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> プロパティは、署名者情報に関連付けられた、副署名の一連の署名者を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection that represents the counter signers for the signer information. If there are no counter signers, the property is an empty collection.">署名者情報に関連付けられた副署名の署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクション。 副署名の署名者が存在しない場合、このプロパティ値は空のコレクションになります。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the hash algorithm used in the computation of the signatures.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> プロパティは、署名の計算に使用されたハッシュ アルゴリズムを表す <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the hash algorithm used with the signature.">署名用のハッシュ アルゴリズムを表す <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary vsli:raw="Retrieves the signature for the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの署名を取得します。</summary>
      <returns vsli:raw="The signature for the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの署名。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)&quot; /&gt; method removes the countersignature at the specified index of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> メソッドは、指定されたインデックス位置にある副署名を <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> コレクションから削除します。</summary>
      <param name="index" vsli:raw="The zero-based index of the countersignature to remove.">削除する副署名の、0 から始まるインデックス。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)&quot; /&gt; method removes the countersignature for the specified &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> メソッドは、指定された <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの副署名を削除します。</summary>
      <param name="counterSignerInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the countersignature being removed.">削除対象の副署名を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Removes the specified attribute from the current document.">指定された属性を現在のドキュメントから削除します。</summary>
      <param name="asnEncodedData">ドキュメントから削除する ASN.1 でエンコードされた属性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="Cannot find the original signer.&#xA;&#xA; -or-&#xA;&#xA;Attribute not found.&#xA;&#xA; -or-&#xA; &#xA;ASN1 corrupted data.">元の署名者が見つかりません。
または
属性が見つかりません。
または
ASN1 のデータが壊れています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary vsli:raw="Gets the identifier for the signature algorithm used by the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトが使用する署名アルゴリズムの識別子を取得します。</summary>
      <returns vsli:raw="The identifier for the signature algorithm used by the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトが使用する署名アルゴリズムの識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection of signed attributes that is associated with the signer information. Signed attributes are signed along with the rest of the message content.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> プロパティは、署名者情報に関連付けられた署名属性の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションを取得します。 署名属性は、それ以外のメッセージ コンテンツと共に署名されます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.">署名属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクション。 署名属性が存在しない場合、このプロパティ値は空のコレクションになります。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier&quot; /&gt; property retrieves the certificate identifier of the signer associated with the signer information.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> プロパティは、署名者情報に関連付けられた署名者の証明書識別子を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; object that uniquely identifies the certificate associated with the signer information.">署名者情報に関連付けられた証明書を一意に識別する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection of unsigned attributes that is associated with the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; content. Unsigned attributes can be modified without invalidating the signature.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> プロパティは、<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> のコンテンツに関連付けられた非署名属性の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションを取得します。 非署名属性は、署名を無効化せずに変更できます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.">非署名属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクション。 非署名属性が存在しない場合、このプロパティ値は空のコレクションになります。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.Version&quot; /&gt; property retrieves the signer information version.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> プロパティは、署名者情報のバージョン番号を取得します。</summary>
      <returns vsli:raw="An int value that specifies the signer information version.">署名者情報のバージョン番号を指定する整数値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; class represents a collection of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; objects. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトのコレクションを表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> クラス。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> では、<see cref="T:System.Collections.ICollection" /> インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection to an array.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; object to which the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Array" /> コレクションのコピー先の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is copied.">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection to a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; array.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションを <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 配列にコピーします。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; objects where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションをコピーする <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> の配列。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is copied.">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count&quot; /&gt; property retrieves the number of items in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクション内のアイテム数を取得します。</summary>
      <returns vsli:raw="An int value that represents the number of items in the collection.">コレクション内のアイテム数を表す整数値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized&quot; /&gt; property retrieves whether access to the collection is synchronized, or thread safe. This property always returns &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> プロパティは、コレクションへのアクセスを同期させて、スレッド セーフにするかどうかを示します。 このプロパティは常に、コレクションがスレッド セーフではないことを意味する <see langword="false" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value of &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">コレクションがスレッド セーフではないことを意味する <see cref="T:System.Boolean" /> 値 (<see langword="false" />) を返します。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object at the specified index in the collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> プロパティは、コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="An int value that represents the index in the collection. The index is zero based.">コレクション内のインデックスを表す整数値。 インデックスは 0 から始まります。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object  at the specified index.">指定したインデックス位置にあるオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /></returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot&quot; /&gt; property retrieves an &lt;see cref=&quot;T:System.Object&quot; /&gt; object is used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> プロパティは、<see cref="T:System.Object" /> コレクションへのアクセスを同期化するための <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object is used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Object" /> オブジェクトは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションへのアクセスを同期化するために使用されます。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; class provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションの列挙機能を提供します。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> では、<see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the current signer information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションにおける現在の署名主情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext&quot; /&gt; method advances the enumeration to the next   &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションの次の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトに列挙子を進めます。</summary>
      <returns vsli:raw="This method returns a bool value that specifies whether the enumeration successfully advanced. If the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object, the method returns &lt;see langword=&quot;true&quot; /&gt;. If the enumeration moved past the last item in the enumeration, it returns &lt;see langword=&quot;false&quot; /&gt;.">このメソッドは、列挙子が正常に進められたかどうかを示すブール値を返します。 列挙子を正常に次の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトに進めることができた場合は、<see langword="true" /> が返されます。 列挙子が列挙体の最後のアイテムを越えると、<see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset&quot; /&gt; method resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションの最初の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトに列挙子をリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the current signer information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションにおける現在の署名主情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; class defines the type of the identifier of a subject, such as a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; or a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt;.  The subject can be identified by the certificate issuer and serial number or the subject key.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> クラスは、サブジェクトの識別子のタイプ (<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> や <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> など) を定義します。  サブジェクトは、証明書の発行者とシリアル番号またはサブジェクト キーによって識別できます。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Verifies if the specified certificate's subject identifier matches current subject identifier instance.">指定された証明書のサブジェクト識別子が現在のサブジェクト識別子のインスタンスと一致するかどうかを確認します。</summary>
      <param name="certificate" vsli:raw="The certificate to match with the current subject identifier instance.">現在のサブジェクト識別子のインスタンスと照合する証明書。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified certificate's identifier matches the current subject identifier instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された証明書の識別子が現在のサブジェクト識別子のインスタンスと一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="Invalid subject identifier type.">サブジェクト識別子の種類が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property retrieves the type of subject identifier. The subject can be identified by the certificate issuer and serial number or the subject key.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティは、サブジェクト識別子のタイプを取得します。 サブジェクトは、証明書の発行者とシリアル番号またはサブジェクト キーによって識別できます。</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration that identifies the type of subject.">サブジェクトの種類を<see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />識別する列挙体のメンバー。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value&quot; /&gt; property retrieves the value of the subject identifier. Use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property to determine the type of subject identifier, and use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value&quot; /&gt; property to retrieve the corresponding value.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> プロパティは、サブジェクト識別子の値を取得します。 サブジェクト識別子のタイプを調べる場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティを、対応する値を取得する場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> プロパティを使用します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object that represents the value of the subject identifier. This &lt;see cref=&quot;T:System.Object&quot; /&gt; can be one of the following objects as determined by the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property&lt;/term&gt;&lt;description&gt; Object&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; IssuerAndSerialNumber&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.Security.Cryptography.Xml.X509IssuerSerial&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SubjectKeyIdentifier&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.String&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">サブジェクト識別子の値を表す <see cref="T:System.Object" /> オブジェクト。 この <see cref="T:System.Object" /> は、<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティで指定された、次のいずれかのオブジェクトになります。
 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティ 
  Object 
  IssuerAndSerialNumber 
 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
 <see cref="T:System.String" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey&quot; /&gt; class defines the type of the identifier of a subject, such as a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; or a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt;.  The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> クラスは、サブジェクトの識別子のタイプ (<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> や <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> など) を定義します。  サブジェクトは、証明書発行者とシリアル番号、サブジェクト キーのハッシュ、またはサブジェクト キーによって識別できます。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property retrieves the type of subject identifier or key. The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティは、サブジェクト識別子またはキーのタイプを取得します。 サブジェクトは、証明書発行者とシリアル番号、サブジェクト キーのハッシュ、またはサブジェクト キーによって識別できます。</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType&quot; /&gt; enumeration that specifies the type of subject identifier.">サブジェクト識別子のタイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 列挙型のメンバーです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value&quot; /&gt; property retrieves the value of the subject identifier or  key. Use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property to determine the type of subject identifier or key, and use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value&quot; /&gt; property to retrieve the corresponding value.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> プロパティは、サブジェクト識別子またはキーの値を取得します。 サブジェクト識別子またはキーのタイプを調べる場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティを、対応する値を取得する場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> プロパティを使用します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object that represents the value of the subject identifier or key. This &lt;see cref=&quot;T:System.Object&quot; /&gt; can be one of the following objects as determined by the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property&lt;/term&gt;&lt;description&gt; Object&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; IssuerAndSerialNumber&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.Security.Cryptography.Xml.X509IssuerSerial&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SubjectKeyIdentifier&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.String&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; PublicKeyInfo&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.PublicKeyInfo&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">サブジェクト識別子またはキーの値を表す <see cref="T:System.Object" /> オブジェクト。 この <see cref="T:System.Object" /> は、<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティで指定された、次のいずれかのオブジェクトになります。
 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティ 
  Object 
  IssuerAndSerialNumber 
 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
 <see cref="T:System.String" /> PublicKeyInfo 
 <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType&quot; /&gt; enumeration defines how a subject is identified.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 列挙型は、サブジェクトの識別方法を定義します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary vsli:raw="The subject is identified by the certificate issuer and serial number.">サブジェクトは、証明書の発行者とシリアル番号によって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary vsli:raw="The subject is identified by the public key.">サブジェクトは公開キーによって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary vsli:raw="The subject is identified by the hash of the subject key.">サブジェクトはサブジェクト キーのハッシュによって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary vsli:raw="The type is unknown.">タイプは不明です。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration defines the type of subject identifier.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列挙型は、サブジェクト識別子のタイプを定義します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary vsli:raw="The subject is identified by the certificate issuer and serial number.">サブジェクトは、証明書の発行者とシリアル番号によって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary vsli:raw="The subject is identified as taking part in an integrity check operation that uses only a hashing algorithm.">サブジェクトは、ハッシュ アルゴリズムのみを使用した整合性チェック処理に参加しているものとして識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary vsli:raw="The subject is identified by the hash of the subject's public key. The hash algorithm used is determined by the signature algorithm suite in the subject's certificate.">サブジェクトはサブジェクトの公開キーのハッシュによって識別されます。 使用するハッシュ アルゴリズムは、サブジェクトの証明書に格納された署名アルゴリズム スイートによって決定されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary vsli:raw="The type of subject identifier is unknown.">サブジェクト識別子のタイプは不明です。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary vsli:raw="Represents the &amp;lt;&lt;see langword=&quot;X509IssuerSerial&quot; /&gt;&amp;gt; element of an XML digital signature.">XML デジタル署名の &lt;<see langword="X509IssuerSerial" />&gt; 要素を表します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary vsli:raw="Gets or sets an X.509 certificate issuer's distinguished name.">X.509 証明書の発行者の識別名を取得または設定します。</summary>
      <returns vsli:raw="An X.509 certificate issuer's distinguished name.">X.509 証明書の発行者の識別名。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary vsli:raw="Gets or sets an X.509 certificate issuer's serial number.">X.509 証明書の発行者のシリアル番号を取得または設定します。</summary>
      <returns vsli:raw="An X.509 certificate issuer's serial number.">X.509 証明書の発行者のシリアル番号。</returns>
    </member>
  </members>
</doc>