<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>型と、その型に関連付けられている値のコレクションを格納します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトで表される属性を使用して、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">この <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトに格納する属性。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>指定された <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトで表される属性と、指定された <see cref="T:System.Security.Cryptography.Oid" /> コレクションで表される属性に関連付けられた値のセットを使用して、<see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">この <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトに格納する属性。</param>
      <param name="values">
        <paramref name="oid" /> パラメーターで表される属性に関連付けられている値のセット。</param>
      <exception cref="T:System.InvalidOperationException">コレクションに重複した項目が含まれています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>属性のオブジェクト識別子を指定する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns>属性のオブジェクト識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>属性に関連付けられている値のセットを含む <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> コレクションを取得します。</summary>
      <returns>属性に関連付けられている値のセット。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトのセットを格納します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> クラスの新しいインスタンスを初期化し、指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> をコレクションに追加します。</summary>
      <param name="attribute">コレクションに追加される <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>指定した <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトをコレクションに追加します。</summary>
      <param name="asnEncodedData">コレクションに追加する <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
      <returns>追加される項目の 0 から始まるインデックスをメソッドが返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトをコレクションに追加します。</summary>
      <param name="attribute">コレクションに追加する <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</param>
      <returns>追加される項目の 0 から始まるインデックスをメソッドが返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">指定された項目は、コレクションに既に存在しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションを <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトの配列にコピーします。</summary>
      <param name="array">コレクションがコピーされる <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトの配列。</param>
      <param name="index">コレクションがコピーされる <paramref name="array" /> 内の、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> を有効な引数として受け付けないメソッドに null 値が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>コレクション内の項目の数を取得します。</summary>
      <returns>コレクション内の項目数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>コレクションの <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> オブジェクトを取得します。</summary>
      <returns>コレクションの列挙に使用できる <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> オブジェクトをメソッドが返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されている、つまりスレッド セーフであるかどうかを示す値を取得します。</summary>
      <returns>コレクションへのアクセスがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトを取得します。</summary>
      <param name="index">取得する <see cref="T:System.Int32" /> オブジェクトの 0 から始まるインデックスを表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 値。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>指定した <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトをコレクションから削除します。</summary>
      <param name="attribute">コレクションから削除する <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するために使用する <see cref="T:System.Object" /> オブジェクトを取得します。</summary>
      <returns>コレクションへの<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />アクセスを同期するために使用するオブジェクト。 <see cref="T:System.Object" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>特定のインデックスを開始位置として、<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 配列に、この <see cref="T:System.Array" /> コレクションの要素をコピーします。</summary>
      <param name="array">この <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 配列。 <see cref="T:System.Array" /> 配列では 0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションを反復処理する列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> コレクションを反復処理するために使用できる <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションの列挙機能を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>現在の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトを <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションから取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの現在の暗号属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>列挙子を <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの次の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトに進めます。</summary>
      <returns>列挙子を正常に次の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトに進めることができた場合は <see langword="true" /> を、列挙子が最後に到達した場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>列挙子を <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの最初の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトにリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>現在の <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> オブジェクトを <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションから取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> コレクションの現在の暗号属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスは、暗号操作に使用するアルゴリズムを定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> コンストラクターは、既定のパラメーターを使用して <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスのインスタンスを作成します。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> コンストラクターは、指定されたアルゴリズム識別子を使用して <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスのインスタンスを作成します。</summary>
      <param name="oid">アルゴリズムのオブジェクト識別子。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> コンストラクターは、指定されたアルゴリズム識別子とキー長を使用して <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> クラスのインスタンスを作成します。</summary>
      <param name="oid">アルゴリズムのオブジェクト識別子。</param>
      <param name="keyLength">キーの長さ (ビット数)。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> プロパティは、キー長 (ビット数) を設定または取得します。 キー長が固定されているアルゴリズムの場合、このパラメーターは使用されません。</summary>
      <returns>キー長 (ビット数) を表す整数値。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> プロパティは、アルゴリズムのオブジェクト識別子を指定する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを設定または取得します。</summary>
      <returns>アルゴリズムを表すオブジェクト。 <see cref="T:System.Security.Cryptography.Oid" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> プロパティは、アルゴリズムに必要なすべてのパラメーターを設定または取得します。</summary>
      <returns>アルゴリズムに必要なすべてのパラメーターを指定するバイト値配列。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスは、CMS/PKCS #7 メッセージの受取人を定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>公開キー アルゴリズムの既定の暗号化モードを使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを指定の証明書と受信者の識別子の型で初期化します。</summary>
      <param name="recipientIdentifierType">使用された受信者の証明書を識別するために使用するスキーム。</param>
      <param name="certificate">この受信者に対する暗号化に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="recipientIdentifierType" /> 値はサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを、指定の RSA 証明書、RSA 暗号化パディング、およびサブジェクト識別子で初期化します。</summary>
      <param name="recipientIdentifierType">使用された受信者の証明書を識別するために使用するスキーム。</param>
      <param name="certificate">この受信者に対する暗号化に使用する証明書。</param>
      <param name="rsaEncryptionPadding">この受信者に対する暗号化に使用する RSA パディング モード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターまたは <paramref name="rsaEncryptionPadding" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> パラメーター公開キーは、RSA 公開キーとして認識されません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>公開キー アルゴリズム向けの既定の暗号化モードと <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> サブジェクト識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを指定の証明書で初期化します。</summary>
      <param name="certificate">この受信者に対する暗号化に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>
        <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> サブジェクト識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスの新しいインスタンスを、指定された RSA 証明書と RSA 暗号化パディングで初期化します。</summary>
      <param name="certificate">この受信者に対する暗号化に使用する証明書。</param>
      <param name="rsaEncryptionPadding">この受信者に対する暗号化に使用する RSA パディング モード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターまたは <paramref name="rsaEncryptionPadding" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> パラメーター公開キーは、RSA 公開キーとして認識されません。

または -

<paramref name="recipientIdentifierType" /> 値はサポートされていません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>この受信者に対する暗号化に使用する証明書を取得します。</summary>
      <returns>この受信者に対する暗号化に使用する証明書。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>使用された受信者の証明書を識別するために使用するスキームを取得します。</summary>
      <returns>使用された受信者の証明書を識別するために使用するスキーム。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary>この受信者に対する暗号化に使用する RSA 暗号化パディングを取得します。</summary>
      <returns>この受信者の暗号化に使用する RSA 暗号化埋め込み。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスは、一連の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトを表します。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> では、<see cref="T:System.Collections.ICollection" /> インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスのインスタンスを作成し、指定された受取人を追加します。</summary>
      <param name="recipient">指定された CMS/PKCS #7 受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> クラスのインスタンス。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> クラスのインスタンスを作成し、指定されたサブジェクト識別子と、その受取人を識別する一連の証明書に基づいて受取人を追加します。</summary>
      <param name="recipientIdentifierType">サブジェクト識別子のタイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列挙型のメンバーです。</param>
      <param name="certificates">受取人を識別する証明書が格納された <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> コレクション。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> メソッドは、受取人を <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションに追加します。</summary>
      <param name="recipient">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションに追加する受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</param>
      <returns>メソッドが成功した場合は、受取人の挿入位置を表す <see cref="T:System.Int32" /> 値 (先頭位置は 0) が返されます。
メソッドが失敗した場合、例外がスローされます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Array" /> コレクションのコピー先の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</param>
      <param name="index">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> は、指定された要素を格納できるほど大きくありません。

または -

<paramref name="array" /> の次元数が不適切です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が、<paramref name="array" /> の要素の範囲内にありません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションを <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションをコピーする <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> の配列。</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトを保持する配列の 0 から始まるインデックス。<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションが、<paramref name="array" /> のこの位置にコピーされます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> は、指定された要素を格納できるほど大きくありません。

または -

<paramref name="array" /> の次元数が不適切です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が、<paramref name="array" /> の要素の範囲内にありません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクション内のアイテム数を取得します。</summary>
      <returns>コレクション内のアイテム数を表す <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> プロパティは、コレクションへのアクセスを同期させて、スレッド セーフにするかどうかを示します。 このプロパティは常に、コレクションがスレッド セーフではないことを意味する <see langword="false" /> を返します。</summary>
      <returns>コレクションがスレッド セーフではないことを意味する <see cref="T:System.Boolean" /> 値 (<see langword="false" />) を返します。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> プロパティは、コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトを取得します。</summary>
      <param name="index">コレクション内のインデックスを表す <see cref="T:System.Int32" /> 値。 インデックスは 0 から始まります。</param>
      <returns>指定したインデックスの位置にある <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> メソッドは、受取人を <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションから削除します。</summary>
      <param name="recipient">コレクションから削除する受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> プロパティは、<see cref="T:System.Object" /> コレクションへのアクセスを同期化するための <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> コレクションへのアクセスを同期するために使用する <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> コレクションの列挙機能を提供します。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> では、<see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの現在の受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの次の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトに列挙子を進めます。</summary>
      <returns>列挙子を正常に次の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> オブジェクトに進めることができた場合は <see langword="true" /> を、列挙子が列挙体の最後の項目を越えた場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの最初の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトに列挙子をリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> コレクションの現在の受取人を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>CMS/PKCS#7 署名付きメッセージでの署名者候補を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>保存されているキーから <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameters">使用する署名キーを記述する CSP パラメーター。</param>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core のみ: このメンバーはサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>指定したサブジェクト識別子型を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="signerIdentifierType">使用された署名証明書を識別するために使用するスキーム。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>指定した署名者証明書とサブジェクト識別子型を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="signerIdentifierType">使用された署名証明書を識別するために使用するスキーム。</param>
      <param name="certificate">メッセージの署名に使用される秘密キーを持つ証明書。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>指定した署名者証明書、サブジェクト識別子型、および秘密キー オブジェクトを使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="signerIdentifierType">使用された署名証明書の識別に使用するスキームを指定する列挙値の 1 つ。</param>
      <param name="certificate">メッセージの署名に使用される秘密キーを持つ証明書。</param>
      <param name="privateKey">メッセージへの署名時に使用する秘密キー オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>指定した署名者証明書を使用して、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificate">メッセージの署名に使用される秘密キーを持つ証明書。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> プロパティは、署名証明書を表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定または取得します。</summary>
      <returns>署名証明書を表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> および <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> と見なされる証明書のコレクションを取得します。</summary>
      <returns>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> と <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />と見なされる証明書のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>署名と共に使用するハッシュ アルゴリズムのアルゴリズム識別子を取得または設定します。</summary>
      <returns>署名に使用するハッシュアルゴリズムのアルゴリズム識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>署名されたメッセージに埋め込む署名者証明書の証明書チェーンの数を示すオプションを取得または設定します。</summary>
      <returns>署名されたメッセージに埋め込まれる、署名者証明書の証明書チェーンの量を示す列挙値の1つ。</returns>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary>署名時に使用する秘密キー オブジェクトを取得または設定します。</summary>
      <returns>署名時に使用する秘密キー、または <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> プロパティに関連付けられている秘密キーを使用する <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>この署名に関連付けられ、この署名に保護もされている属性のコレクションを取得します。</summary>
      <returns>署名によっても保護されている、このシグネチャに関連付ける属性のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>使用された署名証明書を識別するために使用するスキームを取得します。</summary>
      <returns>使用された受信者の証明書を識別するために使用するスキーム。</returns>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>この署名に関連付けられているが、この署名に保護はされていない属性のコレクションを取得します。</summary>
      <returns>署名によって保護されていない、この署名に関連付ける属性のコレクション。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> クラスは、CMS/PKCS #7 標準文書で規定されている CMS/PKCS #7 ContentInfo データ構造体を表します。 このデータ構造体は、すべての CMS/PKCS #7 メッセージの基礎となるものです。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> コンストラクターは、データを表すバイト値配列と、コンテンツ タイプを表す既定の <paramref name="object identifier" /> (OID) を使用し、<see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> クラスのインスタンスを作成します。</summary>
      <param name="content">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクトの作成に使用するデータのバイト値配列。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> コンストラクターは、指定されたコンテンツ タイプおよびデータのバイト値配列を使用して、<see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> クラスのインスタンスを作成します。</summary>
      <param name="contentType">コンテンツ タイプを指定する <c>object identifier</c> (OID) が格納された <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。 コンテンツ タイプには、data、digestedData、encryptedData、envelopedData、hashedData、signedAndEnvelopedData、signedData のいずれかを指定します。  詳細については、「解説」を参照してください。</param>
      <param name="content">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクトの作成に使用するデータのバイト値配列。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> プロパティは、CMS/PKCS #7 メッセージのコンテンツを取得します。</summary>
      <returns>コンテンツ データを表すバイト値配列。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> プロパティは、CMS/PKCS #7 メッセージの内部コンテンツ タイプの <paramref name="object identifier" /> (OID) を保持する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns>コンテンツタイプを表す OID 値を格納しているオブジェクト。 <see cref="T:System.Security.Cryptography.Oid" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" /> 静的メソッドは、バイト値配列で表現されたエンコード済み <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの外部コンテンツ タイプを取得します。</summary>
      <param name="encodedMessage">外部コンテンツ タイプを取得する、エンコード済み <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージを表すバイト値配列。</param>
      <returns>メソッドが成功した場合は、指定されたエンコード済み <see cref="T:System.Security.Cryptography.Oid" /> メッセージの外部コンテンツ タイプを保持する <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクトが返されます。
メソッドが失敗した場合、例外がスローされます。</returns>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作時にエラーが発生しました。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>エンベロープ データの CMS/PKCS#7 構造体を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>指定された内容の情報を使用して、<see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="contentInfo">暗号化するメッセージの内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>指定された対称暗号化アルゴリズムと内容の情報を使用して、<see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="contentInfo">暗号化するメッセージの内容。</param>
      <param name="encryptionAlgorithm">メッセージの内容を暗号化するときに使用する対称暗号化アルゴリズムの識別子。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> パラメーターまたは <paramref name="encryptionAlgorithm" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>エンベロープ CMS/PKCS#7 メッセージに関連付けられた証明書のコレクションを取得します。</summary>
      <returns>CMS/PKCS # 7 エンベロープメッセージに関連付けられている証明書のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>このメッセージに関連付けられている対称暗号化アルゴリズムの識別子を取得します。</summary>
      <returns>このメッセージに関連付けられている対称暗号化アルゴリズムの識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>エンベロープ CMS/PKCS#7 メッセージの内容の情報を取得します。</summary>
      <returns>CMS/PKCS # 7 エンベロープメッセージのコンテンツ情報。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>CMS/PKCS#7 EnvelopedData メッセージとしてバイトの配列をデコードします。</summary>
      <param name="encodedMessage">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> パラメーターが正常にデコードされませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>証明書ストアで一致する証明書とキーを検索することにより、使用可能な任意の受信者で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>証明書ストアで一致する証明書とキーを検索することにより、指定された受信者の情報で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <param name="recipientInfo">暗号化解除に使用する受信者の情報。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>指定された受信者情報と指定された秘密キーを使用して、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <param name="recipientInfo">暗号化解除に使用する受信者の情報。</param>
      <param name="privateKey">受信者固有の情報の暗号化解除に使用する秘密キー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> パラメーターまたは <paramref name="privateKey" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>証明書ストアと提供されたコレクションで一致する証明書とキーを検索することにより、指定された受信者の情報で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を暗号化解除します。</summary>
      <param name="recipientInfo">暗号化解除に使用する受信者の情報。</param>
      <param name="extraStore">受信者の証明書と秘密キーを検索するために、証明書ストアに加えて使用する証明書のコレクション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> パラメーターまたは <paramref name="extraStore" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>証明書ストアと提供されたコレクションで一致する証明書とキーを検索することにより、使用可能な任意の受信者の情報で、デコードされたエンベロープ CMS/PKCS#7 メッセージの内容を復号化します。</summary>
      <param name="extraStore">受信者の証明書と秘密キーを検索するために、証明書ストアに加えて使用する証明書のコレクション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extraStore" /> パラメーターは <see langword="null" /> でした。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>エンベロープ CMS/PKCS#7 メッセージの内容をエンコードし、バイト配列として返します。</summary>
      <returns>CMS/PKCS#7 メッセージのエンコード形式を表すバイト配列。</returns>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>指定された 1 人の受信者に対する CMS/PKCS#7 メッセージの内容を暗号化します。</summary>
      <param name="recipient">このメッセージの 1 人の受信者が記述されている受信者情報。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>1 人以上の受信者に対する CMS/PKCS#7 メッセージの内容を暗号化します。</summary>
      <param name="recipients">メッセージの受信者が記述されているコレクション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipients" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>デコードされたメッセージの受信者リストを表すコレクションを取得します。 既定値は空のコレクションです。</summary>
      <returns>デコードされたメッセージの受信者リストを表すコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>エンベロープ CMS/PKCS#7 メッセージに関連付けられた非保護 (非暗号化) 属性のコレクションを取得します。</summary>
      <returns>CMS/PKCS # 7 エンベロープメッセージに関連付けられている、保護されていない (暗号化されていない) 属性のコレクション。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>デコードされたエンベロープ CMS/PKCS#7 メッセージのバージョンを取得します。</summary>
      <returns>デコードされた CMS/PKCS # 7 メッセージのバージョン。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> クラスは、キーの承諾の受取人情報を定義します。 キーの承諾アルゴリズムでは、共有用の暗号化キーの生成に双方が関わり、使用するキーについて相互の承諾を確立する Diffie-Hellman キーの承諾アルゴリズムを使用するのが一般的です。 これは、当事者の一人がキーを生成し、一方的に相手に送信するキー トランスポートアルゴリズムとは対照的です。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> プロパティは、差出人によるキーの承諾プロトコルの開始日時を取得します。</summary>
      <returns>差出人によるキーの承諾プロトコルの開始日時。</returns>
      <exception cref="T:System.InvalidOperationException">受取人識別子タイプがサブジェクト キー識別子ではありません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> プロパティは、受取人用の暗号化されたキー マテリアル (暗号化キーにおける関係を確立、維持するために必要な情報) を取得します。</summary>
      <returns>受取人用の暗号化されたキー マテリアルが格納されるバイト値配列です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> プロパティは、キーの承諾を実行するためのアルゴリズムを取得します。</summary>
      <returns>キーの承諾を実行するために使用されるアルゴリズムの値。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> プロパティは、キーの承諾の差出人に関する情報を取得します。キーの承諾アルゴリズムでは、この情報を基に差出人が証明されます。</summary>
      <returns>キーの承諾の差出人についての情報を保持するオブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> プロパティは、キー マテリアルの属性を取得します。</summary>
      <returns>キー マテリアルの属性。</returns>
      <exception cref="T:System.InvalidOperationException">受取人識別子タイプがサブジェクト キー識別子ではありません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> プロパティは、受取人の識別子を取得します。</summary>
      <returns>受信者の識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> プロパティは、キーの承諾における受取人の CMS バージョン番号を取得します。 キーの承諾における受取人の CMS バージョン番号は、このクラスのオブジェクトに対して自動的に設定され、この値によって、受取人がキーの承諾アルゴリズムに参加していることが示されます。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> オブジェクトのバージョン。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> クラスは、キー トランスポートの受取人情報を定義します。        キー トランスポート アルゴリズムでは、差出人が共有用の暗号化キーを生成し、それを受取人に配布することによって、受取人との間で暗号化通信を可能にする RSA アルゴリズムを使用するのが一般的です。 これは、当事者の双方がキーの生成に関わることによって、使用する暗号化キーについて相互の合意を確立するキーの承諾アルゴリズムとは対照的です。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> プロパティは、キー トランスポートの受取人用の暗号化キーを取得します。</summary>
      <returns>暗号化キーを表すバイト値配列です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> プロパティは、コンテンツ暗号化キーを暗号化するためのキー暗号化アルゴリズムを取得します。</summary>
      <returns>キー暗号化アルゴリズム識別子を格納するオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> プロパティは、暗号化コンテンツに関連付けられたサブジェクト識別子を取得します。</summary>
      <returns>キートランスポートに参加している受信者の識別子を格納するオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> プロパティは、キー トランスポートにおける受取人の CMS バージョン番号を取得します。 キー トランスポートにおける受取人の CMS バージョン番号は、このクラスのオブジェクトに対して自動的に設定され、この値によって、受取人がキー トランスポート アルゴリズムに参加していることが示されます。</summary>
      <returns>キー トランスポートにおける <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトの CMS バージョン番号を表す整数値です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary>PKCS # 12 PFX データ値の作成を有効にします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> クラスの新しい値を初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>PFX に、バイト配列からバイトベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents">PFX に追加するコンテンツ。</param>
      <param name="passwordBytes">コンテンツを暗号化するときにパスワードとして使用するバイト配列。</param>
      <param name="pbeParameters">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>PFX に、スパンからバイトベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents">PFX に追加するコンテンツ。</param>
      <param name="passwordBytes">コンテンツを暗号化するときにパスワードとして使用するバイト スパン。</param>
      <param name="pbeParameters">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>PFX に、スパンから文字列ベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents">PFX に追加するコンテンツ。</param>
      <param name="password">コンテンツを暗号化するときにパスワードとして使用するスパン。</param>
      <param name="pbeParameters">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>PFX に、文字列から文字列ベースのパスワードを使用して暗号化されたコンテンツを、一括で追加します。</summary>
      <param name="safeContents">PFX に追加するコンテンツ。</param>
      <param name="password">コンテンツを暗号化するときにパスワードとして使用する文字列。</param>
      <param name="pbeParameters">コンテンツを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> パラメーターまたは <paramref name="pbeParameters" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> パラメーター値は既に暗号化済みです。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>PFX には暗号化せずにコンテンツを追加します。</summary>
      <param name="safeContents">PFX に追加するコンテンツ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary>封印された PFX のコンテンツをエンコードし、それをバイト配列として返します。</summary>
      <returns>PFX のエンコードされた形式を表すバイト配列。</returns>
      <exception cref="T:System.InvalidOperationException">PFX は封印されていません (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は <see langword="false" />)。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary>PFX データが封印されているかどうかを示す値を取得します。</summary>
      <returns>PFX データが封印されているかどうかを示す値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>スパンからのパスワードを使用し、パスワードベースのメッセージ認証コード (MAC) をコンテンツに適用することによって、これ以上変更されないように PFX を封印します。</summary>
      <param name="password">MAC の計算のキーとして使用するパスワード。</param>
      <param name="hashAlgorithm">MAC の計算で使用するハッシュ アルゴリズム。</param>
      <param name="iterationCount">MAC の計算で使用されるキー派生関数 (KDF) の反復回数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> パラメーターが 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>文字列からのパスワードを使用し、パスワードベースのメッセージ認証コード (MAC) を、コンテンツに適用することによって、これ以上変更されないように PFX を封印します。</summary>
      <param name="password">MAC の計算のキーとして使用するパスワード。</param>
      <param name="hashAlgorithm">MAC の計算で使用するハッシュ アルゴリズム。</param>
      <param name="iterationCount">MAC の計算で使用されるキー派生関数 (KDF) の反復回数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> パラメーターが 0 以下です。</exception>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary>改ざん防止を適用せずに、これ以上変更されないように PFX を封印します。</summary>
      <exception cref="T:System.InvalidOperationException">PFX は既に封印されています (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は<see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>指定したバッファーへの封印された PFX のコンテンツのエンコードが試行されます。</summary>
      <param name="destination">PKCS#12 PFX データを受け取るバイト スパン。</param>
      <param name="bytesWritten">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">PFX は封印されていません (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> は <see langword="false" />)。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary>PKCS#12 CertBag を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>指定した証明書の種類とエンコードを使って、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="certificateType">証明書の種類のオブジェクト識別子 (OID) です。</param>
      <param name="encodedCertificate">エンコードされた証明書の値です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificateType" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedCertificate" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary>CertSafeBag の解釈されていない証明書のコンテンツを取得します。</summary>
      <returns>CertSafeBag の解釈されていない証明書の内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary>X.509 公開キー証明書として解釈される CertBag のコンテンツを取得します。</summary>
      <returns>CertBag のコンテンツからデコードされた証明書。</returns>
      <exception cref="T:System.InvalidOperationException">コンテンツの種類が、x.509 公開キー証明書のコンテンツの種類ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">コンテンツが、x.509 証明書のコンテンツの種類に対して有効ではありませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary>エンコードされた証明書の値のコンテンツの種類を識別するオブジェクト識別子 (OID) を取得します。</summary>
      <returns>エンコードされた証明書の値のコンテンツの種類を識別するオブジェクト識別子 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary>エンコードされた証明書の値のコンテンツの種類が、x.509 公開キー証明書のコンテンツの種類であるかどうかを示す値を取得します。</summary>
      <returns>コンテンツの種類が x.509 公開キー証明書のコンテンツタイプ (1.2.840.113549.1.9.22.1) である場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary>PKCS#12 SafeContents 値で関連付けられている暗号化の種類を表わします。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary>SafeContents 値は暗号化されていません。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary>SafeContents 値はパスワードで暗号化されています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary>SafeContents 値は、公開キー暗号を使用して暗号化されています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary>SafeContents に適用されている暗号化の種類は不明であるか、判断できません。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary>PKCS#12 PFX の内容からのデータを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary>PFX AuthenticatedSafe 内に存在する SafeContents 値の読み取り専用のコレクションを取得します。</summary>
      <returns>PFX 認証 Atedsafe に存在する SafeContents 値の読み取り専用コレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>指定されたデータを PKCS#12 PFX として読み取り、その内容のオブジェクト ビューを返します。</summary>
      <param name="encodedBytes">PKCS#12 PFX として解釈されるデータ。</param>
      <param name="bytesConsumed">このメソッドから戻ったときには、このメソッドによって <paramref name="encodedBytes" /> から読み取られたバイト数を示す値が格納されています。 このパラメーターは初期化前として処理されます。</param>
      <param name="skipCopy">防御用のコピーを作成しないで <paramref name="encodedBytes" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <returns>入力からデコードされた PKCS#12 PFX のオブジェクト ビュー。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBytes" /> パラメーターの内容は、PKCS#12 PFX として正常にデコードされませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容に対して提供されている改ざん防止の種類を示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> コンテンツに対して提供される改ざん防止の種類を示す列挙体メンバーの1つ。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary>
        <c>System.ReadOnlySpan {System.Char}</c> で表されるパスワードを使用して、<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> コンテンツの整合性の検証を試みます。</summary>
      <param name="password">整合性の検証を試みるために使用されるパスワード。</param>
      <returns>パスワードによって <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性が正常に検証された場合は <see langword="true" />、パスワードが正しくない場合、または内容が変更されている場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> の値が <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX の内容によって指定されたハッシュ アルゴリズム オプションは、識別できなかったか、またはこのプラットフォームでサポートされていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary>
        <see cref="T:System.String" /> によって表されたパスワードを使用して、<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性の検証を試みます。</summary>
      <param name="password">整合性の検証を試みるために使用されるパスワード。</param>
      <returns>パスワードによって <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> の内容の整合性が正常に検証された場合は <see langword="true" />、パスワードが正しくない場合、または内容が変更されている場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> の値が <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX の内容によって指定されたハッシュ アルゴリズム オプションは、識別できなかったか、またはこのプラットフォームでサポートされていません。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary>PKCS#12 PFX 値に適用された改ざん防止の種類を表わします。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary>PKCS#12 PFX 値は改ざんから守られていません。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary>PKCS#12 PFX 値は、パスワードで鍵を掛ける Message Authentication Code (MAC) で改ざんから守られています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary>PKCS#12 PFX 値は、公開キー暗号を利用したデジタル署名により改ざんから守られています。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary>PKCS#12 PFX に適用されている改ざん防止の種類は不明であるか、判断できません。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary>PKCS#12 の KeyBag を表します。これは、コンテンツが PKCS#8 PrivateKeyInfo であるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>既存のエンコードされた PKCS#8 PrivateKeyInfo 値から、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> の新しいインスタンスを初期化します。</summary>
      <param name="pkcs8PrivateKey">BER でエンコードされた PKCS#8 PrivateKeyInfo 値。</param>
      <param name="skipCopy">防御用のコピーを作成しないで <paramref name="pkcs8PrivateKey" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pkcs8privateKey" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary>このバッグによって転送された PKCS#8 PrivateKeyInfo 値を格納しているメモリ値を取得します。</summary>
      <returns>このバッグによって転送された PKCS # 8 PrivateKeyInfo 値を含むメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary>PKCS#12 仕様からの SafeBag 値のコア動作を定義し、派生クラスの基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" /> クラスを初期化するために、派生クラスのコンストラクターから呼び出されます。</summary>
      <param name="bagIdValue">この SafeBag のデータ型を示す、ドット 10 進形式のオブジェクト識別子 (OID)。</param>
      <param name="encodedBagValue">SafeBag の内容の ASN.1 BER でエンコードされた値。</param>
      <param name="skipCopy">防御用のコピーを作成しないで <see langword="true" /> を格納する場合は <paramref name="encodedBagValue" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bagIdValue" /> パラメーターが <see langword="null" /> または空の文字列です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBagValue" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary>SafeBag 値でエンコードする属性の変更可能なコレクションを取得します。</summary>
      <returns>SafeBag 値を使用してエンコードする属性の変更可能なコレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary>SafeBag 値をエンコードし、それをバイト配列として返します。</summary>
      <returns>SafeBag のエンコードされた形式を表すバイト配列。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">コンストラクターに渡されたオブジェクト識別子の値が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary>この SafeBag の内容の ASN.1 BER エンコードを取得します。</summary>
      <returns>この SafeBag の内容の asn.1 BER エンコード。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary>この SafeBag のコンテンツ タイプを示すオブジェクト識別子 (OID) を取得します。</summary>
      <returns>この SafeBag のコンテンツ タイプを示すオブジェクト識別子 (OID)。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>指定されたバッファーへの SafeBag の値のエンコードを試みます。</summary>
      <param name="destination">エンコードされた SafeBag の値を受け取るためのバイト スパン。</param>
      <param name="bytesWritten">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">コンストラクターに渡されたオブジェクト識別子の値が無効です。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary>PKCS#12 SafeContents 値を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> を介して証明書を SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="certificate">追加する証明書。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> パラメーターが無効な状態です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> を介して非対称秘密キーを SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key">追加する非対称秘密キー。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" /> を介して入れ子になった SafeContents を SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="safeContents">SafeContents に追加する入れ子になったコンテンツ。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> パラメーターは暗号化されています。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary>SafeContents に SafeBag を追加します。</summary>
      <param name="safeBag">追加する SafeBag 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeBag" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" /> を介して、指定された型識別子を持つ ASN.1 BER でエンコードされた値を SafeContents に追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="secretType">シークレット値のデータ型を識別するオブジェクト識別子 (OID)。</param>
      <param name="secretValue">追加するシークレットを表す、BER でエンコードされた値。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secretType" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="secretValue" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>配列内のバイトベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key">追加する非対称秘密キー。</param>
      <param name="passwordBytes">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>スパン内のバイトベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key">追加する非対称秘密キー。</param>
      <param name="passwordBytes">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>スパン内の文字ベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key">追加する非対称秘密キー。</param>
      <param name="password">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>文字列内の文字ベースのパスワードから新しい <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> を介して SafeContents に暗号化された非対称秘密キーを追加し、新しく作成されたバッグ インスタンスを返します。</summary>
      <param name="key">追加する非対称秘密キー。</param>
      <param name="password">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns>SafeContents に追加されたバッグ インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">このインスタンスは読み取り専用です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">キーのエクスポートに失敗しました。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary>コンテンツに適用される暗号化の種類を示す値を取得します。</summary>
      <returns>コンテンツに適用される暗号化の種類を示す列挙値の1つ。 既定値は <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" /> です。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary>配列のバイトベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="passwordBytes">暗号化されたコンテンツの暗号化を解除するためのパスワードとして使用するバイト。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">パスワードが正しくありません。

または -

コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary>スパンのバイトベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="passwordBytes">暗号化されたコンテンツの暗号化を解除するためのパスワードとして使用するバイト。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">パスワードが正しくありません。
または
コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary>スパンの文字ベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="password">暗号化されたコンテンツの暗号化を解除するために使用するパスワード。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">パスワードが正しくありません。
または
コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary>文字列の文字ベースのパスワードを使用して、この SafeContents 値のコンテンツの暗号化を解除します。</summary>
      <param name="password">暗号化されたコンテンツの暗号化を解除するために使用するパスワード。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> プロパティは <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" /> ではありません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">パスワードが正しくありません。

または -

コンテンツの暗号化が正常に解除されませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary>SafeContents 内に格納されている SafeBag 値の列挙可能な表現を取得します。</summary>
      <returns>SafeContents 内に格納されている SafeBag 値の列挙可能な表現。</returns>
      <exception cref="T:System.InvalidOperationException">コンテンツは暗号化されています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary>このインスタンスが読み取り専用状態であるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />この値が読み取り専用状態である場合は。それ以外<see langword="false" />の場合は。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary>PKCS#12 の SafeContentsBag を表します。これは、コンテンツが PKCS#12 SafeContents 値であるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary>このバックに格納されている SafeContents 値を取得します。</summary>
      <returns>このバッグ内に格納されている SafeContents の値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary>PKCS#12 の SecretBag を表します。これは、コンテンツが型識別子を持つ任意のデータであるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary>シークレット値のデータ型を識別するオブジェクト識別子 (OID) を取得します。</summary>
      <returns>シークレット値のデータ型を識別するオブジェクト識別子 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary>バッグの BER でエンコードされたコンテンツを格納しているメモリ値を取得します。</summary>
      <returns>バッグの BER でエンコードされたコンテンツを含むメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary>PKCS#12 の ShroudedKeyBag を表します。これは、コンテンツが PKCS#8 EncryptedPrivateKeyInfo であるコンテナーです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>既存のエンコードされた PKCS#8 EncryptedPrivateKeyInfo 値から、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> の新しいインスタンスを初期化します。</summary>
      <param name="encryptedPkcs8PrivateKey">BER でエンコードされた PKCS#8 EncryptedPrivateKeyInfo 値。</param>
      <param name="skipCopy">防御用のコピーを作成しないで <paramref name="encryptedPkcs8PrivateKey" /> を格納する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedPkcs8privateKey" /> パラメーターが、ASN.1 BER でエンコードされた 1 つの値を表していません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary>このバッグによって転送された PKCS#8 EncryptedPrivateKeyInfo 値を含むメモリ値を取得します。</summary>
      <returns>このバッグによって転送された PKCS # 8 EncryptedPrivateKeyInfo 値を格納しているメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary>PKCS#8 の PrivateKeyInfo と EncryptedPrivateKeyInfo の値の検査と作成を有効にします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="algorithmId">このキーの対象となる非対称アルゴリズムを示すオブジェクト識別子 (OID)。</param>
      <param name="algorithmParameters">このキーに関連付けられている BER でエンコードされたアルゴリズム パラメーター、またはエンコード時にアルゴリズム パラメーターを省略する場合は <see langword="null" />。</param>
      <param name="privateKey">アルゴリズム固有のエンコードされた秘密キー。</param>
      <param name="skipCopies">防御用のコピーを作成しないで <see langword="true" /> および <paramref name="algorithmParameters" /> を格納する場合は <paramref name="privateKey" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithmId" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithmParameters" /> パラメーターが、<see langword="null" /> ではないか、空であるか、または 1 つの BER でエンコードされた値です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary>このキーの対象となるアルゴリズムを示すオブジェクト識別子 (OID) の値を取得します。</summary>
      <returns>このキーのアルゴリズムを識別するオブジェクト識別子 (OID) 値。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary>このキーに関連付けられている BER でエンコードされたアルゴリズム パラメーターが格納されているメモリ値を取得します。</summary>
      <returns>このキーに関連付けられている BER でエンコードされたアルゴリズムパラメーターを格納しているメモリ値。または、パラメーターが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary>この秘密キーに対する属性の変更可能なコレクションを取得します。</summary>
      <returns>秘密キーを使用してエンコードする、変更可能な属性のコレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>指定されたキーを PKCS#8 PrivateKeyInfo としてエクスポートし、デコードされた解釈を返します。</summary>
      <param name="privateKey">PKCS#8 PrivateKeyInfo で表す秘密キー。</param>
      <returns>エクスポートされた PKCS#8 PrivateKeyInfo のデコードされた解釈。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="privateKey" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>指定されたデータを PKCS#8 PrivateKeyInfo として読み取り、その内容のオブジェクト ビューを返します。</summary>
      <param name="source">PKCS#8 PrivateKeyInfo 値として解釈するデータ。</param>
      <param name="bytesRead">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <param name="skipCopy">防御用のコピーを作成しないで <see langword="true" /> を格納する場合は <paramref name="source" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <returns>PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="source" /> パラメーターの内容は、PKCS#8 PrivateKeyInfo として正常にデコードされませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>指定されたバイト ベースのパスワードを使用して指定されたデータを復号化し、その出力を PKCS#8 PrivateKeyInfo のオブジェクト ビューにデコードします。</summary>
      <param name="passwordBytes">キー マテリアルを暗号化解除するときにパスワードとして使用するバイト。</param>
      <param name="source">ASN.1-BER エンコードで PKCS#8 EncryptedPrivateKeyInfo 構造体として読み取るデータ。</param>
      <param name="bytesRead">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>復号化されて PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">パスワードが正しくありません。

または -

<paramref name="source" /> のコンテンツは、適用するキー派生関数 (KDF) が、<see cref="T:System.Char" /> ベースのパスワードを必要とするレガシの PKCS#12 KDF であることを示しています。

または -

<paramref name="source" /> のコンテンツは、ASN.1-BER でエンコードされた PKCS#8 EncryptedPrivateKeyInfo 構造体を表していません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>指定された文字ベースのパスワードを使用して指定されたデータを復号化し、その出力を PKCS#8 PrivateKeyInfo のオブジェクト ビューにデコードします。</summary>
      <param name="password">キー マテリアルを復号化するときに使用するパスワード。</param>
      <param name="source">ASN.1-BER エンコードでの PKCS#8 EncryptedPrivateKeyInfo 構造体のバイト。</param>
      <param name="bytesRead">このメソッドから制御が戻ったときに、<paramref name="source" /> から読み込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>復号化されて PKCS#8 PrivateKeyInfo としてデコードされた内容のオブジェクト ビュー。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary>このインスタンスのプロパティ データを PKCS#8 PrivateKeyInfo としてエンコードし、エンコードをバイト配列として返します。</summary>
      <returns>PKCS#8 PrivateKeyInfo のエンコード形式を表すバイト配列。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>指定されたバイト ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成します。</summary>
      <param name="passwordBytes">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns>PKCS#8 EncryptedPrivateKeyInfo のエンコード形式が格納されているバイト配列。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> は、<see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> ベースのパスワードを必要とする <see cref="T:System.Char" /> を使用する必要があることを示しています。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>指定された文字ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成します。</summary>
      <param name="password">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <returns>PKCS#8 EncryptedPrivateKeyInfo のエンコード形式が格納されているバイト配列。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary>アルゴリズム固有のエンコードされた秘密キーを表すメモリ値を取得します。</summary>
      <returns>アルゴリズム固有のエンコードされた秘密キーを表すメモリ値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>このインスタンスのプロパティ データを PKCS#8 PrivateKeyInfo としてエンコードすることを試み、指定されたバッファーに結果を書き込みます。</summary>
      <param name="destination">PKCS#8 PrivateKeyInfo データを受け取るバイト スパン。</param>
      <param name="bytesWritten">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>指定されたバイト ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成することを試み、指定されたバッファーに結果を書き込みます。</summary>
      <param name="passwordBytes">キー マテリアルを暗号化するときにパスワードとして使用するバイト。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <param name="destination">PKCS#8 EncryptedPrivateKeyInfo データを受け取るバイト スパン。</param>
      <param name="bytesWritten">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>指定された文字ベースのパスワードと暗号化パラメーターを使用して暗号化した後、このオブジェクトのプロパティの内容から PKCS#8 EncryptedPrivateKeyInfo を生成することを試み、指定されたバッファーに結果を書き込みます。</summary>
      <param name="password">キー マテリアルを暗号化するときに使用するパスワード。</param>
      <param name="pbeParameters">キー マテリアルを暗号化するときに使用する、パスワードベースの暗号化 (PBE) パラメーター。</param>
      <param name="destination">PKCS#8 EncryptedPrivateKeyInfo データを受け取るバイト スパン。</param>
      <param name="bytesWritten">このメソッドが戻るときに、<paramref name="destination" /> に書き込まれたバイト数を示す値が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>
        <see langword="true" /> が出力を受け入れるだけの十分な大きさの場合は <paramref name="destination" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>CMS/PKCS #7 および PKCS #9 の操作に使用する属性を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>指定された <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトを対応する属性のタイプおよび値とし、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="asnEncodedData">使用する PKCS #9 属性のタイプおよび値を保持するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> の <paramref name="Oid" /> メンバーの <paramref name="asnEncodedData" /> メンバーの長さはゼロです。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Oid" /> の <paramref name="asnEncodedData" /> メンバーは <see langword="null" /> です。
または
<paramref name="Value" /> の <paramref name="Oid" /> メンバーの <paramref name="asnEncodedData" /> メンバーは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>属性タイプとして <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトを、また、属性値として ASN.1 でエンコードされたデータを指定することによって、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。、</summary>
      <param name="oid">PKCS #9 の属性タイプを表すオブジェクト。</param>
      <param name="encodedData">PKCS #9 の属性値を表すバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>属性タイプとしてオブジェクト識別子 (OID) の文字列表現を、また、属性値として ASN.1 でエンコードされたデータを指定することによって、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> クラスの新しいインスタンスを初期化します。、</summary>
      <param name="oid">PKCS #9 属性タイプを表す OID の文字列表現。</param>
      <param name="encodedData">PKCS #9 の属性値を保持するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>指定された <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトから、この <see cref="T:System.Security.Cryptography.AsnEncodedData" /> の PKCS #9 属性の型と値をコピーします。</summary>
      <param name="asnEncodedData">使用する PKCS #9 属性のタイプおよび値を保持するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodeData" /> は、互換性のある属性型を表しません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>この <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトに関連付けられた属性のタイプを表す <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> オブジェクトに関連付けられた属性のタイプを表すオブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> クラスは、CMS/PKCS #7 メッセージのコンテンツ タイプを定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> プロパティは、コンテンツ タイプを保持する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns>コンテンツ タイプを保持する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスは、CMS/PKCS #7 メッセージのコンテンツの説明を定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> コンストラクターは、指定されたバイト値配列を CMS/PKCS #7 メッセージ コンテンツのエンコード済みの説明として使用し、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスのインスタンスを作成します。</summary>
      <param name="encodedDocumentDescription">CMS/PKCS #7 メッセージのエンコード済みの説明を指定するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> コンストラクターは、CMS/PKCS #7 メッセージ コンテンツの説明を引数として受け取り、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> クラスのインスタンスを作成します。</summary>
      <param name="documentDescription">CMS/PKCS #7 メッセージの説明を指定する <see cref="T:System.String" /> クラスのインスタンス。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> プロパティは、ドキュメントの説明を取得します。</summary>
      <returns>ドキュメントの説明を格納している <see cref="T:System.String" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスは、CMS/PKCS #7 メッセージの名前を定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> コンストラクターは、指定されたバイト値配列を CMS/PKCS #7 メッセージ コンテンツのエンコード済みの名前として使用し、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスのインスタンスを作成します。</summary>
      <param name="encodedDocumentName">CMS/PKCS #7 メッセージのエンコード済みの名前を指定するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> コンストラクターは、CMS/PKCS #7 メッセージ コンテンツの名前を引数として受け取り、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> クラスのインスタンスを作成します。</summary>
      <param name="documentName">CMS/PKCS #7 メッセージの名前を指定する <see cref="T:System.String" /> オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> プロパティは、ドキュメントの名前を取得します。</summary>
      <returns>ドキュメントの名前を格納している <see cref="T:System.String" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary>PKCS#9 の LocalKeyId 属性を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary>空のキー識別子の値を使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary>バイト配列によって指定されたキー識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyId">キー識別子が格納されているバイト配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>バイト スパンによって指定されたキー識別子を使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keyId">キー識別子が格納されているバイト配列。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary>この属性からのキー識別子が格納されているメモリ値を取得します。</summary>
      <returns>この属性のキー識別子を格納しているメモリ値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> クラスは、CMS/PKCS #7 メッセージのメッセージ ダイジェストを定義します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> プロパティは、メッセージ ダイジェストを取得します。</summary>
      <returns>メッセージ ダイジェストを保持するバイト値配列です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスは署名日時を定義します。 デジタル署名に認証の日付と時刻が付加されている場合、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> オブジェクトを <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクトの認証済み属性として使用できます。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> コンストラクターは、指定されたバイト値配列を CMS/PKCS #7 メッセージ コンテンツのエンコード済みの署名日時として使用して、<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスのインスタンスを作成します。</summary>
      <param name="encodedSigningTime">CMS/PKCS #7 メッセージのエンコード済みの署名日時を指定するバイト値配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> コンストラクターは、指定された署名日時を使用して <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> クラスのインスタンスを作成します。</summary>
      <param name="signingTime">署名日時を表す <see cref="T:System.DateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData">情報のコピー元となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> プロパティは、メッセージが署名された日時を表す <see cref="T:System.DateTime" /> 構造体を取得します。</summary>
      <returns>ドキュメントが署名された日時を保持する <see cref="T:System.DateTime" /> 構造体。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> クラスは、公開キーに関連付けられた情報を表します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> プロパティは、公開キーに関連付けられたアルゴリズム識別子を取得します。</summary>
      <returns>アルゴリズムを表すオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> プロパティは、公開キー ペアのエンコード済み公開コンポーネントの値を取得します。</summary>
      <returns>公開キー ペアのエンコード済みの公開コンポーネントを表すバイト値配列です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> クラスは、CMS/PKCS #7 メッセージの受取人に関する情報を表します。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> クラスおよび <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> クラスによって継承される抽象クラスです。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 抽象プロパティは、受取人用の暗号化されたキー マテリアル (暗号化キーにおける関係を確立、維持するために必要な情報) を取得します。</summary>
      <returns>受取人用の暗号化されたキー マテリアルが格納されるバイト値配列です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 抽象プロパティは、キーを確立するためのアルゴリズムを取得します。</summary>
      <returns>CMS/PKCS #7 メッセージの差出人と受取人との間でキーを確立するためのアルゴリズムの値を保持する <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> オブジェクトです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 抽象プロパティは、受取人の識別子を取得します。</summary>
      <returns>受取人の識別子を保持する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> オブジェクトです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> プロパティは、受取人のタイプを取得します。 受取人のタイプにより、CMS/PKCS #7 メッセージの差出人と受取人との間で、2 つの主要なプロトコルのうち、どちらを使ってキーを確立するかが決定されます。</summary>
      <returns>受取人のタイプを定義する <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 列挙型の値です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 抽象プロパティは、受取人情報の CMS バージョン番号を取得します。 派生クラスのオブジェクトでは、このプロパティが自動的に設定され、この値によって、メッセージの保護に PKCS #7 と Cryptographic Message Syntax (CMS) のどちらを使用しているかが示されます。 また、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトによって暗号化キーが確立される際に、キーの承諾アルゴリズムとキー トランスポート アルゴリズムのどちらが使われているかも、このバージョン番号によって暗黙的にわかります。</summary>
      <returns>
        <see cref="T:System.Int32" /> オブジェクトの CMS バージョン番号を表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 値です。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトのコレクションを表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> クラス。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> では、<see cref="T:System.Collections.ICollection" /> インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Array" /> コレクションのコピー先の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクト。</param>
      <param name="index">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションを <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションをコピーする <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> の配列。</param>
      <param name="index">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクション内のアイテム数を取得します。</summary>
      <returns>コレクション内のアイテム数を表す整数値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> プロパティは、コレクションへのアクセスを同期させて、スレッド セーフにするかどうかを示します。 このプロパティは常に、コレクションがスレッド セーフではないことを意味する <see langword="false" /> を返します。</summary>
      <returns>コレクションがスレッド セーフではないことを意味する <see cref="T:System.Boolean" /> 値 (<see langword="false" />) を返します。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> プロパティは、コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトを取得します。</summary>
      <param name="index">コレクション内のインデックスを表す整数値。 インデックスは 0 から始まります。</param>
      <returns>指定したインデックスの位置にある <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> プロパティは、<see cref="T:System.Object" /> コレクションへのアクセスを同期化するための <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを取得します。</summary>
      <returns>コレクションへの<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />アクセスを同期するために使用するオブジェクト。 <see cref="T:System.Object" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> コレクションの列挙機能を提供します。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> では、<see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションにおける現在の受取人情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションの次の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトに列挙子を進めます。</summary>
      <returns>このメソッドは、列挙子が正常に進められたかどうかを示すブール値を返します。 列挙子を正常に次の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> オブジェクトに進めることができた場合は、<see langword="true" /> が返されます。 列挙子が列挙体の最後のアイテムを越えると、<see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションの最初の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトに列挙子をリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> コレクションにおける現在の受取人情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 列挙型は、受取人情報のタイプを定義します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>キーの承諾の受取人情報です。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>キー トランスポートの受取人情報です。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>受取人情報のタイプは不明です。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="data" />
      <param name="hashAlgorithm" />
      <param name="requestedPolicyId" />
      <param name="nonce" />
      <param name="requestSignerCertificates" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="hash" />
      <param name="hashAlgorithm" />
      <param name="requestedPolicyId" />
      <param name="nonce" />
      <param name="requestSignerCertificates" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>事前計算済みのハッシュ値を使って、タイムスタンプ要求を作成します。</summary>
      <param name="hash">タイムスタンプを付ける事前計算済みのハッシュ値です。</param>
      <param name="hashAlgorithmId">
        <paramref name="hash" /> を生成したハッシュ アルゴリズムのオブジェクト識別子 (OID) です。</param>
      <param name="requestedPolicyId">タイムスタンプ局 (TSA) で使う必要があるタイムスタンプ ポリシーのオブジェクト識別子 (OID) です。<see langword="null" /> の場合は優先設定がありません。</param>
      <param name="nonce">この要求を一意に識別して応答とペアリングするための、省略可能な nonce (一度だけ使われる数) です。 値は、符号なしのビッグ エンディアンの整数として解釈され、エンコード形式に正規化されることがあります。</param>
      <param name="requestSignerCertificates">発行されたタイムスタンプ トークンの署名証明書がタイムスタンプ局 (TSA) に含まれる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="extensions">要求を示す RFC3161 の拡張機能です。</param>
      <returns>選択した値を表す <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> です。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="signerInfo" />
      <param name="hashAlgorithm" />
      <param name="requestedPolicyId" />
      <param name="nonce" />
      <param name="requestSignerCertificates" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <param name="responseBytes" />
      <param name="bytesConsumed" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="request" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary>RFC3161 タイムスタンプ トークンの署名済み Cryptographic Message Syntax (CMS) 形式を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> の <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" /> 形式です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="token" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="data" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" />
      <param name="hashAlgorithm" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" />
      <param name="hashAlgorithmId" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="signerInfo" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" />
      <param name="hashAlgorithmId" />
      <param name="messageHash" />
      <param name="serialNumber" />
      <param name="timestamp" />
      <param name="accuracyInMicroseconds" />
      <param name="isOrdering" />
      <param name="nonce" />
      <param name="timestampAuthorityName" />
      <param name="extensions" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="timestampTokenInfo" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスは、CMS/PKCS #7 メッセージの署名と検証を可能にします。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> コンストラクターは、指定したコンテンツ情報を内部コンテンツとして使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="contentInfo">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> コンストラクターは、指定したコンテンツ情報を内部コンテンツとして使用し、デタッチ ステートを使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="contentInfo">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <param name="detached">
        <see cref="T:System.Boolean" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 値。 <paramref name="detached" /> が <see langword="true" /> の場合、署名が分離されます。 <paramref name="detached" /> が <see langword="false" /> の場合、署名が分離されません。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> コンストラクターは、指定したサブジェクト識別子タイプを署名者の既定のサブジェクト識別子タイプとして使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="signerIdentifierType">署名者の既定のサブジェクト識別子タイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> コンストラクターは、指定したサブジェクト識別子タイプを署名者の既定のサブジェクト識別子タイプとして使用し、コンテンツ情報を内部コンテンツとして使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="signerIdentifierType">署名者の既定のサブジェクト識別子タイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー。</param>
      <param name="contentInfo">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> コンストラクターは、指定したサブジェクト識別子タイプを署名者の既定のサブジェクト識別子タイプとして使用し、コンテンツ情報を内部コンテンツとして使用したうえで、さらにデタッチ ステートを使用して、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
      <param name="signerIdentifierType">署名者の既定のサブジェクト識別子タイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー。</param>
      <param name="contentInfo">コンテンツ情報を <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> メッセージの内部コンテンツとして指定する <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクト。</param>
      <param name="detached">
        <see cref="T:System.Boolean" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 値。 <paramref name="detached" /> が <see langword="true" /> の場合、署名が分離されます。 detached が <see langword="false" /> の場合、署名が分離されません。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>エンコードされた CMS/PKCS #7 メッセージに対する証明書のコレクションに証明書を追加します。</summary>
      <param name="certificate">コレクションに追加する証明書。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">証明書はコレクションに既に存在しています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> プロパティは、エンコードされた CMS/PKCS #7 メッセージに関連付けられた証明書を取得します。</summary>
      <returns>エンコードされた CMS/PKCS #7 メッセージで使用する証明書セットを表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> コレクション。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> メソッドは、CMS/PKCS #7 メッセージのデータの整合性を検証します。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> は、デジタル署名の完全な検証を実行するのではなく、CMS メッセージのハッシュをチェックすることが唯一の目的の、特定のセキュリティ インフラストラクチャ アプリケーションで使用される特殊なメソッドです。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> メソッドは、デジタル署名の検証機能を備えていないため、メッセージの作成者と送信元の認証には使用できません。 CMS/PKCS #7 メッセージの整合性と信頼性を検証する一般的な用途では、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> メソッドまたは <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドを使用してください。</summary>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> メソッドは、署名済み CMS/PKCS #7 メッセージのデジタル署名を検証するだけでなく、オプションで署名者の証明書を検証します。</summary>
      <param name="verifySignatureOnly">署名者の証明書を検証せずにデジタル署名だけを検証するかどうかを指定する <see cref="T:System.Boolean" />。
<paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、デジタル署名だけが検証されます。 <see langword="false" /> の場合、デジタル署名、署名者の証明書、および証明書の目的が検証されます。 証明書にキー使用法が設定されていない場合、またはキー使用法がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドは、指定した証明書コレクションを使用して、署名済み CMS/PKCS #7 メッセージのデジタル署名を検証するだけではなく、オプションで署名者の証明書を検証します。</summary>
      <param name="extraStore">証明書チェーンを検証するために使用できる <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> オブジェクト。 証明書チェーンの検証に追加の証明書を使用しない場合は、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> ではなく、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> を使用してください。</param>
      <param name="verifySignatureOnly">署名者の証明書を検証せずにデジタル署名だけを検証するかどうかを指定する <see cref="T:System.Boolean" />。
<paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、デジタル署名だけが検証されます。 <see langword="false" /> の場合、デジタル署名、署名者の証明書、および証明書の目的が検証されます。 証明書にキー使用法が設定されていない場合、またはキー使用法がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。</summary>
      <exception cref="T:System.InvalidOperationException">.NET Framework (すべてのバージョン) および .NET Core 3.0 以降: 受信者の証明書が指定されていません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core バージョン 2.2 以前: 署名者証明書が指定されていません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> メソッドは、指定した署名者を使用して署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。</summary>
      <param name="signer">署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>指定した署名者を使用して署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。</summary>
      <param name="signer">署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクト。</param>
      <param name="silent">このパラメーターは使用されません。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">.NET Framework のみ: 署名証明書が指定されていません。</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core のみ: 署名証明書が指定されていません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> プロパティは、エンコードされた CMS/PKCS #7 メッセージの内部コンテンツを取得します。</summary>
      <returns>エンコードされた CMS/PKCS #7 メッセージの内容を表す <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> メソッドは、エンコードされた <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> メッセージをデコードします。 デコードが正常に実行された場合、デコードされた情報を <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトのプロパティから取得できます。</summary>
      <param name="encodedMessage">デコードするエンコード済み CMS/PKCS #7 メッセージを表すバイト値配列。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Boolean" /> オブジェクトがデタッチ シグネチャ用であるかどうかを示す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 値。 このプロパティが <see langword="true" /> の場合、署名は分離されます。 このプロパティが <see langword="false" /> の場合、署名は分離されません。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> メソッドは、オブジェクト内の情報を CMS/PKCS #7 メッセージにエンコードします。</summary>
      <returns>エンコードされたメッセージを表すバイト値配列。 エンコードされたメッセージは、<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> メソッドでデコードできます。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>エンコードされた CMS/PKCS #7 メッセージに対する証明書のコレクションから、指定された証明書を削除します。</summary>
      <param name="certificate">コレクションから削除する証明書。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">証明書が見つかりませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> コレクションの指定したインデックス位置にある署名を削除します。</summary>
      <param name="index">削除する署名の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException">CMS/PKCS #7 メッセージが署名されておらず、<paramref name="index" /> が無効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が "署名数 - 1" を超えています。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">署名を削除できなかった。

または -

内部の暗号エラーが発生しました。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> メソッドは、指定した <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの署名を削除します。</summary>
      <param name="signerInfo">削除対象の副署名を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> プロパティは、CMS/PKCS #7 メッセージに関連付けられた <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションを取得します。</summary>
      <returns>CMS/PKCS #7 メッセージの署名者情報を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> プロパティは、CMS/PKCS #7 メッセージのバージョン情報を取得します。</summary>
      <returns>CMS/PKCS #7 メッセージのバージョン番号を表す整数値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> クラスは、CMS/PKCS #7 メッセージを表す <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトに関連付けられた署名者を表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>指定した属性を現在のドキュメントに追加します。</summary>
      <param name="asnEncodedData">ドキュメントに追加する ASN.1 でエンコードされた属性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">元の署名者が見つかりません。

または -

ASN1 のデータが壊れています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> プロパティは、署名者情報に関連付けられた署名証明書を取得します。</summary>
      <returns>署名証明書を表す <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> メソッドは、CMS/PKCS #7 メッセージの署名者情報について、データの整合性を検証します。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> は、<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクトの設定時に、サブジェクトが <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列挙型の HashOnly メンバーを使用する、特定のセキュリティ インフラストラクチャ アプリケーション用に特化したメソッドです。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> メソッドは、デジタル署名の検証機能を備えていないため、署名者情報の認証には使用できません。 CMS/PKCS #7 メッセージの署名者情報と副署名について、整合性と信頼性を検証する一般的な用途では、<see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> メソッドまたは <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドを使用してください。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> メソッドでは、メッセージのデジタル署名および証明書 (オプション) が検証されます。</summary>
      <param name="verifySignatureOnly">デジタル署名のみを検証の対象とするかを指定するブール値。 <paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、署名だけが検証されます。 <paramref name="verifySignatureOnly" /> が <see langword="false" /> の場合、デジタル署名の検証に加え、証明書チェーンの有効性と証明書の目的が検証されます。 証明書にキーの使用目的が設定されていないか、キーの使用目的がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドは、指定された証明書のコレクションを使ってメッセージのデジタル署名を検証するほか、オプションで証明書の検証まで実行します。</summary>
      <param name="extraStore">チェーンを検証するために使用できる <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> オブジェクト。 チェーンの検証に追加の証明書を使用しない場合は、<see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> ではなく、<see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> を使用してください。</param>
      <param name="verifySignatureOnly">デジタル署名のみを検証の対象とするかを指定するブール値。 <paramref name="verifySignatureOnly" /> が <see langword="true" /> の場合、署名だけが検証されます。 <paramref name="verifySignatureOnly" /> が <see langword="false" /> の場合、デジタル署名の検証に加え、証明書チェーンの有効性と証明書の目的が検証されます。 証明書にキーの使用目的が設定されていないか、キーの使用目的がデジタル署名または否認防止をサポートしている場合、証明書の目的が有効と見なされます。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">オブジェクトの現在の状態に対してメソッドの呼び出しが無効です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> メソッドは、署名証明書を選択するよう求めるメッセージを表示し、副署名を作成して、その署名を CMS/PKCS #7 メッセージに追加します。 副署名の使用は、1 レベルに限定されています。</summary>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> メソッドは、指定された署名者で副署名を作成し、その署名を CMS/PKCS #7 メッセージに追加します。 副署名の使用は、1 レベルに限定されています。</summary>
      <param name="signer">副署名の署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> プロパティは、署名者情報に関連付けられた、副署名の一連の署名者を取得します。</summary>
      <returns>署名者情報に関連付けられた副署名の署名者を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクション。 副署名の署名者が存在しない場合、このプロパティ値は空のコレクションになります。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> プロパティは、署名の計算に使用されたハッシュ アルゴリズムを表す <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <returns>署名用のハッシュ アルゴリズムを表す <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary>現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの署名を取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの署名。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> メソッドは、指定されたインデックス位置にある副署名を <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> コレクションから削除します。</summary>
      <param name="index">削除する副署名の、0 から始まるインデックス。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> メソッドは、指定された <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトの副署名を削除します。</summary>
      <param name="counterSignerInfo">削除対象の副署名を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">暗号操作を完了できませんでした。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>指定された属性を現在のドキュメントから削除します。</summary>
      <param name="asnEncodedData">ドキュメントから削除する ASN.1 でエンコードされた属性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">元の署名者が見つかりません。
または
属性が見つかりません。
または
ASN1 のデータが壊れています。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary>現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトが使用する署名アルゴリズムの識別子を取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトが使用する署名アルゴリズムの識別子。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> プロパティは、署名者情報に関連付けられた署名属性の <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクションを取得します。 署名属性は、それ以外のメッセージ コンテンツと共に署名されます。</summary>
      <returns>署名属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクション。 署名属性が存在しない場合、このプロパティ値は空のコレクションになります。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> プロパティは、署名者情報に関連付けられた署名者の証明書識別子を取得します。</summary>
      <returns>署名者情報に関連付けられた証明書を一意に識別する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> プロパティは、<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> のコンテンツに関連付けられた非署名属性の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションを取得します。 非署名属性は、署名を無効化せずに変更できます。</summary>
      <returns>非署名属性を表す <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> コレクション。 非署名属性が存在しない場合、このプロパティ値は空のコレクションになります。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> プロパティは、署名者情報のバージョン番号を取得します。</summary>
      <returns>署名者情報のバージョン番号を指定する整数値。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトのコレクションを表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> クラス。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> では、<see cref="T:System.Collections.ICollection" /> インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Array" /> コレクションのコピー先の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</param>
      <param name="index">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションを <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションをコピーする <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> の配列。</param>
      <param name="index">
        <paramref name="array" /> の 0 から始まるインデックス。この位置を先頭に、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションがコピーされます。</param>
      <exception cref="T:System.ArgumentException">メソッドに渡されたいずれかの引数が無効です。</exception>
      <exception cref="T:System.ArgumentNullException">null 参照を有効な引数として受け付けないメソッドに null 参照が渡されました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクション内のアイテム数を取得します。</summary>
      <returns>コレクション内のアイテム数を表す整数値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> プロパティは、コレクションへのアクセスを同期させて、スレッド セーフにするかどうかを示します。 このプロパティは常に、コレクションがスレッド セーフではないことを意味する <see langword="false" /> を返します。</summary>
      <returns>コレクションがスレッド セーフではないことを意味する <see cref="T:System.Boolean" /> 値 (<see langword="false" />) を返します。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> プロパティは、コレクション内の指定したインデックス位置の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトを取得します。</summary>
      <param name="index">コレクション内のインデックスを表す整数値。 インデックスは 0 から始まります。</param>
      <returns>指定したインデックス位置にあるオブジェクト。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /></returns>
      <exception cref="T:System.ArgumentOutOfRangeException">引数の値が、呼び出されたメソッドで定義されている許容範囲内に該当しません。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> プロパティは、<see cref="T:System.Object" /> コレクションへのアクセスを同期化するための <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> オブジェクトは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションへのアクセスを同期化するために使用されます。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションの <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> コレクションを列挙するために使用できる <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> クラスは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションの列挙機能を提供します。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> では、<see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションにおける現在の署名主情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> コレクションの次の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトに列挙子を進めます。</summary>
      <returns>このメソッドは、列挙子が正常に進められたかどうかを示すブール値を返します。 列挙子を正常に次の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトに進めることができた場合は、<see langword="true" /> が返されます。 列挙子が列挙体の最後のアイテムを越えると、<see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> メソッドは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションの最初の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトに列挙子をリセットします。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> プロパティは、<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションから、現在の <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> コレクションにおける現在の署名主情報の構造体を表す <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> オブジェクトです。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> クラスは、サブジェクトの識別子のタイプ (<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> や <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> など) を定義します。  サブジェクトは、証明書の発行者とシリアル番号またはサブジェクト キーによって識別できます。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>指定された証明書のサブジェクト識別子が現在のサブジェクト識別子のインスタンスと一致するかどうかを確認します。</summary>
      <param name="certificate">現在のサブジェクト識別子のインスタンスと照合する証明書。</param>
      <returns>指定された証明書の識別子が現在のサブジェクト識別子のインスタンスと一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">サブジェクト識別子の種類が無効です。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティは、サブジェクト識別子のタイプを取得します。 サブジェクトは、証明書の発行者とシリアル番号またはサブジェクト キーによって識別できます。</summary>
      <returns>サブジェクトの種類を<see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />識別する列挙体のメンバー。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> プロパティは、サブジェクト識別子の値を取得します。 サブジェクト識別子のタイプを調べる場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティを、対応する値を取得する場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> プロパティを使用します。</summary>
      <returns>サブジェクト識別子の値を表す <see cref="T:System.Object" /> オブジェクト。 この <see cref="T:System.Object" /> は、<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティで指定された、次のいずれかのオブジェクトになります。
 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> プロパティ 
  Object 
  IssuerAndSerialNumber 
 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
 <see cref="T:System.String" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> クラスは、サブジェクトの識別子のタイプ (<see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> や <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> など) を定義します。  サブジェクトは、証明書発行者とシリアル番号、サブジェクト キーのハッシュ、またはサブジェクト キーによって識別できます。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティは、サブジェクト識別子またはキーのタイプを取得します。 サブジェクトは、証明書発行者とシリアル番号、サブジェクト キーのハッシュ、またはサブジェクト キーによって識別できます。</summary>
      <returns>サブジェクト識別子のタイプを指定する <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 列挙型のメンバーです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> プロパティは、サブジェクト識別子またはキーの値を取得します。 サブジェクト識別子またはキーのタイプを調べる場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティを、対応する値を取得する場合は <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> プロパティを使用します。</summary>
      <returns>サブジェクト識別子またはキーの値を表す <see cref="T:System.Object" /> オブジェクト。 この <see cref="T:System.Object" /> は、<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティで指定された、次のいずれかのオブジェクトになります。
 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> プロパティ 
  Object 
  IssuerAndSerialNumber 
 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
 <see cref="T:System.String" /> PublicKeyInfo 
 <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 列挙型は、サブジェクトの識別方法を定義します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>サブジェクトは、証明書の発行者とシリアル番号によって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>サブジェクトは公開キーによって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>サブジェクトはサブジェクト キーのハッシュによって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>タイプは不明です。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列挙型は、サブジェクト識別子のタイプを定義します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>サブジェクトは、証明書の発行者とシリアル番号によって識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>サブジェクトは、ハッシュ アルゴリズムのみを使用した整合性チェック処理に参加しているものとして識別されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>サブジェクトはサブジェクトの公開キーのハッシュによって識別されます。 使用するハッシュ アルゴリズムは、サブジェクトの証明書に格納された署名アルゴリズム スイートによって決定されます。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>サブジェクト識別子のタイプは不明です。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>XML デジタル署名の &lt;<see langword="X509IssuerSerial" />&gt; 要素を表します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>X.509 証明書の発行者の識別名を取得または設定します。</summary>
      <returns>X.509 証明書の発行者の識別名。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>X.509 証明書の発行者のシリアル番号を取得または設定します。</summary>
      <returns>X.509 証明書の発行者のシリアル番号。</returns>
    </member>
  </members>
</doc>