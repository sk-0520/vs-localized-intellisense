<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">XAML マークアップ拡張機能特性のレガシ報告の型を記録します。</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">この属性が報告する戻り値の型。</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">この属性が報告する戻り値の型を取得または設定します。</summary>
      <returns vsli:raw="The return type that this attribute reports.">この属性が報告する戻り値の型。</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">プロパティまたは型をアンビエントとして扱うよう指定しています。 アンビエントの概念は XAML プロセッサがメンバーの型の所有者を確認する方法と関連します。</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.AmbientAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">.NET Framework XAML サービスの <see langword="x:Array" /> サポートを実装します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">
        <see cref="T:System.Windows.Markup.ArrayExtension" /> クラスの新しいインスタンスを初期化します。 これにより、空の配列が作成されます。</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">指定された生の配列に基づいて、<see cref="T:System.Windows.Markup.ArrayExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">作成された配列のメンバーを追加する配列の内容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">
        <see cref="T:System.Windows.Markup.ArrayExtension" /> クラスの新しいインスタンスを初期化し、配列の型を初期化します。</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">新しい配列のオブジェクトの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="arrayType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">指定したオブジェクトを配列の末尾に追加します。</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">配列の末尾に追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">新しい配列項目としてテキスト ノードを追加します。</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">配列の末尾に追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">配列の内容を取得します。 XAML のコレクション構文を使用して XAML で設定可能。</summary>
      <returns vsli:raw="The array contents.">配列の内容。</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">
        <see cref="P:System.Windows.Markup.ArrayExtension.Items" /> の値で指定されたオブジェクトの数に合わせてサイズが設定されている配列を返します。</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">マークアップ拡張機能のサービスを提供できるオブジェクト。</param>
      <returns vsli:raw="The created array, or null.">作成された配列、または null。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">有効な <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> を提供しなかった配列が処理されました。

または -
配列の宣言型 <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> と、その <see cref="P:System.Windows.Markup.ArrayExtension.Items" /> 値 (1 つまたは複数) の間で型が一致しません。</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">
        <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" /> の呼び出し時に作成される配列の型を取得または設定します。</summary>
      <returns vsli:raw="The type of the array.">配列の型。</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">パラメーターなし以外のコンストラクター構文を使用してオブジェクトを初期化できることと、指定した名前のプロパティが構造情報を提供できることを指定します。  この情報は主に XAML シリアル化用です。</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">関連付けられたプロパティを初期化するコンストラクターの名前。</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">関連するプロパティを初期化するコンストラクターの name パラメーターを取得します。</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">コンストラクターの名前。 CLR バッキングの場合、これは関連するコンストラクター パラメーターの <see cref="P:System.Reflection.ParameterInfo.Name" /> に対応します。</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">型のどのプロパティが XAML コンテンツ プロパティであるかを示します。 XAML プロセッサは、属性付き型の XAML 表現の XAML 子要素を処理するときに、この情報を使用します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">指定された名前を使用して、<see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">コンテンツ プロパティであるプロパティのプロパティ名。</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">コンテンツ プロパティであるプロパティの名前を取得します。</summary>
      <returns vsli:raw="The name of the property that is the content property.">コンテンツ プロパティであるプロパティの名前。</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">外部コンテンツをラップするために使用される関連するコレクション型に対して 1 つ以上の型を指定します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">コレクション型のコンテンツ ラッパーとして宣言される <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">この属性に関連付けられているコレクション型のコンテンツ ラッパーとして宣言されている型を取得します。</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">コレクション型のコンテンツ ラッパーとして宣言されている型。</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">
        <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> プロパティを比較して、指定した <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> がこの <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> と等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">比較対象の <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> プロパティが等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">このインスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="An integer hash code.">整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">この属性の一意の識別子を取得します。</summary>
      <returns vsli:raw="A unique identifier for the attribute.">属性の一意の識別子。</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.String" /> のインスタンスと <see cref="T:System.DateTime" /> のインスタンスを相互に変換します。</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">指定した <see cref="T:System.String" /> を <see cref="T:System.DateTime" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">変換の評価対象となる文字列。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定したオブジェクトを <see cref="T:System.String" /> に変換できるかどうかについて判断します。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">変換の評価対象となるオブジェクト。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> を <see cref="T:System.String" /> に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.String" /> を <see cref="T:System.DateTime" /> に変換します。</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.DateTime" /> に変換する文字列。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">指定された <see cref="T:System.DateTime" /> に基づいた、<paramref name="value" /> の新しいインスタンス。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.DateTime" /> のインスタンスを <see cref="T:System.String" /> に変換します。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">文字列に変換するオブジェクト。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">指定した <see cref="T:System.DateTime" /> の文字列表現。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see cref="T:System.DateTime" /> ではないか、または <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">属性付きプロパティが別のプロパティの値に依存することを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.DependsOnAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">この <see cref="T:System.Windows.Markup.DependsOnAttribute" /> に関連付けられているプロパティが依存するプロパティ。</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">この <see cref="T:System.Windows.Markup.DependsOnAttribute" /> で宣言されている関連するプロパティの名前を取得します。</summary>
      <returns vsli:raw="The name of the related property.">関連するプロパティの名前。</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">この <see cref="T:System.Windows.Markup.DependsOnAttribute" />の一意の識別子を取得します。</summary>
      <returns vsli:raw="The unique identifier.">一意の識別子。</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">暗黙のキー値を提供する関連付けられているクラスのプロパティを指定します。 <see langword="x:Key" /> コレクションの項目では、XAML で定義される明示的な <see cref="T:System.Collections.IDictionary" /> 属性ではなく、暗黙のキーが使用されます。</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">暗黙のキー値が用意されたプロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">暗黙のキー値が用意されたプロパティの名前を取得します。</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">暗黙のキー値が用意されたプロパティの名前。</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">名前付き XAML 要素およびその要素へのイベント ハンドラーのアタッチに対するマークアップのコンパイルとツールのサポートを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">イベントと名前をコンパイルされたコンテンツにアタッチします。</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">呼び出しを区別するための識別子トークン。</param>
      <param name="target" vsli:raw="The target to connect events and names to.">イベントと名前の接続先のターゲット。</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">コンポーネントのコンパイルされたページを読み込みます。</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">特定の XAML 名前スコープ内の要素の名前にアクセスする方法およびその XAML 名前スコープ内で名前が一意になるように強制する方法に関するコントラクトを定義します。</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">指定された識別名を持つオブジェクトを返します。</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">要求されているオブジェクトの名前識別子。</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">見つかった場合はオブジェクト。 その名前のオブジェクトが見つからなかった場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">指定された名前を現在の XAML 名前スコープに登録します。</summary>
      <param name="name" vsli:raw="The name to register.">登録する名前。</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">指定された <paramref name="name" /> が参照する特定の要素。</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">指定された名前の登録を現在の XAML 名前スコープから解除します。</summary>
      <param name="name" vsli:raw="The name to unregister.">登録を解除する名前。</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">XAML 名前スコープ内の名前の辞書を公開するのに役立つ列挙可能な値、コレクション、および辞書サポートを統一します。</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">マークアップ拡張機能の評価に対する状況的なオブジェクトとプロパティの関係を報告するサービスを表します。</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">報告されるターゲット オブジェクトを取得します。</summary>
      <returns vsli:raw="The target object being reported.">報告されるターゲット オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">報告されるターゲット プロパティの識別子を取得します。</summary>
      <returns vsli:raw="An identifier for the target property being reported.">報告されるターゲット プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">指定されたプロパティを現在のスコープでアンビエントとして扱う必要があるかどうかを照会します。</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">指定された名前付きプロパティを現在のスコープでアンビエントと見なすことができるかどうかを照会します。</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">アンビエンス状態を確認するプロパティの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要求されたプロパティをアンビエントと見なすことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">アプリケーション コンテキストを使用して指定された相対 URI を絶対 URI に解決できるサービスを表します。</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">現在のアプリケーション コンテキストのベース URI を取得または設定します。</summary>
      <returns vsli:raw="The base URI of the application context.">アプリケーション コンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> に提供されるコンテキストを定義します。 このコンテキストは、特殊なケースのシリアル化や別のモードのシリアル化を有効にするのに使用できます。</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">指定されたプロパティ記述子の <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">変換されるプロパティの記述子。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">指定されたプロパティをシリアル化できる <see cref="T:System.Windows.Markup.ValueSerializer" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">指定された型に関連付けられている <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</summary>
      <param name="type" vsli:raw="The type of the value being converted.">変換する値の型。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">指定された型をシリアル化できる <see cref="T:System.Windows.Markup.ValueSerializer" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">XAML マークアップの名前付き要素から適切な CLR 型に解決するサービスを表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">名前付き XAML 型を対応する CLR の <see cref="T:System.Type" /> に解決します。</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">解決する XAML 型名。 オプションで、型名は XML 名前空間のプレフィックスで修飾できます。 それ以外の場合は、現在の既定の XML 名前空間が仮定されます。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">
        <paramref name="qualifiedTypeName" /> が解決される <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">.NET Framework. XAML サービスによってサポートされる XAML マークアップ拡張機能の実装の基本クラス、および他の XAML リーダーと XAML ライターを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.MarkupExtension" /> から派生したクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">派生クラスで実装された場合、このマークアップ拡張機能のターゲット プロパティの値として提供されるオブジェクトを返します。</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">マークアップ拡張機能のサービスを提供できるサービス プロバイダーのヘルパー。</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">拡張機能が適用されたプロパティで設定するオブジェクト値。</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">マークアップ拡張で返すことができるかっこ文字を報告します。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">指定した文字を使用して <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">左角かっこ文字を定義する <see cref="T:System.Char" />。</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">右角かっこ文字を定義する <see cref="T:System.Char" />。</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.MarkupExtension" /> で終了区切り記号として使用する文字を指定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">文字を表す <see cref="T:System.Char" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.MarkupExtension" /> で開始区切り記号として使用する文字を指定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">文字を表す <see cref="T:System.Char" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">マークアップ拡張機能で返すことができる型を報告します。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">指定した <see cref="T:System.Type" /> を使用して <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">この属性が報告する戻り値の型。</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">非推奨。使用しないでください。</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">この .NET Framework 属性 が報告する戻り値の型。</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">非推奨。使用しないでください。</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">非推奨。使用しないでください。</summary>
      <returns vsli:raw="Deprecated; do not use.">非推奨。使用しないでください。</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">この .NET Framework 属性 が報告する <see cref="T:System.Windows.Markup.MarkupExtension" /> 戻り値の型を取得します。</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">
        <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> .NET Framework 属性 実装のタイプ セーフな戻り値の型。</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">宣言的 XAML でクラスのメンバーを定義するマークアップ手法で使用される基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.MemberDefinition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">派生クラスで実装された場合、定義するメンバーの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the member to define.">定義するメンバーの名前。</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">文字列名をその名前を持つオブジェクトのオブジェクト参照に変換する、またはオブジェクト グラフからオブジェクトの名前を返す型変換を提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.NameReferenceConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">コンバーターが特定の型のオブジェクトを別のオブジェクトに変換できるかどうかを示す値を返します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">コンバーターがオブジェクトを指定された型に変換できるかどうかを示す値を返します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType" vsli:raw="The type to convert to.">変換後の型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">指定されたコンテキストとカルチャ情報を使用して、提供されたオブジェクトを別のオブジェクトに変換します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The reference name string to convert.">変換する参照名の文字列。</param>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">返されたオブジェクト。これは、関連するバッキング アセンブリで型マッピングされ、XAML 名前参照により XAML で宣言できる任意のオブジェクトである可能性があります。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">
        <paramref name="value" /> が null 文字列または空の文字列です。
または
<see cref="T:System.Xaml.IXamlNameResolver" /> サービスが見つからないか、無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">オブジェクトを指定された型に変換します。 これはオブジェクト グラフ内のオブジェクトの XAML 参照名を返すためのものです。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">参照名を取得するオブジェクト。</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">返す型。 常に <see cref="T:System.String" /> 型を参照する必要があります。</param>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">入力 <paramref name="value" /> オブジェクトの参照名。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">
        <see cref="T:System.Xaml.IXamlNameProvider" /> サービスが見つからないか、無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> は <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">XAML 名前スコープの値を提供する関連付けらているクラスのプロパティを指定します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">指定した名前を使用して、<see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">XAML 名前スコープを提供する属性付き型のプロパティの名前。</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">指定した名前および型を使用して、<see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">XAML 名前スコープを提供するアタッチ可能なメンバーの名前。</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">XAML 名前スコープを提供するアタッチ可能なメンバーの所有者型。</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">XAML 名前スコープを提供するプロパティの名前を取得します。</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">XAML 名前スコープを提供するプロパティの名前を示す文字列値。</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">XAML 名前スコープのサポートを提供する添付プロパティの所有者タイプを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">XAML 名前スコープのサポートを提供する添付プロパティの所有者タイプである <see cref="T:System.Type" /> 値。または <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">XAML で値を明示的に null に設定するときに使用できる null オブジェクトを返すために、XAML マークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.NullExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">マークアップ拡張機能の出力の値として使用する <see langword="null" /> を提供します。</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">マークアップ拡張機能の実装のサービスを提供できるオブジェクト。</param>
      <returns vsli:raw="A null reference.">null 参照。</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">宣言的 XAML 内のクラスのプロパティを定義するマークアップ手法をサポートします。</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.PropertyDefinition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">関連する CLR 属性のリストを取得します。</summary>
      <returns vsli:raw="A list of associated attributes.">関連する属性のリスト。</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">定義されたプロパティのアクセス レベルを取得または設定します。</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">文字列としての、定義されたプロパティのアクセス レベル。</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">定義するプロパティの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the property to define.">定義するプロパティの名前。</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">定義するプロパティの <see cref="T:System.Xaml.XamlType" /> を取得または設定します。</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">定義するプロパティの XAML 型識別子。</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">
        <c>{x:Reference}</c> のマークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.Reference" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">
        <paramref name="name" /> 引数で <see cref="T:System.Windows.Markup.Reference" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">参照する要素の XAML 名。</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">参照を取得する XAML の名前を取得または設定します。</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">参照を取得する要素の XAML 名。</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">ターゲット プロパティの値であるオブジェクトを返します。 <see cref="T:System.Windows.Markup.Reference" /> 型の場合、これは指定した <see cref="P:System.Windows.Markup.Reference.Name" /> が参照するオブジェクトです。</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">
        <see cref="T:System.Xaml.IXamlNameResolver" /> サービスを実装するクラス。</param>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">ターゲット プロパティの値。 これは関連するバッキング アセンブリで型マッピングされた任意のオブジェクトである可能性があります。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">
        <paramref name="serviceProvider" /> 値は、<see cref="T:System.Xaml.IXamlNameResolver" /> サービスを実装しません。
または
構造または位置指定を使用して、<see cref="P:System.Windows.Markup.Reference.Name" /> 値が設定されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> は <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Visual Studio プロジェクト ファイル内の <see langword="RootNamespace" /> プロパティの値を特定するために使用するアセンブリ レベル属性を表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.RootNamespaceAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">ルート名前空間の値。</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Visual Studio プロジェクト ファイルの <see langword="RootNamespace" /> プロパティの値に対応する文字列を取得します。</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Visual Studio プロジェクトファイル内の<see langword="RootNamespace" />プロパティの値に対応する文字列。</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">XAML x:Name attribute にマップする型のプロパティを報告する型レベル属性を表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">クラスの <see langword="x:Name" /> に等価なものとして使用するプロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">この <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /> で指定されるランタイム名のプロパティの名前を取得します。</summary>
      <returns vsli:raw="The name of the property.">プロパティの名前。</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">静的フィールドとプロパティ参照を返すマークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.StaticExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">指定された <paramref name="member" /> 文字列を使用して、<see cref="T:System.Windows.Markup.StaticExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">参照を作成する対象となるメンバーを識別する文字列。 この文字列では形式 <c>prefix:typeName.fieldOrPropertyName</c> が使用されています。 <c>prefix</c> は XAML 名前空間のマッピング プレフィックスで、既定の XAML 名前空間にマップされない静的な値を参照する場合にのみ必要です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">サービスで提供される型リゾルバーに基づいて静的なフィールドまたはプロパティを解決するために使用される、メンバー名文字列を取得または設定します。</summary>
      <returns vsli:raw="A string that identifies the member to make a reference to.">参照を作成する対象となるメンバーを識別する文字列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Windows.Markup.StaticExtension.Member" /> を <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">返す静的なメンバーを定義する <see cref="T:System.Type" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">返す静的なメンバーを定義する <see cref="T:System.Type" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> を <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">この拡張機能を適用するプロパティで設定するオブジェクトの値を返します。 <see cref="T:System.Windows.Markup.StaticExtension" /> の場合、戻り値は、要求された静的なメンバーの評価対象となる静的な値です。</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">マークアップ拡張機能のサービスを提供できるオブジェクト。 サービス プロバイダーは、型リゾルバー (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />) を実装するサービスを提供することが求められます。</param>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">拡張機能が適用されたプロパティで設定する静的な値。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">拡張機能の <paramref name="member" /> 値は、評価時には <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">
        <paramref name="member" /> 文字列は、正しく解析されなかった部分があります。
または
<paramref name="serviceProvider" /> が <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> のサービスを提供しませんでした。

または -
<paramref name="member" /> 値は、静的メンバーに対して解決されませんでした。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> は <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">マークアップで型の要素を囲んでいる空白をシリアル化時に削除するよう XAML プロセッサに指示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">文字列の入力に基づき <see cref="T:System.Type" /> を返すマークアップ拡張を実装します。</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.TypeExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">
        <see cref="T:System.Windows.Markup.TypeExtension" /> クラスの新しいインスタンスを初期化します。<see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> 値は、指定された <paramref name="typeName" /> 文字列に基づいて初期化されます。</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">参照する型を識別する文字列。 この文字列の形式は <c>prefix:className</c> です。 <c>prefix</c> は XAML 名前空間のマッピング プレフィックスで、既定の XAML 名前空間にマップされない型を参照する場合にのみ必要です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> を <see langword="null" /> として指定しようとしました。</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">型を直接宣言して、<see cref="T:System.Windows.Markup.TypeExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">この <see cref="T:System.Windows.Markup.TypeExtension" /> によって表される型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> は <see langword="null" /> です</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">この拡張機能を適用するプロパティで設定するオブジェクトを返します。 <see cref="T:System.Windows.Markup.TypeExtension" /> の場合、これは要求された型名の評価対象となる <see cref="T:System.Type" /> 値です。</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">マークアップ拡張機能のサービスを提供できるオブジェクト。 プロバイダーは、<see cref="T:System.Windows.Markup.IXamlTypeResolver" /> に対するサービスを提供することが求められます。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">拡張機能が適用されたプロパティに設定する <see cref="T:System.Type" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">拡張機能の <paramref name="member" /> 値は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">
        <paramref name="typeName" /> 文字列に正しく解析されなかった部分があります。
または
<paramref name="serviceProvider" /> が <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> のサービスを提供しませんでした。
または
<paramref name="typeName" /> 値が型に対して解決されませんでした。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> は <see langword="null" /> です</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">この拡張機能の型情報を取得または設定します。</summary>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">確立された型。 ランタイムの場合は、get アクセスで <see langword="null" /> になることがありますが、<see langword="null" /> に設定することはできません。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">このマークアップ拡張機能によって表される型名を取得または設定します。</summary>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">型を識別する文字列。 この文字列の形式はprefix<c>:</c>classNameです。 (prefixは XML 名前空間のマッピングプレフィックスであり、WPF の既定の XML 名前空間 (<c>http://schemas.microsoft.com/winfx/2006/xaml/presentation</c>) にマップされていない型を参照するためにのみ必要です。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="null" /> に設定しようとしました。</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">x:Uid ディレクティブ値を提供するクラスの CLR プロパティを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.UidPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">
        <see langword="x:Uid" /> 値を提示するプロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">x:Uid ディレクティブ値を表す CLR プロパティの名前を取得します。</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">x:Uid Directiveを表す CLR プロパティの名前。</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">この型が XAML オブジェクト グラフの作成中に上から下に組み込まれるかどうかを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">関連付けられているクラスが初期化中に使用可能かどうかを定義します。</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">関連付けられているクラスが、初期化中に使用できるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">関連付けれているクラスが初期化中に使用できるようであれば <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">オブジェクト表現からのシリアル化の変換動作を定義する抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">派生クラスでオーバーライドされると、指定した <see cref="T:System.String" /> が、<see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型のインスタンスに変換できるかどうかを確認します。</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">変換の評価対象となる文字列。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">派生クラスでオーバーライドされたとき、指定されたオブジェクトを <see cref="T:System.String" /> に変換できるかどうかを決定します。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">変換の評価対象となるオブジェクト。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> を <see cref="T:System.String" /> に変換できる場合は <see langword="true" />。それ以外は <see langword="false." />。</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">派生クラスでオーバーライドされると、<see cref="T:System.String" /> を、<see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型のインスタンスに変換します。</summary>
      <param name="value" vsli:raw="The string to convert.">変換する文字列。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">指定された <paramref name="value" /> に基づいて <see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型の新しいインスタンス。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> を変換できません。</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">派生クラスでオーバーライドされると、指定したオブジェクトを <see cref="T:System.String" /> に変換します。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">文字列に変換するオブジェクト。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="A string representation of the specified object.">指定されたオブジェクトの文字列形式。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> を変換できません。</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">変換を実行できなかった場合にスローされる例外を返します。</summary>
      <param name="value" vsli:raw="The object that could not be converted.">変換できなかったオブジェクト。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">
        <see langword="ConvertFrom" /> の変換を実行できない場合にスローされる例外の <see cref="T:System.Exception" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">変換を実行できなかった場合にスローされる例外を返します。</summary>
      <param name="value" vsli:raw="The object that could not be converted.">変換できなかったオブジェクト。</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">コンバーターが変換しようとした型を表す型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">
        <see langword="ConvertTo" /> の変換を実行できない場合にスローされる例外の <see cref="T:System.Exception" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">プロパティの CLR プロパティ記述子を渡すことにより、プロパティに対して宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">シリアル化するプロパティの CLR プロパティ記述子。</param>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">指定したプロパティに関連付けられているシリアライザー。 <see langword="null" /> を返す場合があります。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">指定したコンテキストを使用して、指定されたプロパティに宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">シリアル化するプロパティの記述子。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="The serializer associated with the specified property.">指定したプロパティに関連付けられているシリアライザー。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">指定した型に宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得する対象の型。</param>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">指定した型に関連付けられているシリアライザー。 <see langword="null" /> を返す場合があります。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">指定したコンテキストを使用して、指定された型に宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得する対象の型。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="The serializer associated with the specified type.">指定した型に関連付けられているシリアライザー。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> によって参照される型の列挙体を取得します。</summary>
      <param name="value" vsli:raw="The value being serialized.">シリアル化されている型。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">変換に使用されるコンテキスト情報。</param>
      <returns vsli:raw="The types converted by this serializer.">このシリアライザーによって変換された型。</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>シリアル化される場合に、型またはプロパティが使用する必要のある <see cref="T:System.Windows.Markup.ValueSerializer" /> クラスを識別します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>アセンブリ修飾型名の文字列を使用して、<see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="valueSerializerTypeName">使用する <see cref="T:System.Windows.Markup.ValueSerializer" /> クラスのアセンブリ修飾型名の文字列。</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>指定された型を使用して、<see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="valueSerializerType">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> クラスの型を表す型。</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>この属性によって報告される <see cref="T:System.Windows.Markup.ValueSerializer" /> クラスの型を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.ValueSerializer" /> の型。</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>この型またはプロパティの <see cref="T:System.Windows.Markup.ValueSerializer" /> 型のアセンブリ修飾名を取得します。</summary>
      <returns>この型のアセンブリ修飾名。</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">コレクション型が XAML プロセッサで有意な空白として処理される必要があることを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">クラスまたはプロパティに XAML の遅延読み込みの使用 (テンプレート動作など) が含まれていることを示し、遅延動作を有効にするクラスと、その宛先/コンテンツ タイプを報告します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">型の文字列名を使用して、<see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">実装が遅延読み込み動作に使用する型の文字列名。</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">遅延読み込み動作の宛先/コンテンツ タイプの型の文字列名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> または <paramref name="contentType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">CLR <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> の値を使用して、<see cref="T:System.Type" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">実装が遅延読み込み動作に使用する CLR <see cref="T:System.Type" /> の値。</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">遅延読み込み動作の宛先/コンテンツ タイプの CLR <see cref="T:System.Type" /> の値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> または <paramref name="contentType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">遅延読み込み動作の宛先/コンテンツ タイプの CLR <see cref="T:System.Type" /> の値を取得します。</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">遅延読み込み動作の宛先/コンテンツ タイプの CLR <see cref="T:System.Type" /> の値。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">実装が遅延読み込み動作に使用する型の文字列名を取得します。</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">コンバーターが遅延読み込み動作に使用する型の文字列名。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">実装が遅延読み込み動作に使用する CLR <see cref="T:System.Type" /> の値を取得します。</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">実装が遅延読み込み動作に使用する CLR <see cref="T:System.Type" /> の値。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">遅延読み込み動作の宛先/コンテンツ タイプの型の文字列名を取得します。</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">遅延読み込み動作の宛先/コンテンツ タイプの型の文字列名。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">クラスはマークアップ拡張機能を使用して値を提供し、マークアップ拡張機能のセット操作で使用するハンドラーを参照することを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">マークアップ拡張機能のセット操作で使用するハンドラーの名前</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">マークアップ拡張機能のセット操作で使用するハンドラーの名前を取得します。</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">マークアップ拡張機能のセット操作で使用するハンドラーの名前</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">XAML オブジェクト ライターがマークアップ拡張機能を使用して値を設定するときに呼び出されるコールバックのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">設定されているメンバーの XAML 型システムおよびスキーマ情報。</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">設定されているメンバーに提供されるマークアップ拡張機能の参照。</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">マークアップ拡張機能に渡されるサービス プロバイダー情報。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">現在機能している型の基本クラスで定義されるコールバックを呼び出す方法を提供します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">この <see cref="T:System.Windows.Markup.MarkupExtension" /> に関連する <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" /> の参照を取得します。</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">この <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" /> に関連するマークアップ拡張機能の参照。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">マークアップ拡張機能に渡されたサービス プロバイダー情報を取得します。</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">マークアップ拡張機能に渡されたサービス プロバイダー情報。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">クラスは型コンバーターを使用して値を提供し、型コンバーターを設定する場合に使用するハンドラーを参照できることを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">操作を設定する型コンバーターで使用するハンドラーの名前。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" /> で指定された <paramref name="xamlSetTypeConverterHandler" /> の初期値 (ハンドラー名) を取得します。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" /> で指定された <paramref name="xamlSetTypeConverterHandler" /> の値。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">XAML ライターが型コンバーターの呼び出しを使用して値を設定するときに呼び出されるコールバックのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">設定されているメンバーの XAML 型システムおよびスキーマ情報。</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">呼び出される特定の型コンバーターのインスタンス。</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">設定されているメンバーに提供する値。</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">
        <paramref name="typeConverter" /> クラスで使用できるサービス プロバイダー情報。</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">
        <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> およびその他のメソッドを呼び出すときに <paramref name="typeConverter" /> クラスで使用できるカルチャ情報。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">現在機能している型の基本クラスで定義されるコールバックを呼び出す方法を提供します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">
        <see cref="T:System.Globalization.CultureInfo" /> およびその他のメソッドを呼び出すときに型コンバーター クラスで使用できる <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> の情報を取得します。</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">型コンバーター クラスで使用できるカルチャ情報。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">型コンバーター クラスで使用できる <see cref="T:System.IServiceProvider" /> の情報を取得します。</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">
        <paramref name="typeConverter" /> クラスで使用できるサービス プロバイダー情報。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">呼び出され、型変換動作を提供する <see cref="T:System.ComponentModel.TypeConverter" /> インスタンスを取得します。</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">型変換動作を提供する型コンバーター。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> が特定の値に設定されるときに呼び出されるコールバックのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">設定されているメンバーの XAML 型システムおよびスキーマ情報。</param>
      <param name="value" vsli:raw="The value to provide for the member.">メンバーに提供する値。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">派生クラスでオーバーライドされると、現在機能している型の基本クラスで定義される <see langword="SetValue" /> コールバックを呼び出す方法を提供します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> を使用している呼び出し元が <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> を呼び出さずに値を使用できるかどうかを確認する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値が使用可能で <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> の呼び出しが必要ない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">設定されているメンバーの XAML 型システムおよび XAML スキーマ情報を取得します。</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">設定されているメンバーの XAML 型システムおよび XAML スキーマ情報。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">設定されているメンバーに提供する値を取得します。</summary>
      <returns vsli:raw="The value to provide for the member being set.">設定されているメンバーに提供する値。</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">
        <see langword="Value" /> ノードの値として表示されるリテラル データを表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XData" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">この <see cref="T:System.Windows.Markup.XData" /> がラップするリテラル値文字列を取得または設定します。</summary>
      <returns vsli:raw="The literal value string.">リテラル値文字列。</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">リテラル データのリーダーを取得または設定します。</summary>
      <returns vsli:raw="A reader for the literal data.">リテラル データのリーダー。</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">xml:lang 属性に関連付けるプロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">
        <see langword="xml:lang" /> 属性に関連付けるプロパティ名。</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">この属性で指定されるプロパティの名前を取得します。</summary>
      <returns vsli:raw="The name of the property.">プロパティの名前。</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">XAML 名前空間を別の XAML 名前空間によって包括できることを指定します。 通常、包含する側の XAML 名前空間は、あらかじめ定義した <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> で示されます。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">参照 XAML 名前空間の識別子。</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">包括する XAML 名前空間の識別子。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> または <paramref name="newNamespace" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">この属性によって報告される、包括する名前空間の識別子を取得します。</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">属性で報告される、包括する名前空間の識別子。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">この属性によって報告される、参照名前空間の識別子を取得します。</summary>
      <returns vsli:raw="The reference namespace identifier.">参照名前空間の識別子。</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">XAML 名前空間と CLR 名前空間の間でアセンブリごとのマッピングを指定します。これは XAML オブジェクト ライターまたは XAML スキーマ コンテキストで、型の解決に使用されます。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">XAML 名前空間識別子。</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">CLR 名前空間の名前を参照する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> または <paramref name="clrNamespace" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">属性に関連付けられたアセンブリの名前を取得または設定します。</summary>
      <returns vsli:raw="The assembly name.">アセンブリ名。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">この属性で指定された CLR 名前空間の文字列名を取得します。</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">文字列で指定した CLR 名前空間。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">この属性で指定される XAML 名前空間の識別子を取得します。</summary>
      <returns vsli:raw="The XAML namespace identifier.">XAML 名前空間の識別子。</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">XAML ファイルに要素と属性を書き込む (シリアル化する) とき、または XAML 編集機能を持つデザイン環境とやり取りするときに、XAML で使用するために XAML 名前空間に関連付ける推奨プレフィックスを示します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">XAML 名前空間の識別子。</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">推奨プレフィックス文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> または <paramref name="prefix" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">この属性に関連付けられている推奨プレフィックスを取得します。</summary>
      <returns vsli:raw="The recommended prefix string.">推奨プレフィックス文字列。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">この属性に関連付けられている XAML 名前空間の識別子を取得します。</summary>
      <returns vsli:raw="The XAML namespace identifier.">XAML 名前空間の識別子。</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">
        <see cref="T:System.Xaml.IAmbientProvider" /> 実装の一部として、アンビエント プロパティに関する情報を報告します。</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">
        <see cref="T:System.Xaml.AmbientPropertyValue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">アンビエント プロパティを表す識別子。</param>
      <param name="value" vsli:raw="The value to report.">報告される値。</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">アンビエント プロパティを表す XAML 型システム識別子 (<see cref="T:System.Xaml.XamlMember" />) を取得します。</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">アンビエント プロパティを表す識別子。</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">アンビエント プロパティの値を取得します。</summary>
      <returns vsli:raw="The value of the ambient property.">アンビエント プロパティの値。</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">アタッチ可能なメンバーの XAML 型システムの識別子表現を提供します。 識別子の構造は、アタッチ可能なメンバーの使用法の <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> 文字列形式に対応します。</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">識別子の <paramref name="declaringType" /> 構成要素。宣言している <see cref="P:System.Xaml.XamlMember.Type" /> の名前と一致する必要があります。</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">識別子の <paramref name="memberName" /> 構成要素。<see cref="P:System.Xaml.XamlMember.Name" /> と一致する必要があります。</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> の <paramref name="declaringType" /> 構成要素の値を取得または設定します。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> の <paramref name="declaringType" /> 構成要素の値。</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> のこのインスタンスと指定したオブジェクトの値が同一かどうかを判断します。</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">現在の <see cref="T:System.Xaml.AttachableMemberIdentifier" /> と比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> が <see cref="T:System.Xaml.AttachableMemberIdentifier" /> の場合、およびこのインスタンスと同じ値を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">このインスタンスと、指定した別の <see cref="T:System.Xaml.AttachableMemberIdentifier" /> の値が同一かどうかを判断します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">現在の <see cref="T:System.Xaml.AttachableMemberIdentifier" /> と比較する <see cref="T:System.Xaml.AttachableMemberIdentifier" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのオブジェクトの値が同一の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">この <see cref="T:System.Xaml.AttachableMemberIdentifier" /> のハッシュ コードを返します。</summary>
      <returns vsli:raw="An integer hash code.">整数のハッシュ コード。</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> の <paramref name="memberName" /> 構成要素の値を取得または設定します。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> の <paramref name="memberName" /> 構成要素の値。</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">指定した 2 つの <see cref="T:System.Xaml.AttachableMemberIdentifier" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> または <see langword="null" />。</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> の値が <paramref name="right" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">指定した 2 つの <see cref="T:System.Xaml.AttachableMemberIdentifier" /> オブジェクトの値が異なるかどうかを判断します。</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> または <see langword="null" />。</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" /> の値が <paramref name="right" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">現在の <see cref="T:System.String" /> を表す <see cref="T:System.Xaml.AttachableMemberIdentifier" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">現在の <see cref="T:System.Xaml.AttachableMemberIdentifier" /> を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">アタッチ可能なプロパティから値およびアクセサー メソッド情報を取得し、添付プロパティ ストアを操作する静的なヘルパー メソッドを提供します。</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">指定されたアタッチ可能なプロパティ ストアから、すべてのアタッチ可能なプロパティと値のペアをコピー先の配列にコピーします。</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">
        <see cref="T:System.Xaml.IAttachedPropertyStore" /> を実装する特定のアタッチ可能なプロパティ ストア、または静的な既定のアタッチ可能なプロパティ ストアにアクセスする任意の null でないオブジェクト。</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">コピー先の配列。 配列はジェネリック配列であり、次元の指定なしで渡す必要があります。また、構成要素として <see cref="T:System.Xaml.AttachableMemberIdentifier" /> および <see langword="object" /> が含まれている必要があります。</param>
      <param name="index" vsli:raw="The source index into which to copy.">コピーする位置を示すコピー元インデックス。</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">指定されたストア内のアタッチ可能なプロパティのエントリ数を返します。</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">
        <see cref="T:System.Xaml.IAttachedPropertyStore" /> を実装する特定のアタッチ可能なプロパティ ストア、または静的な既定のアタッチ可能なプロパティ ストアにアクセスする任意の null でないオブジェクト。</param>
      <returns vsli:raw="The integer count of entries in the store.">ストア内のエントリの数 (整数)。</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">指定されたアタッチ可能なプロパティのエントリを指定されたストアから削除します。</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">
        <see cref="T:System.Xaml.IAttachedPropertyStore" /> を実装する特定のアタッチ可能なプロパティ ストア、または静的な既定のアタッチ可能なプロパティ ストアにアクセスする任意の null でないオブジェクト。</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">ストアから削除するアタッチ可能なプロパティ エントリの識別子。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="name" /> に対応するアタッチ可能なプロパティ エントリがストア内に見つかり、ストアから削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">指定されたストアの指定されたアタッチ可能なプロパティの値を設定します。</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">
        <see cref="T:System.Xaml.IAttachedPropertyStore" /> を実装する特定のアタッチ可能なプロパティ ストア、または静的な既定のアタッチ可能なプロパティ ストアを使用する任意の null でないオブジェクト。</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">値の設定対象となるアタッチ可能なプロパティ エントリの識別子。</param>
      <param name="value" vsli:raw="The value to set.">設定する値。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">ストア内の値を設定できませんでした。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">指定されたストアで、指定されたアタッチ可能なプロパティの値の取得を試みます。 特定のアタッチ可能なプロパティがストア内に存在しない場合、例外はスローされません。</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">
        <see cref="T:System.Xaml.IAttachedPropertyStore" /> を実装する特定のアタッチ可能なプロパティ ストア、または静的な既定のアタッチ可能なプロパティ ストアを使用する任意の null でないオブジェクト。</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">値の取得対象となるアタッチ可能なプロパティ エントリの識別子。</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Out パラメーター。 <paramref name="name" /> がストア内に存在して値を保持している場合、このメソッドから戻ったときに、その値のコピー先オブジェクトが含まれます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ストア内に <paramref name="name" /> に対応するアタッチ可能なプロパティ エントリが見つかり、値が <paramref name="value" /> にポストされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">指定されたストアで、指定されたアタッチ可能なプロパティの値の取得を試み、ジェネリック出力フォームを返します。 特定のアタッチ可能なプロパティがストア内に存在しない場合、例外はスローされません。</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">
        <see cref="T:System.Xaml.IAttachedPropertyStore" /> を実装する特定のアタッチ可能なプロパティ ストア、または静的な既定のアタッチ可能なプロパティ ストアにアクセスする任意の null でないオブジェクト。</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">値の取得対象となるアタッチ可能なプロパティ エントリの識別子。</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Out パラメーター。 <paramref name="name" /> がストア内に存在して値を保持している場合、このメソッドから戻ったときに、その値のコピー先オブジェクトが含まれます。</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">出力に予測される型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ストア内に <paramref name="name" /> に対応するアタッチ可能なプロパティ エントリが見つかり、値が <paramref name="value" /> にポストされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">型コンバーターおよびマークアップ拡張機能に、アンビエント プロパティまたはアンビエント型に関する情報アイテムを返すことのできるサービスを表します。</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">要求された型とプロパティのセットに対するアンビエント プロパティ情報項目の列挙可能なセットを返します。</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。 この型に目的のアンビエント プロパティが保持されています。 <see langword="null" /> でもかまいません。</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">保存されたコンテキストを使用しない場合は <see langword="true" />。保存されたコンテキストを使用する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">アンビエントと見なされる型を識別する 1 つ以上の型識別子オブジェクトを指定します。</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティ識別子オブジェクトを指定します。</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">要求された型とプロパティのセットに対するアンビエント プロパティ情報アイテムの列挙可能なセット。 返された各 <see cref="T:System.Xaml.AmbientPropertyValue" /> のプロパティ情報は、入力された <paramref name="types" /> または <paramref name="properties" /> のいずれかに一致します。</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">要求されたプロパティ セットに対するアンビエント プロパティ情報アイテムの列挙可能なセットを返します。</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。 この型に目的のアンビエント プロパティが保持されています。 <see langword="null" /> でもかまいません。</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティ識別子オブジェクトを指定します。</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">要求されたプロパティ セットに対するアンビエント プロパティ情報アイテムの列挙可能なセット。 返された各 <see cref="T:System.Xaml.AmbientPropertyValue" /> のプロパティ情報は、入力された <paramref name="properties" /> のいずれかに一致します。</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">要求された型に対する使用可能なアンビエント型のオブジェクト インスタンスの列挙可能なセットを返します。</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">アンビエント型情報を取得する型のセット。</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">要求した <see cref="T:System.Xaml.XamlType" /> 識別子のセットに対する値を表す列挙可能なオブジェクトのセット。</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">最初に検出されたプロパティに基づいて、要求されたプロパティ セットから単一のアンビエント プロパティの情報アイテムを返します。</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。 この型に目的のアンビエント プロパティが保持されています。</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">アンビエントと見なされるプロパティを識別する 1 つ以上のオブジェクトを指定します。</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">
        <paramref name="properties" /> リストで最初に見つかったアンビエント プロパティ値の単一のアンビエント プロパティの情報アイテム。</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">要求された型に対する使用可能なアンビエント型の最初に一致したオブジェクトを返します。</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">アンビエント型情報を取得する型のセット。</param>
      <returns vsli:raw="The first result object for the requested set.">要求されたセットに対する最初の結果オブジェクト。</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">アタッチ可能なメンバーが設定されているオブジェクトの、アタッチ可能なメンバー ストアを表します。 このアタッチ可能なメンバー ストアは、<see cref="T:System.Xaml.AttachablePropertyServices" /> を使用して参照できます。</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">このアタッチ可能なメンバー ストアからコピー先の配列に、アタッチ可能なすべてのメンバー/値のペアをコピーします。</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">コピー先の配列。 配列はジェネリック配列であり、次元の指定なしで渡す必要があります。また、構成要素として <see cref="T:System.Xaml.AttachableMemberIdentifier" /> および <see langword="object" /> が含まれている必要があります。</param>
      <param name="index" vsli:raw="The source index where copying should begin.">コピーの開始位置を示すコピー元インデックス。</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">このアタッチ可能なメンバー ストア内にあるアタッチ可能なメンバー エントリの数を取得します。</summary>
      <returns vsli:raw="The integer count of entries in the store.">ストア内のエントリの数 (整数)。</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">指定されたアタッチ可能なメンバーのエントリを、このアタッチ可能なメンバー ストアから削除します。</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">削除するアタッチ可能なメンバー エントリの XAML 型システム識別子。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ストア内に <paramref name="attachableMemberIdentifier" /> に対応するアタッチ可能なメンバー エントリが見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">指定されたストアに、指定されたアタッチ可能なメンバーの値を設定します。</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">設定するアタッチ可能なメンバー エントリの XAML 型システム識別子。</param>
      <param name="value" vsli:raw="The value to set.">設定する値。</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">指定されたストアで、指定されたアタッチ可能なメンバーの値の取得を試みます。</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">取得するアタッチ可能なメンバー エントリの XAML 型システム識別子。</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Out パラメーター。 <paramref name="attachableMemberIdentifier" /> がストア内に存在して値を保持している場合、このメソッドから戻ったときに、その値のコピー先オブジェクトが含まれます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ストア内に <paramref name="attachableMemberIdentifier" /> に対応するアタッチ可能なメンバー エントリが見つかり、値が <paramref name="value" /> にポストされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">変換先の型の CLR 型システム識別子を返すことのできるサービスを表します。 変換先の型は、プロパティ設定操作の変換先の型がリフレクションまたはその他のメカニズムによって間接的に報告される場合に有意義です。</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">関連する型コンバーターまたはマークアップ拡張機能の変換先の型を示す CLR の <see cref="T:System.Type" /> を返します。</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">変換先の型の CLR <see cref="T:System.Type" /> 値。</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">コンシューマーに XAML 名前空間マッピングの推奨プレフィックスを返すことのできるサービスを表します。 コンシューマーとしては、デザイン環境やシリアライザーなどがあります。</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">指定した XAML 名前空間識別子に対して推奨されるプレフィックスを返します。</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">プレフィックスの取得対象となる XAML 名前空間識別子の文字列。</param>
      <returns vsli:raw="The recommended prefix.">推奨プレフィックス。</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">解析するマークアップのルート オブジェクトを返すことができるサービスを記述します。</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">マークアップまたはオブジェクト グラフからルート オブジェクトを取得します。</summary>
      <returns vsli:raw="The root object.">ルート オブジェクト。</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">ノード ベースの XAML リーダーの簡単な実装のためのインデックス付きノード コントロールを表すサービスを提供します。</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">現在の外部ノード セット内のノードの数を取得します。</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">現在の外部ノード セット内のノードの数。</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">XAML ノードのインデックス付きリスト ビューにおける現在のリーダーの位置のインデックス番号を取得または設定します。</summary>
      <returns vsli:raw="The index number of the current reader position.">現在のリーダーの位置のインデックス番号。</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">XAML リーダー実装でのテキスト行情報を報告するためのサービスを記述します。</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">行情報が使用可能であるかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">行情報が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">報告する行番号を取得します。</summary>
      <returns vsli:raw="The line number to report.">報告する行番号。</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">報告する行の位置を取得します。</summary>
      <returns vsli:raw="The line position to report.">報告する行の位置。</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">XAML ライターが報告された行情報を使用でき、またその情報を出力に含めることができるサービスを記述します。</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">行情報を収集します。</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">出力で使用する行番号。</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">出力で使用する行の位置。</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">行情報サービスによって値が提供され、関連する場合に <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> の呼び出しも行われるかどうかを決定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">実装で行情報が使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">保存操作時または書き込み操作時に、オブジェクトを入力して XAML 名を返すために使用されるサービスを提供します。</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">指定したオブジェクトの XAML 名を取得します。</summary>
      <param name="value" vsli:raw="The object to get the name for.">名前を取得するオブジェクト。</param>
      <returns vsli:raw="The XAML name value of the requested object.">要求したオブジェクトの XAML 名の値。</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">XAML 名で指定されたオブジェクトを返すことができるサービスを記述するか、または代わりに名前解決を遅延するトークンを返します。 サービスは、XAML 名前スコープ内のすべての名前付きオブジェクトの列挙可能なセットを返すこともできます。</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">XAML 名前スコープ内のすべての名前付きオブジェクトの列挙可能なセットを返します。</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" /> オブジェクトの列挙可能なセット。 それぞれの <see cref="T:System.Collections.Generic.KeyValuePair`2" /> で、<see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> 構成要素は文字列であり、<see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> 構成要素は XAML 名前スコープ内の <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> 名を使用するオブジェクトです。</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">前方参照を生成する特定のマークアップ パターンを修正できるオブジェクトを返します。</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">可能性のある前方参照である名前のコレクション。</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">後で評価される検索動作のトークンを提供するオブジェクト。</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">前方参照を生成する特定のマークアップ パターンを修正できるオブジェクトを返します。</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">可能性のある前方参照である名前のコレクション。</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">解決された名前参照を対象のプロパティに直接割り当てる場合は <see langword="true" />。 再解析のユーザー コードを呼び出す場合は <see langword="false" />。 既定の動作は <see langword="false" /> です。</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">後で評価される検索動作のトークンを提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">名前からトークンへの前方解決を行うために <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> の呼び出しが使用できるかどうかを判断する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">前方解決の有効なトークンを返す実装として <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">XAML プロセッサによって関連するすべての名前がバッキング XAML 名前スコープに登録されると発生します。</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">名前参照からオブジェクトを解決します。</summary>
      <param name="name" vsli:raw="The name reference to resolve.">解決する名前参照。</param>
      <returns vsli:raw="The resolved object; or null.">解決されたオブジェクトまたは null。</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">名前参照からオブジェクトを解決し、オブジェクト グラフ用にオブジェクトが完全に初期化されているかどうかを報告する追跡値を提供します。</summary>
      <param name="name" vsli:raw="The name reference to resolve.">解決する名前参照。</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">このメソッドから制御が戻るとき、返されるオブジェクトに未解決の参照への依存関係がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">後で評価される検索動作のトークンを提供するオブジェクト。</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">XAML マークアップで対応付けられたプレフィックスに基づく XAML 名前空間を返すことができるサービスを記述します。</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">指定したプレフィックス文字列に対応する XAML 名前空間識別子を取得します。</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">XAML 名前空間情報の取得対象となるプレフィックス。</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">要求した XAML 名前空間の、文字列としての識別子。</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">アクティブな XAML スキーマ コンテキストで使用できる可能性のある、プレフィックスと XAML 名前空間のすべてのマッピング (<see cref="T:System.Xaml.NamespaceDeclaration" /> の値) を返します。</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">
        <see cref="T:System.Xaml.NamespaceDeclaration" /> の値の列挙可能なセット。 すべてのプレフィックス文字列を取得するには、返されたセット内の各値から <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> の値を取得します。 特定の XAML 名前空間のプレフィックスを取得するには、目的の <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> 値を含む戻り値を処理します。</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">現在の内部パーサー コンテキストに基づく <see cref="T:System.Xaml.XamlObjectWriter" /> を生成するサービスを表します。</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">元の内部パーサー コンテキストから <see cref="T:System.Xaml.XamlObjectWriterSettings" /> を返します。</summary>
      <returns vsli:raw="The settings from the original internal parser context.">元の内部パーサー コンテキストから返される設定。</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">アクティブな XAML スキーマ コンテキストに基づく <see cref="T:System.Xaml.XamlObjectWriter" /> を返します。</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> の構築と初期化に使用する設定。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">指定した設定の <see cref="T:System.Xaml.XamlObjectWriter" />。</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">型コンバーターおよびマークアップ拡張機能に XAML スキーマ コンテキスト情報を提供するサービスを表します。</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">サービス コンテキストによって報告される <see cref="T:System.Xaml.XamlSchemaContext" /> を取得します。</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">サービス コンテキストによって報告される XAML スキーマ コンテキスト。</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">文字列値を個別のプロパティとして格納することにより、XAML 名前空間の識別子およびプレフィックスを宣言します。</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">初期プロパティ値を使用して、<see cref="T:System.Xaml.NamespaceDeclaration" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">文字列としての XAML 名前空間の識別子。</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">プレフィックス マッピングで名前空間に使用される文字列プレフィックス。</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">
        <see cref="T:System.Xaml.NamespaceDeclaration" /> の識別子コンポーネントを取得します。</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">XAML 名前空間宣言の識別子。</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">
        <see cref="T:System.Xaml.NamespaceDeclaration" /> の XAML 名前空間のマッピング プレフィックスとして使用されるプレフィックスを取得します。</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">この <see cref="T:System.Xaml.NamespaceDeclaration" /> のプレフィックス文字列。</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>XAML 読み込みのためのアセンブリと型に対するアクセス制御を定義します。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> で要求されたアセンブリに基づいて <see cref="T:System.Reflection.Assembly" /> インスタンスを返します。</summary>
      <param name="assembly">要求対象のアセンブリ。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のソース情報として使用される <paramref name="assembly" /> 値を持つ <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> で要求されたアセンブリに基づいて <see cref="T:System.Reflection.AssemblyName" /> インスタンスを返します。</summary>
      <param name="assemblyName">要求のアセンブリ名。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のソース情報として使用される <paramref name="assemblyName" /> 値を持つ <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> が有効な完全修飾アセンブリ名ではありません。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>この <see cref="T:System.Reflection.AssemblyName" /> がアクセス許可を決定するアセンブリの <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> を取得します。</summary>
      <returns>この <see cref="T:System.Reflection.AssemblyName" /> がアクセス許可を決定するアセンブリの <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>修飾名によって指定された特定の型に基づく <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> インスタンスを返します。</summary>
      <param name="assemblyQualifiedTypeName">アセンブリ修飾型名として解析される文字列。</param>
      <returns>型に対するリフレクションによって決定する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> および <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> のソース情報として使用される <paramref name="assemblyQualifiedTypeName" /> 値を持つ、<see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> は、有効なアセンブリ修飾型名ではありません。
または
<paramref name="assemblyQualifiedTypeName" /> 内のアセンブリ名が有効なアセンブリ名ではありません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> によって指定された特定の型に基づく <see cref="T:System.Type" /> インスタンスを返します。</summary>
      <param name="type">アクセスを要求する対象の <see cref="T:System.Type" />。</param>
      <returns>型に対するリフレクションによって決定する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> および <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> のソース情報として使用される <paramref name="type" /> 値を持つ、<see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> インスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> がアクセス許可を決定する型の非修飾文字列名を取得します。</summary>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> がアクセス許可を決定する型の非修飾文字列名。</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>XAML リーダーまたはライターで使用されるアセンブリから型を読み込むためのアクセス許可を宣言します。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>固有の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 値の列挙可能なセットを使用して、<see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowedAccess">固有の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 値の列挙可能なセット。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> に、null の項目などの無効な情報が含まれていました。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>既存のアクセス許可を使用して、<see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列挙値。</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>単一の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 値を使用して、<see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowedAccess">定義する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> で表されるすべての <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 値のリストを取得します。</summary>
      <returns>読み取り専用の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 値のリスト、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> のコピーを作成して返します。</summary>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> のコピー。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</summary>
      <param name="elem">セキュリティ オブジェクトの再構築に使用する XML エンコード。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> に、<see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の XML エンコーディングが含まれていません。

または -
<paramref name="elem" /> 内の version 属性はサポートされていません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のリスト内に指定された <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> が含まれるかどうかを返します。</summary>
      <param name="requestedAccess">チェックする特定の <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</param>
      <returns>現在の <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> のリスト内のアイテムとして <paramref name="requestedAccess" /> が存在する場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> が null です。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定されたアクセス許可の積集合である <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> を作成して返します。</summary>
      <param name="target">現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> との積集合を持つ <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 <see langword="null" /> の可能性があります。</param>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定した <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の積集合を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではないか、または <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が、指定したアクセス許可のサブセットかどうかを判断します。</summary>
      <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 <see langword="null" /> の可能性があります。</param>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see langword="null" /> ではないか、または <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ではありません。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が無制限のアクセス許可を示すかどうかを返します。</summary>
      <returns>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> が無制限のアクセス許可を示す場合は <see langword="true" />。 この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> に固有のアクセス レベル制限が含まれている場合や、アクセス許可がない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> とその現在の状態を表す XML エンコーディングを作成します。</summary>
      <returns>状態情報を含む、この <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の XML エンコーディング。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定したアクセス許可の和集合を表すアクセス許可を作成します。</summary>
      <param name="other">現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と結合する <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 <see langword="null" /> の可能性があります。</param>
      <returns>現在の <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> と指定した <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> の和集合を表す新しい <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> が <see langword="null" /> ではないか、または <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ではありません。</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">XAML でプロパティを設定するときに適用される構文の制限 (<see cref="T:System.Xaml.XamlDirective" /> によって報告される) を指定します。</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">プロパティは <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> または <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" /> のどちらの位置にも設定できます (この列挙メンバーは、これらの値の組み合わせとして定義されます)。</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">プロパティは XAML の属性構文で設定できます。</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">プロパティは XAML のプロパティ要素構文で設定できます。</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">プロパティは XAML で設定できません。 既定値です。</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> によって報告されるシリアル化の動作を定義します。</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">不明。メンバーの型に従います。</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">結果をシリアル化しません。</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">結果をシリアル化します。</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">XAML メンバーによって使用されるコレクションのメタファ (ある場合) を記述します。</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">XAML メンバーは配列コレクションをサポートします。</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">XAML メンバーはリストまたはコレクションをサポートします。</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">XAML メンバーはディクショナリ (キーと値のペア) をサポートします。</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">XAML メンバーはコレクションをサポートしません。</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">リフレクション以外の方法で XAML メンバーのメンバー特性にアクセスできる拡張ポイントを提供します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">提供された <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に基づいて、<see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> に関連する特定の XAML メンバーの <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">インスタンスから関連するプロパティの値を取得します。</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">メンバーの所有者型のインスタンス。</param>
      <returns vsli:raw="The requested property value.">要求されたプロパティ値。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">不明な <see cref="T:System.Xaml.XamlMember" /> に基づく <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> で、このメソッドを呼び出しました。
-または-
このメソッドを書き込み専用メンバーで呼び出しました。
-または-
<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">関連するプロパティの値をインスタンスに設定します。</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">メンバーの所有者型のインスタンス。</param>
      <param name="value" vsli:raw="The property value to set.">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">不明な <see cref="T:System.Xaml.XamlMember" /> に基づく <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> で、このメソッドを呼び出しました。
-または-
このメソッドを読み取り専用メンバーで呼び出しました。
-または-
<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">値をシリアル化処理によって永続化する必要があるかどうかを示します。</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">永続性について調べる対象のプロパティを持つインスタンス。</param>
      <returns vsli:raw="A value of the enumeration.">列挙体の値。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">この <see cref="T:System.Reflection.MethodInfo" /> に関連するプロパティの値を取得する CLR メソッドの <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Reflection.MethodInfo" /> に関連するプロパティの値を取得する CLR メソッドの <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />。または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">この <see cref="T:System.Reflection.MethodInfo" /> に関連するプロパティの値を設定する CLR メソッドの <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Reflection.MethodInfo" /> に関連するプロパティの値を設定する CLR メソッドの <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />。または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> を表す静的な値を提供します。</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> を表す静的な値。</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">リフレクションまたはコンストラクター以外の方法で XAML 型のインスタンスを構築できる拡張ポイントを提供します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">
        <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">提供された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> に関連する固有の XAML 型の <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">指定した項目を、この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連する型のインスタンスに追加します。</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を構築するために使用した <see cref="T:System.Xaml.XamlType" /> によって指定された型のインスタンス。</param>
      <param name="item" vsli:raw="The item to add.">追加する項目。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">不明な <see cref="T:System.Xaml.XamlType" /> に基づく <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。
** -または- **
関連する型がコレクションではない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> は、<see langword="null" /> を返します。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">指定したキーと項目の値を、この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連する型のインスタンスに追加します。</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を構築するために使用した <see cref="T:System.Xaml.XamlType" /> によって指定された型のインスタンス。</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">追加するアイテムのディクショナリ キー。</param>
      <param name="item" vsli:raw="The item value to add.">追加する項目値。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">不明な <see cref="T:System.Xaml.XamlType" /> に基づく <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。
** -または- **
関連する型がディクショナリではない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> は、<see langword="null" /> を返します。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の構築が開始された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて、オブジェクト インスタンスを作成します。</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">インスタンスの <see langword="x:ConstructorArgs" /> を指定するオブジェクトの配列。 <see langword="null" /> を必要としないか、または使用しない型の場合は <see langword="x:ConstructorArgs" /> にできます。</param>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の構築が開始された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて作成されたインスタンス。</returns>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">コンストラクターを解決できませんでした。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">コレクションまたはディクショナリに関連する <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の関連する <see langword="Add" /> メソッドを返します。</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">
        <see langword="Add" /> メソッドで使用されるアイテムの種類の <see cref="T:System.Xaml.XamlType" />。</param>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">
        <see langword="Add" /> メソッドの CLR <see cref="T:System.Reflection.MethodInfo" /> 情報、または null。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">アイテムを列挙できるメソッドを表すオブジェクトを返します。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">列挙子メソッドの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">アイテムのセットを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を構築するために使用した <see cref="T:System.Xaml.XamlType" /> によって指定された型のインスタンス。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> オブジェクト、または <see langword="null" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">不明な <see cref="T:System.Xaml.XamlType" /> に基づく <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。
** -または- **
このメソッドを、関連する型がコレクションまたは辞書でない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で呼び出しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> が実装された <see cref="T:System.Windows.Markup.MarkupExtension" /> を呼び出すときに使用するハンドラーを取得します。</summary>
      <returns vsli:raw="A handler implementation that handles this case.">このような場合の処理を行うハンドラーの実装。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> が CLR によって実装された <see cref="T:System.ComponentModel.TypeConverter" /> を呼び出したときに使用するハンドラーを取得します。</summary>
      <returns vsli:raw="A handler implementation that handles this case.">このような場合の処理を行うハンドラーの実装。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を表す静的な値を提供します。</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を表す静的な値。</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">名前および名前空間に関連して XAML 型を指定する方法を提供します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">
        <see cref="T:System.Xaml.Schema.XamlTypeName" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">名前および名前空間の文字列に基づいて、<see cref="T:System.Xaml.Schema.XamlTypeName" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">名前が含まれる XAML 名前空間。</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">
        <see cref="T:System.Xaml.Schema.XamlTypeName" /> を作成する型の名前。</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">名前および名前空間の文字列と、型引数の配列に基づいて、<see cref="T:System.Xaml.Schema.XamlTypeName" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">
        <paramref name="name" /> が含まれる XAML 名前空間。</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">
        <see cref="T:System.Xaml.Schema.XamlTypeName" /> を作成する型の名前。</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">それぞれが <see cref="T:System.Xaml.Schema.XamlTypeName" /> である必要のある、型引数の配列。</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">既存の <see cref="T:System.Xaml.Schema.XamlTypeName" /> に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">既存の <see cref="T:System.Xaml.XamlType" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> を構築するために使用された名前を取得します。</summary>
      <returns vsli:raw="The name of the type.">型の名前。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> を構築するために使用された XAML 名前空間の識別子を取得します。</summary>
      <returns vsli:raw="The XAML namespace identifier.">XAML 名前空間識別子。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">マークアップ プレフィックスを名前空間に解決できる型名およびオブジェクトに基づいて <see cref="T:System.Xaml.Schema.XamlTypeName" /> 値を提供します。</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">
        <see cref="T:System.Xaml.Schema.XamlTypeName" /> 値を作成する型名。</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">
        <see cref="T:System.Xaml.IXamlNamespaceResolver" /> を実装するオブジェクトまたはサービス プロバイダー。</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">作成された <see cref="T:System.Xaml.Schema.XamlTypeName" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> または <paramref name="namespaceResolver" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">文字列を解析できません。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">マークアップ プレフィックスを名前空間に解決できる複数の型名およびオブジェクトを指定できる文字列に基づいて <see cref="T:System.Xaml.Schema.XamlTypeName" /> 値を提供します。</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">複数の型名が含まれる文字列。</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">
        <see cref="T:System.Xaml.IXamlNamespaceResolver" /> を実装するオブジェクトまたはサービス プロバイダー。</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">作成された <see cref="T:System.Xaml.Schema.XamlTypeName" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> または <paramref name="namespaceResolver" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">文字列を解析できません。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> の値を等価の文字列形式に変換します。</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> と等価の文字列形式。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> の値を、マークアップ構文内で複数の型のオブジェクト要素の使用方法に使用できる、等価の文字列形式に変換します。</summary>
      <param name="typeNameList" vsli:raw="A list of types.">型のリスト。</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">プレフィックスを検索するサービス参照。</param>
      <returns vsli:raw="A concatenated string of all type results.">すべての型の結果の連結文字列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefixLookup" /> または <paramref name="typeNameList" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> の値を、マークアップ構文内で型のオブジェクト要素の使用方法に使用できる、等価の文字列形式に変換します。</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">プレフィックスを検索するサービス参照。</param>
      <returns vsli:raw="A prefixed usage string.">プレフィックスが付けられた使用方法の文字列。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">この <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> の <see cref="T:System.Xaml.Schema.XamlTypeName" /> は <see langword="null" /> です。

または -
<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> が無効です。

または -
プレフィックスを検索できませんでした。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">マークアップ プレフィックスを名前空間に解決できる型名およびオブジェクトに基づいて <see cref="T:System.Xaml.Schema.XamlTypeName" /> 値を提供します。</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">
        <see cref="T:System.Xaml.Schema.XamlTypeName" /> 値を作成する型名。</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">
        <see cref="T:System.Xaml.IXamlNamespaceResolver" /> を実装するオブジェクトまたはサービス プロバイダー。</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">戻り値が <see langword="true" /> の場合に、作成される <see cref="T:System.Xaml.Schema.XamlTypeName" /> を含む Out パラメーター。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">解析が成功し、<paramref name="result" /> に有効な値が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> または <paramref name="namespaceResolver" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">マークアップ プレフィックスを名前空間に解決できる複数の型名およびオブジェクトを指定できる文字列に基づいて <see cref="T:System.Xaml.Schema.XamlTypeName" /> 値を提供します。</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">複数の型名が含まれる文字列。</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">
        <see cref="T:System.Xaml.IXamlNamespaceResolver" /> を実装するオブジェクトまたはサービス プロバイダー。</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">戻り値が <see langword="true" /> の場合に、作成される <see cref="T:System.Xaml.Schema.XamlTypeName" /> を含む Out パラメーター。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">解析が成功し、<paramref name="result" /> に有効な値が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> または <paramref name="namespaceResolver" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeName" /> を構築するために使用された型引数を取得します。</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">型引数 (存在する場合)。 null も指定できます。</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> オブジェクトと型名を表す文字列との間で変換を実行します。 この機能は <see cref="T:System.Windows.Markup.PropertyDefinition" /> 経由でマークアップ定義により XAML 機能拡張に使われます。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">
        <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">指定したコンテキストを使用して、指定した型のオブジェクトを <see cref="T:System.Xaml.XamlType" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">変換の評価対象となる型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">このコンバーターが操作を実行できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">指定したコンテキストを使用して、<see cref="T:System.Xaml.XamlType" /> のインスタンスを指定した型に変換できるかどうかを判断します。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">変換の評価対象となる型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">このコンバーターが操作を実行できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">指定したコンテキストを使用して、指定したオブジェクトから <see cref="T:System.Xaml.XamlType" /> への変換を試みます。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture" vsli:raw="Culture specific information.">カルチャ固有の情報。</param>
      <param name="value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <returns vsli:raw="The converted object.">変換後のオブジェクト。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> を変換できません。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">指定したコンテキストを使用して、<see cref="T:System.Xaml.XamlType" /> から指定した型への変換を試みます。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture" vsli:raw="Culture specific information.">カルチャ固有の情報。</param>
      <param name="value" vsli:raw="The object to convert.">変換対象のオブジェクト。</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">オブジェクトの変換後の型。</param>
      <returns vsli:raw="The converted object.">変換後のオブジェクト。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> を変換できません。</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">最終的な変換先の型以外の入力に基づいて XAML の初期化値またはシリアル化値を生成する手法の共通 API サーフェイスを提供します。 これには、マークアップ拡張機能および型コンバーターが含まれます。</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> が表す特定のコンバーターの CLR 基本クラス。 これは通常 <see cref="T:System.ComponentModel.TypeConverter" />、<see cref="T:System.Windows.Markup.MarkupExtension" />、または <see cref="T:System.Windows.Markup.ValueSerializer" /> のいずれかです。</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を実装するコンバーターと、<see cref="T:System.Type" /> の対象/変換先の型に基づいて、<see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">コンバーターの動作を実装する <see cref="T:System.Type" />。</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を実装するコンバーター、<see cref="T:System.Type" /> の対象/変換先の型、および文字列名に基づいて、<see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">コンバーターの動作を実装する <see cref="T:System.Type" />。</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</param>
      <param name="name" vsli:raw="The string name.">文字列名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">すべての 3 つのパラメーターが <see langword="null" /> です (少なくとも 1 つは null でないことが必要です)。</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">コンバーター実装の作成されたインスタンスを取得します。</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">コンバーター実装の作成されたインスタンス、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">コンバーターの動作を実装するクラスの <see cref="T:System.Type" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">コンバーターの動作を実装するクラスの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">コンバーター実装のインスタンスを返します。</summary>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">コンバーター実装のインスタンス、または <see langword="null" />。</returns>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">コンバーターは正しい基本型を実装しませんでした。</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のこのインスタンスと、指定したオブジェクトの値が同一かどうかを判断します。<see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを指定する必要があります。</summary>
      <param name="obj" vsli:raw="The object to compare.">比較対象のオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が <paramref name="obj" /> で、このインスタンスと同じ値を保持している場合は <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のこのインスタンスと、別の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">比較対象の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="other" /> が <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> で、このインスタンスと同じ値を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のハッシュ コードを返します。</summary>
      <returns vsli:raw="An integer hash code.">整数のハッシュ コード。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の文字列名を取得します。</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の文字列名。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">指定した 2 つの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="converter1" /> の値が <paramref name="converter2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">指定した 2 つの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が異なるかどうかを判断します。</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="converter1" /> の値が <paramref name="converter2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を取得します。</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">この <see cref="T:System.String" /> を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">読み取りと書き込みを異なるスレッドに切り離すことのできる、ダブル バッファリングを行う <see cref="T:System.Xaml.XamlReader" /> を実装します。</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlBackgroundReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">この <see cref="T:System.Xaml.XamlReader" /> の基底となる <see cref="T:System.Xaml.XamlBackgroundReader" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="wrappedReader" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Xaml.XamlBackgroundReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">マネージド リソースを解放する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">行情報が使用可能であるかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">行情報が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">リーダーの位置がファイルの末尾かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">位置がファイルの末尾にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">報告する行番号を取得します。</summary>
      <returns vsli:raw="The line number to report.">報告する行番号。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">報告する行の位置を取得します。</summary>
      <returns vsli:raw="The line position to report.">報告する行の位置。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合に、リーダーが現在配置されているメンバーを取得します。</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">現在のノードから XAML 名前空間を取得します。</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">XAML 名前空間 (使用可能な場合)。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">現在のノードの種類を取得します。</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">
        <see cref="T:System.Xaml.XamlNodeType" /> 列挙体の値。</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">処理対象から次の XAML ノードを読み取ります (ノードがある場合)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">情報セットにスキーマ コンテキスト情報を提供するオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">情報セットにスキーマ コンテキスト情報を提供するオブジェクト。</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">
        <see cref="T:System.Threading.Thread" /> の名前付きスレッドを処理する (<see cref="T:System.Threading.ParameterizedThreadStart" /> から構築された) 新しい <see cref="T:System.Xaml.XamlReader" /> を作成して開始します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">スレッドは既に起動しています。</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">
        <see cref="T:System.Threading.Thread" /> の名前付きスレッドを処理する (<see cref="T:System.Threading.ParameterizedThreadStart" /> から構築された) 新しい <see cref="T:System.Xaml.XamlReader" /> を作成して開始します。 スレッド名をパラメーター値として指定します。</summary>
      <param name="threadName" vsli:raw="The name for the thread.">スレッドの名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">スレッドは既に起動しています。</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">現在のノードの <see cref="T:System.Xaml.XamlType" />。現在のリーダーの位置がオブジェクト上にない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">現在のノードの値を取得します。</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">現在のノードの値。現在のリーダーの位置が <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型にない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">遅延コンテンツを読み込み、それらのコンテンツを返す XAML リーダーの動作を表します。</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlDeferringLoader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">
        <see cref="T:System.Xaml.XamlReader" /> およびサービス プロバイダーの必要な特定のサービスに基づいて、XAML コンテンツを遅延モードで読み込みます。</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">
        <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" /> の呼び出しによって返される開始リーダー。</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">必要なサービスのサービス プロバイダー。</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">入力 <see cref="T:System.Xaml.XamlReader" /> によって生成されたルート オブジェクト。</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">遅延読み込みの値をコミットします。</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">遅延読み込みをコミットする入力値。</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">必要なサービスのサービス プロバイダー。</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">XAML ノード情報として遅延の値を取得するのに使用できる XAML リーダー。</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">メンバーが XAML ディレクティブでもある場合に、そのメンバーの XAML 型システム識別子を提供します。 <see cref="T:System.Xaml.XamlDirective" /> 識別子は、メンバー ノードの処理時に XAML リーダーおよび XAML ライターで使用されます。 この識別子は、XAML リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されていて、<see cref="P:System.Xaml.XamlMember.IsDirective" /> が <see langword="true" /> の場合に使用されます。</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlDirective" /> のケースの値ごとに値を指定して、<see cref="T:System.Xaml.XamlDirective" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">この <see cref="T:System.Xaml.XamlDirective" /> が存在できる XAML 名前空間のセット。識別子文字列の列挙可能なセットとして渡されます。</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlDirective" /> の識別名。</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlDirective" /> をサポートする XAML 型。</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">この <see cref="T:System.Xaml.XamlDirective" /> がテキスト構文の変換に使用する型コンバーター。</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">
        <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> 列挙体の値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">名前および単一の XAML 名前空間の値を指定して、<see cref="T:System.Xaml.XamlDirective" /> クラスの新しいインスタンスを初期化します。 このシグネチャは、ディレクティブに対する <see cref="P:System.Xaml.XamlMember.IsUnknown" /> が <see langword="true" /> を報告することが必要であるか、または予期される場合にのみ使用します。</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">この <see cref="T:System.Xaml.XamlDirective" /> が存在できるプライマリ XAML 名前空間。</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlDirective" /> の識別名。</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">ディレクティブを指定できる XAML ノード型を指定する値を取得します。</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">列挙体の値。 既定値は、列挙体の既定値である <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /> です。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">このオブジェクトのハッシュ コードを返します。</summary>
      <returns vsli:raw="An integer hash code.">整数のハッシュ コード。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">この XAML メンバーが存在することのできる XAML 名前空間のリストを返します。</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">文字列としての XAML 名前空間識別子のリスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込み中に使用されます。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を返します。 この一覧では、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーが報告されます。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlDirective" /> を返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> の <see cref="T:System.Xaml.XamlMember" /> 情報。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告されているかどうかを返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">この <see cref="T:System.Xaml.XamlDirective" /> がイベントを表すかどうかを返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">この <see cref="T:System.Xaml.XamlDirective" /> が目的の読み取り専用プロパティを表すかどうかを返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlDirective" /> がパブリックの <see langword="get" /> アクセサーを持つプロパティを表すかどうかを返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">この <see cref="T:System.Xaml.XamlDirective" /> が型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlDirective" /> が解決できないメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">この <see cref="T:System.Xaml.XamlDirective" /> が目的の書き込み専用プロパティを表すかどうかを返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlDirective" /> がパブリックの <see langword="set" /> アクセサーを持つプロパティを表すかどうかを返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を返します。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">この <see cref="T:System.Xaml.XamlDirective" /> に関連付けられている型コンバーターの実装を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> インスタンス、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.XamlDirective" /> に関連付けられている <see langword="get" /> アクセサーを返します。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR リフレクションの <see cref="T:System.Xaml.XamlDirective" /> を返します。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.XamlDirective" /> に関連付けられている <see langword="set" /> アクセサーを返します。 この実装は常に <see langword="null" /> を返します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">この <see cref="T:System.Xaml.XamlDirective" /> の文字列表現を返します。</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">この <see cref="T:System.Xaml.XamlDirective" /> の文字列表現。</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">XAML ライターが重複するメンバーの値を同じオブジェクト ノードに書き込もうとすると、スローされる例外。</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlDuplicateMemberException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlDuplicateMemberException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlDuplicateMemberException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlDuplicateMemberException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">関連のメンバーと型情報を指定して、<see cref="T:System.Xaml.XamlDuplicateMemberException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">報告する XAML メンバーの識別子。</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">親の型として報告する XAML の型識別子。</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">プロパティを複製として示す XAML メンバーの識別子を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">報告する <see cref="T:System.Xaml.XamlMember" /> オブジェクト (XAML メンバーの識別子)。</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlDuplicateMemberException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">親の型として示される XAML の型識別子を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">親の型として報告する <see cref="T:System.Xaml.XamlType" /> オブジェクト (XAML の型識別子)。</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">XAML リーダーまたは XAML ライターの一般的な例外が発生したときにスローされる例外です。</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">
        <see cref="T:System.Xaml.XamlException" /> クラスの新しいインスタンスを初期化します。 インスタンスには、エラーを説明する、システム提供のメッセージが含まれます。</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">
        <see cref="T:System.Xaml.XamlException" /> クラスの新しいインスタンスを初期化します。 インスタンスには、エラーを説明する、指定されたメッセージが含まれます。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">
        <see cref="T:System.Xaml.XamlException" /> クラスの新しいインスタンスを初期化します。 インスタンスには、指定されたエラー メッセージと、この例外の原因である内部例外への参照が含まれます。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">
        <see cref="T:System.Xaml.XamlException" /> クラスの新しいインスタンスを初期化します。 インスタンスには、指定されたエラー メッセージ、内部例外、および行情報が含まれます。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">現在の例外の原因となった例外。</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">デバッグまたは行情報のコンシューマーに報告する行番号。</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">デバッグまたは行情報のコンシューマーに報告する行の位置。</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">
        <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> を実装し、行情報データのシリアル化のサポートを提供します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">例外で報告される XAML テキスト行情報の行番号コンポーネントを取得または設定します。</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">XAML テキスト行情報の行番号コンポーネント。</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">例外で報告される XAML テキスト行情報の行の位置コンポーネントを取得または設定します。</summary>
      <returns vsli:raw="The line position component of XAML text line information.">XAML テキスト行情報の行の位置コンポーネント。</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">例外メッセージを取得または設定します。行情報を取得できる場合は、例外メッセージに行情報を追加します。</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">行情報が追加された例外メッセージ。</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">XAML の読み取り中および XAML の書き込み中に発生する内部矛盾に対してスローされる例外です。</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlInternalException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlInternalException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlInternalException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception.">例外を説明するメッセージ。</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlInternalException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception.">例外を説明するメッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">XAML マークアップまたは XAML 型を使用するプログラミングに役立つ文字列またはオブジェクトを提供する定数を定義します。 これらの文字列またはオブジェクトは、XAML 言語の概念、.NET Framework XAML サービスでの XAML 言語の概念の実装、またはそれらの両方に関連しています。</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">.NET Framework XAML サービスで定義されている各 <see cref="T:System.Xaml.XamlDirective" /> 識別子の読み取り専用のジェネリック コレクションを取得します。</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">.NET Framework XAML サービスで定義されている各 <see cref="T:System.Xaml.XamlDirective" /> 識別子の読み取り専用のジェネリック コレクション。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">.NET Framework XAML サービスで定義されている、組み込み XAML 言語に一致するかまたはエイリアスとなる個別の <see cref="T:System.Xaml.XamlType" /> 値の読み取り専用のジェネリック コレクションを取得します。</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">組み込み XAML 言語に一致する各 <see cref="T:System.Xaml.XamlType" /> の読み取り専用のジェネリック コレクション。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">ファクトリ メソッドまたはジェネリックの使用法の <see langword="Arguments" /> の <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">ファクトリ メソッドまたはジェネリックの使用法の <see langword="Arguments" /> の <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Array" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Array" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">
        <see langword="AsyncRecords" /> 擬似メンバーの <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">
        <see langword="AsyncRecords" /> 擬似メンバーの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">XML の <see langword="base" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">XML の <see langword="base" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Boolean" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Boolean" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Byte" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Byte" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Char" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Char" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Class" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">XAML からの <see langword="Class" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="ClassAttributes" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">XAML からの <see langword="ClassAttributes" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="ClassModifier" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">XAML からの <see langword="ClassModifier" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">[MS-XAML] で説明されている <see langword="Code" /> の <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">[MS-XAML] で説明されている <see langword="Code" /> の <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">イベントをハンドラーに接続するコネクション ポイントを識別する <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">イベントをハンドラーに接続するコネクション ポイントを識別する <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Decimal" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Decimal" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Double" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Double" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">XAML のファクトリ メソッドを識別する <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">XAML のファクトリ メソッドを識別する <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="FieldModifier" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">XAML からの <see langword="FieldModifier" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Initialization" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">XAML からの <see langword="Initialization" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Int16" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Int16" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Int32" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Int32" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Int64" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Int64" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Items" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">XAML からの <see langword="Items" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Key" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">XAML からの <see langword="Key" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">XML の <see langword="lang" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">XML の <see langword="lang" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> のアイテムの種類の <see cref="P:System.Xaml.XamlLanguage.Members" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> のアイテムの種類の <see cref="P:System.Xaml.XamlLanguage.Members" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">XAML の <see langword="Members" /> の概念に対する <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">XAML の <see langword="Members" /> の概念に対する <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Name" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">XAML からの <see langword="Name" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Null" /> または <see langword="NullExtension" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語<see langword="Null" /><see cref="T:System.Xaml.XamlType" /> の。 <see langword="NullExtension" />  /</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">XAML 言語の概念 <see langword="Object" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">XAML 言語の概念 <see langword="Object" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="PositionalParameters" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">XAML からの <see langword="PositionalParameters" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">XAML の <see langword="Property" /> の概念に対する <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">XAML の <see langword="Property" /> の概念に対する <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">XAML の <see langword="Reference" /> を表す <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">XAML の <see langword="Reference" /> を表す <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">XAML の <see langword="Shared" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">XAML の <see langword="Shared" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Single" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Single" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">XML の <see langword="space" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">XML の <see langword="space" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Static" />/<see langword="StaticExtension" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語<see langword="Static" /><see cref="T:System.Xaml.XamlType" /> の。 <see langword="StaticExtension" />  /</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="String" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="String" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Subclass" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">XAML からの <see langword="Subclass" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">XAML プロセッサによって対応するモードがサポートされている場合に、XAML の非同期読み込みを有効にする <see cref="T:System.Xaml.XamlDirective" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">XAML の非同期読み込みを有効にする <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">XAML 言語の <see langword="TimeSpan" /> の概念の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">XAML 言語の概念 <see langword="TimeSpan" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語の <see langword="Type" />/<see langword="TypeExtension" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">組み込み XAML 言語<see langword="Type" /><see cref="T:System.Xaml.XamlType" /> の。 <see langword="TypeExtension" />  /</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="TypeArguments" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">XAML からの <see langword="TypeArguments" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="Uid" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">XAML からの <see langword="Uid" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">XAML から <see cref="T:System.Xaml.XamlDirective" /> ディレクティブの <see langword="UnknownContent" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">XAML からの <see langword="UnknownContent" /> ディレクティブの <see cref="T:System.Xaml.XamlDirective" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">XAML 言語の概念 <see langword="Uri" /> の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">XAML 言語の概念 <see langword="Uri" /> の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">XAML (2006) 言語の名前空間を識別する文字列の文字列値を取得します。 [MS-XAML] セクション 5.1.1 に定義されているように、この名前空間は XAML (2006) の "x" プレフィックス付きの名前空間に対応しています。</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">XAML 名前空間の識別子のコレクションを取得します。</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">XAML 名前空間の識別子のコレクション。</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">XAML の <see langword="XData" /> ブロックをサポートする XAML 型の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">
        <see langword="XData" /> ブロックをサポートする XAML 型の <see cref="T:System.Xaml.XamlType" />。 [5.2.23] セクションを参照してください。</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">XML (1998) 言語の名前空間を識別する文字列の文字列値を取得します。 [MS-XAML] セクション 5.1.2 で参照されるように、この名前空間は XML の "xml" プレフィックス付きの名前空間に対応しています。</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">XML 名前空間の識別子のコレクションを取得します。</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">XML 名前空間の識別子のコレクション。</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">XAML 型のメンバーの XAML 型システム識別子を提供します。 識別子は、メンバー ノードの処理時 (XAML リーダーの位置が <see cref="F:System.Xaml.XamlNodeType.StartMember" /> のとき) および一般的な XAML 型システムのロジックに、XAML リーダーおよび XAML ライターによって使用されます。</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">CLR 型システム <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">リフレクション <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">アタッチ可能なプロパティの文字列名。</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">アタッチ可能なプロパティの文字列名。</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">アタッチ可能なイベントの文字列名。</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">アタッチ可能なイベントの文字列名。</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">文字列名と宣言 <see cref="T:System.Xaml.XamlMember" /> 情報を使用して、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。 このシグネチャで作成された <see cref="T:System.Xaml.XamlMember" /> には重要な制限があります。</summary>
      <param name="name" vsli:raw="The string name of the member.">メンバーの文字列名。</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">宣言している型に対する <see cref="T:System.Xaml.XamlType" /> 情報。</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メンバーがアタッチ可能であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> または <paramref name="declaringType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> オブジェクトのリストを取得します。 これらは、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーを報告します。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">
        <see cref="T:System.Xaml.XamlMember" /> オブジェクトのリスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">このオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="other" vsli:raw="An object to compare with this object.">このオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">このオブジェクトのハッシュ コードを返します。</summary>
      <returns vsli:raw="An integer hash code.">整数のハッシュ コード。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">この XAML メンバーが存在することのできる XAML 名前空間のリストを返します。</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">文字列としての XAML 名前空間識別子のリスト。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> の実装を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> 実装。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告するかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">この <see cref="T:System.Xaml.XamlMember" /> がイベント メンバーを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が <see cref="P:System.Xaml.XamlMember.Name" /> として有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が有効な <see langword="true" /> 文字列で初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用のメンバーを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="get" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーであるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">メンバーを解決できない場合は <see langword="true" />。メンバーを解決できる場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用のメンバーを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="set" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を返します。 一覧の項目では、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーが報告されます。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">
        <see cref="T:System.Xaml.XamlMember" /> オブジェクトのリスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> の <see cref="T:System.Xaml.XamlMember" /> 情報、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告されているかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すことを報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">この <see cref="T:System.Xaml.XamlMember" /> が目的の読み取り専用プロパティを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> を目的の読み取り専用プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="get" /> アクセサーを持つプロパティを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="true" /> アクセサーを持つプロパティを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">この <see cref="T:System.Xaml.XamlMember" /> が型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が解決できないメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlMember" /> が、パブリックの <see langword="set" /> アクセサーを持ちパブリックの <see langword="get" /> アクセサーを持たないメンバーを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> が書き込み可能なメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">マークアップ拡張の左角かっこと右角かっこ文字を返します。</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">左角かっこと右角かっこ文字を含むコレクション。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">
        <see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">
        <see cref="T:System.Xaml.XamlMember" /> が存在できる型。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている型コンバーターの実装を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> インスタンス、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="get" /> アクセサーを返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">関連付けられている <see langword="get" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" />、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="set" /> アクセサーを返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">関連付けられている <see langword="set" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている値シリアライザーの実装を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" /> インスタンス、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">マークアップ拡張の左角かっこと右角かっこ文字を定義します。</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">左角かっこと右角かっこ文字を含むコレクション。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列を取得します。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が異なるかどうかを判断します。</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間を識別する単一の XAML 名前空間の URI を取得します。</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">この <see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間の識別子を示す文字列。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">ビジュアルなデザイナーでのメンバーの処理方法を示す <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値を取得します。</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">
        <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 列挙体の値。 既定値は、<see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">
        <see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">
        <see cref="T:System.Xaml.XamlMember" /> が存在できる型。</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> の文字列表現を返します。</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> の文字列表現。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">XAML で宣言されたオブジェクトの型変換の構築に使用できる <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> の値。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">
        <see cref="T:System.Reflection.MemberInfo" />、<see cref="T:System.Reflection.PropertyInfo" />、または <see cref="T:System.Reflection.MethodInfo" /> によって構築されるメンバーで使用できる CLR 型システム <see cref="T:System.Reflection.EventInfo" /> を取得します。</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">初期コンストラクター パラメーターからキャストされた CLR 型システム <see cref="T:System.Reflection.MemberInfo" /> の情報。 <see cref="T:System.Xaml.XamlMember" /> シグネチャを使用して構築された <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの値のシリアル化に使用されます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">延期実行で XAML ノードを書き込む場合などに使用できる XAML ノードのリストを提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">指定されたスキーマ コンテキストを使用して、<see cref="T:System.Xaml.XamlNodeList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">ノード操作に使用するスキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">指定されたスキーマ コンテキストとリスト サイズを使用して、<see cref="T:System.Xaml.XamlNodeList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">ノード操作に使用するスキーマ コンテキスト。</param>
      <param name="size" vsli:raw="The intended item count of the list.">使用するリストの項目数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">このリスト内の項目を削除します。</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">この <see cref="T:System.Xaml.XamlNodeList" /> 内のノードの数を取得します。</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">この <see cref="T:System.Xaml.XamlNodeList" /> に含まれるノードの数。</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">XAML リーダーの実装デリゲートを返します。</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">XAML リーダーの実装デリゲート。</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">
        <see cref="T:System.Xaml.XamlNodeList" /> は、まだ書き込みモードです。

または -
ノード リストに使用される XAML ライターに、有効なスキーマ コンテキストがありません。</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">関連付けられている XAML ライターを取得します。</summary>
      <returns vsli:raw="The associated XAML writer.">関連付けられている XAML ライター。</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">ノードの書き込みと再読み取りのためのバッファーを提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">指定した XAML スキーマ コンテキストを使用して、<see cref="T:System.Xaml.XamlNodeQueue" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">ノード操作に使用するスキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlNodeQueue" /> 内のノードの数を取得します。</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlNodeQueue" /> に含まれるノードの数。</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">この <see cref="T:System.Xaml.XamlNodeQueue" /> がノードを含んでいない状態かどうかを判断する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">この <see cref="T:System.Xaml.XamlNodeQueue" /> がノードを含んでいない場合は <see langword="true" />。この <see cref="T:System.Xaml.XamlNodeQueue" /> がノードを含んでいる場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">XAML リーダーの実装デリゲートを取得します。</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">XAML リーダーの実装デリゲート。</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">ノード リストに使用される XAML ライターに、有効な XAML スキーマ コンテキストがありません。</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">関連付けられている XAML ライターを取得します。</summary>
      <returns vsli:raw="The associated XAML writer.">関連付けられている XAML ライター。</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">XAML リーダーが現在処理中のノードの型を記述します。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">リーダーはメンバー ノードの終了位置にあります。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">リーダーはオブジェクト ノードの終了位置にあります。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">リーダーはオブジェクト ノード内にあり、指定されたオブジェクト値ではなく既定または暗黙の値を書き込んでいます。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">リーダーは XML 名前空間宣言内にあります。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">リーダーの位置に実際のノードがありません (たとえば、リーダーの位置がファイルの末尾の場合です)。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">リーダーはメンバー ノードの開始位置にあります。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">リーダーはオブジェクト ノードの開始位置にあります。</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">リーダーはノード内にあり、値を処理中です。</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">オブジェクトの初期化およびプロパティ設定のために、順番に挿入できるコールバックのデータを提供します。 これは、<see cref="T:System.Xaml.XamlObjectWriter" /> によって生成されるオブジェクト グラフに影響を与えます。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlObjectEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">イベント データに関連するオブジェクトのインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">関連するオブジェクトのインスタンスの行番号を取得または設定します。</summary>
      <returns vsli:raw="The line number of the element.">要素の行番号。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">関連するオブジェクトのインスタンスの行内の位置を取得または設定します。</summary>
      <returns vsli:raw="The position in the line of the element.">要素のリスト内の位置。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">イベント データに関連するオブジェクトのインスタンスを取得します。</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">イベント データに関連するオブジェクトのインスタンス。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">関連するオブジェクトのインスタンスの BAML URI を取得または設定します。</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">関連するオブジェクトのインスタンスの BAML URI。</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">オブジェクト グラフを読み取り、XAML ノード ストリームを生成する <see cref="T:System.Xaml.XamlReader" /> 実装を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlObjectReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">読み取るオブジェクト ツリーまたはオブジェクト グラフのルート。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">指定されたリーダー設定を使用して、<see cref="T:System.Xaml.XamlObjectReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">読み取るオブジェクト ツリーのルート。</param>
      <param name="settings" vsli:raw="A settings object.">設定オブジェクト。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">指定されたスキーマ コンテキストを使用して、<see cref="T:System.Xaml.XamlObjectReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">読み取るオブジェクト ツリーのルート。</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">リーダーが使用するスキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">指定されたスキーマ コンテキストとリーダー設定を使用して、<see cref="T:System.Xaml.XamlObjectReader" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">読み取るオブジェクト ツリーのルート。</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">リーダーが使用するスキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="A settings object.">設定オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">現在のリーダーの位置にある使用可能なオブジェクト インスタンスを取得します。</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">現在のリーダーの位置にあるオブジェクト インスタンス。リーダーがオブジェクト上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">リーダーがファイルの末尾に配置されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ファイルの末尾にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">リーダーが <see cref="T:System.Xaml.XamlMember" /> 上に配置されている場合に、リーダーが現在配置されている <see cref="F:System.Xaml.XamlNodeType.StartMember" /> を取得します。</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">現在のリーダーの位置から XAML 名前空間宣言を取得します。</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">リーダーが <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> 上に配置されている場合は XAML 名前空間宣言。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">現在のノードの種類を取得します。</summary>
      <returns vsli:raw="The type of the current node.">現在のノードの種類。</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">ソース オブジェクト グラフから次の XAML ノードを読み取ります (ノードがある場合)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">情報セットにスキーマ情報を提供するオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">情報セットにスキーマ情報を提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">現在のリーダーの位置にあるオブジェクトの <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">現在のリーダーの位置にあるオブジェクトの <see cref="T:System.Xaml.XamlType" />。リーダーがオブジェクト上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">現在のリーダーの位置にあるノードの値を取得します。</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">現在のノードの値。リーダーの位置が <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型にない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">複数の <see cref="T:System.Xaml.XamlObjectReader" /> 内部ヘルパー API によってスローされる例外。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlObjectReaderException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlObjectReaderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlObjectReaderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlObjectReaderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectReader" /> の処理規則またはオプション設定を指定します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlObjectReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">コンテキストに対して関連付けられた <see cref="T:System.Xaml.XamlObjectReader" /> を使用するライターが、コンテンツの書き出しに明示的にデザイナーの設定を使用するかどうかを決定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">
        <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> が <see langword="true" /> のとき、このコンテキストを使用するライターがすべての出力コンテンツの書き込みにデザイナーの設定を使用する場合は <see langword="false" />。デザイナーの設定を無視する場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">作成元の XAML ノード ストリームからオブジェクト グラフを作成します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> で使用される XAML スキーマ コンテキストを使用して、<see cref="T:System.Xaml.XamlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">書き込み用のノードを提供する XAML リーダーとの間で共有される XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> が使用するコンテキストとその設定を使用して、<see cref="T:System.Xaml.XamlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">書き込み用のノードを提供する XAML リーダーとの間で共有される XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> の動作および出力の特定のオプションを指定する設定オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">すべての使用可能なフレームをリセットし、オブジェクト グラフをクリアします。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">マネージド リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">この <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> の <see cref="T:System.Xaml.XamlObjectWriterSettings" /> に関連付けられている任意の <see cref="T:System.Xaml.XamlObjectWriter" /> メソッドを呼び出します。</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">報告する対象のオブジェクト。 このオブジェクトは、ハンドラーの呼び出し時に <see cref="T:System.Xaml.XamlObjectEventArgs" /> にパッケージ化されます。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">この <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> の <see cref="T:System.Xaml.XamlObjectWriterSettings" /> に関連付けられている任意の <see cref="T:System.Xaml.XamlObjectWriter" /> メソッドを呼び出します。</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">報告する対象のオブジェクト。 この値は、ハンドラーの呼び出し時に <see cref="T:System.Xaml.XamlObjectEventArgs" /> にパッケージ化されます。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">この <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> の <see cref="T:System.Xaml.XamlObjectWriterSettings" /> に関連付けられている任意の <see cref="T:System.Xaml.XamlObjectWriter" /> 参照メソッドを呼び出します。</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">報告する対象のオブジェクト。 これは、ハンドラーの呼び出し時に <see cref="T:System.Xaml.XamlObjectEventArgs" /> にパッケージ化されます。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">この <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> の <see cref="T:System.Xaml.XamlObjectWriterSettings" /> に関連付けられている任意の <see cref="T:System.Xaml.XamlObjectWriter" /> 参照メソッドを呼び出します。</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">ハンドラーの呼び出し時に <see cref="T:System.Xaml.XamlObjectEventArgs" /> を通じて渡される値。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> イベント データの <paramref name="handled" /> が <see langword="true" /> でない場合に、このライターの <see cref="T:System.Xaml.XamlObjectWriterSettings" /> に関連付けられている任意の <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> 参照メソッドを呼び出します。</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">送信元としてハンドラーに報告するオブジェクト。</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">設定するプロパティの名前。これは、<see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> の一部としてハンドラーに渡されます。</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">
        <paramref name="property" /> で指定されたプロパティに提供する値。 この値は、<see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> の一部としてハンドラーに渡されます。</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">関連付けられている任意のハンドラーによって設定されたブール値。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">最後に書き込まれたオブジェクトを取得します。 通常、ノード ストリームがその末尾に達したとき、およびオブジェクト グラフが完成したときにだけ呼び出されます。</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">最後に書き込まれたオブジェクト、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">XAML オブジェクト ライターの絶対ノード ルートの XAML 名前スコープを管理する <see cref="T:System.Windows.Markup.INameScope" /> サービスを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">オブジェクト ライターの現在のルートの XAML 名前スコープを管理する <see cref="T:System.Windows.Markup.INameScope" /> サービス。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">アクティブな XAML スキーマ コンテキストを取得します。</summary>
      <returns vsli:raw="The XAML schema context.">XAML スキーマ コンテキスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">
        <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> を実装し、例外の行情報を提供します。</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">リーダーからの行番号。</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">リーダーからの行の位置。</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">行情報サービスによって値が提供され、関連する場合に <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> メソッドの呼び出しも行われるかどうかを報告する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ライターが行情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">現在のメンバー スコープを閉じます。閉じるときにメンバー スコープの値を書き込む場合があります。 新しいスコープは、メンバーの親オブジェクトのスコープになります。</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">この呼び出しと前の <see langword="StartMember" /> の間で見つかる値ノードからメンバーの値を作成できませんでした。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">ライターの現在のオブジェクト スコープを閉じます。 新しいオブジェクト スコープは、親メンバーのスコープになります。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">指定したオブジェクトが親プロパティの既定または暗黙の値である場合に、概念上の <see langword="StartObject" /> をオブジェクト グラフに書き込みます。 暗黙の値は、入力 XAML ノード セットでオブジェクト値として指定されているのではなく、XAML スキーマ コンテキストから取得した情報およびバッキング型情報から取得します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">次のオブジェクト スコープまたはメンバー スコープに適用される名前空間の宣言を定義します。</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">書き込む名前空間宣言。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> のコンポーネントが <see langword="null" /> です。</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">XAML 名前空間ノードを無効なスコープで記述しようとしました。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">現在のオブジェクト スコープに新しいメンバー ノードを書き込みます。スコープは新しいメンバーのスコープになります。</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">書き込む XAML プロパティ。 通常、この値は XAML リーダーから XAML ノード ストリームを介して取得します。</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">
        <paramref name="property" /> の <see cref="P:System.Xaml.XamlMember.IsUnknown" /> が <see langword="true" /> に設定されました。

または -
<see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> が渡されました。これは、XAML ノード ストリームにコンテンツをサポートしないオブジェクトのコンテンツが含まれることを示します。

または
開始メンバーを無効なスコープで記述しようとしました。</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> は、親オブジェクトのスコープで既に明示的に設定されているプロパティを指定します。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">現在のスコープにオブジェクト ノードを書き込みます。スコープを新しいオブジェクトのスコープに設定します。</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">書き込む型。 通常この値は XAML リーダーから取得します。</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">
        <see cref="P:System.Xaml.XamlType.IsUnknown" /> 型を処理します。オブジェクトを作成できません。

または -
開始オブジェクトを無効なスコープで記述しようとしました。</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">ルート オブジェクトが既に設定に提供されたときにルート オブジェクトを書き込もうとしました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">現在のメンバー スコープに値を書き込みます。 現在のスコープがコレクション、ディクショナリ、または配列オブジェクトの内部にある場合、値はコレクション、ディクショナリ、または配列内に追加されます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">無効なスコープで値を書き込もうとしました。</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">XAML ノード ストリームからオブジェクト グラフを作成中の XAML ライター (<see cref="T:System.Xaml.XamlObjectWriter" /> クラスなど) でエラーが発生した場合にスローされる例外です。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlObjectWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlObjectWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlObjectWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlObjectWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> 固有の XAML ライター設定を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">既存のインスタンスのコピーに基づく <see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">コピー対象の設定インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">XAML ライターによって適用される <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のアクセス許可を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のアクセス許可。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">作成された各オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> フェーズで XAML ライターによって呼び出されたコールバック。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">作成された各オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> フェーズで XAML ライターによって呼び出されたコールバック。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">作成された各オブジェクトの有効期間の post-member-write フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">オブジェクトの有効期間の post-member-write フェーズで XAML ライターによって呼び出されたコールバック。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">作成された各オブジェクトの有効期間の pre-member-write フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">オブジェクトの有効期間の pre-member-write フェーズで XAML ライターによって呼び出されたコールバック。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> が <see langword="true" /> の場合に、XAML ライターからの名前の登録に使用する XAML 名前スコープを取得または設定します。</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">名前の登録に使用する XAML 名前スコープ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">型コンバーターを使用する状況で、XAML ライターが <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> の <see cref="T:System.ComponentModel.TypeConverter" /> 実装を無視する (呼び出さない) かどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">XAML ライターが <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> 実装を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">オブジェクト グラフ表現を書き込む前に <see cref="T:System.Xaml.XamlObjectWriter" /> の <paramref name="K" /> コンポーネントの型変換を実行する既定の <see cref="T:System.Collections.Generic.Dictionary`2" /> 機能を無効にするかどうかを判断する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクトの <paramref name="K" /> 型変換を無効にする場合は <see langword="true" />。 <see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクトの <paramref name="K" /> 型変換を適用する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">指定された <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> に対して名前の登録を行う必要があるかどうかを判断する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> に対して名前の登録を行う場合は <see langword="true" />。名前の登録を親 XAML 名前スコープに行う場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> の操作に使用する既存のルート オブジェクトを取得または設定します。</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> の操作に使用する既存のルート オブジェクト。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">XAML ライターが重複するプロパティをチェックするコード パスのチェックを省略するかどうかを判断する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">重複するプロパティのチェックを省略する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> がマークアップ拡張機能の <see langword="ProvideValue" /> の呼び出しを省略する必要があるかどうかを示す値を取得または設定します。これは、マークアップ拡張機能がオブジェクト グラフのルートを表す場合に使用します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> がマークアップ拡張機能の <see langword="true" /> の呼び出しを省略する必要がある場合は <see langword="ProvideValue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">実際の <see langword="BaseUri" /> の代わりに <see langword="BeginInitHandler" /> に使用されました。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">実際の <see cref="T:System.Uri" /> の代わりに使用される <see langword="BaseUri" /> 。</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">オブジェクト ライターが CLR で実装された、依存関係プロパティの <see langword="SetValue" /> を呼び出す場合に使用するハンドラーを取得または設定します。</summary>
      <returns vsli:raw="A handler implementation that handles this case.">このような場合の処理を行うハンドラーの実装。</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">XAML リーダーが XAML リーダー ソースの要素を処理して XAML ノード ストリームにできない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">XAML 入力を処理して XAML ノード ストリームを生成するクラスの基本定義を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlReader" /> クラスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">XAML ノード ストリームを閉じます。</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">
        <see cref="T:System.Xaml.XamlReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">マネージド リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">
        <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> が呼び出されているかどうかを取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> が呼び出されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">派生クラスで実装されている場合に、リーダーがファイルの末尾に配置されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XAML ノード ストリームのファイルの概念上の末尾に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">派生クラスで実装されており、リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合は、リーダーが現在配置されているメンバーを取得します。</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">派生クラスで実装されている場合に、現在のノードから XAML 名前空間情報を取得します。</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">XAML 名前空間情報 (使用可能な場合)。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">派生クラスで実装された場合、現在のノードの型を取得します。</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">
        <see cref="T:System.Xaml.XamlNodeType" /> 列挙体の値。</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">派生クラスで実装された場合、処理対象から次の XAML ノードを読み取ります (ノードがある場合)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">現在の <see cref="T:System.Xaml.XamlReader" /> に基づく <see cref="T:System.Xaml.XamlReader" /> を返します。返された <see cref="T:System.Xaml.XamlReader" /> は、XAML ノード構造のサブツリーでの反復処理に使用されます。</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">サブツリーの新しい XAML リーダー インスタンス。</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">派生クラスで実装されている場合に、情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクト。</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">現在のノードをスキップして、リーダーの位置を次のノードに進めます。</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">派生クラスで実装されている場合に、現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">現在のノードの <see cref="T:System.Xaml.XamlType" />。現在のリーダーの位置がオブジェクト上にない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">派生クラスで実装された場合、現在のノードの値を取得します。</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">現在のノードの値。現在のリーダーの位置が <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型にない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">
        <see cref="T:System.Xaml.XamlReader" /> 実装の処理規則またはオプション設定を指定します。</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">別の <see cref="T:System.Xaml.XamlReaderSettings" /> オブジェクトの値に基づいて、<see cref="T:System.Xaml.XamlReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">既存の <see cref="T:System.Xaml.XamlReaderSettings" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">XAML 型表現を報告する場合に、保護されたコードのアクセス モデルを持つメンバーがルート オブジェクトに含まれているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">保護されたコードのアクセス モデルを持つメンバーがルート オブジェクトに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">相対パスの解決に使用される基本の URI を取得または設定します。</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">使用する基本の URI。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">プロパティ要素に存在する <see langword="x:Uid" /> 属性の値を XAML リーダーが無視する必要があるかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">プロパティ要素の <see langword="true" /> 属性の値をリーダーが無視する必要がある場合は <see langword="x:Uid" />。 プロパティ要素の <see langword="false" /> 属性をリーダーが処理する必要がある場合は <see langword="x:Uid" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">処理対象の現在のローカル アセンブリを表すオブジェクトを取得または設定します。 このアセンブリ情報は、<see cref="M:System.Xaml.XamlType.GetAllMembers" /> などのヘルパー API の呼び出しで使用されます。</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">CLR リフレクションの <see cref="T:System.Reflection.Assembly" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">リーダーが行番号と位置を提供できるかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">リーダーが行番号と位置を提供できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">リーダーがすべての <see langword="Value" /> ノードを強制的に <see langword="String" /> 型として処理するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> のみが <see langword="String" /> ノードに含まれるようにリーダーが強制する場合は <see langword="Value" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">XAML 型およびそれらの基になるアセンブリ内の型を解釈またはマッピングするために再利用できるコンテキストを定義します。</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">参照アセンブリのセットに基づいて、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">アセンブリ情報項目の列挙可能なセット。 各アセンブリ情報項目は、<see cref="T:System.Reflection.Assembly" /> の値によって指定されます。</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">参照アセンブリのセットおよび設定オブジェクトに基づいて、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">アセンブリ情報の列挙可能なセット。 各アセンブリ情報項目は、<see cref="T:System.Reflection.Assembly" /> の値によって指定されます。</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlSchemaContext" /> の構築に使用する設定オブジェクト。</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">設定オブジェクトに基づいて、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlSchemaContext" /> の構築に使用する設定オブジェクト。</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">
        <see langword="Finalize" /> が呼び出されない非標準の <see langword="Dispose" /> 実装を提供します。</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">XAML スキーマとそのコンテキストで検索 API から返される値の完全修飾アセンブリ名を使用するかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XAML スキーマとそのコンテキストで検索 API から返される値の完全修飾アセンブリ名を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">この <see cref="T:System.Xaml.XamlSchemaContext" /> が保持するアセンブリを検索し、名前空間のセットを返します。</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">名前空間の識別子の列挙可能なセット。 これらの識別子は文字列として提供されます。</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">この <see cref="T:System.Xaml.XamlSchemaContext" /> が保持するアセンブリを検索し、指定された XAML 名前空間から型のセットを返します。</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">返される型の XAML 名前空間。</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">XAML 型の列挙可能なセット。 セット内の各 XAML 型は、<see cref="T:System.Xaml.XamlType" /> オブジェクトによって表されます。</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">指定された XAML 名前空間を割り当てるときにコンシューマーが使用するのに適切なプレフィックスとして報告された文字列を取得します。</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">適切なプレフィックスを取得する XAML 名前空間。</param>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">マークアップで使用する指定された XAML 名前空間を割り当てるときにコンシューマーが使用する必要のある文字列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">
        <paramref name="xmlns" /> が null です。</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">要求された <paramref name="targetType" /> への変換を行うことができる値コンバーターを返します。</summary>
      <param name="converterType" vsli:raw="The converter implementation.">コンバーター実装。</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">コンバーターの目的の変換先の型。</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">特定のコンバーター基本クラス。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">メソッドの呼び出し時に指定された制約と一致する制約がある <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">XAML 言語または特定の実装のディレクティブを表す <see cref="T:System.Xaml.XamlDirective" /> 値を返します。</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">名前付きディレクティブが含まれている XAML 名前空間。</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">取得するディレクティブの名前。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">要求されたディレクティブを表す <see cref="T:System.Xaml.XamlDirective" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> または <paramref name="name" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">XAML 名前空間と型名の文字列に基づく <see cref="T:System.Xaml.XamlType" /> を返します。 このシグネチャでは、目的の型がジェネリック型である場合は型引数を指定できます。</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">目的の型が含まれている XAML 名前空間。</param>
      <param name="name" vsli:raw="The string name of the desired type.">目的の型の文字列名。</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">ジェネリック型の初期化型引数。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">入力された条件に一致する <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">CLR 型識別子に基づく <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">
        <see cref="T:System.Xaml.XamlType" /> を取得する対象の型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">入力された <paramref name="type" /> に一致する <see cref="T:System.Xaml.XamlType" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">XAML システム型名に基づく <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">
        <see cref="T:System.Xaml.XamlType" /> を取得する対象の XAML 型名。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">入力された <paramref name="xamlTypeName" /> に一致する <see cref="T:System.Xaml.XamlType" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> のコンポーネント (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> または <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">包含されている XAML 名前空間の解決に必要なアセンブリを解決するために操作によってこのスキーマ コンテキストが使用される場合に呼び出されます。</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">読み込むアセンブリの名前。</param>
      <returns vsli:raw="The resolved assembly.">解決されたアセンブリ。</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">XAML スキーマ コンテキストの参照アセンブリの列挙可能なセットを取得します。</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">スキーマ コンテキストの参照アセンブリの列挙可能なセット。 各アセンブリ情報項目は、<see cref="T:System.Reflection.Assembly" /> の値によって指定されます。</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">XAML スキーマとそのコンテキストで、アリティ (入力パラメーターの個数) が同じコンストラクターを 2 つ持つマークアップ拡張機能がサポートされるかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">スキーマ コンテキストで重複するアリティを持つマークアップ拡張が許可される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">互換性のある XAML 名前空間に対する要求の成功または失敗を返します。 成功した要求では、Out パラメーターとしてその XAML 名前空間が報告されます。</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">互換性の結果を確認する対象の XAML 名前空間の <see langword="xmlns" /> 文字列。</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">このメソッドから戻るときには、互換性のある XAML 名前空間要求の <see langword="xmlns" /> 文字列。 メソッドが <see langword="false" /> を返す場合、これは <paramref name="xamlNamespace" /> と同じである可能性があります。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="compatibleNamespace" /> に有効な結果が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlSchemaContext" /> のオプション設定を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlSchemaContextSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">既存の <see cref="T:System.Xaml.XamlSchemaContextSettings" /> インスタンスの値をコピーして、<see cref="T:System.Xaml.XamlSchemaContextSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">既存の <see cref="T:System.Xaml.XamlSchemaContextSettings" />。</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">XAML スキーマとそのコンテキストで検索 API から返される値の完全修飾アセンブリ名を使用するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XAML スキーマとそのコンテキストで検索 API から返される値の完全修飾アセンブリ名を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">XAML スキーマ コンテキストで、アリティ (入力パラメーターの個数) が同じコンストラクターを 2 つ持つマークアップ拡張機能が許可されるかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スキーマ コンテキストで重複するアリティのマークアップ拡張機能が許可される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">XAML のバインディング システムまたは別のスキーマ表現システムがスキーマ コンテキストに対して例外を報告した場合にスローされる例外です。</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlSchemaException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlSchemaException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlSchemaException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlSchemaException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">XAML の読み取りとオブジェクト グラフの書き込み、オブジェクト グラフの読み取りとシリアル化用の XAML ファイル出力の書き込みなどの共通の XAML タスクのための高いレベルのサービス (静的メソッド) を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">XAML リーダーの読み取り元の <see cref="T:System.IO.Stream" /> を読み込み、その出力をオブジェクト グラフとして書き込みます。</summary>
      <param name="stream" vsli:raw="The stream to load as input.">入力として読み込むストリーム。</param>
      <returns vsli:raw="The object graph that is written as output.">出力として書き込まれるオブジェクト グラフ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">
        <see cref="T:System.IO.TextReader" /> から XAML リーダーを作成し、オブジェクト グラフを返します。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">作成する <see cref="T:System.IO.TextReader" /> の基礎として使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The object graph that is returned.">返されるオブジェクト グラフ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">XAML リーダーの読み取り元の <see cref="T:System.IO.Stream" /> を読み込み、オブジェクト グラフを返します。</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">読み込み元として使用するファイル名。</param>
      <returns vsli:raw="The object graph that is returned.">返されるオブジェクト グラフ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">固有の XAML リーダー実装を読み込み、オブジェクト グラフを返します。</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">この <see langword="Load" /> 操作のリーダーとして使用する XAML リーダー実装。</param>
      <returns vsli:raw="The object graph that is returned.">返されるオブジェクト グラフ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">固有の XML リーダー実装を読み込み、オブジェクト グラフを返します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">この <see langword="Load" /> 操作のリーダーとして使用する <see cref="T:System.Xml.XmlReader" /> 実装。</param>
      <returns vsli:raw="The output object graph.">出力されたオブジェクト グラフ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">XAML を文字列出力として読み取り、オブジェクト グラフを返します。</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">解析する XAML 文字列入力。</param>
      <returns vsli:raw="The object graph that is returned.">返されるオブジェクト グラフ。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xaml" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">提供されたオブジェクト グラフを XAML ノード表現に処理した後、シリアル化の出力ストリームに処理します。</summary>
      <param name="stream" vsli:raw="The destination stream.">宛先のストリーム。</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">処理されるオブジェクト グラフのルート。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された <see cref="T:System.IO.TextWriter" /> で使用される出力に処理します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">出力を書き込む <see cref="T:System.IO.TextWriter" />。</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">処理されるオブジェクト グラフのルート。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">提供されたオブジェクト ツリーを XAML ノード表現に処理した後、出力 XAML の文字列形式を返します。</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">処理されるオブジェクト グラフのルート。</param>
      <returns vsli:raw="The XAML markup output as a string.">文字列としての XAML マークアップ出力。</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された場所の出力ファイルに書き込みます。</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">出力を書き込むファイルの名前と場所。</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">処理されるオブジェクト グラフのルート。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">
        <paramref name="fileName" /> が空の文字列です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された XAML ライターに書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">使用する <see cref="T:System.Xaml.XamlWriter" /> 実装。</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">処理されるオブジェクト グラフのルート。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">使用する <see cref="T:System.Xml.XmlWriter" /> 実装。</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">処理されるオブジェクト グラフのルート。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> の入力が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">共通の XAML ノード セットの中継点を使用する <see cref="T:System.Xaml.XamlReader" /> と <see cref="T:System.Xaml.XamlWriter" /> を接続します。 提供されるリーダーとライターの種類に応じて、コンテンツが変換される可能性があります。</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">使用する <see cref="T:System.Xaml.XamlReader" /> 実装。</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">使用する <see cref="T:System.Xaml.XamlWriter" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" /> または <paramref name="xamlWriter" /> の入力が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">XAML スキーマ コンテキストが提供された <paramref name="xamlReader" /> と <paramref name="xamlWriter" /> の間で一致していません。</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">共通の XAML ノード セットの中継点を使用する <see cref="T:System.Xaml.XamlReader" /> と <see cref="T:System.Xaml.XamlWriter" /> を接続します。 提供されるリーダーとライターの種類に応じて、コンテンツが変換される可能性があります。 呼び出しの完了後にライターを閉じるかどうかを指定するパラメーターが用意されています。</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">使用する <see cref="T:System.Xaml.XamlReader" /> 実装。</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">使用する <see cref="T:System.Xaml.XamlWriter" />。</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">呼び出しの完了後にライターを閉じる場合は <see langword="true" />。最後の書き込み位置でライターをアクティブなままにする場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" /> または <paramref name="xamlWriter" /> の入力が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">XAML スキーマ コンテキストが提供された <paramref name="xamlReader" /> と <paramref name="xamlWriter" /> の間で一致していません。</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">.NET Framework XAML サービスに実装されている XAML システム全体の一部として、XAML 型に関する情報を報告します。</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">型の文字列名に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">作成する型の名前。</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">ジェネリック型を表す <see cref="T:System.Xaml.XamlType" /> の型引数。 (多くの場合は) <see langword="null" /> にできます。この値は、表される型がジェネリック型でないことを示します。</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">XAML リーダーおよび XAML ライターの XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">1 つ以上の <paramref name="typeName" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">XAML 名前空間と型の文字列名に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは、サポートする型システムと XAML スキーマ コンテキストにバッキングを持たないことがわかっている型の使用法の分析および XAML ノード記録にのみ使用されます。</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">文字列としての、型の XAML 名前空間。</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">指定された <paramref name="unknownTypeNamespace" /> XAML 名前空間内の型の名前。</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">ジェネリック型を表す <see cref="T:System.Xaml.XamlType" /> の型引数。 (多くの場合は) <see langword="null" /> にできます。この値は、表される型がジェネリック型でないことを示します。</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">XAML リーダーまたは XAML ライターの XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">1 つ以上の <paramref name="unknownTypeNamespace" />、<paramref name="unknownTypeName" />、または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">基になる CLR 型情報に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">作成する XAML 型の基になる CLR <see cref="T:System.Type" />。</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">XAML リーダーまたは XAML ライターの XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">1 つ以上の <paramref name="underlyingType" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">基になる型情報、および <see cref="T:System.Xaml.XamlType" /> の実装に基づいて、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">作成する XAML 型の基になる型。</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">XAML リーダーの XAML スキーマ コンテキスト。</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlType" /> 実装。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">1 つ以上の <paramref name="underlyingType" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="P:System.Xaml.XamlType.ContentProperty" /> の <see cref="T:System.Xaml.XamlType" /> の値として使用できる、型の読み取り専用のコレクションを取得します。</summary>
      <returns vsli:raw="A read-only collection of possible content types.">使用可能なコンテンツ型の読み取り専用のコレクション。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" /> を取得します。 この値は、この <see cref="T:System.Xaml.XamlType" /> の基になる型とスキーマ コンテキストに基づいて決定されます。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">この <see cref="T:System.Xaml.XamlType" /> のインスタンスの割り当て可能な型のリスト内に、指定された <see cref="T:System.Xaml.XamlType" /> が含まれているかどうかを示す値を返します。</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">現在の <see cref="T:System.Xaml.XamlType" /> に対して確認する型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">割り当て可能な型のリストに <paramref name="xamlType" /> が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">型の有効なインスタンスを作成するために、この <see cref="T:System.Xaml.XamlType" /> が引数 (<see langword="x:TypeArguments" /> を通じたジェネリック制約、初期化テキスト、または他の XAML 手法) を持つ必要があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">インスタンスの作成に引数値が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報を取得します。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報。 コンテンツ プロパティがない場合は <see langword="null" /> になります。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">厳密に型指定された <see langword="Collection&lt;T&gt;" /> の文字列などのように、型の一致が厳密でない場合に、コンテンツ プロパティのコンテンツをラップする型を取得します。</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">使用可能なコンテンツ ラッパー型の読み取り専用のコレクション、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">この型の遅延読み込みの変換動作を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">この型の遅延読み込みの動作を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">このオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="other" vsli:raw="An object to compare with this object.">このオブジェクトと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> によってエイリアスが XAML ディレクティブに設定された XAML メンバーを返します。</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">エイリアスが設定されたメンバーの検索対象となるディレクティブ。</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">見つかった場合はエイリアスが設定されたメンバー。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのアタッチ可能なプロパティが含まれたコレクションを返します。</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれたコレクション。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのメンバーが含まれたコレクションを返します。</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれたコレクション。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の特定の名前の付いたアタッチ可能メンバーを表す <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">
        <c>ownerTypeName.MemberName</c> フォームで取得するアタッチ可能メンバーの名前。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">要求されたアタッチ可能メンバーの <see cref="T:System.Xaml.XamlMember" /> オブジェクト。その名前のアタッチ可能メンバーが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">このオブジェクトのハッシュ コードを返します。</summary>
      <returns vsli:raw="An integer hash code.">整数のハッシュ コード。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> から、特定の名前が付けられたメンバーの <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">取得するメンバーの名前 (文字列)。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">該当するメンバーが見つかった場合はメンバーの <see cref="T:System.Xaml.XamlMember" /> 情報。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">マークアップ拡張型の場合は、この <see cref="T:System.Xaml.XamlType" /> の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型を返します。</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">情報を取得する必要のある、特定の構文またはコンストラクター モードの個数 (アリティ)。</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">
        <see cref="T:System.Xaml.XamlType" /> 値のリスト。各 <see cref="T:System.Xaml.XamlType" /> は、構文内でその位置の型に相当します。 マークアップ拡張機能のマークアップ入力を指定する場合は、型を同一の順序で指定する必要があります。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">型が含まれている XAML 名前空間の文字列識別子のリストを返します。</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">文字列値のリスト。各文字列は XAML 名前空間の URI 識別子です。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlType" /> の実装を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlType" /> 実装。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってアンビエント型を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がアンビエント型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">この <see cref="T:System.Xaml.XamlType" /> が配列を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が配列を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">この <see cref="T:System.Xaml.XamlType" /> がコレクションを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって構築可能な型を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が構築可能な型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってディクショナリを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">この <see cref="T:System.Xaml.XamlType" /> がジェネリック型を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がジェネリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XAML 名前スコープを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が XAML 名前スコープを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が <see cref="P:System.Xaml.XamlType.Name" /> に有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が有効な <see langword="true" /> 文字列を使用して初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって null 許容型を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が null 許容型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">この <see cref="T:System.Xaml.XamlType" /> が関連する型システムでパブリック型を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がパブリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">この <see cref="T:System.Xaml.XamlType" /> が基になる型システムで解決できない型を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が解決できない型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築されるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">この <see cref="T:System.Xaml.XamlType" /> が XML 定義によって有意な空白のコレクションを表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が有意な空白のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XML <see langword="XDATA" /> を表すかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が <see langword="true" /> を表す場合は <see langword="XDATA" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の <see langword="Items" /> プロパティの型情報を提供する値を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">コレクション内のアイテムの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がコレクションを表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合、この <see cref="T:System.Xaml.XamlType" /> のキー プロパティの型情報を提供する値を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">ディクショナリを使用する場合はキーの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> によってエイリアスが XAML ディレクティブに設定された XAML メンバーを返します。</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">エイリアスが設定されたメンバーの検索対象となるディレクティブ。</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">見つかった場合はエイリアスが設定されたメンバー。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのアタッチ可能なプロパティが含まれた列挙可能なセットを返します。</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれている列挙可能なセット。または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのメンバーが含まれた列挙可能なセットを返します。</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれている列挙可能なセット。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="P:System.Xaml.XamlType.ContentProperty" /> の <see cref="T:System.Xaml.XamlType" /> 値として使用できる、型のリストを返します。</summary>
      <returns vsli:raw="A list of possible content types.">使用可能なコンテンツ型のリスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> から、特定の名前の付いたアタッチ可能なものを表す <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">
        <c>ownerTypeName.MemberName</c> フォームで取得するアタッチ可能メンバーの名前。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">要求されたアタッチ可能メンバーの <see cref="T:System.Xaml.XamlMember" /> オブジェクト。その名前のアタッチ可能メンバーが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" /> を返します。 この値は、この <see cref="T:System.Xaml.XamlType" /> の基になる型とスキーマ コンテキストに基づいて決定されます。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">この <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> で使用される特定のコレクション型を宣言する <see cref="T:System.Xaml.XamlType" /> 列挙体の値を返します。</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">
        <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> 列挙体の値。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">型の有効なインスタンスを作成するために、この <see cref="T:System.Xaml.XamlType" /> が引数 (<see langword="x:TypeArguments" /> を通じたジェネリック制約、初期化テキスト、または他の XAML 手法) を持つ必要があるかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">インスタンスの作成に引数値が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報を返します。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報。 <see langword="null" /> でもかまいません。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> のコンテンツ ラッパーを表す <see cref="T:System.Xaml.XamlType" /> 値のリストを取得します。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> のコンテンツ ラッパーを表す <see cref="T:System.Xaml.XamlType" /> 値のリスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="T:System.Xaml.XamlType" /> 情報、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってアンビエント型を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がアンビエント型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって構築可能な型を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が構築可能な型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XAML 名前スコープを表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が XAML 名前スコープを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって null 許容型を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が null 許容型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">この <see cref="T:System.Xaml.XamlType" /> が関連する型システムでパブリック型を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> がパブリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">この <see cref="T:System.Xaml.XamlType" /> が基になる型システムで解決できない型を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が解決できない型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">この <see cref="T:System.Xaml.XamlType" /> が XML 定義によって有意な空白のコレクションを表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が有意な空白のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XML <see langword="XDATA" /> を表すかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が <see langword="true" /> を表す場合は <see langword="XDATA" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の <see langword="Items" /> プロパティの型情報を提供する値を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">コレクション内のアイテムの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がコレクションを表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合、この <see cref="T:System.Xaml.XamlType" /> のキー プロパティの型情報を提供する値を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">ディクショナリを使用する場合はキーの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">マークアップ拡張機能を表す場合、この <see cref="T:System.Xaml.XamlType" /> の返された <see langword="ProvideValue" /> の型情報を提供する値を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">マークアップ拡張機能を使用する場合は戻り値の型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlMember" /> から、特定の名前が付けられたメンバーの <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">取得するメンバーの名前 (文字列)。</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">メンバーの <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> の値が <see langword="true" /> であってもメンバーを返す場合は <see langword="true" />。<see cref="P:System.Xaml.XamlMember.IsReadOnly" /> のメンバーを返さない場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">該当するメンバーが見つかった場合はメンバーの <see cref="T:System.Xaml.XamlMember" /> 情報。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">マークアップ拡張型の場合は、この <see cref="T:System.Xaml.XamlType" /> の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型を返します。</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">情報を取得する必要のある、特定の構文またはコンストラクター モードの個数 (アリティ)。</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">
        <see cref="T:System.Xaml.XamlType" /> 値のリスト。各 <see cref="T:System.Xaml.XamlType" /> は構文内でその位置の型に相当します。 マークアップ拡張機能のマークアップ入力を指定する場合は、これらの型を同一の順序で指定する必要があります。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">マークアップ拡張機能のセット操作で使用するハンドラー コールバックを返します。</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">マークアップ拡張機能のセット操作で使用するハンドラー コールバック。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">型コンバーターを設定する場合に使用するハンドラーを返します。</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">型コンバーターを設定する場合に使用するハンドラー。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">周囲の空白をトリムするモードを使用して、この <see cref="T:System.Xaml.XamlType" /> をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">周囲の空白をトリムするモードでこの <see cref="T:System.Xaml.XamlType" /> をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約がある <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築されるかどうかを示す値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約がある <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">マークアップ拡張機能を表す場合、この <see cref="T:System.Xaml.XamlType" /> の返された <see langword="ProvideValue" /> の型情報を提供する値を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">マークアップ拡張機能を使用する場合は戻り値の型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">この <see cref="T:System.Xaml.XamlType" /> が表す型の文字列名を取得します。</summary>
      <returns vsli:raw="The string name of this XAML type.">この XAML 型の文字列名。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">指定した 2 つの <see cref="T:System.Xaml.XamlType" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="xamlType1" /> の値が <paramref name="xamlType2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">指定した 2 つの <see cref="T:System.Xaml.XamlType" /> オブジェクトの値が異なるかどうかを判断します。</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="xamlType1" /> の値が <paramref name="xamlType2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> のプライマリ XAML 名前空間である単一の名前空間を取得します。</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">文字列で表される、この XAML 型のプライマリ XAML 名前空間の識別子。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlSchemaContext" /> を処理するアクティブな <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlSchemaContext" /> を処理するアクティブな <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の文字列表現を返します。</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> の文字列表現。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">コンテンツを囲んでいる空白をトリムするシリアル化の空白処理動作がこの <see cref="T:System.Xaml.XamlType" /> に含まれているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Xaml.XamlType" /> が空白をトリムする型を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">この <see cref="T:System.Xaml.XamlType" /> がジェネリックを表す場合に型引数のリストを取得します。</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">型引数の型のリスト。または、この <see cref="T:System.Xaml.XamlType" /> がジェネリックを表していない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">XAML ライターの既定の実装と基本クラス定義を提供します。 これは動作する既定の XAML ライターではありません。<see cref="T:System.Xaml.XamlWriter" /> の派生クラスを作成してその抽象メンバーを実装するか、または <see cref="T:System.Xaml.XamlWriter" /> の既存の派生クラスを使用する必要があります。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">XAML ライター オブジェクトを閉じます。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Xaml.XamlWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">マネージド リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">
        <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> が呼び出されているかどうかを取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> が呼び出されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">派生クラスで実装されている場合に、アクティブな XAML スキーマ コンテキストを取得します。</summary>
      <returns vsli:raw="The active XAML schema context.">アクティブな XAML スキーマ コンテキスト。</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">以下を参照してください。<see cref="M:System.IDisposable.Dispose" /></summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">派生クラスで実装された場合、終了メンバー ノードの表現を生成します。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">派生クラスで実装された場合、終了オブジェクト ノードの表現を生成します。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">派生クラスで実装された場合、オブジェクトが入力 XAML ノード セットで個々のオブジェクト値として指定されているのではなく設定中のプロパティの既定または暗黙の値であるときに、オブジェクトを生成します。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">派生クラスで実装された場合、XAML 名前空間宣言ノードを書き込みます。</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">書き込む名前空間宣言。</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">XAML リーダーのノード型 (<see cref="P:System.Xaml.XamlReader.NodeType" />) に基づいて切り替えを実行し、ライター実装の関連する <see langword="Write" /> メソッドを呼び出します。</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">ノードの決定に使用するリーダー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">既定の実装で、既定の列挙体に含まれていない <see cref="T:System.Xaml.XamlNodeType" /> が出現しました。</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">派生クラスで実装された場合、開始メンバー ノードの表現を書き込みます。</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">書き込むメンバー ノード。</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">派生クラスで実装された場合、開始オブジェクト ノードの表現を書き込みます。</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">書き込むオブジェクトの XAML 型。</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">派生クラスで実装された場合、値ノードを書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">
        <see cref="T:System.Xaml.XamlWriter" /> 実装の初期化設定を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">別の既存の設定インスタンスを使用して、<see cref="T:System.Xaml.XamlWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">既存の <see cref="T:System.Xaml.XamlWriterSettings" /> オブジェクト。</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">
        <see cref="T:System.Xml.XmlReader" /> を媒介として使用して XML ファイルから XAML マークアップを処理し、XAML ノード ストリームを生成します。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">ストリームに基づいて、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">リーダーに読み込む初期ストリーム。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">ストリームに基づき、指定した XAML スキーマ コンテキストを使用して、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">リーダーに読み込む初期ストリーム。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">ストリームに基づき、指定した XAML スキーマ コンテキストと XAML 固有の設定を使用して、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">リーダーに読み込む初期ストリーム。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="The specific reader settings.">特定のリーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">ストリームに基づき、XAML 固有の設定を使用して、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">リーダーに読み込む初期ストリーム。</param>
      <param name="settings" vsli:raw="The specific reader settings.">特定のリーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlXmlReader" /> に基づいて、<see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">初期化に使用する <see cref="T:System.IO.TextReader" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">
        <see cref="T:System.Xaml.XamlXmlReader" /> に基づき、指定したスキーマ コンテキストと XAML 固有の設定を使用して、<see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">初期化に使用する <see cref="T:System.IO.TextReader" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> は <see langword="null" />です。

または -
<paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">
        <see cref="T:System.Xaml.XamlXmlReader" /> に基づき、指定したスキーマ コンテキストと XAML 固有の設定を使用して、<see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">初期化に使用する <see cref="T:System.IO.TextReader" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="The specific reader settings.">特定のリーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> は <see langword="null" />です。

または -
<paramref name="schemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">
        <see cref="T:System.Xaml.XamlXmlReader" /> に基づき、XAML 固有の設定を使用して、<see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">初期化に使用する <see cref="T:System.IO.TextReader" />。</param>
      <param name="settings" vsli:raw="The specific reader settings.">特定のリーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">既定の XML リーダーに読み込むファイルの名前に基づいて、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">読み込む XML ファイルの名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">既定の XML リーダーに読み込むファイルの名前に基づき、指定した XAML スキーマ コンテキストを使用して、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">読み込むファイルの名前。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">既定の XML リーダーに読み込むファイルの名前に基づき、指定した XAML スキーマ コンテキストと XAML 固有のリーダー設定を使用して、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">読み込む XML ファイルの名前。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="The specific reader settings.">特定のリーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> が <see langword="null" /> です。

または -
<paramref name="schemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">既定の XML リーダーに読み込むファイルの名前に基づき、XAML 固有のリーダー設定を使用して、<see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">読み込む XML ファイルの名前。</param>
      <param name="settings" vsli:raw="The specific reader settings.">特定のリーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> を使用して <see cref="T:System.Xaml.XamlXmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">媒介の XML プロセッサとして使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">指定した <see cref="T:System.Xaml.XamlXmlReader" /> およびスキーマ コンテキストを使用して、<see cref="T:System.Xml.XmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">媒介の XML プロセッサとして使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">指定した <see cref="T:System.Xaml.XamlXmlReader" />、スキーマ コンテキスト、およびリーダー設定を使用して、<see cref="T:System.Xml.XmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">媒介の XML プロセッサとして使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">XAML 処理の XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">特定の XAML リーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">指定した <see cref="T:System.Xaml.XamlXmlReader" /> およびリーダー設定を使用して、<see cref="T:System.Xml.XmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">媒介の XML プロセッサとして使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">特定の XAML リーダー設定。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">行情報が使用可能であるかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">行情報が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">XAML ノード ストリーム内でリーダーの位置が末尾かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">位置がノード ストリームのファイルの概念上の末尾である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">報告する行番号を取得します。</summary>
      <returns vsli:raw="The line number to report.">報告する行番号。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">報告する行の位置を取得します。</summary>
      <returns vsli:raw="The line position to report.">報告する行の位置。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">現在のリーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合に、リーダーが現在配置されているメンバーを取得します。</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">現在のメンバー。現在のリーダーがメンバー上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">現在のノードから XAML 名前空間を取得します。</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">現在のノードの XAML 名前空間 (使用可能な場合)。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">現在のノードの種類を取得します。</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">
        <see cref="T:System.Xaml.XamlNodeType" /> 列挙体の値。</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">読み込まれたソースから次の XAML ノードを読み取ります (XAML ノードがある場合)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">情報セットにスキーマ情報を提供するオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">情報セットにスキーマ情報を提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">現在のノードの <see cref="T:System.Xaml.XamlType" />。リーダーがオブジェクト上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">現在のノードの値を取得します。</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">現在のノードの値。リーダーが <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">
        <see cref="T:System.Xaml.XamlXmlReader" /> XAML リーダー実装の処理規則またはオプション設定を指定します。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlXmlReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">既存の <see cref="T:System.Xaml.XamlXmlReaderSettings" /> オブジェクトから設定をコピーして、<see cref="T:System.Xaml.XamlXmlReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">コピーする既存の <see cref="T:System.Xaml.XamlXmlReaderSettings" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">
        <see cref="T:System.Xaml.XamlXmlReader" /> を閉じるときに基になるストリームまたはテキスト リーダーを閉じる必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlXmlReader" /> を閉じるときに基になるストリームまたはリーダーを閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">
        <see cref="T:System.Xaml.XamlXmlReader" /> でマークアップ互換性のコンテンツを処理する既定の動作がリーダーと異なるかどうかを判断する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">開始リーダーを直接使用する場合は <see langword="true" />。これは、XML 互換性マークアップをメイン ストリームの一部として処理し、互換性を考慮しないことを意味します。 既定の動作を使用する場合は <see langword="false" />。XML 互換性を個別に処理します。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">リーダーがノードの <see langword="xml:lang" /> 属性を書き込むライターに上位変換する可能性のある言語設定の値を取得または設定します。</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">リーダーに基づいて使用可能な <see langword="xml:lang" /> 出力に使用される文字列。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">XAML リーダーが XAML ライターにノードの <see langword="xml:space" /> 属性を書き込むように指示するかどうかを判断する値を取得または設定します。 この動作が必要な場合、この情報は共有 XAML スキーマ コンテキストを介して渡されます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" />XAML ノードストリームを処理しているライターが<c>xml: space = "preserve"</c>を出力に書き込むことができる場合。<see langword="false" /> 属性をノードに書き込むこと <see langword="xml:space" /> ができません。</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">
        <see cref="T:System.IO.TextWriter" /> または <see cref="T:System.Xml.XmlWriter" /> サポート クラスを使用して、XAML ノード ストリームをテキストまたはマークアップのシリアル化形式に書き込みます。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">ストリームから <see cref="T:System.Xaml.XamlXmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The stream to write.">書き込むストリーム。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">XAML ライターの XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> は <see langword="null" />です。

または -
<paramref name="schemaContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">ライター設定オブジェクトを使用して、ストリームから <see cref="T:System.Xaml.XamlXmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream" vsli:raw="The stream to write.">書き込むストリーム。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">XAML ライターの XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">通常は既定以外の固有の設定を持つ、<see cref="T:System.Xaml.XamlXmlWriterSettings" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="stream" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">
        <see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">出力を書き込む <see cref="T:System.IO.TextWriter" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">XAML ライターの XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">設定オブジェクトを使用して、<see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">出力を書き込む <see cref="T:System.IO.TextWriter" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">XAML ライターの XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">通常は既定以外の固有の設定を持つ、<see cref="T:System.Xaml.XamlXmlWriterSettings" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">
        <see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.Xml.XmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">出力を書き込む <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">XAML ライターの XAML スキーマ コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">設定オブジェクトを使用して、<see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.Xml.XmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">出力を書き込む <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">XAML ライターの XAML スキーマ コンテキスト。</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">通常は既定以外の固有の設定を持つ、<see cref="T:System.Xaml.XamlXmlWriterSettings" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Xaml.XamlXmlWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">アンマネージ リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> の <see langword="Flush" /> メソッドを呼び出します。これにより、現在のバッファーの内容がすべて書き込まれ、ライターが閉じられます。</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">この <see cref="T:System.Xaml.XamlXmlWriter" /> が処理に使用する XAML スキーマ コンテキストを取得します。</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">この <see cref="T:System.Xaml.XamlXmlWriter" /> が XAML 処理に使用する XAML スキーマ コンテキスト。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">この <see cref="T:System.Xaml.XamlXmlWriter" /> が XAML 処理に使用するライター設定を取得します。</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">この <see cref="T:System.Xaml.XamlXmlWriter" /> が XAML 処理に使用するライター設定を取得します。</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 終了メンバー ノードを書き込みます。 XAML ノード ストリームの現在位置がメンバー内にない場合、または終了メンバーの書き込みが内部ライター状態でサポートされていない場合は、例外をスローします。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">XAML ノード ストリームの現在位置が、メンバー内にありません。</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">現在のライター状態は、終了メンバーの書き込みをサポートしていません。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 終了オブジェクト ノードを書き込みます。 処理される XAML ノード ストリームの現在位置に終了オブジェクトの書き込みとの互換性がない場合は、例外をスローします。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">XAML ノード ストリームの現在位置が、終了メンバーを書き込むことができるスコープ内にありません。</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">現在のライター状態は、終了オブジェクトの書き込みをサポートしていません。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">指定したオブジェクトが入力 XAML ノード セットでオブジェクト値として指定されているのではなく、書き込まれるプロパティの既定または暗黙の値である場合に、オブジェクトを書き込みます。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に名前空間の情報を書き込みます。 特定の状態で例外がスローされる可能性がありますが、例外をスローする代わりに、XAML 名前空間の宣言を挿入できる位置にライターおよび処理される XAML ノード ストリームが到達するまで名前空間情報の書き込みを遅延させる場合があります。</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">書き込む XAML 名前空間宣言。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> は、有効な XAML 名前空間の宣言ではありません (null プレフィックスまたは null 識別子コンポーネントがあります)。</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">現在のライター状態は、XAML 名前空間の宣言の書き込みをサポートしていません。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 開始メンバー ノードを書き込みます。 XAML ノード ストリームの現在位置が別のメンバー内にある場合、または開始メンバーを書き込むことのできるスコープまたはライター状態にない場合は、例外をスローします。</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">書き込むメンバーの XAML メンバー識別子。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> は有効な <see cref="T:System.Xaml.XamlMember" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">XAML ノード ストリームの現在位置が、開始メンバーの書き込みに対して無効です。</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">ライター状態は、開始メンバーの書き込みについて有効ではありません。
または
XAML ライターが重複するメンバーを記述しようとしました。 この例外には、より正確な内部例外がある可能性があります。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 開始オブジェクト ノードを書き込みます。 XAML ノード ストリームの現在位置が開始オブジェクトを書き込むことのできるスコープにない場合、またはライターが開始オブジェクトを書き込むことのできる状態にない場合は、例外をスローします。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">書き込むオブジェクトの <see cref="T:System.Xaml.XamlType" /> (XAML 型識別子)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> が有効な <see cref="T:System.Xaml.XamlType" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">XAML ノード ストリームの現在位置が、新規開始オブジェクトの書き込みに対して有効ではありません。</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">XAML ライターの状態が、新規開始オブジェクトの書き込みに対して有効ではありません。</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 値ノードを書き込みます。 XAML ノード ストリームの現在位置が値の書き込みに対して無効である場合、またはライターが値を書き込めない状態にある場合は、例外をスローします。</summary>
      <param name="value" vsli:raw="The value information to write.">書き込む値情報。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">XAML ノード ストリームの現在位置が、値の書き込みに対して有効ではありません。</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">XAML ライター状態は、値ノードの書き込みをサポートしていません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> に、null でも文字列でもない値が指定されています。</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">特定の <see cref="T:System.Xaml.XamlXmlWriter" /> API によってスローされる例外。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Xaml.XamlXmlWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Xaml.XamlXmlWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">エラーを説明する指定したメッセージを使用して、<see cref="T:System.Xaml.XamlXmlWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Xaml.XamlXmlWriterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">
        <see cref="T:System.Xaml.XamlXmlWriter" /> XAML ライター実装の初期化設定を提供します。</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">
        <see cref="T:System.Xaml.XamlXmlWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">重複の解決または他のエラー チェックの目的で、<see cref="T:System.Xaml.XamlXmlWriter" /> が常に有効な XAML 入力を予期する必要があるかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">メンバーが重複する場合に例外をスローするなどの特定の検証またはエラー チェックを <see cref="T:System.Xaml.XamlXmlWriter" /> がスキップする場合は <see langword="true" />。 無効な XAML が出現すると <see cref="T:System.Xaml.XamlXmlWriter" /> が例外をスローする場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">
        <see cref="T:System.Xaml.XamlXmlWriter" /> が <see langword="Dispose" /> または他の操作の直後に閉じる必要があるかどうか、または閉じる前に XAML ライターがバッファー出力を書き込む必要があるかどうかを指定する値を取得または設定します。 この設定は注意して使用してください。すぐに閉じると、再び読み込むことができない無効な XAML になる可能性があります</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> または類似の操作で <see cref="T:System.Xaml.XamlXmlWriter" /> がすぐに閉じる場合は <see langword="Dispose" />。 <see cref="T:System.Xaml.XamlXmlWriter" /> を解放する前に残りのバッファー出力を書き出す場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">この <see cref="T:System.Xaml.XamlXmlWriterSettings" /> インスタンスのコピーを返します。</summary>
      <returns vsli:raw="The returned copy.">返されたコピー。</returns>
    </member>
  </members>
</doc>