<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationProvider</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Provider.AutomationInteropProvider">
      <summary>UI オートメーション プロバイダーと UI オートメーション クライアント アプリケーション間の通信をサポートします。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId">
      <summary>ID が部分的なものであり、基本プロバイダーから提供される ID に追加する必要があることを示す値を格納します。この値は、UI Automation プロバイダーから <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" /> に渡される配列の最初の要素として返されます。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.AutomationInteropProvider.ClientsAreListening">
      <summary>いずれかの UI Automation クライアント アプリケーションが UI オートメーション イベントにサブスクライブされるかどうかを指定する値を取得します。</summary>
      <returns>クライアントがイベントにサブスクライブされる場合は<see langword="true" /> 、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle(System.IntPtr)">
      <summary>指定したウィンドウを表す UI オートメーション プロバイダーを返します。</summary>
      <param name="hwnd">ウィンドウのハンドル。</param>
      <returns>指定したウィンドウ用の未処理要素プロバイダー。</returns>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit">
      <summary>バッチ処理の前に送信するイベントの最大数を指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.ItemsInvalidateLimit">
      <summary>コンテナー内の項目のバッチ処理の前に送信するイベントの最大数。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationEvent(System.Windows.Automation.AutomationEvent,System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationEventArgs)">
      <summary>パターン イベントまたはカスタム イベントを発生させます。</summary>
      <param name="eventId">イベント識別子。</param>
      <param name="provider">イベントに関連付けられた要素。</param>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationPropertyChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationPropertyChangedEventArgs)">
      <summary>UI オートメーション プロパティが変更された場合にイベントを発生させます。</summary>
      <param name="element">イベントに関連付けられた要素。</param>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.StructureChangedEventArgs)">
      <summary>UI オートメーション ツリーが変更された場合にイベントを発生させます。</summary>
      <param name="provider">イベントに関連付けられた要素。</param>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.ReturnRawElementProvider(System.IntPtr,System.IntPtr,System.IntPtr,System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>
        <see langword="WM_GETOBJECT" /> メッセージに対する応答として要素の UI 自動化プロバイダーを返します。</summary>
      <param name="hwnd">要素のウィンドウのハンドル。</param>
      <param name="wParam">
        <see langword="WM_GETOBJECT" /> メッセージの <see langword="wParam" /> メンバー。</param>
      <param name="lParam">
        <see langword="WM_GETOBJECT" /> メッセージの <see langword="lParam" /> メンバー。</param>
      <param name="el">要素の UI オートメーション プロバイダー。</param>
      <returns>メッセージを基本ウィンドウ プロシージャーに渡す前に <see cref="P:System.Windows.Forms.Message.Result" /> に割り当てられるデータのポインター。</returns>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.RootObjectId">
      <summary>
        <see langword="lParam" /> メッセージの <see langword="WM_GETOBJECT" /> メンバーで使用される値を格納します。この値は、サーバーがルートの未処理要素プロバイダーへの参照を返す必要があることを示します。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
      <summary>ドッキング コンテナー内で dock プロパティを公開するコントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
      <summary>ドッキング コンテナー内のコントロールの現在の <see cref="T:System.Windows.Automation.DockPosition" /> を取得します。</summary>
      <returns>ドッキング コンテナーおよび内部のその他の要素の境界に対して、相対的な <see cref="T:System.Windows.Automation.DockPosition" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>ドッキング コンテナー内のコントロールをドッキングします。</summary>
      <param name="dockPosition">ドッキング コンテナーの境界およびコンテナー内の他の要素に対する相対的なドッキング位置。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
      <summary>コンテンツ表示のための展開とコンテンツ非表示のための縮小を視覚的に行うコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>コントロールの子孫であるすべてのノード、コントロール、またはコンテンツを非表示にします。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>すべての子ノード、コントロール、またはコントロールのコンテンツを表示します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか) を取得します。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> を実装するコンテナーの個別の子コントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を格納する列を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> を実装する UI オートメーション プロバイダーを取得し、セルまたは項目のコンテナーを表します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.GridPattern" /> を実装し、セルまたは項目のコンテナーを表す、UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>セルまたは項目を格納する行を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる行の数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
      <summary>子要素のコレクションのコンテナーとして機能するコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。 この要素の子は <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> を実装する必要があり、キーボードで走査可能な (つまり、UI オートメーション クライアントが隣接するコントロールに移動できる) 2 次元論理座標系に体系化する必要があります。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
      <summary>グリッド内の列の合計数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>指定したセルの UI オートメーション プロバイダーを取得します。</summary>
      <param name="row">目的の行の序数。</param>
      <param name="column">目的の列の序数。</param>
      <returns>指定したセルの UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
      <summary>明確な 1 つのアクションを開始または実行し、アクティブになったときの状態を保持しないコントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">コントロールが有効ではない。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IItemContainerProvider">
      <summary>アプリケーションからコンテナー (仮想リストなど) 内の要素を検索できるようにするメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IItemContainerProvider.FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>指定したプロパティ値を持つ要素を取得します。</summary>
      <param name="startAfter">検索の開始位置となるコンテナー内の項目。</param>
      <param name="propertyId">取得する値を格納するプロパティ。</param>
      <param name="value">取得する値。</param>
      <returns>検索条件に一致する最初の項目。一致する項目がない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
      <summary>同じ情報セットまたは子コントロールの複数の表現を提供し、それらの表現を切り替えることができるコントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>現在のコントロールに固有のビューを取得します。</summary>
      <returns>UI オートメーション要素の現在のビューに対する値です。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>コントロール固有のビュー識別子のコレクションを取得します。</summary>
      <returns>UI オートメーション要素に使用できるビューを識別する値のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>コントロール固有のビューの名前を取得します。</summary>
      <param name="viewId">ビュー識別子。</param>
      <returns>ローカライズされたビューの名前。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> は、サポートされているビュー コレクションのメンバーではありません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>現在のコントロールに固有のビューを設定します。</summary>
      <param name="viewId">ビュー識別子。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> は、サポートされているビュー コレクションのメンバーではありません。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
      <summary>ある範囲内の値に設定できるコントロールへの、UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>コントロールの値が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>PageDown キーを使用するなど、大きな変更を行ったときに <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに対して加算または減算する値を取得します。</summary>
      <returns>コントロールでサポートされている大きい変更値。コントロール<see langword="Nothing" />がをサポート<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />していない場合は null (Visual Basic)。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>コントロールでサポートされる範囲の最大値を取得します。</summary>
      <returns>コントロールでサポートされている最大値また<see langword="Nothing" />はコントロールがをサポート<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />していない場合は null (Visual Basic)。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>コントロールでサポートされる範囲の最小値を取得します。</summary>
      <returns>コントロールでサポートされている最小値また<see langword="Nothing" />はコントロールがをサポート<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />していない場合は null (Visual Basic)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> がコントロールの最小値よりも小さいか、または最大値よりも大きい場合。</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>方向キーを使用するなど、小規模な変更を行ったときに <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに対して加算または減算する値を取得します。</summary>
      <returns>コントロールでがサポート<see langword="Nothing" /><see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />されていない場合は、小さな変更値または null (Visual Basic)。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
      <summary>コントロールの値を取得します。</summary>
      <returns>コントロールの値。コントロールがをサポート<see langword="Nothing" /><see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />していない場合は null (Visual Basic)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents">
      <summary>UI オートメーション クライアント アプリケーションがイベントのリッスンを開始または停止するときに、フラグメントのルート要素を通知するために呼び出されるメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventAdded(System.Int32,System.Int32[])">
      <summary>UI オートメーション クライアントが、プロパティ変更イベントなど特定のイベントのリッスンを開始するときに、UI オートメーション プロバイダに通知します。</summary>
      <param name="eventId">追加されるイベントの識別子。</param>
      <param name="properties">追加されるプロパティの識別子。または、追加されるイベント リスナーがプロパティ イベントをリッスンしない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventRemoved(System.Int32,System.Int32[])">
      <summary>UI オートメーション クライアントが、プロパティ変更イベントなど特定のイベントのリッスンを停止するときに、UI オートメーション プロバイダに通知します。</summary>
      <param name="eventId">削除されるイベントの識別子。</param>
      <param name="properties">削除されるプロパティの識別子。削除されるイベント リスナーがプロパティ イベントをリッスンしない場合は <see langword="null" />。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragment">
      <summary>リスト ボックスやリスト項目などの多階層構造の一部である、ユーザー インターフェイス (UI) 要素のメソッドとプロパティを公開します。 UI オートメーション プロバイダーによって実装されます。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle">
      <summary>この要素の外接する四角形を取得します。</summary>
      <returns>外接する四角形を表す画面座標。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot">
      <summary>フラグメントのルート ノードを取得します。</summary>
      <returns>ルート ノード。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots">
      <summary>現在の要素をルートとする UI オートメーション要素ツリーに埋め込まれた、フラグメント ルートの配列を取得します。</summary>
      <returns>ルート フラグメントの配列、または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId">
      <summary>要素のランタイム識別子を取得します。</summary>
      <returns>要素の一意のランタイム識別子。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)">
      <summary>ツリー内で、指定された方向にある UI オートメーション 要素を取得します。</summary>
      <param name="direction">移動する方向。</param>
      <returns>指定された方向にある要素。その方向に要素が存在しない場合は <see langword="null" /></returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus">
      <summary>この要素にフォーカスを設定します。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
      <summary>フラグメントのルート要素のメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
      <summary>このフラグメント内の指定したポイントにある要素を取得します。</summary>
      <param name="x">x 座標。</param>
      <param name="y">Y 座標。</param>
      <returns>指定したポイントに子要素が存在する場合は、その子要素のプロバイダー。指定したポイントがこの要素上にあるものの、どの子要素上にもない場合は、ルート プロバイダー。 それ以外の場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
      <summary>入力フォーカスがあるこのフラグメント内の要素を取得します。</summary>
      <returns>存在する場合は、入力フォーカスのあるこのフラグメント内の要素のプロバイダー。それ以外の場合は、null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderHwndOverride">
      <summary>フラグメントの UI オートメーション ツリー内にあるウィンドウ ベースの要素を再配置できるようにするメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderHwndOverride.GetOverrideProviderForHwnd(System.IntPtr)">
      <summary>指定した要素の UI オートメーション プロバイダーを取得します。</summary>
      <param name="hwnd">要素のウィンドウ ハンドル。</param>
      <returns>指定した要素のプロバイダー。要素の既定のプロバイダーがオーバーライドされない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
      <summary>UI 要素に関する基本的な情報を公開するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
      <summary>UI オートメーション 要素のコントロール パターンにサポートを提供するオブジェクトを取得します。</summary>
      <param name="patternId">パターンの識別子。</param>
      <returns>パターン インターフェイスを実装するオブジェクト、またはパターンがサポートされていない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
      <summary>UI オートメーション プロバイダーでサポートされるプロパティの値を取得します。</summary>
      <param name="propertyId">プロパティの識別子。</param>
      <returns>プロパティの値か、<see langword="null" /> か (このプロバイダーでプロパティがサポートされていない場合)、<see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" /> (まったくサポートされていない場合)。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
      <summary>この要素の基本プロバイダーを取得します。</summary>
      <returns>基本プロバイダー、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
      <summary>クライアント側のプロバイダーであるか、サーバー側のプロバイダーであるかなど、UI オートメーション プロバイダーの特性を示す値を取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> または <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" /> のいずれか。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> を実装するコンテナーの個別の子コントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>コンテナーの表示領域 (ビューポート) 内のコントロールを表示するために、コンテナー オブジェクトのコンテンツ領域をスクロールします。</summary>
      <exception cref="T:System.InvalidOperationException">項目はスクロールして表示できません。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
      <summary>子オブジェクトのコレクションのスクロール可能なコンテナーとして機能するコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。 このコントロールの子は <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" />を実装する必要があります。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>コントロールを水平方向にスクロールできるかどうかを示す値を取得します。</summary>
      <returns>コントロールを水平方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>現在の水平方向のスクロール位置を取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した水平スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>現在の水平方向のビュー サイズを取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した表示可能領域の水平方向のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>コンテンツ エリアの可視領域を水平方向および垂直方向にスクロールします。</summary>
      <param name="horizontalAmount">コントロール固有の水平方向インクリメント。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡す必要があります。</param>
      <param name="verticalAmount">コントロール固有の垂直方向インクリメント。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡す必要があります。</param>
      <exception cref="T:System.ArgumentException">コントロールは水平または垂直方向のスクロールのためだけに <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 値をサポートしていますが、<see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 値が渡されました。</exception>
      <exception cref="T:System.InvalidOperationException">サポートされていない方向にスクロールしようとしました。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>水平方向および垂直方向のスクロール位置を、コントロール内のコンテンツ領域全域に対する割合として設定します。</summary>
      <param name="horizontalPercent">コンテンツ領域の範囲全体のパーセンテージで示した水平位置。 コントロールをこの方向にスクロールできない場合は、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡す必要があります。</param>
      <param name="verticalPercent">コンテンツ エリアの範囲全体のパーセンテージで示した垂直方向の位置。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡す必要があります。</param>
      <exception cref="T:System.ArgumentException">倍精度浮動小数点型に変換できない値が渡されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">100 を超える値または 0 未満の値 (<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> に相当する -1 を除く) が渡されています。 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> および <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> の値は 100% または 0% に正規化されます。</exception>
      <exception cref="T:System.InvalidOperationException">サポートされていない方向にスクロールしようとしました。</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>コントロールを垂直方向にスクロールできるかどうかを示す値を取得します。</summary>
      <returns>コントロールを垂直方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>現在の垂直方向のスクロール位置を取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した垂直スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>垂直方向のビュー サイズを取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した表示可能領域の垂直方向のサイズ。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装するコンテナーの選択可能な個別の子コントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>選択した項目のコレクションに現在の要素を追加します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
      <summary>選択したアイテムの選択を解除し、現在の要素を選択します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装し、呼び出し元オブジェクトのコンテナーとして機能する UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> をサポートするプロバイダー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
      <summary>個々の選択可能な子項目のコレクションのコンテナーとして機能するコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。 このコントロールの子は <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />を実装する必要があります。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>UI オートメーション プロバイダーが複数の子要素の同時選択を許可するかどうかを示す値を取得します。</summary>
      <returns>複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>選択されている各子要素の UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>選択が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISynchronizedInputProvider">
      <summary>同期入力をサポートするコントロールに対する UI オートメーション クライアントからのアクセスを容易にするメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel">
      <summary>入力のリッスンを停止します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>指定された型の入力のリッスンをプロバイダーが開始するよう指定します。</summary>
      <param name="inputType">リッスンする入力の型。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> を実装するコンテナーの子コントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>テーブルのアイテムやセルに関連付けられているすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられているすべての行ヘッダーを表す、UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
      <summary>子要素のコレクションのコンテナーとして機能するコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。 この要素の子は <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> を実装する必要があり、キーボードで走査可能な (つまり、UI オートメーション クライアントが隣接するコントロールに移動できる) 2 次元論理座標系に体系化する必要があります。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>テーブル内のすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>テーブル内のすべての行ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>テーブルの主要な移動方向を取得します。</summary>
      <returns>主要な移動方向。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
      <summary>テキストを格納しているコントロールへの、UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
      <summary>ドキュメントのメイン テキストを囲むテキスト範囲を取得します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
      <summary>現在の 1 つ以上のテキスト選択に関連付けられている、非結合テキスト範囲のコレクションを取得します。</summary>
      <returns>非結合テキスト範囲のコレクション。</returns>
      <exception cref="T:System.InvalidOperationException">UI オートメーション プロバイダーがテキスト選択をサポートしていない場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>テキスト コンテナーから非結合テキスト範囲の配列を取得します。それぞれのテキスト範囲は部分的に表示されている最初の行から始まり、部分的に表示されている最後の行の末尾で終わります。</summary>
      <returns>コンテナーまたは空の配列に含まれる表示テキスト範囲のコレクション。 null 参照 (Visual Basic では <see langword="Nothing" />) は返されません。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>イメージ、ハイパーリンク、その他の埋め込みオブジェクトなどの子要素を囲むテキスト範囲を取得します。</summary>
      <param name="childElement">囲まれたオブジェクト。</param>
      <returns>子要素に及ぶ範囲。</returns>
      <exception cref="T:System.ArgumentException">子要素が null 参照 (Visual Basic では <see langword="Nothing" />) である。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
      <summary>指定した画面座標の最も近くにある低次元 (空の) テキスト範囲を返します。</summary>
      <param name="screenLocation">画面座標での位置。</param>
      <returns>指定した位置の最も近くにある低次元テキスト範囲。 null 参照 (Visual Basic では <see langword="Nothing" />) は返されません。</returns>
      <exception cref="T:System.ArgumentException">指定した位置が、テキスト パターンに関連付けられている UI オートメーション要素の外側にある場合。</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>テキスト プロバイダーが選択をサポートするかどうかを指定する値を取得し、選択をサポートする場合はサポートされる選択の種類を取得します。</summary>
      <returns>
        <see langword="None" /> の <see langword="Single" />、<see langword="Multiple" />、または <see cref="T:System.Windows.Automation.SupportedTextSelection" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> を実装するテキスト コンテナー内の連続するテキストの範囲への、UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>複数の非結合選択をサポートするテキスト コンテナー内の強調表示されたテキストのコレクションに追加します。</summary>
      <exception cref="T:System.InvalidOperationException">テキスト プロバイダーが複数の非結合選択をサポートしていない場合 (つまり、<see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> の値は <see langword="Multiple" /> である必要があります)。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
      <summary>元の <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> と同一で、元のプロパティをすべて継承する新しい <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> を返します。</summary>
      <returns>新しいテキスト範囲。 null 参照 (Visual Basic では <see langword="Nothing" />) は返されません。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
      <summary>テキスト範囲全体 (<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントから <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントまで) が別のテキスト範囲と同じであるかどうかを示す値を返します。</summary>
      <param name="range">比較するテキスト範囲</param>
      <returns>両方のテキスト範囲が同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">比較している範囲が同じテキスト プロバイダーからのものではない。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>2 つのテキスト範囲のエンドポイントが同じかどうかを示す値を返します。</summary>
      <param name="endpoint">呼び出し元の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントまたは <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイント。</param>
      <param name="targetRange">比較対象の範囲。</param>
      <param name="targetEndpoint">比較対象の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントまたは <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイント。</param>
      <returns>テキストにおいて、呼び出し元のエンドポイントが比較対象のエンドポイントよりも前方にある場合は、負の値を返します。
呼び出し元のエンドポイントが比較対象のエンドポイントと同じ位置にある場合は、0 を返します。
テキストにおいて、呼び出し元のエンドポイントが比較対象のエンドポイントより後方にある場合は、正の値を返します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetRange" /> が異なるテキスト プロバイダーのものである場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>指定されたテキスト単位にテキスト範囲を拡大します。</summary>
      <param name="unit">テキスト単位。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>指定された属性の値を持つテキスト範囲のサブセットを返します。</summary>
      <param name="attribute">検索対象の属性。</param>
      <param name="value">検索対象の属性値。 この値は、属性に指定されている型と一致する必要があります。</param>
      <param name="backward">最初に発生したテキスト範囲ではなく、最後に発生したテキスト範囲を返す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>一致する属性と属性値を持つテキスト範囲。それ以外の場合は null (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>指定したテキストを含むテキスト範囲のサブセットを返します。</summary>
      <param name="text">検索対象の文字列。</param>
      <param name="backward">最初に発生したテキスト範囲ではなく、最後に発生したテキスト範囲を返す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="ignoreCase">大文字と小文字を区別しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>指定したテキストと一致するテキスト範囲。それ以外の場合は null (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>指定した属性の値をテキスト範囲から取得します。</summary>
      <param name="attribute">テキスト属性。</param>
      <returns>指定した属性の値を表すオブジェクトを取得します。 たとえば、<c>GetAttributeValue(TextPattern.FontNameAttribute)</c> はテキスト範囲のフォント名にそのフォント名を表す文字列を返し、<c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> は型の値を返します<see cref="T:System.Boolean" />。
指定した属性の値がテキスト範囲内で異なる場合は <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> を返します。
指定された属性がプロバイダーまたはコントロールによってサポートされない場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">指定した属性が無効な場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
      <summary>テキスト範囲内のテキストの表示されている各行 (全体または一部) に外接する四角形のコレクションを取得します。</summary>
      <returns>テキスト範囲内の各行 (全体または一部) に外接する四角形の配列。
低次元テキスト範囲の空の配列。
完全に画面外となる、スクロール アウトする、または重なったウィンドウによって隠されてしまう画面座標を持つテキスト範囲を表す空の配列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>テキスト範囲内にあるすべての埋め込みオブジェクトのコレクションを取得します。</summary>
      <returns>範囲内にある子オブジェクトのコレクション。 テキスト範囲と重なっているが完全には範囲に含まれていない子オブジェクトも、コレクションに含まれます。
子オブジェクトが存在しない場合は、空のコレクションを返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>テキスト範囲を囲む最も内側のコントロールを返します。</summary>
      <returns>囲んでいるコントロール。通常はテキスト範囲を提供するテキスト プロバイダー。 ただし、テキスト プロバイダーがテーブル、ハイパーリンクなどの子要素をサポートする場合は、外側の要素がそのテキスト プロバイダーの子孫である可能性があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>範囲のプレーン テキストを取得します。</summary>
      <param name="maxLength">返す文字列の最大長。 制限が必要ない場合は、<c>-1</c> を使用します。</param>
      <returns>テキスト範囲のプレーンテキスト。指定した <paramref name="maxLength" /> で切り捨てられている可能性があります。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxLength" /> が -1 より小さい場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>指定されたテキスト単位数の分、テキスト範囲を移動します。</summary>
      <param name="unit">テキスト単位の境界。</param>
      <param name="count">移動するテキスト単位の数。
正の値はテキスト範囲を前方に移動し、負の値はテキスト範囲を後方に移動します。0 の場合は移動されません。</param>
      <returns>実際に移動された単位の数。 移動後のテキスト範囲のエンドポイントのいずれかが <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> エンドポイントよりも大きい、または小さい場合、要求した数よりも小さくなる場合があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>テキスト範囲の 1 つのエンドポイントを、2 番目のテキスト範囲の指定のエンドポイントに移動します。</summary>
      <param name="endpoint">移動するエンドポイント。</param>
      <param name="targetRange">同じテキスト プロバイダーからの別の範囲。</param>
      <param name="targetEndpoint">他の範囲にあるエンドポイント。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>テキスト範囲の 1 つのエンドポイントを、指定されたテキスト単位数の分、ドキュメントの範囲内で移動します。</summary>
      <param name="endpoint">移動するエンドポイント。</param>
      <param name="unit">移動対象のテキスト範囲。</param>
      <param name="count">移動する単位の数。 正の値はエンドポイントを前方に移動します。 負の値は後方に移動します。 0 の場合は移動されません。</param>
      <returns>実際に移動した単位の数。エンドポイントの移動によりドキュメントの先頭または末尾に達した場合は、要求した数よりも小さくなる場合があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>複数の非結合選択をサポートするテキスト コンテナー内の強調表示されたテキストのコレクションから、呼び出し元の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントおよび <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントに対応する、強調表示されたセクションを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">テキスト プロバイダーが複数の非結合選択をサポートしていない (たとえば、<see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> の値は <see langword="Multiple" /> である必要があります)。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>テキスト範囲がビューポート内に表示されるまで、テキスト コントロールを垂直方向にスクロールします。</summary>
      <param name="alignToTop">テキスト範囲をスクロールしてビューポートの上辺と揃える場合は <see langword="true" />。ビューポートの底辺と揃える場合は <see langword="false" /></param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
      <summary>テキスト範囲の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントおよび <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントに対応するテキスト コントロール内のテキストを強調表示します。</summary>
      <exception cref="T:System.InvalidOperationException">テキストの選択がテキスト コントロールによってサポートされていない場合に発生します。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
      <summary>一連の状態を順番に切り替えて、一度設定した状態を保持することができるコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <summary>コントロールのトグル状態を順番に切り替えます。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <summary>コントロールのトグル状態を取得します。</summary>
      <returns>コントロールの <see cref="T:System.Windows.Automation.ToggleState" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
      <summary>2 次元空間内で移動、サイズ変更、または回転できるコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <summary>コントロールが移動可能かどうかを指定する値を取得します。</summary>
      <returns>要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <summary>UI オートメーション要素のサイズが変更可能かどうかを指定する値を取得します。</summary>
      <returns>要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <summary>コントロールが回転可能かどうかを指定する値を取得します。</summary>
      <returns>要素を回転できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>コントロールを移動します。</summary>
      <param name="x">コントロールの左側の絶対画面座標。</param>
      <param name="y">コントロールの上部の絶対画面座標。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> プロパティが false の場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>コントロールのサイズを変更します。</summary>
      <param name="width">ウィンドウの新しい幅 (ピクセル単位)。</param>
      <param name="height">ウィンドウの新しい高さ (ピクセル単位)。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> プロパティが false の場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>コントロールを回転します。</summary>
      <param name="degrees">コントロールを回転する角度の数値。 正の値は時計回りの回転、負の値は反時計回りの回転を表します。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> プロパティが false の場合。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
      <summary>1 つの範囲に広がらず、文字列として表すことができる固有の値を持つコントロールへの、UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>コントロールの値が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。 プロバイダーは、値を適切なデータ型に変換します。</param>
      <exception cref="T:System.InvalidOperationException">ロケールに固有の情報が、誤った形式でコントロールに渡された場合 (誤った日付形式など)。</exception>
      <exception cref="T:System.ArgumentException">新しい値を、文字列からコントロールが認識する形式に変換できない場合。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">有効になっていないコントロールの操作が試行された場合。</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
      <summary>コントロールの値を取得します。</summary>
      <returns>文字列としてのコントロールの値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IVirtualizedItemProvider">
      <summary>仮想化項目コントロール パターンをサポートするためのメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IVirtualizedItemProvider.Realize">
      <summary>仮想項目に UI オートメーション要素として全面的にアクセスできるようにします。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
      <summary>従来のグラフィカル ユーザー インターフェイス (GUI) 内の基本的なウィンドウ ベースの機能を提供するコントロールへの UI オートメーション クライアントによるアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
      <summary>ウィンドウを閉じることを試みます。</summary>
      <exception cref="T:System.InvalidOperationException">コントロールが、要求されたアクションを実行できない場合。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">ターゲット要素が使用不可になった場合 (ウィンドウが閉じた場合など)。</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
      <summary>ウィンドウの対話状態を取得します。</summary>
      <returns>コントロールの <see cref="T:System.Windows.Automation.WindowInteractionState" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
      <summary>ウィンドウがモーダルであるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウがモーダルである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>ウィンドウが z オーダーの最上位の要素かどうかを指定する値を取得します。</summary>
      <returns>ウィンドウが最上位の場合は <see langword="true" />、それ以外は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
      <summary>ウィンドウを最大化できるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウを最大化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
      <summary>ウィンドウを最小化できるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウを最小化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>ウィンドウの表示状態を変更します。 たとえば、ウィンドウを最小化したり、最大化したりします。</summary>
      <param name="state">要求されたウィンドウ表示状態。</param>
      <exception cref="T:System.InvalidOperationException">コントロールが、要求された動作をサポートしない場合。</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
      <summary>ウィンドウの表示状態を取得します。</summary>
      <returns>ウィンドウの表示状態。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>呼び出し元のコードは、指定された時間、または関連付けられたプロセスがアイドル状態に入るまでブロックされます。どちらが最初に完了するかは関係ありません。</summary>
      <param name="milliseconds">関連付けられたプロセスがアイドル状態になるまで待機する時間。単位はミリ秒です。 最大値は <see cref="F:System.Int32.MaxValue" /> です。</param>
      <returns>ウィンドウがアイドル状態になっている場合は <see langword="true" />、タイムアウトが発生した場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">渡されたパラメーターが有効な数ではありません。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.NavigateDirection">
      <summary>UI オートメーション ツリー内のナビゲーションの方向を指定するために使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.FirstChild">
      <summary>ナビゲーション方向は、最初の子に向かっています。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.LastChild">
      <summary>ナビゲーション方向は、最後の子に向かっています。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.NextSibling">
      <summary>ナビゲーション方向は、次の兄弟に向かっています。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.Parent">
      <summary>ナビゲーション方向は、親に向かっています。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling">
      <summary>ナビゲーション方向は、直前の兄弟に向かっています。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.ProviderOptions">
      <summary>UI オートメーション プロバイダーの種類を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider">
      <summary>UI オートメーション プロバイダーは、クライアント側のプロバイダーです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.NonClientAreaProvider">
      <summary>UI オートメーション プロバイダーは、非クライアント領域のプロバイダーです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.OverrideProvider">
      <summary>UI オートメーション プロバイダーは、別のプロバイダーをオーバーライドします。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus">
      <summary>UI オートメーション プロバイダーは独自のフォーカスを処理し、<see cref="M:System.Windows.Automation.AutomationElement.SetFocus" /> が呼び出されるときに UI オートメーション が最も近くにあるウィンドウに代わりにフォーカスを設定するようにしません。 このオプションは通常、実際には Win32 フォーカスを受け取らないのにフォーカスを取るように見えるウィンドウ (メニューやドロップダウン メニューなど) のプロバイダーによって使用されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider">
      <summary>UI オートメーション プロバイダーは、サーバー側のプロバイダーです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.UseComThreading">
      <summary>UI オートメーション プロバイダーは、COM スレッド規則に従って呼び出されます。 プロバイダーがシングル スレッド アパートメントの場合、アパートメント スレッド上でのみ呼び出されます。 サーバー側プロバイダーのみこのオプションを使用することができます。</summary>
    </member>
  </members>
</doc>