<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Diagnostics.EventLog.EntryWritten" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />-Klasse mit dem angegebenen Eintrag im Ereignisprotokoll.</summary>
      <param name="entry">Ein <see cref="T:System.Diagnostics.EventLogEntry" />, der den geschriebenen Eintrag darstellt.</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary>Ruft den Eintrag im Ereignisprotokoll ab, der in das Protokoll geschrieben wurde.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.EventLogEntry" />, der den Eintrag darstellt, der in das Ereignisprotokoll geschrieben wurde.</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Diagnostics.EventLog.EntryWritten" />-Ereignis eines <see cref="T:System.Diagnostics.EventLog" /> behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>Stellt einen Platzhalter (Lesezeichen) innerhalb eines Streams von Ereignissen dar. Mit dem Platzhalter können Sie eine Position im Stream markieren und zu dieser zurückkehren. Eine Instanz dieses Objekts kann von einem <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Objekt abgerufen werden; diese entspricht dann der Position des Ereignisdatensatzes.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>Stellt ein Schlüsselwort für ein Ereignis dar. Schlüsselwörter werden in einem Ereignisanbieter definiert und zum Gruppieren von Ereignissen mit ähnlichen Ereignissen (anhand ihrer Verwendung) verwendet.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>Ruft den lokalisierten Namen des Schlüsselworts ab.</summary>
      <returns>Eine Zeichenfolge, die einen lokalisierten Namen für dieses Schlüsselwort enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>Ruft den nicht lokalisierten Namen des Schlüsselworts ab.</summary>
      <returns>Eine Zeichenfolge, die den nicht lokalisierten Namen dieses Schlüssel Worts enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>Ruft den numerischen Wert ab, der mit dem Schlüsselwort verknüpft ist.</summary>
      <returns>Der numerische Wert, der dem Schlüsselwort zugeordnet ist.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>Enthält eine Ereignisebene, die in einem Ereignisanbieter definiert wird. Die Ebene gibt den Schweregrad des Ereignisses an.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>Ruft den lokalisierten Namen für die Ereignisebene ab. Der Name beschreibt, für welchen Ereignisschweregrad diese Ebene verwendet wird.</summary>
      <returns>Eine Zeichenfolge, die den lokalisierten Namen für die Ereignis Ebene enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>Ruft den nicht lokalisierten Namen der Ereignisebene ab.</summary>
      <returns>Eine Zeichenfolge, die den nicht lokalisierten Namen der Ereignis Ebene enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>Ruft den numerischen Wert für die Ereignisebene ab.</summary>
      <returns>Der numerische Wert der Ereignis Ebene.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>Enthält statische Informationen und Konfigurationseinstellungen für ein Ereignisprotokoll. Zahlreiche Konfigurationseinstellungen wurden vom Ereignisanbieter festgelegt, der das Protokoll erstellt hat.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />-Objekt, indem das lokale Ereignisprotokoll angegeben wird, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</summary>
      <param name="logName">Der Name des lokalen Ereignisprotokolls, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />-Objekt, indem der Name des Protokolls angegeben wird, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen. Das Protokoll kann sich je nach der angegebenen Ereignisprotokollsitzung auf dem lokalen Computer oder auf einem Remotecomputer befinden.</summary>
      <param name="logName">Der Name des Ereignisprotokolls, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</param>
      <param name="session">Die Ereignisprotokollsitzung, mit der der Ereignisprotokolldienst bestimmt wird, zu dem das angegebene Protokoll gehört. Die Sitzung ist entweder mit dem Ereignisprotokolldienst auf dem lokalen Computer oder auf einem Remotecomputer verbunden.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>Ruft den Wert ab, der angibt, ob es sich um ein klassisches Ereignisprotokoll handelt. Bei einem klassischen Ereignisprotokoll werden die Ereignisse in einer MC-Datei anstelle eines Manifests (XML-Datei) für den Ereignisanbieter definiert.</summary>
      <returns>
        <see langword="true" />, wenn es sich bei dem Ereignisprotokoll um ein klassisches Protokoll handelt. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>Ruft einen Wert ab, der angibt, ob das Ereignisprotokoll aktiviert oder deaktiviert ist, oder legt diesen fest. Ereignisse können nur in aktivierten Ereignisprotokollen protokolliert werden.</summary>
      <returns>
        <see langword="true" />, wenn das Protokoll aktiviert ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>Ruft den Verzeichnispfad für den Speicherort der Datei ab, in der die Ereignisse für das Protokoll gespeichert werden, oder legt diesen fest.</summary>
      <returns>Eine Zeichenfolge, die den Pfad zur Ereignisprotokoll Datei enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>Ruft einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />-Wert ab, der angibt, ob das Ereignisprotokoll ein Anwendungs-, System- oder benutzerdefiniertes Ereignisprotokoll ist.</summary>
      <returns>Einer der Enumerationswerte.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>Ruft einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />-Wert ab, der bestimmt, wie Ereignisse behandelt werden, wenn das Ereignisprotokoll voll ist, oder legt diesen fest.</summary>
      <returns>Einer der Enumerationswerte.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>Ruft den Namen des Ereignisprotokolls ab.</summary>
      <returns>Der Name des Ereignisprotokolls.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>Ruft einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />-Wert ab, der den Typ des Ereignisprotokolls bestimmt.</summary>
      <returns>Einer der Enumerationswerte.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>Ruft die maximale Größe in Byte ab, bis zu der die Ereignisprotokolldatei anwachsen darf, oder legt diese fest. Wenn die Datei diese maximale Größe erreicht, wird sie als voll betrachtet.</summary>
      <returns>Die maximale Größe (in Bytes), in der die Ereignisprotokoll Datei zulässig ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>Ruft den Namen des Ereignisanbieters ab, der dieses Ereignisprotokoll erstellt hat.</summary>
      <returns>Der Name des Ereignis Anbieters, der dieses Ereignisprotokoll erstellt hat.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>Ruft die Größe des Puffers ab, den der Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet.</summary>
      <returns>Die Größe des Puffers, der vom Ereignis Anbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet wird. Kann <see langword="null" /> sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>Ruft die GUID des Ereignisprotokolls ab, sofern es sich bei dem Protokoll um ein Debugprotokoll handelt. Wenn dieses Protokoll kein Debugprotokoll ist, ist dieser Wert <see langword="null" />.</summary>
      <returns>Ein GUID-Wert oder <see langword="null" />, wenn es sich bei dem Protokoll nicht um ein Debugprotokoll handelt.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>Ruft die vom Ereignisanbieter verwendete Schlüsselwortmaske ab oder legt diese fest.</summary>
      <returns>Die Schlüsselwort Maske, die vom Ereignis Anbieter verwendet wird, oder <see langword="null" />, wenn der Ereignis Anbieter keine Schlüsselwörter definiert hat.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>Ruft die maximale Wartezeitzeit ab, die vom Ereignisanbieter beim Veröffentlichen von Ereignissen im Protokoll verwendet wird.</summary>
      <returns>Die maximale Latenzzeit, die vom Ereignis Anbieter beim Veröffentlichen von Ereignissen im Protokoll verwendet wird, oder <see langword="null" />, wenn vom Ereignis Anbieter keine Latenzzeit angegeben wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>Ruft die maximale Ereignisebene (die den Schweregrad des Ereignisses definiert) ab, die im Ereignisprotokoll aufgezeichnet werden darf, oder legt diese fest. Dieser Wert wird vom Ereignisanbieter definiert.</summary>
      <returns>Die maximale Ereignis Ebene, die im Ereignisprotokoll protokolliert werden darf, oder <see langword="null" />, wenn die maximale Ereignis Ebene nicht im Ereignis Anbieter definiert wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>Ruft die maximale Anzahl an Puffern ab, die vom Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet werden.</summary>
      <returns>Die maximale Anzahl von Puffern, die vom Ereignis Anbieter zum Veröffentlichen von Ereignissen im Ereignisprotokoll verwendet werden. Dieser Wert kann <see langword="null" /> sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>Ruft die minimale Anzahl an Puffern ab, die vom Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet werden.</summary>
      <returns>Die minimale Anzahl von Puffern, die vom Ereignis Anbieter zum Veröffentlichen von Ereignissen im Ereignisprotokoll verwendet werden. Dieser Wert kann <see langword="null" /> sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>Ruft eine aufzählbare Auflistung der Namen aller Ereignisanbieter ab, die Ereignisse in diesem Ereignisprotokoll veröffentlichen dürfen.</summary>
      <returns>Eine zählbare Auflistung von Zeichenfolgen, die die Ereignisanbieternamen enthalten.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>Speichert die Konfigurationseinstellungen.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>Ruft die Sicherheitsbeschreibung des Ereignisprotokolls ab oder legt diese fest. Die Sicherheitsbeschreibung definiert die Benutzer und Benutzergruppen, die diese Ereignisprotokoll lesen und in dieses schreiben dürfen.</summary>
      <returns>Eine Zeichenfolge, die die Sicherheits Beschreibung für das Ereignisprotokoll enthält.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>Stellt die Basisklasse für alle Ausnahmen dar, die ausgelöst werden, wenn es zu Fehlern beim Lesen von Ereignisprotokollinformationen kommt.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />-Klasse mit dem Fehlercode für die Ausnahme.</summary>
      <param name="errorCode">Der Fehlercode für den Fehler, der beim Lesen oder Konfigurieren von Ereignisprotokollinformationen aufgetreten ist. Weitere Informationen sowie eine Liste der Fehlercodes für Ereignisprotokolle finden Sie unter https://go.microsoft.com/fwlink/?LinkId=82629.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />-Klasse mit serialisierten Daten.</summary>
      <param name="serializationInfo">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="streamingContext">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />-Klasse durch Angabe der Fehlermeldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />-Klasse mit einer Fehlermeldung und einer angegebenen Ausnahme.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="innerException">Die Ausnahmeinstanz, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt das SerializationInfo-Objekt mit Informationen über die Ausnahme fest.</summary>
      <param name="info">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>Die Fehlermeldung ab, die die aktuelle Ausnahme beschreibt.</summary>
      <returns>Gibt eine Zeichenfolge mit der Fehlermeldung zurück, die die aktuelle Ausnahme beschreibt.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>Ermöglicht den Zugriff auf die Laufzeiteigenschaften von aktiven Ereignisprotokollen und aktiven Ereignisprotokolldateien. Zu diesen Eigenschaften gehören die Anzahl der Ereignisse im Protokoll, die Größe des Protokolls, ein Wert, der angibt, ob das Protokoll voll ist, sowie eine Angabe dazu, wann zum letzten Mal auf das Protokoll zugegriffen oder in das Protokoll geschrieben wurde.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>Ruft die Dateiattribute der Protokolldatei ab, die mit dem Protokoll verknüpft ist.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>Ruft den Zeitpunkt der Erstellung der Protokolldatei ab, die mit dem Ereignisprotokoll verknüpft ist.</summary>
      <returns>Gibt ein <see cref="T:System.DateTime" />-Objekt zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>Ruft die Größe der Datei, die dem Ereignisprotokoll verknüpft ist, in Byte ab.</summary>
      <returns>Gibt einen Long-Wert zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>Ruft einen booleschen Wert ab, der bestimmt, ob die Protokolldatei die maximale Größe erreicht hat (und keine Elemente mehr aufnehmen kann).</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn das Protokoll voll ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>Ruft den Zeitpunkt des letzten Zugriffs auf die Protokolldatei ab, die mit dem Ereignisprotokoll verknüpft ist.</summary>
      <returns>Gibt ein <see cref="T:System.DateTime" />-Objekt zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>Ruft den letzten Zeitpunkt ab, an dem Daten in die Protokolldatei geschrieben wurden, die mit dem Ereignisprotokoll verknüpft ist.</summary>
      <returns>Gibt ein <see cref="T:System.DateTime" />-Objekt zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>Ruft die Nummer des ältesten Datensatzes im Ereignisprotokoll ab.</summary>
      <returns>Gibt einen Long-Wert zurück, der die Nummer des ältesten Datensatzes im Ereignisprotokoll darstellt. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>Ruft die Anzahl der Datensätze in Ereignisprotokoll an.</summary>
      <returns>Gibt einen Long-Wert zurück, der die Anzahl der Datensätze im Ereignisprotokoll darstellt. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn ein Ereignisanbieter ungültige Daten in einem Ereignis veröffentlicht.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />-Klasse mit serialisierten Daten.</summary>
      <param name="serializationInfo">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="streamingContext">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />-Klasse durch Angabe der Fehlermeldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />-Klasse mit einer Fehlermeldung und einer angegebenen Ausnahme.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="innerException">Die Ausnahmeinstanz, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>Definiert die Standardzugriffsberechtigungen für das Ereignisprotokoll. Die Anwendungs- und Systemwerte geben an, dass die Zugriffssteuerungsliste (ACL) vom Protokoll zusammen mit dem entsprechenden Windows-Protokoll (dem Anwendungsprotokoll oder dem Systemereignisprotokoll) verwendet wird; außerdem wird die Ereignisablaufverfolgung für Windows (Event Tracing for Windows, ETW)-Sitzung mit anderen Protokollen der gleichen Isolation verwendet. Alle Kanäle mit benutzerdefinierter Isolation verwenden eine private ETW-Sitzung.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>Das Protokoll verwendet die Zugriffssteuerungsliste zusammen mit dem Anwendungsereignisprotokoll und verwendet die ETW-Sitzung gemeinsam mit anderen Protokollen, die eine Anwendungsisolation aufweisen.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>Das Ereignisprotokoll ist ein benutzerdefiniertes Ereignisprotokoll mit einer eigenen privaten ETW-Sitzung.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>Das Protokoll verwendet die Zugriffssteuerungsliste zusammen mit dem Systemereignisprotokoll und verwendet die ETW-Sitzung gemeinsam mit anderen Protokollen, die eine Systemisolation aufweisen.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>Stellt einen Link zwischen einem Ereignisanbieter und einem Ereignisprotokoll dar, in dem Ereignisse vom Anbieter veröffentlicht werden. Dieses Objekt kann nicht instanziiert werden.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>Ruft den lokalisierten Namen des Ereignisprotokolls ab.</summary>
      <returns>Gibt eine Zeichenfolge mit dem lokalisierten Namen des Ereignisprotokolls zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>Ruft einen booleschen Wert ab, der bestimmt, ob das Ereignisprotokoll importiert und nicht im Ereignisanbieter definiert wird. Ein importiertes Ereignisprotokoll wird in einem anderen Anbieter definiert.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn das Ereignisprotokoll vom Ereignisanbieter importiert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>Ruft den nicht lokalisierten Namen des Ereignisprotokolls ab, der mit diesem Objekt verknüpft ist.</summary>
      <returns>Gibt eine Zeichenfolge mit dem nicht lokalisierten Namen des Ereignisprotokolls zurück, das mit diesem Objekt verknüpft ist.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>Bestimmt die Behandlung eines Ereignisprotokolls durch den Ereignisprotokolldienst, wenn das Protokoll die maximal zulässige Größe erreicht hat (und keine weiteren Elemente mehr aufnehmen kann).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>Archivieren Sie das Protokoll bei Erreichen der maximalen Kapazität, und überschreiben Sie keine Ereignisse. Das Protokoll wird ggf. automatisch archiviert. Es werden keine Ereignisse überschrieben.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>Neue Ereignisse werden weiterhin gespeichert, auch wenn die Protokolldatei voll ist. Jedes neue eingehende Ereignis ersetzt jeweils das älteste Ereignis im Protokoll.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>Überschreiben Sie keine Ereignisse. Löschen Sie das Protokoll manuell statt automatisch.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn ein angefordertes Ereignisprotokoll nicht vorhanden ist, das i. d. R. über den Namen oder den Dateipfad angegeben wird.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />-Klasse mit serialisierten Daten.</summary>
      <param name="serializationInfo">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="streamingContext">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />-Klasse durch Angabe der Fehlermeldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />-Klasse mit einer Fehlermeldung und einer angegebenen Ausnahme.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="innerException">Die Ausnahmeinstanz, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>Enthält ein Zeichenfolgenarray, das XPath-Abfragen für Elemente in der XML-Darstellung eines Ereignisses darstellt, das auf dem Ereignisschema basiert. Die Abfragen in diesem Objekt werden zum Extrahieren von Werten aus diesem Ereignis verwendet.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />-Klasse.</summary>
      <param name="propertyQueries">XPath-Abfragen zum Extrahieren von Werten aus der XML-Darstellung des Ereignisses.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn der angegebene Name des Ereignisanbieters auf einen deaktivierten Ereignisanbieter verweist. Ein deaktivierter Ereignisanbieter kann keine Ereignisse veröffentlichen.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />-Klasse mit serialisierten Daten.</summary>
      <param name="serializationInfo">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="streamingContext">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />-Klasse durch Angabe der Fehlermeldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />-Klasse mit einer Fehlermeldung und einer angegebenen Ausnahme.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="innerException">Die Ausnahmeinstanz, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>Stellt eine Abfrage für Ereignisse in einem Ereignisprotokoll dar sowie die Einstellungen für die Ausführung der Abfrage und den verwendeten Computer.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />-Klasse durch Angeben des Abfrageziels. Das Ziel kann ein aktives Ereignis oder eine Protokolldatei sein.</summary>
      <param name="path">Der Name des Ereignisprotokolls, das abgefragt werden soll, oder der Pfad der Ereignisprotokolldatei, die abgefragt werden soll.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />-Klasse durch Angeben des Abfrageziels und der Ereignisabfrage. Das Ziel kann ein aktives Ereignis oder eine Protokolldatei sein.</summary>
      <param name="path">Der Name des Ereignisprotokolls, das abgefragt werden soll, oder der Pfad der Ereignisprotokolldatei, die abgefragt werden soll.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
      <param name="query">Die Ereignisabfrage, mit der Ereignisse abgerufen werden, die den Abfragebedingungen entsprechen.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>Ruft den booleschen Wert ab, der bestimmt, ob in einem Ereignisprotokoll zunächst die neuesten Ereignisse gelesen werden sollen, oder legt diesen fest.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn zunächst die neuesten Ereignisse im Ereignisprotokoll gelesen werden sollen, und gibt <see langword="false" /> zurück, wenn zunächst die ältesten Ereignisse gelesen werden sollen.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>Ruft die Sitzung für den Zugriff auf den Ereignisprotokolldienst auf dem lokalen Computer oder auf einem Remotecomputer ab oder legt diese fest. Dieses Objekt kann für den Zugriff auf ein Remoteereignisprotokoll festgelegt werden, indem ein <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Objekt oder ein <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />-Objekt im <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />-Objekt erstellt werden.</summary>
      <returns>Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>Ruft einen booleschen Wert ab, der bestimmt, ob auch bei einem Abfragefehler weiterhin Ereignisse abgerufen werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn auch bei einem Abfragefehler weiterhin Ereignisse abgerufen werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>Ermöglicht das Lesen von Ereignissen aus einem Ereignisprotokoll anhand von Ereignisabfragen. Die Ereignisse, die von diesem Objekt gelesen werden, werden als <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Objekte zurückgegeben.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Klasse durch Angeben einer Ereignisabfrage.</summary>
      <param name="eventQuery">Die Ereignisabfrage, mit der Ereignisse abgerufen werden.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Klasse durch Angeben einer Ereignisabfrage und eines Lesezeichens, das als Startposition für die Abfrage verwendet wird.</summary>
      <param name="eventQuery">Die Ereignisabfrage, mit der Ereignisse abgerufen werden.</param>
      <param name="bookmark">Das Lesezeichen (Platzhalter), das als Startposition im Ereignisprotokoll oder im Stream von Ereignissen verwendet wird. Die Abfrage gibt nur die Ereignisse zurück, die nach dem Lesezeichenereignis protokolliert wurden.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Klasse durch Angeben eines aktiven Ereignisprotokolls, aus dem die Ereignisse abgerufen werden.</summary>
      <param name="path">Der Name des Ereignisprotokolls, aus dem die Ereignisse abgerufen werden.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Klasse durch Angeben des Namens eines Ereignisprotokolls oder des Pfads einer Ereignisprotokolldatei, aus dem bzw. aus der Ereignisse abgerufen werden.</summary>
      <param name="path">Der Name des Ereignisprotokolls, aus dem Ereignisse abgerufen werden sollen, oder der Pfad der Ereignisprotokolldatei, aus der Ereignisse abgerufen werden sollen.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>Ruft die Anzahl der Ereignisse ab, die bei jedem Lesevorgang aus dem Stream von Ereignissen abgerufen werden, oder legt diese fest.</summary>
      <returns>Gibt einen Ganzzahlwert zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>Bricht den aktuellen Abfragevorgang ab.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>Ruft den Status aller Ereignisprotokolle oder Protokolldateien ab, die mit der Ereignisabfrage im Objekt verknüpft sind.</summary>
      <returns>Gibt eine Liste von <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />-Objekten zurück, die jeweils Statusinformationen über ein Ereignisprotokoll enthalten, das mit der Ereignisabfrage im Objekt verknüpft ist.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>Liest das nächste Ereignis, das von der Ereignisabfrage in diesem Objekt zurückgegeben wird.</summary>
      <returns>Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Objekt zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>Liest das nächste Ereignis, das von der Ereignisabfrage in diesem Objekt zurückgegeben wird.</summary>
      <param name="timeout">Die maximale Zeit, die ein Lesevorgang ausgeführt werden kann, bevor der Vorgang abgebrochen wird.</param>
      <returns>Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Objekt zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Ändert die Position im Stream von Ereignissen, aus dem das nächste Ereignis gelesen wird, durch Angeben eines Lesezeichenereignisses. Ereignisse, die vor dem Lesezeichenereignis protokolliert wurden, werden nicht abgerufen.</summary>
      <param name="bookmark">Das Lesezeichen (Platzhalter), das als Startposition im Ereignisprotokoll oder im Stream von Ereignissen verwendet wird. Nur Ereignisse, die nach dem Lesezeichenereignis protokolliert wurden, werden von der Abfrage zurückgegeben.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>Ändert die Position im Stream von Ereignissen, aus dem das nächste Ereignis gelesen wird, durch Angeben eines Lesezeichenereignisses sowie eines Offsets für die Anzahl der Ereignisse aus dem Lesezeichen. Ereignisse, die vor dem Lesezeichenereignis einschließlich Offset protokolliert wurden, werden nicht abgerufen.</summary>
      <param name="bookmark">Das Lesezeichen (Platzhalter), das als Startposition im Ereignisprotokoll oder im Stream von Ereignissen verwendet wird. Nur Ereignisse, die nach dem Lesezeichenereignis protokolliert wurden, werden von der Abfrage zurückgegeben.</param>
      <param name="offset">Der Offset für die Anzahl der Ereignisse zur Änderung der Position des Lesezeichens.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>Ändert die Position im Stream von Ereignissen, aus dem das nächste Ereignis gelesen wird, durch Angeben einer Startposition sowie eines Offsets für die Startposition. Ereignisse, die vor der Startposition einschließlich Offset protokolliert wurden, werden nicht abgerufen.</summary>
      <param name="origin">Ein Wert in der <see cref="T:System.IO.SeekOrigin" />-Enumeration definiert die Position im Stream von Ereignissen, ab der Ereignisse abgefragt werden.</param>
      <param name="offset">Der Offset für die Anzahl der Ereignisse, die dem Ursprung hinzugefügt werden sollen.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>Stellt eine Ausnahme dar, die ausgelöst wird, wenn beim Lesen, Abfragen oder Abonnieren von Ereignissen in einem Ereignisprotokoll ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />-Klasse mit serialisierten Daten.</summary>
      <param name="serializationInfo">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="streamingContext">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />-Klasse durch Angabe der Fehlermeldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />-Klasse mit einer Fehlermeldung und einer angegebenen Ausnahme.</summary>
      <param name="message">Die Fehlermeldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="innerException">Die Ausnahmeinstanz, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>Enthält die Eigenschaften einer Ereignisinstanz für ein Ereignis, das von einem <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Objekt empfangen wird. Die Ereigniseigenschaften enthalten Informationen über das Ereignis wie den Namen des Computers, für den das Ereignis protokolliert wurde und den Zeitpunkt der Erstellung des Ereignisses.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>Ruft die GUID der laufenden Aktivität für das Ereignis ab. Dies ermöglicht es Consumern, verwandte Aktivitäten zu gruppieren.</summary>
      <returns>Gibt einen GUID-Wert zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>Ruft einen Platzhalter (Lesezeichen) ab, der diesem Ereignis entspricht. Dieses kann in einem Stream von Ereignissen als Platzhalter verwendet werden.</summary>
      <returns>Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />-Objekt zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>Ruft den Namen des Ereignisprotokolls oder die Ereignisprotokolldatei ab, in der das Ereignis gespeichert ist.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Namen des Ereignisprotokolls oder die Ereignisprotokolldatei enthält, in der das Ereignis gespeichert ist.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>Ruft die Ereignismeldung im aktuellen Gebietsschema ab.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die die Ereignismeldung im aktuellen Gebietsschema enthält.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Ruft die Ereignismeldung ab und ersetzt Variablen in der Meldung durch die angegebenen Werte.</summary>
      <param name="values">Die Werte, mit denen Variablen in der Ereignismeldung ersetzt werden. Variablen werden durch % n dargestellt, wobei n für eine Zahl steht.</param>
      <returns>Gibt eine Zeichenfolge zurück, die die Ereignismeldung im aktuellen Gebietsschema enthält.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>Ruft die Enumeration der Werte von benutzerdefinierten Ereigniseigenschaften ab, oder die Ergebnisse XPath-basierter Daten, wenn das Ereignis eine XML-Darstellung aufweist.</summary>
      <param name="propertySelector">Wählt die Eigenschaftswerte aus, die zurückgegeben werden sollen.</param>
      <returns>Gibt eine Liste mit Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>Ruft den Bezeichner für das Ereignis ab. Alle Ereignisse mit diesem Bezeichnerwert stellen den gleichen Ereignistyp dar.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>Ruft die Schlüsselwortmaske des Ereignisses ab. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" />-Eigenschaft ab, um den Namen der Schlüsselwörter zu erhalten, die in dieser Maske verwendet werden.</summary>
      <returns>Gibt einen Long-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>Ruft die Anzeigenamen der Schlüsselwörter ab, die in der Schlüsselwortmaske für dieses Ereignis verwendet werden.</summary>
      <returns>Gibt eine aufzählbare Sammlung von Zeichenfolgen zurück, die die Anzeigenamen der Schlüsselwörter enthalten, die in der Schlüsselwortmaske für dieses Ereignis verwendet werden.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>Ruft die Ereignisebene ab. Die Ebene gibt den Schweregrad des Ereignisses an. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />-Eigenschaft ab, um den Namen der Ebene zu erhalten.</summary>
      <returns>Gibt einen Bytewert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>Ruft den Anzeigenamen der Ebene für dieses Ereignis ab.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Anzeigenamen der Ebene für dieses Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>Ruft den Namen des Ereignisprotokolls ab, in dem dieses Ereignis protokolliert wird.</summary>
      <returns>Gibt eine Zeichenfolge mit dem Namen des Ereignisprotokolls zurück, das das Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>Ruft den Namen des Computers ab, für den dieses Ereignis protokolliert wurde.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Namen des Computers enthält, für den dieses Ereignis protokolliert wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>Ruft eine Liste von Abfragebezeichnern ab, mit denen dieses Ereignis übereinstimmt. Dieses Ereignis stimmt mit einer Abfrage überein, wenn es durch eine Abfrage zurückgeben würde.</summary>
      <returns>Gibt eine zählbare Auflistung von Ganzzahlwerten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>Ruft den Opcode des Ereignisses ab. Der Opcode definiert einen numerischen Wert zur Identifizierung einer Aktivität oder eines Punkts in einer Aktivität, die von der Anwendung durchgeführt wurde, als das Ereignis ausgelöst wurde. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />-Eigenschaft ab, um den Namen des Opcodes zu erhalten.</summary>
      <returns>Gibt einen Wert vom Typ Short zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>Ruft den Anzeigenamen des Opcodes für dieses Ereignis ab.</summary>
      <returns>Gibt eine Zeichenfolge mit dem Anzeigenamen des Opcodes für das Ereignis zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>Ruft die Prozess-ID für den Ereignisanbieter ab, der dieses Ereignis protokolliert hat.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>Ruft die benutzerdefinierten Eigenschaft des Ereignisses ab.</summary>
      <returns>Gibt eine Liste von <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>Ruft die GUID des Ereignisanbieters ab, der dieses Ereignis veröffentlicht hat.</summary>
      <returns>Gibt einen GUID-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>Ruft den Namen des Ereignisanbieters ab, der dieses Ereignis veröffentlicht hat.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Namen des Ereignisanbieters enthält, der das Ereignis veröffentlicht hat.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>Ruft Qualifizierernummern ab, die zur Ereignisidentifikation verwendet werden.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>Ruft den Ereignisdatensatzbezeichner des Ereignisses im Ereignisprotokoll ab.</summary>
      <returns>Gibt einen Long-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>Ruft die GUID für eine verwandte Aktivität in einem Prozess für ein beteiligtes Ereignis ab.</summary>
      <returns>Gibt einen GUID-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>Ruft einen Aufgabenbezeichner für einen Teil einer Anwendung oder für eine Komponente ab, die ein Ereignis veröffentlicht. Eine Aufgabe ist ein 16-Bit-Wert, bei dem die ersten 16 Werte reserviert sind. Für diesen Typ können alle Werte zwischen 0x0000 und 0xffef verwendet werden. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />-Eigenschaft ab, um den Namen der Aufgabe zu erhalten.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>Ruft den Anzeigenamen der Aufgabe für das Ereignis ab.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Anzeigenamen der Aufgabe für das Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>Ruft den Threadbezeichner für den Thread ab, in dem der Ereignisanbieter ausgeführt wird.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>Ruft die Uhrzeit im <see cref="T:System.DateTime" />-Format ab, zu der das Ereignis erstellt wurde.</summary>
      <returns>Gibt einen <see cref="T:System.DateTime" />-Wert zurück. Der Wert kann NULL sein.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>Ruft die XML-Darstellung des Ereignisses ab. Alle Ereigniseigenschaften werden im XML des Ereignisses dargestellt. Das XML entspricht dem Ereignisschema.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die die XML-Darstellung des Ereignisses enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>Ruft die Sicherheitsbeschreibung des Benutzers ab, dessen Kontext verwendet wird, um das Ereignis zu veröffentlichen.</summary>
      <returns>Gibt einen <see cref="T:System.Security.Principal.SecurityIdentifier" />-Wert zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>Ruft die Versionsnummer für das Ereignis ab.</summary>
      <returns>Gibt einen Bytewert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>Wird verwendet, um auf den Ereignisprotokolldienst auf dem lokalen Computer oder auf einem Remotecomputer zuzugreifen, und Informationen über Ereignisprotokolle und Ereignisanbieter auf dem Computer zu verwalten und zu sammeln.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt, stellt eine Verbindung mit dem lokalen Ereignisprotokolldienst her.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt und stellt eine Verbindung mit dem Ereignisprotokolldienst auf dem angegebene Computer her. Die Anmeldeinformationen (Benutzername und Kennwort) des Benutzers, der die Methode aufruft, werden als Anmeldeinformationen für den Zugriff auf den Remotecomputer verwendet.</summary>
      <param name="server">Der Name des Computers, für den eine Verbindung mit dem Ereignisprotokolldienst hergestellt werden soll.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt und stellt eine Verbindung mit dem Ereignisprotokolldienst auf dem angegebene Computer her. Die angegebenen Anmeldeinformationen (Benutzername und Kennwort) werden als Anmeldeinformationen für den Zugriff auf den Remotecomputer verwendet.</summary>
      <param name="server">Der Name des Computers, für den eine Verbindung mit dem Ereignisprotokolldienst hergestellt werden soll.</param>
      <param name="domain">Die Domäne des angegebenen Benutzers.</param>
      <param name="user">Der Benutzername, der verwendet wird, um eine Verbindung mit dem Remotecomputer herzustellen.</param>
      <param name="password">Das Kennwort, das verwendet wird, um eine Verbindung mit dem Remotecomputer herzustellen.</param>
      <param name="logOnType">Der Verbindungstyp, der für die Verbindung zum Remotecomputer verwendet werden soll.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>Bricht alle Vorgänge (z. B. das Lesen eines Ereignisprotokolls oder das Abonnieren eines Ereignisprotokolls) ab, die derzeit für den Ereignisprotokolldienst ausgeführt werden, mit dem dieses Sitzungsobjekt verbunden ist.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>Löscht Ereignisse aus dem angegebenen Ereignisprotokoll.</summary>
      <param name="logName">Der Name des Ereignisprotokolls, aus dem alle Ereignisse gelöscht werden sollen.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>Löscht Ereignisse aus dem angegebenen Ereignisprotokoll und speichert die gelöschten Ereignisse in der angegebenen Datei.</summary>
      <param name="logName">Der Name des Ereignisprotokolls, aus dem alle Ereignisse gelöscht werden sollen.</param>
      <param name="backupPath">Der Pfad der Datei, in der die gelöschten Ereignisse gespeichert werden. Die Datei sollte die Erweiterung EVTX aufweisen.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Exportiert Ereignisse in eine externe Protokolldatei. Die Ereignisse werden ohne Ereignismeldungen gespeichert.</summary>
      <param name="path">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
      <param name="query">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.  Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</param>
      <param name="targetFilePath">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>Exportiert Ereignisse in eine externe Protokolldatei. Es kann ein Flag gesetzt werden, um anzugeben, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt. Die Ereignisse werden ohne Ereignismeldungen gespeichert.</summary>
      <param name="path">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
      <param name="query">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird. Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</param>
      <param name="targetFilePath">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> gibt an, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt, und <see langword="false" /> gibt an, dass die Methode nicht fortgesetzt wird, wenn bei der angegebenen Abfrage ein Fehler auftritt.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Exportiert Ereignisse und die zugehörigen Meldungen in eine externe Protokolldatei.</summary>
      <param name="path">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
      <param name="query">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.  Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</param>
      <param name="targetFilePath">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Exportiert Ereignisse und die zugehörigen Meldungen in eine externe Protokolldatei. Es kann ein Flag gesetzt werden, um anzugeben, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt. Die Ereignismeldungen werden in der angegebenen Sprache exportiert.</summary>
      <param name="path">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
      <param name="query">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.  Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</param>
      <param name="targetFilePath">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> gibt an, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt, und <see langword="false" /> gibt an, dass die Methode nicht fortgesetzt wird, wenn bei der angegebenen Abfrage ein Fehler auftritt.</param>
      <param name="targetCultureInfo">Die Kultur, die angibt, in welcher Sprache die Ereignismeldungen exportiert werden.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Ruft ein Objekt ab, das Laufzeitinformationen für das angegebene Ereignisprotokoll enthält.</summary>
      <param name="logName">Der Name des Ereignisprotokolls, für das Informationen abgerufen werden sollen, oder der Pfad der Ereignisprotokolldatei, für die Informationen abgerufen werden sollen.</param>
      <param name="pathType">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</param>
      <returns>Ein Objekt, das Informationen zum angegebenen Protokoll enthält.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>Ruft eine zählbare Auflistung aller Ereignisprotokollnamen ab, die für den Ereignisprotokolldienst registriert sind.</summary>
      <returns>Eine zählbare Auflistung von Zeichenfolgen, die die Ereignisprotokollnamen enthalten.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>Ruft eine zählbare Auflistung aller Ereignisanbieternamen ab, die für den Ereignisprotokolldienst registriert sind. Ein Ereignisanbieter ist eine Anwendung, die Ereignisse in einem Ereignisprotokoll veröffentlicht.</summary>
      <returns>Eine zählbare Auflistung von Zeichenfolgen, die die Ereignisanbieternamen enthalten.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>Ruft ein vordefiniertes statisches Sitzungsobjekt ab, das mit dem Ereignisprotokolldienst auf dem lokalen Computer verbunden ist.</summary>
      <returns>Ein vordefiniertes Sitzungs Objekt, das mit dem Ereignisprotokoll Dienst auf dem lokalen Computer verbunden ist.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>Enthält den Statuscode oder den Fehlercode für ein bestimmtes Ereignisprotokoll. Dieser Status kann verwendet werden, um die Verfügbarkeit eines Ereignisprotokolls für einen Vorgang zu bestimmen.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>Ruft den Namen des Ereignisprotokolls ab, für den der Statuscode abgerufen wird.</summary>
      <returns>Der Name des Ereignis Protokolls, für das der Statuscode abgerufen wird.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>Ruft den Statuscode oder den Fehlercode für das Ereignisprotokoll ab. Der Status oder der Fehler sind das Ergebnis eines Lese- oder Abonnementvorgangs für das Ereignisprotokoll.</summary>
      <returns>Der Statuscode oder der Fehlercode für das Ereignisprotokoll.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>Definiert, welche Ereignisse in einem Ereignisprotokoll protokolliert werden. Jedes Protokoll kann nur einen Ereignistyp enthalten.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>Diese Ereignisse werden hauptsächlich für Endbenutzer und Administratoren sowie für den Support verwendet. Die Ereignisse im Protokoll für Administratoren geben ein Problem sowie eine eindeutig definierte Lösung für den Administrator an. Beispielsweise handelt es sich um ein Administratorereignis, wenn eine Anwendung keine Verbindung mit einem Drucker herstellen kann.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>Ereignisse in einem Protokoll für Analyseereignisse werden in hoher Zahl veröffentlicht. Sie beschreiben Programmvorgänge und geben Probleme an, die nicht durch Benutzereingriffe behoben werden können.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>Ereignisse in einem Protokoll für Debugereignisse werden nur von Entwicklern für Debugdiagnosen verwendet.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>Ereignisse in einem Protokoll für Vorgangsereignisse werden zum Analysieren und Diagnostizieren eines Problems oder eines Vorkommens verwendet. Sie können zum Auslösen von Tools oder Aufgaben anhand des Problems oder des Vorkommens verwendet werden. Beispielsweise handelt es sich um ein Vorgangsereignis, wenn ein Drucker einem System hinzugefügt oder daraus entfernt wird.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>Ermöglicht das Abonnieren von eingehenden Ereignissen. Jedes Mal, wenn ein gewünschtes Ereignis in einem Ereignisprotokoll veröffentlicht wird, wird das  <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst, und die Methode zur Behandlung dieses Ereignisses wird ausgeführt.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />-Klasse durch Angeben einer Ereignisabfrage.</summary>
      <param name="eventQuery">Gibt eine Abfrage für das Ereignisabonnement an. Wenn ein Ereignis protokolliert wird, das den Kriterien in der Abfrage entspricht, wird das <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />-Klasse durch Angeben einer Ereignisabfrage und eines Lesezeichens, das als Startposition für die Abfrage verwendet wird.</summary>
      <param name="eventQuery">Gibt eine Abfrage für das Ereignisabonnement an. Wenn ein Ereignis protokolliert wird, das den Kriterien in der Abfrage entspricht, wird das <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst.</param>
      <param name="bookmark">Das Lesezeichen (Platzhalter), das als Startposition im Ereignisprotokoll oder im Stream von Ereignissen verwendet wird. Nur Ereignisse, die nach dem Lesezeichenereignis protokolliert wurden, werden von der Abfrage zurückgegeben.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />-Klasse unter Angabe einer Ereignisabfrage, eines Lesezeichens als Startposition für die Abfrage und eines booleschen Werts, der bestimmt, ob die bereits im Ereignisprotokoll vorhandenen Ereignisse gelesen werden sollen.</summary>
      <param name="eventQuery">Gibt eine Abfrage für das Ereignisabonnement an. Wenn ein Ereignis protokolliert wird, das den Kriterien in der Abfrage entspricht, wird das <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst.</param>
      <param name="bookmark">Das Lesezeichen (Platzhalter), das als Startposition im Ereignisprotokoll oder im Stream von Ereignissen verwendet wird. Nur Ereignisse, die nach dem Lesezeichenereignis protokolliert wurden, werden von der Abfrage zurückgegeben.</param>
      <param name="readExistingEvents">Ein boolescher Wert, der bestimmt, ob Ereignisse gelesen werden sollen, die bereits im Ereignisprotokoll vorhanden sind. <see langword="true" />, wenn die bereits vorhandenen Ereignisse gelesen werden sollen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />-Klasse unter Angabe des Namens oder des Pfads für ein Ereignisprotokoll.</summary>
      <param name="path">Der Pfad oder der Name der Ereignisprotokollüberwachung. Wenn ein Ereignis im Ereignisprotokoll protokolliert wird, wird das <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt mit der Übermittlung von Ereignissen an den Ereignisdelegaten beginnt, oder legt ihn fest.</summary>
      <returns>
        <see langword="true" />, wenn dieses Objekt Ereignisse an den Ereignis Delegaten übermitteln kann. <see langword="false" />, wenn die Übermittlung dieses Objekts beendet wurde.</returns>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>Ermöglicht das Festlegen eines Delegaten (Ereignishandlermethode), der aufgerufen wird, ein Ereignis veröffentlicht wird, das den in der Ereignisabfrage für dieses Objekt angegebenen Kriterien entspricht</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>Enthält die Metadaten (Eigenschaften und Einstellungen) für ein Ereignis, das in einem Ereignisanbieter definiert wird.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>Ruft mit dem aktuellen Threadgebietsschema für die Beschreibungssprache die Beschreibungsvorlage ab, die mit dem Ereignis verknüpft ist.</summary>
      <returns>Eine Zeichenfolge, die die Beschreibungs Vorlage enthält, die dem Ereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>Ruft den Bezeichner des Ereignisses ab, das im Ereignisanbieter definiert wird.</summary>
      <returns>Der Ereignisbezeichner.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>Ruft die Kennwörter ab, die dem im Ereignisanbieter definierten Ereignis zugeordnet sind.</summary>
      <returns>Eine Aufzähl Bare Auflistung der Schlüsselwörter, die dem Ereignis zugeordnet sind.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>Ruft die Ebene ab, die mit dem Ereignis verknüpft ist, das im Ereignisanbieter definiert wird. Die Ebene definiert den Schweregrad des Ereignisses.</summary>
      <returns>Die Ebene, die dem Ereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>Ruft einen Link zu einem Ereignisprotokoll ab, das das Ereignis empfängt, wenn es vom Anbieter veröffentlicht wird.</summary>
      <returns>Ein Link zum Ereignisprotokoll.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>Ruft den Opcode ab, der mit dem Ereignis verknüpft ist, das von einem Ereignisanbieter definiert wird. Der Opcode definiert einen numerischen Wert zur Identifizierung einer Aktivität oder eines Punkts in einer Aktivität, die von der Anwendung durchgeführt wurde, als das Ereignis ausgelöst wurde.</summary>
      <returns>Der OpCode, der diesem Ereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>Ruft die mit dem Ereignis verknüpfte Aufgabe ab. Eine Aufgabe identifiziert einen Teil für eine Anwendung oder eine Komponente, die ein Ereignis veröffentlichen.</summary>
      <returns>Die Aufgabe, die dem Ereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>Ruft die Vorlagenzeichenfolge für das Ereignis ab. Vorlagen werden verwendet, um Daten zu beschreiben, die von einem Anbieter verwendet werden, wenn ein Ereignis veröffentlicht wird. Vorlagen können XML angeben, um die Struktur eines Ereignisses bereitzustellen. Mit dem XML können Werte, die vom Herausgeber des Ereignisses bereitgestellt werden, während des Renderns eines Ereignisses eingefügt werden.</summary>
      <returns>Eine Zeichenfolge, die die Vorlage für das Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>Ruft die Version des Ereignisses ab, die den Ereignisbezeichner beschreibt.</summary>
      <returns>Ein Bytewert, der die Version des Ereignisses enthält.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>Enthält einen Ereignisopcode, der in einem Ereignisanbieter definiert wird. Ein Opcode definiert einen numerischen Wert zur Identifizierung einer Aktivität oder eines Punkts in einer Aktivität, die von der Anwendung durchgeführt wurde, als das Ereignis ausgelöst wurde.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>Ruft den lokalisierten Namen für einen Ereignisopcode ab.</summary>
      <returns>Der lokalisierte Name für einen ereignisopcode.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>Ruft den nicht lokalisierten Namen für einen Ereignisopcode ab.</summary>
      <returns>Der nicht lokalisierte Name für einen ereignisopcode.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>Gibt den numerischen Wert zurück, der mit dem Ereignisopcode verknüpft ist.</summary>
      <returns>Der numerische Wert, der dem ereignisopcode zugeordnet ist.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>Enthält den Wert einer Ereigniseigenschaft, die vom Ereignisanbieter angegeben wird, wenn das Ereignis veröffentlicht wird.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>Ruft den Wert der Ereigniseigenschaft ab, die vom Ereignisanbieter angegeben wird, wenn das Ereignis veröffentlicht wird.</summary>
      <returns>Der Wert der Ereignis Eigenschaft.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>Definiert die Eigenschaften einer Ereignisinstanz für ein Ereignis, das von einem <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />-Objekt empfangen wird. Die Ereigniseigenschaften enthalten Informationen über das Ereignis wie den Namen des Computers, für den das Ereignis protokolliert wurde und den Zeitpunkt der Erstellung des Ereignisses. Diese Klasse ist eine abstrakte Klasse. Sie wird von der <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />-Klasse implementiert.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Klasse.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>Ruft die GUID der laufenden Aktivität für das Ereignis ab. Dies ermöglicht es Consumern, verwandte Aktivitäten zu gruppieren.</summary>
      <returns>Gibt einen GUID-Wert zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>Ruft einen Platzhalter (Lesezeichen) ab, der diesem Ereignis entspricht. Dieses kann in einem Stream von Ereignissen als Platzhalter verwendet werden.</summary>
      <returns>Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />-Objekt zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>Ruft die Ereignismeldung im aktuellen Gebietsschema ab.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die die Ereignismeldung im aktuellen Gebietsschema enthält.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Ruft die Ereignismeldung ab und ersetzt Variablen in der Meldung durch die angegebenen Werte.</summary>
      <param name="values">Die Werte, mit denen Variablen in der Ereignismeldung ersetzt werden. Variablen werden durch % n dargestellt, wobei n für eine Zahl steht.</param>
      <returns>Gibt eine Zeichenfolge zurück, die die Ereignismeldung im aktuellen Gebietsschema enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>Ruft den Bezeichner für das Ereignis ab. Alle Ereignisse mit diesem Bezeichnerwert stellen den gleichen Ereignistyp dar.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>Ruft die Schlüsselwortmaske des Ereignisses ab. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" />-Eigenschaft ab, um den Namen der Schlüsselwörter zu erhalten, die in dieser Maske verwendet werden.</summary>
      <returns>Gibt einen Long-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>Ruft die Anzeigenamen der Schlüsselwörter ab, die in der Schlüsselwortmaske für dieses Ereignis verwendet werden.</summary>
      <returns>Gibt eine aufzählbare Sammlung von Zeichenfolgen zurück, die die Anzeigenamen der Schlüsselwörter enthalten, die in der Schlüsselwortmaske für dieses Ereignis verwendet werden.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>Ruft die Ereignisebene ab. Die Ebene gibt den Schweregrad des Ereignisses an. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />-Eigenschaft ab, um den Namen der Ebene zu erhalten.</summary>
      <returns>Gibt einen Bytewert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>Ruft den Anzeigenamen der Ebene für dieses Ereignis ab.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Anzeigenamen der Ebene für dieses Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>Ruft den Namen des Ereignisprotokolls ab, in dem dieses Ereignis protokolliert wird.</summary>
      <returns>Gibt eine Zeichenfolge mit dem Namen des Ereignisprotokolls zurück, das das Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>Ruft den Namen des Computers ab, für den dieses Ereignis protokolliert wurde.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Namen des Computers enthält, für den dieses Ereignis protokolliert wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>Ruft den Opcode des Ereignisses ab. Der Opcode definiert einen numerischen Wert zur Identifizierung einer Aktivität oder eines Punkts in einer Aktivität, die von der Anwendung durchgeführt wurde, als das Ereignis ausgelöst wurde. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />-Eigenschaft ab, um den Namen des Opcodes zu erhalten.</summary>
      <returns>Gibt einen Wert vom Typ Short zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>Ruft den Anzeigenamen des Opcodes für dieses Ereignis ab.</summary>
      <returns>Gibt eine Zeichenfolge mit dem Anzeigenamen des Opcodes für das Ereignis zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>Ruft die Prozess-ID für den Ereignisanbieter ab, der dieses Ereignis protokolliert hat.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>Ruft die benutzerdefinierten Eigenschaft des Ereignisses ab.</summary>
      <returns>Gibt eine Liste von <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>Ruft die GUID des Ereignisanbieters ab, der dieses Ereignis veröffentlicht hat.</summary>
      <returns>Gibt einen GUID-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>Ruft den Namen des Ereignisanbieters ab, der dieses Ereignis veröffentlicht hat.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Namen des Ereignisanbieters enthält, der das Ereignis veröffentlicht hat.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>Ruft Qualifizierernummern ab, die zur Ereignisidentifikation verwendet werden.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>Ruft den Ereignisdatensatzbezeichner des Ereignisses im Ereignisprotokoll ab.</summary>
      <returns>Gibt einen Long-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>Ruft die GUID für eine verwandte Aktivität in einem Prozess für ein beteiligtes Ereignis ab.</summary>
      <returns>Gibt einen GUID-Wert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>Ruft einen Aufgabenbezeichner für einen Teil einer Anwendung oder für eine Komponente ab, die ein Ereignis veröffentlicht. Eine Aufgabe ist ein 16-Bit-Wert, bei dem die ersten 16 Werte reserviert sind. Für diesen Typ können alle Werte zwischen 0x0000 und 0xffef verwendet werden. Rufen Sie den Wert der <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />-Eigenschaft ab, um den Namen der Aufgabe zu erhalten.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>Ruft den Anzeigenamen der Aufgabe für das Ereignis ab.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Anzeigenamen der Aufgabe für das Ereignis enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>Ruft den Threadbezeichner für den Thread ab, in dem der Ereignisanbieter ausgeführt wird.</summary>
      <returns>Gibt einen Ganzzahlwert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>Ruft die Uhrzeit im <see cref="T:System.DateTime" />-Format ab, zu der das Ereignis erstellt wurde.</summary>
      <returns>Gibt einen <see cref="T:System.DateTime" />-Wert zurück. Der Wert kann NULL sein.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>Ruft die XML-Darstellung des Ereignisses ab. Alle Ereigniseigenschaften werden im XML des Ereignisses dargestellt. Das XML entspricht dem Ereignisschema.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die die XML-Darstellung des Ereignisses enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>Ruft die Sicherheitsbeschreibung des Benutzers ab, dessen Kontext verwendet wird, um das Ereignis zu veröffentlichen.</summary>
      <returns>Gibt einen <see cref="T:System.Security.Principal.SecurityIdentifier" />-Wert zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>Ruft die Versionsnummer für das Ereignis ab.</summary>
      <returns>Gibt einen Bytewert zurück. Dieser Wert kann NULL sein.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>Wenn das <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst wird, wird eine Instanz des Objekts an die Delegatenmethode übergeben, die das Ereignis behandelt. Das Objekt enthält das Ereignis, das im Ereignisprotokoll veröffentlicht wurde oder die Ausnahme, die durch einen Fehler beim Abonnieren des Ereignisses ausgelöst wurde.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>Ruft die Ausnahme ab, die durch einen Fehler beim Abonnieren des Ereignisses ausgelöst wurde. Die Ausnahme enthält eine Beschreibung der Ursache für den Fehler beim Abonnieren des Ereignisses.</summary>
      <returns>Die Ausnahme, die beim fehlgeschlagenen Ereignis Abonnement aufgetreten ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>Ruft den Ereignisdatensatz ab, der im Ereignisprotokoll veröffentlicht wird. Dieses Ereignis entspricht den Kriterien aus der Abfrage für das Ereignisabonnement.</summary>
      <returns>Der Ereignisdaten Satz.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>Enthält eine Ereignisaufgabe, die in einem Ereignisanbieter definiert wird. Die Aufgabe identifiziert einen Teil für eine Anwendung oder eine Komponente, die ein Ereignis veröffentlichen. Eine Aufgabe ist ein 16-Bit-Wert, bei dem die ersten 16 Werte reserviert sind.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>Ruft den lokalisierten Namen für die Ereignisaufgabe ab.</summary>
      <returns>Der lokalisierte Name für den Ereignis Task.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>Ruft die GUID für das Ereignis ab, das mit der Aufgabe verknüpft ist.</summary>
      <returns>Die Ereignis-GUID, die der Aufgabe zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>Ruft den nicht lokalisierten Namen der Ereignisaufgabe ab.</summary>
      <returns>Der nicht lokalisierte Name der Ereignis Aufgabe.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>Ruft den numerischen Wert ab, der mit der Aufgabe verknüpft ist.</summary>
      <returns>Der numerische Wert, der der Aufgabe zugeordnet ist.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>Gibt an, dass eine Zeichenfolge den Namen eines Ereignisprotokolls oder den Dateisystempfad für eine Ereignisprotokolldatei enthält.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>Ein Pfadparameter enthält den Dateisystempfad für eine Ereignisprotokolldatei.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>Ein Pfadparameter enthält den Namen des Ereignisprotokolls.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>Enthält statische Informationen über einen Ereignisanbieter, z. B. den Namen und die ID des Anbieters sowie eine Auflistung der für den Anbieter definierten Ereignisse.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />-Klasse durch Angeben des Namens des Ereignisanbieters, für den Informationen abgerufen werden sollen.</summary>
      <param name="providerName">Der Name des Ereignisanbieters, für den Informationen abgerufen werden sollen.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />-Klasse, indem der Name des Anbieters angegeben wird, für den Informationen abgerufen werden sollen, sowie der Ereignisprotokolldienst, bei dem dieser registriert ist, und die Sprache, in der die Informationen zurückgegeben werden sollen.</summary>
      <param name="providerName">Der Name des Ereignisanbieters, für den Informationen abgerufen werden sollen.</param>
      <param name="session">Das <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt, das angibt, ob Anbieterinformationen von einem Anbieter auf dem lokalen Computer oder auf einem Remotecomputer abgerufen werden sollen.</param>
      <param name="targetCultureInfo">Die Kultur, die die Sprache angibt, in der die Informationen zurückgegeben werden sollen.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>Ruft den lokalisierten Namen des Ereignisanbieters ab.</summary>
      <returns>Gibt eine Zeichenfolge mit dem lokalisierten Namen des Ereignisanbieters zurück.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>Gibt alle vom Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>Ruft eine zählbare Auflistung von <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" />-Objekten ab, die jeweils ein Ereignis darstellen, das im Anbieter definiert ist.</summary>
      <returns>Gibt eine aufzählbare Sammlung von <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>Ruft die Basis der URL ab, mit der Hilfeanforderungen für die Ereignisse im Ereignisanbieter gebildet werden.</summary>
      <returns>Gibt einen <see cref="T:System.Uri" />-Wert zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>Ruft die GUID für den Ereignisanbieter ab.</summary>
      <returns>Gibt den GUID-Wert für den Ereignisanbieter zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>Ruft eine zählbare Auflistung von <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />-Objekten ab, die jeweils ein Ereignisschlüsselwort darstellen, das im Ereignisanbieter definiert ist.</summary>
      <returns>Gibt eine aufzählbare Sammlung von <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>Ruft eine zählbare Auflistung von <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />-Objekten ab, die jeweils eine Ebene darstellen, die im Ereignisanbieter definiert ist.</summary>
      <returns>Gibt eine aufzählbare Sammlung von <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>Ruft eine zählbare Auflistung von <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />-Objekten ab, die jeweils einen Link zu einem Ereignisprotokoll darstellen, das vom Ereignisanbieter verwendet wird.</summary>
      <returns>Gibt eine aufzählbare Sammlung von <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>Ruft den Pfad der Datei ab, die die Meldungstabellenressource mit den Zeichenfolgen enthält, die mit den Anbietermetadaten verknüpft sind.</summary>
      <returns>Gibt eine Zeichenfolge mit dem Pfad der Meldungsdatei des Anbieters zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>Ruft den eindeutigen Namen des Ereignisanbieters ab.</summary>
      <returns>Gibt eine Zeichenfolge mit dem eindeutigen Namen des Ereignisanbieters zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>Ruft eine zählbare Auflistung von <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />-Objekten ab, die jeweils einen Opcode darstellen, der im Ereignisanbieter definiert ist.</summary>
      <returns>Gibt eine aufzählbare Sammlung von <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />-Objekten zurück.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>Ruft den Pfad der Datei ab, die die Meldungstabellenressource mit den Zeichenfolgen enthält, die zum Ersetzen von Parametern in Ereignisbeschreibungen verwendet werden.</summary>
      <returns>Gibt eine Zeichenfolge mit dem Pfad der Datei zurück, die die Meldungstabellenressource mit den Zeichenfolgen enthält, die zum Ersetzen von Parametern in Ereignisbeschreibungen verwendet werden.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>Ruft den Pfad der Datei ab, die die Metadaten enthält, die mit dem Anbieter verknüpft sind.</summary>
      <returns>Gibt eine Zeichenfolge zurück, die den Pfad der Datei mit den Metadaten enthält, die mit dem Anbieter verknüpft sind.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>Ruft eine zählbare Auflistung von <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />-Objekten ab, die jeweils eine Aufgabe darstellen, die im Ereignisanbieter definiert ist.</summary>
      <returns>Gibt eine aufzählbare Sammlung von <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />-Objekten zurück.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>Definierte Werte für den Authentifizierungstyp, der während einer RPC-Anmeldung bei einem Server verwendet wird. Diese Anmeldung erfolgt, wenn Sie ein <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt erstellen, das eine Verbindung zu einem Remotecomputer angibt.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>Verwenden Sie die Standardauthentifizierungsmethode während der RPC-Anmeldung. Die Standardauthentifizierung entspricht Negotiate.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>Verwenden Sie die Kerberos-Authentifizierung während der RPC-Anmeldung.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>Verwenden Sie die Negotiate-Authentifizierung während der RPC-Anmeldung. Dadurch kann die Clientanwendung die am besten geeignete Authentifizierungsmethode (NTLM oder Kerberos) auswählen.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>Verwenden Sie die NTLM (Windows NT LAN Manager)-Authentifizierung während der RPC-Anmeldung.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>Definiert die Standardschlüsselwörter, die Ereignissen vom Ereignisanbieter hinzugefügt werden. Weitere Informationen über Schlüsselwörter finden Sie unter <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>Wird allen fehlgeschlagenen Sicherheitsüberwachungsereignissen hinzugefügt. Dieses Schlüsselwort sollte nur für Ereignisse im Sicherheitsprotokoll verwendet werden.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>Wird allen erfolgreichen Sicherheitsüberwachungsereignissen hinzugefügt. Dieses Schlüsselwort sollte nur für Ereignisse im Sicherheitsprotokoll verwendet werden.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>Wird Übertragungsereignissen hinzugefügt, bei denen die verwandte Aktivitäts-ID (Korrelations-ID) einen berechneten Wert darstellt, der mehrdeutig sein kann (keine reale GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary>Wird Übertragungsereignissen hinzugefügt, bei denen die verwandte Aktivitäts-ID (Korrelations-ID) einen berechneten Wert darstellt, der mehrdeutig sein kann (keine reale GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>Wird Ereignissen hinzugefügt, die durch die RaiseEvent-Funktion ausgelöst werden.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>Dieser Wert gibt an, dass beim Veröffentlichen des Ereignisses keine Schlüsselwortfilterung verwendet wird.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary>Angefügt an alle Antwortzeitereignisse.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>Wird allen SQM (Service Quality Mechanism)-Ereignissen hinzugefügt.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>Wird allen WDI (Windows Diagnostic Infrastructure)-Kontextereignissen hinzugefügt.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>Wird allen WDI (Windows Diagnostic Infrastructure)-Diagnoseereignissen hinzugefügt.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>Definiert die Standardereignisebenen, die im Ereignisprotokolldienst verwendet werden. Die Ebene definiert den Schweregrad des Ereignisses. Neben den Standardebenen können auch benutzerdefinierte Ereignisebenen definiert werden. Weitere Informationen über Ebenen finden Sie unter <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>Diese Ebene entspricht schwerwiegenden Fehlern.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>Diese Ebene entspricht normalen Fehlern, die ein Problem angeben.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>Diese Ebene entspricht Informationsereignissen oder Meldungen, die keine Fehler darstellen. Diese Ereignisse können helfen, den Status oder Zustand einer Anwendung nachzuverfolgen.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>Dieser Wert gibt an, dass während der Veröffentlichung von Ereignissen keine Filter auf der Ebene angewendet werden.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>Diese Ebene entspricht langwierigen Ereignissen oder Meldungen.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>Diese Ebene entspricht Warnereignissen. Beispielsweise wird ein Warnereignis veröffentlicht, wenn die maximale Kapazität eines Datenträgers nahezu vollständig erreicht ist.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>Definiert die Standard-Opcodes, die Ereignissen vom Ereignisanbieter hinzugefügt werden. Weitere Informationen zu Opcodes finden Sie unter <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>Ein Ereignis mit diesem Opcode ist ein Ereignis zum Starten einer Ablaufverfolgungsauflistung.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>Ein Ereignis mit diesem Opcode ist ein Ereignis zum Beenden einer Ablaufverfolgungsauflistung.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>Ein Ereignis mit diesem Opcode ist ein Erweiterungsereignis.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>Ein Ereignis mit diesem Opcode ist ein Informationsereignis.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, wenn eine Aktivität in einer Anwendung Daten empfängt.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, nachdem eine Aktivität in einer Anwendung auf ein Ereignis antwortet.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, nachdem eine Aktivität in einer Anwendung aus dem Standbymodus wieder aufgenommen wird. Dieses Ereignis sollte auf ein Ereignis mit dem SUSPEND-Opcode folgen.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, wenn eine Aktivität in einer Anwendung Daten oder Systemressourcen an eine andere Aktivität überträgt.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, wenn eine Anwendung eine neue Transaktion oder eine neue Aktivität startet. Diese können in eine andere Transaktion oder eine andere Aktivität integriert sein, wenn mehrere Ereignisse mit dem Opcode zum Starten ohne ein Ereignis mit dem Opcode zum Beenden aufeinander folgen</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, wenn eine Aktivität oder eine Transaktion in einer Anwendung beendet werden. Dieses Ereignis entspricht dem letzten ungepaarten Ereignis mit einem Opcode zum Starten.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>Ein Ereignis mit diesem Opcode wird veröffentlicht, wenn eine Aktivität in einer Anwendung unterbrochen wird.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>Definiert die Standardaufgaben, die mit Ereignissen im Ereignisanbieter verknüpft sind. Weitere Informationen zu Aufgaben finden Sie unter <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>Es wird keine Aufgabe verwendet, um einen Teil einer Anwendung zu identifizieren, die ein Ereignis veröffentlicht.</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary>Stellt sprachneutrale Informationen für einen Ereignisprotokolleintrag dar.</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary>Initialisiert mithilfe der angegebenen Ressourcenbezeichner für die lokalisierte Meldung und des Kategorietexts des Ereigniseintrags eine neue Instanz der <see cref="T:System.Diagnostics.EventInstance" />-Klasse.</summary>
      <param name="instanceId">Ein Ressourcenbezeichner, der mit einer in der Meldungsressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt.</param>
      <param name="categoryId">Ein Ressourcenbezeichner, der mit einer in der Kategorieressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt oder gleich 0 (null) ist und damit keine Kategorie für das Ereignis spezifiziert.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="instanceId" />-Parameter ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt32.MaxValue" />.
- oder -
Der <paramref name="categoryId" />-Parameter ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary>Initialisiert mithilfe der angegebenen Ressourcenbezeichner für die lokalisierte Meldung und des Kategorietexts des Ereigniseintrags sowie des angegebenen Typs des Ereignisprotokolleintrags eine neue Instanz der <see cref="T:System.Diagnostics.EventInstance" />-Klasse.</summary>
      <param name="instanceId">Ein Ressourcenbezeichner, der mit einer in der Meldungsressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt.</param>
      <param name="categoryId">Ein Ressourcenbezeichner, der mit einer in der Kategorieressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt oder gleich 0 (null) ist und damit keine Kategorie für das Ereignis spezifiziert.</param>
      <param name="entryType">Ein <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert, der den Ereignistyp angibt.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="entryType" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt32.MaxValue" />.
- oder -
<paramref name="categoryId" /> ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary>Ruft den Ressourcenbezeichner ab, der die anwendungsdefinierte Kategorie des Ereigniseintrags angibt, oder legt diesen fest.</summary>
      <returns>Ein numerischer Kategoriewert oder Ressourcenbezeichner, der mit einer in der Kategorieressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt. Der Standardwert ist 0 (null) und bedeutet, dass für den Ereigniseintrag keine Kategorie angezeigt wird.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft ist auf einen negativen Wert oder einen Wert größer als <see cref="F:System.UInt16.MaxValue" /> festgelegt.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary>Gibt den Ereignistyp des Ereignisprotokolleintrags an oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert, der den Typ des Ereigniseintrags angibt. Der Standardwert ist <see cref="F:System.Diagnostics.EventLogEntryType.Information" />sein.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Die Eigenschaft wurde auf keinen gültigen <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert festgelegt.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary>Ruft den Ressourcenbezeichner ab, der den Meldungstext des Ereigniseintrags bezeichnet, oder legt diesen fest.</summary>
      <returns>Ein Ressourcenbezeichner, der mit einer in der Meldungsressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft ist auf einen negativen Wert oder einen Wert größer als <see cref="F:System.UInt32.MaxValue" /> festgelegt.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary>Ermöglicht die Interaktion mit Windows-Ereignisprotokollen.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLog" />-Klasse. Die Instanz wird keinem Protokoll zugeordnet.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLog" />-Klasse. Ordnet die Instanz einem Protokoll auf dem lokalen Computer zu.</summary>
      <param name="logName">Der Name des Protokolls auf dem lokalen Computer.</param>
      <exception cref="T:System.ArgumentNullException">Der Protokollname ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Protokollname ist ungültig.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLog" />-Klasse. Ordnet die Instanz einem Protokoll auf dem angegebenen Computer zu.</summary>
      <param name="logName">Der Name des Protokolls auf dem angegebenen Computer.</param>
      <param name="machineName">Der Computer, auf dem das Protokoll vorhanden ist.</param>
      <exception cref="T:System.ArgumentNullException">Der Protokollname ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Protokollname ist ungültig.
- oder -
Der Computername ist ungültig.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLog" />-Klasse. Ordnet die Instanz einem Protokoll auf dem angegebenen Computer zu und erstellt die angegebene Quelle bzw. weist diese dem <see cref="T:System.Diagnostics.EventLog" /> zu.</summary>
      <param name="logName">Der Name des Protokolls auf dem angegebenen Computer.</param>
      <param name="machineName">Der Computer, auf dem das Protokoll vorhanden ist.</param>
      <param name="source">Die Quelle für Ereignisprotokolleinträge.</param>
      <exception cref="T:System.ArgumentNullException">Der Protokollname ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der Protokollname ist ungültig.
- oder -
Der Computername ist ungültig.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary>Beginnt die Initialisierung von <see cref="T:System.Diagnostics.EventLog" /> für die Verwendung in einem Formular oder durch eine andere Komponente. Die Initialisierung erfolgt zur Laufzeit.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.EventLog" /> wurde bereits initialisiert.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary>Entfernt alle Einträge aus dem Ereignisprotokoll.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Ereignisprotokoll wurde nicht erfolgreich gelöscht.
- oder -
Das Protokoll kann nicht geöffnet werden. Es ist kein Windows-Fehlercode verfügbar.</exception>
      <exception cref="T:System.ArgumentException">Für die <see cref="P:System.Diagnostics.EventLog.Log" />-Eigenschaft wurde kein Wert angegeben. Stellen Sie sicher, dass der Protokollname keine leere Zeichenfolge ist.</exception>
      <exception cref="T:System.InvalidOperationException">Das Protokoll ist nicht vorhanden.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary>Schließt das Ereignisprotokoll und gibt Lese- und Schreibhandles frei.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Lese- oder Schreibhandle des Ereignisprotokolls wurde nicht freigegeben.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary>Richtet mit den angegebenen Konfigurationseigenschaften für die Ereignisquelle und dem entsprechenden Ereignisprotokoll als gültige Ereignisquelle zum Schreiben lokalisierter Ereignismeldungen ein.</summary>
      <param name="sourceData">Die Konfigurationseigenschaften für die Ereignisquelle und ihr Zielereignisprotokoll.</param>
      <exception cref="T:System.ArgumentException">Der in <paramref name="sourceData" /> angegebene Computername ist nicht gültig.
- oder -
Der in <paramref name="sourceData" /> angegebene Dateiname ist <see langword="null" />.
- oder -
Der in <paramref name="sourceData" /> angegebene Protokollname ist nicht gültig. Ereignisprotokollnamen müssen aus druckbaren Zeichen bestehen und dürfen nicht die Zeichen "*", "?" oder "\" enthalten.
- oder -
Der in <paramref name="sourceData" /> angegebene Protokollname ist für die Benutzerprotokollerstellung nicht gültig. Die Ereignisprotokollnamen AppEvent, SysEvent und SecEvent sind für die Verwendung durch das System reserviert.
- oder -
Der Protokollname stimmt mit einem vorhandenen Ereignisquellennamen überein.
- oder -
Der in <paramref name="sourceData" /> angegebene Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.
- oder -
Die ersten acht Zeichen des in <paramref name="sourceData" /> angegebenen Protokollnamens sind nicht eindeutig.
- oder -
Der in <paramref name="sourceData" /> angegebene Quellenname ist bereits registriert.
- oder -
Der in <paramref name="sourceData" /> angegebene Quellenname stimmt mit einem vorhandenen Ereignisprotokollnamen überein.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceData" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary>Richtet den angegebenen Quellennamen als gültige Ereignisquelle für das Schreiben von Einträgen in ein Protokoll auf dem lokalen Computer ein. Diese Methode kann auch ein neues benutzerdefiniertes Protokoll auf dem lokalen Computer erstellen.</summary>
      <param name="source">Der Quellenname, unter dem die Anwendung auf dem lokalen Computer registriert ist.</param>
      <param name="logName">Der Name des Protokolls, in das die Einträge der Quelle geschrieben werden. Zu den möglichen Werten gehören das Anwendungs- bzw. Systemprotokoll oder ein benutzerdefiniertes Ereignisprotokoll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> ist eine leere Zeichenfolge ("") oder <see langword="null" />
- oder -
<paramref name="logName" /> ist kein gültiger Ereignisprotokollname. Ereignisprotokollnamen müssen aus druckbaren Zeichen bestehen und dürfen nicht die Zeichen "*", "?" oder "\" enthalten.
- oder -
<paramref name="logName" /> ist nicht gültig für Benutzerprotokollerstellung. Die Ereignisprotokollnamen AppEvent, SysEvent und SecEvent sind für die Verwendung durch das System reserviert.
- oder -
Der Protokollname stimmt mit einem vorhandenen Ereignisquellennamen überein.
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.
- oder -
Die ersten acht Zeichen von <paramref name="logName" /> stimmen mit den ersten acht Zeichen eines vorhandenen Ereignisprotokollnamens überein.
- oder -
Die Quelle kann nicht registriert werden, da diese bereits auf dem lokalen Computer vorhanden ist.
- oder -
Der Quellenname stimmt mit einem vorhandenen Ereignisprotokollnamen überein.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem lokalen Computer nicht geöffnet werden.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary>Richtet den angegebenen Quellennamen als gültige Ereignisquelle für das Schreiben von Einträgen in ein Protokoll auf dem angegebenen Computer ein. Mit dieser Methode kann auch ein neues benutzerdefiniertes Protokoll auf dem angegebenen Computer erstellt werden.</summary>
      <param name="source">Die Quelle, unter der die Anwendung auf dem angegebenen Computer registriert ist.</param>
      <param name="logName">Der Name des Protokolls, in das die Einträge der Quelle geschrieben werden. Zu den möglichen Werten gehören das Anwendungs- bzw. Systemprotokoll oder ein benutzerdefiniertes Ereignisprotokoll. Wenn Sie keinen Wert angeben, wird standardmäßig für <paramref name="logName" /> das Anwendungsprotokoll verwendet.</param>
      <param name="machineName">Der Name des Computers, auf dem diese Ereignisquelle registriert wird, oder "." für den lokalen Computer.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="machineName" /> ist kein gültiger Computername.
- oder -
<paramref name="source" /> ist eine leere Zeichenfolge ("") oder <see langword="null" />
- oder -
<paramref name="logName" /> ist kein gültiger Ereignisprotokollname. Ereignisprotokollnamen müssen aus druckbaren Zeichen bestehen und dürfen nicht die Zeichen "*", "?" oder "\" enthalten.
- oder -
<paramref name="logName" /> ist nicht gültig für Benutzerprotokollerstellung. Die Ereignisprotokollnamen AppEvent, SysEvent und SecEvent sind für die Verwendung durch das System reserviert.
- oder -
Der Protokollname stimmt mit einem vorhandenen Ereignisquellennamen überein.
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.
- oder -
Die ersten acht Zeichen von <paramref name="logName" /> stimmen mit den ersten acht Zeichen eines vorhandenen Ereignisprotokollnamens auf dem angegebenen Computer überein.
- oder -
Die Quelle kann nicht registriert werden, da diese bereits auf dem angegebenen Computer vorhanden ist.
- oder -
Der Quellenname stimmt mit einem vorhandenen Ereignisquellennamen überein.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem angegebenen Computer nicht geöffnet werden.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary>Entfernt ein Ereignisprotokoll vom lokalen Computer.</summary>
      <param name="logName">Der Name des zu löschenden Protokolls. Mögliche Werte: Anwendungs-, Sicherheits- und Systemprotokoll sowie alle benutzerdefinierten Ereignisprotokolle auf dem Computer.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> ist eine leere Zeichenfolge ("") oder <see langword="null" /></exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem lokalen Computer nicht geöffnet werden.
- oder -
Das Protokoll ist auf dem lokalen Computer nicht vorhanden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Ereignisprotokoll wurde nicht erfolgreich gelöscht.
- oder -
Das Protokoll kann nicht geöffnet werden. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary>Entfernt ein Ereignisprotokoll vom angegebenen Computer.</summary>
      <param name="logName">Der Name des zu löschenden Protokolls. Mögliche Werte: Anwendungs-, Sicherheits- und Systemprotokoll sowie alle benutzerdefinierten Ereignisprotokolle auf dem angegebenen Computer.</param>
      <param name="machineName">Der Name des Computers, auf dem das Protokoll gelöscht werden soll, oder "." für den lokalen Computer.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> ist eine leere Zeichenfolge ("") oder <see langword="null" />
- oder -
<paramref name="machineName" /> ist kein gültiger Computername.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem angegebenen Computer nicht geöffnet werden.
- oder -
Das Protokoll ist auf dem angegebenen Computer nicht vorhanden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Ereignisprotokoll wurde nicht erfolgreich gelöscht.
- oder -
Das Protokoll kann nicht geöffnet werden. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary>Entfernt die Registrierung der Ereignisquelle aus dem Ereignisprotokoll auf dem lokalen Computer.</summary>
      <param name="source">Der Name, unter dem die Anwendung im Ereignisprotokollsystem registriert ist.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Parameter ist in der Registrierung des lokalen Computers nicht vorhanden.
- oder -
Sie verfügen nicht über Schreibzugriff auf den Registrierungsschlüssel für das Ereignisprotokoll.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary>Entfernt die Registrierung der Ereignisquellen einer Anwendung auf dem angegebenen Computer.</summary>
      <param name="source">Der Name, unter dem die Anwendung im Ereignisprotokollsystem registriert ist.</param>
      <param name="machineName">Der Name des Computers, auf dem der Registrierungseintrag gelöscht werden soll, oder "." für den lokalen Computer.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="machineName" />-Parameter ist ungültig.
- oder -
Der <paramref name="source" />-Parameter ist in der Registrierung des angegebenen Computers nicht vorhanden.
- oder -
Sie verfügen nicht über Schreibzugriff auf den Registrierungsschlüssel für das Ereignisprotokoll.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> kann nicht gelöscht werden, da in der Registrierung der übergeordnete Schlüssel für <paramref name="source" /> keinen Unterschlüssel mit demselben Namen enthält.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Diagnostics.EventLog" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Diagnostics.EventLog" /> Benachrichtigungen über <see cref="E:System.Diagnostics.EventLog.EntryWritten" />-Ereignisse erhält, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Diagnostics.EventLog" /> beim Schreiben eines Eintrags in das Protokoll benachrichtigt wird; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Das Ereignisprotokoll wird auf einem Remotecomputer gespeichert.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary>Beendet die Initialisierung eines <see cref="T:System.Diagnostics.EventLog" />, das in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary>Ruft den Inhalt des Ereignisprotokolls ab.</summary>
      <returns>Eine <see cref="T:System.Diagnostics.EventLogEntryCollection" /> mit den Einträgen im Ereignisprotokoll. Jeder Eintrag ist einer Instanz der <see cref="T:System.Diagnostics.EventLogEntry" />-Klasse zugeordnet.</returns>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary>Tritt beim Schreiben eines Eintrags in das Ereignisprotokoll auf dem lokalen Computer ein.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary>Bestimmt, ob das Protokoll auf dem lokalen Computer vorhanden ist.</summary>
      <param name="logName">Der Name des zu suchenden Protokolls. Mögliche Werte: Anwendungs-, Sicherheits-, System- und andere anwendungsspezifische Protokolle (z.B. im Zusammenhang mit Active Directory) oder ein beliebiges benutzerdefiniertes Protokoll auf dem Computer.</param>
      <returns>
        <see langword="true" />, wenn das Protokoll auf dem lokalen Computer vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">logName ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary>Bestimmt, ob das Protokoll auf dem angegebenen Computer vorhanden ist.</summary>
      <param name="logName">Das zu suchende Protokoll. Mögliche Werte: Anwendungs-, Sicherheits-, System- und andere anwendungsspezifische Protokolle (z.B. im Zusammenhang mit Active Directory) oder ein beliebiges benutzerdefiniertes Protokoll auf dem Computer.</param>
      <param name="machineName">Der Name des Computers, auf dem das Protokoll gesucht werden soll, oder "." für den lokalen Computer.</param>
      <returns>
        <see langword="true" />, wenn das Protokoll auf dem angegebenen Computer vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="machineName" />-Parameter hat ein ungültiges Format. Stellen Sie sicher, dass Sie für den Computer, auf dem Sie die Suche durchführen, die richtige Syntax verwenden.
- oder -
<paramref name="logName" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary>Sucht nach allen Ereignisprotokollen auf dem lokalen Computer und erstellt ein Array von <see cref="T:System.Diagnostics.EventLog" />-Objekten, das die Liste enthält.</summary>
      <returns>Ein Array vom Typ <see cref="T:System.Diagnostics.EventLog" />, das die auf dem lokalen Computer vorhandenen Protokolle darstellt.</returns>
      <exception cref="T:System.SystemException">Sie verfügen nicht über Lesezugriff auf die Registrierung.
- oder -
Auf dem Computer ist kein Ereignisprotokolldienst vorhanden.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary>Sucht nach allen Ereignisprotokollen auf dem angegebenen Computer und erstellt ein Array von <see cref="T:System.Diagnostics.EventLog" />-Objekten, das die Liste enthält.</summary>
      <param name="machineName">Der Computer, auf dem nach Ereignisprotokollen gesucht werden soll.</param>
      <returns>Ein Array vom Typ <see cref="T:System.Diagnostics.EventLog" />, das die auf dem angegebenen Computer vorhandenen Protokolle darstellt.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="machineName" />-Parameter ist ein ungültiger Computername.</exception>
      <exception cref="T:System.InvalidOperationException">Sie verfügen nicht über Lesezugriff auf die Registrierung.
- oder -
Auf dem Computer ist kein Ereignisprotokolldienst vorhanden.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary>Ruft den Namen des Protokolls ab, aus dem gelesen bzw. in das geschrieben werden soll, oder legt diesen fest.</summary>
      <returns>Der Name des Protokolls. Dies kann das Anwendungs-, das System- bzw. das Sicherheitsprotokoll oder ein benutzerdefinierter Protokollname sein. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary>Ruft den angezeigten Namen des Ereignisprotokolls ab.</summary>
      <returns>Ein Name, der das Ereignisprotokoll in der Ereignisanzeige des Systems darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Das angegebene <see cref="P:System.Diagnostics.EventLog.Log" /> ist in der Registrierung für diesen Computer nicht vorhanden.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary>Ruft den Namen des Protokolls ab, in der die angegebene Quelle registriert ist.</summary>
      <param name="source">Der Name der Ereignisquelle.</param>
      <param name="machineName">Der Name des Computers, auf dem gesucht werden soll, oder "." für den lokalen Computer.</param>
      <returns>Der Name des Protokolls, das der angegebenen Quelle in der Registrierung zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary>Ruft den Namen des Computers ab, auf dem Ereignisse gelesen oder geschrieben werden sollen, oder legt diesen fest.</summary>
      <returns>Der Name des Servers, auf dem das Ereignisprotokoll gespeichert ist. Der Standardwert ist der lokale Computer („.“).</returns>
      <exception cref="T:System.ArgumentException">Der Computername ist ungültig.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary>Ruft die maximale Ereignisprotokollgröße in Kilobyte ab oder legt diese fest.</summary>
      <returns>Die maximale Ereignisprotokollgröße in Kilobyte. Der Standardwert lautet 512 und gibt eine maximale Dateigröße von 512 Kilobyte an.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 64, größer als 4194240 oder kein ganzes Vielfaches von 64.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Diagnostics.EventLog.Log" />-Wert ist kein gültiger Protokollname.
- oder -
Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem Zielcomputer nicht geöffnet werden.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary>Ruft die Anzahl von Tagen ab, für die Einträge im Ereignisprotokoll beibehalten werden sollen.</summary>
      <returns>Die Anzahl von Tagen, für die Einträge im Ereignisprotokoll beibehalten werden. Der Standardwert ist 7.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary>Ändert das konfigurierte Verhalten zum Schreiben neuer Einträge, wenn die maximale Dateigröße des Ereignisprotokolls erreicht wird.</summary>
      <param name="action">Das Überlaufverhalten für das Schreiben neuer Einträge in das Ereignisprotokoll.</param>
      <param name="retentionDays">Die Mindestanzahl von Tagen, für die jeder Ereignisprotokolleintrag beibehalten wird. Dieser Parameter wird nur verwendet, wenn <paramref name="action" /> auf <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> festgelegt ist.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> ist kein gültiger <see cref="P:System.Diagnostics.EventLog.OverflowAction" />-Wert.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retentionDays" /> ist kleiner als 1 oder größer als 365.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Diagnostics.EventLog.Log" />-Wert ist kein gültiger Protokollname.
- oder -
Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem Zielcomputer nicht geöffnet werden.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary>Ruft das zum Speichern neuer Einträge bei Erreichen der maximalen Dateigröße des Ereignisprotokolls konfigurierte Verhalten ab.</summary>
      <returns>Der <see cref="T:System.Diagnostics.OverflowAction" />-Wert, der das zum Speichern neuer Einträge beim Erreichen der maximalen Dateigröße des Ereignisprotokolls konfigurierte Verhalten angibt. Die Standardeinstellung ist <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary>Gibt den lokalisierten Namen des Ereignisprotokolls an, der in der Ereignisanzeige des Servers angezeigt wird.</summary>
      <param name="resourceFile">Der vollständig angegebene Pfad einer lokalisierten Ressourcendatei.</param>
      <param name="resourceId">Der Ressourcenbezeichner, der eine lokalisierte Zeichenfolge in der Ressourcendatei indiziert.</param>
      <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Diagnostics.EventLog.Log" />-Wert ist kein gültiger Protokollname.
- oder -
Der Registrierungsschlüssel für das Ereignisprotokoll konnte auf dem Zielcomputer nicht geöffnet werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceFile" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary>Ruft den zu registrierenden Namen der Quelle ab, die zum Schreiben in das Ereignisprotokoll verwendet werden soll, oder legt diesen fest.</summary>
      <returns>Der Name, der im Ereignisprotokoll als Quelle für Einträge registriert ist. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
      <exception cref="T:System.ArgumentException">Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary>Bestimmt, ob eine Ereignisquelle auf dem lokalen Computer registriert ist.</summary>
      <param name="source">Der Name der Ereignisquelle.</param>
      <returns>
        <see langword="true" />, wenn die Ereignisquelle auf dem lokalen Computer registriert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" /> wurde nicht gefunden, aber einige oder alle Ereignisprotokolle konnten nicht durchsucht werden.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary>Bestimmt, ob eine Ereignisquelle auf einem angegebenen Computer registriert ist.</summary>
      <param name="source">Der Name der Ereignisquelle.</param>
      <param name="machineName">Der Name des Computers, auf dem gesucht werden soll, oder "." für den lokalen Computer.</param>
      <returns>
        <see langword="true" />, wenn die Ereignisquelle auf dem angegebenen Computer registriert ist; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> ist ein ungültiger Computername.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" /> wurde nicht gefunden, aber einige oder alle Ereignisprotokolle konnten nicht durchsucht werden.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary>Ruft das Objekt für das Marshallen der Ereignishandleraufrufe ab, die aufgrund eines Ereignisses für das Schreiben eines <see cref="T:System.Diagnostics.EventLog" />-Eintrags ausgegeben werden, oder legt dieses fest.</summary>
      <returns>Das <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> für das Marshallen von Ereignishandleraufrufen, die aufgrund eines <see cref="E:System.Diagnostics.EventLog.EntryWritten" />-Ereignisses im Ereignisprotokoll ausgegeben werden.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary>Schreibt einen Eintrag vom Typ Information mit dem angegebenen Meldungstext in das Ereignisprotokoll.</summary>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>Schreibt einen Eintrag für einen Fehler, eine Warnung, eine Information, eine Erfolgs- oder Fehlerüberwachung mit dem angegebenen Meldungstext in das Ereignisprotokoll.</summary>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>Schreibt einen Eintrag mit dem angegebenen Meldungstext und dem von der Anwendung definierten Ereignisbezeichner in das Ereignisprotokoll.</summary>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <param name="eventID">Der anwendungsspezifische Bezeichner für das Ereignis.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
<paramref name="eventID" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>Schreibt einen Eintrag mit dem angegebenen Meldungstext, dem von der Anwendung definierten Ereignisbezeichner und der Kategorie in das Ereignisprotokoll.</summary>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <param name="eventID">Der anwendungsspezifische Bezeichner für das Ereignis.</param>
      <param name="category">Die der Meldung zugeordnete anwendungsspezifische Unterkategorie.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
<paramref name="eventID" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>Schreibt einen Eintrag mit dem angegebenen Meldungstext, dem von der Anwendung definierten Ereignisbezeichner und der Kategorie in das Ereignisprotokoll und fügt Binärdaten an die Meldung an.</summary>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <param name="eventID">Der anwendungsspezifische Bezeichner für das Ereignis.</param>
      <param name="category">Die der Meldung zugeordnete anwendungsspezifische Unterkategorie.</param>
      <param name="rawData">Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
<paramref name="eventID" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary>Schreibt einen Eintrag vom Typ Information mit dem angegebenen Meldungstext in das Ereignisprotokoll, wobei die angegebene registrierte Ereignisquelle verwendet wird.</summary>
      <param name="source">Die Quelle, unter der die Anwendung auf dem angegebenen Computer registriert ist.</param>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary>Schreibt einen Eintrag für einen Fehler, eine Warnung, eine Information oder eine Erfolgs- oder Fehlerüberwachung mit dem angegebenen Meldungstext in das Ereignisprotokoll, wobei die angegebene registrierte Ereignisquelle verwendet wird.</summary>
      <param name="source">Die Quelle, unter der die Anwendung auf dem angegebenen Computer registriert ist.</param>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>Schreibt einen Eintrag mit dem angegebenen Meldungstext und dem von der Anwendung definierten Ereignisbezeichner in das Ereignisprotokoll, wobei die angegebene registrierte Ereignisquelle verwendet wird.</summary>
      <param name="source">Die Quelle, unter der die Anwendung auf dem angegebenen Computer registriert ist.</param>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <param name="eventID">Der anwendungsspezifische Bezeichner für das Ereignis.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
<paramref name="eventID" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>Schreibt einen Eintrag mit dem angegebenen Meldungstext, dem von der Anwendung definierten Ereignisbezeichner und der Kategorie in das Ereignisprotokoll, wobei die angegebene registrierte Ereignisquelle verwendet wird. Anhand der <paramref name="category" /> kann die Ereignisanzeige Ereignisse im Protokoll filtern.</summary>
      <param name="source">Die Quelle, unter der die Anwendung auf dem angegebenen Computer registriert ist.</param>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <param name="eventID">Der anwendungsspezifische Bezeichner für das Ereignis.</param>
      <param name="category">Die der Meldung zugeordnete anwendungsspezifische Unterkategorie.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
<paramref name="eventID" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>Schreibt einen Eintrag mit dem angegebenen Meldungstext, dem von der Anwendung definierten Ereignisbezeichner und der Kategorie in das Ereignisprotokoll, wobei die angegebene registrierte Ereignisquelle verwendet wird, und fügt Binärdaten an die Meldung an.</summary>
      <param name="source">Die Quelle, unter der die Anwendung auf dem angegebenen Computer registriert ist.</param>
      <param name="message">Die in das Ereignisprotokoll zu schreibende Zeichenfolge.</param>
      <param name="type">Einer der <see cref="T:System.Diagnostics.EventLogEntryType" />-Werte.</param>
      <param name="eventID">Der anwendungsspezifische Bezeichner für das Ereignis.</param>
      <param name="category">Die der Meldung zugeordnete anwendungsspezifische Unterkategorie.</param>
      <param name="rawData">Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
<paramref name="eventID" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
Die Meldungszeichenfolge ist länger als 31.839 Bytes (32.766 Bytes auf Windows-Betriebssystemen vor Windows Vista).
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>Schreibt einen Ereignisprotokolleintrag mit den angegebenen Ereignisdaten, Meldungsersetzungszeichenfolgen und zugeordneten Binärdaten.</summary>
      <param name="instance">Eine <see cref="T:System.Diagnostics.EventInstance" />-Instanz, die einen lokalisierten Ereignisprotokolleintrag darstellt.</param>
      <param name="data">Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</param>
      <param name="values">Ein Array von Zeichenfolgen, die mit dem Meldungstext des Ereignisprotokolleintrags zusammengeführt werden sollen.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
<paramref name="instance.InstanceId" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
<paramref name="values" /> enthält mehr als 256 Elemente.
- oder -
Eines der <paramref name="values" />-Elemente ist länger als 32.766 Bytes.
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary>Schreibt einen lokalisierten Eintrag in das Ereignisprotokoll.</summary>
      <param name="instance">Eine <see cref="T:System.Diagnostics.EventInstance" />-Instanz, die einen lokalisierten Ereignisprotokolleintrag darstellt.</param>
      <param name="values">Ein Array von Zeichenfolgen, die mit dem Meldungstext des Ereignisprotokolleintrags zusammengeführt werden sollen.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Diagnostics.EventLog.Source" />-Eigenschaft von <see cref="T:System.Diagnostics.EventLog" /> wurde nicht festgelegt.
- oder -
Die Methode hat versucht, eine neue Ereignisquelle zu registrieren, der Computername in <see cref="P:System.Diagnostics.EventLog.MachineName" /> ist jedoch ungültig.
- oder -
Die Quelle ist bereits für ein anderes Ereignisprotokoll registriert.
- oder -
<paramref name="instance.InstanceId" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
<paramref name="values" /> enthält mehr als 256 Elemente.
- oder -
Eines der <paramref name="values" />-Elemente ist länger als 32.766 Bytes.
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>Schreibt einen Ereignisprotokolleintrag mit den angegebenen Ereignisdaten, Meldungsersetzungszeichenfolgen und zugeordneten Binärdaten und unter Verwendung der angegebenen registrierten Ereignisquelle.</summary>
      <param name="source">Der Name der für die Anwendung auf dem angegebenen Computer registrierten Ereignisquelle.</param>
      <param name="instance">Eine <see cref="T:System.Diagnostics.EventInstance" />-Instanz, die einen lokalisierten Ereignisprotokolleintrag darstellt.</param>
      <param name="data">Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</param>
      <param name="values">Ein Array von Zeichenfolgen, die mit dem Meldungstext des Ereignisprotokolleintrags zusammengeführt werden sollen.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
<paramref name="instance.InstanceId" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
<paramref name="values" /> enthält mehr als 256 Elemente.
- oder -
Eines der <paramref name="values" />-Elemente ist länger als 32.766 Bytes.
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary>Schreibt unter Verwendung der angegebenen registrierten Ereignisquelle einen Ereignisprotokolleintrag mit den angegebenen Ereignisdaten und Meldungsersetzungszeichenfolgen.</summary>
      <param name="source">Der Name der für die Anwendung auf dem angegebenen Computer registrierten Ereignisquelle.</param>
      <param name="instance">Eine <see cref="T:System.Diagnostics.EventInstance" />-Instanz, die einen lokalisierten Ereignisprotokolleintrag darstellt.</param>
      <param name="values">Ein Array von Zeichenfolgen, die mit dem Meldungstext des Ereignisprotokolleintrags zusammengeführt werden sollen.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="source" />-Wert ist eine leere Zeichenfolge ("").
- oder -
Der <paramref name="source" />-Wert ist <see langword="null" />.
- oder -
<paramref name="instance.InstanceId" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.
- oder -
<paramref name="values" /> enthält mehr als 256 Elemente.
- oder -
Eines der <paramref name="values" />-Elemente ist länger als 32.766 Bytes.
- oder -
Der Quellenname führt dazu, dass der Registrierungsschlüsselpfad länger als 254 Zeichen ist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Registrierungsschlüssel für das Ereignisprotokoll konnte nicht geöffnet werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Das Betriebssystem hat beim Schreiben des Ereigniseintrags in das Ereignisprotokoll einen Fehler gemeldet. Es ist kein Windows-Fehlercode verfügbar.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary>Kapselt einen einzigen Datensatz im Ereignisprotokoll. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary>Ruft den der <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />-Eigenschaft für diesen Eintrag zugeordneten Text ab.</summary>
      <returns>Der anwendungsspezifische Kategorietext.</returns>
      <exception cref="T:System.Exception">Der Speicherplatz konnte für eine der Einfügezeichenfolgen, die der Kategorie zugeordnet sind, nicht reserviert werden.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary>Ruft die Kategorienummer des Ereignisprotokolleintrags ab.</summary>
      <returns>Die anwendungsspezifische Kategorienummer für diesen Eintrag.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary>Ruft die dem Eintrag zugeordneten Binärdaten ab.</summary>
      <returns>Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary>Ruft den Ereignistyp dieses Eintrags ab.</summary>
      <returns>Der Ereignistyp, der dem Ereignisprotokolleintrag zugeordnet ist.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary>Führt einen Vergleich zweier Ereignisprotokolleinträge durch.</summary>
      <param name="otherEntry">Der zu vergleichende <see cref="T:System.Diagnostics.EventLogEntry" />.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Diagnostics.EventLogEntry" />-Objekte identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary>Ruft den anwendungsspezifischen Ereignisbezeichner für den aktuellen Ereigniseintrag ab.</summary>
      <returns>Der anwendungsspezifische Bezeichner für die Ereignismeldung.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary>Ruft den Index dieses Eintrags im Ereignisprotokoll ab.</summary>
      <returns>Der Index dieses Eintrags im Ereignisprotokoll.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary>Ruft den Ressourcenbezeichner ab, der den Nachrichtentext des Ereigniseintrags bezeichnet.</summary>
      <returns>Ein Ressourcenbezeichner, der mit einer Zeichenfolgendefinition in der Meldungsressourcendatei der Ereignisquelle übereinstimmt.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary>Ruft den Namen des Computers ab, auf dem dieser Eintrag generiert wurde.</summary>
      <returns>Der Name des Computers mit dem Ereignisprotokoll.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary>Ruft die lokalisierte Meldung ab, die diesem Ereigniseintrag zugeordnet ist.</summary>
      <returns>Der formatierte lokalisierte Text der Meldung. Dazu zählen zugeordnete Ersatzzeichenfolgen.</returns>
      <exception cref="T:System.Exception">Der Speicherplatz konnte für eine der Einfügezeichenfolgen, die der Meldung zugeordnet sind, nicht reserviert werden.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary>Ruft die dem Ereignisprotokolleintrag zugeordneten Ersatzzeichenfolgen ab.</summary>
      <returns>Ein Array, das die im Ereigniseintrag gespeicherten Ersatzzeichenfolgen enthält.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary>Ruft den Namen der Anwendung ab, die dieses Ereignis generiert hat.</summary>
      <returns>Der Name, der im Ereignisprotokoll als Quelle dieses Eintrags registriert ist.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="info">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) dieser Serialisierung.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary>Ruft die Ortszeit ab, zu der dieses Ereignis generiert wurde.</summary>
      <returns>Ortszeit, zu der dieses Ereignis generiert wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary>Ruft die Ortszeit ab, zu der dieses Ereignis in das Protokoll geschrieben wurde.</summary>
      <returns>Ortszeit, zu der dieses Ereignis in das Protokoll geschrieben wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary>Ruft den Namen des Benutzers ab, der für dieses Ereignis verantwortlich ist.</summary>
      <returns>Die Sicherheits-ID (SID), die einen Benutzer oder eine Gruppe eindeutig bezeichnet.</returns>
      <exception cref="T:System.SystemException">Für die SID des Benutzers konnten keine Kontoinformationen abgefragt werden.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary>Definiert Größe und Enumeratoren für eine Auflistung von <see cref="T:System.Diagnostics.EventLogEntry" />-Instanzen.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary>Kopiert die Elemente aus <see cref="T:System.Diagnostics.EventLogEntryCollection" /> in ein Array von <see cref="T:System.Diagnostics.EventLogEntry" />-Instanzen, beginnend bei einem bestimmten Arrayindex.</summary>
      <param name="entries">Das eindimensionale Array von <see cref="T:System.Diagnostics.EventLogEntry" />-Instanzen, in das die Elemente aus der Auflistung kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary>Ruft die Anzahl der Einträge im Ereignisprotokoll ab (d. h. die Anzahl der Elemente in der <see cref="T:System.Diagnostics.EventLogEntry" />-Auflistung).</summary>
      <returns>Die Anzahl der derzeitigen Einträge im Ereignisprotokoll.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary>Unterstützt eine einfache Iteration durch das <see cref="T:System.Diagnostics.EventLogEntryCollection" />-Objekt.</summary>
      <returns>Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary>Ruft einen Eintrag im Ereignisprotokoll über einen nullbasierten Index ab.</summary>
      <param name="index">Der nullbasierte Index, der dem Ereignisprotokolleintrag zugeordnet ist.</param>
      <returns>Der Eintrag im Ereignisprotokoll an der Position, die im <paramref name="index" />-Parameter angegeben wird.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Diagnostics.EventLogEntryCollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="false" />, wenn der Zugriff auf die Auflistung nicht synchronisiert (threadsicher) ist.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf das <see cref="T:System.Diagnostics.EventLogEntryCollection" />-Objekt synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary>Gibt den Ereignistyp eines Ereignisprotokolleintrags an.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary>Ein Fehlerereignis. Weist auf ein erhebliches Problem hin, über das der Benutzer informiert werden muss; i. d. R. ein Funktions- oder Datenverlust.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary>Ein Überwachungsereignis für Fehler. Gibt ein Sicherheitsereignis an, das eintritt, wenn ein überwachter Zugriff fehlschlägt, z. B. das Öffnen einer Datei.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary>Ein Informationsereignis. Gibt eine wichtige, erfolgreiche Operation an.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary>Ein Überwachungsereignis für Erfolge. Gibt ein Sicherheitsereignis an, das auftritt, wenn ein überwachter Zugriff erfolgreich ist, z. B. eine erfolgreiche Anmeldung.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary>Ein Warnungsereignis. Weist auf ein Problem hin, das nicht unmittelbar von Bedeutung ist, das jedoch auf Bedingungen hindeutet, die später zu Problemen führen können.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary>Stellt einen einfachen Listener bereit, der Ablaufverfolgungs- und Debugausgaben an ein <see cref="T:System.Diagnostics.EventLog" /> leitet.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse ohne Ablaufverfolgungslistener.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse unter Verwendung des angegebenen Ereignisprotokolls.</summary>
      <param name="eventLog">Das Ereignisprotokoll, in das geschrieben werden soll.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse unter Verwendung der angegebenen Quelle.</summary>
      <param name="source">Der Name einer vorhandenen Ereignisprotokollquelle.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary>Schließt das Ereignisprotokoll, sodass keine Ablaufverfolgungs- oder Debugausgaben mehr empfangen werden.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary>Ruft das Ereignisprotokoll ab, in das geschrieben werden soll, oder legt dieses fest.</summary>
      <returns>Das Ereignisprotokoll, in das geschrieben werden soll.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary>Ruft den Namen dieser <see cref="T:System.Diagnostics.EventLogTraceListener" /> ab oder legt diesen fest.</summary>
      <returns>Der Name des Ablaufverfolgungslisteners.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Schreibt Ablaufverfolgungsinformationen, ein Datenobjekt und Ereignisinformationen in das Ereignisprotokoll.</summary>
      <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
      <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
      <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
      <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <paramref name="source" /> und <paramref name="id" /> bezeichnet ein Ereignis eindeutig.</param>
      <param name="data">Ein Datenobjekt, das in die Ausgabedatei oder den Stream geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> wurde nicht angegeben.
- oder -
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Schreibt Ablaufverfolgungsinformationen, ein Array von Datenobjekten und Ereignisinformationen in das Ereignisprotokoll.</summary>
      <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
      <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
      <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
      <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <paramref name="source" /> und <paramref name="id" /> bezeichnet ein Ereignis eindeutig.</param>
      <param name="data">Ein Array von Datenobjekten.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> wurde nicht angegeben.
- oder -
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Schreibt Ablaufverfolgungsinformationen, eine Meldung und Ereignisinformationen in das Ereignisprotokoll.</summary>
      <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
      <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
      <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
      <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <paramref name="source" /> und <paramref name="id" /> bezeichnet ein Ereignis eindeutig.</param>
      <param name="message">Die Ablaufverfolgungsmeldung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> wurde nicht angegeben.
- oder -
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Schreibt Ablaufverfolgungsinformationen, ein formatiertes Objektarray und Ereignisinformationen in das Ereignisprotokoll.</summary>
      <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
      <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
      <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
      <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <paramref name="source" /> und <paramref name="id" /> bezeichnet ein Ereignis eindeutig.</param>
      <param name="format">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <paramref name="args" />-Array entsprechen.</param>
      <param name="args">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> wurde nicht angegeben.
- oder -
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary>Schreibt eine Meldung in das Ereignisprotokoll für diese Instanz.</summary>
      <param name="message">Die zu schreibende Meldung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> überschreitet 32,766 Zeichen.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary>Schreibt eine Meldung in das Ereignisprotokoll für diese Instanz.</summary>
      <param name="message">Die zu schreibende Meldung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> überschreitet 32,766 Zeichen.</exception>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary>Stellt die Konfigurationseinstellungen dar, mit denen eine Ereignisprotokollquelle auf dem lokalen oder einem Remotecomputer erstellt wird.</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventSourceCreationData" />-Klasse mit einer angegebenen Ereignisquelle und einem angegebenen Ereignisprotokollnamen.</summary>
      <param name="source">Der Name, der im Ereignisprotokoll als Quelle für Einträge registriert werden soll.</param>
      <param name="logName">Der Name des Protokolls, in das Einträge aus der Quelle geschrieben werden.</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary>Ruft die Anzahl der Kategorien in der Kategorieressourcendatei ab oder legt diese fest.</summary>
      <returns>Die Anzahl der Kategorien in der Kategorieressourcendatei. Der Standardwert ist 0 (null).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft ist auf einen negativen Wert oder einen Wert größer als <see cref="F:System.UInt16.MaxValue" /> festgelegt.</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary>Ruft den Pfad der Ressourcendatei ab, die die Kategoriezeichenfolgen für die Quelle enthält, oder legt diesen fest.</summary>
      <returns>Der Pfad der Kategorieressourcendatei. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary>Ruft den Namen des Ereignisprotokolls ab, in das von der Quelle Einträge geschrieben werden, oder legt diesen fest.</summary>
      <returns>Der Name des Ereignisprotokolls. Dabei kann es sich um einen Anwendungs-, einen System- oder einen benutzerdefinierten Protokollnamen handeln. Der Standardwert ist "Anwendung".</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary>Ruft den Namen des Computers ab, auf dem die Ereignisquelle registriert werden soll, oder legt diesen fest.</summary>
      <returns>Der Name des Systems, auf dem die Ereignisquelle registriert werden soll. Der Standardwert ist der lokale Computer („.“).</returns>
      <exception cref="T:System.ArgumentException">Der Computername ist ungültig.</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary>Ruft den Pfad der Meldungsressourcendatei ab, die die Meldungsformatzeichenfolgen für die Quelle enthält, oder legt diesen fest.</summary>
      <returns>Der Pfad der Meldungsressourcendatei. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary>Ruft den Pfad der Ressourcendatei ab, die die Meldungsparameterzeichenfolgen für die Quelle enthält, oder legt diesen fest.</summary>
      <returns>Der Pfad der Parameterressourcendatei. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary>Ruft den Namen zum Registrieren des Ereignisprotokolls als Ereignisquelle ab oder legt diesen fest.</summary>
      <returns>Der Name, der im Ereignisprotokoll als Quelle für Einträge registriert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary>Gibt an, wie Einträge in einem Ereignisprotokoll behandelt werden, das keine weiteren Dateien mehr aufnehmen kann.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary>Gibt an, dass vorhandene Einträge beibehalten und neue Einträge gelöscht werden, wenn die Kapazität des Ereignisprotokolls erschöpft ist.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary>Gibt an, dass durch jeden neuen Eintrag der älteste Eintrag überschrieben wird, wenn die Kapazität des Ereignisprotokolls erschöpft ist.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary>Gibt an, dass Ereignisse, deren Alter den in der <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />-Eigenschaft angegebenen Wert übersteigt, von neuen Ereignissen überschrieben werden, wenn die Kapazität des Ereignisprotokolls erschöpft ist. Neue Ereignisse werden verworfen, wenn die Kapazität des Ereignisprotokolls erschöpft ist und keine Ereignisse vorhanden sind, deren Alter den in der <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />-Eigenschaft angegebenen Wert übersteigt.</summary>
    </member>
  </members>
</doc>