<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis auslöst.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis behandelt.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Fügt dem <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis der angegebenen Quelle den angegebenen Listener hinzu.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Das Objekt, das als Listener hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Ein neues Objekt, mit dem Listener zum <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis behandelt.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Entfernt den angegebenen Listener aus dem <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The listener to remove.">Der zu entfernende Listener.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Beginnt die Überwachung des <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Beendet die Überwachung des <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Fügt dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis der angegebenen Quelle den angegebenen Listener hinzu.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Das Objekt, das als Listener hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Entfernt den angegebenen Listener aus dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The listener to remove.">Der zu entfernende Listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Beginnt die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Beendet die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Stellt Informationen für das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />-Klasse mit dem angegebenen <paramref name="isCancelable" />-Wert.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">Ein Wert, der angibt, ob das Ereignis abgebrochen werden kann.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">Ruft einen Wert ab oder legt ihn fest, der anzeigt, ob das Ereignis abgebrochen werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Ereignis abgebrochen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Wenn der Wert von <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /><see langword="false" /> ist.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">Ruft einen Wert ab, der angibt, ob das Ereignis abgebrochen werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn das Ereignis abgebrochen werden kann, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">Stellt die Methode dar, die das <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />-Ereignis behandelt.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e" vsli:raw="Information about the event.">Informationen zum Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis auslöst.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Fügt dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis der angegebenen Quelle den angegebenen Listener hinzu.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Das Objekt, das als Listener hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Entfernt den angegebenen Listener aus dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The listener to remove.">Der zu entfernende Listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Beginnt die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Beendet die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">Stellt eine Erweiterung von <see cref="T:System.ComponentModel.PropertyDescriptor" /> bereit, die die zusätzliche Eigenschaftenmerkmale einer Abhängigkeitseigenschaft verfügbar macht.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Ermöglicht es, andere Objekte zu benachrichtigen, wenn sich diese Eigenschaft ändert.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Die Komponente, für die der Handler hinzugefügt wird.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Der Delegat, der als Listener hinzugefügt wird.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">Ruft die Auflistung von Attributen für diesen Member ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">Die <see cref="T:System.ComponentModel.AttributeCollection" />-Auflistung von Attributen.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">Gibt zurück, ob durch das Zurücksetzen eines Objekts sein Wert geändert wird.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">Die Komponente, die auf die Fähigkeit des Zurücksetzens zu prüfen ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn durch Zurücksetzen der Komponente deren Wert geändert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Ruft den Namen der Kategorie ab, zu der der Member gehört. Dieser ist im <see cref="T:System.ComponentModel.CategoryAttribute" /> angegeben.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">Der Name der Kategorie, zu der der Member gehört. Wenn keine <see cref="T:System.ComponentModel.CategoryAttribute" />-Klasse vorhanden ist, wird der Kategoriename auf die Standardkategorie <see langword="Misc" /> festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">Enthält den Typ der Komponente, an die diese Eigenschaft gebunden ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">Eine <see cref="T:System.Type" />-Klasse, die den Typ der Komponente darstellt, an die diese Eigenschaft gebunden ist. Wenn <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> oder <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> aufgerufen wird, kann das angegebene Objekt eine Instanz dieses Typs sein.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">Ruft den Typkonverter für diese Eigenschaft ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">Eine <see cref="T:System.ComponentModel.TypeConverter" />-Klasse, die zum Konvertieren der <see cref="T:System.Type" />-Klasse dieser Eigenschaft verwendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">Gibt den Bezeichner der Abhängigkeitseigenschaft zurück.</summary>
      <returns vsli:raw="The dependency property identifier.">Der Bezeichner der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Ruft die Beschreibung des Members ab, die in der <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse angegeben ist.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">Die Beschreibung des Members. Wenn keine <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse vorhanden ist, wird der Eigenschaftswert auf die Standardeinstellung, eine leere Zeichenfolge (""), festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Ruft einen Callback ab, mit dem Designer den effektiven Wert einer Abhängigkeitseigenschaft ändern, bevor der Wert der Abhängigkeitseigenschaft in der Engine für die Abhängigkeitseigenschaft gespeichert wird, oder legt ihn fest.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Ein Callback, mit dem Designer den effektiven Wert einer Abhängigkeitseigenschaft ändern, bevor der Wert der Abhängigkeitseigenschaft in der Engine für die Abhängigkeitseigenschaft gespeichert wird.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Ruft ab, ob dieser Member nur zur Entwurfszeit festgelegt werden darf. Dies ist in der <see cref="T:System.ComponentModel.DesignOnlyAttribute" />-Klasse angegeben.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser Member nur zur Entwurfszeit festgelegt werden darf, <see langword="false" />, wenn der Member zur Laufzeit festgelegt werden kann. Wenn keine <see cref="T:System.ComponentModel.DesignOnlyAttribute" />-Klasse vorhanden ist, wird der Standardwert <see langword="false" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">Ruft den Namen ab, der in einem Fenster, z. B. im Eigenschaftenfenster, angezeigt werden kann.</summary>
      <returns vsli:raw="The name to display for the property.">Der Name, der für die Eigenschaft angezeigt wird.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">Überprüft zwei <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />-Instanzen auf Gleichheit.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">Das <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Objekte äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für einen bereitgestellten Eigenschaftennamen zurück.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Der registrierte Name für eine Abhängigkeitseigenschaft oder eine angefügte Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">Der <see cref="T:System.Type" /> des Objekts, das die Eigenschaftendefinition besitzt.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">Der <see cref="T:System.Type" /> des Objekts, für das Sie die Eigenschaft festlegen möchten.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Der angeforderte <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für einen bereitgestellten Eigenschaftennamen zurück.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Der registrierte Name für eine Abhängigkeitseigenschaft oder eine angefügte Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">Der <see cref="T:System.Type" /> des Objekts, das die Eigenschaftendefinition besitzt.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">Der <see cref="T:System.Type" /> des Objekts, für das Sie die Eigenschaft festlegen möchten.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">Gibt an, dass der Eigenschaftentyp ignoriert werden soll.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Der angeforderte <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für den untergeordneten <see cref="T:System.ComponentModel.PropertyDescriptor" /> zurück.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">Der zu überprüfende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Wenn die von <paramref name="property" /> beschriebene Eigenschaft eine Abhängigkeitseigenschaft ist, wird ein gültiger <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> zurückgegeben. Andernfalls wird ein <see langword="null" />-<see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für eine bereitgestellte Abhängigkeitseigenschaft und einen Zieltyp zurück.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">Der Bezeichner für eine Abhängigkeitseigenschaft.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">Der Typ des Objekts, in dem die Eigenschaft festgelegt wird.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">Ein <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für die bereitgestellte Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">Gibt einen Wert vom Typ <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zurück.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">Eine Komponente, für die die Eigenschaften abgerufen werden sollen.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den Eigenschaften, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">Ruft einen Editor des angegebenen Typs ab.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">Der Basistyp des Editors, der für die Unterscheidung mehrerer von einer Eigenschaft unterstützten Editoren verwendet wird.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">Eine Instanz des angeforderten Editor-Typs oder <see langword="null" />, wenn kein Editor gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Gibt den Hashcode für diese <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">Gibt den aktuellen Wert der Eigenschaft einer Komponente zurück.</summary>
      <param name="component" vsli:raw="The component instance.">Die Komponenteninstanz.</param>
      <returns vsli:raw="The requested value.">Der angeforderte Wert.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">Ruft einen Wert ab, der angibt, ob die Eigenschaft als angefügte Eigenschaft registriert und über eine angehängte Verwendung genutzt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn die Eigenschaft eine angefügte Eigenschaft ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">Ruft einen Wert ab, der den Wert des <see cref="T:System.ComponentModel.BrowsableAttribute" /> der Eigenschaft angibt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.ComponentModel.BrowsableAttribute" /> für die Eigenschaft angegeben wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob diese Eigenschaft gemäß den Angaben in <see cref="T:System.ComponentModel.LocalizableAttribute" /> lokalisiert werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Member mit dem <see cref="T:System.ComponentModel.LocalizableAttribute" />-Konstruktor mit dem Wert true markiert wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">Ruft einen Wert ab, der angibt, ob diese Eigenschaft schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">Ruft die Metadaten ab, die der Abhängigkeitseigenschaft zugeordnet sind.</summary>
      <returns vsli:raw="The dependency property metadata.">Die Metadaten für Abhängigkeitseigenschaften.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Ruft den dargestellten <see cref="T:System.Type" /> der Abhängigkeitseigenschaft ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Der <see cref="T:System.Type" /> der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Ermöglicht es, andere Objekte zu benachrichtigen, wenn sich diese Eigenschaft ändert.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Die Komponente, für die der Handler hinzugefügt wird.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Der Delegat, der als Listener hinzugefügt wird.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">Setzt den Wert für diese Eigenschaft der Komponente auf den Standardwert zurück.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">Die Komponente mit dem Eigenschaftswert, der auf den Standardwert zurückgesetzt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">Legt den Wert der Komponente auf einen anderen Wert fest.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">Die Komponente mit dem Eigenschaftswert, der festgelegt werden soll.</param>
      <param name="value" vsli:raw="The new value.">Der neue Wert.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">Gibt an, ob der Wert dieser Eigenschaft von Serialisierungsprozessen beibehalten werden muss.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">Die Komponente mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Gibt an, ob Wertänderungsbenachrichtigungen für diese Eigenschaft von außerhalb des Eigenschaftendeskriptors stammen dürfen (z. B. von der Komponente) oder ob Benachrichtigungen nur aus direkten Aufrufen von <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> hervorgehen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">
        <see langword="true" />, wenn Wertänderungsbenachrichtigungen für diese Eigenschaft von außerhalb des Eigenschaftendeskriptors stammen dürfen (z. B. von der Komponente). <see langword="false" />, wenn Benachrichtigungen nur aus direkten Aufrufen von <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> stammen können.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">Gibt den <see cref="P:System.ComponentModel.MemberDescriptor.Name" />-Wert zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Beginnt die Überwachung des <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Beendet die Überwachung des <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">Stellt eine abstrakte Basisklasse für Typen bereit, die beschreiben, wie die Elemente in einer Auflistung in Gruppen unterteilt werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.GroupDescription" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Ruft eine benutzerdefinierte Vergleichsfunktion auf, die Gruppen mithilfe eines Objekts sortiert, das <see cref="T:System.Collections.IComparer" /> implementiert, oder legt diese Funktion fest.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Eine benutzerdefinierte Vergleichsfunktion, die Gruppen mithilfe eines Objekts sortiert, das <see cref="T:System.Collections.IComparer" /> implementiert.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">Gibt die Gruppennamen für das angegebene Element zurück.</summary>
      <param name="item" vsli:raw="The item to return group names for.">Das Element, für das Gruppennamen zurückgegeben werden sollen.</param>
      <param name="level" vsli:raw="The level of grouping.">Die Gruppierebene.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">Die <see cref="T:System.Globalization.CultureInfo" />, die dem Konverter bereitgestellt werden soll.</param>
      <returns vsli:raw="The group name(s) for the given item.">Die Gruppennamen für das angegebene Element.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">Ruft die Auflistung von Namen ab, die zum Initialisieren einer Gruppe mit einer Reihe von Untergruppen mit den angegebenen Namen verwendet werden.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">Die Auflistung der Namen, die zum Initialisieren einer Gruppe mit einer Reihe von Untergruppen mit den angegebenen Namen verwendet werden.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">Gibt einen Wert zurück, der angibt, ob der Gruppenname und der Elementname übereinstimmen, sodass das Element zur Gruppe gehört.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">Der Name der zu überprüfenden Gruppe.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">Der Name des zu überprüfenden Elements.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Namen übereinstimmen und das Element zur Gruppe gehört, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argumente des ausgelösten Ereignisses.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">Gibt zurück, ob Serialisierungsprozesse den tatsächlichen Wert der <see cref="P:System.ComponentModel.GroupDescription.GroupNames" />-Eigenschaft bei Instanzen dieser Klasse serialisieren sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="P:System.ComponentModel.GroupDescription.GroupNames" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">Gibt zurück, ob Serialisierungsprozesse den tatsächlichen Wert der <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" />-Eigenschaft bei Instanzen dieser Klasse serialisieren sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">Ruft die Sammlung der Sortierkriterien zum Sortieren der Gruppen ab.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">Die Sammlung der Sortierkriterien zum Sortieren der Gruppen.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">Ermöglicht es Auflistungen, Funktionen zur Verwaltung des aktuellen Datensatzes sowie zum benutzerdefinierten Sortieren, Filtern und Gruppieren anzunehmen.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">Ruft einen Wert ab, der angibt, ob diese Ansicht das Filtern mit der <see cref="P:System.ComponentModel.ICollectionView.Filter" />-Eigenschaft unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Ansicht das Filtern unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">Ruft einen Wert ab, der angibt, ob diese Ansicht das Gruppieren mit der <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />-Eigenschaft unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Ansicht das Gruppieren unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">Ruft einen Wert ab, der angibt, ob diese Ansicht das Sortieren mit der <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />-Eigenschaft unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Ansicht das Sortieren unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">Gibt einen Wert zurück, der angibt, ob ein angegebenes Element zu dieser Auflistungsansicht gehört.</summary>
      <param name="item" vsli:raw="The object to check.">Das zu überprüfende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element zu dieser Auflistungsansicht gehört, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">Ruft die Kulturinformationen für beliebige Vorgänge der Ansicht ab, die im kulturellen Sinne variieren können, z. B. die Sortierung, oder legt diese fest.</summary>
      <returns vsli:raw="The culture to use during sorting.">Die Kultur, die bei der Sortierung verwendet werden soll.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">Lösen Sie beim Implementieren dieser Schnittstelle dieses Ereignis aus, nachdem das aktuelle Element geändert wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">Wenn Sie diese Schnittstelle implementieren, lösen Sie dieses Ereignis aus, bevor das aktuelle Element geändert wird. Der Ereignishandler kann dieses Ereignis abbrechen.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">Ruft das aktuelle Element in der Ansicht ab.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">Das aktuelle Element der Ansicht oder <see langword="null" />, wenn kein aktuelles Element vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Ruft die Ordnungsposition von <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht ab.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Die Ordnungsposition von <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">Wechselt in eine Verzögerungsschleife, mit der Sie Änderungen in der Ansicht zusammenführen und die automatische Aktualisierung verzögern können.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Ein <see cref="T:System.IDisposable" /> -Objekt, das Sie verwenden können, um das aufrufende Objekt zu verwerfen.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">Ruft den Rückruf ab, der verwendet wird, um zu bestimmen, ob ein Element in die Ansicht eingefügt werden kann, oder legt diesen fest.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">Eine Methode, über die bestimmt wird, ob ein Element zum Einfügen in die Ansicht geeignet ist.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Ruft eine Auflistung von <see cref="T:System.ComponentModel.GroupDescription" />-Objekten ab, die das Gruppieren der Elemente in der Auflistung in der Ansicht beschreiben.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Eine Auflistung der <see cref="T:System.ComponentModel.GroupDescription" />-Objekte, die beschreiben, wie die Elemente in der Auflistung in der Ansicht gruppiert werden.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">Ruft die Gruppen der obersten Ebene ab.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">Eine schreibgeschützte Auflistung der Gruppen der obersten Ebene oder <see langword="null" />, wenn keine Gruppen vorhanden sind.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">Ruft einen Wert ab, der angibt, ob sich das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> der Ansicht hinter dem Ende der Auflistung befindet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> der Ansicht hinter dem Ende der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">Ruft einen Wert ab, der angibt, ob sich das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> der Ansicht vor dem Anfang der Auflistung befindet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> , <see langword="false" /> wenn sich der der Ansicht hinter dem Anfang der Auflistung befindet, andernfalls.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">Gibt einen Wert zurück, der angibt, ob die resultierende Ansicht leer ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Ansicht leer ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Legt das angegebene Element als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht fest.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Das Element, das als das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> festgelegt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Legt das erste Element in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Legt das letzte Element in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> ein Element innerhalb der Ansicht ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Legt das Element nach dem <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Legt das Element am angegebenen Index als das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht fest.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">Der Index, auf den das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> festgelegt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Legt das Element vor <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">Erstellt die Ansicht neu.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Ruft eine Auflistung der <see cref="T:System.ComponentModel.SortDescription" />-Objekte ab, die die Sortierung der Elemente in der Ansicht beschreiben.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Eine Auflistung der <see cref="T:System.ComponentModel.SortDescription" />-Objekte, die die Sortierung der Elemente in der Ansicht beschreibt.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">Gibt die zugrunde liegende Auflistung zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">Ein <see cref="T:System.Collections.IEnumerable" />-Objekt, das die zugrunde liegende Auflistung ist.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">Eine Schnittstelle, die die Implementierung von Auflistungen ermöglicht, um eine Ansicht der entsprechenden Daten zu erstellen. Normalerweise ruft Benutzercode für diese Schnittstelle keine Methoden auf.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">Erstellt eine neue Ansicht für die Auflistung, die diese Schnittstelle implementiert. I. d. R. ruft Benutzercode diese Methode nicht auf.</summary>
      <returns vsli:raw="The newly created view.">Die neu erstellte Ansicht.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">Definiert Eigenschaften, die die Sortierung, Gruppierung und das Filtern einer <see cref="T:System.Windows.Data.CollectionView" /> in Echtzeit ermöglichen.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht das Ein- oder Ausschalten von Filterdaten in Echtzeit unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistungsansicht das Ein- oder Ausschalten der dynamischen Filterung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht Aktivieren/Deaktivieren von Gruppieren von Daten in Echtzeit unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistungsansicht das Ein- und Ausschalten von aktiver Gruppierung unterstützt; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht Aktivieren/Deaktivieren von Sortieren von Daten in Echtzeit unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistungsansicht das Ein- und Ausschalten von aktiver Sortierung unterstützt; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">Ruft einen Wert ab, der angibt, ob die Filterung von Daten in Echtzeit aktiviert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">
        <see langword="true" />, wenn die Filterung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Filterung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Filterung implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">Ruft einen Wert ab, der angibt, ob die Gruppierung von Daten in Echtzeit aktiviert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">
        <see langword="true" />, wenn die Gruppierung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Gruppierung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Gruppierung implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">Ruft einen Wert ab, der angibt, ob die Sortierung in Echtzeit aktiviert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">
        <see langword="true" />, wenn die Sortierung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Sortierung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Sortierung implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">Ruft eine Auflistung von Zeichenfolgen an, die die Eigenschaften angeben, die am Filtern von Daten in Echtzeit beteiligt sind.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Filtern von Daten in Echtzeit beteiligt sind.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">Ruft eine Auflistung von Zeichenfolgen ab, die die Eigenschaften angeben, die am Gruppieren von Daten in Echtzeit beteiligt sind.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Gruppieren von Daten in Echtzeit beteiligt sind.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">Ruft eine Auflistung von Zeichenfolgen ab, die die Eigenschaften angeben, die am Sortieren von Daten in Echtzeit beteiligt sind.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Sortieren von Daten in Echtzeit beteiligt sind.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">Definiert Methoden und Eigenschaften, die eine <see cref="T:System.Windows.Data.CollectionView" /> implementiert, um Bearbeitungsfunktionen für eine Auflistung bereitzustellen.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">Fügt der Auflistung ein neues Element hinzu.</summary>
      <returns vsli:raw="The new item that is added to the collection.">Das neue Element, das der Auflistung hinzugefügt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">Ruft einen Wert ab, der angibt, ob der Auflistung ein neues Element hinzugefügt werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Auflistung ein neues Element hinzugefügt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">Beendet die Transaktion zum Bearbeiten und stellt, wenn möglich, den ursprünglichen Wert des Elements wieder her.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">Beendet die Transaktion zum Hinzufügen und verwirft das ausstehende neue Element.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">Ruft einen Wert ab, der angibt, ob ein Element aus der Auflistung entfernt werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Element aus der Auflistung entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">Beendet die Transaktion zum Bearbeiten und speichert die ausstehenden Änderungen.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">Beendet die Transaktion zum Hinzufügen und speichert das ausstehende neue Element.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">Ruft das Element ab, das während der aktuellen Hinzufügetransaktion hinzugefügt wird.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Das Element, das hinzugefügt wird, wenn <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /><see langword="true" /> ist, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">Ruft das Element in der Auflistung ab, das gerade bearbeitet wird.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Das Element in der Auflistung, die gerade bearbeitet wird, wenn <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> gleich <see langword="true" /> ist, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">Startet eine Transaktion zum Bearbeiten des angegebenen Elements.</summary>
      <param name="item" vsli:raw="The item to edit.">Das zu bearbeitende Element.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">Ruft einen Wert ab, der angibt, ob eine Transaktion zum Hinzufügen ausgeführt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn gegenwärtig eine Transaktion zum Hinzufügen ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">Ruft einen Wert ab, der angibt, ob eine Transaktion zum Bearbeiten ausgeführt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Transaktion zum Bearbeiten ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">Ruft die Position des neuen Elementplatzhalters in der Auflistungsansicht ab oder legt sie fest.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">Einer der Enumerationswerte, der die Position des neuen Elementplatzhalters in der Auflistungsansicht angibt.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">Entfernt das angegebene Element aus der Auflistung.</summary>
      <param name="item" vsli:raw="The item to remove.">Das zu entfernende Element.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">Die Position des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in der Auflistungsansicht.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">Definiert Methoden und Eigenschaften, die eine <see cref="T:System.Windows.Data.CollectionView" /> implementiert, um das Angeben von hinzufügenden Elementen eines bestimmten Typs zu ermöglichen.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">Fügt der Auflistung das angegebene Objekt hinzu.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <returns vsli:raw="The object that is added to the collection.">Das Objekt, das der Auflistung hinzugefügt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">Ruft einen Wert ab, der angibt, ob der Auflistung ein angegebenes Objekt hinzugefügt werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Auflistung ein bestimmtes Objekt hinzugefügt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">Definiert eine Eigenschaft, die Informationen zu den Eigenschaften eines Objekts bereitstellt.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">Ruft eine Auflistung ab, die Informationen zu den Eigenschaften enthält, die für die Elemente in einer Auflistung verfügbar sind.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">Eine Auflistung, die Informationen zu den Eigenschaften enthält, die für die Elemente in einer Auflistung verfügbar sind.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">Enthält Informationen über eine Eigenschaft.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ItemPropertyInfo" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the property.">Den Namen der Eigenschaft.</param>
      <param name="type" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">Ein Objekt, das zusätzliche Informationen über die Eigenschaft enthält.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">Ruft ein Objekt ab, das zusätzliche Informationen über die Eigenschaft enthält.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">Ein Objekt, das zusätzliche Informationen über die Eigenschaft enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">Ruft den Namen der Eigenschaft ab.</summary>
      <returns vsli:raw="The name of the property.">Den Namen der Eigenschaft.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">Ruft den Typ der Eigenschaft ab.</summary>
      <returns vsli:raw="The type of the property.">Den Typ der Eigenschaft.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">Gibt an, an welcher Position in der Auflistung sich der Platzhalter für ein neues Element befindet.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">Der Platzhalter für ein neues Element befindet sich am Anfang der Auflistung.  Neue Elemente befinden sich am Anfang der Auflistung nach dem Platzhalter für neue Elemente.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">Der Platzhalter für ein neues Element befindet sich am Ende der Auflistung. Neue Elemente werden am Ende der Auflistung vor dem Platzhalter für neue Elemente hinzugefügt.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">In der Auflistung wird kein Platzhalter für neue Elemente verwendet. Die Position von hinzugefügten Elementen hängt von der zugrunde liegenden Auflistung ab.  Normalerweise werden sie am Ende der Auflistung hinzugefügt.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis für die angegebene Eigenschaft auslöst.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis behandelt.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Mehr als eine Methode wird dem <paramref name="handler" /> zugeordnet.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">Fügt den angegebenen Listener der Liste von Listenern in der angegebenen Quelle hinzu.</summary>
      <param name="source" vsli:raw="The object with the event.">Das Objekt mit dem Ereignis.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Das Objekt, das als Listener hinzugefügt werden soll.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">Entfernt nicht mehr aktive Listener aus den Daten für die bereitgestellte Quelle.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">Quellobjekt, aus dem alle Listener entfernt werden sollen.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">Die zu bereinigenden Daten. Erwartet wird ein <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">Legen Sie dies auf <see langword="true" />, um das Überwachen zu beenden und alle Daten vollständig zu entfernen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn einige Einträge entfernt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis auslöst.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis behandelt.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die nicht mehr auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Mehr als eine Methode wird dem <paramref name="handler" /> zugeordnet.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">Entfernt den angegebenen Listener aus der Liste der Listener in der bereitgestellten Quelle.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">Das Objekt, aus dem der Listener entfernt werden soll.</param>
      <param name="listener" vsli:raw="The listener to remove.">Der zu entfernende Listener.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die nicht mehr auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Beginnt die Überwachung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses für die bereitgestellte Quelle.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Das Objekt, für das die Überwachung von <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> gestartet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Beendet die Überwachung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses für die bereitgestellte Quelle.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Das Quellobjekt, für das die Überwachung von <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> beendet werden soll.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">Gibt an, welche Eigenschaften von Typdeskriptoren (besonders der <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />-Methode) gemeldet werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyFilterAttribute" />-Klasse.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">Die Optionen, die diesen Eigenschaftenfilter beschreiben.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut mit einem angegebenen Objekt übereinstimmt.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Das mit diesem <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> gleich der aktuellen <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Ruft die Filteroptionen für dieses <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut ab.</summary>
      <returns vsli:raw="The property filter options.">Die Eigenschaftenfilteroptionen.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Gibt den Hashcode für das aktuelle <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut zurück.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Ein 32-Bit-Ganzzahlwert mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">Gibt einen Wert zurück, der angibt, ob die Eigenschaftenfilteroptionen für das aktuelle <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut mit den Eigenschaftenfilteroptionen des bereitgestellten Objekts übereinstimmen.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Das zu vergleichende Objekt. Bei diesem Objekt wird erwartet, dass es sich um ein <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> handelt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Übereinstimmung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">Gibt an, welche Eigenschaften von Typdeskriptoren (besonders der <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />-Methode) gemeldet werden sollen. Diese Enumeration wird verwendet, um den Wert der <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />-Eigenschaft anzugeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">Alle Eigenschaften zurückgeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">Nur die Eigenschaften zurückgeben, die im aktuellen Kontext des Objekts ungültig sind.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">Keine Eigenschaften zurückgeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">Nur die Eigenschaften zurückgeben, die über aktuell festgelegte lokale Werte verfügen.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">Nur die Eigenschaften zurückgeben, für die keine lokalen Werte oder keine Eigenschaften in einem externen Ausdrucksspeicher (z. B. Bindung oder zurückgestellte Ressource) festgelegt wurden.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">Jede Eigenschaft zurückgeben, die für das Objekt im aktuellen Bereich gültig ist</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">Definiert die Richtung und den Eigenschaftennamen, die als Kriterien für das Sortieren einer Auflistung verwendet werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SortDescription" />-Struktur.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">Der Name der Eigenschaft, nach der die Liste sortiert werden soll.</param>
      <param name="direction" vsli:raw="The sort order.">Die Sortierreihenfolge</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">Der <paramref name="direction" />-Parameter gibt keinen gültigen Wert an.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">Ruft einen Wert ab, der angibt, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgen soll, oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">Ein <see cref="T:System.ComponentModel.ListSortDirection" />-Wert, der angibt, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgen soll.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">Vergleicht die angegebene Instanz und die aktuelle Instanz von <see cref="T:System.ComponentModel.SortDescription" /> auf Wertgleichheit.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">Die zu vergleichende <see cref="T:System.ComponentModel.SortDescription" />-Instanz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <see langword="true" />, wenn <paramref name="obj" /> und diese Instanz von <see cref="T:System.ComponentModel.SortDescription" /> dieselben Werte aufweisen.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Gibt den Hashcode für diese Instanz von <see cref="T:System.ComponentModel.SortDescription" /> zurück.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Der Hashcode für diese Instanz von <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">Ruft einen Wert ab, der angibt, ob sich dieses Objekt in einem unveränderlichen Zustand befindet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses Objekt derzeit verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">Überprüft zwei <see cref="T:System.ComponentModel.SortDescription" />-Objekte auf Wertgleichheit.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Die erste zu vergleichende Instanz.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Die zweite zu vergleichende Instanz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden Objekte gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">Überprüft zwei <see cref="T:System.ComponentModel.SortDescription" />-Objekte auf Ungleichheit der Werte.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Die erste zu vergleichende Instanz.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Die zweite zu vergleichende Instanz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Werte nicht gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">Ruft den Eigenschaftennamen ab, der als Sortierungskriterien verwendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="The default value is null.">Der Standardwert ist NULL.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">Stellt eine Auflistung von<see cref="T:System.ComponentModel.SortDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SortDescriptionCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Tritt auf, wenn ein Element hinzugefügt oder entfernt wird.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">Ruft eine leere und nicht änderbare Instanz von <see cref="T:System.ComponentModel.SortDescriptionCollection" /> ab.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">Der nullbasierte Index, in den das <paramref name="item" /> eingefügt wird.</param>
      <param name="item" vsli:raw="The object to insert.">Das einzufügende Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">Entfernt das Element am angegebenen Index in der Auflistung.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Der nullbasierte Index des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">Ersetzt das Element am angegebenen Index.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">Der neue Wert für das Element am angegebenen Index.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Tritt auf, wenn ein Element hinzugefügt oder entfernt wird.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">Beschreibt den Grad der Ausführlichkeit für die Ablaufverfolung eines bestimmten Objekts.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">Zeichnet alle zusätzlichen Informationen auf.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">Zeichnet einige zusätzlichen Informationen auf.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">Zeichnet eine mittlere Menge zusätzlicher Informationen auf.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">Zeichnet keine verfügbaren zusätzlichen Informationen auf.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">Bietet die Unterstützung der Debugablaufverfolgung, die speziell auf WPF-Anwendungen (Windows Presentation Foundation) ausgerichtet ist.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">Ruft eine Animations-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="An animation trace source.">Eine Animations-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">Ruft eine Datenbindungs-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A data-binding trace source.">Eine Datenbindungs-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">Ruft eine Ablaufverfolgungsquelle für die Abhängigkeitseigenschaft ab.</summary>
      <returns vsli:raw="A dependency property trace source.">Eine Ablaufverfolgungsquelle für die Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">Ruft eine Dokument-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A document trace source.">Eine Dokument-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Ruft eine Freezable-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A Freezable trace source.">Eine Freezable-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">Ruft den Wert der angefügten <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaft für ein angegebenes Element ab.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">Das Element, aus dem der Eigenschaftswert gelesen wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">Der <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaftswert für das Element.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">Ruft eine HWND-Hostablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="An hwnd host trace source.">Eine HWND-Hostablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">Ruft eine Markup-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A markup trace source.">Eine Markup-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">Ruft eine Namensbereich-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A name scope trace source.">Eine Namensbereich-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">Aktualisiert Ablaufverfolgungsquellen, indem das erneute Lesen der Datei app.config erzwungen wird.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">Ruft eine Ressourcenwörterbuch-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A resource dictionary trace source.">Eine Ressourcenwörterbuch-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">Ruft eine Ablaufverfolgungsquelle für das Routingereignis ab.</summary>
      <returns vsli:raw="A routed event trace source.">Die Ablaufverfolgungsquelle für das Routingereignis.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">Legt den Wert der angefügten <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaft auf ein angegebenes Element fest.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">Das Element, in das die angefügte Eigenschaft geschrieben wird.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">Der erforderliche <see cref="T:System.Diagnostics.PresentationTraceLevel" />-Wert.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">Ruft eine Shell-Ablaufverfolgungsquelle ab.</summary>
      <returns vsli:raw="A shell trace source.">Eine Shell-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">Bezeichnet die angefügte <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaft.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine Eingabedatei oder ein Datenstream nicht mit einer bestimmten Dateiformatspezifikation übereinstimmt.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse und initialisiert sie mit serialisierten Daten. Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem angegebenen Ausnahmetyp.</summary>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
      <param name="innerException">Der Wert der <see cref="P:System.Exception.InnerException" />-Eigenschaft, der die Ursache der aktuellen Ausnahme darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert und einem Ausnahmetyp.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
      <param name="innerException">Der Wert der <see cref="P:System.Exception.InnerException" />-Eigenschaft, der die Ursache der aktuellen Ausnahme darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert und einer angegebenen Fehlermeldung.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert, einer angegebenen Fehlermeldung und einem Ausnahmetyp.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
      <param name="innerException">Der Wert der <see cref="P:System.Exception.InnerException" />-Eigenschaft, der die Ursache der aktuellen Ausnahme darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit dem Dateinamen und zusätzlichen Informationen zur Ausnahme fest.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Ruft den Namen einer Datei ab, die die <see cref="T:System.IO.FileFormatException" /> verursacht hat.</summary>
      <returns>Ein <see cref="T:System.Uri" />, der den Namen der Datei darstellt, die die Ausnahme verursacht hat.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">Gibt den Speicherort des X.509-Zertifikats an, das zum Signieren verwendet wird.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">Das Zertifikat ist in sein eigenes <see cref="T:System.IO.Packaging.PackagePart" /> eingebettet.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">Das Zertifikat ist in dem <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> eingebettet, das für die Signatur erstellt wird, die hinzugefügt wird.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">Das Zertifikat ist nicht in das Paket eingebettet.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Gibt den Komprimierungsgrad für Inhalt an, der in einem <see cref="T:System.IO.Packaging.PackagePart" /> gespeichert ist.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>Die Komprimierung ist für Größe optimiert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>Die Komprimierung ist für die Größe optimiert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>Die Komprimierung ist für eine Balance zwischen Größe und Leistung optimiert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>Die Komprimierung ist deaktiviert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>Die Komprimierung ist für hohe Leistung optimiert.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">Stellt eine OLE-Verbunddatei dar, die ein verschlüsseltes Paket enthält.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">Schließt das verschlüsselte Paket und die OLE-Verbunddatei, in der es enthalten ist.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">Erstellt im angegebenen Stream einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> und gibt diesen zurück.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Der Stream, in dem die Datei erstellt werden soll.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> stellt keinen Lese-/Schreibzugriff bereit.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, gibt diesen zurück und weist ihm den angegebenen Dateinamen zu.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Der Name der OLE-Verbunddatei.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (im angegeben Stream), der das angegebene unverschlüsseltes Paket als Inhalt verwendet, und gibt ihn zurück.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Der Stream, in dem die Datei erstellt werden soll.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> oder <paramref name="packageStream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> stellt keinen Lese-/Schreibzugriff bereit.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der das angegebene unverschlüsselte Paket als Inhalt verwendet, und weist ihm den angegebenen Dateinamen zu.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Der Name der OLE-Verbunddatei.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> oder <paramref name="packageStream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Gibt alle vom <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">Ruft einen Wert ab, der angibt, ob die Datei mit Lesezugriff, Schreibzugriff oder mit Lese- und Schreibzugriff geöffnet wurde.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">Der <see cref="T:System.IO.FileAccess" />-Wert, der zum Öffnen der Datei verwendet wurde.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">Leeren Sie den Stream sowohl für den <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> als auch für seinen Paketinhalt.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Ruft das verschlüsselte Paket im <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">Das <see cref="T:System.IO.Packaging.Package" /> im Envelope.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">Ruft einen Wert ab, der angibt, ob der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</summary>
      <param name="stream" vsli:raw="The stream that is tested.">Der Stream, der überprüft wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">Ruft einen Wert ab, der angibt, ob die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</summary>
      <param name="fileName" vsli:raw="The file that is tested.">Die Datei, die überprüft wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">Öffnet das verschlüsselte Paket im angegebenen Stream.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">Der Stream, der das verschlüsselte Paket enthält.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">Öffnet das verschlüsselte Paket in der angegebenen Datei als schreibgeschütztes und nicht freigegebenes Paket.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Die Datei, die das verschlüsselte Paket enthält.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">Öffnet das verschlüsselte Paket in der angegebenen Datei als nicht freigegebenes Paket mit dem angegebenen Zugriff.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Die Datei, die das verschlüsselte Paket enthält.</param>
      <param name="access" vsli:raw="The type of access.">Der Zugriffstyp.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">Öffnet das verschlüsselte Paket in der angegebenen Datei und weist ihm den angegebenen Zugriff und die angegebene Freigabeoption zu.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Die Datei, die das verschlüsselte Paket enthält.</param>
      <param name="access" vsli:raw="The type of access.">Der Zugriffstyp.</param>
      <param name="sharing" vsli:raw="The type of sharing.">Der Typ der Freigabe.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">Ruft die Hauptpaketeigenschaften (z. B. Titel und Betreff) des durch Rechteverwaltung geschützten Dokuments ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">Die <see cref="T:System.IO.Packaging.PackageProperties" /> für das Paket.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">Ruft die im <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> gespeicherten Rechteverwaltungsinformationen und insbesondere die <see cref="T:System.Security.RightsManagement.PublishLicense" />- und <see cref="T:System.Security.RightsManagement.UseLicense" />-Elemente ab, die in der OLE-Verbunddatei gespeichert werden, die das durch Rechteverwaltung geschützte Paket darstellt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">Die <see cref="T:System.IO.Packaging.RightsManagementInformation" /> für das Paket.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">Ruft ein Objekt ab, das den Zugriff auf die Verbunddateistreams außerhalb des verschlüsselten Pakets ermöglicht.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">Eine <see cref="T:System.IO.Packaging.StorageInfo" />, die die Streams in der OLE-Verbunddatei darstellt, die sich außerhalb des verschlüsselten Pakets befinden.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Gibt die Verschlüsselungsoption für Parts in einem <see cref="T:System.IO.Packaging.Package" /> an.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Keine Verschlüsselung.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Durch Rechteverwaltung unterstützte Verschlüsselung.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">Stellt die Methode dar, die das <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> behandelt, das ausgelöst wird, wenn <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> eine ungültige Signatur erkennt.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">Die ungültige <see cref="T:System.IO.Packaging.PackageDigitalSignature" />-Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The event data.">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Stellt einen Container dar, der mehrere Datenobjekte speichern kann.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.Package" />-Klasse, die einen angegebenen <see cref="T:System.IO.FileAccess" /> verwendet.</summary>
      <param name="openFileAccess">Die Datei-E/A-Berechtigungen für das Paket.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="openFileAccess" /> ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Speichert und schließt das Paket sowie alle zugrunde liegenden Partstreams.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Erstellt ein neues unkomprimiertes Part mit einem angegebenen URI und Inhaltstyp.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) des neuen Segments.</param>
      <param name="contentType">Der Inhaltstyp des Datenstreams.</param>
      <returns>Das neu erstellte Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> oder <paramref name="contentType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
      <exception cref="T:System.InvalidOperationException">Im Paket ist bereits ein Part mit dem angegebenen <paramref name="partUri" /> vorhanden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann kein neues Part hinzugefügt werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Erstellt ein neues Part mit einem angegebenen URI, einem angegebenen Inhaltstyp und einer angegebenen Komprimierungsoption.</summary>
      <param name="partUri">Der URI des neuen Segments.</param>
      <param name="contentType">Der Inhaltstyp des Datenstreams.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> oder <see cref="F:System.IO.Packaging.CompressionOption.Normal" />-Komprimierung.</param>
      <returns>Das neu erstellte Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> oder <paramref name="contentType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI (Uniform Resource Identifier).</exception>
      <exception cref="T:System.InvalidOperationException">Im Paket ist bereits ein Part mit dem angegebenen <paramref name="partUri" /> vorhanden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="compressionOption" />-Wert ist nicht zulässig.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann kein neues Part hinzugefügt werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse ein neues Part im Paket.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) für das Segment, das erstellt wird.</param>
      <param name="contentType">Der Inhaltstyp des Datenstreams.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream.</param>
      <returns>Das erstellte Part.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Erstellt eine Beziehung auf Paketebene zu einem Part mit einem angegebenen URI, einem angegebenen Zielmodus und einem angegebenen Beziehungstyp.</summary>
      <param name="targetUri">Der URI (Uniform Resource Identifier) des Zielsegments.</param>
      <param name="targetMode">Gibt an, ob das Zielpart<see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das Paket ist.</param>
      <param name="relationshipType">Ein URI, der die Rolle der Beziehung eindeutig definiert.</param>
      <returns>Die Beziehung auf Paketebene zu dem angegebenen Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das <paramref name="targetUri" />-Part ist eine <see cref="T:System.IO.Packaging.PackageRelationship" />, oder <paramref name="targetMode" /> ist <see cref="F:System.IO.Packaging.TargetMode.Internal" />, und <paramref name="targetUri" /> ist ein absoluter URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="targetMode" /> ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Erstellt eine Beziehung auf Paketebene zu einem Part mit einem angegebenen URI, einem angegebenen Zielmodus, einem angegebenen Beziehungstyp und einer angegebenen Bezeichner (identifier; ID).</summary>
      <param name="targetUri">Der URI (Uniform Resource Identifier) des Zielsegments.</param>
      <param name="targetMode">Gibt an, ob das Zielpart<see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das Paket ist.</param>
      <param name="relationshipType">Ein URI, der die Rolle der Beziehung eindeutig definiert.</param>
      <param name="id">Ein eindeutiger XML-Bezeichner.</param>
      <returns>Die Beziehung auf Paketebene zu dem angegebenen Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das <paramref name="targetUri" />-Part ist eine <see cref="T:System.IO.Packaging.PackageRelationship" />, oder <paramref name="targetMode" /> ist <see cref="F:System.IO.Packaging.TargetMode.Internal" />, und <paramref name="targetUri" /> ist ein absoluter URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="targetMode" /> ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner, oder im Paket ist bereits ein Part mit der angegebenen <paramref name="id" /> vorhanden.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Löscht ein Part mit einem angegebenen URI aus dem Paket.</summary>
      <param name="partUri">Der URI des zu löschenden Segments.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>Löscht beim Überschreiben in einer abgeleiteten Klasse ein Part mit einem angegebenen URI.</summary>
      <param name="partUri">Der <see cref="P:System.IO.Packaging.PackagePart.Uri" /> des zu löschenden <see cref="T:System.IO.Packaging.PackagePart" />.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Löscht eine Beziehung auf Paketebene.</summary>
      <param name="id">Der <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> des zu löschenden <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Leert und speichert den Inhalt von allen Parts und Beziehungen, schließt das Paket und gibt alle Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Ruft die Dateizugriffseinstellung für das Paket ab.</summary>
      <returns>Einer der <see cref="T:System.IO.FileAccess" />-Werte: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> oder <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Speichert die Inhalte von allen Parts und Beziehungen, die im Paket enthalten sind.</summary>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt und kann nicht geändert werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>Speichert beim Überschreiben in einer abgeleiteten Klasse die Inhalte aller Parts und Beziehungen im Speicher der abgeleiteten Klasse.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Gibt das Part mit einem angegebenen URI zurück.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) des zurückzugebenden Segments.</param>
      <returns>Das Part mit dem angegebenen <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI (Uniform Resource Identifier).</exception>
      <exception cref="T:System.InvalidOperationException">Ein Part mit dem angegebenen <paramref name="partUri" /> ist nicht im Paket enthalten.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das von einem angegebenen URI adressierte Part zurück.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) des abzurufenden Segments.</param>
      <returns>Das angeforderte Part oder <see langword="null" />, wenn kein Part mit dem angegebenen <paramref name="partUri" /> im Paket vorhanden ist.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Gibt eine Auflistung aller Parts im Paket zurück.</summary>
      <returns>Eine Auflistung aller <see cref="T:System.IO.Packaging.PackagePart" />-Elemente, die im Paket enthalten sind.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array aller Parts im Paket zurück.</summary>
      <returns>Ein Array aller Parts, die im Paket enthalten sind.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Gibt die Beziehung auf Paketebene zu einem angegebenen Bezeichner zurück.</summary>
      <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zurückzugebenden Beziehung.</param>
      <returns>Die Beziehung auf Paketebene mit der angegebenen <paramref name="id" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.InvalidOperationException">Das Paket enthält keine Beziehung mit der angegebenen <paramref name="id" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Gibt eine Auflistung aller Beziehungen auf Paketebene zurück.</summary>
      <returns>Eine Auflistung aller Beziehungen auf Paketebene, die im Paket enthalten werden.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Gibt eine Auflistung aller Beziehungen auf Paketebene zurück, die mit einem angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> übereinstimmen.</summary>
      <param name="relationshipType">Der <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />, der verglichen und in der Auflistung zurückgegeben werden soll.</param>
      <returns>Eine Auflistung der Beziehungen auf Paketebene, die mit dem angegebenen <paramref name="relationshipType" /> übereinstimmen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Öffnet ein Paket in einem angegebenen E/A-Stream.</summary>
      <param name="stream">Der E/A-Stream, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Für das zu öffnende Paket ist eine Lese- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist lesegeschützt. Oder für das zu öffnende Paket ist eine Schreib- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Öffnet ein Paket mit einem angegebenen E/A-Stream und Dateimodus.</summary>
      <param name="stream">Der E/A-Stream, in dem das Paket geöffnet werden soll.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="packageMode" />-Wert ist ungültig.</exception>
      <exception cref="T:System.IO.IOException">Für das zu öffnende Paket ist eine Lese- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist lesegeschützt. Oder für das zu öffnende Paket ist eine Schreib- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Öffnet ein Paket mit einem angegebenen E/A-Stream, einem angegebenen Dateimodus und einer angegebenen Dateizugriffseinstellung.</summary>
      <param name="stream">Der E/A-Stream, in dem das Paket geöffnet werden soll.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <param name="packageAccess">Der Dateizugriff, mit dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" /> oder <paramref name="packageAccess" /> ist ungültig.</exception>
      <exception cref="T:System.IO.IOException">Für das zu öffnende Paket ist eine Lese- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist lesegeschützt. Oder für das zu öffnende Paket ist eine Schreib- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Öffnet ein Paket mit einem angegebenen Pfad und Dateinamen.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Öffnet mithilfe einer angegebenen Dateimethode ein Paket in einem angegebenen Pfad.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" /> ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Öffnet mit einem angegebenen Dateimodus und einer angegebenen Dateizugriffseinstellung ein Paket in einem angegebenen Pfad.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <param name="packageAccess">Der Dateizugriff, mit dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" /> oder <paramref name="packageAccess" /> ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Öffnet mit einem angegebenen Dateimodus, einer angegebenen Dateizugriffseinstellung und einer angegebenen Dateifreigabeeinstellung ein Paket in einem angegebenen Pfad.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <param name="packageAccess">Der Dateizugriff, mit dem das Paket geöffnet werden soll.</param>
      <param name="packageShare">Der Dateifreigabemodus, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" />, <paramref name="packageAccess" /> oder <paramref name="packageShare" /> ist ungültig.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Ruft die Haupteigenschaften des Pakets ab.</summary>
      <returns>Die Haupteigenschaften des Pakets.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Gibt an, ob ein Part mit einem angegebenen URI im Paket vorhanden ist.</summary>
      <param name="partUri">Der zu überprüfende <see cref="T:System.Uri" /> des Parts.</param>
      <returns>
        <see langword="true" />, wenn ein Part mit dem angegebenen <paramref name="partUri" /> im Paket enthalten ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI (Uniform Resource Identifier).</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Informationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Gibt an, ob eine Beziehung auf Paketebene mit einer angegebenen ID im Paket enthalten ist.</summary>
      <param name="id">Die zu überprüfende <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der Beziehung.</param>
      <returns>
        <see langword="true" />, wenn eine Beziehung auf Paketebene mit der angegebenen <paramref name="id" /> im Paket vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die Anwendungsverwendung vorgesehen.  Verwenden Sie stattdessen die typsichere <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />-Methode.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">Stellt eine digitale Signatur dar, die auf einen Satz von Paketteilen und Beziehungen angewendet wird.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">Ruft die Option für die X.509-Zertifikateinbettung ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">Einer der <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />-Werte, der die Option für die digitale Signatur angibt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">Gibt eine sortierte Liste der auf ein angegebenes Part angewendeten <see cref="T:System.Security.Cryptography.Xml.Transform" />-Operationen zurück.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">Der <see cref="T:System.Uri" /> des <see cref="T:System.IO.Packaging.PackagePart" />, für das die Transformationsliste zurückgegeben werden soll.</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">Eine sortierte Liste von URI-Zeichenfolgen, z. B. <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> oder <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, die die kanonischen XML-Transformationen darstellt, die auf das Part mit dem angegebenen <paramref name="partName" />-URI angewendet wurden.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">Ruft die digitale XML-Signatur ab oder legt diese fest.</summary>
      <returns vsli:raw="The XML digital signature.">Die digitale XML-Signatur.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">Ruft das <see cref="T:System.IO.Packaging.PackagePart" /> ab, das die Signatur enthält.</summary>
      <returns vsli:raw="The package part that contains the signature.">Das Paketpart, das die Signatur enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">Ruft die URI-Zeichenfolge ab, die den Signaturtyp angibt.</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">Eine URI-Zeichenfolge, die den Signaturtyp identifiziert. Die Standardeinstellung ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Ruft den verschlüsselten Hashwert der <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> ab.</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Ein Bytearray, das den verschlüsselten Hashwert der <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">Ruft eine Auflistung aller mit der Signatur signierten <see cref="T:System.IO.Packaging.PackagePart" />-Objekte ab.</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">Eine Auflistung, die alle mit der Signatur signierten Paketparts enthält.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Ruft die Liste der <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts ab, die mit der Signatur signiert wurden.</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Die Liste der <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts, die mit der Signatur signiert wurden.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">Ruft das X.509-Zertifikat des Signaturgebers ab.</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Das digitale Zertifikat des Signaturgebers oder <see langword="null" />, wenn das Zertifikat nicht im <see cref="T:System.IO.Packaging.Package" /> gespeichert ist.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">Ruft Datum und Uhrzeit der Signaturerstellung ab.</summary>
      <returns vsli:raw="The date and time that the signature was created.">Datum und Uhrzeit der Signaturerstellung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Ruft das Format des Datums und der Uhrzeit ab, die von der <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />-Eigenschaft zurückgegeben werden.</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Das Format des Datums und der Uhrzeit, die von der <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />-Eigenschaft zurückgegeben werden.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">Überprüft die digitale Signatur anhand eines X.509-Zertifikats.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" />, wenn die Überprüfung erfolgreich durchgeführt wurde, andernfalls einer der <see cref="T:System.IO.Packaging.VerifyResult" />-Werte, die ein Problem kennzeichnen.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">Überprüft die digitale Signatur anhand eines angegebenen X.509-Zertifikats.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">Das X.509-Zertifikat des Signaturgebers, mit dem die digitale Signatur überprüft wird.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" />, wenn die Überprüfung erfolgreich durchgeführt wurde, andernfalls einer der <see cref="T:System.IO.Packaging.VerifyResult" />-Werte, die ein Problem kennzeichnen.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Stellt eine Dienstprogrammklasse für die Erstellung und Überprüfung von digitalen Signaturen in einem <see cref="T:System.IO.Packaging.Package" /> bereit.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" />-Klasse für die Verwendung mit einem angegebenen <see cref="T:System.IO.Packaging.Package" />.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">Das diesem Signatur-Manager zugeordnete Paket.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">Ruft die Option zum Einbetten des X.509-Zertifikats ab oder legt diese fest, die von der <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />-Methode zum digitalen Signieren von Paketteilen verwendet wird.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">Einer der <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />-Werte.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">Signiert alle Signaturen im Paket mit einem vom Benutzer ausgewähltenX.509-Zertifikat gegen.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">Die Signatur, die als Gegensignatur hinzugefügt wurde, oder <see langword="null" />, wenn kein Zertifikat gefunden wurde oder der Benutzer das Dialogfeld für die Zertifikatauswahl abgebrochen hat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">Signiert alle Signaturen im Paket mit einem angegebenen X.509-Zertifikat gegen.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">Das X.509-Zertifikat, das als Gegensignatur hinzugefügt werden soll.</param>
      <returns vsli:raw="The signature that was added as a countersign.">Die Signatur, die als Gegensignatur hinzugefügt wurde.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> ist gleich <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">Signiert eine Liste von Signaturen mit einem angegebenen X.509-Zertifikat gegen.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">Das für das Gegensignieren jeder der angegebenen <paramref name="signatures" /> zu verwendende X.509-Zertifikat.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">Die Liste der Signaturen, die gegensigniert werden sollen.</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">Die digitale Signatur, die zum Gegensignieren jeder der <paramref name="signatures" /> verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Entweder der <paramref name="certificate" />- oder der <paramref name="signatures" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">Das Paket enthält keine signierten <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">Das Paket enthält keine <see cref="T:System.IO.Packaging.PackageDigitalSignature" />-Teile.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">Ruft eine URI-Zeichenfolge ab, die den zum Erstellen und Überprüfen von Signaturen verwendeten Standardhashalgorithmus ermittelt.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">Eine URI-Zeichenfolge, die den zum Erstellen und Überprüfen von Signaturen verwendeten Standard Hash Algorithmus angibt.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">Gibt die digitale Signatur für einen angegebenen Signatur-URI (Uniform Resource Identifier) zurück.</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">Der URI der digitalen Signatur, die zurückgegeben werden soll.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">Die digitale Signatur für den angegebenen <paramref name="signatureUri" />, oder <see langword="null" />, wenn keine Signatur für den angegebenen <paramref name="signatureUri" /> gefunden wird.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Ruft den URI-Bezeichner für die zum Erstellen und Überprüfen von Signaturen verwendete <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Instanz ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Der <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> URI-Bezeichner für die <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Instanz, mit der Signaturen erstellt und überprüft werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">Die Zeichenfolge für den festzulegenden URI ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">Die Zeichenfolge für den festzulegenden URI ist leer.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">Tritt ein, wenn <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> auf eine ungültige Signatur trifft.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">Ruft einen Wert ab, der angibt, ob das Paket Signaturen enthält.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Paket Signaturen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">Ruft ein Handle für das übergeordnete Fenster zum Anzeigen eines Zertifikatauswahl-Dialogfelds ab oder legt dieses fest.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">Das Handle des übergeordneten Fensters, in dem das Dialogfeld für die Zertifikatauswahl angezeigt werden soll.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">Entfernt alle digitale Signaturen aus dem Paket.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">Entfernt die digitale Signatur mit einem angegebenen Signatur-URI (Uniform Resource Identifier).</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">Der URI der zu entfernenden <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">Fordert vom Benutzer ein X.509-Zertifikat an, mit dem dann eine angegebene Liste der Paketteile digital signiert wird.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Elemente.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">Die digitale Signatur, mit der die Liste der <paramref name="parts" /> signiert wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">Signiert eine Liste von Paketteilen mit einem angegebenen X.509-Zertifikat.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Elemente.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">Das für das digitale Signieren jedes der angegebenen <paramref name="parts" /> zu verwendende X.509-Zertifikat.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">Die zum Signieren der angegebenen Liste von <paramref name="parts" /> verwendete digitale Signatur; oder <see langword="null" />, wenn kein Zertifikat gefunden wurde oder der Benutzer im Zertifikatauswahl-Dialogfeld auf „Abbrechen“ geklickt hat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">Signiert eine Liste mit Paketteilen und -beziehungen mit einem angegebenen X.509-Zertifikat.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Das X.509-Zertifikat, mit dem jedes der angegebenen Teile und jede der angegebenen Beziehungen digital signiert werden soll.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Die Liste der zu signierenden <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekte.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Die digitale Signatur, mit der die Elemente signiert werden sollen, die in den Listen <paramref name="parts" /> und <paramref name="relationshipSelectors" /> angegeben sind.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">Weder <paramref name="parts" /> noch <paramref name="relationshipSelectors" /> geben zu signierende Objekte an.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">Signiert eine Liste von Paketteilen und Paketbeziehungen mit einem angegebenen X.509-Zertifikat und Bezeichner (identifier; ID).</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Das X.509-Zertifikat, mit dem jedes der angegebenen Teile und jede der angegebenen Beziehungen digital signiert werden soll.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Die Liste der zu signierenden <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekte.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Eine ID-Zeichenfolge, die der Signatur zugeordnet werden soll.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Die digitale Signatur, mit der die Elemente signiert werden sollen, die in den Listen <paramref name="parts" /> und <paramref name="relationshipSelectors" /> angegeben sind.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">Weder <paramref name="parts" /> noch <paramref name="relationshipSelectors" /> geben zu signierende Elemente an.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">Signiert eine Liste von Paketteilen, Paketbeziehungen oder benutzerdefinierten Objekten mit einem angegebenen X.509-Zertifikat und einer angegebenen Bezeichner (identifier; ID)-Signatur.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Das X.509-Zertifikat, mit dem jedes der angegebenen Teile und jede der angegebenen Beziehungen digital signiert werden soll.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Die Liste der zu signierenden <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekte.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Eine ID-Zeichenfolge, die der Signatur zugeordnet werden soll.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">Eine Liste mit den zu signierenden benutzerdefinierten Datenobjekten.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">Eine Liste der Verweise auf benutzerdefinierte Objekte, die signiert werden sollen.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Die digitale Signatur, mit der die Elemente signiert werden sollen, die in den Listen <paramref name="parts" /> und <paramref name="relationshipSelectors" /> angegeben sind.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">Weder <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> noch <paramref name="objectReferences" /> geben zu signierende Elemente an.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">Ein <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> eines Teils, das signiert wird, verweist auf eine <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />-Eigenschaft, die leer, gleich <see langword="null" /> oder nicht definiert ist.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" /> ist nicht gleich <see langword="null" /> und keine gültige XML-Schema-ID (beginnt beispielsweise mit einer Ziffer).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">Ruft den URI (Uniform Resource Identifier) des Signaturursprungsteils ab.</summary>
      <returns vsli:raw="The URI of the signature origin part.">Der URI des Signatur Ursprungs Teils.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">Ruft den Typ der Standard-Signaturursprungsbeziehung ab.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">Der Typ der Standard-Signaturursprungsbeziehung.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">Ruft eine Auflistung aller Signaturen im Paket ab.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">Eine Auflistung aller <see cref="T:System.IO.Packaging.PackageDigitalSignature" />-Objekte.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Ruft das zum Erstellen einer Signatur-<see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> verwendete Datums-/Zeitformat ab oder legt dieses fest.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Das zum Erstellen einer Signatur-<see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> verwendete Datums-/Zeitformat.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Ruft ein Wörterbuch ab, das jeden definierten <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> und den zugeordneten XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> Bezeichner enthält.</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Ein Wörterbuch, das jede definierte <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> und den zugehörigen XML <see cref="T:System.Security.Cryptography.Xml.Transform" />enthält.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> Bezeichner enthält.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">Überprüft ein bestimmtes X.509-Zertifikat.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">Das zu überprüfende X.509-Zertifikat.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (Wert 0), wenn das Zertifikat erfolgreich überprüft wurde, andernfalls eine bitweise Enumeration aus Fehlerflags.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">Überprüft die Signaturen für alle signierten Teile im Paket.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">
        <see langword="true" />, wenn beim ersten Fehler beendet werden soll, andernfalls <see langword="false" />, damit alle Signaturen überprüft werden.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (Wert 0), wenn alle Signaturen erfolgreich überprüft wurden, andernfalls eine Enumeration, die den Fehler kennzeichnet.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Stellt eine Basisklasse für Parts bereit, die in einem <see cref="T:System.IO.Packaging.Package" /> gespeichert werden.  Diese Klasse ist abstrakt.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" /> und einem angegebenen Segment-URI.</summary>
      <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
      <param name="partUri">Der URI des Segments relativ zum übergeordneten <see cref="T:System.IO.Packaging.Package" />-Stamm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" />, einem angegebenen Segment-URI und einem angegebenen MIME-Inhaltstyp.</summary>
      <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
      <param name="partUri">Der URI des Segments relativ zum übergeordneten <see cref="T:System.IO.Packaging.Package" />-Stamm.</param>
      <param name="contentType">Der MIME-Inhaltstyp des Partdatenstreams.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" />, einem angegebenen Segment-URI, einem angegebenen MIME-Inhaltstyp und einer angegebenen <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
      <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
      <param name="partUri">Der URI des Segments relativ zum übergeordneten <see cref="T:System.IO.Packaging.Package" />-Stamm.</param>
      <param name="contentType">Der MIME-Inhaltstyp für den Datenstream des Parts.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream des Parts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="compressionOption" />-Wert ist nicht zulässig.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Ruft die Komprimierungsoption des Partinhaltsstreams ab.</summary>
      <returns>Die Komprimierungsoption des Partinhaltsstreams.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Ruft den MIME-Typ des Inhaltsstreams ab.</summary>
      <returns>Der MIME-Typ des Inhaltsdatenstreams für das Part.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).
- oder -
Die von der <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />-Methode der abgeleiteten Klasse zurückgegebene Zeichenfolge ist leer.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
      <param name="targetUri">Der URI des Zielsegments.</param>
      <param name="targetMode">Einer der Enumerationswerte. Beispielsweise <see cref="F:System.IO.Packaging.TargetMode.Internal" />, wenn sich das Zielpart innerhalb des <see cref="T:System.IO.Packaging.Package" /> befindet, oder <see cref="F:System.IO.Packaging.TargetMode.External" />, wenn das Ziel eine Ressource außerhalb des <see cref="T:System.IO.Packaging.Package" /> ist.</param>
      <param name="relationshipType">Die Rolle der Beziehung.</param>
      <returns>Die Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und dem Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder der externen Zielressource.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="targetMode" />-Parameter ist kein gültiger <see cref="T:System.IO.Packaging.TargetMode" />-Enumerationswert.</exception>
      <exception cref="T:System.ArgumentException">Das mit dem <paramref name="targetUri" /> angegebene Part ist eine Beziehung (das Ziel einer Beziehung darf keine andere Beziehung sein).
- oder -
<paramref name="targetMode" /> wird als <see cref="F:System.IO.Packaging.TargetMode.Internal" /> angegeben, <paramref name="targetUri" /> ist jedoch ein absoluter externer URI.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann keine neue Beziehung hinzugefügt werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
      <param name="targetUri">Der URI des Zielsegments.</param>
      <param name="targetMode">Einer der Enumerationswerte. Beispielsweise <see cref="F:System.IO.Packaging.TargetMode.Internal" />, wenn sich das Zielpart innerhalb des <see cref="T:System.IO.Packaging.Package" /> befindet, oder <see cref="F:System.IO.Packaging.TargetMode.External" />, wenn das Ziel eine Ressource außerhalb des <see cref="T:System.IO.Packaging.Package" /> ist.</param>
      <param name="relationshipType">Die Rolle der Beziehung.</param>
      <param name="id">Eine eindeutige ID für die Beziehung.</param>
      <returns>Die Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und dem Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder der externen Zielressource.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="targetMode" />-Parameter ist kein gültiger <see cref="T:System.IO.Packaging.TargetMode" />-Enumerationswert.</exception>
      <exception cref="T:System.ArgumentException">Das mit dem <paramref name="targetUri" /> angegebene Part ist eine Beziehung (das Ziel einer Beziehung darf keine andere Beziehung sein).
- oder -
<paramref name="targetMode" /> wird als <see cref="F:System.IO.Packaging.TargetMode.Internal" /> angegeben, <paramref name="targetUri" /> ist jedoch ein absoluter externer URI.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann keine neue Beziehung hinzugefügt werden).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.
- oder -
Ein Part mit der angegebenen <paramref name="id" /> ist bereits vorhanden.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Löscht eine angegebene <see cref="T:System.IO.Packaging.PackageRelationship" /> auf Partebene.</summary>
      <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zu löschenden Beziehung.</param>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (Beziehungen können nicht gelöscht werden).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den MIME-Typ des Partinhalts zurück.</summary>
      <returns>Der MIME-Typ des Partinhalts.</returns>
      <exception cref="T:System.NotSupportedException">Die abgeleitete Klasse stellt keine für die <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />-Methode erforderliche Überschreibungsimplementierung bereit.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Gibt die Beziehung zurück, für die eine <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> angegeben wurde.</summary>
      <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zurückzugebenden Beziehung.</param>
      <returns>Die Beziehung, die mit der angegebenen <paramref name="id" /> übereinstimmt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).
- oder -
Eine Beziehung mit der angegebenen <paramref name="id" /> ist nicht im Paket vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Gibt eine Auflistung aller Beziehungen zurück, deren Besitzer dieses Part ist.</summary>
      <returns>Eine Auflistung aller Beziehungen, deren Besitzer das Part ist.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Gibt eine Auflistung der Beziehungen zurück, die mit einem angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> übereinstimmen.</summary>
      <param name="relationshipType">Der <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> der Beziehungen, die gesucht und in der Auflistung zurückgegeben werden sollen.</param>
      <returns>Eine Auflistung der Beziehungen, die mit dem angegebenen <paramref name="relationshipType" /> übereinstimmen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Gibt den Inhaltsdatenstream des Parts zurück.</summary>
      <returns>Der Inhaltsdatenstream für das Part.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Gibt den in einem angegebenen E/A-<see cref="T:System.IO.FileMode" /> geöffneten Inhaltsstream zurück.</summary>
      <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
      <returns>Der Inhaltsstream des Parts.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="mode" />-Parameter ist kein gültiger <see cref="T:System.IO.FileMode" />-Enumerationswert.</exception>
      <exception cref="T:System.IO.IOException">Der <paramref name="mode" />-Parameter ist nicht mit dem Paket- und Partstream kompatibel.
- oder -
Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Gibt den mit einem angegebenen <see cref="T:System.IO.FileMode" /> und <see cref="T:System.IO.FileAccess" /> geöffneten Partinhaltsstream zurück.</summary>
      <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
      <param name="access">Die Zugriffsberechtigungen zum Öffnen des Inhaltsstreams.</param>
      <returns>Der Inhaltsstream für das Part.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="mode" />-Parameter ist kein gültiger <see cref="T:System.IO.FileMode" />-Enumerationswert.
- oder -
Der <paramref name="access" />-Parameter ist kein gültiger <see cref="T:System.IO.FileAccess" />-Enumerationswert.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> oder <paramref name="access" /> ist nicht mit dem Paket- und Partstream kompatibel.
- oder -
Der <paramref name="access" />-Parameter wird als <see cref="F:System.IO.FileAccess.Read" /> angegeben, der <paramref name="mode" />-Parameter erfordert jedoch Schreibzugriff.  (Für die <see cref="T:System.IO.FileMode" />-Werte <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> und <see cref="F:System.IO.FileMode.Append" /> ist <see cref="F:System.IO.FileAccess.Write" />-Zugriff oder <see cref="F:System.IO.FileAccess.ReadWrite" />-Zugriff erforderlich.)
- oder -
Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den mit einem angegebenen <see cref="T:System.IO.FileMode" /> und <see cref="T:System.IO.FileAccess" /> geöffneten Partinhaltsstream zurück.</summary>
      <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
      <param name="access">Die Zugriffsberechtigungen zum Öffnen des Inhaltsstreams.</param>
      <returns>Der Inhaltsdatenstream des Parts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Ruft das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts ab.</summary>
      <returns>Das übergeordnete Paket des Parts.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob dieses Part Besitzer einer Beziehung mit einer angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> ist.</summary>
      <param name="id">Die zu überprüfende <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der Beziehung.</param>
      <returns>
        <see langword="true" />, wenn dieses Part Besitzer einer Beziehung mit der angegebenen <paramref name="id" /> ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Ruft den URI des Segments ab.</summary>
      <returns>Der URI des Teils relativ zum Paket Stamm.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Stellt eine Auflistung von<see cref="T:System.IO.Packaging.PackagePart" />-Objekten dar.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der Parts in der Auflistung zurück.</summary>
      <returns>Ein Enumerator zum Durchlaufen der <see cref="T:System.IO.Packaging.PackagePart" />-Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Stellt die Haupteigenschaften eines <see cref="T:System.IO.Packaging.Package" /> dar.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackageProperties" />-Klasse.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Kategorie des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Die Kategorie des Inhalts im <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der den Status des <see cref="T:System.IO.Packaging.Package" /> darstellt, oder legt diesen fest.</summary>
      <returns>Der Status des <see cref="T:System.IO.Packaging.Package" />-Inhalts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der den Typ des Inhalts im <see cref="T:System.IO.Packaging.Package" /> darstellt, oder legt diesen fest.</summary>
      <returns>Der Typ des Inhalts im <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Datum und Uhrzeit der Erstellung des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Datum und Uhrzeit der ersten Erstellung des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der die Person oder Entität identifiziert, die das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt erstellt hat, oder legt diesen fest.</summary>
      <returns>Die Person oder Entität, die das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt erstellt hat.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Beschreibung des Inhalts im <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Eine Beschreibung des Inhalts im <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Gibt alle von der <see cref="T:System.IO.Packaging.PackageProperties" />-Instanz verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:System.IO.Packaging.PackageProperties" />-Instanz verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt eindeutig identifiziert, oder legt diesen fest.</summary>
      <returns>Ein Wert, der das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt eindeutig identifiziert.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der einen durch Trennzeichen getrennten Satz von Schlüsselwörtern definiert, um das Durchsuchen und Indizieren des <see cref="T:System.IO.Packaging.Package" /> und seines Inhalts zu unterstützen.</summary>
      <returns>Ein durch Trennzeichen getrennter Satz von Schlüsselwörtern, um das Suchen und Indizieren des <see cref="T:System.IO.Packaging.Package" /> und seines Inhalts zu unterstützen.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der die Sprache des <see cref="T:System.IO.Packaging.Package" />-Inhalts angibt, oder legt diesen fest.</summary>
      <returns>Ein Wert, der die Sprache des <see cref="T:System.IO.Packaging.Package" />-Inhalts angibt.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der den letzten Benutzer angibt, der den <see cref="T:System.IO.Packaging.Package" />-Inhalt geändert hat, oder legt diesen Wert fest.</summary>
      <returns>Der letzte Benutzer, der den <see cref="T:System.IO.Packaging.Package" />-Inhalt geändert hat.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Datum und Uhrzeit des letzten Druckens des <see cref="T:System.IO.Packaging.Package" />-Inhalts ab oder legt diese fest.</summary>
      <returns>Datum und Uhrzeit des letzten Druckens des <see cref="T:System.IO.Packaging.Package" />-Inhalts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Datum und Uhrzeit der letzten Änderung des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Datum und Uhrzeit der letzten Änderung des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Revisionsnummer des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Die Revisionsnummer des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Thema des <see cref="T:System.IO.Packaging.Package" />-Inhalts ab oder legt dieses fest.</summary>
      <returns>Das Thema des <see cref="T:System.IO.Packaging.Package" />-Inhalts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den für das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt angegebenen Namen ab oder legt diesen fest.</summary>
      <returns>Der für das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt angegebene Name.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Versionsnummer des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Die Versionsnummer des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Stellt eine Zuordnung zwischen einem Quell-<see cref="T:System.IO.Packaging.Package" /> oder Quell-<see cref="T:System.IO.Packaging.PackagePart" /> und einem Zielobjekt dar, bei dem es sich um ein <see cref="T:System.IO.Packaging.PackagePart" /> oder um eine externe Ressource handeln kann.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Ruft eine Zeichenfolge ab, die die Beziehung angibt.</summary>
      <returns>Eine Zeichenfolge, die die Beziehung angibt.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Ruft das <see cref="T:System.IO.Packaging.Package" /> ab, das die Beziehung enthält.</summary>
      <returns>Das Paket, das die Beziehung enthält.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Ruft den gekennzeichneten Typnamen der Beziehung ab.</summary>
      <returns>Der gekennzeichnete Typname der Beziehung.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Ruft den URI des Pakets oder Segments ab, das der Besitzer der Beziehung ist.</summary>
      <returns>Der URI des <see cref="T:System.IO.Packaging.Package" /> oder <see cref="T:System.IO.Packaging.PackagePart" />, der die Beziehung besitzt.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Ruft einen Wert ab, der angibt, ob das Ziel der Beziehung <see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das <see cref="T:System.IO.Packaging.Package" /> ist.</summary>
      <returns>Ein Enumerationswert, der angibt, ob <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> auf eine Ressource verweist, die <see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das <see cref="T:System.IO.Packaging.Package" /> ist.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Ruft den URI der Zielressource der Beziehung ab.</summary>
      <returns>Der URI der Ziel Ressource.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.IO.Packaging.PackageRelationship" />-Elementen dar, deren Besitzer ein angegebenes <see cref="T:System.IO.Packaging.PackagePart" /> oder das <see cref="T:System.IO.Packaging.Package" /> ist.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der Beziehungen in der Auflistung zurück.</summary>
      <returns>Ein Enumerator zum Durchlaufen der <see cref="T:System.IO.Packaging.PackageRelationship" />-Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Dieser Typ oder dieser Member unterstützt die Windows Presentation Foundation-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Verwenden Sie nicht – oder <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Definiert <see cref="T:System.IO.Packaging.PackageRelationship" />-Kriterien für die Auswahl von Beziehungen auf Partebene oder Paketebene.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />-Klasse.</summary>
      <param name="sourceUri">Der URI (Uniform Resource Identifier) des <see cref="T:System.IO.Packaging.PackagePart" /> oder <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/"), der Besitzer der Beziehung ist.</param>
      <param name="selectorType">Der Typ der <paramref name="selectionCriteria" />, entweder nach Beziehungs-<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> oder nach Beziehungs-<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.</param>
      <param name="selectionCriteria">Der Qualifizierungspfad, der verwendet wird, um die Beziehungen anhand des <paramref name="selectorType" /> auszuwählen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> oder <paramref name="selectionCriteria" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="selectorType" />-Parameter ist ungültig.</exception>
      <exception cref="T:System.Xml.XmlException">Der <paramref name="selectorType" />-Parameter ist <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />, jedoch ist <paramref name="selectionCriteria" /> keine gültige XML-Schemadefinition (XSD) Bezeichner (identifier; ID).</exception>
      <exception cref="T:System.ArgumentException">Die <paramref name="selectionCriteria" /> sind für den angegebenen <paramref name="selectorType" /> nicht gültig.
- oder -
Der <paramref name="sourceUri" /> ist nicht der <see cref="T:System.IO.Packaging.Package" />-Stamm ("/") und kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Gibt eine Liste von <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekten zurück, die mit dem definierten <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, dem definierten <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> und den definierten <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> übereinstimmen.</summary>
      <param name="package">Das Paket, aus dem die Beziehungen anhand der Auswahlkriterien ausgewählt werden sollen.</param>
      <returns>Eine Liste von Beziehungen, die mit den für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor angegebenen Auswahlparametern übereinstimmen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Ruft die für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor angegebenen Auswahlkriterien ab.</summary>
      <returns>Die Auswahlkriterien auf der Grundlage des für den <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" />-Konstruktor angegebenen <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> (<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> oder <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />).</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Ruft den für den <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" />-Konstruktor angegebenen <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> ab.</summary>
      <returns>Der für den <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />-Konstruktor angegebene Auswahltyp <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> oder <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Ruft den Stammpaket-URI ("/") oder Part-<see cref="P:System.IO.Packaging.PackagePart.Uri" /> ab, der für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor als Besitzer der Beziehung angegeben wurde.</summary>
      <returns>Der Stammpaket-URI ("/") oder Part-<see cref="P:System.IO.Packaging.PackagePart.Uri" />, der für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor als Besitzer der Beziehung angegeben wurde.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Gibt den Typ der Auswahlkriterien an, die zum Vergleichen und Zurückgeben einer <see cref="T:System.IO.Packaging.PackageRelationship" />-Auswahl über einen <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> verwendet werden.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Die <see cref="T:System.IO.Packaging.PackageRelationship" />-Auswahl erfolgt nach <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>Die <see cref="T:System.IO.Packaging.PackageRelationship" />-Auswahl erfolgt nach <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Stellt Hilfsmethoden zum Erstellen und Analysieren von Paket-URI-Objekten bereit.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei Paket-URIs gleichwertig sind.</summary>
      <param name="firstPackUri">Der erste Paket-URI.</param>
      <param name="secondPackUri">Der zweite Paket-URI.</param>
      <returns>Eine ganze Zahl mit Vorzeichen, die die Beziehung zwischen <paramref name="firstPackUri" /> und <paramref name="secondPackUri" /> angibt.
  Wert 
  Bedeutung 
  Kleiner als 0 
 <paramref name="firstPackUri" /> ist kleiner als <paramref name="secondPackUri" />.  
  
  0 
 <paramref name="firstPackUri" /> entspricht <paramref name="secondPackUri" />.  
  
  Größer als 0 
 <paramref name="firstPackUri" /> ist größer als <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> oder <paramref name="secondPackUri" /> ist kein absoluter URI.
- oder -
Entweder <paramref name="firstPackUri" /> oder <paramref name="secondPackUri" /> beginnt nicht mit einem „pack://“-Schema.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei Paketteil-URIs äquivalent sind.</summary>
      <param name="firstPartUri">Der URI des ersten <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">Der URI des zweiten <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Ein Wert, der die Beziehung zwischen <paramref name="firstPartUri" /> und <paramref name="secondPartUri" /> angibt.
  Wert 
  Bedeutung 
  Kleiner als 0 
 <paramref name="firstPartUri" /> ist kleiner als <paramref name="secondPartUri" />.  
  
  0 
 <paramref name="firstPartUri" /> entspricht <paramref name="secondPartUri" />.  
  
  Größer als 0 
 <paramref name="firstPartUri" /> ist größer als <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> oder <paramref name="secondPartUri" /> ist keine gültige Syntax eines Teil-URIs.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Erstellt einen neuen Paket-URI, der auf ein Paket verweist.</summary>
      <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />, auf das verwiesen wird.</param>
      <returns>Der Paket-URI für das <see cref="T:System.IO.Packaging.Package" />, auf das durch den angegebenen <paramref name="packageUri" /> verwiesen wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="packageUri" /> ist kein absoluter URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Erstellt anhand eines <see cref="T:System.IO.Packaging.Package" />-URIs und des URIs eines Paketteils einen Paket-URI.</summary>
      <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
      <returns>Der Paket-URI des angegebenen <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> ist kein absoluter URI.
- oder -
<paramref name="partUri" /> ist keine gültige Syntax eines Teil-URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Erstellt anhand eines <see cref="T:System.IO.Packaging.Package" />-URIs, des URIs eines Paketteils und eines anzuhängenden „#“-Fragments einen Paket-URI.</summary>
      <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
      <param name="fragment">Ein "#"-Verweis, der ein Element innerhalb des Paketteils identifiziert.</param>
      <returns>Der Paket-URI, der das angegebene Paket, Paketteil und Fragment angibt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> ist kein absoluter URI.
- oder -
<paramref name="partUri" /> ist keine gültige Syntax für einen Teil-URI.
- oder -
<paramref name="fragment" /> ist leer oder beginnt mit "#".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Erstellt einen formatierten <see cref="T:System.IO.Packaging.PackagePart" />-URI.</summary>
      <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
      <returns>Ein formatierter <see cref="T:System.IO.Packaging.PackagePart" />-URI.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein absoluter <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Gibt die normalisierte Form eines angegebenen <see cref="T:System.IO.Packaging.PackagePart" />-URI zurück.</summary>
      <param name="partUri">Der zu normalisierende <see cref="T:System.IO.Packaging.PackagePart" />-URI.</param>
      <returns>Die normalisierte Form des angegebenen <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> besitzt keine gültige <see cref="T:System.Uri" />-Syntax.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Gibt den inneren URI zurück, der auf das gesamte Paket eines angegebenen Paket-URIs verweist.</summary>
      <param name="packUri">Der Paket-URI, von dem der <see cref="T:System.IO.Packaging.Package" />-URI zurückgegeben werden soll.</param>
      <returns>Der <see cref="T:System.IO.Packaging.Package" />-URI vom angegebenen <paramref name="packUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> ist kein absoluter <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Gibt den URI eines <see cref="T:System.IO.Packaging.PackagePart" /> in einem angegebenen Paket-URI zurück.</summary>
      <param name="packUri">Der Paket-URI, aus dem der <see cref="T:System.IO.Packaging.PackagePart" />-URI zurückgegeben werden soll.</param>
      <returns>Der URI von <see cref="T:System.IO.Packaging.PackagePart" /> im angegebenen <paramref name="packUri" />, oder <see langword="null" />, wenn <paramref name="packUri" /> nicht auf einen <see cref="T:System.IO.Packaging.PackagePart" />, sondern auf ein Paket verweist.</returns>
      <exception cref="T:System.ArgumentNullException">Wenn auf <paramref name="packUri" /> auf <see langword="null" /> festgelegt ist.</exception>
      <exception cref="T:System.ArgumentException">Wenn der <paramref name="packUri" /> kein absoluter <see cref="T:System.Uri" /> ist.
- oder -
<paramref name="packUri" /> weist nicht das Schema „pack://“ auf.
- oder -
Der aus <paramref name="packUri" /> extrahierte partUri entspricht nicht der gültigen partUri-Syntax.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Gibt den URI des Beziehungsteils zurück, das einem angegebenen <see cref="T:System.IO.Packaging.PackagePart" /> zugeordnet ist.</summary>
      <param name="partUri">Der <see cref="P:System.IO.Packaging.PackagePart.Uri" /> des <see cref="T:System.IO.Packaging.PackagePart" />, um den URI für die zugeordnete <see cref="T:System.IO.Packaging.PackageRelationship" /> zurückzugeben.</param>
      <returns>Der URI des <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts, das dem durch <paramref name="partUri" /> angegebenen <see cref="T:System.IO.Packaging.PackagePart" />, zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die <paramref name="partUri" />-Syntax ist für einen Paketpart-URI nicht gültig.
- oder -
<paramref name="partUri" /> ist ein absoluter URI.
- oder -
<paramref name="partUri" /> verweist auf ein Beziehungspart.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Gibt den relativen URI zwischen zwei angegebenen <see cref="T:System.IO.Packaging.PackagePart" />-URIs zurück.</summary>
      <param name="sourcePartUri">Der URI des Quellparts.</param>
      <param name="targetPartUri">Der URI des Zielparts.</param>
      <returns>Die relative URI von <paramref name="sourcePartUri" /> bis <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> oder <paramref name="targetPartUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Entweder der <paramref name="sourcePartUri" /> oder der <paramref name="targetPartUri" /> besitzt keine gültige <see cref="T:System.Uri" />-Syntax.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Gibt den <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> aus der <see cref="T:System.IO.Packaging.PackageRelationship" /> mit einem angegebenen URI zurück.</summary>
      <param name="relationshipPartUri">Der URI des Beziehungsparts, aus dem der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> zurückgegeben werden soll.</param>
      <returns>Der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> des <see cref="T:System.IO.Packaging.PackagePart" /> aus der Beziehung mit dem angegebenen <paramref name="relationshipPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> ist ein absoluter URI.
- oder -
Die <paramref name="relationshipPartUri" />-Syntax ist für ein <see cref="T:System.IO.Packaging.PackagePart" /> nicht gültig.
- oder -
<paramref name="relationshipPartUri" /> verweist auf kein Beziehungspart.
- oder -
Der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> der Beziehung verweist auf ein anderes Beziehungsteil (ungültig).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener URI der URI eines <see cref="T:System.IO.Packaging.PackageRelationship" />-Teils ist.</summary>
      <param name="partUri">Der URI, der auf ein <see cref="T:System.IO.Packaging.PackageRelationship" />-Part überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="partUri" /> ein <see cref="T:System.IO.Packaging.PackageRelationship" />-Part angibt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist ein absoluter URI.
- oder -
<paramref name="partUri" /> weist eine ungültige <see cref="T:System.IO.Packaging.PackagePart" />-Syntax auf.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Gibt einen Part-URI zurück, wenn ein Quellpart-URI und ein URI mit einem relativen Pfad zu einem Zielpart angegeben wurden.</summary>
      <param name="sourcePartUri">Der URI des Quellparts, oder "/", um den <see cref="T:System.IO.Packaging.Package" />-Stamm zu kennzeichnen.</param>
      <param name="targetUri">Der relative URI zum Zielpart.</param>
      <returns>Der URI des Zielparts, der zwischen dem angegebenen <paramref name="SourcePartUri" />-Parameter und dem angegebenen <paramref name="targetUri" />-Parameter aufgelöst wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> oder <paramref name="targetUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> ist kein gültiger Part-URI.
- oder -
<paramref name="targetUri" /> ist kein gültiger relativer URI.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Definiert den URI-Packschemanamen „pack“.</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Stellt DRM-Informationen (Digital Rights Management) dar, die in einem <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> gespeichert sind.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">Ruft den <see cref="T:System.Security.RightsManagement.CryptoProvider" /> für den Zugriff auf den verschlüsselten Datenstream zur Rechteverwaltung des Pakets ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">Der <see cref="T:System.Security.RightsManagement.CryptoProvider" /> für den Zugriff auf Rechteverwaltungsinformationen.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">Löscht die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen angegebenen Benutzer aus dem verschlüsselten Datenstream für die Rechteverwaltung.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">Der Benutzer der zu löschenden <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">Gibt eine Wörterbuchauflistung von Benutzer- und <see cref="T:System.Security.RightsManagement.UseLicense" />-Schlüssel-Wert-Paaren aus dem verschlüsselten Datenstream für die Rechteverwaltung zurück.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">Eine Auflistung von Benutzer- und <see cref="T:System.Security.RightsManagement.UseLicense" />-Schlüssel-Wert-Paaren im durch Rechteverwaltung geschützten Paket.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">Gibt die eingebettete <see cref="T:System.Security.RightsManagement.PublishLicense" /> aus dem verschlüsselten Datenstream für die Rechteverwaltung zurück.</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Die eingebettete <see cref="T:System.Security.RightsManagement.PublishLicense" /> oder <see langword="null" />, wenn das Paket keine <see cref="T:System.Security.RightsManagement.PublishLicense" /> enthält.</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">Gibt aus dem verschlüsselten Datenstream für die Rechteverwaltung eine eingebettete <see cref="T:System.Security.RightsManagement.UseLicense" /> eines angegebenen Benutzers zurück.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">Der Benutzer oder die Benutzergruppe, für den bzw. die die <see cref="T:System.Security.RightsManagement.UseLicense" /> zurückgegeben werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für den angegebenen Benutzer oder <see langword="null" />, wenn das Paket keine <see cref="T:System.Security.RightsManagement.UseLicense" /> enthält, die mit dem angegebenen <paramref name="userKey" /> übereinstimmt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="userKey" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">Speichert eine angegebene <see cref="T:System.Security.RightsManagement.PublishLicense" /> im verschlüsselten Datenstream für die Rechteverwaltung.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">Die Veröffentlichungslizenz, die im Paket gespeichert und eingebettet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="publishLicense" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">Speichert eine angegebene <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen angegebenen Benutzer im verschlüsselten Datenstream für die Rechteverwaltung.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Der Benutzer der <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">Die Nutzungslizenz, die im Paket gespeichert und eingebettet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Entweder der <paramref name="userKey" />- oder der <paramref name="useLicense" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">Gibt die für den <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" /> bereitgestellten Ereignisargumente an.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">Ruft die digitale Signatur ab, die überprüft wird.</summary>
      <returns vsli:raw="The digital signature being verified.">Die digitale Signatur, die überprüft wird.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">Ruft den Signaturüberprüfungsfehler ab.</summary>
      <returns vsli:raw="The signature verification error.">Der Signaturüberprüfungsfehler.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Stellt Zugriff und Informationen zum Bearbeiten von Datenspeichern in einem <see cref="T:System.IO.Packaging.Package" /> bereit.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">Erstellt einen neuen Stream mit einem angegebenen Namen.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Der Name für den neuen Stream.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Der neue Stream mit dem angegebenen <paramref name="name" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">Erstellt einen neuen Stream mit einem angegebenen Namen, einer angegebenen <see cref="T:System.IO.Packaging.CompressionOption" /> und einer angegebenen <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Der Name für den neuen Stream.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">Die Komprimierungsoption für den Datenstream.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">Die Verschlüsselungsoption für den Datenstream.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">Der neue Stream mit dem angegebenen <paramref name="name" />, der angegebenen <paramref name="compressionOption" /> und der angegebenen <paramref name="encryptionOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">Erstellt eine neue untergeordnete <see cref="T:System.IO.Packaging.StorageInfo" /> mit dieser <see cref="T:System.IO.Packaging.StorageInfo" /> als übergeordnetes Element.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">Der Name für den neuen untergeordneten Datenspeicher.</param>
      <returns vsli:raw="The new child data store.">Der neue untergeordnete Datenspeicher.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">Löscht den Stream mit einem angegebenen Namen.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">Der <see cref="T:System.IO.Packaging.StreamInfo" />-Name des zu löschenden Streams.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">Löscht einen angegebenen Unterspeicher.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">Der Name des zu löschenden Unterspeichers.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">Gibt die <see cref="T:System.IO.Packaging.StreamInfo" />-Instanz mit dem angegebenen Namen zurück.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">Der Name der <see cref="T:System.IO.Packaging.StreamInfo" />-Instanz, die zurückgegeben werden soll.</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Der Stream mit dem angegebenen <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">Gibt ein Array der <see cref="T:System.IO.Packaging.StreamInfo" />-Instanzen zurück, die gegenwärtig in diesem Speicher enthalten sind.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">Ein Array der <see cref="T:System.IO.Packaging.StreamInfo" />-Objekte, von denen jedes auf einen in diesem Speicher definierten E/A-Stream zeigt.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">Gibt den untergeordneten Unterspeicher mit einem angegebenen Namen zurück.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">Der Name des zurückzugebenden Unterspeichers.</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Der untergeordnete Unterspeicher mit dem angegebenen <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">Gibt ein Array der untergeordneten Unterspeicher zurück, die derzeit in diesem Speicher enthalten sind.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">Ein Array von <see cref="T:System.IO.Packaging.StorageInfo" />-Objekten, von denen jedes auf einen in diesem Speicher definierten Unterspeicher zeigt.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">Ruft den Namen des Speichers ab.</summary>
      <returns vsli:raw="The name of this store.">Der Name des Speichers.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">Gibt einen Wert zurück, der angibt, ob ein angegebener Stream vorhanden ist.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">Der <see cref="T:System.IO.Packaging.StreamInfo" />-Name, der gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Stream mit dem angegebenen <paramref name="name" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">Gibt einen Wert zurück, der anzeigt, ob ein angegebener untergeordneter Unterspeicher vorhanden ist.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">Der Name der untergeordneten <see cref="T:System.IO.Packaging.StorageInfo" />, der gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein untergeordneter Unterspeicher mit dem angegebenen <paramref name="name" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Stellt Zugriff und Informationen zum Bearbeiten von E/A-Streams in einem <see cref="T:System.IO.Packaging.Package" /> bereit.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">Ruft die <see cref="T:System.IO.Packaging.CompressionOption" />-Einstellung für den Stream ab.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">Die Einstellung der Komprimierungsoption für den Paketstream.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">Ruft die <see cref="T:System.IO.Packaging.EncryptionOption" />-Einstellung für den Stream ab.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">Die Einstellung der Verschlüsselungsoption für den Paketstream.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Gibt einen Stream zurück, der in einem Standard-<see cref="T:System.IO.FileMode" /> und mit Standard-<see cref="T:System.IO.FileAccess" /> geöffnet wurde.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Der E/A-Stream, der in einem Standard-<see cref="T:System.IO.Packaging.Package" />-Stamm und Standard-<see cref="T:System.IO.FileMode" /> sowie mit Standard-<see cref="T:System.IO.FileAccess" /> geöffnet wurde.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">Gibt einen in einem angegebenen <see cref="T:System.IO.FileMode" /> geöffneten E/A-Stream zurück.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">Der Dateimodus, in dem der Stream geöffnet werden soll.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">Der Stream wurde im angegebenen Datei-<paramref name="mode" /> geöffnet.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Gibt einen E/A-Stream zurück, der in einem angegebenen <see cref="T:System.IO.FileMode" /> und mit einem angegebenen <see cref="T:System.IO.FileAccess" /> geöffnet wurde.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">Der Dateimodus, in dem der Stream geöffnet werden soll.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">Der Dateizugriffsmodus, in dem der Stream gelesen oder geschrieben werden soll.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Der E/A-Stream, der im angegebenen <see cref="T:System.IO.FileMode" /> und mit einem angegebenen <see cref="T:System.IO.FileAccess" /> geöffnet wurde.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">Ruft den Namen des Streams ab.</summary>
      <returns vsli:raw="The name of this stream.">Der Name des Streams.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Gibt an, ob das Ziel einer <see cref="T:System.IO.Packaging.PackageRelationship" /> innerhalb oder außerhalb des <see cref="T:System.IO.Packaging.Package" /> liegt.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>Die Beziehung verweist auf eine Ressource, die sich außerhalb des Pakets befindet.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>Die Beziehung verweist auf ein Part, das sich innerhalb des Pakets befindet.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">Gibt das Ergebnis einer Zertifikat- oder Signaturüberprüfung an.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">Das X.509-Zertifikat ist nicht zum Überprüfen der Signatur verfügbar.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">Das X.509-Zertifikat ist ungültig.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">Die Signatur ist ungültig.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">Der angegebene Paket oder Teil hat keine Signatur.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">Es wurde keine Verweisbeziehung zu der Signatur gefunden.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">Die Überprüfung war erfolgreich.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Implementiert eine abgeleitete Unterklasse der abstrakten <see cref="T:System.IO.Packaging.Package" />-Basisklasse. Die <see cref="T:System.IO.Packaging.ZipPackage" />-Klasse verwendet ein ZIP-Archiv als Containerspeicher. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Stellt ein Part dar, das in einem <see cref="T:System.IO.Packaging.ZipPackage" /> gespeichert ist.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> beschreibt verschiedene Sicherheitsberechtigungen, die die Funktionsfähigkeit von Audio-, Bild- und Videomedien in einer teilweise vertrauenswürdigen Windows Presentation Foundation-Anwendung steuern.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Audioberechtigungsebene.</summary>
      <param name="permissionAudio">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Bildberechtigungsebenen für Audio, Video und Bilder.</summary>
      <param name="permissionAudio">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Bildberechtigungsebene.</summary>
      <param name="permissionImage">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Videoberechtigungsebene.</summary>
      <param name="permissionVideo">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe eines Berechtigungszustands.</summary>
      <param name="state">Ein Enumerationswert von <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Ruft den aktuellen Wert der Audioberechtigungsebene ab.</summary>
      <returns>Die Audioberechtigungsebene.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen Berechtigung und gibt sie zurück.</summary>
      <returns>Eine Kopie der aktuellen Berechtigung.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Stellt eine Berechtigung mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="securityElement">Die XML-Codierung zur Wiederherstellung der Berechtigung.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Ruft den aktuellen Wert der Bildberechtigungsebene ab.</summary>
      <returns>Die Bildberechtigungsebene.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</summary>
      <param name="target">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den von beiden Berechtigungen gemeinsam beschriebenen Zustand wiedergibt. Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, ist für die Schnittmengenberechtigung gültig.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Bestimmt, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</summary>
      <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>
        <see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Berechtigung uneingeschränkt ist.</summary>
      <returns>
        <see langword="true" />, wenn alle Audio-, Bild- und Videoberechtigungen uneingeschränkt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Erstellt eine XML-Codierung der Berechtigung und ihres aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung der Berechtigung, einschließlich aller Zustandsinformationen.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Kombination der aktuellen und der angegebenen Berechtigung.</summary>
      <param name="target">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Ruft den aktuellen Wert der Videoberechtigungsebene ab.</summary>
      <returns>Die Medienberechtigungsebene.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Ermöglicht, dass Sicherheitsaktionen für <see cref="T:System.Security.Permissions.MediaPermission" /> unter Verwendung deklarativer Sicherheit auf Code angewendet werden.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Ruft die Audioberechtigungsstufe für das <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> ab oder legt diese Stufe fest.</summary>
      <returns>Der Status des <see cref="T:System.Security.Permissions.MediaPermissionAudio" />-Objekts.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Erstellt eine neue <see cref="T:System.Security.Permissions.MediaPermission" /> und gibt diese zurück.</summary>
      <returns>Eine <see cref="T:System.Security.Permissions.MediaPermission" />, die diesem Attribut entspricht.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Ruft die Bildberechtigungsstufe für das <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> ab oder legt diese Stufe fest.</summary>
      <returns>Der Status des <see cref="T:System.Security.Permissions.MediaPermissionImage" />-Objekts.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Ruft die Videoberechtigungsstufe für das <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> ab oder legt diese Stufe fest.</summary>
      <returns>Der Status des <see cref="T:System.Security.Permissions.MediaPermissionVideo" />-Objekts.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Gibt die Berechtigungsstufe für Audio an.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Berechtigung, die eine uneingeschränkte Audiowiedergabe gestattet.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Berechtigung, die jegliche Audiowiedergabe verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Berechtigung, die eine sichere, eingeschränkte Audiowiedergabe gestattet. Streamzugriffe auf die Audiodatei werden in diesem Fall verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Berechtigung, die nur die Audiowiedergabe von Dateien gestattet, die zur Ursprungssite der Anwendung gehören.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Gibt die Berechtigungsstufe für Bilder an.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Berechtigung, die die uneingeschränkte Anzeige von Bildern gestattet.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Berechtigung, die die Anzeige aller Bilder verhindert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Berechtigung, die eine sichere, eingeschränkte Anzeige von Bildern gestattet. Streamzugriffe auf die Bilddatei werden in diesem Fall verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Berechtigung, die nur die Anzeige von Bildern gestattet, die zur Ursprungssite der Anwendung gehören.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Gibt die Berechtigungsstufe für Video an.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Berechtigung, die eine uneingeschränkte Videowiedergabe gestattet.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Berechtigung, die jegliche Videowiedergabe verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Berechtigung, die eine sichere, eingeschränkte Videowiedergabe gestattet. Streamzugriffe auf die Videodatei werden in diesem Fall verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Berechtigung, die nur die Videowiedergabe von Dateien gestattet, die zur Ursprungssite der Anwendung gehören.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>Mit dem <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Objekt wird gesteuert, ob das WebBrowser-Steuerelement erstellt werden kann.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse unter Angabe eines Berechtigungszustands.</summary>
      <param name="state">Ein Enumerationswert von <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse unter Angabe der Webbrowser-Berechtigungsebene.</summary>
      <param name="webBrowserPermissionLevel">Ein Enumerationswert von <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen Berechtigung und gibt sie zurück.</summary>
      <returns>Eine Kopie der aktuellen Berechtigung.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Stellt eine Berechtigung mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="securityElement">Die XML-Codierung zur Wiederherstellung der Berechtigung.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</summary>
      <param name="target">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den von beiden Berechtigungen gemeinsam beschriebenen Zustand wiedergibt. Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, ist für die Schnittmengenberechtigung gültig.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Bestimmt, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</summary>
      <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>
        <see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Berechtigung uneingeschränkt ist.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" />-Eigenschaft auf <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" /> festgelegt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Ruft den aktuellen Wert der Webbrowser-Berechtigungsebene ab oder legt diesen fest.</summary>
      <returns>Der aktuelle Wert der Webbrowser-Berechtigungsebene.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Erstellt eine XML-Codierung der Berechtigung und ihres aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung der Berechtigung, einschließlich aller Zustandsinformationen.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Kombination der aktuellen und der angegebenen Berechtigung.</summary>
      <param name="target">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Ermöglicht, dass Sicherheitsaktionen für <see cref="T:System.Security.Permissions.WebBrowserPermission" /> unter Verwendung deklarativer Sicherheit auf Code angewendet werden.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />-Klasse mit der angegebenen <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Erstellt und gibt eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse zurück.</summary>
      <returns>Eine <see cref="T:System.Security.Permissions.WebBrowserPermission" />, die der Sicherheitsdeklaration entspricht.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Ruft die aktuelle Webbrowser-Berechtigungsebene für das <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> ab oder legt sie fest.</summary>
      <returns>Der Zustand der aktuellen Webbrowser-Berechtigungsebene.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Gibt die Berechtigungsstufe für einen Webbrowser an.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Ein Webbrowser, in dessen Frames kein HTML aufgerufen werden kann.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Ein Webbrowser, in dessen Frames HTML nur mit mehreren Einschränkungen aufgerufen werden kann.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Ein Webbrowser, der ohne Einschränkungen Inhalte aufrufen kann.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">Gibt die Methode der Rights Management-Authentifizierung an.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">Implizite Authentifizierung für jeden anfordernden Benutzer.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Windows Live ID-Authentifizierung.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">Windows-Authentifizierung in einer Domänenumgebung eines Unternehmens.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Entweder Windows-Authentifizierung oder Windows Live ID-Authentifizierung.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">Stellt ein Recht dar, das einem Benutzer für den Zugriff auf ein Rights Management unterliegendes Dokument gewährt wird.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentGrant" />-Klasse, die einem angegebenen <see cref="T:System.Security.RightsManagement.ContentUser" /> ein angegebenes <see cref="T:System.Security.RightsManagement.ContentRight" /> gewährt.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Der Benutzer, dem das Zugriffsrecht gewährt wird.</param>
      <param name="right" vsli:raw="The access right that is granted.">Das Zugriffsrecht, das gewährt wird.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentGrant" />-Klasse, die einem angegebenen <see cref="T:System.Security.RightsManagement.ContentUser" /> ein angegebenes <see cref="T:System.Security.RightsManagement.ContentRight" /> für eine angegebene <see cref="T:System.DateTime" />-Dauer gewährt.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Der Benutzer, dem das Zugriffsrecht gewährt wird.</param>
      <param name="right" vsli:raw="The access right that is granted.">Das Zugriffsrecht, das gewährt wird.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">Das Anfangsdatum und die Anfangsuhrzeit für das Recht.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">Das Enddatum und die Enduhrzeit für das Recht.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">Ruft das <see cref="T:System.Security.RightsManagement.ContentRight" /> ab, das gewährt wird.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Das Zugriffsrecht, das dem <see cref="P:System.Security.RightsManagement.ContentGrant.User" /> wie für den <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />-Konstruktor angegeben gewährt wird.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">Ruft den Benutzer ab, dem der Zugriff auf <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> gewährt wird.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Der Benutzer, dem das <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> für den Zugriff wie für den <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />-Konstruktor angegeben gewährt wurde.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">Ruft das Anfangsdatum und die Anfangsuhrzeit für das gewährte <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> ab.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">Das Startdatum und die Uhrzeit, zu <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> denen der gewährte <see cref="T:System.DateTime" />beginnt, oder.<see cref="F:System.DateTime.MinValue" /> Wenn keine Start Einschränkung vorhanden ist.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">Ruft das Enddatum und die Enduhrzeit für das gewährte <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> ab.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">Das Enddatum und die Uhrzeit, zu <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> denen der erteilte <see cref="T:System.DateTime" />abgelaufen ist, oder.<see cref="F:System.DateTime.MaxValue" /> , wenn keine Endbeschränkung vorliegt.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">Gibt die Rechte an, die Benutzern für den Zugriff auf Inhalte in einem Dokument mit Rechteverwaltung erteilt werden können.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">Der Benutzer kann das Dokument bearbeiten, das die geschützten Inhalte enthält.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">Der Benutzer kann die geschützten Inhalte bearbeiten und verschlüsseln.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">Der Benutzer kann die geschützten Inhalte exportieren.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">Der Benutzer kann die geschützten Inhalte extrahieren (durch Kopieren und Einfügen).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">Der Benutzer kann die geschützten Inhalte an einen anderen Benutzer weiterleiten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">Der Benutzer kann den programmgesteuerten Zugriff auf die geschützten Inhalte steuern.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Der Benutzer ist der Besitzer der Inhalte.  Der Besitzer kann die geschützten Inhalte bearbeiten und verschlüsseln und die signierte <see cref="T:System.Security.RightsManagement.PublishLicense" /> entschlüsseln.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">Der Benutzer kann die geschützten Inhalte drucken.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">Der Benutzer kann dem Absender der geschützten Inhalte antworten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">Der Benutzer kann allen Empfängern der geschützten Inhalte antworten („Allen antworten“).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">Der Benutzer kann die geschützten Inhalte digital signieren.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">Der Benutzer kann die geschützten Inhalte sehen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Der Benutzer kann die in der signierten <see cref="T:System.Security.RightsManagement.PublishLicense" /> festgelegten Rechte entschlüsseln und anzeigen.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">Stellt einen Benutzer oder eine Benutzergruppe dar, dem bzw. der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Klasse.</summary>
      <param name="name" vsli:raw="The user or group name.">Der Benutzer- oder Gruppenname.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">Für Methode für die Authentifizierung.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Ruft eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Anyone" ab.</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Anyone".</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Ruft den für den <see cref="T:System.Security.RightsManagement.AuthenticationType" />-Konstruktor angegebenen <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Der <see cref="T:System.Security.RightsManagement.AuthenticationType" />, der an den <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Security.RightsManagement.ContentUser" /> zu einer anderen Instanz äquivalent ist.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">Die Benutzerinstanz, die auf Gleichheit überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> bei diesem und bei dem anderen Benutzer gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Gibt einen Hashcode zurück, der basierend auf <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> des Benutzers berechnet wird.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Ein Hashcode, der aus <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> des Benutzers berechnet wird.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">Gibt einen Wert zurück, der angibt, ob der Benutzer derzeit authentifiziert ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">
        <see langword="true" />, wenn der Benutzer derzeit authentifiziert ist, andernfalls <see langword="false" />.  Bis zur Authentifizierung ist der Standardwert <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Ruft den Benutzer- oder Gruppennamen ab, der an den <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />-Konstruktor übergeben wurde.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Der Benutzer- oder Gruppenname, der an den <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Ruft eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Owner" ab.</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Owner".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">Stellt DRM-Dienste (Digital Rights Management) zum Verschlüsseln und Entschlüsseln von geschütztem Inhalt bereit.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">Ruft die Verschlüsselungsblockgröße in Bytes ab.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">Die Verschlüsselungsblockgröße in Bytes.  Die Standard Blockgröße für Advanced Encryption Standard (AES) ist 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">Ruft eine Auflistung von Rechten ab, die erfolgreich überprüft und dem Benutzer gewährt wurden.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">Eine Auflistung der Rechte, die erfolgreich überprüft und dem Benutzer gewährt wurden.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">Ruft einen Wert ab, der angibt, ob der Benutzer über Entschlüsselungsrechte verfügt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Security.RightsManagement.UseLicense" /> , <see langword="false" /> wenn der Benutzerrechte zum Entschlüsseln gewährt, andernfalls.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">Ruft einen Wert ab, der angibt, ob der Benutzer über Verschlüsselungsrechte verfügt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Security.RightsManagement.UseLicense" /> , <see langword="false" /> wenn der Benutzerrechte zum Verschlüsseln erteilt, andernfalls.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">Ruft einen Wert ab, der angibt, ob <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> und <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> Puffer mit unterschiedlichen Blockgrößen akzeptieren.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />
        <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> , wenn der an übergebenen Puffer eine andere Länge als der an <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />übergebenen Puffer aufweisen kann <see langword="false" /> . andernfalls, wenn die <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> an <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> und übergebenen Puffer genau dieselbe Länge aufweisen müssen.  Für AES lautet <see langword="true" />der Standardwert.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">Entschlüsselt verschlüsselten Text.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">Der verschlüsselte Text, der entschlüsselt werden soll.</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">Der entschlüsselte Klartext von <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" /> ist NULL.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">Es wurden keine Entschlüsselungsrechte gewährt.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">Gibt alle vom <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">Verschlüsselt Klartext in Verschlüsselungstext.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">Der zu verschlüsselnde Klartextinhalt.</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">Der verschlüsselte Verschlüsselungstext des angegebenen <paramref name="clearText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" /> ist NULL.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">Verschlüsselung ist nicht zulässig.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">Gibt Ressourcen frei und führt eine interne Bereinigung durch, bevor die Instanz durch die Garbage Collection wieder freigegeben wird.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">Stellt ein unveränderliches (schreibgeschütztes) Zeichenfolgenpaar aus „Name“ und „Beschreibung“ dar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />-Klasse.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">Der Wert der Gebietsschema-<see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">Der Wert der Gebietsschema-<see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="name" />-Parameter oder der <paramref name="description" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">Ruft die Gebietsschemabeschreibung ab.</summary>
      <returns vsli:raw="The locale description.">Die Gebietsschemabeschreibung.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Gibt an ob die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft eines gegebenen Objekts mit denen dieses <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> übereinstimmen.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">Das Objekt, dessen <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft verglichen werden.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft des gegebenen Objekts mit denen dieser Instanz übereinstimmen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">Ruft einen berechneten Hashcode auf Grundlage der <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft ab.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Ein berechneter Hashcode, der auf der <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft dieses <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> basiert.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">Ruft den Gebietsschemanamen ab.</summary>
      <returns vsli:raw="The locale name.">Der Name des Gebietsschemas.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">Stellt eine durch Rights Management geschützte signierte Lizenz für Veröffentlichungen dar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.PublishLicense" />-Klasse von der serialisierten und signierten <see cref="T:System.Security.RightsManagement.PublishLicense" />, die angegeben wurde.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">Eine signierte und serialisierte Lizenz für Veröffentlichungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">Die Lizenz ist ungültig.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Versucht, in einer angegebenen <see cref="T:System.Security.RightsManagement.UseLicense" /> eine <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> für einen Benutzer oder eine Benutzergruppe abzurufen.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen Benutzer oder eine Benutzergruppe in der angegebenen <paramref name="secureEnvironment" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">Fehler bei der Authentifizierung.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Versucht, in einer angegebenen <see cref="T:System.Security.RightsManagement.UseLicense" /> eine <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> für einen Benutzer oder eine Benutzergruppe abzurufen.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen Benutzer oder eine Benutzergruppe in der angegebenen <paramref name="secureEnvironment" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">Fehler bei der Authentifizierung.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab.</summary>
      <returns vsli:raw="The publisher-created content identifier.">Der vom Herausgeber erstellte Inhaltsbezeichner.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Gibt eine entschlüsselte <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Version dieser signierten <see cref="T:System.Security.RightsManagement.PublishLicense" /> zurück.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">Der durch die Rechteverwaltung geschützte Dienst, mit dem die Lizenz entschlüsselt wird.</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">Eine entschlüsselte unsignierte Version dieser Lizenz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">Ruft den Kontaktnamen für den Autor oder den Herausgeber des Inhalts ab.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Der Kontaktname für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">Ruft den Kontakt-URI für den Autor oder den Herausgeber des Inhalts ab.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">Der Kontakt-URI (Uniform Resource Identifier) für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">Gibt die serialisierte XrML-Zeichenfolge zurück, mit der diese Lizenz erstellt wurde.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">Die serialisierte Extensible Rights Markup Language (XrML)-Zeichenfolge, mit der diese Lizenz erstellt wurde.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Ruft den URI ab, der zum Abrufen einer <see cref="T:System.Security.RightsManagement.UseLicense" /> verwendet werden soll.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Der URI, der zum Abrufen einer <see cref="T:System.Security.RightsManagement.UseLicense" />verwendet werden soll.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">Stellt einen Fehlerzustand dar, wenn eine Rechteverwaltungsoperation nicht erfolgreich abgeschlossen werden kann.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse und gibt im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Speicher Informationen zur Ausnahme an.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Das Objekt, das die serialisierten Daten enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einem angegebenen <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Der Fehlercode des Fehlers.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einer angegebenen <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> und <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Der Fehlercode des Fehlers.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Die Ausnahmeinstanz, die diesen Fehler verursacht hat.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einer angegebenen <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> und <see cref="P:System.Exception.Message" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Der Fehlercode des Fehlers.</param>
      <param name="message" vsli:raw="A message that describes the error.">Eine Meldung mit einer Beschreibung des Fehlers.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> und <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Der Fehlercode des Fehlers.</param>
      <param name="message" vsli:raw="A message that describes the error.">Eine Meldung mit einer Beschreibung des Fehlers.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Die Ausnahmeinstanz, die diesen Fehler verursacht hat.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Eine Meldung mit einer Beschreibung des Fehlers.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einer angegebenen <see cref="P:System.Exception.Message" /> und <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Eine Meldung mit einer Beschreibung des Fehlers.</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">Die Ausnahmeinstanz, die diese Ausnahme verursacht hat.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">Ruft den <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> für den Fehler ab.</summary>
      <returns vsli:raw="The failure code for the error.">Der Fehlercode des Fehlers.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">Legt im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Speicher den Parameternamen sowie Informationen zur Ausnahme fest.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Das Objekt, das die serialisierten Daten enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="info" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">Gibt Fehlerzustände an, die auftreten können, wenn ein Rechteverwaltungsvorgang ausgeführt wird.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">Asynchroner Vorgang wurde abgebrochen, oder ein nicht behebbarer Fehler ist aufgetreten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">Fehler bei Lizenzaktivierung; Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">Der aktuelle Benutzer wurde im Active Directory (AD) für die Zertifizierung im Rahmen der Windows-Authentifizierung nicht gefunden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">Der angeforderte Vorgang wird bereits ausgeführt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">Möglicher Authentifizierungsfehler (HTTP-Fehler 401) wurde durch eine Internetanforderung zurückgegeben. Es ist auch möglich, dass der aktuelle Benutzer in einem automatischen Benutzeraktivierungsversuch nicht über gültige Domänenanmeldeinformationen verfügt. Außerdem besteht die Möglichkeit, dass der Zertifizierungsserver sich bei der automatischen Benutzeraktivierung nicht in der lokalen Intranetzone oder der Zone der vertrauenswürdigen Sites befindet.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">Eine ungültige Konstante wurde übergeben.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">Die Zugriffsbedingung stimmt nicht mit dem aktivierenden Prinzipal überein, der der Bindung übergeben wird.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">Der aktuelle Benutzer erfüllt nicht die in der Endbenutzerlizenz (End Use License, EUL) definierten Bedingungen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">Die angegebene Ressource ist in keinem WORK-Knoten der Lizenz enthalten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">Der aktivierende Prinzipal entspricht nicht der Endbenutzerlizenz (EUL).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Der definierte Zeitraum für den geschützten Inhalt ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">Der aktuelle Computer ist nicht in der Gruppenidentität definiert, deren Rechte verwaltet werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">Die angegebene Berechtigungsgruppe ist nicht in der Endbenutzerlizenz (EUL) enthalten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">Die Lizenz erfordert, dass eine neue Sperrliste erworben werden muss.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">Die Endbenutzerlizenz (EUL) enthält keinen WORK-Knoten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Der definierte Zeitraum für den geschützten Inhalt ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">Die Rechteverwaltungs-Zertifikatskette ist unterbrochen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">Zurücksetzen der Uhr wurde erkannt. Zugriff auf geschützten Inhalte ist nicht möglich.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">Ein kryptografischer Vorgang, der angefordert wurde, wird nicht unterstützt. Beispiel: Übergeben eines RMS-Verschlüsselungsobjekts für die Entschlüsselung.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">Inhalt mit eingeschränkten Berechtigungen kann nicht geöffnet oder veröffentlicht werden, da ein Debugger erkannt wurde.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">Die E-Mail-Adresse des Benutzers kann nicht überprüft werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">Der angegebene Prinzipal kann nicht aktiviert werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">Verschlüsselung ist nicht zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Die <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> kann nicht geladen werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Die <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> kann nicht geladen werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">Der in der Veröffentlichungslizenzvorlage definierte autorisierte Zeitraum ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">Die angegebene Option wurde bereits festgelegt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">Für die Clientsitzung wurde kein Benutzername angegeben.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">Die in einem Computeraktivierungsversuch verwendete Hardware-ID (HID) ist falsch formatiert. Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">Die in einem Computeraktivierungsversuch verwendete Hardware-ID (HID) ist ungültig. Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">Die Inhalts-ID aus der Lizenz entspricht nicht der Inhalts-ID der Lizenzspeichersitzung.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">Ein übergebener Objekttyp ist mit diesem Vorgang nicht kompatibel.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">Beim Erstellen einer gebundenen Lizenz wurde eine Veröffentlichungslizenz angegeben, keine Endbenutzerlizenz.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">Einige Informationen fehlen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">Bei einem Installationsvorgang ist ein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">Der angegebene Algorithmustyp ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">Fehler bei der Überprüfung der E-Mail-Adresse des RMS-Servers.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">Der angegebene Codierungstyp ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">Entweder ist die Umgebung oder das aktivierende Prinzipalhandle ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">Die Rechteverwaltungsserver-Vorlage enthält mindestens einen Fehler.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">Die in einem Schlüssel-Wert-Paar angegebene Schlüssellänge ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">Die Lizenzstruktur in einem der Zertifikate ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">Signiertes digitales Rechteverwaltungszertifikat kann nicht überprüft werden. (Das signierte Zertifikat wurde möglicherweise manipuliert.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">Der angegebene numerische Wert ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">Der angegebene Registrierungspfad ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">Die angegebenen Zeitinformationen sind ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">Die Rechteverwaltungsversion ist falsch.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">In einem Schlüssel-Wert-Paar wird der angegebene Schlüsseltyp nicht unterstützt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">Bei diesem Bibliotheksvorgang ist ein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">Das angegebene Bibliothek-Plug-In wird nicht unterstützt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">Vom Rechteverwaltungsserver konnte keine Endbenutzerlizenz (EUL) abgerufen werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">Die Anmeldeinformationen des aktuellen Benutzers gelten nicht für den Erwerb einer Lizenz.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">Ein Vorgang verstößt gegen die Rechteverwaltungsmanifest-Richtlinie.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">Die angegebenen Metadaten konnten nicht festgelegt werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">Der Benutzer ist nicht aktiviert, oder es wurde kein Rechtekontozertifikat (Rights Account Certificate, RAC) übermittelt, und im Lizenzspeicher wurde keines gefunden, dass der Lizenz entspricht, die dieser Sitzung zugeordnet ist.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">Der Computer muss aktiviert werden, bevor der Benutzer aktiviert werden kann.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">Die Rechteverwaltung kann keine Verbindung mit dem für den Lizenzserver angegebenen URI herstellen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">Der geschützte Inhalt ist beschädigt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">Eine erforderliche Lizenz ist nicht verfügbar.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">Am angegebenen Index ist keine Lizenz bzw. kein Zertifikat vorhanden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">Der Inhalt der Rechteverwaltung ist beschädigt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">Das Element, dessen Löschung angefordert wurde, ist nicht vorhanden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">Das maximale Kontingent von Endbenutzerlizenzen (EULs) des Lizenzservers wurde erreicht.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">Das Dokument enthält keine Besitzerlizenz.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">Es sind keine Instanzen des angeforderten Attributs vorhanden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">Die angegebene Lizenz wurde nicht gefunden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">Der Rechteverwaltungsserver lässt keine temporäre Zertifizierung des aktuellen Benutzers zu.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">Zertifikat- oder Lizenzsperrinformationen wurden nicht festgelegt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">Das angeforderte Recht wurde beim Veröffentlichen des Inhalts mit der Rechteverwaltung nicht angegeben.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">Vorgang wurde erfolgreich abgeschlossen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">Die Anzahl der Zertifikate hat die maximale zulässige Anzahl überschritten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">Zu viele <see cref="T:System.Security.RightsManagement.SecureEnvironment" />-Instanzen wurden erstellt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">Es ist ein unbekannter Fehler aufgetreten.  Wird auch ausgelöst, wenn eine Anwendung im Debugmodus ausgeführt wird.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">Wenn eine Anforderung für die Computeraktivierung oder ein Rechtekontozertifikat erfolgt, gibt das empfangende <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" />-Element an, dass die Anwendung <see langword="null" /> an den ActServInfo-Parameter übergeben soll.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Der definierte Zeitraum für den geschützten Inhalt ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">Stellt eine sichere Clientsitzung für die Benutzeraktivierung, Lizenzbindung und andere Rights Management-Vorgänge dar.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Ruft das <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> ab, das beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> angegeben wurde.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">Das Anwendungsmanifest, das an die <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" />-Methode beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> übergeben wurde.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">Erstellt eine sichere Clientsitzung unter Angabe von Anwendungsrechtemanifest, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> und <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Das Anwendungsrechtemanifest.</param>
      <param name="authentication" vsli:raw="The method of authentication.">Die Authentifizierungsmethode.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">Der Typ des Benutzer-Rechtekontozertifikats.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Eine sichere Clientsitzung für die Aktivierung, Lizenzbindung und andere Rechteverwaltungsvorgänge.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">Erstellt eine sichere Clientsitzung für einen angegebenen Benutzer mit einem angegebenen Rechtemanifest.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Das Anwendungsrechtemanifest.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Der Benutzer oder die Benutzergruppe, dem oder der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Eine sichere Clientsitzung für die Aktivierung, Lizenzbindung und andere Rechteverwaltungsvorgänge.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Gibt alle vom <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">Gibt eine Liste der aktivierten Benutzer zurück.</summary>
      <returns vsli:raw="A list of the currently activated users.">Eine Liste der aktivierten Benutzer.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">Gibt an, ob einem bestimmten Benutzer Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wurde.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Der Benutzer oder die Benutzergruppe, dem oder der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dem angegebenen <paramref name="user" /> Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">Entfernt die Lizenzaktivierung für einen angegebenen Benutzer.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">Der Benutzer, für den die Lizenzaktivierung entfernt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="user" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">Der angegebene <paramref name="user" /> wurde weder über die Windows-Authentifizierung noch über die Passport-Authentifizierung authentifiziert.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Ruft den Benutzer oder die Benutzergruppe ab, die beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> angegeben wurde.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Der Benutzer oder die Benutzergruppe, die an die <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />-Methode beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> übergeben wurde.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">Stellt eine <see cref="T:System.Security.RightsManagement.PublishLicense" />-Vorlage ohne Vorzeichen mit Rechteverwaltung oder eine <see cref="T:System.Security.RightsManagement.PublishLicense" />-Vorlage ohne Vorzeichen dar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Klasse aus einer angegebenen XrML-Vorlage für Veröffentlichungslizenzen.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">Die Extensible Rights Markup Language (XrML)-Vorlage für Veröffentlichungslizenzen, die verwendet werden soll, um diese Lizenz zu erstellen.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab, oder legt diesen fest.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">Der vom Herausgeber erstellte Inhaltsbezeichner mit Rechteverwaltung.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">Ruft eine Auflistung zugewiesener Benutzerrechte ab.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">Eine Auflistung zugewiesener Benutzerrechte, die in dieser Lizenz bereitgestellt werden.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">Ruft eine paarweise Auflistung von Namen und Beschreibungen ab.</summary>
      <returns vsli:raw="A collection of name and description pairs.">Eine paarweise Auflistung von Namen und Beschreibungen.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">Ruft den Besitzer des Inhalts ab oder legt diesen fest.</summary>
      <returns vsli:raw="The user who owns the published content.">Der Benutzer, der den veröffentlichten Inhalt besitzt.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">Ruft den Kontaktnamen für den Autor oder den Herausgeber des Inhalts ab oder legt diesen fest.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Der Kontaktname für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">Ruft den Kontakt-URI für den Autor oder den Herausgeber des Inhalts ab oder legt diesen fest.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">Der Kontakt-URI (Uniform Resource Identifier) für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Erstellt eine signierte <see cref="T:System.Security.RightsManagement.PublishLicense" /> und gibt eine <see cref="T:System.Security.RightsManagement.UseLicense" /> für den Autor des Dokuments zurück.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Eine zurückgegebene <see cref="T:System.Security.RightsManagement.UseLicense" /> für den Autor des Dokuments.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Die signierte <see cref="T:System.Security.RightsManagement.PublishLicense" />, die durch Signieren dieser <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> erstellt wird.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Gibt eine serialisierte Vorlage zurück, die aus dem XrML-Objekt des <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Objekts erstellt wurde.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Eine serialisierte Vorlage, die aus dem XrML-Objekt des <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Objekts erstellt wurde.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">Stellt eine Lizenz dar, die Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.UseLicense" />-Klasse.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">Eine Nutzungslizenz in serialisierter Extensible Rights Markup Language (XrML)-Form.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Ruft das Datenwörterbuch der Anwendung ab, das Schlüssel-Wert-Paare enthält, die von der veröffentlichenden Anwendung an die verarbeitende Anwendung übergeben wurden.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Das Datenwörterbuch der Anwendung, das Schlüssel-Wert-Paare enthält, die von der veröffentlichenden Anwendung an die verarbeitende Anwendung übergeben wurden.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Bindet die Lizenz an eine bestimmte <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">Die Umgebung, an die die Lizenz gebunden wird.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Security.RightsManagement.CryptoProvider" />-Instanz, wenn die Lizenzbindung erfolgreich ausgeführt wurde, andernfalls <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">der vom Herausgeber erstellte Inhaltsbezeichner.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">Gibt an, ob diese Lizenz zu einer anderen Lizenz äquivalent ist.</summary>
      <param name="x" vsli:raw="The license to compare.">Die zu vergleichende Lizenz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn beide Lizenzen äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">Gibt den dieser Lizenz zugeordneten Hashcode zurück.</summary>
      <returns vsli:raw="A hash code for this license.">Ein Hashcode für diese Lizenz.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">Ruft den Inhaber der Lizenz ab.</summary>
      <returns vsli:raw="The owner of the license.">Der Inhaber der Lizenz.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">Gibt die serialisierte XrML-Zeichenfolge zurück, mit der die Lizenz erstellt wurde.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">Die serialisierte Extensible Rights Markup Language (XrML)-Zeichenfolge, die ursprünglich an den <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">Gibt das Rechtekontozertifikat für Benutzer an, das für die Aktivierung der Rechteverwaltung angefordert werden soll.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">Ein dauerhaftes Rechtekontozertifikat.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">Ein temporäres Rechtekontozertifikat.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">Stellt eine Basisklasse für .NET Framework-Attribute bereit, die den Verwendungsbereich für angefügte Eigenschaften melden.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">Gibt an, dass eine angefügte Eigenschaft nur für Elemente durchsucht werden kann, die von einem bestimmten Typ abgeleitet sind.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />-Klasse unter Verwendung des bereitgestellten <paramref name="targetType" />.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">Der gewünschte Typ, der die Verwendung für die angefügte Eigenschaft festlegt, auf die dieses .NET Framework-Attribut angewendet wird.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Bestimmt, ob das aktuelle <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework-Attribut einem angegebenen Objekt entspricht.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Die <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />, die mit der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> gleich der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Gibt den Hashcode für diesen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework-Attribut zurück.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">Ruft den Basistyp ab, der die Verwendung der angefügten Eigenschaft festlegt, für die dieses .NET Framework-Attribut gilt.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Der angeforderte <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Ruft einen eindeutigen Typbezeichner für diesen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework-Attribut ab.</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Ein Objekt, bei dem es sich um einen eindeutigen Bezeichner für das <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> handelt.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">Gibt an, dass eine angefügte Eigenschaft nur für ein Element gesucht werden kann, auf dessen Klassendefinition außerdem ein weiteres spezifisches .NET Framework-Attribut angewendet wurde.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />-Klasse.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">Das <see cref="T:System.Type" />-Element von .NET Framework-Attribut, das auch auf eine Klasse angewendet werden muss, damit die angefügte Eigenschaft in der Klasse, in der das <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> angewendet wird, durchsucht werden kann.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">Ruft den Typ des .NET Framework-Attribut ab, der auch auf eine Klasse angewendet werden muss.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">Der .NET Framework-Attribut Typ.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Bestimmt, ob das aktuelle <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework-Attribut einem angegebenen Objekt entspricht.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">Die <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />, die mit der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> gleich der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">Gibt den Hashcode für diesen <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework-Attribut zurück.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">Enthält Eigenschaften, die angeben, wie sich eine Anwendung gegenüber neuen WPF-Funktionen verhalten sollte, die sich in der WindowsBase-Assembly befinden.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Ruft einen Wert ab oder legt diesen fest, der angibt, ob Informationen über die <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> in die <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> gespeichert werden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Informationen über die <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> in die <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> gespeichert werden; sonst <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">Definiert, wie der Verteiler auf Fehler reagiert, die bei der Anforderung für die Verarbeitung aufgetreten sind.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">Ein Wert, der definiert, wie der Verteiler auf Fehler reagiert.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">Stellt einen Satz von Werten bereit, der beschreibt, wie der Verteiler auf Fehler reagiert, die bei der Verarbeitungsanforderung auftreten.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">Fortfahren nach dem Fehler.
Dies ist der Standardwert. Dies stellt das Verhalten des Verteilers von Windows Presentation Foundation vor .NET Framework 4.7.1 dar. Möglicherweise reagiert der Verteiler nicht, wenn diese Option ausgewählt ist.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">Setzen Sie den Zustand des Verteilers zurück, um erneut eine Anforderungen auszuprobieren, wenn diese erforderlich ist.
Während diese Option manchmal Probleme bei der Reaktionsfähigkeit beheben kann, kann sie nicht die normale Zeit der Verarbeitung beachten, die wesentlich sein kann. Wenn Sie diese Option wählen, kann es zu unerwarteten Verhalten kommen.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">Löst eine Ausnahme aus.
Diese Option macht den Entwickler sofort auf das Problem aufmerksam.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">Ruft einen Wert ab oder legt diesen fest, der angibt, ob die <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />-Methode die Delegate in die Verteilerwarteschlange setzt oder ob der Delegat direkt aufgerufen wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />-Methode die Delegate in die Verteilerwarteschlange setzt oder wenn der Delegat direkt aufgerufen wird; sonst <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">Ruft einen Wert ab oder legt diesen fest, der angibt, ob eine einfache <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> für mehrfache Verteilervorgänge verwendet wird.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Wahr, wenn eine einfache <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> für mehrfache Verteilervorgänge verwendet wird; sonst <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">Stellt eine Vorlage für eine Methode bereit, die aufgerufen wird, wenn der Wert einer Abhängigkeitseigenschaft erneut ausgewertet wird oder wenn ausdrücklich eine Umwandlung angefordert wird.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">Das Objekt, für das die Eigenschaft vorhanden ist. Wenn der Rückruf aufgerufen wird, übergibt das Eigenschaftensystem diesen Wert.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">Der neue Wert der Eigenschaft vor einem Umwandlungsversuch.</param>
      <returns vsli:raw="The coerced value (with appropriate type).">Der umgewandelte Wert (mit dem entsprechenden Typ).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Int32Rect" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Int32Rect" />-Instanz konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Int32Rect" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Int32Rect" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Int32Rect" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Point" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.PointValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Point" />-Instanz konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Point" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Point" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Point" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Rect" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.RectValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Rect" />-Instanz konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Rect" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Rect" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Rect" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Eine Zeichenfolgendarstellung des angegebenen <see cref="T:System.Windows.Rect" />-Objekts.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Size" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.SizeValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Size" />-Instanz konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Size" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Size" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Size" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Vector" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.VectorValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Vector" />-Instanz konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Vector" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Vector" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Vector" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">Allgemeine Basisklasse und Vertrag für <see cref="T:System.Windows.Data.DataSourceProvider" />-Objekte, die Factorys sind, die bestimmte Abfragen ausführen, um ein einzelnes Objekt oder eine Liste von Objekten zu erstellen, die Sie als Quelle Bindungsquellenobjekte verwenden können.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Data.DataSourceProvider" />-Klasse. Dies ist ein geschützter Konstruktor.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">Gibt an, dass die Initialisierung dieses Objekts gerade beginnt, es wird kein impliziter <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> ausgeführt, bis die übereinstimmende <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />-Methode aufgerufen wird.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">Beim Überschreiben in einer abgeleiteten Klasse ruft diese Basisklasse diese Methode auf, wenn <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> oder <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> aufgerufen wurde. Die Basisklasse verzögert den Aufruf, wenn die Aktualisierung verzögert wird oder der ursprüngliche Ladevorgang deaktiviert ist.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">Ruft das zugrunde liegende Datenobjekt ab</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">Ein Wert des Typs <see cref="T:System.Object" />, der das zugrunde liegende Datenobjekt ist.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">Tritt ein, wenn die <see cref="P:System.Windows.Data.DataSourceProvider.Data" />-Eigenschaft einen neuen Wert besitzt.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">Wechselt in eine Verzögerungsschleife, mit der Sie Eigenschaften des Anbieters ändern und die automatische Aktualisierung verzögern können.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Ein <see cref="T:System.IDisposable" />-Objekt, das Sie verwenden können, um das aufrufende Objekt zu verwerfen.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">Ruft das aktuelle <see cref="T:System.Windows.Threading.Dispatcher" />-Objekt für den zu verwendenden UI-Thread ab oder legt dieses fest.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">Das aktuelle <see cref="T:System.Windows.Threading.Dispatcher" /> Objekt für den UI Thread, der verwendet werden soll. Standardmäßig ist dies das <see cref="T:System.Windows.Threading.Dispatcher" />-Objekt, das dem Thread zugeordnet ist, auf dem diese Instanz erstellt wurde.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">Gibt an, dass die Initialisierung dieses Objekts abgeschlossen ist. Dadurch wird ein <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> ausgelöst, wenn kein weiterer <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> aussteht.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">Ruft den Fehler des letzten Abfragevorgangs ab.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">Ein Wert vom Typ <see cref="T:System.Exception" />, der der Fehler des letzten Abfragevorgangs ist, oder <see langword="null" />, wenn kein Fehler vorliegt.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Startet die ursprüngliche Abfrage des zugrunde liegenden Datenmodells. Das Ergebnis wird für die <see cref="P:System.Windows.Data.DataSourceProvider.Data" />-Eigenschaft zurückgegeben.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">Ruft ab oder legt einen Wert fest, der angibt, ob das automatische Laden der Daten zu verhindern oder zu verzögern.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" />, wenn das automatische Laden von Daten verhindert oder verzögert werden soll, andernfalls <see langword="true" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">Ruft einen Wert ab, mit dem angegeben wird, ob ein ausstehender <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> vorhanden ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine ausstehende <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">Löst das <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />-Ereignis unter Verwendung der angegebenen Argumente aus.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argumente des ausgelösten Ereignisses.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Abgeleitete Klassen rufen diese Methode auf, um anzugeben, dass eine Abfrage beendet wurde.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Die Daten, die das Ergebnis der Abfrage bilden.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Abgeleitete Klassen rufen diese Methode auf, um anzugeben, dass eine Abfrage beendet wurde.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Die Daten, die das Ergebnis der Abfrage bilden.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">Der Fehler, der beim Ausführen der Abfrage aufgetreten ist. Dieser Wert ist <see langword="null" />, wenn kein Fehler vorliegt.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">Optionaler Delegat, der zum Ausführen des Abschlusses für den UI-Thread verwendet wird, z. B. zum Festlegen zusätzlicher Eigenschaften.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">Optionale Argumente, die als Parameter für den <paramref name="completionWork" />-Delegaten gesendet werden.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Initiiert einen Aktualisierungsvorgang für das zugrunde liegenden Datenmodell. Das Ergebnis wird für die <see cref="P:System.Windows.Data.DataSourceProvider.Data" />-Eigenschaft zurückgegeben.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">Stellt ein Objekt dar, das im Abhängigkeitseigenschaftensystem teilnimmt.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.DependencyObject" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">Löscht den lokalen Wert einer Eigenschaft. Die Eigenschaft, deren Wert gelöscht werden soll, wird durch einen <see cref="T:System.Windows.DependencyProperty" />-Bezeichner angegeben.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">Die Abhängigkeitseigenschaft, deren Wert gelöscht werden soll, wird durch einen <see cref="T:System.Windows.DependencyProperty" />-Objektverweis identifiziert.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Es wurde versucht, <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> für ein versiegeltes <see cref="T:System.Windows.DependencyObject" /> aufzurufen.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">Löscht den lokalen Wert einer schreibgeschützten Eigenschaft. Die Eigenschaft, deren Wert gelöscht werden soll, wird durch einen <see cref="T:System.Windows.DependencyPropertyKey" /> angegeben.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">Der Schlüssel für die Abhängigkeitseigenschaft, deren Wert gelöscht werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Es wurde versucht, <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> für ein versiegeltes <see cref="T:System.Windows.DependencyObject" /> aufzurufen.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Erzwingt den Wert der angegebenen Abhängigkeitseigenschaft. Dies erfolgt durch den Aufruf einer beliebigen <see cref="T:System.Windows.CoerceValueCallback" />-Funktion, die in den Metadaten für die Abhängigkeitseigenschaft angegeben ist, während sie beim aufrufenden <see cref="T:System.Windows.DependencyObject" /> beendet wird.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">Der Bezeichner für die zu erzwingende Abhängigkeitseigenschaft.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">Der angegebene <paramref name="dp" /> oder sein Wert waren ungültig oder sind nicht vorhanden.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Ruft den <see cref="T:System.Windows.DependencyObjectType" /> ab, der den CLR-Typ dieser Instanz umschließt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Ein <see cref="T:System.Windows.DependencyObjectType" />, der den CLR-Typ dieser Instanz umschließt.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Bestimmt, ob ein angegebenes <see cref="T:System.Windows.DependencyObject" /> dem aktuellen <see cref="T:System.Windows.DependencyObject" /> entspricht.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">Der <see cref="T:System.Windows.DependencyObject" />, der mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn beide Instanzen identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Ruft einen Hashcode für diese <see cref="T:System.Windows.DependencyObject" /> ab.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Erstellt einen spezialisierten Enumerator, mit dem bestimmt wird, welche Abhängigkeitseigenschaften dieses <see cref="T:System.Windows.DependencyObject" /> über lokal festgelegte Werte verfügen.</summary>
      <returns vsli:raw="A specialized local value enumerator.">Ein spezialisierter lokaler Wertenumerator.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Gibt den aktuellen effektiven Wert einer Abhängigkeitseigenschaft für diese Instanz eines <see cref="T:System.Windows.DependencyObject" /> zurück.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Der <see cref="T:System.Windows.DependencyProperty" />-Bezeichner der Eigenschaft, für die der Wert abgerufen wird.</param>
      <returns vsli:raw="Returns the current effective value.">Gibt den aktuellen effektiven Wert zurück.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">Der angegebene <paramref name="dp" /> oder sein Wert ist ungültig, oder das angegebene <paramref name="dp" /> ist nicht vorhanden.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">Wertet den effektiven Wert für die angegebene Abhängigkeitseigenschaft erneut aus.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">Der <see cref="T:System.Windows.DependencyProperty" />-Bezeichner der neu zu berechnenden Eigenschaft.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">Ruft einen Wert ab, der angibt, ob diese Instanz derzeit versiegelt (schreibgeschützt) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Instanz versiegelt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">Wird immer dann aufgerufen, wenn der effektive Wert einer Abhängigkeitseigenschaft für dieses <see cref="T:System.Windows.DependencyObject" /> aktualisiert wurde. Welche spezifische Abhängigkeitseigenschaft geändert wird, wird in den Ereignisdaten gemeldet.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">Ereignisdaten, die den betreffenden Bezeichner für eine Abhängigkeitseigenschaft, die Eigenschaftsmetadaten für den Typ sowie die alten und neuen Werte enthalten.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">Gibt, sofern vorhanden, den lokalen Wert einer Abhängigkeitseigenschaft zurück.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Der <see cref="T:System.Windows.DependencyProperty" />-Bezeichner der Eigenschaft, für die der Wert abgerufen wird.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">Gibt den lokalen Wert oder den Sentinelwert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> zurück, wenn kein lokaler Wert festgelegt ist.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">Legt den Wert einer Abhängigkeitseigenschaft fest, ohne die Wertquelle zu ändern.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Der Bezeichner der festzulegenden Abhängigkeitseigenschaft.</param>
      <param name="value" vsli:raw="The new local value.">Der neue lokale Wert.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Es wurde versucht, eine schreibgeschützte Abhängigkeitseigenschaft oder eine Eigenschaft eines versiegelten <see cref="T:System.Windows.DependencyObject" /> zu ändern.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> hatte nicht den richtigen Typ, wie er für die <paramref name="dp" />-Eigenschaft registriert ist.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">Legt den lokalen Wert einer Abhängigkeitseigenschaft fest, die über ihren Bezeichner angegeben wird.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Der Bezeichner der festzulegenden Abhängigkeitseigenschaft.</param>
      <param name="value" vsli:raw="The new local value.">Der neue lokale Wert.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Es wurde versucht, eine schreibgeschützte Abhängigkeitseigenschaft oder eine Eigenschaft eines versiegelten <see cref="T:System.Windows.DependencyObject" /> zu ändern.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> entsprach nicht dem für die <paramref name="dp" />-Eigenschaft registrierten Typ.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">Legt den lokalen Wert einer schreibgeschützten Abhängigkeitseigenschaft fest, die durch den <see cref="T:System.Windows.DependencyPropertyKey" />-Bezeichner der Abhängigkeitseigenschaft angegeben ist.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">Der <see cref="T:System.Windows.DependencyPropertyKey" />-Bezeichner der festzulegenden Eigenschaft.</param>
      <param name="value" vsli:raw="The new local value.">Der neue lokale Wert.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">Gibt einen Wert zurück, der angibt, ob Serialisierungsprozesse den Wert der bereitgestellten Abhängigkeitseigenschaft serialisieren sollen.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">Der Bezeichner für die Abhängigkeitseigenschaft, die serialisiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die bereitgestellte Abhängigkeitseigenschaft serialisiert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">Implementiert einen zugrunde liegenden Typencache für alle abgeleiteten <see cref="T:System.Windows.DependencyObject" />-Typen.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Ruft den <see cref="T:System.Windows.DependencyObjectType" /> der direkten Basisklasse des aktuellen <see cref="T:System.Windows.DependencyObjectType" /> ab.</summary>
      <returns vsli:raw="The type of the base class.">Der Typ der Basisklasse.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">Gibt einen <see cref="T:System.Windows.DependencyObjectType" /> zurück, der einen bestimmten Systemtyp (CLR) darstellt.</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">Der Systemtyp (CLR), der konvertiert werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">Ein <see cref="T:System.Windows.DependencyObjectType" />, der den Systemtyp (CLR) darstellt.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Gibt den Hashcode für diese <see cref="T:System.Windows.DependencyObjectType" /> zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">Ruft einen nullbasierten eindeutigen Bezeichner für Array-Suchvorgänge mit konstanter Zeit ab.</summary>
      <returns vsli:raw="An internal identifier.">Ein interner Bezeichner.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Bestimmt, ob das angegebene Objekt eine Instanz des aktuellen <see cref="T:System.Windows.DependencyObjectType" /> ist.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Das Objekt, das mit der aktuellen <see cref="T:System.Windows.DependencyObjectType" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die durch den aktuellen <see cref="T:System.Windows.DependencyObjectType" /> dargestellte Klasse in der Vererbungshierarchie des <see cref="T:System.Windows.DependencyObject" /> als <paramref name="d" /> übergeben wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Bestimmt, ob der aktuelle <see cref="T:System.Windows.DependencyObjectType" /> vom angegebenen <see cref="T:System.Windows.DependencyObjectType" /> abgeleitet ist.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Windows.DependencyObjectType" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">
        <see langword="true" />, wenn der <paramref name="dependencyObjectType" />-Parameter und der aktuelle <see cref="T:System.Windows.DependencyObjectType" /> Typen von Klassen darstellen und die vom aktuellen <see cref="T:System.Windows.DependencyObjectType" /> dargestellte Klasse von der durch <paramref name="dependencyObjectType" /> dargestellten Klasse abgeleitet ist. andernfalls <see langword="false" />. Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="dependencyObjectType" /> und der aktuelle <see cref="T:System.Windows.DependencyObjectType" /> dieselbe Klasse darstellen.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">Ruft den Namen des dargestellten Common Language Runtime (CLR)-Systemtyps ab.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">Der Name des dargestellten CLR-Systemtyps.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Ruft den Common Language Runtime (CLR)-Systemtyp ab, der durch diesen <see cref="T:System.Windows.DependencyObjectType" /> dargestellt wird.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Der CLR-Systemtyp, der durch diesen <see cref="T:System.Windows.DependencyObjectType" /> dargestellt wird.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">Stellt eine Eigenschaft dar, die durch Methoden festgelegt werden kann, z. B. Formatierung, Datenbindung, Animation und Vererbung.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">Fügt einen weiteren Typ als Besitzer einer Abhängigkeitseigenschaft hinzu, die bereits registriert wurde.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">Der Typ, der als ein Besitzer dieser Abhängigkeitseigenschaft hinzugefügt werden soll.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Ein Verweis auf den ursprünglichen <see cref="T:System.Windows.DependencyProperty" />-Bezeichner, der die Abhängigkeitseigenschaft angibt. Dieser Bezeichner sollte von der hinzufügenden Klasse als <see langword="public static readonly" />-Feld verfügbar gemacht werden.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">Fügt einen anderen Typ als Besitzer einer Abhängigkeitseigenschaft hinzu, die bereits registriert wurde. Dabei werden Abhängigkeitseigenschaft-Metadaten für die Abhängigkeitseigenschaft bereitgestellt, wie sie für den bereitgestellten Besitzertyp vorhanden sind.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">Der Typ, der als Besitzer dieser Abhängigkeitseigenschaft hinzugefügt werden soll.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">Die Metadaten, die die Abhängigkeitseigenschaft beschreiben, wie sie für den bereitgestellten Typ vorhanden sind.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Ein Verweis auf den ursprünglichen <see cref="T:System.Windows.DependencyProperty" />-Bezeichner, der die Abhängigkeitseigenschaft angibt. Dieser Bezeichner sollte von der hinzufügenden Klasse als <see langword="public static readonly" />-Feld verfügbar gemacht werden.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">Ruft die Standardmetadaten der Abhängigkeitseigenschaft ab.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">Die Standardmetadaten der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Gibt einen Hashcode für diese <see cref="T:System.Windows.DependencyProperty" /> zurück.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Der Hashcode für diese <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">Gibt die Metadaten für diese Abhängigkeitseigenschaft zurück, wie sie für einen angegebenen vorhanden Typ vorhanden sind.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">Der spezifische Typ, von dem die Metadaten für die Abhängigkeitseigenschaft abgerufen werden sollen.</param>
      <returns vsli:raw="A property metadata object.">Ein Objekt für Eigenschaftenmetadaten.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">Gibt die Metadaten für diese Abhängigkeitseigenschaft zurück, da sie für die angegebene Objektinstanz vorhanden sind.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">Ein Abhängigkeitsobjekt, dessen Typ überprüft wird, um zu ermitteln, von welcher typspezifischen Version der Abhängigkeitseigenschaft die Metadaten stammen sollen.</param>
      <returns vsli:raw="A property metadata object.">Ein Objekt für Eigenschaftenmetadaten.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">Gibt die Metadaten für diese Abhängigkeitseigenschaft zurück, wie sie für einen angegebenen Typ vorhanden sind.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">Ein bestimmtes Objekt, das den Abhängigkeitsobjekttyp aufzeichnet, von dem die Metadaten für die Abhängigkeitseigenschaft stammen sollen.</param>
      <returns vsli:raw="A property metadata object.">Ein Objekt für Eigenschaftenmetadaten.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">Ruft einen intern generierten Wert ab, der die Abhängigkeitseigenschaft eindeutig identifiziert.</summary>
      <returns vsli:raw="A unique numeric identifier.">Ein eindeutiger numerischer Bezeichner.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">Bestimmt, ob ein angegebener Wert für den Typ dieser Abhängigkeitseigenschaft akzeptiert wird, wie anhand des in der Registrierung der ursprünglichen Abhängigkeitseigenschaft angegebenen Eigenschaftentyps überprüft wurde.</summary>
      <param name="value" vsli:raw="The value to check.">Der zu überprüfende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Wert der registrierte Eigenschaftentyp oder ein zulässiger abgeleiteter Typ ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">Bestimmt, ob der angegebene Wert für den Eigenschaftentyp durch eine einfache Typüberprüfung zulässig ist und ob er sich potenziell im zulässigen Wertebereich für den Typ befindet.</summary>
      <param name="value" vsli:raw="The value to check.">Der zu überprüfende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert zulässig ist und den richtigen Typ oder einen abgeleiteten Typ aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">Ruft den Namen der Abhängigkeitseigenschaft ab.</summary>
      <returns vsli:raw="The name of the property.">Den Namen der Eigenschaft.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">Gibt alternative Metadaten für diese Abhängigkeitseigenschaft an, wenn sie in Instanzen eines angegebenen Typs vorhanden ist. Dabei werden die Metadaten überschrieben, die für die Abhängigkeitseigenschaft bei der Vererbung von Basistypen vorhanden waren.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Der Typ, bei dem diese Abhängigkeitseigenschaft geerbt wird und bei dem die bereitgestellten alternativen Metadaten angewendet werden.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Die Metadaten, die auf die Abhängigkeitseigenschaft im überschreibenden Typ angewendet werden sollen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">Es wurde versucht, die Metadaten für eine schreibgeschützte Abhängigkeitseigenschaft zu überschreiben (dieser Vorgang kann nicht mit dieser Signatur ausgeführt werden).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">Metadaten wurden für die Abhängigkeitseigenschaft bereits festgelegt, wie im bereitgestellten Typ vorhanden.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">Stellt alternative Metadaten für eine schreibgeschützte Abhängigkeitseigenschaft bereit, wenn sie in Instanzen eines angegebenen Typs vorhanden ist, wodurch die Metadaten überschrieben werden, die bei der ersten Registrierung der Abhängigkeitseigenschaft bereitgestellt wurden. Sie müssen die <see cref="T:System.Windows.DependencyPropertyKey" /> für die schreibgeschützte Abhängigkeitseigenschaft übergeben, um das Auslösen einer Ausnahme zu vermeiden.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Der Typ, bei dem diese Abhängigkeitseigenschaft geerbt wird und bei dem die bereitgestellten alternativen Metadaten angewendet werden.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Die Metadaten, die auf die Abhängigkeitseigenschaft im überschreibenden Typ angewendet werden sollen.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">Der Zugriffsschlüssel für eine schreibgeschützte Abhängigkeitseigenschaft.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">Ruft den Typ des Objekts ab, das die Abhängigkeitseigenschaft im Eigenschaftensystem registriert oder sich selbst als Besitzer der Eigenschaft hinzugefügt hat.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">Der Typ des Objekts, das die Eigenschaft registriert oder sich selbst als Besitzer der Eigenschaft hinzugefügt hat.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">Ruft den Typ ab, den die Abhängigkeitseigenschaft für den Wert verwendet.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">Der <see cref="T:System.Type" /> des Eigenschaftswerts.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">Ruft einen Wert ab, der angibt, ob die von dieser <see cref="T:System.Windows.DependencyProperty" />-Instanz angegebene Abhängigkeitseigenschaft eine schreibgeschützte Abhängigkeitseigenschaft ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Abhängigkeitseigenschaft schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">Registriert eine Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftennamen, Eigenschaftentyp und Besitzertyp.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">Der Name der zu registrierenden Abhängigkeitseigenschaft. Der Name muss innerhalb des Registrierungsnamespace des Besitzertyps eindeutig sein.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">Registriert eine Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftsnamen, Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftsmetadaten.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">Registriert eine Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftennamen, Eigenschaftentyp, Besitzertyp, den angegebenen Eigenschaftenmetadaten und einem Wertvalidierungsrückruf für die Eigenschaft.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ein Verweis auf einen Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">Registriert eine angefügte Eigenschaft mit dem angegebenen Eigenschaftsnamen, Eigenschaftstyp und Besitzertyp.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">Registriert eine angefügte Eigenschaft mit dem angegebenen Eigenschaftsnamen, Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftenmetadaten.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft. Dies kann den Standardwert sowie andere Merkmale einschließen.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">Registriert eine angefügte Eigenschaft mit dem angegebenen Eigenschaftentyp, Besitzertyp, Eigenschaftenmetadaten und einem Wertvalidierungsrückruf für die Eigenschaft.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft. Dies kann den Standardwert sowie andere Merkmale einschließen.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ein Verweis auf einen Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">Registriert eine schreibgeschützte angefügte Eigenschaft mit dem angegebenen Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftsmetadaten.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Ein Schlüssel für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts für ein statisches schreibgeschütztes Feld in der Klasse verwendet werden sollte. Mit diesem wird dann später auf die Abhängigkeitseigenschaft verwiesen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">Registriert eine schreibgeschützte Eigenschaft mit dem angegebenen Eigenschaftstyp, Besitzertyp, den angegebenen Eigenschaftsmetadaten und einem Validierungsrückruf.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ein Verweis auf einen benutzerdefinierten Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Ein Abhängigkeitseigenschaftsschlüssel, der dazu verwendet werden soll, den Wert eines statischen schreibgeschützten Felds in Ihrer Klasse festzulegen, die dann dazu verwendet wird, auf die Abhängigkeitseigenschaft zu verweisen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">Registriert eine schreibgeschützte Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftsmetadaten.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Ein Abhängigkeitseigenschaftsschlüssel, der dazu verwendet werden soll, den Wert eines statischen schreibgeschützten Felds in Ihrer Klasse festzulegen, die dann dazu verwendet wird, auf die Abhängigkeitseigenschaft zu verweisen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">Registriert eine schreibgeschützte Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftstyp, Besitzertyp, den angegebenen Eigenschaftsmetadaten und einem Validierungsrückruf.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Den Typ der Eigenschaft.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Ein Verweis auf einen benutzerdefinierten Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Ein Schlüssel für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts für ein statisches schreibgeschütztes Feld in der Klasse verwendet werden sollte. Mit diesem wird dann später auf die Abhängigkeitseigenschaft verwiesen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">Gibt die Zeichenfolgendarstellung der Abhängigkeitseigenschaft zurück.</summary>
      <returns vsli:raw="The string representation of the dependency property.">Die Zeichenfolgendarstellung der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">Gibt einen statischen Wert an, der vom WPF-Eigenschaftensystem verwendet wird, und nicht <see langword="null" />, um anzugeben, dass die Eigenschaft vorhanden ist, der Wert jedoch nicht vom Eigenschaftensystem festgelegt wird.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">Ruft den Wertvalidierungsrückruf für die Abhängigkeitseigenschaft ab.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">Der Wertvalidierungsrückruf für diese Abhängigkeitseigenschaft, wie für den <paramref name="validateValueCallback" />-Parameter in der ursprünglichen Registrierung der Abhängigkeitseigenschaft angegeben.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">Stellt Daten für verschiedene durch geänderte Eigenschaften ausgelöste Ereignisse bereit. Diese Ereignisse melden normalerweise effektive Änderungen beim Wert einer schreibgeschützten Abhängigkeitseigenschaft. Eine weitere Verwendungsmöglichkeit ist als Teil einer <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Klasse.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">Der Bezeichner für die Abhängigkeitseigenschaft, die geändert wurde.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">Der Wert der Eigenschaft vor der Änderung, die vom betreffenden Ereignis bzw. der Zustandsänderung gemeldet wurde.</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">Der Wert der Eigenschaft nach der Änderung, die vom betreffenden Ereignis bzw. der Zustandsänderung gemeldet wurde.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Bestimmt, ob das angegebene Objekt dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Das mit der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zu vergleichende Objekt</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt gleich der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das mit dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> gleich der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Ruft einen Hashcode für diese <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ab.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">Ruft den Wert der Eigenschaft nach der Änderung ab.</summary>
      <returns vsli:raw="The property value after the change.">Der Eigenschaftswert nach der Änderung.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">Ruft den Wert der Eigenschaft vor der Änderung ab.</summary>
      <returns vsli:raw="The property value before the change.">Der Eigenschaftswert vor der Änderung.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">Bestimmt, ob zwei angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Objekte denselben Wert haben.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Der erste zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Der zweite zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die beiden <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Instanzen äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">Bestimmt, ob zwei angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Objekte ungleich sind.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Der erste zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Der zweite zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die beiden <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Instanzen unterscheiden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">Ruft den Bezeichner für die Abhängigkeitseigenschaft ab, für die die Änderung des Werts aufgetreten ist.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">Das Bezeichnerfeld der Abhängigkeitseigenschaft, für die die Änderung des Werts aufgetreten ist.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">Stellt die Methode zum Behandeln von Ereignissen dar, die beim Ändern einer <see cref="T:System.Windows.DependencyProperty" /> für eine bestimmte <see cref="T:System.Windows.DependencyObject" />-Implementierung ausgelöst werden.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The event data.">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">Stellt einen Bezeichner für eine Abhängigkeitseigenschaft für den beschränkten Schreibzugriff auf eine schreibgeschützte Abhängigkeitseigenschaft bereit.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">Ruft den Bezeichner einer Abhängigkeitseigenschaft ab, der diesem Bezeichner einer spezialisierten schreibgeschützten Abhängigkeitseigenschaft zugeordnet ist.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">Der relevante Bezeichner einer Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">Überschreibt die Metadaten einer schreibgeschützten Abhängigkeitseigenschaft, die durch diesen Bezeichner einer Abhängigkeitseigenschaft dargestellt wird.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">Der Typ, für den diese Abhängigkeitseigenschaft vorhanden ist, sowie die Metadaten müssen überschrieben werden.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">Für diesen Typ angegebene Metadaten.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">Versuchte Überschreibung von Metadaten für eine Abhängigkeitseigenschaft mit Schreib- und Leseberechtigungen (kann nicht mit dieser Signatur ausgeführt werden).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">Metadaten wurden für die Eigenschaft bereits festgelegt, da sie im bereitgestellten Typ bereits vorhanden sind.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Dieser Typ unterstützt die Windows Presentation Foundation-Infrastruktur (WFP) und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">Konvertiert Instanzen von <see cref="T:System.Windows.Expression" /> in andere Typen und aus anderen Typen.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.ExpressionConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">Gibt zurück, ob dieser Konverter von einem Quellobjekt in ein <see cref="T:System.Windows.Expression" />-Objekt konvertieren kann.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Immer <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">Gibt zurück, ob dieser Konverter ein <see cref="T:System.Windows.Expression" />-Objekt in einen bestimmten Zieltyp konvertieren kann.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Immer <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">Konvertiert den angegebenen Wert in den <see cref="T:System.Windows.Expression" />-Typ.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</param>
      <param name="value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Löst immer eine Ausnahme aus und gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">Konvertiert das angegebene <see cref="T:System.Windows.Expression" />-Objekt in den angegebenen Typ.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</param>
      <param name="value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Löst immer eine Ausnahme aus und gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">Definiert ein Objekt, das einen änderbaren Zustand und einen schreibgeschützten (fixierten) Zustand aufweist. Von <see cref="T:System.Windows.Freezable" /> abgeleitete Klassen stellen detaillierte Änderungsbenachrichtigung bereit, können unveränderlich gemacht werden und sind imstande, sich selbst zu klonen.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Initialisiert eine neue Instanz einer abgeleiteten <see cref="T:System.Windows.Freezable" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">Ruft einen Wert ab, der anzeigt, ob das Objekt als nicht änderbar festgelegt werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das aktuelle Objekt als nicht änderbar festgelegt werden kann oder bereits nicht änderbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">Tritt auf, wenn <see cref="T:System.Windows.Freezable" /> oder ein darin enthaltenes Objekt geändert wird.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">Erstellt einen änderbaren Klon des <see cref="T:System.Windows.Freezable" />-Objekts, indem tiefe Kopien der Werte des Objekts erstellt werden. Beim Kopieren der Abhängigkeitseigenschaften des Objekts kopiert diese Methode Ausdrücke (die möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> ist.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Definiert die Instanz als Klon (tiefe Kopie) des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, indem Basiseigenschaftenwerte (nicht animiert) verwendet werden.</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">Das zu klonende Objekt.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">Erstellt einen änderbaren Klon (tiefe Kopie) von <see cref="T:System.Windows.Freezable" /> mit den aktuellen Werten.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> ist.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">Macht die Instanz mithilfe aktueller Eigenschaftswerte zu einem Klon (tiefe Kopie) des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, der geändert werden kann.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">Der <see cref="T:System.Windows.Freezable" />, der geklont werden soll.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Freezable" />-Klasse.</summary>
      <returns vsli:raw="The new instance.">Die neue Instanz.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Erstellt beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der abgeleiteten <see cref="T:System.Windows.Freezable" />-Klasse.</summary>
      <returns vsli:raw="The new instance.">Die neue Instanz.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">Definiert das aktuelle Objekt als nicht änderbar und legt seine <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft auf <see langword="true" /> fest.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">Das <see cref="T:System.Windows.Freezable" />-Objekt kann nicht als nicht änderbar definiert werden.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">Wenn der <paramref name="isChecking" />-Parameter <see langword="true" /> ist, gibt diese Methode an, ob das angegebene <see cref="T:System.Windows.Freezable" /> als nicht änderbar festgelegt werden kann. Wenn der <paramref name="isChecking" />-Parameter <see langword="false" /> ist, versucht diese Methode, das angegebene <see cref="T:System.Windows.Freezable" /> als nicht änderbar festzulegen und gibt an, ob der Vorgang erfolgreich ausgeführt wurde.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">Das Objekt, das überprüft oder als nicht änderbar festgelegt werden soll. Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, wird das Objekt überprüft, um zu bestimmen, ob es als nicht änderbar festgelegt werden kann. Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> hat, wird das Objekt als nicht änderbar festgelegt, falls möglich.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" />, um zurückzugeben, ob das Objekt fixiert werden kann (ohne es tatsächlich zu fixieren), <see langword="false" />, um das Objekt tatsächlich zu fixieren.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der angegebene <see cref="T:System.Windows.Freezable" /> als nicht änderbar festgelegt werden kann, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann. Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der angegebene <see cref="T:System.Windows.Freezable" /> jetzt nicht änderbar ist, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> aufweist, war der Versuch, <paramref name="freezable" /> als nicht änderbar festzulegen, nicht erfolgreich. Das Objekt befindet sich nun in einem unbekannten Zustand (möglicherweise ist es teilweise fixiert).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">Legt das <see cref="T:System.Windows.Freezable" />-Objekt als nicht änderbar fest oder überprüft, ob es als nicht änderbar festgelegt werden kann.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" />, um zurückzugeben, ob das Objekt fixiert werden kann (ohne es tatsächlich zu fixieren), <see langword="false" />, um das Objekt tatsächlich zu fixieren.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der <see cref="T:System.Windows.Freezable" /> als nicht änderbar festgelegt werden kann, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann. Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der angegebene <see cref="T:System.Windows.Freezable" /> jetzt nicht änderbar ist, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Erstellt eine fixierte Kopie von <see cref="T:System.Windows.Freezable" /> mit Basiseigenschaftswerten (nicht animiert). Da die Kopie fixiert ist, werden alle fixierten Unterobjekte als Verweis kopiert.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Eine fixierte Kopie von <see cref="T:System.Windows.Freezable" />. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Kopie ist auf <see langword="true" /> festgelegt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">
        <see cref="T:System.Windows.Freezable" /> kann nicht fixiert werden, da er Ausdrücke oder animierte Eigenschaften enthält.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Definiert die Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, indem Basiseigenschaftenwerte (nicht animiert) verwendet werden.</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">Die zu kopierende Instanz.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Erstellt eine fixierte Kopie von <see cref="T:System.Windows.Freezable" /> mit aktuellen Eigenschaftswerten. Da die Kopie fixiert ist, werden alle fixierten Unterobjekte als Verweis kopiert.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Eine fixierte Kopie von <see cref="T:System.Windows.Freezable" />. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Kopie ist auf <see langword="true" /> festgelegt.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">Legt die aktuelle Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" /> fest. Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die aktuellen animierten Werte kopiert.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">Das <see cref="T:System.Windows.Freezable" />, das kopiert und fixiert werden soll.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">Ruft einen Wert ab, der angibt, ob das Objekt derzeit geändert werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">
        <see langword="true" />, wenn das Objekt eingefroren ist und nicht geändert werden kann, <see langword="false" />, wenn das Objekt geändert werden kann.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">Wird aufgerufen, wenn das aktuelle <see cref="T:System.Windows.Freezable" />-Objekt geändert wird.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">Stellt sicher, dass entsprechende Kontextzeiger für einen gerade festgelegten <see cref="T:System.Windows.DependencyObjectType" />-Datenmember eingerichtet werden.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Der vorherige Wert des Datenmembers.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Der aktuelle Wert des Datenmembers.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Der vorherige Wert des Datenmembers.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Der aktuelle Wert des Datenmembers.</param>
      <param name="property" vsli:raw="The property that changed.">Die geänderte Eigenschaft.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">Überschreibt die <see cref="T:System.Windows.DependencyObject" />-Implementierung von <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />, damit in Reaktion auf eine geänderte Abhängigkeitseigenschaft des Typs <see cref="T:System.Windows.Freezable" /> auch <see cref="E:System.Windows.Freezable.Changed" />-Handler aufgerufen werden.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">Ereignisdaten mit Informationen dazu, welche Eigenschaft geändert wurde, sowie dem alten und neuen Wert.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">Stellt sicher, dass über einen gültigen Thread auf <see cref="T:System.Windows.Freezable" /> zugegriffen wird. Vererber von <see cref="T:System.Windows.Freezable" /> müssen diese Methode am Anfang jeder API aufrufen, die Datenmember liest, bei denen es sich nicht um Abhängigkeitseigenschaften handelt.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">Löst das <see cref="E:System.Windows.Freezable.Changed" />-Ereignis für das <see cref="T:System.Windows.Freezable" />-Objekt aus und ruft dessen <see cref="M:System.Windows.Freezable.OnChanged" />-Methode auf. Klassen, die aus <see cref="T:System.Windows.Freezable" /> abgeleitet werden, sollten diese Methode am Ende jeder API aufrufen, die Klassenmember ändert, die nicht als Abhängigkeitseigenschaften gespeichert sind.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">Stellt sicher, dass das <see cref="T:System.Windows.Freezable" /> nicht fixiert ist und dass über einen gültigen Threadkontext darauf zugegriffen wird. Vererber von <see cref="T:System.Windows.Freezable" /> sollten diese Methode am Anfang jeder API aufrufen, die Datenmember schreibt, bei denen es sich nicht um Abhängigkeitseigenschaften handelt.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">Die <see cref="T:System.Windows.Freezable" />-Instanz ist fixiert, und in ihre Member kann nicht geschrieben werden.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">Gibt die Richtung in einer Benutzeroberfläche an, in der eine gewünschte Fokusänderungsanforderung versucht wird. Die Richtung basiert auf der Aktivierreihenfolge oder der relativen Richtung im Layout.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">Verschiebt den Fokus auf ein anderes fokussierbares Element unter dem derzeit fokussierten Element.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Verschiebt den Fokus auf das erste fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Verschiebt den Fokus auf das letzte fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">Verschiebt den Fokus auf ein anderes fokussierbares Element links vom derzeit fokussierten Element.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Verschiebt den Fokus auf das nächste fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Verschiebt den Fokus auf das vorherige fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">Verschiebt den Fokus auf ein anderes fokussierbares Element rechts vom derzeit fokussierten Element.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">Verschiebt den Fokus auf ein anderes fokussierbares Element über dem derzeit fokussierten Element.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">Gibt die möglichen Schlüsselwerte auf einer Tastatur an.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">A-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">ABNT_C1-TASTE (Brasilien)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">ABNT_C2-TASTE (Brasilien)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">ADDITIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">ANWENDUNGSTASTE (Microsoft Natural Keyboard) Wird auch als Menütaste bezeichnet, weil sie ein anwendungsspezifisches Kontextmenü anzeigt.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">ATTN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">B-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">RÜCKTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">BROWSER-ZURÜCK-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">BROWSER-FAVORITEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">BROWSER-VORWÄRTS-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">BROWSER-STARTSEITE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">BROWSER-AKTUALISIEREN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">BROWSER-SUCHEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">BROWSER-ABBRECHEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">C-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">CANCEL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">FESTSTELLTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">FESTSTELLTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">CLEAR-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">CRSEL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">D-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">0-TASTE (null)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">1-TASTE (eins)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">2-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">3-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">4-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">5-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">6-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">7-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">8-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">9-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">DBE_ALPHANUMERIC-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">DBE_CODEINPUT-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">DBE_DBCSCHAR-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">DBE_DETERMINESTRING-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">DBE_ENTERDLGCONVERSIONMODE-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">DBE_ENTERIMECONFIGMODE-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">DBE_ENTERWORDREGISTERMODE-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">DBE_FLUSHSTRING-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">DBE_HIRAGANA-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">DBE_KATAKANA-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">DBE_NOCODEINPUT-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">DBE_NOROMAN-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">DBE_ROMAN-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">DBE_SBCSCHAR-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">Die Taste wird zusammen mit einer anderen Taste verwendet, um ein einzelnes kombiniertes Zeichen zu erstellen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">KOMMATASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">ENTF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">DIVISIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">NACH-UNTEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">E-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">ENDE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">EINGABETASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">ERASE EOF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">ESC-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">AUSFÜHREN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">EXSEL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">F-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">Die F1-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">F10-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">F11-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">F12-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">F13-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">F14-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">F15-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">F16-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">F17-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">F18-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">F19-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">F2-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">F20-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">F21-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">F22-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">F23-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">F24-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">F3-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">F4-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">F5-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">F6-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">F7-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">F8-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">F9-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">Taste für den IME-Final-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">G-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">H-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">Taste für den IME-Hangul-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">Taste für den IME-Hanja-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">HILFE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">POS1-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">I-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">Taste für das Annehmen im IME</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">Taste für die IME-Konvertierung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">Taste für Änderungsanforderung des IME-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">Taste für die IME-Nicht-Konvertierung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">Eine spezielle Taste, die die von einer IME verarbeitete tatsächliche Taste maskiert.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">EINFG-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">J-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">Taste für den IME-Junja-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">K-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">Taste für den IME-Kana-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">Taste für den IME-Kanji-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">L-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">Taste zum Starten der ersten Anwendung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">Taste zum Starten der zweiten Anwendung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">MAIL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">NACH-LINKS-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">Linke ALT-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">Linke STRG-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">Linke UMSCHALTTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">ZEILENVORSCHUBTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">Linke Windows-Taste (Microsoft Natural Keyboard)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">M-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">Playertaste für den nächsten Titel</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">Playertaste für Wiedergabe und Pause</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">Playertaste für den vorherigen Titel</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">Playertaste für das Beenden der Wiedergabe</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">MULTIPLIKATIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">N-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">BILD-AB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">Für zukünftige Verwendung reservierte Konstante</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">Keine Taste gedrückt.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">NUM-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">0-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">1-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">2-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">3-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">4-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">5-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">6-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">7-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">8-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">9-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">O-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">OEM 1-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">OEM 102-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">OEM 2-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">OEM 3-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">OEM 4-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">OEM 5-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">OEM 6-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">OEM 7-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">OEM 8-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">OEM-abhängige ATTN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">OEM-abhängige AUTO-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">OEM-abhängige Taste mit dem umgekehrten Schrägstrich</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">OEM-abhängige RÜCKWÄRTS-TAB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">OEM-abhängige CLEAR-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">OEM-abhängige Taste mit der schließenden Klammer</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">OEM-abhängige KOMMATASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">OEM-abhängige COPY-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">OEM-abhängige ENLW-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">OEM-abhängige BEENDEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">OEM-abhängige MINUSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">OEM-abhängige Taste mit der öffnenden Klammer</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">OEM-abhängige PUNKTTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">OEM-abhängige Taste mit dem senkrechten Balken</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">OEM-abhängige ADDITIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">OEM-abhängige FRAGEZEICHENTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">OEM-abhängige ANFÜHRUNGSZEICHENTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">OEM-abhängige SEMIKOLONTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">OEM-abhängige TILDETASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">P-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">PA1-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">BILD-AB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">BILD-AUF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">PAUSE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">PLAY-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">DRUCKEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">DRUCK-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">BILD-AUF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Q-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">R-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">RETURN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">NACH-RECHTS-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">Rechte ALT-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">Rechte STRG-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">Rechte UMSCHALTTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">Rechte Windows-Taste (Microsoft Natural Keyboard)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">S-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">ROLLEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">AUSWAHL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">Taste für die Medienauswahl</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">TRENNZEICHENTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">Taste für Standbymodus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">DRUCK-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">LEERTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">SUBTRAKTIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">Eine spezielle Taste, die die als Systemtaste verarbeitete tatsächliche Taste maskiert.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">T-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">TAB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">U-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">NACH-OBEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">V-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">LEISER-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">STUMMSCHALTEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">LAUTER-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">W-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">Die X-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Die Y-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Die Z-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">ZOOM-TASTE</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">Konvertiert ein <see cref="T:System.Windows.Input.Key" />-Objekt in andere bzw. aus anderen Typen.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.Key" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Bestimmt, ob ein Objekt des angegebenen Typs im angegebenen Kontext in eine Instanz von <see cref="T:System.Windows.Input.Key" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn <paramref name="sourceType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Input.Key" /> im angegebenen Kontext in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Versucht, das angegebene Objekt im angegebenen Kontext in einen <see cref="T:System.Windows.Input.Key" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <param name="source" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The converted object.">Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">Versucht, einen <see cref="T:System.Windows.Input.Key" /> im angegebenen Kontext in den angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <param name="value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns vsli:raw="The converted object.">Das konvertierte Objekt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" /> kann nicht in <paramref name="destinationType" /> konvertiert werden.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Stellt statische Methoden für die Konvertierung zwischen virtuellen Win32-Tasten und der <see cref="T:System.Windows.Input.Key" />-WPF-Enumeration dar.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Konvertiert eine virtuelle Win32-Taste in WPF <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">Die zu konvertierende virtuelle Taste.</param>
      <returns vsli:raw="The WPF key.">Die WPF-Taste.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">Konvertiert eine WPF <see cref="T:System.Windows.Input.Key" /> in eine virtuelle Win32-Taste.</summary>
      <param name="key" vsli:raw="The WPF to convert.">Die zu konvertierende WPF.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">Die virtuelle Win32-Taste.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Input.Key" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.String" />-Objekt in eine Instanz von <see cref="T:System.Windows.Input.Key" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Input.Key" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">Die für die Konvertierung auszuwertende Taste.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Die Zeichenfolge, die in ein <see cref="T:System.Windows.Input.Key" />-Element konvertiert werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Input.Key" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Input.Key" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Die Taste, die in eine Zeichenfolge konvertiert werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Eine invariante Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Input.Key" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">Gibt den Satz von Modifizierertasten an.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">Die ALT-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">Die CTRL-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">Es werden keine Modifizierer gedrückt.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">Die UMSCHALTTASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">Die WINDOWS-TASTE.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">Konvertiert ein <see cref="T:System.Windows.Input.ModifierKeys" />-Objekt in andere bzw. aus anderen Typen.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.ModifierKeysConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Bestimmt, ob ein Objekt des angegebenen Typs im angegebenen Kontext in eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="sourceType" /> vom Typ <see cref="T:System.String" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> im angegebenen Kontext in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Versucht, das angegebene Objekt im angegebenen Kontext in einen <see cref="T:System.Windows.Input.ModifierKeys" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <param name="source" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The converted object.">Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">Versucht, einen <see cref="T:System.Windows.Input.ModifierKeys" /> im angegebenen Kontext in den angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <param name="value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns vsli:raw="The converted object.">Das konvertierte Objekt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" /> entspricht keiner gültigen <see cref="T:System.Windows.Input.ModifierKeys" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Ermittelt, ob der angegebene Wert ein gültiger <see cref="T:System.Windows.Input.ModifierKeys" />-Wert ist.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">Der Wert, der auf Gültigkeit überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eingabe ein gültiger <see cref="T:System.Windows.Input.ModifierKeys" />-Wert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Input.ModifierKeys" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.String" />-Objekt in eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Input.ModifierKeys" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">Die für die Konvertierung auszuwertenden Modifizierertasten.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Konvertiert einen <see cref="T:System.String" /> in einen <see cref="T:System.Windows.Input.ModifierKeys" />-Wert.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Die Zeichenfolge, die in ein <see cref="T:System.Windows.Input.ModifierKeys" />-Element konvertiert werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Die Taste, die in eine Zeichenfolge konvertiert werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Eine invariante Zeichenfolgendarstellung des angegebenen <see cref="T:System.Windows.Input.ModifierKeys" />-Werts.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">Stellt eine Anforderung dar, den Fokus zu einem anderen Steuerelement zu verschieben</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.TraversalRequest" />-Klasse.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">Die vorgesehene Richtung des Fokusdurchlaufs als Wert der Enumeration.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">Ruft die Durchlaufrichtung ab.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">Einer der Enumerationswerte der Durchlaufrichtung.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">Ruft einen Wert ab, der angibt, ob der Fokusdurchlauf das Ende der untergeordneten Elemente erreicht hat, die den Fokus besitzen können, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser Durchlauf das Ende der untergeordneten Elemente erreicht hat, die den Fokus besitzen können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">Beschreibt die Breite, Höhe und Position eines ganzzahligen Rechtecks.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">Initialisiert eine neue Instanz eines <see cref="T:System.Windows.Int32Rect" /> mit der angegebenen <see cref="P:System.Windows.Int32Rect.X" />-Koordinate und der angegebenen <see cref="P:System.Windows.Int32Rect.Y" />-Koordinate sowie der angegebenen <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">Das <see cref="P:System.Windows.Int32Rect.X" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, das die x-Koordinate der oberen linken Ecke des Rechtecks angibt.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">Das <see cref="P:System.Windows.Int32Rect.Y" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, das die y-Koordinate der oberen linken Ecke des Rechtecks angibt.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">Die <see cref="P:System.Windows.Int32Rect.Width" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, die die Breite des Rechtecks angibt.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">Die <see cref="P:System.Windows.Int32Rect.Height" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, die die Höhe des Rechtecks angibt.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">Ruft das leere Rechteck ab, einen besonderen Wert, der ein Rechteck ohne Position oder Bereich darstellt.</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">Ein leeres Rechteck ohne Position oder Bereich.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Bestimmt, ob das angegebene Rechteck und dieses Rechteck gleich sind.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Das Objekt, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="o" /> eine <see cref="T:System.Windows.Int32Rect" />-Struktur ist und dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> wie dieses Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Bestimmt, ob das angegebene Rechteck und dieses Rechteck gleich sind.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Das Rechteck, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />,<see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> wie dieses Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">Bestimmt, ob die angegebenen Rechtecke gleich sind.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="int32Rect1" /> und <paramref name="int32Rect2" /> über dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">Erstellt einen Hashcode aus den Werten <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> dieses Rechtecks.</summary>
      <returns vsli:raw="This rectangle's hash code.">Der Hashcode dieses Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" />-Eigenschaften von <see cref="T:System.Windows.Int32Rect" /> größer als 0 sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, <see cref="P:System.Windows.Int32Rect.Width" /><see cref="P:System.Windows.Int32Rect.Height" /><see cref="T:System.Windows.Int32Rect" /> wenn die-Eigenschaft und die-Eigenschaft von größer als 0 sind, andernfalls. <see langword="false" /></returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Ruft die Höhe des Rechtecks ab oder legt diese fest.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Die Höhe des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">Ruft einen Wert ab, der angibt, ob das Rechteck leer ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn das Rechteck leer ist. <see langword="false" />andernfalls. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Vergleicht zwei Rechtecke auf genaue Übereinstimmung.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="int32Rect1" /> und <paramref name="int32Rect2" /> über dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Vergleicht zwei Rechtecke auf Ungleichheit.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" />, wenn <paramref name="int32Rect1" /> und <paramref name="int32Rect2" /> dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> aufweisen. Wenn alle Werte jedoch gleich sind, dann <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">Erstellt eine <see cref="T:System.Windows.Int32Rect" />-Struktur aus der angegebenen <see cref="T:System.String" />-Darstellung.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Eine Zeichenfolgendarstellung eines <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Die entsprechende <see cref="T:System.Windows.Int32Rect" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formatiert den Wert der aktuellen Instanz unter Verwendung des angegebenen Formats.</summary>
      <param name="format" vsli:raw="The format to use.">Das zu verwendende Format.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Der zum Formatieren des Werts zu verwendende Anbieter.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Der Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Erstellt eine Zeichenfolgendarstellung der <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Eine Zeichenfolge, die dieselben Werte <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> wie diese <see cref="T:System.Windows.Int32Rect" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">Erstellt auf der Grundlage des angegebenen <see cref="T:System.Windows.Int32Rect" /> eine Zeichenfolgendarstellung dieser <see cref="T:System.IFormatProvider" />.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">Der zu verwendende Formatanbieter. Wenn der Anbieter auf <see langword="null" /> festgelegt ist, wird die aktuelle Kultur verwendet.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Eine Zeichenfolgendarstellung dieser Instanz von <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Ruft die Breite des Rechtecks ab bzw. legt diese fest.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Die Breite des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">Ruft die x-Koordinate der linken oberen Ecke des Rechtecks ab oder legt diese fest.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Die x-Koordinate der linken oberen Ecke des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">Ruft die y-Koordinate der linken oberen Ecke des Rechtecks ab oder legt diese fest.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Die y-Koordinate der linken oberen Ecke des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Konvertiert Instanzen anderer Typen in bzw. aus einem <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Int32RectConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz eines <see cref="T:System.Windows.Int32Rect" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ in einen <see cref="T:System.Windows.Int32Rect" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">Bestimmt, ob eine Instanz eines <see cref="T:System.Windows.Int32Rect" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Int32Rect" /> konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Int32Rect" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Versucht, den angegebenen Typ in einen <see cref="T:System.Windows.Int32Rect" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value" vsli:raw="The object being converted.">Das Objekt, das konvertiert wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Wird ausgelöst, wenn das angegebene Objekt NULL ist oder einen Typ aufweist, der nicht in einen <see cref="T:System.Windows.Int32Rect" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">Versucht, einen <see cref="T:System.Windows.Int32Rect" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">Die zu konvertierende <see cref="T:System.Windows.Int32Rect" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">Der Typ, in den die <see cref="T:System.Windows.Int32Rect" /> konvertiert werden soll.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Int32Rect" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Wird ausgelöst, wenn <paramref name="value" /><see langword="null" /> oder kein <see cref="T:System.Windows.Int32Rect" /> ist, oder wenn der <paramref name="destinationType" /> kein gültiger Typ für die Konvertierung ist.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">Aktiviert in Interoperationsszenarios das freigegebene Steuerelement des Nachrichtenfilters zwischen Win32 und WPF.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">Ruft die letzte ausgelöste Meldung ab.</summary>
      <returns vsli:raw="The last message.">Die letzte Meldung.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">Tritt auf, wenn ein Thread modal wird.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">Ruft einen Wert ab, mit dem angegeben wird, ob der Thread modal ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Thread modal ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">Tritt auf, wenn ein modaler Thread nicht modal wird.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">Wird aufgerufen, um anzugeben, dass ein modaler Thread nicht mehr modal ist.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">Wird aufgerufen, um anzugeben, dass der Thread modal ist.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">Wird aufgerufen, um anzugeben, dass sich ein Thread im Leerlauf befindet.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">Gibt an, dass eine neue Meldung behandelt werden kann.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">Die Meldung und die ihr zugeordneten Daten.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">
        <see langword="true" />, wenn eines der Module, das die Meldungsschleife überwacht, die Meldung verarbeitet hat. Der Besitzer der Meldungsschleife kann die Meldung ignorieren. <see langword="false" />, wenn die Meldung nicht verarbeitet wurde. In diesem Fall sollte der Besitzer des Nachrichtenfilters die Win32-Funktion TranslateMessage gefolgt von DispatchMessage aufrufen.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Tritt auf, wenn der Nachrichtenfilter eine Tastaturmeldung empfängt.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">Tritt auf, wenn sich der Thread im Leerlauf befindet.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Tritt auf, wenn der Nachrichtenfilter eine Tastaturmeldung empfängt.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Stellt für Komponenten eine Tastatursenke bereit, die die Navigation mit der TAB-TASTE, Zugriffstasten und mnemonische Zeichen über Interoperabilitätsgrenzen hinweg und zwischen HWNDs verwaltet. Diese Schnittstelle implementiert die Verwaltung von Tastaturmeldungen in WPF-Win32-Interoperationsszenarios.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">Ruft einen Wert ab, mit dem angegeben wird, ob die Senke oder eine der enthaltenen Komponenten den Fokus hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Senke oder eine der enthaltenen Komponenten den Fokus hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Ruft einen Verweis auf die <see cref="T:System.Windows.Interop.IKeyboardInputSite" />-Schnittstelle des Containers der Komponente ab oder legt diesen Verweis fest.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Ein Verweis auf die <see cref="T:System.Windows.Interop.IKeyboardInputSite" />-Schnittstelle des Containers.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">Wird aufgerufen, wenn eines der mnemonischen Zeichen (Zugriffstasten) dieser Senke aufgerufen wird.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">Die Meldung für die mnemonischen und zugeordneten Daten. Ändern Sie diese Meldungsstruktur nicht. Es wird als Verweis und nur aus Leistungsgründen übergeben.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Modifizierertasten.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">Registriert die <see cref="T:System.Windows.Interop.IKeyboardInputSink" />-Schnittstelle einer enthaltenen Komponente.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">Die <see cref="T:System.Windows.Interop.IKeyboardInputSink" />-Senke der enthaltenen Komponente.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">Die <see cref="T:System.Windows.Interop.IKeyboardInputSite" />-Site der enthaltenen Komponente.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">Legt den Fokus auf den ersten oder letzten Tabstopp der Senke fest.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Gibt an, ob der Fokus auf den ersten oder letzten Tabstopp festgelegt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">
        <see langword="true" />, wenn der Fokus wie angefordert festgelegt wurde, <see langword="false" />,wenn keine Tabstopps vorhanden sind.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">Verarbeitet Tastatureingaben auf der Ebene von Meldungen für gedrückte Tasten.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Die Meldung und die zugeordneten Daten. Ändern Sie diese Struktur nicht. Es wird als Verweis und nur aus Leistungsgründen übergeben.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Modifizierertasten.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Meldung durch die Implementierung der Methode behandelt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">Verarbeitet die Eingabemeldungen WM_CHAR, WM_SYSCHAR, WM_DEADCHAR und WM_SYSDEADCHAR, bevor <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> aufgerufen wird.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Die Meldung und die zugeordneten Daten. Ändern Sie diese Struktur nicht. Es wird als Verweis und nur aus Leistungsgründen übergeben.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Modifizierertasten.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Meldung verarbeitet wurde und <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> nicht aufgerufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Verwaltet den Tastaturfokus innerhalb des Containers.  Diese Schnittstelle implementiert die Verwaltung von Tastaturmeldungen in WPF-Win32-Interoperationsszenarios.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">Wird von einer enthaltenen Komponente aufgerufen, wenn der letzte Tabstopp erreicht wurde und keine weiteren Elemente vorhanden sind, zu denen mit der TAB-TASTE gewechselt werden kann.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Gibt an, ob der Fokus auf den ersten oder letzten Tabstopp festgelegt werden soll.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">Wenn diese Methode <see langword="true" /> zurückgibt, hat die Site den Fokus auf eine andere Komponente festgelegt. Wenn diese Methode <see langword="false" /> zurückgibt, befindet sich der Fokus weiterhin in der aufrufenden Komponente. Die Komponente sollte "umbrochen werden" und den Fokus auf ihren ersten enthaltenen Tabstopp festlegen.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">Ruft die dieser Site zugeordnete Tastatursenke ab.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">
        <see cref="T:System.Windows.Interop.IKeyboardInputSink" />-Schnittstelle der aktuellen Site.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">Hebt die Registrierung einer untergeordneten Tastatureingabesenke von dieser Site auf.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">Enthält Meldungsinformationen aus der Meldungswarteschlange eines Threads.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">Ruft das Fensterhandle (HWND) des Fensters ab, dessen Fensterprozedur die Meldung empfängt, oder legt dieses fest.</summary>
      <returns vsli:raw="The window handle (HWND).">Das Fensterhandle (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">Ruft den <paramref name="lParam" />-Wert ab, der zusätzliche Informationen über die Meldung angibt, oder legt diesen fest. Die genaue Bedeutung hängt vom Wert des <see cref="P:System.Windows.Interop.MSG.message" />-Members ab.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">Der <paramref name="lParam" />-Wert für die Meldung.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">Ruft die Meldungs-ID ab, oder legt diese fest.</summary>
      <returns vsli:raw="The message identifier.">Der Meldungsbezeichner.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">Ruft die x-Koordinate der Position des Mauszeigers auf dem Bildschirm beim Senden der Meldung ab, oder legt diese fest.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">Die x-Koordinate der Cursorposition.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">Ruft die y-Koordinate der Position des Mauszeigers auf dem Bildschirm beim Senden der Meldung ab, oder legt diese fest.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">Die y-Koordinate der Cursorposition.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">Ruft die Zeit ab, zu der die Meldung gesendet wurde, oder legt diese fest.</summary>
      <returns vsli:raw="The time that the message was posted.">Die Zeit, zu der die Meldung gesendet wurde.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">Ruft den <paramref name="wParam" />-Wert für die Meldung ab, der zusätzliche Informationen über die Meldung angibt, oder legt diesen fest. Die genaue Bedeutung hängt vom Wert der Meldung ab.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">Der <paramref name="wParam" />-Wert für die Meldung.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">Stellt die Methode dar, die das <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />-Ereignis und das <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />-Ereignis behandelt.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">Eine Struktur mit den Nachrichtendaten.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Unterstützt Klassen, die Ereignisse über das WeakEvent-Muster erwarten, bei der Überwachung von Ereignissen und stellt einen <see cref="T:System.Windows.WeakEventManager" /> bereit.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">Empfängt Ereignisse vom zentralen Ereignis-Manager.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft.</param>
      <param name="sender" vsli:raw="Object that originated the event.">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e" vsli:raw="Event data.">Ereignisdaten.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">
        <see langword="true" />, wenn das Ereignis vom Listener behandelt wurde. Das Registrieren eines Listeners für ein Ereignis, das vom Listener nicht behandelt wird, wird von der <see cref="T:System.Windows.WeakEventManager" />-Behandlung in WPF als Fehler angesehen. Die Methode sollte jedoch unabhängig davon <see langword="false" /> zurückgeben, wenn ein Ereignis empfangen wird, das nicht erkannt oder nicht behandelt werden kann.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">Stellt einen Eigenschaftsbezeichner und den Eigenschaftswert für eine lokal festgelegte Abhängigkeitseigenschaft dar.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">Stellt fest, ob zwei <see cref="T:System.Windows.LocalValueEntry" />-Instanzen gleich sind.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Das <see cref="T:System.Windows.LocalValueEntry" />, das mit dem aktuellen <see cref="T:System.Windows.LocalValueEntry" /> verglichen werden soll.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">Diese <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />-Implementierung vergleicht die Werte der <see cref="P:System.Windows.LocalValueEntry.Property" /> und vergleicht möglicherweise die Werte von <see cref="P:System.Windows.LocalValueEntry.Value" />. Die <see cref="P:System.Windows.LocalValueEntry.Property" />-Komponente eines <see cref="T:System.Windows.LocalValueEntry" /> ist ein Werttyp, daher wird immer ein bitweiser Vergleich ausgeführt. Für die <see cref="P:System.Windows.LocalValueEntry.Value" />-Komponente führt diese Implementierung einen bitweisen Vergleich aus, wenn es sich um einen Werttyp handelt. Für lokal festgelegte Eigenschaften mit Referenztypen wird das Verhalten in Bezug auf die Mechanismen zum Bestimmen der Gleichheit des betreffenden Typs verzögert, da der Operator == für die beiden Werte intern verwendet wird. Standardmäßig ergibt sich eine Verweisgleichheit der Werte, und damit wird die Gleichheit des gesamten <see cref="T:System.Windows.LocalValueEntry" /> zu einer Verweisgleichheit.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Gibt den Hashcode für diese <see cref="T:System.Windows.LocalValueEntry" /> zurück.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Ein 32-Bit-Ganzzahlwert mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">Vergleicht die angegebenen <see cref="T:System.Windows.LocalValueEntry" />-Instanzen, um zu bestimmen, ob diese identisch sind.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Die erste zu vergleichende Instanz.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Die zweite zu vergleichende Instanz.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <paramref name="obj1" />-<see cref="T:System.Windows.LocalValueEntry" /> gleich dem <paramref name="obj2" />-<see cref="T:System.Windows.LocalValueEntry" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">Vergleicht die angegebenen <see cref="T:System.Windows.LocalValueEnumerator" />-Instanzen, um zu bestimmen, ob diese unterschiedlich sind.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Die erste zu vergleichende Instanz.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Die zweite zu vergleichende Instanz.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">Diese Implementierung vergleicht die Werte der <see cref="P:System.Windows.LocalValueEntry.Property" />-Komponente und der <see cref="P:System.Windows.LocalValueEntry.Value" />-Komponente eines <see cref="T:System.Windows.LocalValueEntry" />. Die <see cref="P:System.Windows.LocalValueEntry.Property" />-Komponente eines <see cref="T:System.Windows.LocalValueEntry" /> ist immer ein Werttyp, daher handelt es sich bei diesem Verweis immer um einen bitweisen Vergleich. Für die <see cref="P:System.Windows.LocalValueEntry.Value" />-Komponente führt diese Implementierung einen bitweisen Vergleich aus, wenn es sich um einen Werttyp handelt.
Für lokal festgelegte Eigenschaften mit Referenztypen wird das Verhalten in Bezug auf die Mechanismen zum Bestimmen der Gleichheit des betreffenden Typs verzögert, da der Operator <see langword="==" /> für die beiden Werte intern verwendet wird. Standardmäßig ergibt sich damit eine Verweisgleichheit der Werte.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">Ruft den Bezeichner für die lokal festgelegte Abhängigkeitseigenschaft ab, die durch diesen Eintrag dargestellt wird.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">Der Bezeichner für die lokal festgelegte Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">Ruft den Wert der lokal festgelegten Abhängigkeitseigenschaft ab.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">Der Wert der lokal festgelegten Abhängigkeitseigenschaft als Objekt.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Bietet Enumerationsunterstützung für die lokalen Werte aller Abhängigkeitseigenschaften, die in einem <see cref="T:System.Windows.DependencyObject" /> vorhanden sind.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">Ruft die Anzahl der in der Auflistung dargestellten Elemente ab.</summary>
      <returns vsli:raw="The number of items in the collection.">Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Ruft das aktuelle Element in der Auflistung ab.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">Das aktuelle <see cref="T:System.Windows.LocalValueEntry" /> in der Auflistung.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Bestimmt, ob der bereitgestellte <see cref="T:System.Windows.LocalValueEnumerator" /> zu diesem <see cref="T:System.Windows.LocalValueEnumerator" /> äquivalent ist.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Das <see cref="T:System.Windows.LocalValueEnumerator" />, das mit dem aktuellen <see cref="T:System.Windows.LocalValueEnumerator" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.LocalValueEnumerator" /> gleich der aktuellen <see cref="T:System.Windows.LocalValueEnumerator" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Gibt einen Hashcode für den aktuellen <see cref="T:System.Windows.LocalValueEnumerator" /> zurück.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">Ein 32-Bit-Ganzzahl-Hash.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">Vergleicht, ob zwei angegebene <see cref="T:System.Windows.LocalValueEnumerator" />-Objekte gleich sind.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Das erste zu vergleichende Objekt.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Das zweite zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <paramref name="obj1" />-<see cref="T:System.Windows.LocalValueEnumerator" /> gleich dem <paramref name="obj2" />-<see cref="T:System.Windows.LocalValueEnumerator" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">Vergleicht zwei angegebene <see cref="T:System.Windows.LocalValueEnumerator" />-Objekte und ermittelt, ob diese ungleich sind.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Das erste zu vergleichende Objekt.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Das zweite zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Instanzen ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">Eine Beschreibung dieser Member finden Sie unter <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current element in the collection.">Das aktuelle Element in der Auflistung.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">Gibt an, wie eine Eigenschaft serialisiert werden soll.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">Die Eigenschaft wird als Attribut serialisiert.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">Gibt die Serialisierungsflags für eine Eigenschaft an.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />-Klasse.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">Gibt an, wie die Eigenschaft serialisiert werden soll.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> ist kein gültiger <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />-Wert.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">Ruft die für das Attribut festgelegten <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> ab.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">Die Serialisierungsoption als Wert der Enumeration.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">Eine vom WPF-XAML-Compiler intern verwendete abstrakte Klasse zum Unterstützen der Verwendung interner Typen.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.InternalTypeHelper" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">Fügt beim Überschreiben in einer abgeleiteten (generierten) Klasse einen Ereignishandlerdelegaten an ein internes Ereignis an.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">Die Ereignisinformationen für das Ereignis (CLR-Reflektionsinformationen).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Das Ziel, an das der Handler angefügt wird.</param>
      <param name="handler" vsli:raw="The event handler.">Der Ereignishandler.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">Erstellt beim Überschreiben in einer abgeleiteten (generierten) Klasse einen Ereignisdelegaten, der auf eine nicht öffentliche Handlermethode verweist.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">Der <see cref="T:System.Type" /> des Delegaten.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Das Ziel, an das der Handler angefügt wird.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">Der Name der Handlerimplementierung.</param>
      <returns vsli:raw="The delegate reference.">Der Delegatverweis.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">Beim Überschreiben in einer abgeleiteten (generierten) Klasse wird eine Instanz eines internen Typs erstellt.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">Die zu erstellende <see cref="T:System.Type" />.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <returns vsli:raw="The created instance.">Die erstellte Instanz.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">Ruft beim Überschreiben in einer abgeleiteten (generierten) Klasse den Wert einer internen Eigenschaft für das Zielobjekt ab.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">Eigenschafteninformationen für die abzurufende Eigenschaft.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Das Objekt, das den gewünschten Eigenschaftswert enthält.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <returns vsli:raw="The value of the property.">Der Wert der Eigenschaft.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">Legt beim Überschreiben in einer abgeleiteten (generierten) Klasse den Wert einer internen Eigenschaft für das Zielobjekt fest.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">Eigenschafteninformationen für die festzulegende Eigenschaft.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Das Objekt, das den gewünschten Eigenschaftswert enthält.</param>
      <param name="value" vsli:raw="The value to set.">Der festzulegende Wert.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">Stellt einen Mechanismus bereit, mit dem Typen deklarieren können, dass sie einen Ausdruck (oder eine andere Klasse) von einer Markuperweiterung empfangen können, wobei die Ausgabe einen anderen Eigenschaftentyp als die Zieleigenschaft aufweist. Nicht in .NET Framework 4-Implementierungen verwenden.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">Stellt die Behandlung für die Markuperweiterungen bereit, die Eigenschaftswerte bereitstellen. Nicht in .NET Framework 4-Implementierungen verwenden; siehe <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property" vsli:raw="The name of the target property.">Der Name der Zieleigenschaft.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">Die Instanz der Markuperweiterungen der eingehenden Daten.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">Kann zusätzliche Dienste bereitstellen, die beim Verarbeiten der Markuperweiterungsdaten für einen Eigenschaftswert ausgeführt werden sollen.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">Abstrakte Klasse, die ein Objekt darstellt, das zum Navigieren durch eine Struktur von Objekten verwendet werden kann.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">Weist beim Überschreiben in einer abgeleiteten Klasse einen Stammkontext für <see cref="T:System.Windows.Markup.ValueSerializer" />-Klassen zu.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">Der <see cref="T:System.Windows.Markup.IValueSerializerContext" />, dem ein Stammkontext zugewiesen werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Attribute ab, die dieser <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> zugeordnet sind.</summary>
      <returns vsli:raw="The collection of attributes.">Die Auflistung der Attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse die von diesem <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> dargestellte Instanz des Objekts ab.</summary>
      <returns vsli:raw="The instance of the object.">Die Instanz des Objekts.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ der <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />-Instanz ab.</summary>
      <returns vsli:raw="The type of the object.">Der Typ des Objekts.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Eigenschaften dieser <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />-Instanz ab, die in XAML geschrieben werden sollen.</summary>
      <returns vsli:raw="The properties.">Die Eigenschaften.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">Abstrakte Klasse, die eine Eigenschaftenbeschreibung bereitstellt, die beim Schreiben in Markup verwendet werden kann, das den Zugriff auf Eigenschaften und deren Werte kapselt.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Attribute ab, die dieser <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> zugeordnet sind.</summary>
      <returns vsli:raw="The collection of attributes.">Die Auflistung der Attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.Windows.DependencyProperty" />-Bezeichner für die Markupeigenschaft ab, wenn die Eigenschaft als Abhängigkeitseigenschaft implementiert wird.</summary>
      <returns vsli:raw="The dependency property identifier.">Der Bezeichner der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> eine angefügte <see cref="T:System.Windows.DependencyProperty" /> ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft eine angefügte <see cref="T:System.Windows.DependencyProperty" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> eine zusammengesetzte Eigenschaft ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Eigenschaft eine zusammengesetzte Eigenschaft ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ein Konstruktorargument darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft ein Konstruktorargument darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> den direkten Inhalt einer Auflistung darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft direkten Inhalt darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> den Schlüssel darstellt, den das <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> zum Speichern des Elements in einem Wörterbuch verwendet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Eigenschaft einen Schlüssel darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> Text darstellt, der an einen Typkonverter übergeben wird, um eine Instanz der Eigenschaft zu erstellen, oder ob ein Konstruktor verwendet werden sollte.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> eine Zeichenfolge darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">Ruft beim Überschreiben in einer abgeleiteten Klasse die Elemente ab, aus denen sich der Wert dieser Eigenschaft zusammensetzt.</summary>
      <returns vsli:raw="The items that make up the value of this property.">Die Elemente, die den Wert dieser Eigenschaft bilden.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Namen ab, der für Diagnosen und Fehlerberichte verwendet wird.</summary>
      <returns vsli:raw="The identifier property name.">Der Eigenschaftenname des Bezeichners.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.ComponentModel.PropertyDescriptor" /> für die Markupeigenschaft ab.</summary>
      <returns vsli:raw="The property descriptor.">Der Eigenschaftendeskriptor.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">Ruft beim Überschreiben in einer abgeleiteten Klasse den CLR-Typ der Eigenschaft ab.</summary>
      <returns vsli:raw="The CLR type.">Der CLR-Typ.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Zeichenfolgenwert dieser <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ab.</summary>
      <returns vsli:raw="The string value.">Der Zeichenfolgenwert.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">Ruft beim Überschreiben in einer abgeleiteten Klasse den Satz von Typen ab, auf den diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> beim Serialisieren des zugehörigen Werts als Zeichenfolge verweist.</summary>
      <returns vsli:raw="The set of types.">Der Satz von Typen.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Ruft beim Überschreiben in einer abgeleiteten Klasse den aktuellen Wert dieses <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ab.</summary>
      <returns vsli:raw="The current value.">Der aktuelle Wert.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">Stellt eine Implementierung für die <see cref="T:System.IServiceProvider" />-Schnittstelle mit Methoden bereit, die das Hinzufügen von Diensten aktivieren.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ServiceProviders" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">Fügt der Liste einen Dienst hinzu.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">Der Diensttyp des neuen Diensts.</param>
      <param name="service" vsli:raw="The service implementation class.">Eine Implementierungsklasse des Diensts.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> oder <paramref name="service" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">Es wurde versucht, einen Dienst hinzuzufügen, der im Wörterbuch bereits vorhanden ist.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">Ruft das Dienstobjekt des angegebenen Typs ab.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">Der Typ des abzurufenden Dienstobjekts.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Eine Dienstimplementierung für den Typ <paramref name="serviceType" />. Kann <see langword="null" /> sein, wenn es für den Typ <paramref name="serviceType" /> keinen gespeicherten Dienst gibt.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Media.Matrix" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">Bestimmt, ob ein angegebener <see cref="T:System.String" /> in eine Instanz von <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Media.Matrix" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Die für die Konvertierung auszuwertende Instanz von <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">Tritt auf, wenn <paramref name="value" /> keine <see cref="T:System.Windows.Media.Int32Collection" /> ist.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Konvertiert ein <see cref="T:System.String" />-Element in ein <see cref="T:System.Windows.Media.Matrix" />-Element.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Der in eine <see cref="T:System.String" /> zu konvertierende <see cref="T:System.Windows.Media.Matrix" />-Wert.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.Windows.Media.Matrix" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Media.Matrix" /> in einen <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Die für die Konvertierung auszuwertende Instanz von <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">Eine <see cref="T:System.String" />-Darstellung des angegebenen <see cref="T:System.Windows.Media.Matrix" />-Objekts.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">Ermöglicht WPF-Anwendungen das Deaktivieren der Berücksichtigung von DPI (Dots per Inch)-Einstellungen für alle Benutzeroberflächenelemente.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">Initialisiert eine neue Instanz von <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">Stellt eine affine 3x3-Transformationsmatrix dar, die für Transformationen im zweidimensionalen Raum verwendet wird.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">Der <see cref="P:System.Windows.Media.Matrix.M11" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">Der <see cref="P:System.Windows.Media.Matrix.M12" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">Der <see cref="P:System.Windows.Media.Matrix.M21" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">Der <see cref="P:System.Windows.Media.Matrix.M22" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">Der <see cref="P:System.Windows.Media.Matrix.OffsetX" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">Der <see cref="P:System.Windows.Media.Matrix.OffsetY" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Fügt die angegebene <see cref="T:System.Windows.Media.Matrix" />-Struktur an diese <see cref="T:System.Windows.Media.Matrix" />-Struktur an.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Die an diese <see cref="T:System.Windows.Media.Matrix" />-Struktur anzufügende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft die Determinante der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Die Determinante der <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> eine <see cref="T:System.Windows.Media.Matrix" />-Struktur ist, die mit der <see cref="T:System.Windows.Media.Matrix" /> identisch ist.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="o" /> eine <see cref="T:System.Windows.Media.Matrix" />-Struktur ist, die mit dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur identisch ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">Bestimmt, ob die angegebene <see cref="T:System.Windows.Media.Matrix" />-Struktur mit dieser Instanz identisch ist.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">Die Instanz von <see cref="T:System.Windows.Media.Matrix" />, die mit dieser Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Media.Matrix" />-Strukturen identisch sind.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Die erste zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Die zweite zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="matrix1" /> und <paramref name="matrix2" /> identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Gibt den Hashcode für diese <see cref="T:System.Windows.Media.Matrix" />-Struktur zurück.</summary>
      <returns vsli:raw="The hash code for this instance.">Der Hashcode für diese Instanz.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Media.Matrix" />-Struktur invertierbar ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Media.Matrix" /> über eine Inverse verfügt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Ruft eine Identitäts-<see cref="T:System.Windows.Media.Matrix" /> ab.</summary>
      <returns vsli:raw="An identity matrix.">Eine Identitätsmatrix.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Invertiert die <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">Die <see cref="T:System.Windows.Media.Matrix" />-Struktur ist nicht invertierbar.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Identitätsmatrix ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Identitätsmatrix ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft den Wert der ersten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">Der Wert der ersten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />. Der Standardwert ist 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft den Wert der ersten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Der Wert der ersten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft den Wert der zweiten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Der Wert der zweiten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft den Wert der zweiten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">Der Wert der zweiten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur. Der Standardwert ist 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multipliziert eine <see cref="T:System.Windows.Media.Matrix" />-Struktur mit einer anderen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Die erste zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Die zweite zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Das Ergebnis der Multiplikation von <paramref name="trans1" /> mit <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft den Wert der dritten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Der Wert der dritten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ruft den Wert der dritten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Der Wert der dritten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur. Der Standardwert ist 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Media.Matrix" />-Strukturen identisch sind.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Die erste zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Die zweite zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="matrix1" /> und <paramref name="matrix2" /> identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Media.Matrix" />-Strukturen nicht identisch sind.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Die erste zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Die zweite zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="matrix1" /> und <paramref name="matrix2" /> nicht identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multipliziert eine <see cref="T:System.Windows.Media.Matrix" />-Struktur mit einer anderen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Die erste zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Die zweite zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Das Ergebnis der Multiplikation von <paramref name="trans1" /> mit <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Konvertiert eine <see cref="T:System.String" />-Darstellung einer Matrix in die entsprechende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">Die <see cref="T:System.String" />-Darstellung der Matrix.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Die entsprechende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Stellt dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur die angegebene <see cref="T:System.Windows.Media.Matrix" />-Struktur voran.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Die dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur voranzustellende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Wendet eine Drehung im angegebenen Winkel um den Ursprung dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur an.</summary>
      <param name="angle" vsli:raw="The angle of rotation.">Der Rotationswinkel.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">Dreht die Matrix um den angegebenen Punkt.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">Der Winkel in Grad, um den die Matrix gedreht wird.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">Die x-Koordinate des Punkts, um den die Matrix gedreht wird.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">Die y-Koordinate des Punkts, um den die Matrix gedreht wird.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Drehung um den angegebenen Winkel an dem angegebenen Punkt voran.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">Der Drehungswinkel in Grad.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">Die x-Koordinate des Mittelpunkts der Drehung.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">Die y-Koordinate des Mittelpunkts der Drehung.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Stellt dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Drehung mit dem angegebenen Winkel voran.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">Der Winkel der voranzustellenden Drehung.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Fügt den angegebenen Skalierungsvektor an diese <see cref="T:System.Windows.Media.Matrix" />-Struktur an.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse skaliert werden soll.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse skaliert werden soll.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">Skaliert die <see cref="T:System.Windows.Media.Matrix" /> um den angegebenen Betrag um den angegebenen Punkt.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Der Betrag, um den die <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse skaliert werden soll.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Der Betrag, um den die <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse skaliert werden soll.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">Die x-Koordinate des Mittelpunkts der Skalierung.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">Die y-Koordinate des Mittelpunkts der Skalierung.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Stellt der <see cref="T:System.Windows.Media.Matrix" /> die angegebene Skalierung auf dem angegebenen Punkt voran.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">Der Skalierungsfaktor für die x-Achse.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Der Skalierungsfaktor für die y-Achse.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">Die x-Koordinate des Punkts, auf dem die Skalierung ausgeführt wird.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">Die y-Koordinate des Punkts, auf dem die Skalierung ausgeführt wird.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur den angegebenen Skalierungsvektor voran.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" />-Struktur auf der x-Achse skaliert werden soll.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" />-Struktur auf der y-Achse skaliert werden soll.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">Ändert die <see cref="T:System.Windows.Media.Matrix" />-Struktur in eine Identitätsmatrix.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Fügt an die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Neigung mit den angegebenen Grad in der x- und y-Dimension an.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Der Neigungswinkel in der x-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Der Neigungswinkel in der y-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Neigung mit den angegebenen Grad in der x- und y-Dimension voran.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Der Neigungswinkel in der x-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Der Neigungswinkel in der y-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formatiert den Wert der aktuellen Instanz unter Verwendung des angegebenen Formats.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Das zu verwendende Format.
- oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn das für den Typ der <see cref="T:System.IFormattable" /> -Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Der zum Formatieren des Werts zu verwendende Anbieter.

oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Der Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Erstellt eine <see cref="T:System.String" />-Darstellung dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Ein <see cref="T:System.String" />, der die Werte für <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> und <see cref="P:System.Windows.Media.Matrix.OffsetY" /> der <see cref="T:System.Windows.Media.Matrix" /> enthält.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">Erstellt eine <see cref="T:System.String" />-Darstellung dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur mit kulturspezifischen Formatierungsinformationen.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Die kulturspezifischen Formatierungsinformationen.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Ein <see cref="T:System.String" />, der die Werte für <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> und <see cref="P:System.Windows.Media.Matrix.OffsetY" /> der <see cref="T:System.Windows.Media.Matrix" /> enthält.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">Transformiert den angegebenen Punkt mit der <see cref="T:System.Windows.Media.Matrix" /> und gibt das Ergebnis zurück.</summary>
      <param name="point" vsli:raw="The point to transform.">Der zu transformierende Punkt.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Das Ergebnis der Transformation von <paramref name="point" /> mit der <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transformiert die angegebenen Punkte mit dieser <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">Die zu transformierenden Punkte. Die ursprünglichen Punkte im Array werden durch ihre transformierten Werte ersetzt.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transformiert den angegebenen Vektor mit dieser <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Das Ergebnis der Transformation von <paramref name="vector" /> mit der <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transformiert die angegebenen Vektoren mit dieser <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">Die zu transformierenden Vektoren. Die ursprünglichen Vektoren im Array werden durch ihre transformierten Werte ersetzt.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Fügt an die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Verschiebung um die angegebenen Offsets an.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Verschiebung um die angegebenen Offsets voran.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Media.Matrix" />-Objekt.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">Initialisiert eine neue Instanz von <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Bestimmt, ob ein Objekt von einem bestimmten Typ in eine Instanz einer <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="The context information of a type.">Die Kontextinformationen eines Typs.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">Bestimmt, ob eine Instanz einer <see cref="T:System.Windows.Media.Matrix" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="The context information of a type.">Die Kontextinformationen eines Typs.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Media.Matrix" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Media.Matrix" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="The context information of a type.">Die Kontextinformationen eines Typs.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Die <see cref="T:System.Globalization.CultureInfo" /> des Typs, der konvertiert wird.</param>
      <param name="value" vsli:raw="The object being converted.">Das Objekt, das konvertiert wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Das angegebene Objekt ist NULL oder von einem Typ, der nicht in eine <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">Versucht, eine <see cref="T:System.Windows.Media.Matrix" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="The context information of a type.">Die Kontextinformationen eines Typs.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Die <see cref="T:System.Globalization.CultureInfo" /> des Typs, der konvertiert wird.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">Die zu konvertierende <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">Der Typ, in den die <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden soll.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Media.Matrix" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">Der <paramref name="value" /> ist NULL oder keine <see cref="T:System.Windows.Media.Matrix" />, oder der <paramref name="destinationType" /> ist kein gültiger Konvertierungstyp.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">Definiert die von der <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Klasse unterstützten Formatierungsmethoden.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">Gibt an, dass das <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Objekt GDI-kompatible Schriftarteigenschaften für das Layout von Text verwendet.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">Gibt an, dass das <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Objekt ideale Schriftarteigenschaften für das Layout von Text verwendet.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">Implementiert WPF-Basisunterstützung für die <see cref="T:System.Windows.Markup.INameScope" />-Methoden zum Speichern oder Abrufen von Name-Objekt-Zuordnungen in einem bestimmten XAML-Namensbereich. Fügt Unterstützung für angefügte Eigenschaften hinzu, damit Namen im XAML-Namensbereich auf Elementebene leichter dynamisch abgerufen oder festgelegt werden können.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.NameScope" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">Fügt der Auflistung ein Element hinzu.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">Ein <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />), das die Namenszuordnung darstellt, die dem XAML-NameScope hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Eine oder beide Komponenten von <paramref name="item" /> sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">Fügt der Auflistung ein Element hinzu.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">Der Zeichenfolgenschlüssel, der den Namen der Zuordnung für den XAML-Namescope darstellt, die hinzugefügt werden soll.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">Der Objektwert, der den Objektverweis der Zuordnung für den XAML-Namescope darstellt, die hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">Bestimmt, ob die Auflistung ein angegebenes Element enthält.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Das Element, das in der Auflistung gesucht werden soll, angegeben als <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> eine vorhandene Zuordnung in diesem <see cref="T:System.Windows.NameScope" /> identifiziert. <see langword="false" />, wenn der angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> im aktuellen <see cref="T:System.Windows.NameScope" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Gibt zurück, ob ein angegebener Name bereits in diesem <see cref="T:System.Windows.NameScope" /> vorhanden ist.</summary>
      <param name="key" vsli:raw="The string key to find.">Der zu suchende Zeichenfolgenschlüssel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene <paramref name="key" /> einen Namen für eine vorhandene Zuordnung in diesem <see cref="T:System.Windows.NameScope" /> identifiziert. <see langword="false" />, wenn der angegebene <paramref name="key" /> im aktuellen <see cref="T:System.Windows.NameScope" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">Das eindimensionale Array, das das Ziel der aus der Auflistung kopierten Elemente darstellt. Das Array muss eine nullbasierte Indizierung aufweisen.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Gibt die Anzahl der Elemente in der Auflistung zugeordneter Namen in diesem <see cref="T:System.Windows.NameScope" /> zurück.</summary>
      <returns vsli:raw="The number of items in the collection.">Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">Gibt das einer angegebenen Namenszeichenfolge entsprechende Objekt im XAML-Namensbereich zurück, das von diesem <see cref="T:System.Windows.NameScope" /> verwaltet wird.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">Der Namensteil einer vorhandenen Zuordnung, für den der Objektteil abgerufen werden soll.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">Das angeforderte Objekt, das <paramref name="name" /> zugeordnet ist. Kann <see langword="null" /> zurückgeben, wenn <see langword="null" /> oder leere Zeichenfolge für <paramref name="name" /> bereitgestellt wurde oder wenn kein übereinstimmendes Objekt gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Stellt den get-Accessor für die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft bereit.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">Das Objekt, aus dem der XAML-Namensbereich abgerufen werden soll.</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">Ein XAML-Namensbereich als <see cref="T:System.Windows.Markup.INameScope" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">Der Zeichenfolgenname für die XAML-Namenszuordnung, die abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">Der Wert des Objekts, das vom XAML-Namen zugeordnet wird, angegeben als <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" /> wird als <see langword="null" /> bereitgestellt.
- oder -
<paramref name="value" /> wird als <see langword="null" /> für einen Set-Vorgang bereitgestellt.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Ruft eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Schlüssel ab.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Schlüssel.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">Ruft dynamisch angefügte <see cref="T:System.Windows.NameScope" />-Instanzen ab oder legt diese fest.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Bezeichnet die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">Registriert ein neues Name/Objekt-Paar beim aktuellen XAML-Namensbereich.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">Der Name, der zum Zuordnen des angegebenen Objekts verwendet werden soll.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">Das Objekt, das dem angegebenen Namen zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> oder <paramref name="scopedElement" /> wurde als <see langword="null" /> bereitgestellt.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">
        <paramref name="name" /> wurde als leere Zeichenfolge bereitgestellt.
- oder -
Der bereitgestellte <paramref name="name" /> wurde vom Parser abgelehnt, da er Zeichen enthält, die für XAML-Namen ungültig sind
- oder -
Der bereitgestellte <paramref name="name" /> würde zu einer doppelten Namensregistrierung führen.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">Entfernt das spezifische Objekt aus der Auflistung.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Das Objekt, das aus der Auflistung entfernt werden soll, angegeben als <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" />, wenn das Element erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />. Gibt auch dann <see langword="false" /> zurück, wenn das Element nicht in der Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">Entfernt eine Zuordnung für einen angegebenen Namen aus der Auflistung.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">Der Zeichenfolgenschlüssel, der den Namen der Zuordnung für den XAML-Namescope darstellt, die entfernt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" />, wenn das Element erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />. Gibt auch dann <see langword="false" /> zurück, wenn das Element nicht in der Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Stellt die Set-Zugriffsmethode für die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft bereit.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">Objekt, für das der XAML-Namensbereich geändert werden soll.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">Der neue XAML-Namensbereich über eine Schnittstellenumwandlung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Ein Enumerator, der eine Auflistung durchläuft.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Ein Enumerator, der eine Auflistung durchläuft.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">Wenn diese Methode beendet wird, enthält sie den Wert, der dem angegebenen Schlüssel zugeordnet ist; wenn der Schlüssel nicht gefunden wird, enthält die Methode ein NULL-Objekt. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Windows.NameScope" /> eine Zuordnung für den Namen enthält, der als <paramref name="key" /> angegeben wurde. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">Entfernt eine Name-Objekt-Zuordnung aus dem XAML-Namensbereich.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">Der Name der zu entfernenden Zuordnung.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">
        <paramref name="name" /> wurde als leere Zeichenfolge angegeben.
- oder -
Der angegebene <paramref name="name" /> wurde nicht registriert.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Ruft eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Werte ab.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Werte.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">Repräsentiert ein X-/Y-Koordinatenpaar in einem zweidimensionalen Raum.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">Erstellt eine neue <see cref="T:System.Windows.Point" />-Struktur, die die angegebenen Koordinaten enthält.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Die x-Koordinate der neuen <see cref="T:System.Windows.Point" />-Struktur.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Die y-Koordinate der neuen <see cref="T:System.Windows.Point" />-Struktur.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Addiert eine <see cref="T:System.Windows.Vector" />-Struktur und eine <see cref="T:System.Windows.Point" />-Struktur und gibt das Ergebnis als <see cref="T:System.Windows.Point" />-Struktur zurück.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">Die zu addierende <see cref="T:System.Windows.Point" />-Struktur.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">Die zu addierende <see cref="T:System.Windows.Vector" />-Struktur.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Gibt die Summe von <paramref name="point" /> und <paramref name="vector" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> ein <see cref="T:System.Windows.Point" /> ist und ob es dieselben Koordinaten enthält wie dieser <see cref="T:System.Windows.Point" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Point" /> ist dieselben Werte für <see cref="P:System.Windows.Point.X" /> und <see cref="P:System.Windows.Point.Y" /> enthält wie dieser <see cref="T:System.Windows.Point" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Gleichheit.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">Der Punkt, der mit dieser Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn beide <see cref="T:System.Windows.Point" />-Strukturen dieselben Werte für <see cref="P:System.Windows.Point.X" /> und <see cref="P:System.Windows.Point.Y" /> enthalten, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Gleichheit.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Der erste zu vergleichende Punkt.</param>
      <param name="point2" vsli:raw="The second point to compare.">Der zweite zu vergleichende Punkt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="point1" /> und <paramref name="point2" /> dieselben Werte für <see cref="P:System.Windows.Point.X" /> und <see cref="P:System.Windows.Point.Y" /> aufweisen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Gibt den Hashcode für diese <see cref="T:System.Windows.Point" /> zurück.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Der Hashcode für diese <see cref="T:System.Windows.Point" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Transformiert die angegebene <see cref="T:System.Windows.Point" />-Struktur mit der angegebenen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="point" vsli:raw="The point to transform.">Der zu transformierende Punkt.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The transformed point.">Der transformierte Punkt.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">Verschiebt die <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Koordinaten eines Punkts um die angegebenen Werte.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">Der Betrag, um den die <see cref="P:System.Windows.Point.X" />-Koordinate des Punkts versetzt werden soll.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">Der Betrag, um den die <see cref="P:System.Windows.Point.Y" />-Koordinate des Punkts versetzt werden soll.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">Verschiebt den angegebenen <see cref="T:System.Windows.Point" /> um den angegebenen <see cref="T:System.Windows.Vector" /> und gibt das Ergebnis zurück.</summary>
      <param name="point" vsli:raw="The point to translate.">Der zu verschiebende Punkt.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">Der Betrag, um den <paramref name="point" /> verschoben werden soll.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">Das Ergebnis aus der Verschiebung des angegebenen Punkts um den angegebenen Vektor.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Gleichheit.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Die erste zu vergleichende <see cref="T:System.Windows.Point" />-Struktur.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Die zweite zu vergleichende <see cref="T:System.Windows.Point" />-Struktur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sowohl die <see cref="P:System.Windows.Point.X" />-Koordinaten als auch die <see cref="P:System.Windows.Point.Y" />-Koordinaten von <paramref name="point1" /> und <paramref name="point2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Erstellt eine <see cref="T:System.Windows.Size" />-Struktur, deren <see cref="P:System.Windows.Size.Width" /> gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Size.Height" /> gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</summary>
      <param name="point" vsli:raw="The point to convert.">Der zu konvertierende Punkt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Eine <see cref="T:System.Windows.Size" />-Struktur, deren <see cref="P:System.Windows.Size.Width" /> gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Size.Height" /> gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Erstellt eine <see cref="T:System.Windows.Vector" />-Struktur, deren <see cref="P:System.Windows.Vector.X" />-Wert gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Vector.Y" />-Wert gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</summary>
      <param name="point" vsli:raw="The point to convert.">Der zu konvertierende Punkt.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Ein Vektor, dessen <see cref="P:System.Windows.Vector.X" />-Wert gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Vector.Y" />-Wert gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Ungleichheit.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Der erste zu vergleichende Punkt.</param>
      <param name="point2" vsli:raw="The second point to compare.">Der zweite zu vergleichende Punkt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">
        <see langword="true" />, wenn <paramref name="point1" /> und <paramref name="point2" /> unterschiedliche <see cref="P:System.Windows.Point.X" />- oder <see cref="P:System.Windows.Point.Y" />-Koordinaten aufweisen. <see langword="false" />, wenn <paramref name="point1" /> und <paramref name="point2" /> dieselben <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Koordinaten haben.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transformiert den angegebenen <see cref="T:System.Windows.Point" /> mit der angegebenen <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="point" vsli:raw="The point to transform.">Der zu transformierende Punkt.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Die Transformationsmatrix.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">Das Ergebnis aus der Transformation des angegebenen Punkts mit der angegebenen Matrix.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Subtrahiert den angegebenen <see cref="T:System.Windows.Point" /> von einem anderen angegebenen <see cref="T:System.Windows.Point" /> und gibt die Differenz als <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Der Punkt, von dem <paramref name="point2" /> subtrahiert wird.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Der Punkt, der von <paramref name="point1" /> subtrahiert wird.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Die Differenz zwischen <paramref name="point1" /> und <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Subtrahiert den angegebenen <see cref="T:System.Windows.Vector" /> vom angegebenen <see cref="T:System.Windows.Point" /> und gibt den resultierenden <see cref="T:System.Windows.Point" /> zurück.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Der Punkt, von dem <paramref name="vector" /> subtrahiert wird.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Der Vektor, der von <paramref name="point1" /> subtrahiert wird.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Die Differenz zwischen <paramref name="point" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Erstellt eine <see cref="T:System.Windows.Point" /> aus der angegebenen <see cref="T:System.String" />.</summary>
      <param name="source" vsli:raw="A string representation of a point.">Eine Zeichenfolgendarstellung eines Punkts.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Die entsprechende <see cref="T:System.Windows.Point" />-Struktur.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" /> besteht nicht aus zwei durch Komma oder Leerzeichen getrennten Double-Werten.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" /> enthält nicht zwei Zahlen.
- oder -
<paramref name="source" /> enthält zu viele Trennzeichen.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Subtrahiert den angegebenen <see cref="T:System.Windows.Point" /> von einem anderen angegebenen <see cref="T:System.Windows.Point" /> und gibt die Differenz als <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Der Punkt, von dem <paramref name="point2" /> subtrahiert wird.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Der Punkt, der von <paramref name="point1" /> subtrahiert wird.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Die Differenz zwischen <paramref name="point1" /> und <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Subtrahiert den angegebenen <see cref="T:System.Windows.Vector" /> vom angegebenen <see cref="T:System.Windows.Point" /> und gibt den resultierenden <see cref="T:System.Windows.Point" /> zurück.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Der Punkt, von dem <paramref name="vector" /> subtrahiert wird.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">Der <paramref name="vector" />, der von <paramref name="point" /> subtrahiert wird.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Die Differenz zwischen <paramref name="point" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Die Zeichenfolge, die das zu verwendende Format angibt.
- oder -
<see langword="null" />, wenn das für diese Art der <see cref="T:System.IFormattable" />-Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">Der zum Formatieren des Werts zu verwendende <see langword="IFormatProvider" />.

oder -
<see langword="null" />, wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Eine Zeichenfolge mit dem Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Erstellt eine <see cref="T:System.String" />-Darstellung dieses <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Ein <see cref="T:System.String" /> mit den <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Werten dieser <see cref="T:System.Windows.Point" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Erstellt eine <see cref="T:System.String" />-Darstellung dieses <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Kulturspezifische Formatierungsinformationen.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Ein <see cref="T:System.String" /> mit den <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Werten dieser <see cref="T:System.Windows.Point" />-Struktur.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Ruft den <see cref="P:System.Windows.Point.X" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur ab oder legt den Wert fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Der <see cref="P:System.Windows.Point.X" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur.  Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Ruft den <see cref="P:System.Windows.Point.Y" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur ab oder legt den Wert fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Der <see cref="P:System.Windows.Point.Y" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur.  Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Point" />-Objekt.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PointConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz einer <see cref="T:System.Windows.Point" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Point" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">Bestimmt, ob eine Instanz einer <see cref="T:System.Windows.Point" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Point" /> konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Point" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Point" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value" vsli:raw="The object being converted.">Das Objekt, das konvertiert wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Wird ausgelöst, wenn das angegebene Objekt NULL oder von einem Typ ist, der nicht in eine <see cref="T:System.Windows.Point" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">Versucht, eine <see cref="T:System.Windows.Point" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">Die zu konvertierende <see cref="T:System.Windows.Point" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">Der Typ, in den die <see cref="T:System.Windows.Point" /> konvertiert werden soll.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Point" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Wird ausgelöst, wenn <paramref name="value" /> is <see langword="null" /> oder keine <see cref="T:System.Windows.Point" /> ist, oder wenn der <paramref name="destinationType" /> kein gültiger Typ für die Konvertierung ist.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">Stellt den Rückruf dar, der aufgerufen wird, wenn der effektive Eigenschaftswert einer Abhängigkeitseigenschaft geändert wird.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">Das <see cref="T:System.Windows.DependencyObject" />, für das der Wert der Eigenschaft geändert wurde.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">Ereignisdaten, die von jedem Ereignis ausgegeben werden, das Änderungen am tatsächlichen Wert dieser Eigenschaft nachverfolgt.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">Definiert bestimmte Verhaltensaspekte einer Abhängigkeitseigenschaft beim Anwenden für einen bestimmten Typ, einschließlich Bedingungen, mit denen sie registriert wurde.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit einem angegebenen Standardwert für die Abhängigkeitseigenschaft, auf die diese Metadaten angewendet werden.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">Der anzugebende Standardwert für die Abhängigkeitseigenschaft, der normalerweise als Wert eines bestimmten Typs angegeben wird.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> kann nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit dem angegebenen Standardwert und dem angegebenen <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierungsverweis.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Der Standardwert für die Abhängigkeitseigenschaft, der normalerweise als Wert eines bestimmten Typs angegeben wird.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Verweis auf eine Handlerimplementierung, die vom Eigenschaftensystem aufgerufen werden muss, wenn der effektive Wert der Eigenschaft geändert wird.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> kann nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit dem angegebenen Standardwert und den angegebenen Rückrufen.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Der Standardwert für die Abhängigkeitseigenschaft, der normalerweise als Wert eines bestimmten Typs angegeben wird.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Verweis auf eine Handlerimplementierung, die vom Eigenschaftensystem aufgerufen werden muss, wenn der effektive Wert der Eigenschaft geändert wird.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">Verweis auf eine Handlerimplementierung, die aufgerufen werden muss, wenn das Eigenschaftensystem <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> für diese Eigenschaft aufruft.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> kann nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit dem angegebenen <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierungsverweis.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Verweis auf eine Handlerimplementierung, die vom Eigenschaftensystem aufgerufen werden muss, wenn der effektive Wert der Eigenschaft geändert wird.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">Ruft einen Verweis auf eine in diesen Metadaten angegebene <see cref="T:System.Windows.CoerceValueCallback" />-Implementierung ab oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">Ein Verweis auf eine <see cref="T:System.Windows.CoerceValueCallback" />-Implementierung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Kann nach der Anwendung auf eine Abhängigkeitseigenschaftsoperation keine Metadateneigenschaft festlegen.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">Ruft den Standardwert der Abhängigkeitseigenschaft ab oder legt diesen fest.</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">Der Standardwert der Eigenschaft. Der Standardwert für eine <see cref="T:System.Windows.PropertyMetadata" /> -Instanz, die mit dem Parameter losen Konstruktor erstellt <see cref="F:System.Windows.DependencyProperty.UnsetValue" />wird, ist.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">Kann nach der Erstellung nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Kann nach der Anwendung auf eine Abhängigkeitseigenschaftsoperation keine Metadateneigenschaft festlegen.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">Ruft einen Wert ab, der bestimmt, ob die Metadaten auf eine Eigenschaft angewendet wurden, wodurch die betreffende Metadateninstanz als unveränderlich festgelegt wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Metadateninstanz unveränderlich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">Führt diese Metadaten mit den Basismetadaten zusammen.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">Die Basismetadaten, die mit den Werten dieser Instanz zusammengeführt werden sollen.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">Die Abhängigkeitseigenschaft, auf die diese Metadaten angewendet werden.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">Wird aufgerufen, wenn diese Metadaten auf eine Eigenschaft angewendet wurden. Dies gibt an, dass die Metadaten versiegelt wurden.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">Die Abhängigkeitseigenschaft, auf die die Metadaten angewendet wurden.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">Der diesen Metadaten zugeordnete Typ, wenn es sich um typspezifische Metadaten handelt. Wenn es sich dabei um die Standardmetadaten handelt, ist dieser Wert ein NULL-Verweis.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">Ruft einen Verweis auf eine in diesen Metadaten angegebene <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung ab oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Ein Verweis auf eine <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Kann nach der Anwendung auf eine Abhängigkeitseigenschaftsoperation keine Metadateneigenschaft festlegen.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">Beschreibt die Breite, Höhe und Position eines Rechtecks.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur, mit der angegebenen x-Koordinate, y-Koordinate, Breite und Höhe.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">Die x-Koordinate der linken oberen Ecke des Rechtecks.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">Die y-Koordinate der linken oberen Ecke des Rechtecks.</param>
      <param name="width" vsli:raw="The width of the rectangle.">Die Breite des Rechtecks.</param>
      <param name="height" vsli:raw="The height of the rectangle.">Die Höhe des Rechtecks.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> ist eine negativer Wert.
- oder -
<paramref name="height" /> ist eine negativer Wert.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur, die genau die erforderliche Größe hat, um die beiden angegebenen Punkte einzuschließen.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">Der erste Punkt, den das neue Rechteck enthalten muss.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">Der zweite Punkt, den das neue Rechteck enthalten muss.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur mit der angegebenen Position der oberen linken Ecke und der angegebenen Breite und Höhe.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">Ein Punkt, der die Position der linken oberen Ecke des Rechtecks angibt.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Eine <see cref="T:System.Windows.Size" />-Struktur, die die Breite und Höhe des Rechtecks angibt.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur, die genau die erforderliche Größe hat, um den angegebenen Punkt und die Summe aus dem angegebenen Punkt und dem angegebenen Vektor einzuschließen.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">Der erste Punkt, den das Rechteck enthalten muss.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">Der Betrag, um den der angegebene Punkt verschoben werden soll. Das sich ergebende Rechteck weist genau die erforderliche Größe auf, um beide Punkte einzuschließen.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur mit der angegebenen Größe an der Position (0,0).</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Eine <see cref="T:System.Windows.Size" />-Struktur, die die Breite und Höhe des Rechtecks angibt.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">Ruft den y-Achsen-Wert des unteren Rands des Rechtecks ab.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">Der y-Achsen-Wert des unteren Rands des Rechtecks. Wenn das Rechteck leer ist, ist der Wert <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">Ruft die Position der linken unteren Ecke des Rechtecks ab.</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">Die Position der linken unteren Ecke des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">Ruft die Position der rechten unteren Ecke des Rechtecks ab.</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">Die Position der rechten unteren Ecke des Rechtecks.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">Gibt an, ob das Rechteck die angegebene x- und y-Koordinate enthält.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">Die x-Koordinate des Punkts, der überprüft werden soll.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">Die y-Koordinate des Punkts, der überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn (<paramref name="x" />, <paramref name="y" />) im Rechteck enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">Gibt an, ob das Rechteck den angegebenen Punkt enthält.</summary>
      <param name="point" vsli:raw="The point to check.">Der zu überprüfende Punkt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Rechteck den angegebenen Punkt enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">Gibt an, ob das Rechteck das angegebene Rechteck enthält.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Das zu überprüfende Rechteck.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn <paramref name="rect" /> vollständig im Rechteck enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">Ruft einen besonderen Wert ab, der ein Rechteck ohne Position oder Bereich darstellt.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">Das leere Rechteck, dessen <see cref="P:System.Windows.Rect.X" />-Eigenschaftswert und <see cref="P:System.Windows.Rect.Y" />-Eigenschaftswert <see cref="F:System.Double.PositiveInfinity" /> sind und dessen <see cref="P:System.Windows.Rect.Width" />-Eigenschaftswert und <see cref="P:System.Windows.Rect.Height" />-Eigenschaftswert <see cref="F:System.Double.NegativeInfinity" /> sind.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">Gibt an, ob das angegebene Objekt und das aktuelle Rechteck gleich sind.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Das Objekt, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Rect" /> ist und den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert wie das aktuelle Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">Gibt an, ob as angegebene Rechteck und das aktuelle Rechteck gleich sind.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Das Rechteck, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, das angegebene Rechteck den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert wie das aktuelle Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">Gibt an, ob die angegebenen Rechtecke gleich sind.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Rechtecke über den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">Erstellt einen Hashcode für das Rechteck.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">Ein Hashcode für die aktuelle <see cref="T:System.Windows.Rect" />-Struktur.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Ruft die Höhe des Rechtecks ab oder legt diese fest.</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">Eine positive Zahl, die die Höhe des Rechtecks darstellt. Der Standard ist 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Height" /> ist auf einen negativen Wert festgelegt.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">Erweitert oder verkleinert das Rechteck mithilfe der angegebenen Breite und Höhe in alle Richtungen.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Der Betrag, um den die linke und die rechte Seite des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Der Betrag, um den der obere und der untere Rand des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">Erstellt ein Rechteck, das sich beim Erweitern oder Verkleinern des angegebenen Rechtecks um die angegebenen Beträge für Breite und Höhe in alle Richtungen ergibt.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Die zu ändernde <see cref="T:System.Windows.Rect" />-Struktur.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Der Betrag, um den die linke und die rechte Seite des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Der Betrag, um den der obere und der untere Rand des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <returns vsli:raw="The resulting rectangle.">Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> ist ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Gibt das Rechteck zurück, das sich beim Erweitern des angegebenen Rechtecks um die angegebene <see cref="T:System.Windows.Size" /> in alle Richtungen ergibt.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Die zu ändernde <see cref="T:System.Windows.Rect" />-Struktur.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Gibt den Betrag an, um den das Rechteck erweitert werden soll. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Width" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Left" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Right" />-Eigenschaft des Rechtecks erhöht werden sollen. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Height" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Top" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Bottom" />-Eigenschaft des Rechtecks erhöht werden sollen.</param>
      <returns vsli:raw="The resulting rectangle.">Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> ist ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Erweitert das Rechteck mithilfe der angegebenen <see cref="T:System.Windows.Size" /> in alle Richtungen.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Gibt den Betrag an, um den das Rechteck erweitert werden soll. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Width" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Left" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Right" />-Eigenschaft des Rechtecks erhöht werden sollen. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Height" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Top" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Bottom" />-Eigenschaft des Rechtecks erhöht werden sollen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">Sucht die Schnittfläche des aktuellen Rechtecks und des angegebenen Rechtecks und speichert das Ergebnis als das aktuelle Rechteck.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">Das Rechteck, das eine Schnittfläche mit dem aktuellen Rechteck bildet.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">Gibt die Schnittfläche der angegebenen Rechtecke zurück.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">Die Schnittmenge der beiden Rechtecke oder <see cref="P:System.Windows.Rect.Empty" />, wenn keine Schnittmenge vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">Gibt an, ob sich das angegebene Rechteck mit dem aktuellen Rechteck überschneidet.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Das zu überprüfende Rechteck.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich das angegebene Rechteck mit dem aktuellen Rechteck überschneidet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Ruft einen Wert ab, der angibt, ob das Rechteck das <see cref="P:System.Windows.Rect.Empty" />-Rechteck ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Rechteck das <see cref="P:System.Windows.Rect.Empty" />-Rechteck ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">Ruft den x-Achsen-Wert des linken Rands des Rechtecks ab.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Der x-Achsen-Wert des linken Rands des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">Ruft die Position der linken oberen Ecke des Rechtecks ab oder legt diese fest.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">Die Position der linken oberen Ecke des Rechtecks. Der Standardwert ist (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">Verschiebt das Rechteck horizontal und vertikal um den jeweils angegebenen Betrag.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">Der Betrag, um den das Rechteck horizontal verschoben werden soll.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">Der Betrag, um den das Rechteck vertikal verschoben werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">Gibt ein Rechteck zurück, das im Bezug auf das angegebene Rechteck um den angegebenen horizontalen und vertikalen Betrag versetzt ist.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">Das zu verschiebende Rechteck.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">Der horizontale Offset für das neue Rechteck.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">Der vertikale Offset für das neue Rechteck.</param>
      <returns vsli:raw="The resulting rectangle.">Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> ist <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">Gibt ein Rechteck zurück, das im Bezug auf das angegebene Rechteck um den angegebenen Vektor versetzt ist.</summary>
      <param name="rect" vsli:raw="The original rectangle.">Das ursprüngliche Rechteck.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">Ein Vektor, der den horizontalen und den vertikalen Offset für das neue Rechteck angibt.</param>
      <returns vsli:raw="The resulting rectangle.">Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> ist <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">Verschiebt das Rechteck um den angegebenen Vektor.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">Ein Vektor, der die Beträge angibt, um die das Rechteck horizontal und vertikal verschoben werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Vergleicht zwei Rechtecke auf genaue Übereinstimmung.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Rechtecke über den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Vergleicht zwei Rechtecke auf Ungleichheit.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Rechtecke nicht über den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">Erstellt ein neues Rechteck aus der angegebenen Zeichenfolgendarstellung.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">Die Zeichenfolgendarstellung des Rechtecks im Format "x, y, Breite, Höhe".</param>
      <returns vsli:raw="The resulting rectangle.">Das sich ergebende Rechteck.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">Ruft den x-Achsen-Wert des rechten Rands des Rechtecks ab.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">Der x-Achsen-Wert des rechten Rands des Rechtecks.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">Multipliziert die Größe des aktuellen Rechtecks mit dem angegeben x-Wert und y-Wert.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">Der Skalierungsfaktor in x-Richtung.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">Der Skalierungsfaktor in y-Richtung.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">Ruft die Höhe und Breite des Rechtecks ab oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Eine <see cref="T:System.Windows.Size" />-Struktur, die die Breite und Höhe des Rechtecks angibt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formatiert den Wert der aktuellen Instanz mit dem angegebenen Format.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Das zu verwendende Format.
- oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn das für den Typ der <see cref="T:System.IFormattable" /> -Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Der zum Formatieren des Werts zu verwendende Anbieter.
- oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns vsli:raw="A string representation of the rectangle.">Eine Zeichenfolgendarstellung des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">Ruft die y-Achsen-Position des oberen Rands des Rechtecks ab.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">Die y-Achsen-Position des oberen Rands des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">Ruft die Position der linken oberen Ecke des Rechtecks ab.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">Die Position der linken oberen Ecke des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">Ruft die Position der rechten oberen Ecke des Rechtecks ab.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">Die Position der rechten oberen Ecke des Rechtecks.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">Gibt eine Zeichenfolgendarstellung des Rechtecks zurück.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">Eine Zeichenfolgendarstellung des aktuellen Rechtecks. Die Zeichenfolge weist das folgende Format auf: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">Gibt mithilfe des angegebenen Formatanbieters eine Zeichenfolgendarstellung des Rechtecks zurück.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Kulturspezifische Formatierungsinformationen.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">Eine Zeichenfolgendarstellung des aktuellen Rechtecks, die vom angegebenen Formatanbieter bestimmt wird.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">Transformiert das Rechteck durch Anwenden der angegebenen Matrix.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Eine Matrix, die die anzuwendende Transformation angibt.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">Gibt das Rechteck zurück, das sich durch das Anwenden der angegebenen Matrix auf das angegebene Rechteck ergibt.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">Ein Rechteck, das die Grundlage für die Transformation darstellt.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Eine Matrix, die die anzuwendende Transformation angibt.</param>
      <returns vsli:raw="The rectangle that results from the operation.">Das Rechteck, das sich aus der Operation ergibt.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">Erweitert das aktuelle Rechteck genau so weit, dass es den angegebenen Punkt einschließt.</summary>
      <param name="point" vsli:raw="The point to include.">Der einzuschließende Punkt.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">Erweitert das aktuelle Rechteck genau so weit, dass es das angegebene Rechteck einschließt.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Das einzuschließende Rechteck.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">Erstellt ein Rechteck, das genau groß genug ist, um das angegebene Rechteck und den angegebenen Punkt einzuschließen.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Das einzuschließende Rechteck.</param>
      <param name="point" vsli:raw="The point to include.">Der einzuschließende Punkt.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">Ein Rechteck, das genau groß genug ist, um das angegebene Rechteck und den angegebenen Punkt einzuschließen.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">Erstellt ein Rechteck, das genau groß genug ist, um die beiden angegebenen Rechtecke einzuschließen.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">Das erste einzuschließende Rechteck.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">Das zweite einzuschließende Rechteck.</param>
      <returns vsli:raw="The resulting rectangle.">Das sich ergebende Rechteck.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Ruft die Breite des Rechtecks ab bzw. legt diese fest.</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">Eine positive Zahl, die die Breite des Rechtecks darstellt. Der Standard ist 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Width" /> ist auf einen negativen Wert festgelegt.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">Ruft den x-Achsen-Wert des linken Rands des Rechtecks ab oder legt ihn fest.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Der x-Achsen-Wert des linken Rands des Rechtecks.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">Ruft den y-Achsen-Wert des oberen Rands des Rechtecks ab oder legt ihn fest.</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">Der y-Achsen-Wert des oberen Rands des Rechtecks.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Konvertiert Instanzen anderer Typen in bzw. aus Instanzen von <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.RectConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz von <see cref="T:System.Windows.Rect" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Rect" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">Bestimmt, ob ein <see cref="T:System.Windows.Rect" /> in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Rect" /> konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein <see cref="T:System.Windows.Rect" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Rect" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">Kulturinformationen, die beim Konvertieren beachtet werden müssen.</param>
      <param name="value" vsli:raw="The object being converted.">Das Objekt, das konvertiert wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Wird ausgelöst, wenn das angegebene Objekt NULL oder von einem Typ ist, der nicht in eine <see cref="T:System.Windows.Rect" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">Versucht, einen <see cref="T:System.Windows.Rect" /> in den angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">Kulturinformationen, die während der Konvertierung beachtet werden.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">Die zu konvertierende <see cref="T:System.Windows.Rect" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">Der Typ, in den die <see cref="T:System.Windows.Rect" /> konvertiert werden soll.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Rect" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" /> ist <see langword="null" />.

oder -
<paramref name="value" /> ist keine <see cref="T:System.Windows.Rect" />.

- oder -
Der <paramref name="destinationType" /> ist kein gültiger Typ für die Konvertierung.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">Implementiert eine Struktur, die zum Beschreiben der <see cref="T:System.Windows.Size" /> eines Objekts verwendet wird.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Size" />-Struktur und weist dieser eine ursprüngliche <paramref name="width" /> und <paramref name="height" /> zu.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Die Ausgangsbreite der Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Die Ausgangshöhe der Instanz von <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ruft einen Wert ab, der eine statische leere <see cref="T:System.Windows.Size" /> darstellt.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Eine leere Instanz von <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Vergleicht ein Objekt mit einer Instanz von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Größen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Vergleicht einen Wert mit einer Instanz von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Die Größe, die mit dieser aktuellen Instanz von <see cref="T:System.Windows.Size" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Instanzen von <see cref="T:System.Windows.Size" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Prüft zwei Instanzen von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Die erste zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Die zweite zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Instanzen von <see cref="T:System.Windows.Size" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ruft den Hashcode für diese Instanz von <see cref="T:System.Windows.Size" /> ab.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Der Hashcode für diese Instanz von <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ruft die <see cref="P:System.Windows.Size.Height" /> dieser Instanz von <see cref="T:System.Windows.Size" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">Die <see cref="P:System.Windows.Size.Height" /> dieser Instanz von <see cref="T:System.Windows.Size" />. Der Standard ist 0. Der Wert kann nicht negativ sein.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob diese Instanz von <see cref="T:System.Windows.Size" /> gleich <see cref="P:System.Windows.Size.Empty" /> ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Instanz der Größe <see cref="P:System.Windows.Size.Empty" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Prüft zwei Instanzen von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Die erste zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Die zweite zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die zwei Instanzen von <see cref="T:System.Windows.Size" /> identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Size" /> explizit in eine Instanz von <see cref="T:System.Windows.Point" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Der zu konvertierende <see cref="T:System.Windows.Size" />-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Eine <see cref="T:System.Windows.Point" />-Struktur, deren Wert gleich dieser Instanz von <see cref="T:System.Windows.Size" /> ist.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.Windows.Size" /> explizit in eine Instanz von <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Der zu konvertierende <see cref="T:System.Windows.Size" />-Wert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Eine <see cref="T:System.Windows.Vector" />-Struktur, deren Wert gleich dieser Instanz von <see cref="T:System.Windows.Size" /> ist.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">Vergleicht zwei Instanzen von <see cref="T:System.Windows.Size" /> auf Ungleichheit.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Die erste zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Die zweite zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Instanzen von <see cref="T:System.Windows.Size" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">Gibt eine Instanz von <see cref="T:System.Windows.Size" /> eines konvertierten <see cref="T:System.String" /> zurück.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">Ein <see cref="T:System.String" />-Wert, der in einen <see cref="T:System.Windows.Size" />-Wert analysiert werden soll.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Eine Instanz von <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Dieser Typ oder Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="format" vsli:raw="The format to use.">Das zu verwendende Format.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Der zum Formatieren des Werts zu verwendende Anbieter.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Der Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Gibt einen <see cref="T:System.String" /> zurück, der dieses <see cref="T:System.Windows.Size" />-Objekt darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">Ein <see cref="T:System.String" />, der die Breite, gefolgt von der Höhe, angibt.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Gibt einen <see cref="T:System.String" /> zurück, der diese Instanz von <see cref="T:System.Windows.Size" /> darstellt.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">Ein Objekt, das eine Möglichkeit zum Steuern der Formatierung bietet.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Ein <see cref="T:System.String" />, der dieses <see cref="T:System.Windows.Size" />-Objekt darstellt.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ruft die <see cref="P:System.Windows.Size.Width" /> dieser Instanz von <see cref="T:System.Windows.Size" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">Die <see cref="P:System.Windows.Size.Width" /> dieser Instanz von <see cref="T:System.Windows.Size" />. Der Standardwert ist <c>0</c>(null). Der Wert kann nicht negativ sein.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">Konvertiert Instanzen anderer Typen in bzw. aus Instanzen der <see cref="T:System.Windows.Size" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.SizeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Bestimmt, ob eine Klasse aus einem angegebenen Typ in eine Instanz von <see cref="T:System.Windows.Size" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">Bezeichnet den Datentyp, der für die Konvertierung ausgewertet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <paramref name="sourceType" /> in eine Instanz von <see cref="T:System.Windows.Size" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Size" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">Bezeichnet den Datentyp, der für die Konvertierung ausgewertet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese Instanz von <see cref="T:System.Windows.Size" /> in den <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Versucht, ein angegebenes Objekt in eine Instanz von <see cref="T:System.Windows.Size" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Kulturspezifische Informationen, die bei der Konvertierung berücksichtigt werden sollten.</param>
      <param name="value" vsli:raw="The source object that is being converted.">Das Quellobjekt, das konvertiert wird.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">Die Instanz von <see cref="T:System.Windows.Size" />, die aus der konvertierten <paramref name="source" /> erstellt wird.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">Versucht, eine Instanz von <see cref="T:System.Windows.Size" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Kulturspezifische Informationen, die bei der Konvertierung berücksichtigt werden sollten.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">Die Instanz von <see cref="T:System.Windows.Size" />, um zu konvertieren.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">Der Typ, in den diese Instanz von <see cref="T:System.Windows.Size" /> konvertiert wird.</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Das Objekt, das aus der konvertierten Instanz von <see cref="T:System.Windows.Size" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> ist <see langword="null" /> oder ist keine Instanz von <see cref="T:System.Windows.Size" />, oder wenn der <paramref name="destinationType" /> keiner der gültigen Zieltypen ist.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">Stellt einen Startbildschirm für eine WPF (Windows Presentation Foundation)-Anwendung bereit.</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse mit der angegebenen Ressourcenassembly.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">Die Assembly, die die eingebettete Ressource enthält.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Der Name der eingebetteten Ressource.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse mit der angegebenen Ressource.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Der Name der eingebetteten Ressource.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">Schließt den Begrüßungsbildschirm.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">Eine <see cref="T:System.TimeSpan" />, die angibt, nach welcher Zeitspanne der Begrüßungsbildschirm nach dem Initiieren des Schließvorgangs ausgeblendet wird.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Zeigt den Begrüßungsbildschirm an.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" />, damit der Begrüßungsbildschirm automatisch geschlossen wird, <see langword="false" />, wenn der Begrüßungsbildschirm manuell geschlossen werden soll.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">Die im Konstruktor angegebene Ressource konnte nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Zeigt den Begrüßungsbildschirm an.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" />, damit der Begrüßungsbildschirm automatisch geschlossen wird, <see langword="false" />, wenn der Begrüßungsbildschirm manuell geschlossen werden soll.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Fenster für den Begrüßungsbildschirm den WS_EX_TOPMOST-Stil verwenden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">Stellt Dienste zum Verwalten der Warteschlange von Arbeitselementen für einen Thread bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten für den Thread aus, für den der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Der Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten und der angegebenen Priorität für den Thread aus, für den der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Der Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Der Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität und dem angegebenen Argument auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die ein Argument erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Das Objekt, das als Argument an die angegebene Methode übergeben wird.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität und dem angegebenen Argumentarray auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Das Objekt, das als Argument an die angegebene Methode übergeben wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange steht.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> ist keine gültige Priorität.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">Initiiert ein asynchrones Beenden des <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">Die Priorität, bei der mit dem Beenden des Verteilers begonnen wird.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Bestimmt, ob der aufrufende Thread diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der aufrufende Thread diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> für den derzeit ausgeführten Thread ab bzw. erstellt einen neuen, wenn dem Thread noch kein <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">Der Verteiler, der dem aktuellen Thread zugeordnet ist.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Deaktiviert Verarbeitung der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Eine Struktur, mit der die Dispatcherverarbeitung wieder aktiviert wird.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">Anforderung zum Beenden aller Frames einschließlich geschachtelter Frames.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> für den angegebenen Thread ab.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">Der Thread, dessen <see cref="T:System.Windows.Threading.Dispatcher" /> abgerufen werden soll.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">Der Verteiler für <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">Bestimmt, ob der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung abgeschlossen hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Verteiler die Beendigung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">Bestimmt, ob der <see cref="T:System.Windows.Threading.Dispatcher" /> gerade beendet wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> gerade beendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Ruft die Auflistung von Hooks ab, die zusätzliche Ereignisinformationen zum <see cref="T:System.Windows.Threading.Dispatcher" /> bereitstellen.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Hooks, die diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet sind.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die minimale Zeitspanne, die auf den Start des Vorgangs gewartet wird.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten synchron mit den angegebenen Argumenten für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten in der angegebenen Zeitspanne mit der angegebenen Priorität und den angegebenen Argumenten synchron für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die maximale Zeitspanne, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten in der angegebenen Zeitspanne mit der angegebenen Priorität und den angegebenen Argumenten synchron für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die maximale Zeitspanne, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten mit der angegebenen Priorität und dem angegebenen Argument synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die ein Argument erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">Führt den angegebenen Delegaten synchron mit der angegebenen Priorität und dem angegebenen Timeoutwert auf dem Thread aus, in dem der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Der Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten mit der angegebenen Priorität und dem angegebenen Argument synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll. Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">Ein Objekt, das als Argument an die angegebene Methode übergeben wird.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Die minimale Zeitspanne, die auf den Start des Vorgangs gewartet wird.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Action" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Führt die angegebene <see cref="T:System.Func`1" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">Initiiert die synchrone Beendigung des <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">Tritt in eine Ausführungsschleife ein.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">Der Frame, den der Verteiler verarbeiten soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> ist gleich <see langword="true" />.
- oder -
<paramref name="frame" /> wird auf einem anderen <see cref="T:System.Windows.Threading.Dispatcher" /> ausgeführt.
- oder -
Verteilerverarbeitung wurde deaktiviert.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Stellt den Hauptausführungsframe in die Ereigniswarteschlange von <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">Tritt ein, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung abschließt.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">Tritt ein, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung beginnt.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ruft den Thread ab, dem dieser <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <returns vsli:raw="The thread.">Der Thread.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">Tritt ein, wenn eine Threadausnahme ausgelöst und während der Ausführung eines Delegaten mit <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> oder <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nicht abgefangen wird.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">Tritt ein, wenn eine Threadausnahme ausgelöst und nicht abgefangen wird, während ein Delegat mit <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> oder <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ausgeführt wird und sich in der Filterstufe befindet.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">Ermittelt, ob die angegebene <see cref="T:System.Windows.Threading.DispatcherPriority" /> eine gültige Priorität ist.</summary>
      <param name="priority" vsli:raw="The priority to check.">Die zu überprüfende Priorität.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">Eine Zeichenfolge, die von der Ausnahme zurückgegeben wird, die auftritt, wenn die Priorität ungültig ist.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Bestimmt, ob der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.Dispatcher" /> zugreifen kann.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Der aufrufende Thread kann nicht auf diesen <see cref="T:System.Windows.Threading.Dispatcher" /> zugreifen.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Ein awaitable-Objekt, das asynchron dem aktuellen Verteiler Steuerelemente zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.  Die Arbeit, welche auftritt, wenn das Steuerelement an den Code zurückgibt, der auf das Ergebnis dieser Methode wartet, die mit der angegebenen Priorität geplant wurde.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">Die Priorität, mit der die Fortsetzung geplant werden soll.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Ein awaitable-Objekt, das asynchron dem aktuellen Verteiler Steuerelemente zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">Stellt Ereignisdaten für auf den <see cref="T:System.Windows.Threading.Dispatcher" /> bezogene Ereignisse bereit.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Der diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The dispatcher.">Der Verteiler.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Stellt eine Ausführungsschleife im <see cref="T:System.Windows.Threading.Dispatcher" /> dar.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherFrame" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherFrame" />-Klasse mit dem angegebenen Flag für eine Beendigungsanforderung.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">Gibt an, ob dieser Frame beendet wird, wenn alle Frames eine Beendigungsaufforderung erhalten.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">Ruft einen Wert ab, mit dem angegeben wird, ob dieser <see cref="T:System.Windows.Threading.DispatcherFrame" /> fortgesetzt werden soll, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Frame fortgesetzt werden soll, andernfalls <see langword="false" />.  Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">Stellt Ereignisdaten für <see cref="T:System.Windows.Threading.DispatcherHooks" />-Ereignisse bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />-Klasse.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">Der dem Ereignis zugeordnete Vorgang.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Ruft das diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.Dispatcher" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Der diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">Ruft das diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.DispatcherOperation" /> ab.</summary>
      <returns vsli:raw="The operation.">Der Vorgang.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">Stellt die Methode für die Behandlung von auf <see cref="T:System.Windows.Threading.DispatcherHooks" /> bezogenen Ereignissen dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The event data.">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">Stellt zusätzliche Ereignisinformationen über die <see cref="T:System.Windows.Threading.Dispatcher" />-Verarbeitung bereit.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">Tritt ein, wenn der Verteiler keine weiteren Vorgänge zu verarbeiten hat.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">Tritt nach dem Abbrechen eines Vorgangs ein.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">Tritt ein, wenn ein Vorgang abgeschlossen ist.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">Tritt ein, wenn ein Vorgang an den Verteiler gesendet wird.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">Tritt ein, wenn die Priorität eines Vorgangs geändert wird.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">Tritt nach dem Aufrufen eines Vorgangs ein.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Stellt ein Objekt dar, das einem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherObject" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Bestimmt, ob der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.DispatcherObject" /> zugreifen kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der aufrufende Thread auf dieses Objekt zugreifen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> ab, der diesem <see cref="T:System.Windows.Threading.DispatcherObject" /> zugeordnet ist.</summary>
      <returns vsli:raw="The dispatcher.">Der Verteiler.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Erzwingt, dass der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.DispatcherObject" /> zugreifen kann.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">der aufrufende Thread kann nicht auf dieses <see cref="T:System.Windows.Threading.DispatcherObject" /> zugreifen.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Stellt ein Objekt dar, mit dem die Interaktion mit einem Vorgang erfolgt, der an die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange gesendet wurde.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">Bricht den Vorgang ab.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Vorgang abgebrochen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">Tritt nach dem Abbrechen des Vorgangs ein.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">Tritt ein, wenn der Vorgang abgeschlossen wurde.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> ab, an den der Vorgang gesendet wurde.</summary>
      <returns vsli:raw="The dispatcher.">Der Verteiler.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">Gibt ein Objekt zurück, das benachrichtigt wird, wenn der asynchrone Vorgang abgeschlossen ist.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">Ein Objekt, das benachrichtigt wird, wenn der asynchrone Vorgang abgeschlossen ist.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Startet den Vorgang, der diesem <see cref="T:System.Windows.Threading.DispatcherOperation" /> zugeordnet ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">
        <see langword="null" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Ruft die Priorität des Vorgangs in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange ab oder legt diese Priorität fest.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">Die Priorität des Delegaten in der Warteschlange.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Ruft das Ergebnis des Vorgangs nach dessen Abschluss ab.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">Das Ergebnis des Vorgangs oder <see langword="null" />, wenn der Vorgang nicht abgeschlossen wurde.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">Ruft den aktuellen Status des Vorgangs ab.</summary>
      <returns vsli:raw="The status of the operation.">Der Status des Vorgangs.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Ruft einen <see cref="T:System.Threading.Tasks.Task`1" /> ab, der den aktuellen Vorgang darstellt.</summary>
      <returns vsli:raw="An object that represents the current operation.">Ein Objekt, das den aktuellen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">Wartet bis zum Abschluss des Vorgangs.</summary>
      <returns vsli:raw="The status of the operation.">Der Status des Vorgangs.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Dies kann beim Warten auf einen Vorgang auftreten, der bereits im gleichen Thread ausgeführt wird.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">Wartet für den angegebenen Zeitraum bis zum Abschluss des Vorgangs.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">Die maximale Wartezeit.</param>
      <returns vsli:raw="The status of the operation.">Der Status des Vorgangs.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Dies kann beim Warten auf einen Vorgang auftreten, der bereits im gleichen Thread ausgeführt wird.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Stellt ein Objekt dar, mit dem die Interaktion mit einem Vorgang erfolgt, der an die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange gesendet wurde und ein <see cref="T:System.Threading.Tasks.Task`1" /> enthält.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Der Typ, der von der <see cref="T:System.Threading.Tasks.Task`1" /> zurückgegeben wird.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">Gibt ein Objekt zurück, das einen asynchronen Vorgang erwartet, der ein Ergebnis zurückgibt.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">Ein Objekt, das einen asynchronen Vorgang erwartet, der ein Ergebnis zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Startet den Vorgang, der diesem <see cref="T:System.Windows.Threading.DispatcherOperation" /> zugeordnet ist.</summary>
      <returns vsli:raw="The result of the operation.">Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Ruft das Ergebnis des Vorgangs nach dessen Abschluss ab.</summary>
      <returns vsli:raw="The result of the operation.">Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Ruft einen <see cref="T:System.Threading.Tasks.Task`1" /> ab, der den aktuellen Vorgang darstellt.</summary>
      <returns vsli:raw="An object that represents the current operation.">Ein Objekt, das den aktuellen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">Stellt einen Delegaten für Verteilervorgänge dar.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">Ein Argument, das an den Rückruf übergeben wird.</param>
      <returns vsli:raw="The object returned by the callback.">Das vom Rückruf zurückgegebene Objekt.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Beschreibt die möglichen Werte für den Status einer <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">Der Vorgang wurde abgebrochen.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">Der Vorgang wurde abgeschlossen.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">Das Ausführen des Vorgangs hat begonnen, wurde aber nicht abgeschlossen.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Der Vorgang steht noch aus und befindet sich weiterhin in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Beschreibt die Prioritäten, mit denen Vorgänge über den <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen werden können.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">Der Enumerationswert ist 2. Vorgänge werden verarbeitet, wenn sich die Anwendung im Leerlauf befindet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">Der Enumerationswert ist 4. Vorgänge werden verarbeitet, sobald alle Vorgänge außer den nicht im Leerlauf befindlichen abgeschlossen sind.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">Der Enumerationswert ist 3. Vorgänge werden verarbeitet, sobald die Hintergrundvorgänge abgeschlossen sind.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">Der Enumerationswert ist 8. Vorgänge werden mit gleicher Priorität wie die Datenbindung verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">Der Enumerationswert ist 0. Vorgänge werden nicht verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">Der Enumerationswert ist 5. Vorgänge werden mit gleicher Priorität wie die Eingabe verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">Der Enumerationswert ist -1. Dies ist eine ungültige Priorität.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">Der Enumerationswert ist 6. Vorgänge werden verarbeitet, sobald Layout und Wiedergabe beendet sind, aber bevor Elemente mit Eingabepriorität verarbeitet werden. Dieser wird insbesondere verwendet, wenn das Loaded-Ereignis ausgelöst wird.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">Der Enumerationswert ist 9. Vorgänge werden mit normaler Priorität verarbeitet. Dies ist die häufigste Anwendungspriorität.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">Der Enumerationswert ist 7. Vorgänge werden mit gleicher Priorität wie das Rendering verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">Der Enumerationswert ist 10. Vorgänge werden vor anderen asynchronen Vorgängen verarbeitet. Dies ist die höchste Priorität.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">Der Enumerationswert ist 1. Vorgänge werden verarbeitet, wenn sich das System im Leerlauf befindet.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Stellt ein Awaitable-Objekt dar, das asynchron die Steuerung an den aktuellen Verteiler zurückgibt und dem Verteiler die Möglichkeit bietet, andere Ereignisse zu verarbeiten.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">Gibt ein Objekt zurück, dass auf die Vervollständigung der asynchronen Aufgabe wartet.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">Ein Objekt, das auf den Abschluss der asynchronen Aufgabe wartet.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">Repräsentiert ein Objekt, welches auf die Vervollständigung der ansynchronen Aufgabe wartet.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">Beendet das Warten auf den Abschluss der asynchronen Aufgabe.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">Ruft einen Wert ab, der angibt, ob die asynchrone Aufgabe abgeschlossen wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">Legt die Aktion fest, die ausgeführt wird, sobald das <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" />-Objekt nicht mehr auf die zu beendende asynchrone Aufgabe wartet.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">Die Aktion, die ausgeführt werden soll, wenn die Wartevorgang abgeschlossen wird.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">Stellt den Verteiler im deaktivierten Zustand dar und stellt ein Verfahren zum erneuten Aktivieren der Verarbeitung durch den Verteiler bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">Aktiviert die Verarbeitung durch den Verteiler erneut.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt und das <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">Das auf Gleichheit zu prüfende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt und das <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Ruft einen Hashcode für diese Instanz ab.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">Bestimmt, ob zwei <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte gleich sind.</summary>
      <param name="left" vsli:raw="The first object to compare.">Das erste zu vergleichende Objekt.</param>
      <param name="right" vsli:raw="The second object to compare.">Das zweite zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">Bestimmt, ob zwei <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte ungleich sind.</summary>
      <param name="left" vsli:raw="The first object to compare.">Das erste zu vergleichende Objekt.</param>
      <param name="right" vsli:raw="The second object to compare.">Das zweite zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">Stelle einen Synchronisierungskontext für Windows Presentation Foundation (WPF) bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />-Klasse, indem der angegebene <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet wird.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">Der diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zuzuordnende <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />-Klasse, indem der angegebene <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet wird.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">Der diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zuzuordnende <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">Die Priorität, die verwendet wird, um Rückrufmethoden zu senden und abzuschicken.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Erstellt eine Kopie dieser Instanz von <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="The copy of this synchronization context.">Die Kopie dieses Synchronisierungskontexts.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">Ruft den Rückruf im Synchronisierungskontext asynchron auf.</summary>
      <param name="d" vsli:raw="The delegate to call.">Der aufzurufende Delegat.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Das an den Delegaten übergebene Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">Ruft den Rückruf im Synchronisierungskontext synchron auf.</summary>
      <param name="d" vsli:raw="The delegate to call.">Der aufzurufende Delegat.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Das an den Delegaten übergebene Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">Wartet darauf, dass ein beliebiges oder alle Elemente im angegebenen Array ein Signal empfangen.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">Ein Array, das die systemeigenen Betriebssystemhandles enthält.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">
        <see langword="true" />, um auf alle Handles zu warten, <see langword="false" />, um auf ein beliebiges Handle zu warten.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">Der Arrayindex des Objekts, das den Wartevorgang erfüllt hat.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">Ein Zeitgeber, der in die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange integriert ist, die in einem festgelegten Zeitintervall und mit einer festgelegten Priorität verarbeitet wird.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die das angegebene Zeitintervall, die angegebene Priorität, den angegebenen Ereignishandler und den angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">Der Zeitraum zwischen Ticks.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">Der Ereignishandler, der beim Eintreten des <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />-Ereignisses aufgerufen werden soll.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Der Verteiler, dem der Zeitgeber zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> ist <see langword="null" />.
- oder -
<paramref name="dispatcher" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die Zeitgeberereignisse mit der angegebenen Priorität verarbeitet.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die im angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> mit der angegebenen Priorität ausgeführt wird.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Der Verteiler, dem der Zeitgeber zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Ruft den diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordneten <see cref="T:System.Windows.Threading.DispatcherTimer" /> ab.</summary>
      <returns vsli:raw="The dispatcher.">Der Verteiler.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">Ruft den Zeitraum zwischen den Ticks des Zeitgebers ab oder legt diesen fest.</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">Der Zeitraum zwischen Ticks. Der Standardwert ist „00:00:00“.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" /> Millisekunden.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">Ruft einen Wert ab, mit dem angegeben wird, ob der Zeitgeber ausgeführt wird, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zeitgeber aktiviert ist, andernfalls <see langword="false" />.  Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Startet den <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Hält den <see cref="T:System.Windows.Threading.DispatcherTimer" /> an.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">Ruft ein benutzerdefiniertes Datenobjekt ab oder legt es fest.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">Die benutzerdefinierten Daten.  Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">Tritt auf, wenn das Zeitgeberintervall verstrichen ist.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Stellt Daten für das <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />-Ereignis bereit</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Ruft die Ausnahme ab, die ausgelöst wurde, als Code über den Verteiler ausgeführt wurde.</summary>
      <returns vsli:raw="The exception.">Die Ausnahme.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">Ruft ab oder legt fest, ob das Ausnahmeereignis behandelt wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Ausnahme behandelt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Stellt die Methode zur Behandlung des <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />-Ereignisses dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The event data.">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Stellt Daten für das <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />-Ereignis bereit</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Ruft die Ausnahme ab, die ausgelöst wurde, als Code über den Verteiler ausgeführt wurde.</summary>
      <returns vsli:raw="The exception.">Die Ausnahme.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">Ruft ab, ob die Ausnahme abgefangen und die Ereignishandler aufgerufen werden sollen, oder legt dies fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> ausgelöst werden soll, andernfalls <see langword="false" />.  Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Stellt die Methode zur Behandlung des <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />-Ereignisses dar.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="The event data.">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">Stellt eine Methode dar, die als Rückruf verwendet wird, mit dem der effektive Wert einer Abhängigkeitseigenschaft überprüft wird.</summary>
      <param name="value" vsli:raw="The value to be validated.">Der zu überprüfende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">
        <see langword="true" />, wenn der Wert überprüft wurde. <see langword="false" />, wenn der übermittelte Wert ungültig war.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">Stellt eine Verschiebung im zweidimensionalen Raum dar.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Vector" />-Struktur.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Der <see cref="P:System.Windows.Vector.X" />-Offset des neuen <see cref="T:System.Windows.Vector" />.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Der <see cref="P:System.Windows.Vector.Y" />-Offset des neuen <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">Verschiebt den angegebenen Punkt um den angegebenen Vektor und gibt den sich ergebenden Punkt zurück.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">Der Betrag, um den der angegebene Punkt verschoben werden soll.</param>
      <param name="point" vsli:raw="The point to translate.">Der zu verschiebende Punkt.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Das Ergebnis der Verschiebung von <paramref name="point" /> um <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Fügt zwei Vektoren hinzu und gibt das Ergebnis als <see cref="T:System.Windows.Vector" />-Struktur zurück.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Die Summe von <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">Ruft den in Grad ausgedrückten Winkel zwischen den zwei angegebenen Vektoren ab.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Der erste auszuwertende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Der zweite auszuwertende Vektor.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Der Winkel zwischen <paramref name="vector1" /> und <paramref name="vector2" /> in Grad.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">Berechnet das Kreuzprodukt zweier Vektoren.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Der erste auszuwertende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Der zweite auszuwertende Vektor.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">Das Kreuzprodukt von <paramref name="vector1" /> und <paramref name="vector2" />. Das Kreuzprodukt wird mithilfe der folgenden Formel berechnet:
<c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">Berechnet die Determinante von zwei Vektoren.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Der erste auszuwertende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Der zweite auszuwertende Vektor.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Die Determinante von <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Dividiert den angegebenen Vektor durch die angegebene Skalarzahl und gibt das Ergebnis als <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">Die zu dividierende Vektorstruktur.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">Der Betrag, durch den <paramref name="vector" /> dividiert wird.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Das Ergebnis der Division von <paramref name="vector" /> durch <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> eine <see cref="T:System.Windows.Vector" />-Struktur ist. Wenn dies der Fall ist, wird überprüft, ob der <see cref="P:System.Windows.Vector.X" />-Wert und der <see cref="P:System.Windows.Vector.Y" />-Wert mit den Werten des Vektors übereinstimmen.</summary>
      <param name="o" vsli:raw="The vector to compare.">Der zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Vector" /> mit dem gleichen <see cref="P:System.Windows.Vector.X" />-Wert und dem gleichen <see cref="P:System.Windows.Vector.Y" />-Wert wie dieser Vektor ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Überprüft zwei Vektoren auf Gleichheit.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">Der mit diesem Vektor zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> den gleichen <see cref="P:System.Windows.Vector.X" />-Wert und <see cref="P:System.Windows.Vector.Y" />-Wert wie dieser Vektor aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">Vergleicht die beiden angegebenen Vektoren auf Gleichheit.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Windows.Vector.X" />-Komponente und die <see cref="P:System.Windows.Vector.Y" />-Komponente von <paramref name="vector1" /> und <paramref name="vector2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">Gibt den Hashcode für diesen Vektor zurück.</summary>
      <returns vsli:raw="The hash code for this instance.">Der Hashcode für diese Instanz.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">Ruft die Länge dieses Vektors ab.</summary>
      <returns vsli:raw="The length of this vector.">Die Länge dieses Vektors.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">Ruft das Quadrat der Länge dieses Vektors ab.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">Das Quadrat der <see cref="P:System.Windows.Vector.Length" /> dieses Vektors.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multipliziert den angegebenen Skalar mit dem angegebenen Vektor und gibt den sich ergebenden <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Der zu multiplizierende Skalar.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Das Ergebnis der Multiplikation von <paramref name="scalar" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multipliziert den angegebenen Vektor mit dem angegebenen Skalar und gibt den sich ergebenden <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Der zu multiplizierende Skalar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Das Ergebnis der Multiplikation von <paramref name="vector" /> und <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transformiert den Koordinatenbereich des angegebenen Vektors mithilfe der angegebenen <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">Die zu transformierende Vektorstruktur.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Die auf den <paramref name="vector" /> anzuwendende Transformation.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Das Ergebnis der Transformation von <paramref name="vector" /> um <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Berechnet das Skalarprodukt von zwei angegebenen Vektoren und gibt das Ergebnis als <see cref="T:System.Double" /> zurück.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Der erste zu multiplizierende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">Die zweite zu multiplizierende Vektorstruktur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">Ein <see cref="T:System.Double" /> mit dem Skalarprodukt von <paramref name="vector1" /> und <paramref name="vector2" />, das mit der folgenden Formel berechnet wird:
<c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">Negiert diesen Vektor. Der Vektor weist denselben Betrag wie zuvor, doch die entgegengesetzte Richtung auf.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">Normalisiert diesen Vektor.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">Verschiebt einen Punkt um den angegebenen Vektor und gibt den sich ergebenden Punkt zurück.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">Der Vektor, der zum Verschieben von <paramref name="point" /> verwendet wird.</param>
      <param name="point" vsli:raw="The point to translate.">Der zu verschiebende Punkt.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Das Ergebnis der Verschiebung von <paramref name="point" /> um <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">Addiert zwei Vektoren und gibt das Ergebnis als Vektor zurück.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Der erste zu addierende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Der zweite zu addierende Vektor.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Die Summe von <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">Dividiert den angegebenen Vektor durch den angegebenen Skalar und gibt den sich ergebenden Vektor zurück.</summary>
      <param name="vector" vsli:raw="The vector to divide.">Der zu dividierende Vektor.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">Der Skalar, durch den <paramref name="vector" /> dividiert wird.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Das Ergebnis der Division von <paramref name="vector" /> durch <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Überprüft zwei Vektoren auf Gleichheit.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Windows.Vector.X" />-Komponente und die <see cref="P:System.Windows.Vector.Y" />-Komponente von <paramref name="vector1" /> und <paramref name="vector2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">Erstellt einen <see cref="T:System.Windows.Point" /> mit dem <see cref="P:System.Windows.Vector.X" />-Wert und dem <see cref="P:System.Windows.Vector.Y" />-Wert dieses Vektors.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Der zu konvertierende Vektor.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">Ein Punkt, dessen <see cref="P:System.Windows.Point.X" />-Koordinatenwert und <see cref="P:System.Windows.Point.Y" />-Koordinatenwert den Offsetwerten <see cref="P:System.Windows.Vector.X" /> und <see cref="P:System.Windows.Vector.Y" /> von <paramref name="vector" /> entsprechen.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">Erstellt eine <see cref="T:System.Windows.Size" /> aus den Offsets dieses Vektors.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Der zu konvertierende Vektor.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">Eine <see cref="T:System.Windows.Size" />, deren <see cref="P:System.Windows.Size.Width" /> dem absoluten Wert der <see cref="P:System.Windows.Vector.X" />-Eigenschaft dieses Vektors entspricht und deren <see cref="P:System.Windows.Size.Height" /> dem absoluten Wert der <see cref="P:System.Windows.Vector.Y" />-Eigenschaft dieses Vektors entspricht.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">Überprüft zwei Vektoren auf Ungleichheit.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Der erste zu vergleichende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Der zweite zu vergleichende Vektor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Windows.Vector.X" />-Komponente und die <see cref="P:System.Windows.Vector.Y" />-Komponente von <paramref name="vector1" /> und <paramref name="vector2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">Multipliziert den angegebenen Skalar mit dem angegebenen Vektor und gibt den sich ergebenden Vektor zurück.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Der zu multiplizierende Skalar.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Das Ergebnis der Multiplikation von <paramref name="scalar" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">Multipliziert den angegebenen Vektor mit dem angegebenen Skalar und gibt den sich ergebenden Vektor zurück.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Der zu multiplizierende Vektor.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Der zu multiplizierende Skalar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Das Ergebnis der Multiplikation von <paramref name="vector" /> und <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transformiert den Koordinatenbereich des angegebenen Vektors mithilfe der angegebenen <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Der zu transformierende Vektor.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Die auf den <paramref name="vector" /> anzuwendende Transformation.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Das Ergebnis der Transformation von <paramref name="vector" /> um <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Berechnet das Skalarprodukt von zwei angegebenen Vektorstrukturen und gibt das Ergebnis als <see cref="T:System.Double" /> zurück.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Der erste zu multiplizierende Vektor.</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">Der zweite zu multiplizierende Vektor.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">Gibt ein <see cref="T:System.Double" /> mit dem Skalarprodukt von <paramref name="vector1" /> und <paramref name="vector2" />, das mit der folgenden Formel berechnet wird:
<c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">Subtrahiert einen angegebenen Vektor von einem anderen.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Der Vektor, von dem <paramref name="vector2" /> subtrahiert wird.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Der Vektor, der von <paramref name="vector1" /> subtrahiert wird.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Die Differenz zwischen <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">Negiert den angegebenen Vektor.</summary>
      <param name="vector" vsli:raw="The vector to negate.">Der zu negierende Vektor.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">Ein Vektor, dessen <see cref="P:System.Windows.Vector.X" />-Wert und <see cref="P:System.Windows.Vector.Y" />-Wert das umgekehrte Vorzeichen des <see cref="P:System.Windows.Vector.X" />-Werts und des <see cref="P:System.Windows.Vector.Y" />-Werts von <paramref name="vector" /> aufweisen.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Konvertiert eine Zeichenfolgendarstellung eines Vektors in die entsprechende <see cref="T:System.Windows.Vector" />-Struktur.</summary>
      <param name="source" vsli:raw="The string representation of the vector.">Die Zeichenfolgendarstellung des Vektors.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Die entsprechende <see cref="T:System.Windows.Vector" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">Subtrahiert den angegebenen Vektor von einem anderen angegebenen Vektor.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Der Vektor, von dem <paramref name="vector2" /> subtrahiert wird.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Der Vektor, der von <paramref name="vector1" /> subtrahiert wird.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Die Differenz zwischen <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Die Zeichenfolge, die das zu verwendende Format angibt.

oder -
<see langword="null" />, wenn das für diese Art der <see cref="T:System.IFormattable" />-Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">Der zum Formatieren des Werts zu verwendende <see langword="IFormatProvider" />.

oder -
<see langword="null" />, wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Eine Zeichenfolge mit dem Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Gibt die Zeichenfolgendarstellung dieser <see cref="T:System.Windows.Vector" />-Struktur zurück.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Eine Zeichenfolge, die den <see cref="P:System.Windows.Vector.X" />-Wert und den <see cref="P:System.Windows.Vector.Y" />-Wert dieses <see cref="T:System.Windows.Vector" /> darstellt.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">Gibt die Zeichenfolgendarstellung dieser <see cref="T:System.Windows.Vector" />-Struktur mit den angegebenen Formatierungsinformationen zurück.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Die kulturspezifischen Formatierungsinformationen.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Eine Zeichenfolge, die den <see cref="P:System.Windows.Vector.X" />-Wert und den <see cref="P:System.Windows.Vector.Y" />-Wert dieses <see cref="T:System.Windows.Vector" /> darstellt.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">Ruft die <see cref="P:System.Windows.Vector.X" />-Komponente dieses Vektors ab oder legt diese fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">Die <see cref="P:System.Windows.Vector.X" />-Komponente dieses Vektors. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">Ruft die <see cref="P:System.Windows.Vector.Y" />-Komponente dieses Vektors ab oder legt diese fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">Die <see cref="P:System.Windows.Vector.Y" />-Komponente dieses Vektors. Der Standardwert ist 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Vector" />-Objekt.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Vector" />-Struktur.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Gibt an, ob ein Objekt von einem angegebenen Typ in eine Instanz einer <see cref="T:System.Windows.Vector" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">Der Quell-<see cref="T:System.Type" />, dessen Konvertierungsunterstützung abgefragt wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Objekte vom angegebenen Typ in einen <see cref="T:System.Windows.Vector" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">Bestimmt, ob Instanzen von <see cref="T:System.Windows.Vector" /> in den angegebenen Typ konvertiert werden können.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Vector" /> konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Instanzen von <see cref="T:System.Windows.Vector" /> in <paramref name="destinationType" /> konvertiert werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Konvertiert das angegebene Objekt in eine <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Beschreibt die <see cref="T:System.Globalization.CultureInfo" /> des zu konvertierenden Typs.</param>
      <param name="value" vsli:raw="The object being converted.">Das Objekt, das konvertiert wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">Konvertiert die angegebene <see cref="T:System.Windows.Vector" /> in den angegebenen Typ.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Beschreibt die <see cref="T:System.Globalization.CultureInfo" /> des zu konvertierenden Typs.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">Die zu konvertierende <see cref="T:System.Windows.Vector" />.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">Der Typ, in den die <see cref="T:System.Windows.Vector" /> konvertiert werden soll.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Vector" /> erstellt wird.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">Stellt eine Basisklasse für den Ereignis-Manager bereit, der im Muster für schwache Ereignisse verwendet wird. Der Manager fügt Listener hinzu oder entfernt diese für Ereignisse (oder Rückrufe), die ebenfalls dieses Muster verwenden.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">Initialisiert als Initialisierer innerhalb des Konstruktors einer abgeleiteten Klasse die Basisklassenwerte.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">Übermittelt das verwaltete Ereignis an alle Listener.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Das Objekt, für das das Ereignis behandelt wird.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">Ein <see cref="T:System.EventArgs" />, das die vom Ereignis zu liefernden Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">Übermittelt das verwaltete Ereignis an jeden Listener in der bereitgestellten Liste.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Das Objekt, für das das Ereignis behandelt wird.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Die bereitgestellte <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">Gibt die <see cref="T:System.Windows.WeakEventManager" />-Implementierung zurück, die für den bereitgestellten Typ verwendet wird.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">Der Typ, für den der <see cref="T:System.Windows.WeakEventManager" /> abgerufen werden sollen.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">Die übereinstimmende <see cref="T:System.Windows.WeakEventManager" />-Implementierung.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">Ruft die Daten ab, die für die angegebene Quelle gespeichert werden, oder legt diese fest.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">Der nullbasierte Index der angeforderten Quelle.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">Daten, die vom Manager für diese Quelle gespeichert werden.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Stellt eine integrierte Auflistung zum Speichern von Listenern für einen <see cref="T:System.Windows.WeakEventManager" /> bereit.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Klasse mit der angegebenen anfänglichen Kapazität.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Die Anzahl der Elemente, die in der ursprünglichen Liste zugeordnet werden sollen.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Fügt ein <see cref="T:System.Windows.IWeakEventListener" />-Objekt der <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Auflistung hinzu.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Das Listenerelement, das der <see cref="T:System.Windows.WeakEventManager.ListenerList" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Fügt der <see cref="T:System.Windows.WeakEventManager.ListenerList" /> einen Ereignishandler hinzu.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Der dem <see cref="T:System.Windows.WeakEventManager.ListenerList" /> hinzuzufügende Ereignishandler.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">Gibt an, dass die Liste verwendet wird. Dadurch werden Änderungen an der Liste während der Iteration von Listenelementen verhindert.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn bereits angegeben wurde, dass die Liste verwendet wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Erstellt einen änderbaren Klon dieser <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">Ein änderbarer Klon des aktuellen Objekts.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Kopiert die aktuelle <see cref="T:System.Windows.WeakEventManager.ListenerList" /> in die angegebene <see cref="T:System.Windows.WeakEventManager.ListenerList" /></summary>
      <param name="newList" vsli:raw="The object to copy to.">Das Objekt, in das kopiert werden soll.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Ruft die Anzahl der Elemente in <see cref="T:System.Windows.WeakEventManager.ListenerList" /> ab.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Die Anzahl der Elemente in der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Übermittelt das verwaltete Ereignis an alle Listener in der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="args" vsli:raw="An object that contains the event data.">Ein Objekt, das die Ereignisdaten enthält.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn einer der Listener in <see cref="T:System.Windows.WeakEventManager.ListenerList" /> auf ein Objekt verweist, das an den Garbage Collector übergeben wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">Ruft einen Wert ab, der eine leere Liste für Vergleiche darstellt.</summary>
      <returns vsli:raw="The empty list representation.">Die Darstellung der leeren Liste.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">Hebt den gesperrten Status auf, der von <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" /> initiiert wurde.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Windows.WeakEventManager.ListenerList" /> leer ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Liste leer ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">Ruft ein bestimmtes Listenerelement in der <see cref="T:System.Windows.WeakEventManager.ListenerList" /> ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">Der nullbasierte Index des Listeners in der Liste.</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">Das Element an diesem Index, oder ein NULL-Verweis, wenn kein Element an diesem Index vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">Überprüft eine mögliche Verwendung der bereitgestellten Liste und legt die Verweisparameter der Liste ggf. auf eine Kopie der Liste fest.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">Die Liste, die auf eine mögliche Verwendung überprüft und von der ggf. eine Kopie erstellt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">
        <see langword="true" />, wenn die bereitgestellte Liste zum Zeitpunkt des Aufrufs verwendet wurde und der <paramref name="list" />-Parameterverweis daher auf eine Kopie festgelegt wurde. <see langword="false" />, wenn die bereitgestellte Liste nicht verwendet wurde; der <paramref name="list" />-Parameterverweis wird in diesem Fall nicht verändert.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">Entfernt alle Einträge aus der Liste mit dem zugrunde liegenden Verweisziel als NULL-Verweis.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Gibt <see langword="true" /> zurück, wenn Einträge gelöscht würden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Entfernt das erste Vorkommen eines Listenerelements aus der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The item to remove.">Das zu entfernende Element.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Entfernt einen Ereignishandler aus der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Der vom <see cref="T:System.Windows.WeakEventManager.ListenerList" /> zu entfernende Ereignishandler.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">Stellt eine typensichere Auflistung zum Speichern von Listenern für einen <see cref="T:System.Windows.WeakEventManager" /> bereit. Diese Klasse definiert einen Typparameter für die verwendeten Ereignisdaten.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Der Typ, der die Ereignisdaten enthält.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />-Klasse mit der angegebenen anfänglichen Kapazität.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Die Anzahl der Elemente, die in der ursprünglichen Liste zugeordnet werden sollen.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">Erstellt einen änderbaren Klon der <see cref="T:System.Windows.WeakEventManager.ListenerList" />, indem tiefe Kopien der Werte erzeugt werden.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true" /> war.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">Übermittelt das verwaltete Ereignis an alle Listener in der <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e" vsli:raw="An object that contains the event data.">Ein Objekt, das die Ereignisdaten enthält.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn einer der Listener in <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> auf ein Objekt verweist, das an den Garbage Collector übergeben wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Gibt ein neues Objekt zurück, mit dem Listener zu einem Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Ein neues Objekt, mit dem Listener zu einem Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">Fügt den angegebenen Delegaten als Ereignishandler der angegebenen Quelle hinzu.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">Das Quellobjekt, das der Handlerdelegat abonniert.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">Der Delegat, der das Ereignis behandelt, das von <paramref name="source" /> ausgelöst wird.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">Fügt den bereitgestellten Listener der bereitgestellten Quelle für das verwaltete Ereignis hinzu.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">Die Quelle, an die Listener angefügt werden.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Die Überwachungsklasse (diese muss <see cref="T:System.Windows.IWeakEventListener" /> implementieren).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">Entfernt den zuvor hinzugefügten Handler aus der angegebenen Quelle.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">Der Handler, der aus der Quelle entfernt werden soll.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">Der zu vom <paramref name="source" />, zu entfernende Delegat.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">Entfernt einen zuvor hinzugefügten Listener aus der bereitgestellten Quelle.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">Die Quelle, aus der Listener entfernt werden sollen.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Die Überwachungsklasse (diese muss <see cref="T:System.Windows.IWeakEventListener" /> implementieren).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">Entfernt inaktive Listenereinträge aus der Datenliste für die bereitgestellte Quelle. Gibt <see langword="true" /> zurück, wenn tatsächlich Einträge aus der Liste entfernt wurden.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">Die Quelle für Ereignisse, auf die gelauscht wird.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">Die zu prüfenden Daten. Bei diesem Objekt wird erwartet, dass es sich um eine <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Implementierung handelt.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">
        <see langword="true" />, um das Lauschen auf <paramref name="source" /> zu beenden und alle Einträge aus <paramref name="data" /> zu entfernen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn tatsächlich Einträge entfernt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Richtet auf der zugrunde liegenden Datentabelle eine Lesesperre ein und gibt ein <see cref="T:System.IDisposable" /> zurück.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Ein Objekt, das zum Einrichten einer Sperre für die Datentabellenmember verwendet werden kann und anschließend ordnungsgemäß mit einem <see langword="using" />-Konstrukt freigegeben wird.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">Entfernt alle Listener für die angegebene Quelle.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">Die Quelle, für die Listenerinformationen entfernt werden sollen.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">Fordert an, dass das Löschen nicht verwendeter Einträge aus der zugrunde liegenden Liste der Listener in einem Thread mit niedrigerer Priorität ausgeführt wird.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">Legt den aktuellen Manager für den angegebenen Managertyp fest.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">Der Typ, auf den der neue Ereignis-Manager festgelegt werden soll.</param>
      <param name="manager" vsli:raw="The new event manager.">Der neue Ereignis-Manager.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">Startet beim Überschreiben in einer abgeleiteten Klasse die Überwachung des verwalteten Ereignisses. Nach dem ersten Aufruf der <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" />-Methode muss der Manager bereit sein für einen Aufruf von <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> oder <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />, sobald das relevante Ereignis aus der bereitgestellten Quelle behandelt werden muss.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">Die Quelle, die überwacht werden soll.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">Stoppt beim Überschreiben in einer abgeleiteten Klasse die Überwachung der bereitgestellten Quelle für das verwaltete Ereignis.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">Die Quelle, deren Überwachung beendet werden soll.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Richtet auf der zugrunde liegenden Datentabelle eine Schreibsperre ein und gibt ein <see cref="T:System.IDisposable" /> zurück.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Ein Objekt, das zum Einrichten einer Sperre für die Datentabellenmember verwendet werden kann und anschließend ordnungsgemäß mit einem <see langword="using" />-Konstrukt freigegeben wird.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">Stellt einen typsicheren <see cref="T:System.Windows.WeakEventManager" /> bereit, mit dem Sie den Ereignishandler angeben können, der für das Muster "weak event listener" verwendet werden soll. Diese Klasse definiert einen Typparameter für die Quelle des Ereignisses sowie einen Typparameter für die verwendeten Ereignisdaten.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">Der Typ, der das Ereignis auslöst.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Der Typ, der die Ereignisdaten enthält.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">Fügt den angegebenen Ereignishandler dem angegebenen Ereignis hinzu.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Das Quellobjekt, das das angegebene Ereignis auslöst.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">Der Name des zu abonierenden Ereignisses.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">Der Delegat, der das Ereignis behandelt.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Gibt ein neues Objekt zurück, mit dem Listener zu einem Ereignis hinzugefügt werden.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Ein neues Objekt, mit dem Listener zu einem Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">Entfernt den angegebenen Ereignishandler aus dem angegebenen Ereingis.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Das Quellobjekt, das das angegebene Ereignis auslöst.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">Der Name der aus dem Ereignisses zu entfernenden Handlers.</param>
      <param name="handler" vsli:raw="The delegate to remove.">Der zu entfernende Delegat</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">Startet das Lauschen auf das Ereignisses für das angegebene Objekt.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Das Objekt, das das Ereignis auslöst.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">Beendet das Lauschen auf das Ereignisses für das angegebene Objekt.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Das Objekt, das das Ereignis auslöst.</param>
    </member>
  </members>
</doc>