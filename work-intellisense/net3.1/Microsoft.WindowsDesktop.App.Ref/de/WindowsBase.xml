<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary>Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis auslöst.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis behandelt.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Fügt dem <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis der angegebenen Quelle den angegebenen Listener hinzu.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Das Objekt, das als Listener hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zum <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis behandelt.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Entfernt den angegebenen Listener aus dem <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis der angegebenen Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Der zu entfernende Listener.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary>Beginnt die Überwachung des <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary>Beendet die Überwachung des <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary>Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</param>
      <param name="handler">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Fügt dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis der angegebenen Quelle den angegebenen Listener hinzu.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Das Objekt, das als Listener hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Entfernt den angegebenen Listener aus dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignis der angegebenen Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Der zu entfernende Listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary>Beginnt die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary>Beendet die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>Stellt Informationen für das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />-Klasse mit dem angegebenen <paramref name="isCancelable" />-Wert.</summary>
      <param name="isCancelable">Ein Wert, der angibt, ob das Ereignis abgebrochen werden kann.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>Ruft einen Wert ab oder legt ihn fest, der anzeigt, ob das Ereignis abgebrochen werden soll.</summary>
      <returns>
        <see langword="true" />, wenn das Ereignis abgebrochen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</returns>
      <exception cref="T:System.InvalidOperationException">Wenn der Wert von <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /><see langword="false" /> ist.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>Ruft einen Wert ab, der angibt, ob das Ereignis abgebrochen werden kann.</summary>
      <returns>
        <see langword="true" />, wenn das Ereignis abgebrochen werden kann, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />-Ereignis behandelt.</summary>
      <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e">Informationen zum Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary>Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis auslöst.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Fügt dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis der angegebenen Quelle den angegebenen Listener hinzu.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Das Objekt, das als Listener hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Entfernt den angegebenen Listener aus dem <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignis der angegebenen Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Der zu entfernende Listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary>Beginnt die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary>Beendet die Überwachung des <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary>Stellt eine Erweiterung von <see cref="T:System.ComponentModel.PropertyDescriptor" /> bereit, die die zusätzliche Eigenschaftenmerkmale einer Abhängigkeitseigenschaft verfügbar macht.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>Ermöglicht es, andere Objekte zu benachrichtigen, wenn sich diese Eigenschaft ändert.</summary>
      <param name="component">Die Komponente, für die der Handler hinzugefügt wird.</param>
      <param name="handler">Der Delegat, der als Listener hinzugefügt wird.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary>Ruft die Auflistung von Attributen für diesen Member ab.</summary>
      <returns>Die <see cref="T:System.ComponentModel.AttributeCollection" />-Auflistung von Attributen.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary>Gibt zurück, ob durch das Zurücksetzen eines Objekts sein Wert geändert wird.</summary>
      <param name="component">Die Komponente, die auf die Fähigkeit des Zurücksetzens zu prüfen ist.</param>
      <returns>
        <see langword="true" />, wenn durch Zurücksetzen der Komponente deren Wert geändert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary>Ruft den Namen der Kategorie ab, zu der der Member gehört. Dieser ist im <see cref="T:System.ComponentModel.CategoryAttribute" /> angegeben.</summary>
      <returns>Der Name der Kategorie, zu der der Member gehört. Wenn keine <see cref="T:System.ComponentModel.CategoryAttribute" />-Klasse vorhanden ist, wird der Kategoriename auf die Standardkategorie <see langword="Misc" /> festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary>Enthält den Typ der Komponente, an die diese Eigenschaft gebunden ist.</summary>
      <returns>Eine <see cref="T:System.Type" />-Klasse, die den Typ der Komponente darstellt, an die diese Eigenschaft gebunden ist. Wenn <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> oder <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> aufgerufen wird, kann das angegebene Objekt eine Instanz dieses Typs sein.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary>Ruft den Typkonverter für diese Eigenschaft ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter" />-Klasse, die zum Konvertieren der <see cref="T:System.Type" />-Klasse dieser Eigenschaft verwendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary>Gibt den Bezeichner der Abhängigkeitseigenschaft zurück.</summary>
      <returns>Der Bezeichner der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary>Ruft die Beschreibung des Members ab, die in der <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse angegeben ist.</summary>
      <returns>Die Beschreibung des Members. Wenn keine <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse vorhanden ist, wird der Eigenschaftswert auf die Standardeinstellung, eine leere Zeichenfolge (""), festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary>Ruft einen Callback ab, mit dem Designer den effektiven Wert einer Abhängigkeitseigenschaft ändern, bevor der Wert der Abhängigkeitseigenschaft in der Engine für die Abhängigkeitseigenschaft gespeichert wird, oder legt ihn fest.</summary>
      <returns>Ein Callback, mit dem Designer den effektiven Wert einer Abhängigkeitseigenschaft ändern, bevor der Wert der Abhängigkeitseigenschaft in der Engine für die Abhängigkeitseigenschaft gespeichert wird.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary>Ruft ab, ob dieser Member nur zur Entwurfszeit festgelegt werden darf. Dies ist in der <see cref="T:System.ComponentModel.DesignOnlyAttribute" />-Klasse angegeben.</summary>
      <returns>
        <see langword="true" />, wenn dieser Member nur zur Entwurfszeit festgelegt werden darf, <see langword="false" />, wenn der Member zur Laufzeit festgelegt werden kann. Wenn keine <see cref="T:System.ComponentModel.DesignOnlyAttribute" />-Klasse vorhanden ist, wird der Standardwert <see langword="false" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary>Ruft den Namen ab, der in einem Fenster, z. B. im Eigenschaftenfenster, angezeigt werden kann.</summary>
      <returns>Der Name, der für die Eigenschaft angezeigt wird.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary>Überprüft zwei <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />-Instanzen auf Gleichheit.</summary>
      <param name="obj">Das <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Objekte äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary>Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für einen bereitgestellten Eigenschaftennamen zurück.</summary>
      <param name="name">Der registrierte Name für eine Abhängigkeitseigenschaft oder eine angefügte Eigenschaft.</param>
      <param name="ownerType">Der <see cref="T:System.Type" /> des Objekts, das die Eigenschaftendefinition besitzt.</param>
      <param name="targetType">Der <see cref="T:System.Type" /> des Objekts, für das Sie die Eigenschaft festlegen möchten.</param>
      <returns>Der angeforderte <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary>Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für einen bereitgestellten Eigenschaftennamen zurück.</summary>
      <param name="name">Der registrierte Name für eine Abhängigkeitseigenschaft oder eine angefügte Eigenschaft.</param>
      <param name="ownerType">Der <see cref="T:System.Type" /> des Objekts, das die Eigenschaftendefinition besitzt.</param>
      <param name="targetType">Der <see cref="T:System.Type" /> des Objekts, für das Sie die Eigenschaft festlegen möchten.</param>
      <param name="ignorePropertyType">Gibt an, dass der Eigenschaftentyp ignoriert werden soll.</param>
      <returns>Der angeforderte <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für den untergeordneten <see cref="T:System.ComponentModel.PropertyDescriptor" /> zurück.</summary>
      <param name="property">Der zu überprüfende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>Wenn die von <paramref name="property" /> beschriebene Eigenschaft eine Abhängigkeitseigenschaft ist, wird ein gültiger <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> zurückgegeben. Andernfalls wird ein <see langword="null" />-<see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary>Gibt einen <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für eine bereitgestellte Abhängigkeitseigenschaft und einen Zieltyp zurück.</summary>
      <param name="dependencyProperty">Der Bezeichner für eine Abhängigkeitseigenschaft.</param>
      <param name="targetType">Der Typ des Objekts, in dem die Eigenschaft festgelegt wird.</param>
      <returns>Ein <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> für die bereitgestellte Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>Gibt einen Wert vom Typ <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zurück.</summary>
      <param name="instance">Eine Komponente, für die die Eigenschaften abgerufen werden sollen.</param>
      <param name="filter">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet werden soll.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den Eigenschaften, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary>Ruft einen Editor des angegebenen Typs ab.</summary>
      <param name="editorBaseType">Der Basistyp des Editors, der für die Unterscheidung mehrerer von einer Eigenschaft unterstützten Editoren verwendet wird.</param>
      <returns>Eine Instanz des angeforderten Editor-Typs oder <see langword="null" />, wenn kein Editor gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary>Gibt den aktuellen Wert der Eigenschaft einer Komponente zurück.</summary>
      <param name="component">Die Komponenteninstanz.</param>
      <returns>Der angeforderte Wert.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary>Ruft einen Wert ab, der angibt, ob die Eigenschaft als angefügte Eigenschaft registriert und über eine angehängte Verwendung genutzt wird.</summary>
      <returns>
        <see langword="true" /> , wenn die Eigenschaft eine angefügte Eigenschaft ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary>Ruft einen Wert ab, der den Wert des <see cref="T:System.ComponentModel.BrowsableAttribute" /> der Eigenschaft angibt.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.ComponentModel.BrowsableAttribute" /> für die Eigenschaft angegeben wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary>Ruft einen Wert ab, der angibt, ob diese Eigenschaft gemäß den Angaben in <see cref="T:System.ComponentModel.LocalizableAttribute" /> lokalisiert werden soll.</summary>
      <returns>
        <see langword="true" />, wenn der Member mit dem <see cref="T:System.ComponentModel.LocalizableAttribute" />-Konstruktor mit dem Wert true markiert wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob diese Eigenschaft schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary>Ruft die Metadaten ab, die der Abhängigkeitseigenschaft zugeordnet sind.</summary>
      <returns>Die Metadaten für Abhängigkeitseigenschaften.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary>Ruft den dargestellten <see cref="T:System.Type" /> der Abhängigkeitseigenschaft ab.</summary>
      <returns>Der <see cref="T:System.Type" /> der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>Ermöglicht es, andere Objekte zu benachrichtigen, wenn sich diese Eigenschaft ändert.</summary>
      <param name="component">Die Komponente, für die der Handler hinzugefügt wird.</param>
      <param name="handler">Der Delegat, der als Listener hinzugefügt wird.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary>Setzt den Wert für diese Eigenschaft der Komponente auf den Standardwert zurück.</summary>
      <param name="component">Die Komponente mit dem Eigenschaftswert, der auf den Standardwert zurückgesetzt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>Legt den Wert der Komponente auf einen anderen Wert fest.</summary>
      <param name="component">Die Komponente mit dem Eigenschaftswert, der festgelegt werden soll.</param>
      <param name="value">Der neue Wert.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Gibt an, ob der Wert dieser Eigenschaft von Serialisierungsprozessen beibehalten werden muss.</summary>
      <param name="component">Die Komponente mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Eigenschaft beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary>Gibt an, ob Wertänderungsbenachrichtigungen für diese Eigenschaft von außerhalb des Eigenschaftendeskriptors stammen dürfen (z. B. von der Komponente) oder ob Benachrichtigungen nur aus direkten Aufrufen von <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> hervorgehen.</summary>
      <returns>
        <see langword="true" />, wenn Wertänderungsbenachrichtigungen für diese Eigenschaft von außerhalb des Eigenschaftendeskriptors stammen dürfen (z. B. von der Komponente). <see langword="false" />, wenn Benachrichtigungen nur aus direkten Aufrufen von <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> stammen können.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary>Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Gibt den <see cref="P:System.ComponentModel.MemberDescriptor.Name" />-Wert zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary>Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis behandelt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary>Beginnt die Überwachung des <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary>Beendet die Überwachung des <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignisses für die angegebene Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />-Ereignis auslöst.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>Stellt eine abstrakte Basisklasse für Typen bereit, die beschreiben, wie die Elemente in einer Auflistung in Gruppen unterteilt werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.GroupDescription" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary>Ruft eine benutzerdefinierte Vergleichsfunktion auf, die Gruppen mithilfe eines Objekts sortiert, das <see cref="T:System.Collections.IComparer" /> implementiert, oder legt diese Funktion fest.</summary>
      <returns>Eine benutzerdefinierte Vergleichsfunktion, die Gruppen mithilfe eines Objekts sortiert, das <see cref="T:System.Collections.IComparer" /> implementiert.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Gibt die Gruppennamen für das angegebene Element zurück.</summary>
      <param name="item">Das Element, für das Gruppennamen zurückgegeben werden sollen.</param>
      <param name="level">Die Gruppierebene.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die dem Konverter bereitgestellt werden soll.</param>
      <returns>Die Gruppennamen für das angegebene Element.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>Ruft die Auflistung von Namen ab, die zum Initialisieren einer Gruppe mit einer Reihe von Untergruppen mit den angegebenen Namen verwendet werden.</summary>
      <returns>Die Auflistung der Namen, die zum Initialisieren einer Gruppe mit einer Reihe von Untergruppen mit den angegebenen Namen verwendet werden.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob der Gruppenname und der Elementname übereinstimmen, sodass das Element zur Gruppe gehört.</summary>
      <param name="groupName">Der Name der zu überprüfenden Gruppe.</param>
      <param name="itemName">Der Name des zu überprüfenden Elements.</param>
      <returns>
        <see langword="true" />, wenn die Namen übereinstimmen und das Element zur Gruppe gehört, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />-Ereignis aus.</summary>
      <param name="e">Argumente des ausgelösten Ereignisses.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>Gibt zurück, ob Serialisierungsprozesse den tatsächlichen Wert der <see cref="P:System.ComponentModel.GroupDescription.GroupNames" />-Eigenschaft bei Instanzen dieser Klasse serialisieren sollen.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.ComponentModel.GroupDescription.GroupNames" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary>Gibt zurück, ob Serialisierungsprozesse den tatsächlichen Wert der <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" />-Eigenschaft bei Instanzen dieser Klasse serialisieren sollen.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary>Ruft die Sammlung der Sortierkriterien zum Sortieren der Gruppen ab.</summary>
      <returns>Die Sammlung der Sortierkriterien zum Sortieren der Gruppen.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>Ermöglicht es Auflistungen, Funktionen zur Verwaltung des aktuellen Datensatzes sowie zum benutzerdefinierten Sortieren, Filtern und Gruppieren anzunehmen.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>Ruft einen Wert ab, der angibt, ob diese Ansicht das Filtern mit der <see cref="P:System.ComponentModel.ICollectionView.Filter" />-Eigenschaft unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn diese Ansicht das Filtern unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>Ruft einen Wert ab, der angibt, ob diese Ansicht das Gruppieren mit der <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />-Eigenschaft unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn diese Ansicht das Gruppieren unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>Ruft einen Wert ab, der angibt, ob diese Ansicht das Sortieren mit der <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />-Eigenschaft unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn diese Ansicht das Sortieren unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes Element zu dieser Auflistungsansicht gehört.</summary>
      <param name="item">Das zu überprüfende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Element zu dieser Auflistungsansicht gehört, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>Ruft die Kulturinformationen für beliebige Vorgänge der Ansicht ab, die im kulturellen Sinne variieren können, z. B. die Sortierung, oder legt diese fest.</summary>
      <returns>Die Kultur, die bei der Sortierung verwendet werden soll.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>Lösen Sie beim Implementieren dieser Schnittstelle dieses Ereignis aus, nachdem das aktuelle Element geändert wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>Wenn Sie diese Schnittstelle implementieren, lösen Sie dieses Ereignis aus, bevor das aktuelle Element geändert wird. Der Ereignishandler kann dieses Ereignis abbrechen.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>Ruft das aktuelle Element in der Ansicht ab.</summary>
      <returns>Das aktuelle Element der Ansicht oder <see langword="null" />, wenn kein aktuelles Element vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>Ruft die Ordnungsposition von <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht ab.</summary>
      <returns>Die Ordnungsposition von <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>Wechselt in eine Verzögerungsschleife, mit der Sie Änderungen in der Ansicht zusammenführen und die automatische Aktualisierung verzögern können.</summary>
      <returns>Ein <see cref="T:System.IDisposable" /> -Objekt, das Sie verwenden können, um das aufrufende Objekt zu verwerfen.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>Ruft den Rückruf ab, der verwendet wird, um zu bestimmen, ob ein Element in die Ansicht eingefügt werden kann, oder legt diesen fest.</summary>
      <returns>Eine Methode, über die bestimmt wird, ob ein Element zum Einfügen in die Ansicht geeignet ist.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>Ruft eine Auflistung von <see cref="T:System.ComponentModel.GroupDescription" />-Objekten ab, die das Gruppieren der Elemente in der Auflistung in der Ansicht beschreiben.</summary>
      <returns>Eine Auflistung der <see cref="T:System.ComponentModel.GroupDescription" />-Objekte, die beschreiben, wie die Elemente in der Auflistung in der Ansicht gruppiert werden.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>Ruft die Gruppen der obersten Ebene ab.</summary>
      <returns>Eine schreibgeschützte Auflistung der Gruppen der obersten Ebene oder <see langword="null" />, wenn keine Gruppen vorhanden sind.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>Ruft einen Wert ab, der angibt, ob sich das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> der Ansicht hinter dem Ende der Auflistung befindet.</summary>
      <returns>
        <see langword="true" />, wenn sich das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> der Ansicht hinter dem Ende der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>Ruft einen Wert ab, der angibt, ob sich das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> der Ansicht vor dem Anfang der Auflistung befindet.</summary>
      <returns>
        <see langword="true" />
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> , <see langword="false" /> wenn sich der der Ansicht hinter dem Anfang der Auflistung befindet, andernfalls.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>Gibt einen Wert zurück, der angibt, ob die resultierende Ansicht leer ist.</summary>
      <returns>
        <see langword="true" />, wenn die Ansicht leer ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>Legt das angegebene Element als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht fest.</summary>
      <param name="item">Das Element, das als das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> festgelegt werden soll.</param>
      <returns>
        <see langword="true" />, wenn sich das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>Legt das erste Element in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns>
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>Legt das letzte Element in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns>
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> ein Element innerhalb der Ansicht ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>Legt das Element nach dem <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns>
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Legt das Element am angegebenen Index als das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht fest.</summary>
      <param name="position">Der Index, auf den das <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> festgelegt werden soll.</param>
      <returns>
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>Legt das Element vor <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in der Ansicht als <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> fest.</summary>
      <returns>
        <see langword="true" />, wenn das resultierende <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>Erstellt die Ansicht neu.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>Ruft eine Auflistung der <see cref="T:System.ComponentModel.SortDescription" />-Objekte ab, die die Sortierung der Elemente in der Ansicht beschreiben.</summary>
      <returns>Eine Auflistung der <see cref="T:System.ComponentModel.SortDescription" />-Objekte, die die Sortierung der Elemente in der Ansicht beschreibt.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>Gibt die zugrunde liegende Auflistung zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerable" />-Objekt, das die zugrunde liegende Auflistung ist.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>Eine Schnittstelle, die die Implementierung von Auflistungen ermöglicht, um eine Ansicht der entsprechenden Daten zu erstellen. Normalerweise ruft Benutzercode für diese Schnittstelle keine Methoden auf.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>Erstellt eine neue Ansicht für die Auflistung, die diese Schnittstelle implementiert. I. d. R. ruft Benutzercode diese Methode nicht auf.</summary>
      <returns>Die neu erstellte Ansicht.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary>Definiert Eigenschaften, die die Sortierung, Gruppierung und das Filtern einer <see cref="T:System.Windows.Data.CollectionView" /> in Echtzeit ermöglichen.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistungsansicht das Ein- oder Ausschalten von Filterdaten in Echtzeit unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistungsansicht das Ein- oder Ausschalten der dynamischen Filterung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistungsansicht Aktivieren/Deaktivieren von Gruppieren von Daten in Echtzeit unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistungsansicht das Ein- und Ausschalten von aktiver Gruppierung unterstützt; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistungsansicht Aktivieren/Deaktivieren von Sortieren von Daten in Echtzeit unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistungsansicht das Ein- und Ausschalten von aktiver Sortierung unterstützt; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary>Ruft einen Wert ab, der angibt, ob die Filterung von Daten in Echtzeit aktiviert ist.</summary>
      <returns>
        <see langword="true" />, wenn die Filterung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Filterung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Filterung implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary>Ruft einen Wert ab, der angibt, ob die Gruppierung von Daten in Echtzeit aktiviert ist.</summary>
      <returns>
        <see langword="true" />, wenn die Gruppierung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Gruppierung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Gruppierung implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary>Ruft einen Wert ab, der angibt, ob die Sortierung in Echtzeit aktiviert ist.</summary>
      <returns>
        <see langword="true" />, wenn die Sortierung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Sortierung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Sortierung implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary>Ruft eine Auflistung von Zeichenfolgen an, die die Eigenschaften angeben, die am Filtern von Daten in Echtzeit beteiligt sind.</summary>
      <returns>Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Filtern von Daten in Echtzeit beteiligt sind.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary>Ruft eine Auflistung von Zeichenfolgen ab, die die Eigenschaften angeben, die am Gruppieren von Daten in Echtzeit beteiligt sind.</summary>
      <returns>Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Gruppieren von Daten in Echtzeit beteiligt sind.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary>Ruft eine Auflistung von Zeichenfolgen ab, die die Eigenschaften angeben, die am Sortieren von Daten in Echtzeit beteiligt sind.</summary>
      <returns>Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Sortieren von Daten in Echtzeit beteiligt sind.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>Definiert Methoden und Eigenschaften, die eine <see cref="T:System.Windows.Data.CollectionView" /> implementiert, um Bearbeitungsfunktionen für eine Auflistung bereitzustellen.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>Fügt der Auflistung ein neues Element hinzu.</summary>
      <returns>Das neue Element, das der Auflistung hinzugefügt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>Ruft einen Wert ab, der angibt, ob der Auflistung ein neues Element hinzugefügt werden kann.</summary>
      <returns>
        <see langword="true" />, wenn der Auflistung ein neues Element hinzugefügt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>Beendet die Transaktion zum Bearbeiten und stellt, wenn möglich, den ursprünglichen Wert des Elements wieder her.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>Beendet die Transaktion zum Hinzufügen und verwirft das ausstehende neue Element.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>Ruft einen Wert ab, der angibt, ob ein Element aus der Auflistung entfernt werden kann.</summary>
      <returns>
        <see langword="true" />, wenn ein Element aus der Auflistung entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>Beendet die Transaktion zum Bearbeiten und speichert die ausstehenden Änderungen.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>Beendet die Transaktion zum Hinzufügen und speichert das ausstehende neue Element.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>Ruft das Element ab, das während der aktuellen Hinzufügetransaktion hinzugefügt wird.</summary>
      <returns>Das Element, das hinzugefügt wird, wenn <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /><see langword="true" /> ist, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>Ruft das Element in der Auflistung ab, das gerade bearbeitet wird.</summary>
      <returns>Das Element in der Auflistung, die gerade bearbeitet wird, wenn <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> gleich <see langword="true" /> ist, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>Startet eine Transaktion zum Bearbeiten des angegebenen Elements.</summary>
      <param name="item">Das zu bearbeitende Element.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>Ruft einen Wert ab, der angibt, ob eine Transaktion zum Hinzufügen ausgeführt wird.</summary>
      <returns>
        <see langword="true" />, wenn gegenwärtig eine Transaktion zum Hinzufügen ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>Ruft einen Wert ab, der angibt, ob eine Transaktion zum Bearbeiten ausgeführt wird.</summary>
      <returns>
        <see langword="true" />, wenn eine Transaktion zum Bearbeiten ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>Ruft die Position des neuen Elementplatzhalters in der Auflistungsansicht ab oder legt sie fest.</summary>
      <returns>Einer der Enumerationswerte, der die Position des neuen Elementplatzhalters in der Auflistungsansicht angibt.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
      <param name="item">Das zu entfernende Element.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>Entfernt das Element an der angegebenen Position aus der Auflistung.</summary>
      <param name="index">Die Position des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in der Auflistungsansicht.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary>Definiert Methoden und Eigenschaften, die eine <see cref="T:System.Windows.Data.CollectionView" /> implementiert, um das Angeben von hinzufügenden Elementen eines bestimmten Typs zu ermöglichen.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary>Fügt der Auflistung das angegebene Objekt hinzu.</summary>
      <param name="newItem">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <returns>Das Objekt, das der Auflistung hinzugefügt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary>Ruft einen Wert ab, der angibt, ob der Auflistung ein angegebenes Objekt hinzugefügt werden kann.</summary>
      <returns>
        <see langword="true" />, wenn der Auflistung ein bestimmtes Objekt hinzugefügt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary>Definiert eine Eigenschaft, die Informationen zu den Eigenschaften eines Objekts bereitstellt.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary>Ruft eine Auflistung ab, die Informationen zu den Eigenschaften enthält, die für die Elemente in einer Auflistung verfügbar sind.</summary>
      <returns>Eine Auflistung, die Informationen zu den Eigenschaften enthält, die für die Elemente in einer Auflistung verfügbar sind.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary>Enthält Informationen über eine Eigenschaft.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ItemPropertyInfo" />-Klasse.</summary>
      <param name="name">Den Namen der Eigenschaft.</param>
      <param name="type">Den Typ der Eigenschaft.</param>
      <param name="descriptor">Ein Objekt, das zusätzliche Informationen über die Eigenschaft enthält.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary>Ruft ein Objekt ab, das zusätzliche Informationen über die Eigenschaft enthält.</summary>
      <returns>Ein Objekt, das zusätzliche Informationen über die Eigenschaft enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary>Ruft den Namen der Eigenschaft ab.</summary>
      <returns>Den Namen der Eigenschaft.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary>Ruft den Typ der Eigenschaft ab.</summary>
      <returns>Den Typ der Eigenschaft.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>Gibt an, an welcher Position in der Auflistung sich der Platzhalter für ein neues Element befindet.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary>Der Platzhalter für ein neues Element befindet sich am Anfang der Auflistung.  Neue Elemente befinden sich am Anfang der Auflistung nach dem Platzhalter für neue Elemente.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>Der Platzhalter für ein neues Element befindet sich am Ende der Auflistung. Neue Elemente werden am Ende der Auflistung vor dem Platzhalter für neue Elemente hinzugefügt.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>In der Auflistung wird kein Platzhalter für neue Elemente verwendet. Die Position von hinzugefügten Elementen hängt von der zugrunde liegenden Auflistung ab.  Normalerweise werden sie am Ende der Auflistung hinzugefügt.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary>Stellt eine <see cref="T:System.Windows.WeakEventManager" />-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis anfügen können.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>Fügt den angegebenen Ereignishandler hinzu, der aufgerufen wird, wenn die angegebene Quelle das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis für die angegebene Eigenschaft auslöst.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis behandelt.</param>
      <param name="propertyName">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Mehr als eine Methode wird dem <paramref name="handler" /> zugeordnet.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Fügt den angegebenen Listener der Liste von Listenern in der angegebenen Quelle hinzu.</summary>
      <param name="source">Das Objekt mit dem Ereignis.</param>
      <param name="listener">Das Objekt, das als Listener hinzugefügt werden soll.</param>
      <param name="propertyName">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu dem <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zum <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Entfernt nicht mehr aktive Listener aus den Daten für die bereitgestellte Quelle.</summary>
      <param name="source">Quellobjekt, aus dem alle Listener entfernt werden sollen.</param>
      <param name="data">Die zu bereinigenden Daten. Erwartet wird ein <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll">Legen Sie dies auf <see langword="true" />, um das Überwachen zu beenden und alle Daten vollständig zu entfernen.</param>
      <returns>
        <see langword="true" />, wenn einige Einträge entfernt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</summary>
      <param name="source">Das Quellobjekt, das das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis auslöst.</param>
      <param name="handler">Der Delegat. der das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis behandelt.</param>
      <param name="propertyName">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die nicht mehr auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Mehr als eine Methode wird dem <paramref name="handler" /> zugeordnet.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Entfernt den angegebenen Listener aus der Liste der Listener in der bereitgestellten Quelle.</summary>
      <param name="source">Das Objekt, aus dem der Listener entfernt werden soll.</param>
      <param name="listener">Der zu entfernende Listener.</param>
      <param name="propertyName">Der Name der für <paramref name="source" /> vorhandenen Eigenschaft, die nicht mehr auf Änderungen überwacht werden soll. Legen Sie diese auf <see cref="F:System.String.Empty" /> fest, um eine "beliebige Eigenschaft" anzugeben.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary>Beginnt die Überwachung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses für die bereitgestellte Quelle.</summary>
      <param name="source">Das Objekt, für das die Überwachung von <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> gestartet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary>Beendet die Überwachung des <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignisses für die bereitgestellte Quelle.</summary>
      <param name="source">Das Quellobjekt, für das die Überwachung von <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> beendet werden soll.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary>Gibt an, welche Eigenschaften von Typdeskriptoren (besonders der <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />-Methode) gemeldet werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyFilterAttribute" />-Klasse.</summary>
      <param name="filter">Die Optionen, die diesen Eigenschaftenfilter beschreiben.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das aktuelle <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut mit einem angegebenen Objekt übereinstimmt.</summary>
      <param name="value">Das mit diesem <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> gleich der aktuellen <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary>Ruft die Filteroptionen für dieses <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut ab.</summary>
      <returns>Die Eigenschaftenfilteroptionen.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary>Gibt den Hashcode für das aktuelle <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahlwert mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob die Eigenschaftenfilteroptionen für das aktuelle <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework-Attribut mit den Eigenschaftenfilteroptionen des bereitgestellten Objekts übereinstimmen.</summary>
      <param name="value">Das zu vergleichende Objekt. Bei diesem Objekt wird erwartet, dass es sich um ein <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> handelt.</param>
      <returns>
        <see langword="true" />, wenn eine Übereinstimmung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary>Gibt an, welche Eigenschaften von Typdeskriptoren (besonders der <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />-Methode) gemeldet werden sollen. Diese Enumeration wird verwendet, um den Wert der <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />-Eigenschaft anzugeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary>Alle Eigenschaften zurückgeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary>Nur die Eigenschaften zurückgeben, die im aktuellen Kontext des Objekts ungültig sind.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary>Keine Eigenschaften zurückgeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary>Nur die Eigenschaften zurückgeben, die über aktuell festgelegte lokale Werte verfügen.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary>Nur die Eigenschaften zurückgeben, für die keine lokalen Werte oder keine Eigenschaften in einem externen Ausdrucksspeicher (z. B. Bindung oder zurückgestellte Ressource) festgelegt wurden.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary>Jede Eigenschaft zurückgeben, die für das Objekt im aktuellen Bereich gültig ist</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>Definiert die Richtung und den Eigenschaftennamen, die als Kriterien für das Sortieren einer Auflistung verwendet werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SortDescription" />-Struktur.</summary>
      <param name="propertyName">Der Name der Eigenschaft, nach der die Liste sortiert werden soll.</param>
      <param name="direction">Die Sortierreihenfolge</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="direction" />-Parameter gibt keinen gültigen Wert an.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>Ruft einen Wert ab, der angibt, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgen soll, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.ListSortDirection" />-Wert, der angibt, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgen soll.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>Vergleicht die angegebene Instanz und die aktuelle Instanz von <see cref="T:System.ComponentModel.SortDescription" /> auf Wertgleichheit.</summary>
      <param name="obj">Die zu vergleichende <see cref="T:System.ComponentModel.SortDescription" />-Instanz.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> und diese Instanz von <see cref="T:System.ComponentModel.SortDescription" /> dieselben Werte aufweisen.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz von <see cref="T:System.ComponentModel.SortDescription" /> zurück.</summary>
      <returns>Der Hashcode für diese Instanz von <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>Ruft einen Wert ab, der angibt, ob sich dieses Objekt in einem unveränderlichen Zustand befindet.</summary>
      <returns>
        <see langword="true" />, wenn dieses Objekt derzeit verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Überprüft zwei <see cref="T:System.ComponentModel.SortDescription" />-Objekte auf Wertgleichheit.</summary>
      <param name="sd1">Die erste zu vergleichende Instanz.</param>
      <param name="sd2">Die zweite zu vergleichende Instanz.</param>
      <returns>
        <see langword="true" />, wenn die beiden Objekte gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Überprüft zwei <see cref="T:System.ComponentModel.SortDescription" />-Objekte auf Ungleichheit der Werte.</summary>
      <param name="sd1">Die erste zu vergleichende Instanz.</param>
      <param name="sd2">Die zweite zu vergleichende Instanz.</param>
      <returns>
        <see langword="true" />, wenn die Werte nicht gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>Ruft den Eigenschaftennamen ab, der als Sortierungskriterien verwendet wird, oder legt diesen fest.</summary>
      <returns>Der Standardwert ist NULL.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>Stellt eine Auflistung von<see cref="T:System.ComponentModel.SortDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SortDescriptionCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>Tritt auf, wenn ein Element hinzugefügt oder entfernt wird.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>Ruft eine leere und nicht änderbare Instanz von <see cref="T:System.ComponentModel.SortDescriptionCollection" /> ab.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, in den das <paramref name="item" /> eingefügt wird.</param>
      <param name="item">Das einzufügende Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index in der Auflistung.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Ersetzt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Tritt auf, wenn ein Element hinzugefügt oder entfernt wird.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary>Beschreibt den Grad der Ausführlichkeit für die Ablaufverfolung eines bestimmten Objekts.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary>Zeichnet alle zusätzlichen Informationen auf.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary>Zeichnet einige zusätzlichen Informationen auf.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary>Zeichnet eine mittlere Menge zusätzlicher Informationen auf.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary>Zeichnet keine verfügbaren zusätzlichen Informationen auf.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary>Bietet die Unterstützung der Debugablaufverfolgung, die speziell auf WPF-Anwendungen (Windows Presentation Foundation) ausgerichtet ist.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary>Ruft eine Animations-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Animations-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary>Ruft eine Datenbindungs-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Datenbindungs-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary>Ruft eine Ablaufverfolgungsquelle für die Abhängigkeitseigenschaft ab.</summary>
      <returns>Eine Ablaufverfolgungsquelle für die Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary>Ruft eine Dokument-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Dokument-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary>Ruft eine Freezable-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Freezable-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary>Ruft den Wert der angefügten <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaft für ein angegebenes Element ab.</summary>
      <param name="element">Das Element, aus dem der Eigenschaftswert gelesen wird.</param>
      <returns>Der <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaftswert für das Element.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary>Ruft eine HWND-Hostablaufverfolgungsquelle ab.</summary>
      <returns>Eine HWND-Hostablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary>Ruft eine Markup-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Markup-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary>Ruft eine Namensbereich-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Namensbereich-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary>Aktualisiert Ablaufverfolgungsquellen, indem das erneute Lesen der Datei app.config erzwungen wird.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary>Ruft eine Ressourcenwörterbuch-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Ressourcenwörterbuch-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary>Ruft eine Ablaufverfolgungsquelle für das Routingereignis ab.</summary>
      <returns>Die Ablaufverfolgungsquelle für das Routingereignis.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary>Legt den Wert der angefügten <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaft auf ein angegebenes Element fest.</summary>
      <param name="element">Das Element, in das die angefügte Eigenschaft geschrieben wird.</param>
      <param name="traceLevel">Der erforderliche <see cref="T:System.Diagnostics.PresentationTraceLevel" />-Wert.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary>Ruft eine Shell-Ablaufverfolgungsquelle ab.</summary>
      <returns>Eine Shell-Ablaufverfolgungsquelle.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary>Bezeichnet die angefügte <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />-Eigenschaft.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine Eingabedatei oder ein Datenstream nicht mit einer bestimmten Dateiformatspezifikation übereinstimmt.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse und initialisiert sie mit serialisierten Daten. Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem angegebenen Ausnahmetyp.</summary>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
      <param name="innerException">Der Wert der <see cref="P:System.Exception.InnerException" />-Eigenschaft, der die Ursache der aktuellen Ausnahme darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert und einem Ausnahmetyp.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
      <param name="innerException">Der Wert der <see cref="P:System.Exception.InnerException" />-Eigenschaft, der die Ursache der aktuellen Ausnahme darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert und einer angegebenen Fehlermeldung.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.IO.FileFormatException" />-Klasse mit einem URI-Quellwert, einer angegebenen Fehlermeldung und einem Ausnahmetyp.</summary>
      <param name="sourceUri">Der <see cref="T:System.Uri" />-Wert der Datei, die den Fehler verursacht hat.</param>
      <param name="message">Ein <see cref="T:System.String" />-Wert, der die Fehlermeldung darstellt.</param>
      <param name="innerException">Der Wert der <see cref="P:System.Exception.InnerException" />-Eigenschaft, der die Ursache der aktuellen Ausnahme darstellt.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit dem Dateinamen und zusätzlichen Informationen zur Ausnahme fest.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Ruft den Namen einer Datei ab, die die <see cref="T:System.IO.FileFormatException" /> verursacht hat.</summary>
      <returns>Ein <see cref="T:System.Uri" />, der den Namen der Datei darstellt, die die Ausnahme verursacht hat.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary>Gibt den Speicherort des X.509-Zertifikats an, das zum Signieren verwendet wird.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary>Das Zertifikat ist in sein eigenes <see cref="T:System.IO.Packaging.PackagePart" /> eingebettet.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary>Das Zertifikat ist in dem <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> eingebettet, das für die Signatur erstellt wird, die hinzugefügt wird.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary>Das Zertifikat ist nicht in das Paket eingebettet.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Gibt den Komprimierungsgrad für Inhalt an, der in einem <see cref="T:System.IO.Packaging.PackagePart" /> gespeichert ist.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>Die Komprimierung ist für Größe optimiert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>Die Komprimierung ist für die Größe optimiert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>Die Komprimierung ist für eine Balance zwischen Größe und Leistung optimiert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>Die Komprimierung ist deaktiviert.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>Die Komprimierung ist für hohe Leistung optimiert.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary>Stellt eine OLE-Verbunddatei dar, die ein verschlüsseltes Paket enthält.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary>Schließt das verschlüsselte Paket und die OLE-Verbunddatei, in der es enthalten ist.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Erstellt im angegebenen Stream einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> und gibt diesen zurück.</summary>
      <param name="envelopeStream">Der Stream, in dem die Datei erstellt werden soll.</param>
      <param name="publishLicense">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns>Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeStream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> stellt keinen Lese-/Schreibzugriff bereit.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, gibt diesen zurück und weist ihm den angegebenen Dateinamen zu.</summary>
      <param name="envelopeFileName">Der Name der OLE-Verbunddatei.</param>
      <param name="publishLicense">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns>Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeFileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (im angegeben Stream), der das angegebene unverschlüsseltes Paket als Inhalt verwendet, und gibt ihn zurück.</summary>
      <param name="envelopeStream">Der Stream, in dem die Datei erstellt werden soll.</param>
      <param name="packageStream">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</param>
      <param name="publishLicense">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns>Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeStream" /> oder <paramref name="packageStream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> stellt keinen Lese-/Schreibzugriff bereit.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der das angegebene unverschlüsselte Paket als Inhalt verwendet, und weist ihm den angegebenen Dateinamen zu.</summary>
      <param name="envelopeFileName">Der Name der OLE-Verbunddatei.</param>
      <param name="packageStream">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</param>
      <param name="publishLicense">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</param>
      <param name="cryptoProvider">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</param>
      <returns>Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeFileName" /> oder <paramref name="packageStream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary>Gibt alle vom <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary>Ruft einen Wert ab, der angibt, ob die Datei mit Lesezugriff, Schreibzugriff oder mit Lese- und Schreibzugriff geöffnet wurde.</summary>
      <returns>Der <see cref="T:System.IO.FileAccess" />-Wert, der zum Öffnen der Datei verwendet wurde.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary>Leeren Sie den Stream sowohl für den <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> als auch für seinen Paketinhalt.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary>Ruft das verschlüsselte Paket im <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ab.</summary>
      <returns>Das <see cref="T:System.IO.Packaging.Package" /> im Envelope.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary>Ruft einen Wert ab, der angibt, ob der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</summary>
      <param name="stream">Der Stream, der überprüft wird.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</summary>
      <param name="fileName">Die Datei, die überprüft wird.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary>Öffnet das verschlüsselte Paket im angegebenen Stream.</summary>
      <param name="envelopeStream">Der Stream, der das verschlüsselte Paket enthält.</param>
      <returns>Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary>Öffnet das verschlüsselte Paket in der angegebenen Datei als schreibgeschütztes und nicht freigegebenes Paket.</summary>
      <param name="envelopeFileName">Die Datei, die das verschlüsselte Paket enthält.</param>
      <returns>Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary>Öffnet das verschlüsselte Paket in der angegebenen Datei als nicht freigegebenes Paket mit dem angegebenen Zugriff.</summary>
      <param name="envelopeFileName">Die Datei, die das verschlüsselte Paket enthält.</param>
      <param name="access">Der Zugriffstyp.</param>
      <returns>Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Öffnet das verschlüsselte Paket in der angegebenen Datei und weist ihm den angegebenen Zugriff und die angegebene Freigabeoption zu.</summary>
      <param name="envelopeFileName">Die Datei, die das verschlüsselte Paket enthält.</param>
      <param name="access">Der Zugriffstyp.</param>
      <param name="sharing">Der Typ der Freigabe.</param>
      <returns>Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary>Ruft die Hauptpaketeigenschaften (z. B. Titel und Betreff) des durch Rechteverwaltung geschützten Dokuments ab.</summary>
      <returns>Die <see cref="T:System.IO.Packaging.PackageProperties" /> für das Paket.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary>Ruft die im <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> gespeicherten Rechteverwaltungsinformationen und insbesondere die <see cref="T:System.Security.RightsManagement.PublishLicense" />- und <see cref="T:System.Security.RightsManagement.UseLicense" />-Elemente ab, die in der OLE-Verbunddatei gespeichert werden, die das durch Rechteverwaltung geschützte Paket darstellt.</summary>
      <returns>Die <see cref="T:System.IO.Packaging.RightsManagementInformation" /> für das Paket.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary>Ruft ein Objekt ab, das den Zugriff auf die Verbunddateistreams außerhalb des verschlüsselten Pakets ermöglicht.</summary>
      <returns>Eine <see cref="T:System.IO.Packaging.StorageInfo" />, die die Streams in der OLE-Verbunddatei darstellt, die sich außerhalb des verschlüsselten Pakets befinden.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Gibt die Verschlüsselungsoption für Parts in einem <see cref="T:System.IO.Packaging.Package" /> an.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Keine Verschlüsselung.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Durch Rechteverwaltung unterstützte Verschlüsselung.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> behandelt, das ausgelöst wird, wenn <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> eine ungültige Signatur erkennt.</summary>
      <param name="sender">Die ungültige <see cref="T:System.IO.Packaging.PackageDigitalSignature" />-Quelle des Ereignisses.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Stellt einen Container dar, der mehrere Datenobjekte speichern kann.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.Package" />-Klasse, die einen angegebenen <see cref="T:System.IO.FileAccess" /> verwendet.</summary>
      <param name="openFileAccess">Die Datei-E/A-Berechtigungen für das Paket.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="openFileAccess" /> ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Speichert und schließt das Paket sowie alle zugrunde liegenden Partstreams.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Erstellt ein neues unkomprimiertes Part mit einem angegebenen URI und Inhaltstyp.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) des neuen Segments.</param>
      <param name="contentType">Der Inhaltstyp des Datenstreams.</param>
      <returns>Das neu erstellte Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> oder <paramref name="contentType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
      <exception cref="T:System.InvalidOperationException">Im Paket ist bereits ein Part mit dem angegebenen <paramref name="partUri" /> vorhanden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann kein neues Part hinzugefügt werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Erstellt ein neues Part mit einem angegebenen URI, einem angegebenen Inhaltstyp und einer angegebenen Komprimierungsoption.</summary>
      <param name="partUri">Der URI des neuen Segments.</param>
      <param name="contentType">Der Inhaltstyp des Datenstreams.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> oder <see cref="F:System.IO.Packaging.CompressionOption.Normal" />-Komprimierung.</param>
      <returns>Das neu erstellte Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> oder <paramref name="contentType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI (Uniform Resource Identifier).</exception>
      <exception cref="T:System.InvalidOperationException">Im Paket ist bereits ein Part mit dem angegebenen <paramref name="partUri" /> vorhanden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="compressionOption" />-Wert ist nicht zulässig.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann kein neues Part hinzugefügt werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse ein neues Part im Paket.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) für das Segment, das erstellt wird.</param>
      <param name="contentType">Der Inhaltstyp des Datenstreams.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream.</param>
      <returns>Das erstellte Part.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Erstellt eine Beziehung auf Paketebene zu einem Part mit einem angegebenen URI, einem angegebenen Zielmodus und einem angegebenen Beziehungstyp.</summary>
      <param name="targetUri">Der URI (Uniform Resource Identifier) des Zielsegments.</param>
      <param name="targetMode">Gibt an, ob das Zielpart<see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das Paket ist.</param>
      <param name="relationshipType">Ein URI, der die Rolle der Beziehung eindeutig definiert.</param>
      <returns>Die Beziehung auf Paketebene zu dem angegebenen Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das <paramref name="targetUri" />-Part ist eine <see cref="T:System.IO.Packaging.PackageRelationship" />, oder <paramref name="targetMode" /> ist <see cref="F:System.IO.Packaging.TargetMode.Internal" />, und <paramref name="targetUri" /> ist ein absoluter URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="targetMode" /> ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Erstellt eine Beziehung auf Paketebene zu einem Part mit einem angegebenen URI, einem angegebenen Zielmodus, einem angegebenen Beziehungstyp und einer angegebenen Bezeichner (identifier; ID).</summary>
      <param name="targetUri">Der URI (Uniform Resource Identifier) des Zielsegments.</param>
      <param name="targetMode">Gibt an, ob das Zielpart<see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das Paket ist.</param>
      <param name="relationshipType">Ein URI, der die Rolle der Beziehung eindeutig definiert.</param>
      <param name="id">Ein eindeutiger XML-Bezeichner.</param>
      <returns>Die Beziehung auf Paketebene zu dem angegebenen Part.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das <paramref name="targetUri" />-Part ist eine <see cref="T:System.IO.Packaging.PackageRelationship" />, oder <paramref name="targetMode" /> ist <see cref="F:System.IO.Packaging.TargetMode.Internal" />, und <paramref name="targetUri" /> ist ein absoluter URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="targetMode" /> ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner, oder im Paket ist bereits ein Part mit der angegebenen <paramref name="id" /> vorhanden.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Löscht ein Part mit einem angegebenen URI aus dem Paket.</summary>
      <param name="partUri">Der URI des zu löschenden Segments.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>Löscht beim Überschreiben in einer abgeleiteten Klasse ein Part mit einem angegebenen URI.</summary>
      <param name="partUri">Der <see cref="P:System.IO.Packaging.PackagePart.Uri" /> des zu löschenden <see cref="T:System.IO.Packaging.PackagePart" />.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Löscht eine Beziehung auf Paketebene.</summary>
      <param name="id">Der <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> des zu löschenden <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Leert und speichert den Inhalt von allen Parts und Beziehungen, schließt das Paket und gibt alle Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Ruft die Dateizugriffseinstellung für das Paket ab.</summary>
      <returns>Einer der <see cref="T:System.IO.FileAccess" />-Werte: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> oder <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Speichert die Inhalte von allen Parts und Beziehungen, die im Paket enthalten sind.</summary>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt und kann nicht geändert werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>Speichert beim Überschreiben in einer abgeleiteten Klasse die Inhalte aller Parts und Beziehungen im Speicher der abgeleiteten Klasse.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Gibt das Part mit einem angegebenen URI zurück.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) des zurückzugebenden Segments.</param>
      <returns>Das Part mit dem angegebenen <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI (Uniform Resource Identifier).</exception>
      <exception cref="T:System.InvalidOperationException">Ein Part mit dem angegebenen <paramref name="partUri" /> ist nicht im Paket enthalten.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das von einem angegebenen URI adressierte Part zurück.</summary>
      <param name="partUri">Der URI (Uniform Resource Identifier) des abzurufenden Segments.</param>
      <returns>Das angeforderte Part oder <see langword="null" />, wenn kein Part mit dem angegebenen <paramref name="partUri" /> im Paket vorhanden ist.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Gibt eine Auflistung aller Parts im Paket zurück.</summary>
      <returns>Eine Auflistung aller <see cref="T:System.IO.Packaging.PackagePart" />-Elemente, die im Paket enthalten sind.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array aller Parts im Paket zurück.</summary>
      <returns>Ein Array aller Parts, die im Paket enthalten sind.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Gibt die Beziehung auf Paketebene zu einem angegebenen Bezeichner zurück.</summary>
      <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zurückzugebenden Beziehung.</param>
      <returns>Die Beziehung auf Paketebene mit der angegebenen <paramref name="id" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.InvalidOperationException">Das Paket enthält keine Beziehung mit der angegebenen <paramref name="id" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Gibt eine Auflistung aller Beziehungen auf Paketebene zurück.</summary>
      <returns>Eine Auflistung aller Beziehungen auf Paketebene, die im Paket enthalten werden.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Gibt eine Auflistung aller Beziehungen auf Paketebene zurück, die mit einem angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> übereinstimmen.</summary>
      <param name="relationshipType">Der <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />, der verglichen und in der Auflistung zurückgegeben werden soll.</param>
      <returns>Eine Auflistung der Beziehungen auf Paketebene, die mit dem angegebenen <paramref name="relationshipType" /> übereinstimmen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Öffnet ein Paket in einem angegebenen E/A-Stream.</summary>
      <param name="stream">Der E/A-Stream, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Für das zu öffnende Paket ist eine Lese- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist lesegeschützt. Oder für das zu öffnende Paket ist eine Schreib- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Öffnet ein Paket mit einem angegebenen E/A-Stream und Dateimodus.</summary>
      <param name="stream">Der E/A-Stream, in dem das Paket geöffnet werden soll.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="packageMode" />-Wert ist ungültig.</exception>
      <exception cref="T:System.IO.IOException">Für das zu öffnende Paket ist eine Lese- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist lesegeschützt. Oder für das zu öffnende Paket ist eine Schreib- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Öffnet ein Paket mit einem angegebenen E/A-Stream, einem angegebenen Dateimodus und einer angegebenen Dateizugriffseinstellung.</summary>
      <param name="stream">Der E/A-Stream, in dem das Paket geöffnet werden soll.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <param name="packageAccess">Der Dateizugriff, mit dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" /> oder <paramref name="packageAccess" /> ist ungültig.</exception>
      <exception cref="T:System.IO.IOException">Für das zu öffnende Paket ist eine Lese- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist lesegeschützt. Oder für das zu öffnende Paket ist eine Schreib- oder Lese-/Schreibberechtigung erforderlich, und der angegebene <paramref name="stream" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Öffnet ein Paket mit einem angegebenen Pfad und Dateinamen.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Öffnet mithilfe einer angegebenen Dateimethode ein Paket in einem angegebenen Pfad.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" /> ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Öffnet mit einem angegebenen Dateimodus und einer angegebenen Dateizugriffseinstellung ein Paket in einem angegebenen Pfad.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <param name="packageAccess">Der Dateizugriff, mit dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" /> oder <paramref name="packageAccess" /> ist ungültig.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Öffnet mit einem angegebenen Dateimodus, einer angegebenen Dateizugriffseinstellung und einer angegebenen Dateifreigabeeinstellung ein Paket in einem angegebenen Pfad.</summary>
      <param name="path">Der Pfad und Dateiname des Pakets.</param>
      <param name="packageMode">Der Dateimodus, in dem das Paket geöffnet werden soll.</param>
      <param name="packageAccess">Der Dateizugriff, mit dem das Paket geöffnet werden soll.</param>
      <param name="packageShare">Der Dateifreigabemodus, in dem das Paket geöffnet werden soll.</param>
      <returns>Das geöffnete Paket.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für <paramref name="packageMode" />, <paramref name="packageAccess" /> oder <paramref name="packageShare" /> ist ungültig.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Ruft die Haupteigenschaften des Pakets ab.</summary>
      <returns>Die Haupteigenschaften des Pakets.</returns>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Gibt an, ob ein Part mit einem angegebenen URI im Paket vorhanden ist.</summary>
      <param name="partUri">Der zu überprüfende <see cref="T:System.Uri" /> des Parts.</param>
      <returns>
        <see langword="true" />, wenn ein Part mit dem angegebenen <paramref name="partUri" /> im Paket enthalten ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI (Uniform Resource Identifier).</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Informationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Gibt an, ob eine Beziehung auf Paketebene mit einer angegebenen ID im Paket enthalten ist.</summary>
      <param name="id">Die zu überprüfende <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der Beziehung.</param>
      <returns>
        <see langword="true" />, wenn eine Beziehung auf Paketebene mit der angegebenen <paramref name="id" /> im Paket vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Paket ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die Anwendungsverwendung vorgesehen.  Verwenden Sie stattdessen die typsichere <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />-Methode.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary>Stellt eine digitale Signatur dar, die auf einen Satz von Paketteilen und Beziehungen angewendet wird.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary>Ruft die Option für die X.509-Zertifikateinbettung ab.</summary>
      <returns>Einer der <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />-Werte, der die Option für die digitale Signatur angibt.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary>Gibt eine sortierte Liste der auf ein angegebenes Part angewendeten <see cref="T:System.Security.Cryptography.Xml.Transform" />-Operationen zurück.</summary>
      <param name="partName">Der <see cref="T:System.Uri" /> des <see cref="T:System.IO.Packaging.PackagePart" />, für das die Transformationsliste zurückgegeben werden soll.</param>
      <returns>Eine sortierte Liste von URI-Zeichenfolgen, z. B. <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> oder <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, die die kanonischen XML-Transformationen darstellt, die auf das Part mit dem angegebenen <paramref name="partName" />-URI angewendet wurden.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary>Ruft die digitale XML-Signatur ab oder legt diese fest.</summary>
      <returns>Die digitale XML-Signatur.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary>Ruft das <see cref="T:System.IO.Packaging.PackagePart" /> ab, das die Signatur enthält.</summary>
      <returns>Das Paketpart, das die Signatur enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary>Ruft die URI-Zeichenfolge ab, die den Signaturtyp angibt.</summary>
      <returns>Eine URI-Zeichenfolge, die den Signaturtyp identifiziert. Die Standardeinstellung ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary>Ruft den verschlüsselten Hashwert der <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> ab.</summary>
      <returns>Ein Bytearray, das den verschlüsselten Hashwert der <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary>Ruft eine Auflistung aller mit der Signatur signierten <see cref="T:System.IO.Packaging.PackagePart" />-Objekte ab.</summary>
      <returns>Eine Auflistung, die alle mit der Signatur signierten Paketparts enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary>Ruft die Liste der <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts ab, die mit der Signatur signiert wurden.</summary>
      <returns>Die Liste der <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts, die mit der Signatur signiert wurden.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary>Ruft das X.509-Zertifikat des Signaturgebers ab.</summary>
      <returns>Das digitale Zertifikat des Signaturgebers oder <see langword="null" />, wenn das Zertifikat nicht im <see cref="T:System.IO.Packaging.Package" /> gespeichert ist.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary>Ruft Datum und Uhrzeit der Signaturerstellung ab.</summary>
      <returns>Datum und Uhrzeit der Signaturerstellung.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary>Ruft das Format des Datums und der Uhrzeit ab, die von der <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />-Eigenschaft zurückgegeben werden.</summary>
      <returns>Das Format des Datums und der Uhrzeit, die von der <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />-Eigenschaft zurückgegeben werden.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary>Überprüft die digitale Signatur anhand eines X.509-Zertifikats.</summary>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" />, wenn die Überprüfung erfolgreich durchgeführt wurde, andernfalls einer der <see cref="T:System.IO.Packaging.VerifyResult" />-Werte, die ein Problem kennzeichnen.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Überprüft die digitale Signatur anhand eines angegebenen X.509-Zertifikats.</summary>
      <param name="signingCertificate">Das X.509-Zertifikat des Signaturgebers, mit dem die digitale Signatur überprüft wird.</param>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" />, wenn die Überprüfung erfolgreich durchgeführt wurde, andernfalls einer der <see cref="T:System.IO.Packaging.VerifyResult" />-Werte, die ein Problem kennzeichnen.</returns>
      <exception cref="T:System.InvalidOperationException">Die digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> wurde gelöscht.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary>Stellt eine Dienstprogrammklasse für die Erstellung und Überprüfung von digitalen Signaturen in einem <see cref="T:System.IO.Packaging.Package" /> bereit.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" />-Klasse für die Verwendung mit einem angegebenen <see cref="T:System.IO.Packaging.Package" />.</summary>
      <param name="package">Das diesem Signatur-Manager zugeordnete Paket.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary>Ruft die Option zum Einbetten des X.509-Zertifikats ab oder legt diese fest, die von der <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />-Methode zum digitalen Signieren von Paketteilen verwendet wird.</summary>
      <returns>Einer der <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />-Werte.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary>Signiert alle Signaturen im Paket mit einem vom Benutzer ausgewähltenX.509-Zertifikat gegen.</summary>
      <returns>Die Signatur, die als Gegensignatur hinzugefügt wurde, oder <see langword="null" />, wenn kein Zertifikat gefunden wurde oder der Benutzer das Dialogfeld für die Zertifikatauswahl abgebrochen hat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Signiert alle Signaturen im Paket mit einem angegebenen X.509-Zertifikat gegen.</summary>
      <param name="certificate">Das X.509-Zertifikat, das als Gegensignatur hinzugefügt werden soll.</param>
      <returns>Die Signatur, die als Gegensignatur hinzugefügt wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> ist gleich <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Signiert eine Liste von Signaturen mit einem angegebenen X.509-Zertifikat gegen.</summary>
      <param name="certificate">Das für das Gegensignieren jeder der angegebenen <paramref name="signatures" /> zu verwendende X.509-Zertifikat.</param>
      <param name="signatures">Die Liste der Signaturen, die gegensigniert werden sollen.</param>
      <returns>Die digitale Signatur, die zum Gegensignieren jeder der <paramref name="signatures" /> verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException">Entweder der <paramref name="certificate" />- oder der <paramref name="signatures" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Das Paket enthält keine signierten <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</exception>
      <exception cref="T:System.ArgumentException">Das Paket enthält keine <see cref="T:System.IO.Packaging.PackageDigitalSignature" />-Teile.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary>Ruft eine URI-Zeichenfolge ab, die den zum Erstellen und Überprüfen von Signaturen verwendeten Standardhashalgorithmus ermittelt.</summary>
      <returns>Eine URI-Zeichenfolge, die den zum Erstellen und Überprüfen von Signaturen verwendeten Standard Hash Algorithmus angibt.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary>Gibt die digitale Signatur für einen angegebenen Signatur-URI (Uniform Resource Identifier) zurück.</summary>
      <param name="signatureUri">Der URI der digitalen Signatur, die zurückgegeben werden soll.</param>
      <returns>Die digitale Signatur für den angegebenen <paramref name="signatureUri" />, oder <see langword="null" />, wenn keine Signatur für den angegebenen <paramref name="signatureUri" /> gefunden wird.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary>Ruft den URI-Bezeichner für die zum Erstellen und Überprüfen von Signaturen verwendete <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Instanz ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> URI-Bezeichner für die <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Instanz, mit der Signaturen erstellt und überprüft werden.</returns>
      <exception cref="T:System.ArgumentNullException">Die Zeichenfolge für den festzulegenden URI ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Zeichenfolge für den festzulegenden URI ist leer.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary>Tritt ein, wenn <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> auf eine ungültige Signatur trifft.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary>Ruft einen Wert ab, der angibt, ob das Paket Signaturen enthält.</summary>
      <returns>
        <see langword="true" />, wenn das Paket Signaturen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary>Ruft ein Handle für das übergeordnete Fenster zum Anzeigen eines Zertifikatauswahl-Dialogfelds ab oder legt dieses fest.</summary>
      <returns>Das Handle des übergeordneten Fensters, in dem das Dialogfeld für die Zertifikatauswahl angezeigt werden soll.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary>Entfernt alle digitale Signaturen aus dem Paket.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary>Entfernt die digitale Signatur mit einem angegebenen Signatur-URI (Uniform Resource Identifier).</summary>
      <param name="signatureUri">Der URI der zu entfernenden <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Fordert vom Benutzer ein X.509-Zertifikat an, mit dem dann eine angegebene Liste der Paketteile digital signiert wird.</summary>
      <param name="parts">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Elemente.</param>
      <returns>Die digitale Signatur, mit der die Liste der <paramref name="parts" /> signiert wird.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Signiert eine Liste von Paketteilen mit einem angegebenen X.509-Zertifikat.</summary>
      <param name="parts">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Elemente.</param>
      <param name="certificate">Das für das digitale Signieren jedes der angegebenen <paramref name="parts" /> zu verwendende X.509-Zertifikat.</param>
      <returns>Die zum Signieren der angegebenen Liste von <paramref name="parts" /> verwendete digitale Signatur; oder <see langword="null" />, wenn kein Zertifikat gefunden wurde oder der Benutzer im Zertifikatauswahl-Dialogfeld auf „Abbrechen“ geklickt hat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary>Signiert eine Liste mit Paketteilen und -beziehungen mit einem angegebenen X.509-Zertifikat.</summary>
      <param name="parts">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</param>
      <param name="certificate">Das X.509-Zertifikat, mit dem jedes der angegebenen Teile und jede der angegebenen Beziehungen digital signiert werden soll.</param>
      <param name="relationshipSelectors">Die Liste der zu signierenden <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekte.</param>
      <returns>Die digitale Signatur, mit der die Elemente signiert werden sollen, die in den Listen <paramref name="parts" /> und <paramref name="relationshipSelectors" /> angegeben sind.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="parts" /> noch <paramref name="relationshipSelectors" /> geben zu signierende Objekte an.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary>Signiert eine Liste von Paketteilen und Paketbeziehungen mit einem angegebenen X.509-Zertifikat und Bezeichner (identifier; ID).</summary>
      <param name="parts">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</param>
      <param name="certificate">Das X.509-Zertifikat, mit dem jedes der angegebenen Teile und jede der angegebenen Beziehungen digital signiert werden soll.</param>
      <param name="relationshipSelectors">Die Liste der zu signierenden <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekte.</param>
      <param name="signatureId">Eine ID-Zeichenfolge, die der Signatur zugeordnet werden soll.</param>
      <returns>Die digitale Signatur, mit der die Elemente signiert werden sollen, die in den Listen <paramref name="parts" /> und <paramref name="relationshipSelectors" /> angegeben sind.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="parts" /> noch <paramref name="relationshipSelectors" /> geben zu signierende Elemente an.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary>Signiert eine Liste von Paketteilen, Paketbeziehungen oder benutzerdefinierten Objekten mit einem angegebenen X.509-Zertifikat und einer angegebenen Bezeichner (identifier; ID)-Signatur.</summary>
      <param name="parts">Die Liste der URIs (Uniform Resource Identifier) für die zu signierenden <see cref="T:System.IO.Packaging.PackagePart" />-Objekte.</param>
      <param name="certificate">Das X.509-Zertifikat, mit dem jedes der angegebenen Teile und jede der angegebenen Beziehungen digital signiert werden soll.</param>
      <param name="relationshipSelectors">Die Liste der zu signierenden <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekte.</param>
      <param name="signatureId">Eine ID-Zeichenfolge, die der Signatur zugeordnet werden soll.</param>
      <param name="signatureObjects">Eine Liste mit den zu signierenden benutzerdefinierten Datenobjekten.</param>
      <param name="objectReferences">Eine Liste der Verweise auf benutzerdefinierte Objekte, die signiert werden sollen.</param>
      <returns>Die digitale Signatur, mit der die Elemente signiert werden sollen, die in den Listen <paramref name="parts" /> und <paramref name="relationshipSelectors" /> angegeben sind.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> noch <paramref name="objectReferences" /> geben zu signierende Elemente an.</exception>
      <exception cref="T:System.InvalidOperationException">Ein <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> eines Teils, das signiert wird, verweist auf eine <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />-Eigenschaft, die leer, gleich <see langword="null" /> oder nicht definiert ist.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="signatureId" /> ist nicht gleich <see langword="null" /> und keine gültige XML-Schema-ID (beginnt beispielsweise mit einer Ziffer).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary>Ruft den URI (Uniform Resource Identifier) des Signaturursprungsteils ab.</summary>
      <returns>Der URI des Signatur Ursprungs Teils.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary>Ruft den Typ der Standard-Signaturursprungsbeziehung ab.</summary>
      <returns>Der Typ der Standard-Signaturursprungsbeziehung.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary>Ruft eine Auflistung aller Signaturen im Paket ab.</summary>
      <returns>Eine Auflistung aller <see cref="T:System.IO.Packaging.PackageDigitalSignature" />-Objekte.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary>Ruft das zum Erstellen einer Signatur-<see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> verwendete Datums-/Zeitformat ab oder legt dieses fest.</summary>
      <returns>Das zum Erstellen einer Signatur-<see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> verwendete Datums-/Zeitformat.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary>Ruft ein Wörterbuch ab, das jeden definierten <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> und den zugeordneten XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> Bezeichner enthält.</summary>
      <returns>Ein Wörterbuch, das jede definierte <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> und den zugehörigen XML <see cref="T:System.Security.Cryptography.Xml.Transform" />enthält.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> Bezeichner enthält.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Überprüft ein bestimmtes X.509-Zertifikat.</summary>
      <param name="certificate">Das zu überprüfende X.509-Zertifikat.</param>
      <returns>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (Wert 0), wenn das Zertifikat erfolgreich überprüft wurde, andernfalls eine bitweise Enumeration aus Fehlerflags.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary>Überprüft die Signaturen für alle signierten Teile im Paket.</summary>
      <param name="exitOnFailure">
        <see langword="true" />, wenn beim ersten Fehler beendet werden soll, andernfalls <see langword="false" />, damit alle Signaturen überprüft werden.</param>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (Wert 0), wenn alle Signaturen erfolgreich überprüft wurden, andernfalls eine Enumeration, die den Fehler kennzeichnet.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Stellt eine Basisklasse für Parts bereit, die in einem <see cref="T:System.IO.Packaging.Package" /> gespeichert werden.  Diese Klasse ist abstrakt.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" /> und einem angegebenen Segment-URI.</summary>
      <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
      <param name="partUri">Der URI des Segments relativ zum übergeordneten <see cref="T:System.IO.Packaging.Package" />-Stamm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" />, einem angegebenen Segment-URI und einem angegebenen MIME-Inhaltstyp.</summary>
      <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
      <param name="partUri">Der URI des Segments relativ zum übergeordneten <see cref="T:System.IO.Packaging.Package" />-Stamm.</param>
      <param name="contentType">Der MIME-Inhaltstyp des Partdatenstreams.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" />, einem angegebenen Segment-URI, einem angegebenen MIME-Inhaltstyp und einer angegebenen <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
      <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
      <param name="partUri">Der URI des Segments relativ zum übergeordneten <see cref="T:System.IO.Packaging.Package" />-Stamm.</param>
      <param name="contentType">Der MIME-Inhaltstyp für den Datenstream des Parts.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream des Parts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="compressionOption" />-Wert ist nicht zulässig.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Ruft die Komprimierungsoption des Partinhaltsstreams ab.</summary>
      <returns>Die Komprimierungsoption des Partinhaltsstreams.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Ruft den MIME-Typ des Inhaltsstreams ab.</summary>
      <returns>Der MIME-Typ des Inhaltsdatenstreams für das Part.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).
- oder -
Die von der <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />-Methode der abgeleiteten Klasse zurückgegebene Zeichenfolge ist leer.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
      <param name="targetUri">Der URI des Zielsegments.</param>
      <param name="targetMode">Einer der Enumerationswerte. Beispielsweise <see cref="F:System.IO.Packaging.TargetMode.Internal" />, wenn sich das Zielpart innerhalb des <see cref="T:System.IO.Packaging.Package" /> befindet, oder <see cref="F:System.IO.Packaging.TargetMode.External" />, wenn das Ziel eine Ressource außerhalb des <see cref="T:System.IO.Packaging.Package" /> ist.</param>
      <param name="relationshipType">Die Rolle der Beziehung.</param>
      <returns>Die Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und dem Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder der externen Zielressource.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="targetMode" />-Parameter ist kein gültiger <see cref="T:System.IO.Packaging.TargetMode" />-Enumerationswert.</exception>
      <exception cref="T:System.ArgumentException">Das mit dem <paramref name="targetUri" /> angegebene Part ist eine Beziehung (das Ziel einer Beziehung darf keine andere Beziehung sein).
- oder -
<paramref name="targetMode" /> wird als <see cref="F:System.IO.Packaging.TargetMode.Internal" /> angegeben, <paramref name="targetUri" /> ist jedoch ein absoluter externer URI.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann keine neue Beziehung hinzugefügt werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
      <param name="targetUri">Der URI des Zielsegments.</param>
      <param name="targetMode">Einer der Enumerationswerte. Beispielsweise <see cref="F:System.IO.Packaging.TargetMode.Internal" />, wenn sich das Zielpart innerhalb des <see cref="T:System.IO.Packaging.Package" /> befindet, oder <see cref="F:System.IO.Packaging.TargetMode.External" />, wenn das Ziel eine Ressource außerhalb des <see cref="T:System.IO.Packaging.Package" /> ist.</param>
      <param name="relationshipType">Die Rolle der Beziehung.</param>
      <param name="id">Eine eindeutige ID für die Beziehung.</param>
      <returns>Die Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und dem Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder der externen Zielressource.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="targetMode" />-Parameter ist kein gültiger <see cref="T:System.IO.Packaging.TargetMode" />-Enumerationswert.</exception>
      <exception cref="T:System.ArgumentException">Das mit dem <paramref name="targetUri" /> angegebene Part ist eine Beziehung (das Ziel einer Beziehung darf keine andere Beziehung sein).
- oder -
<paramref name="targetMode" /> wird als <see cref="F:System.IO.Packaging.TargetMode.Internal" /> angegeben, <paramref name="targetUri" /> ist jedoch ein absoluter externer URI.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann keine neue Beziehung hinzugefügt werden).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.
- oder -
Ein Part mit der angegebenen <paramref name="id" /> ist bereits vorhanden.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Löscht eine angegebene <see cref="T:System.IO.Packaging.PackageRelationship" /> auf Partebene.</summary>
      <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zu löschenden Beziehung.</param>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (Beziehungen können nicht gelöscht werden).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den MIME-Typ des Partinhalts zurück.</summary>
      <returns>Der MIME-Typ des Partinhalts.</returns>
      <exception cref="T:System.NotSupportedException">Die abgeleitete Klasse stellt keine für die <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />-Methode erforderliche Überschreibungsimplementierung bereit.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Gibt die Beziehung zurück, für die eine <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> angegeben wurde.</summary>
      <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zurückzugebenden Beziehung.</param>
      <returns>Die Beziehung, die mit der angegebenen <paramref name="id" /> übereinstimmt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).
- oder -
Eine Beziehung mit der angegebenen <paramref name="id" /> ist nicht im Paket vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Gibt eine Auflistung aller Beziehungen zurück, deren Besitzer dieses Part ist.</summary>
      <returns>Eine Auflistung aller Beziehungen, deren Besitzer das Part ist.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Gibt eine Auflistung der Beziehungen zurück, die mit einem angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> übereinstimmen.</summary>
      <param name="relationshipType">Der <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> der Beziehungen, die gesucht und in der Auflistung zurückgegeben werden sollen.</param>
      <returns>Eine Auflistung der Beziehungen, die mit dem angegebenen <paramref name="relationshipType" /> übereinstimmen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Gibt den Inhaltsdatenstream des Parts zurück.</summary>
      <returns>Der Inhaltsdatenstream für das Part.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Gibt den in einem angegebenen E/A-<see cref="T:System.IO.FileMode" /> geöffneten Inhaltsstream zurück.</summary>
      <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
      <returns>Der Inhaltsstream des Parts.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="mode" />-Parameter ist kein gültiger <see cref="T:System.IO.FileMode" />-Enumerationswert.</exception>
      <exception cref="T:System.IO.IOException">Der <paramref name="mode" />-Parameter ist nicht mit dem Paket- und Partstream kompatibel.
- oder -
Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Gibt den mit einem angegebenen <see cref="T:System.IO.FileMode" /> und <see cref="T:System.IO.FileAccess" /> geöffneten Partinhaltsstream zurück.</summary>
      <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
      <param name="access">Die Zugriffsberechtigungen zum Öffnen des Inhaltsstreams.</param>
      <returns>Der Inhaltsstream für das Part.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="mode" />-Parameter ist kein gültiger <see cref="T:System.IO.FileMode" />-Enumerationswert.
- oder -
Der <paramref name="access" />-Parameter ist kein gültiger <see cref="T:System.IO.FileAccess" />-Enumerationswert.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> oder <paramref name="access" /> ist nicht mit dem Paket- und Partstream kompatibel.
- oder -
Der <paramref name="access" />-Parameter wird als <see cref="F:System.IO.FileAccess.Read" /> angegeben, der <paramref name="mode" />-Parameter erfordert jedoch Schreibzugriff.  (Für die <see cref="T:System.IO.FileMode" />-Werte <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> und <see cref="F:System.IO.FileMode.Append" /> ist <see cref="F:System.IO.FileAccess.Write" />-Zugriff oder <see cref="F:System.IO.FileAccess.ReadWrite" />-Zugriff erforderlich.)
- oder -
Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den mit einem angegebenen <see cref="T:System.IO.FileMode" /> und <see cref="T:System.IO.FileAccess" /> geöffneten Partinhaltsstream zurück.</summary>
      <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
      <param name="access">Die Zugriffsberechtigungen zum Öffnen des Inhaltsstreams.</param>
      <returns>Der Inhaltsdatenstream des Parts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Ruft das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts ab.</summary>
      <returns>Das übergeordnete Paket des Parts.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob dieses Part Besitzer einer Beziehung mit einer angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> ist.</summary>
      <param name="id">Die zu überprüfende <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der Beziehung.</param>
      <returns>
        <see langword="true" />, wenn dieses Part Besitzer einer Beziehung mit der angegebenen <paramref name="id" /> ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Ruft den URI des Segments ab.</summary>
      <returns>Der URI des Teils relativ zum Paket Stamm.</returns>
      <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.
- oder -
Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Stellt eine Auflistung von<see cref="T:System.IO.Packaging.PackagePart" />-Objekten dar.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der Parts in der Auflistung zurück.</summary>
      <returns>Ein Enumerator zum Durchlaufen der <see cref="T:System.IO.Packaging.PackagePart" />-Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Stellt die Haupteigenschaften eines <see cref="T:System.IO.Packaging.Package" /> dar.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackageProperties" />-Klasse.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Kategorie des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Die Kategorie des Inhalts im <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der den Status des <see cref="T:System.IO.Packaging.Package" /> darstellt, oder legt diesen fest.</summary>
      <returns>Der Status des <see cref="T:System.IO.Packaging.Package" />-Inhalts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der den Typ des Inhalts im <see cref="T:System.IO.Packaging.Package" /> darstellt, oder legt diesen fest.</summary>
      <returns>Der Typ des Inhalts im <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Datum und Uhrzeit der Erstellung des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Datum und Uhrzeit der ersten Erstellung des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der die Person oder Entität identifiziert, die das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt erstellt hat, oder legt diesen fest.</summary>
      <returns>Die Person oder Entität, die das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt erstellt hat.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Beschreibung des Inhalts im <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Eine Beschreibung des Inhalts im <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Gibt alle von der <see cref="T:System.IO.Packaging.PackageProperties" />-Instanz verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:System.IO.Packaging.PackageProperties" />-Instanz verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt eindeutig identifiziert, oder legt diesen fest.</summary>
      <returns>Ein Wert, der das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt eindeutig identifiziert.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der einen durch Trennzeichen getrennten Satz von Schlüsselwörtern definiert, um das Durchsuchen und Indizieren des <see cref="T:System.IO.Packaging.Package" /> und seines Inhalts zu unterstützen.</summary>
      <returns>Ein durch Trennzeichen getrennter Satz von Schlüsselwörtern, um das Suchen und Indizieren des <see cref="T:System.IO.Packaging.Package" /> und seines Inhalts zu unterstützen.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der die Sprache des <see cref="T:System.IO.Packaging.Package" />-Inhalts angibt, oder legt diesen fest.</summary>
      <returns>Ein Wert, der die Sprache des <see cref="T:System.IO.Packaging.Package" />-Inhalts angibt.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der den letzten Benutzer angibt, der den <see cref="T:System.IO.Packaging.Package" />-Inhalt geändert hat, oder legt diesen Wert fest.</summary>
      <returns>Der letzte Benutzer, der den <see cref="T:System.IO.Packaging.Package" />-Inhalt geändert hat.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Datum und Uhrzeit des letzten Druckens des <see cref="T:System.IO.Packaging.Package" />-Inhalts ab oder legt diese fest.</summary>
      <returns>Datum und Uhrzeit des letzten Druckens des <see cref="T:System.IO.Packaging.Package" />-Inhalts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Datum und Uhrzeit der letzten Änderung des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Datum und Uhrzeit der letzten Änderung des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Revisionsnummer des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Die Revisionsnummer des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Thema des <see cref="T:System.IO.Packaging.Package" />-Inhalts ab oder legt dieses fest.</summary>
      <returns>Das Thema des <see cref="T:System.IO.Packaging.Package" />-Inhalts.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den für das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt angegebenen Namen ab oder legt diesen fest.</summary>
      <returns>Der für das <see cref="T:System.IO.Packaging.Package" /> und seinen Inhalt angegebene Name.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Versionsnummer des <see cref="T:System.IO.Packaging.Package" /> ab oder legt diese fest.</summary>
      <returns>Die Versionsnummer des <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Stellt eine Zuordnung zwischen einem Quell-<see cref="T:System.IO.Packaging.Package" /> oder Quell-<see cref="T:System.IO.Packaging.PackagePart" /> und einem Zielobjekt dar, bei dem es sich um ein <see cref="T:System.IO.Packaging.PackagePart" /> oder um eine externe Ressource handeln kann.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Ruft eine Zeichenfolge ab, die die Beziehung angibt.</summary>
      <returns>Eine Zeichenfolge, die die Beziehung angibt.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Ruft das <see cref="T:System.IO.Packaging.Package" /> ab, das die Beziehung enthält.</summary>
      <returns>Das Paket, das die Beziehung enthält.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Ruft den gekennzeichneten Typnamen der Beziehung ab.</summary>
      <returns>Der gekennzeichnete Typname der Beziehung.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Ruft den URI des Pakets oder Segments ab, das der Besitzer der Beziehung ist.</summary>
      <returns>Der URI des <see cref="T:System.IO.Packaging.Package" /> oder <see cref="T:System.IO.Packaging.PackagePart" />, der die Beziehung besitzt.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Ruft einen Wert ab, der angibt, ob das Ziel der Beziehung <see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das <see cref="T:System.IO.Packaging.Package" /> ist.</summary>
      <returns>Ein Enumerationswert, der angibt, ob <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> auf eine Ressource verweist, die <see cref="F:System.IO.Packaging.TargetMode.Internal" /> oder <see cref="F:System.IO.Packaging.TargetMode.External" /> für das <see cref="T:System.IO.Packaging.Package" /> ist.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Ruft den URI der Zielressource der Beziehung ab.</summary>
      <returns>Der URI der Ziel Ressource.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.IO.Packaging.PackageRelationship" />-Elementen dar, deren Besitzer ein angegebenes <see cref="T:System.IO.Packaging.PackagePart" /> oder das <see cref="T:System.IO.Packaging.Package" /> ist.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der Beziehungen in der Auflistung zurück.</summary>
      <returns>Ein Enumerator zum Durchlaufen der <see cref="T:System.IO.Packaging.PackageRelationship" />-Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Dieser Typ oder dieser Member unterstützt die Windows Presentation Foundation-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Verwenden Sie nicht – oder <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Definiert <see cref="T:System.IO.Packaging.PackageRelationship" />-Kriterien für die Auswahl von Beziehungen auf Partebene oder Paketebene.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />-Klasse.</summary>
      <param name="sourceUri">Der URI (Uniform Resource Identifier) des <see cref="T:System.IO.Packaging.PackagePart" /> oder <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/"), der Besitzer der Beziehung ist.</param>
      <param name="selectorType">Der Typ der <paramref name="selectionCriteria" />, entweder nach Beziehungs-<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> oder nach Beziehungs-<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.</param>
      <param name="selectionCriteria">Der Qualifizierungspfad, der verwendet wird, um die Beziehungen anhand des <paramref name="selectorType" /> auszuwählen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> oder <paramref name="selectionCriteria" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="selectorType" />-Parameter ist ungültig.</exception>
      <exception cref="T:System.Xml.XmlException">Der <paramref name="selectorType" />-Parameter ist <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />, jedoch ist <paramref name="selectionCriteria" /> keine gültige XML-Schemadefinition (XSD) Bezeichner (identifier; ID).</exception>
      <exception cref="T:System.ArgumentException">Die <paramref name="selectionCriteria" /> sind für den angegebenen <paramref name="selectorType" /> nicht gültig.
- oder -
Der <paramref name="sourceUri" /> ist nicht der <see cref="T:System.IO.Packaging.Package" />-Stamm ("/") und kein gültiger <see cref="T:System.IO.Packaging.PackagePart" />-URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Gibt eine Liste von <see cref="T:System.IO.Packaging.PackageRelationship" />-Objekten zurück, die mit dem definierten <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, dem definierten <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> und den definierten <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> übereinstimmen.</summary>
      <param name="package">Das Paket, aus dem die Beziehungen anhand der Auswahlkriterien ausgewählt werden sollen.</param>
      <returns>Eine Liste von Beziehungen, die mit den für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor angegebenen Auswahlparametern übereinstimmen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Ruft die für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor angegebenen Auswahlkriterien ab.</summary>
      <returns>Die Auswahlkriterien auf der Grundlage des für den <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" />-Konstruktor angegebenen <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> (<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> oder <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />).</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Ruft den für den <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" />-Konstruktor angegebenen <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> ab.</summary>
      <returns>Der für den <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />-Konstruktor angegebene Auswahltyp <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> oder <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Ruft den Stammpaket-URI ("/") oder Part-<see cref="P:System.IO.Packaging.PackagePart.Uri" /> ab, der für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor als Besitzer der Beziehung angegeben wurde.</summary>
      <returns>Der Stammpaket-URI ("/") oder Part-<see cref="P:System.IO.Packaging.PackagePart.Uri" />, der für den <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />-Konstruktor als Besitzer der Beziehung angegeben wurde.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Gibt den Typ der Auswahlkriterien an, die zum Vergleichen und Zurückgeben einer <see cref="T:System.IO.Packaging.PackageRelationship" />-Auswahl über einen <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> verwendet werden.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Die <see cref="T:System.IO.Packaging.PackageRelationship" />-Auswahl erfolgt nach <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>Die <see cref="T:System.IO.Packaging.PackageRelationship" />-Auswahl erfolgt nach <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Stellt Hilfsmethoden zum Erstellen und Analysieren von Paket-URI-Objekten bereit.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei Paket-URIs gleichwertig sind.</summary>
      <param name="firstPackUri">Der erste Paket-URI.</param>
      <param name="secondPackUri">Der zweite Paket-URI.</param>
      <returns>Eine ganze Zahl mit Vorzeichen, die die Beziehung zwischen <paramref name="firstPackUri" /> und <paramref name="secondPackUri" /> angibt.
  Wert 
  Bedeutung 
  Kleiner als 0 
 <paramref name="firstPackUri" /> ist kleiner als <paramref name="secondPackUri" />.  
  
  0 
 <paramref name="firstPackUri" /> entspricht <paramref name="secondPackUri" />.  
  
  Größer als 0 
 <paramref name="firstPackUri" /> ist größer als <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> oder <paramref name="secondPackUri" /> ist kein absoluter URI.
- oder -
Entweder <paramref name="firstPackUri" /> oder <paramref name="secondPackUri" /> beginnt nicht mit einem „pack://“-Schema.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei Paketteil-URIs äquivalent sind.</summary>
      <param name="firstPartUri">Der URI des ersten <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">Der URI des zweiten <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Ein Wert, der die Beziehung zwischen <paramref name="firstPartUri" /> und <paramref name="secondPartUri" /> angibt.
  Wert 
  Bedeutung 
  Kleiner als 0 
 <paramref name="firstPartUri" /> ist kleiner als <paramref name="secondPartUri" />.  
  
  0 
 <paramref name="firstPartUri" /> entspricht <paramref name="secondPartUri" />.  
  
  Größer als 0 
 <paramref name="firstPartUri" /> ist größer als <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> oder <paramref name="secondPartUri" /> ist keine gültige Syntax eines Teil-URIs.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Erstellt einen neuen Paket-URI, der auf ein Paket verweist.</summary>
      <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />, auf das verwiesen wird.</param>
      <returns>Der Paket-URI für das <see cref="T:System.IO.Packaging.Package" />, auf das durch den angegebenen <paramref name="packageUri" /> verwiesen wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="packageUri" /> ist kein absoluter URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Erstellt anhand eines <see cref="T:System.IO.Packaging.Package" />-URIs und des URIs eines Paketteils einen Paket-URI.</summary>
      <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
      <returns>Der Paket-URI des angegebenen <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> ist kein absoluter URI.
- oder -
<paramref name="partUri" /> ist keine gültige Syntax eines Teil-URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Erstellt anhand eines <see cref="T:System.IO.Packaging.Package" />-URIs, des URIs eines Paketteils und eines anzuhängenden „#“-Fragments einen Paket-URI.</summary>
      <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
      <param name="fragment">Ein "#"-Verweis, der ein Element innerhalb des Paketteils identifiziert.</param>
      <returns>Der Paket-URI, der das angegebene Paket, Paketteil und Fragment angibt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> ist kein absoluter URI.
- oder -
<paramref name="partUri" /> ist keine gültige Syntax für einen Teil-URI.
- oder -
<paramref name="fragment" /> ist leer oder beginnt mit "#".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Erstellt einen formatierten <see cref="T:System.IO.Packaging.PackagePart" />-URI.</summary>
      <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
      <returns>Ein formatierter <see cref="T:System.IO.Packaging.PackagePart" />-URI.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist kein absoluter <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Gibt die normalisierte Form eines angegebenen <see cref="T:System.IO.Packaging.PackagePart" />-URI zurück.</summary>
      <param name="partUri">Der zu normalisierende <see cref="T:System.IO.Packaging.PackagePart" />-URI.</param>
      <returns>Die normalisierte Form des angegebenen <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> besitzt keine gültige <see cref="T:System.Uri" />-Syntax.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Gibt den inneren URI zurück, der auf das gesamte Paket eines angegebenen Paket-URIs verweist.</summary>
      <param name="packUri">Der Paket-URI, von dem der <see cref="T:System.IO.Packaging.Package" />-URI zurückgegeben werden soll.</param>
      <returns>Der <see cref="T:System.IO.Packaging.Package" />-URI vom angegebenen <paramref name="packUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> ist kein absoluter <see cref="T:System.Uri" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Gibt den URI eines <see cref="T:System.IO.Packaging.PackagePart" /> in einem angegebenen Paket-URI zurück.</summary>
      <param name="packUri">Der Paket-URI, aus dem der <see cref="T:System.IO.Packaging.PackagePart" />-URI zurückgegeben werden soll.</param>
      <returns>Der URI von <see cref="T:System.IO.Packaging.PackagePart" /> im angegebenen <paramref name="packUri" />, oder <see langword="null" />, wenn <paramref name="packUri" /> nicht auf einen <see cref="T:System.IO.Packaging.PackagePart" />, sondern auf ein Paket verweist.</returns>
      <exception cref="T:System.ArgumentNullException">Wenn auf <paramref name="packUri" /> auf <see langword="null" /> festgelegt ist.</exception>
      <exception cref="T:System.ArgumentException">Wenn der <paramref name="packUri" /> kein absoluter <see cref="T:System.Uri" /> ist.
- oder -
<paramref name="packUri" /> weist nicht das Schema „pack://“ auf.
- oder -
Der aus <paramref name="packUri" /> extrahierte partUri entspricht nicht der gültigen partUri-Syntax.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Gibt den URI des Beziehungsteils zurück, das einem angegebenen <see cref="T:System.IO.Packaging.PackagePart" /> zugeordnet ist.</summary>
      <param name="partUri">Der <see cref="P:System.IO.Packaging.PackagePart.Uri" /> des <see cref="T:System.IO.Packaging.PackagePart" />, um den URI für die zugeordnete <see cref="T:System.IO.Packaging.PackageRelationship" /> zurückzugeben.</param>
      <returns>Der URI des <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts, das dem durch <paramref name="partUri" /> angegebenen <see cref="T:System.IO.Packaging.PackagePart" />, zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die <paramref name="partUri" />-Syntax ist für einen Paketpart-URI nicht gültig.
- oder -
<paramref name="partUri" /> ist ein absoluter URI.
- oder -
<paramref name="partUri" /> verweist auf ein Beziehungspart.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Gibt den relativen URI zwischen zwei angegebenen <see cref="T:System.IO.Packaging.PackagePart" />-URIs zurück.</summary>
      <param name="sourcePartUri">Der URI des Quellparts.</param>
      <param name="targetPartUri">Der URI des Zielparts.</param>
      <returns>Die relative URI von <paramref name="sourcePartUri" /> bis <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> oder <paramref name="targetPartUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Entweder der <paramref name="sourcePartUri" /> oder der <paramref name="targetPartUri" /> besitzt keine gültige <see cref="T:System.Uri" />-Syntax.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Gibt den <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> aus der <see cref="T:System.IO.Packaging.PackageRelationship" /> mit einem angegebenen URI zurück.</summary>
      <param name="relationshipPartUri">Der URI des Beziehungsparts, aus dem der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> zurückgegeben werden soll.</param>
      <returns>Der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> des <see cref="T:System.IO.Packaging.PackagePart" /> aus der Beziehung mit dem angegebenen <paramref name="relationshipPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> ist ein absoluter URI.
- oder -
Die <paramref name="relationshipPartUri" />-Syntax ist für ein <see cref="T:System.IO.Packaging.PackagePart" /> nicht gültig.
- oder -
<paramref name="relationshipPartUri" /> verweist auf kein Beziehungspart.
- oder -
Der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> der Beziehung verweist auf ein anderes Beziehungsteil (ungültig).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener URI der URI eines <see cref="T:System.IO.Packaging.PackageRelationship" />-Teils ist.</summary>
      <param name="partUri">Der URI, der auf ein <see cref="T:System.IO.Packaging.PackageRelationship" />-Part überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="partUri" /> ein <see cref="T:System.IO.Packaging.PackageRelationship" />-Part angibt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> ist ein absoluter URI.
- oder -
<paramref name="partUri" /> weist eine ungültige <see cref="T:System.IO.Packaging.PackagePart" />-Syntax auf.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Gibt einen Part-URI zurück, wenn ein Quellpart-URI und ein URI mit einem relativen Pfad zu einem Zielpart angegeben wurden.</summary>
      <param name="sourcePartUri">Der URI des Quellparts, oder "/", um den <see cref="T:System.IO.Packaging.Package" />-Stamm zu kennzeichnen.</param>
      <param name="targetUri">Der relative URI zum Zielpart.</param>
      <returns>Der URI des Zielparts, der zwischen dem angegebenen <paramref name="SourcePartUri" />-Parameter und dem angegebenen <paramref name="targetUri" />-Parameter aufgelöst wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> oder <paramref name="targetUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> ist kein gültiger Part-URI.
- oder -
<paramref name="targetUri" /> ist kein gültiger relativer URI.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Definiert den URI-Packschemanamen „pack“.</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary>Stellt DRM-Informationen (Digital Rights Management) dar, die in einem <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> gespeichert sind.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary>Ruft den <see cref="T:System.Security.RightsManagement.CryptoProvider" /> für den Zugriff auf den verschlüsselten Datenstream zur Rechteverwaltung des Pakets ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Security.RightsManagement.CryptoProvider" /> für den Zugriff auf Rechteverwaltungsinformationen.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Löscht die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen angegebenen Benutzer aus dem verschlüsselten Datenstream für die Rechteverwaltung.</summary>
      <param name="userKey">Der Benutzer der zu löschenden <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary>Gibt eine Wörterbuchauflistung von Benutzer- und <see cref="T:System.Security.RightsManagement.UseLicense" />-Schlüssel-Wert-Paaren aus dem verschlüsselten Datenstream für die Rechteverwaltung zurück.</summary>
      <returns>Eine Auflistung von Benutzer- und <see cref="T:System.Security.RightsManagement.UseLicense" />-Schlüssel-Wert-Paaren im durch Rechteverwaltung geschützten Paket.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary>Gibt die eingebettete <see cref="T:System.Security.RightsManagement.PublishLicense" /> aus dem verschlüsselten Datenstream für die Rechteverwaltung zurück.</summary>
      <returns>Die eingebettete <see cref="T:System.Security.RightsManagement.PublishLicense" /> oder <see langword="null" />, wenn das Paket keine <see cref="T:System.Security.RightsManagement.PublishLicense" /> enthält.</returns>
      <exception cref="T:System.IO.FileFormatException">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Gibt aus dem verschlüsselten Datenstream für die Rechteverwaltung eine eingebettete <see cref="T:System.Security.RightsManagement.UseLicense" /> eines angegebenen Benutzers zurück.</summary>
      <param name="userKey">Der Benutzer oder die Benutzergruppe, für den bzw. die die <see cref="T:System.Security.RightsManagement.UseLicense" /> zurückgegeben werden soll.</param>
      <returns>Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für den angegebenen Benutzer oder <see langword="null" />, wenn das Paket keine <see cref="T:System.Security.RightsManagement.UseLicense" /> enthält, die mit dem angegebenen <paramref name="userKey" /> übereinstimmt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="userKey" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary>Speichert eine angegebene <see cref="T:System.Security.RightsManagement.PublishLicense" /> im verschlüsselten Datenstream für die Rechteverwaltung.</summary>
      <param name="publishLicense">Die Veröffentlichungslizenz, die im Paket gespeichert und eingebettet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="publishLicense" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary>Speichert eine angegebene <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen angegebenen Benutzer im verschlüsselten Datenstream für die Rechteverwaltung.</summary>
      <param name="userKey">Der Benutzer der <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense">Die Nutzungslizenz, die im Paket gespeichert und eingebettet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Entweder der <paramref name="userKey" />- oder der <paramref name="useLicense" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">Die Rechteverwaltungsinformationen in diesem Paket können von der aktuellen Version dieser Klasse nicht gelesen werden.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary>Gibt die für den <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" /> bereitgestellten Ereignisargumente an.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary>Ruft die digitale Signatur ab, die überprüft wird.</summary>
      <returns>Die digitale Signatur, die überprüft wird.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary>Ruft den Signaturüberprüfungsfehler ab.</summary>
      <returns>Der Signaturüberprüfungsfehler.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary>Stellt Zugriff und Informationen zum Bearbeiten von Datenspeichern in einem <see cref="T:System.IO.Packaging.Package" /> bereit.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary>Erstellt einen neuen Stream mit einem angegebenen Namen.</summary>
      <param name="name">Der Name für den neuen Stream.</param>
      <returns>Der neue Stream mit dem angegebenen <paramref name="name" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary>Erstellt einen neuen Stream mit einem angegebenen Namen, einer angegebenen <see cref="T:System.IO.Packaging.CompressionOption" /> und einer angegebenen <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name">Der Name für den neuen Stream.</param>
      <param name="compressionOption">Die Komprimierungsoption für den Datenstream.</param>
      <param name="encryptionOption">Die Verschlüsselungsoption für den Datenstream.</param>
      <returns>Der neue Stream mit dem angegebenen <paramref name="name" />, der angegebenen <paramref name="compressionOption" /> und der angegebenen <paramref name="encryptionOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary>Erstellt eine neue untergeordnete <see cref="T:System.IO.Packaging.StorageInfo" /> mit dieser <see cref="T:System.IO.Packaging.StorageInfo" /> als übergeordnetes Element.</summary>
      <param name="name">Der Name für den neuen untergeordneten Datenspeicher.</param>
      <returns>Der neue untergeordnete Datenspeicher.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary>Löscht den Stream mit einem angegebenen Namen.</summary>
      <param name="name">Der <see cref="T:System.IO.Packaging.StreamInfo" />-Name des zu löschenden Streams.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary>Löscht einen angegebenen Unterspeicher.</summary>
      <param name="name">Der Name des zu löschenden Unterspeichers.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary>Gibt die <see cref="T:System.IO.Packaging.StreamInfo" />-Instanz mit dem angegebenen Namen zurück.</summary>
      <param name="name">Der Name der <see cref="T:System.IO.Packaging.StreamInfo" />-Instanz, die zurückgegeben werden soll.</param>
      <returns>Der Stream mit dem angegebenen <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary>Gibt ein Array der <see cref="T:System.IO.Packaging.StreamInfo" />-Instanzen zurück, die gegenwärtig in diesem Speicher enthalten sind.</summary>
      <returns>Ein Array der <see cref="T:System.IO.Packaging.StreamInfo" />-Objekte, von denen jedes auf einen in diesem Speicher definierten E/A-Stream zeigt.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary>Gibt den untergeordneten Unterspeicher mit einem angegebenen Namen zurück.</summary>
      <param name="name">Der Name des zurückzugebenden Unterspeichers.</param>
      <returns>Der untergeordnete Unterspeicher mit dem angegebenen <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary>Gibt ein Array der untergeordneten Unterspeicher zurück, die derzeit in diesem Speicher enthalten sind.</summary>
      <returns>Ein Array von <see cref="T:System.IO.Packaging.StorageInfo" />-Objekten, von denen jedes auf einen in diesem Speicher definierten Unterspeicher zeigt.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary>Ruft den Namen des Speichers ab.</summary>
      <returns>Der Name des Speichers.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener Stream vorhanden ist.</summary>
      <param name="name">Der <see cref="T:System.IO.Packaging.StreamInfo" />-Name, der gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn ein Stream mit dem angegebenen <paramref name="name" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary>Gibt einen Wert zurück, der anzeigt, ob ein angegebener untergeordneter Unterspeicher vorhanden ist.</summary>
      <param name="name">Der Name der untergeordneten <see cref="T:System.IO.Packaging.StorageInfo" />, der gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn ein untergeordneter Unterspeicher mit dem angegebenen <paramref name="name" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary>Stellt Zugriff und Informationen zum Bearbeiten von E/A-Streams in einem <see cref="T:System.IO.Packaging.Package" /> bereit.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary>Ruft die <see cref="T:System.IO.Packaging.CompressionOption" />-Einstellung für den Stream ab.</summary>
      <returns>Die Einstellung der Komprimierungsoption für den Paketstream.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary>Ruft die <see cref="T:System.IO.Packaging.EncryptionOption" />-Einstellung für den Stream ab.</summary>
      <returns>Die Einstellung der Verschlüsselungsoption für den Paketstream.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary>Gibt einen Stream zurück, der in einem Standard-<see cref="T:System.IO.FileMode" /> und mit Standard-<see cref="T:System.IO.FileAccess" /> geöffnet wurde.</summary>
      <returns>Der E/A-Stream, der in einem Standard-<see cref="T:System.IO.Packaging.Package" />-Stamm und Standard-<see cref="T:System.IO.FileMode" /> sowie mit Standard-<see cref="T:System.IO.FileAccess" /> geöffnet wurde.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary>Gibt einen in einem angegebenen <see cref="T:System.IO.FileMode" /> geöffneten E/A-Stream zurück.</summary>
      <param name="mode">Der Dateimodus, in dem der Stream geöffnet werden soll.</param>
      <returns>Der Stream wurde im angegebenen Datei-<paramref name="mode" /> geöffnet.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Gibt einen E/A-Stream zurück, der in einem angegebenen <see cref="T:System.IO.FileMode" /> und mit einem angegebenen <see cref="T:System.IO.FileAccess" /> geöffnet wurde.</summary>
      <param name="mode">Der Dateimodus, in dem der Stream geöffnet werden soll.</param>
      <param name="access">Der Dateizugriffsmodus, in dem der Stream gelesen oder geschrieben werden soll.</param>
      <returns>Der E/A-Stream, der im angegebenen <see cref="T:System.IO.FileMode" /> und mit einem angegebenen <see cref="T:System.IO.FileAccess" /> geöffnet wurde.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary>Ruft den Namen des Streams ab.</summary>
      <returns>Der Name des Streams.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Gibt an, ob das Ziel einer <see cref="T:System.IO.Packaging.PackageRelationship" /> innerhalb oder außerhalb des <see cref="T:System.IO.Packaging.Package" /> liegt.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>Die Beziehung verweist auf eine Ressource, die sich außerhalb des Pakets befindet.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>Die Beziehung verweist auf ein Part, das sich innerhalb des Pakets befindet.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary>Gibt das Ergebnis einer Zertifikat- oder Signaturüberprüfung an.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary>Das X.509-Zertifikat ist nicht zum Überprüfen der Signatur verfügbar.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary>Das X.509-Zertifikat ist ungültig.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary>Die Signatur ist ungültig.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary>Der angegebene Paket oder Teil hat keine Signatur.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary>Es wurde keine Verweisbeziehung zu der Signatur gefunden.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary>Die Überprüfung war erfolgreich.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Implementiert eine abgeleitete Unterklasse der abstrakten <see cref="T:System.IO.Packaging.Package" />-Basisklasse. Die <see cref="T:System.IO.Packaging.ZipPackage" />-Klasse verwendet ein ZIP-Archiv als Containerspeicher. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Stellt ein Part dar, das in einem <see cref="T:System.IO.Packaging.ZipPackage" /> gespeichert ist.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> beschreibt verschiedene Sicherheitsberechtigungen, die die Funktionsfähigkeit von Audio-, Bild- und Videomedien in einer teilweise vertrauenswürdigen Windows Presentation Foundation-Anwendung steuern.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Audioberechtigungsebene.</summary>
      <param name="permissionAudio">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Bildberechtigungsebenen für Audio, Video und Bilder.</summary>
      <param name="permissionAudio">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Bildberechtigungsebene.</summary>
      <param name="permissionImage">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe der Videoberechtigungsebene.</summary>
      <param name="permissionVideo">Ein Enumerationswert von <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.MediaPermission" />-Klasse unter Angabe eines Berechtigungszustands.</summary>
      <param name="state">Ein Enumerationswert von <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Ruft den aktuellen Wert der Audioberechtigungsebene ab.</summary>
      <returns>Die Audioberechtigungsebene.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen Berechtigung und gibt sie zurück.</summary>
      <returns>Eine Kopie der aktuellen Berechtigung.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Stellt eine Berechtigung mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="securityElement">Die XML-Codierung zur Wiederherstellung der Berechtigung.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Ruft den aktuellen Wert der Bildberechtigungsebene ab.</summary>
      <returns>Die Bildberechtigungsebene.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</summary>
      <param name="target">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den von beiden Berechtigungen gemeinsam beschriebenen Zustand wiedergibt. Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, ist für die Schnittmengenberechtigung gültig.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Bestimmt, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</summary>
      <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>
        <see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Berechtigung uneingeschränkt ist.</summary>
      <returns>
        <see langword="true" />, wenn alle Audio-, Bild- und Videoberechtigungen uneingeschränkt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Erstellt eine XML-Codierung der Berechtigung und ihres aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung der Berechtigung, einschließlich aller Zustandsinformationen.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Kombination der aktuellen und der angegebenen Berechtigung.</summary>
      <param name="target">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Ruft den aktuellen Wert der Videoberechtigungsebene ab.</summary>
      <returns>Die Medienberechtigungsebene.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Ermöglicht, dass Sicherheitsaktionen für <see cref="T:System.Security.Permissions.MediaPermission" /> unter Verwendung deklarativer Sicherheit auf Code angewendet werden.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Ruft die Audioberechtigungsstufe für das <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> ab oder legt diese Stufe fest.</summary>
      <returns>Der Status des <see cref="T:System.Security.Permissions.MediaPermissionAudio" />-Objekts.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Erstellt eine neue <see cref="T:System.Security.Permissions.MediaPermission" /> und gibt diese zurück.</summary>
      <returns>Eine <see cref="T:System.Security.Permissions.MediaPermission" />, die diesem Attribut entspricht.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Ruft die Bildberechtigungsstufe für das <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> ab oder legt diese Stufe fest.</summary>
      <returns>Der Status des <see cref="T:System.Security.Permissions.MediaPermissionImage" />-Objekts.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Ruft die Videoberechtigungsstufe für das <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> ab oder legt diese Stufe fest.</summary>
      <returns>Der Status des <see cref="T:System.Security.Permissions.MediaPermissionVideo" />-Objekts.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Gibt die Berechtigungsstufe für Audio an.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Berechtigung, die eine uneingeschränkte Audiowiedergabe gestattet.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Berechtigung, die jegliche Audiowiedergabe verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Berechtigung, die eine sichere, eingeschränkte Audiowiedergabe gestattet. Streamzugriffe auf die Audiodatei werden in diesem Fall verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Berechtigung, die nur die Audiowiedergabe von Dateien gestattet, die zur Ursprungssite der Anwendung gehören.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Gibt die Berechtigungsstufe für Bilder an.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Berechtigung, die die uneingeschränkte Anzeige von Bildern gestattet.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Berechtigung, die die Anzeige aller Bilder verhindert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Berechtigung, die eine sichere, eingeschränkte Anzeige von Bildern gestattet. Streamzugriffe auf die Bilddatei werden in diesem Fall verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Berechtigung, die nur die Anzeige von Bildern gestattet, die zur Ursprungssite der Anwendung gehören.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Gibt die Berechtigungsstufe für Video an.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Berechtigung, die eine uneingeschränkte Videowiedergabe gestattet.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Berechtigung, die jegliche Videowiedergabe verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Berechtigung, die eine sichere, eingeschränkte Videowiedergabe gestattet. Streamzugriffe auf die Videodatei werden in diesem Fall verweigert.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Berechtigung, die nur die Videowiedergabe von Dateien gestattet, die zur Ursprungssite der Anwendung gehören.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>Mit dem <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Objekt wird gesteuert, ob das WebBrowser-Steuerelement erstellt werden kann.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse unter Angabe eines Berechtigungszustands.</summary>
      <param name="state">Ein Enumerationswert von <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse unter Angabe der Webbrowser-Berechtigungsebene.</summary>
      <param name="webBrowserPermissionLevel">Ein Enumerationswert von <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen Berechtigung und gibt sie zurück.</summary>
      <returns>Eine Kopie der aktuellen Berechtigung.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Stellt eine Berechtigung mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="securityElement">Die XML-Codierung zur Wiederherstellung der Berechtigung.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</summary>
      <param name="target">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den von beiden Berechtigungen gemeinsam beschriebenen Zustand wiedergibt. Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, ist für die Schnittmengenberechtigung gültig.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Bestimmt, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</summary>
      <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>
        <see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Berechtigung uneingeschränkt ist.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" />-Eigenschaft auf <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" /> festgelegt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Ruft den aktuellen Wert der Webbrowser-Berechtigungsebene ab oder legt diesen fest.</summary>
      <returns>Der aktuelle Wert der Webbrowser-Berechtigungsebene.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Erstellt eine XML-Codierung der Berechtigung und ihres aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung der Berechtigung, einschließlich aller Zustandsinformationen.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Kombination der aktuellen und der angegebenen Berechtigung.</summary>
      <param name="target">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Ermöglicht, dass Sicherheitsaktionen für <see cref="T:System.Security.Permissions.WebBrowserPermission" /> unter Verwendung deklarativer Sicherheit auf Code angewendet werden.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />-Klasse mit der angegebenen <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Erstellt und gibt eine neue Instanz der <see cref="T:System.Security.Permissions.WebBrowserPermission" />-Klasse zurück.</summary>
      <returns>Eine <see cref="T:System.Security.Permissions.WebBrowserPermission" />, die der Sicherheitsdeklaration entspricht.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Ruft die aktuelle Webbrowser-Berechtigungsebene für das <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> ab oder legt sie fest.</summary>
      <returns>Der Zustand der aktuellen Webbrowser-Berechtigungsebene.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Gibt die Berechtigungsstufe für einen Webbrowser an.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Ein Webbrowser, in dessen Frames kein HTML aufgerufen werden kann.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Ein Webbrowser, in dessen Frames HTML nur mit mehreren Einschränkungen aufgerufen werden kann.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Ein Webbrowser, der ohne Einschränkungen Inhalte aufrufen kann.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary>Gibt die Methode der Rights Management-Authentifizierung an.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary>Implizite Authentifizierung für jeden anfordernden Benutzer.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary>Windows Live ID-Authentifizierung.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary>Windows-Authentifizierung in einer Domänenumgebung eines Unternehmens.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary>Entweder Windows-Authentifizierung oder Windows Live ID-Authentifizierung.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary>Stellt ein Recht dar, das einem Benutzer für den Zugriff auf ein Rights Management unterliegendes Dokument gewährt wird.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentGrant" />-Klasse, die einem angegebenen <see cref="T:System.Security.RightsManagement.ContentUser" /> ein angegebenes <see cref="T:System.Security.RightsManagement.ContentRight" /> gewährt.</summary>
      <param name="user">Der Benutzer, dem das Zugriffsrecht gewährt wird.</param>
      <param name="right">Das Zugriffsrecht, das gewährt wird.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentGrant" />-Klasse, die einem angegebenen <see cref="T:System.Security.RightsManagement.ContentUser" /> ein angegebenes <see cref="T:System.Security.RightsManagement.ContentRight" /> für eine angegebene <see cref="T:System.DateTime" />-Dauer gewährt.</summary>
      <param name="user">Der Benutzer, dem das Zugriffsrecht gewährt wird.</param>
      <param name="right">Das Zugriffsrecht, das gewährt wird.</param>
      <param name="validFrom">Das Anfangsdatum und die Anfangsuhrzeit für das Recht.</param>
      <param name="validUntil">Das Enddatum und die Enduhrzeit für das Recht.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary>Ruft das <see cref="T:System.Security.RightsManagement.ContentRight" /> ab, das gewährt wird.</summary>
      <returns>Das Zugriffsrecht, das dem <see cref="P:System.Security.RightsManagement.ContentGrant.User" /> wie für den <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />-Konstruktor angegeben gewährt wird.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary>Ruft den Benutzer ab, dem der Zugriff auf <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> gewährt wird.</summary>
      <returns>Der Benutzer, dem das <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> für den Zugriff wie für den <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />-Konstruktor angegeben gewährt wurde.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary>Ruft das Anfangsdatum und die Anfangsuhrzeit für das gewährte <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> ab.</summary>
      <returns>Das Startdatum und die Uhrzeit, zu <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> denen der gewährte <see cref="T:System.DateTime" />beginnt, oder.<see cref="F:System.DateTime.MinValue" /> Wenn keine Start Einschränkung vorhanden ist.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary>Ruft das Enddatum und die Enduhrzeit für das gewährte <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> ab.</summary>
      <returns>Das Enddatum und die Uhrzeit, zu <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> denen der erteilte <see cref="T:System.DateTime" />abgelaufen ist, oder.<see cref="F:System.DateTime.MaxValue" /> , wenn keine Endbeschränkung vorliegt.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary>Gibt die Rechte an, die Benutzern für den Zugriff auf Inhalte in einem Dokument mit Rechteverwaltung erteilt werden können.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary>Der Benutzer kann das Dokument bearbeiten, das die geschützten Inhalte enthält.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary>Der Benutzer kann die geschützten Inhalte bearbeiten und verschlüsseln.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary>Der Benutzer kann die geschützten Inhalte exportieren.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary>Der Benutzer kann die geschützten Inhalte extrahieren (durch Kopieren und Einfügen).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary>Der Benutzer kann die geschützten Inhalte an einen anderen Benutzer weiterleiten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary>Der Benutzer kann den programmgesteuerten Zugriff auf die geschützten Inhalte steuern.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary>Der Benutzer ist der Besitzer der Inhalte.  Der Besitzer kann die geschützten Inhalte bearbeiten und verschlüsseln und die signierte <see cref="T:System.Security.RightsManagement.PublishLicense" /> entschlüsseln.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary>Der Benutzer kann die geschützten Inhalte drucken.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary>Der Benutzer kann dem Absender der geschützten Inhalte antworten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary>Der Benutzer kann allen Empfängern der geschützten Inhalte antworten („Allen antworten“).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary>Der Benutzer kann die geschützten Inhalte digital signieren.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary>Der Benutzer kann die geschützten Inhalte sehen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary>Der Benutzer kann die in der signierten <see cref="T:System.Security.RightsManagement.PublishLicense" /> festgelegten Rechte entschlüsseln und anzeigen.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary>Stellt einen Benutzer oder eine Benutzergruppe dar, dem bzw. der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Klasse.</summary>
      <param name="name">Der Benutzer- oder Gruppenname.</param>
      <param name="authenticationType">Für Methode für die Authentifizierung.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary>Ruft eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Anyone" ab.</summary>
      <returns>Eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Anyone".</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary>Ruft den für den <see cref="T:System.Security.RightsManagement.AuthenticationType" />-Konstruktor angegebenen <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> ab.</summary>
      <returns>Der <see cref="T:System.Security.RightsManagement.AuthenticationType" />, der an den <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Security.RightsManagement.ContentUser" /> zu einer anderen Instanz äquivalent ist.</summary>
      <param name="obj">Die Benutzerinstanz, die auf Gleichheit überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> bei diesem und bei dem anderen Benutzer gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary>Gibt einen Hashcode zurück, der basierend auf <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> des Benutzers berechnet wird.</summary>
      <returns>Ein Hashcode, der aus <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> des Benutzers berechnet wird.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary>Gibt einen Wert zurück, der angibt, ob der Benutzer derzeit authentifiziert ist.</summary>
      <returns>
        <see langword="true" />, wenn der Benutzer derzeit authentifiziert ist, andernfalls <see langword="false" />.  Bis zur Authentifizierung ist der Standardwert <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary>Ruft den Benutzer- oder Gruppennamen ab, der an den <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />-Konstruktor übergeben wurde.</summary>
      <returns>Der Benutzer- oder Gruppenname, der an den <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary>Ruft eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Owner" ab.</summary>
      <returns>Eine Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Persona "Owner".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary>Stellt DRM-Dienste (Digital Rights Management) zum Verschlüsseln und Entschlüsseln von geschütztem Inhalt bereit.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary>Ruft die Verschlüsselungsblockgröße in Bytes ab.</summary>
      <returns>Die Verschlüsselungsblockgröße in Bytes.  Die Standard Blockgröße für Advanced Encryption Standard (AES) ist 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary>Ruft eine Auflistung von Rechten ab, die erfolgreich überprüft und dem Benutzer gewährt wurden.</summary>
      <returns>Eine Auflistung der Rechte, die erfolgreich überprüft und dem Benutzer gewährt wurden.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary>Ruft einen Wert ab, der angibt, ob der Benutzer über Entschlüsselungsrechte verfügt.</summary>
      <returns>
        <see langword="true" />
        <see cref="T:System.Security.RightsManagement.UseLicense" /> , <see langword="false" /> wenn der Benutzerrechte zum Entschlüsseln gewährt, andernfalls.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary>Ruft einen Wert ab, der angibt, ob der Benutzer über Verschlüsselungsrechte verfügt.</summary>
      <returns>
        <see langword="true" />
        <see cref="T:System.Security.RightsManagement.UseLicense" /> , <see langword="false" /> wenn der Benutzerrechte zum Verschlüsseln erteilt, andernfalls.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> und <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> Puffer mit unterschiedlichen Blockgrößen akzeptieren.</summary>
      <returns>
        <see langword="true" />
        <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> , wenn der an übergebenen Puffer eine andere Länge als der an <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />übergebenen Puffer aufweisen kann <see langword="false" /> . andernfalls, wenn die <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> an <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> und übergebenen Puffer genau dieselbe Länge aufweisen müssen.  Für AES lautet <see langword="true" />der Standardwert.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary>Entschlüsselt verschlüsselten Text.</summary>
      <param name="cryptoText">Der verschlüsselte Text, der entschlüsselt werden soll.</param>
      <returns>Der entschlüsselte Klartext von <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cipherText" /> ist NULL.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Es wurden keine Entschlüsselungsrechte gewährt.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary>Gibt alle vom <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary>Verschlüsselt Klartext in Verschlüsselungstext.</summary>
      <param name="clearText">Der zu verschlüsselnde Klartextinhalt.</param>
      <returns>Der verschlüsselte Verschlüsselungstext des angegebenen <paramref name="clearText" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clearText" /> ist NULL.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Verschlüsselung ist nicht zulässig.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary>Gibt Ressourcen frei und führt eine interne Bereinigung durch, bevor die Instanz durch die Garbage Collection wieder freigegeben wird.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary>Stellt ein unveränderliches (schreibgeschütztes) Zeichenfolgenpaar aus „Name“ und „Beschreibung“ dar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />-Klasse.</summary>
      <param name="name">Der Wert der Gebietsschema-<see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft.</param>
      <param name="description">Der Wert der Gebietsschema-<see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter oder der <paramref name="description" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary>Ruft die Gebietsschemabeschreibung ab.</summary>
      <returns>Die Gebietsschemabeschreibung.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary>Gibt an ob die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft eines gegebenen Objekts mit denen dieses <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> übereinstimmen.</summary>
      <param name="obj">Das Objekt, dessen <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft verglichen werden.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und die <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft des gegebenen Objekts mit denen dieser Instanz übereinstimmen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary>Ruft einen berechneten Hashcode auf Grundlage der <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft ab.</summary>
      <returns>Ein berechneter Hashcode, der auf der <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" />-Eigenschaft und <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />-Eigenschaft dieses <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> basiert.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary>Ruft den Gebietsschemanamen ab.</summary>
      <returns>Der Name des Gebietsschemas.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary>Stellt eine durch Rights Management geschützte signierte Lizenz für Veröffentlichungen dar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.PublishLicense" />-Klasse von der serialisierten und signierten <see cref="T:System.Security.RightsManagement.PublishLicense" />, die angegeben wurde.</summary>
      <param name="signedPublishLicense">Eine signierte und serialisierte Lizenz für Veröffentlichungen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signedPublishLicense" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Die Lizenz ist ungültig.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Versucht, in einer angegebenen <see cref="T:System.Security.RightsManagement.UseLicense" /> eine <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> für einen Benutzer oder eine Benutzergruppe abzurufen.</summary>
      <param name="secureEnvironment">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
      <returns>Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen Benutzer oder eine Benutzergruppe in der angegebenen <paramref name="secureEnvironment" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Fehler bei der Authentifizierung.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Versucht, in einer angegebenen <see cref="T:System.Security.RightsManagement.UseLicense" /> eine <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> für einen Benutzer oder eine Benutzergruppe abzurufen.</summary>
      <param name="secureEnvironment">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
      <returns>Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen Benutzer oder eine Benutzergruppe in der angegebenen <paramref name="secureEnvironment" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Fehler bei der Authentifizierung.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary>Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab.</summary>
      <returns>Der vom Herausgeber erstellte Inhaltsbezeichner.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary>Gibt eine entschlüsselte <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Version dieser signierten <see cref="T:System.Security.RightsManagement.PublishLicense" /> zurück.</summary>
      <param name="cryptoProvider">Der durch die Rechteverwaltung geschützte Dienst, mit dem die Lizenz entschlüsselt wird.</param>
      <returns>Eine entschlüsselte unsignierte Version dieser Lizenz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cryptoProvider" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary>Ruft den Kontaktnamen für den Autor oder den Herausgeber des Inhalts ab.</summary>
      <returns>Der Kontaktname für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary>Ruft den Kontakt-URI für den Autor oder den Herausgeber des Inhalts ab.</summary>
      <returns>Der Kontakt-URI (Uniform Resource Identifier) für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary>Gibt die serialisierte XrML-Zeichenfolge zurück, mit der diese Lizenz erstellt wurde.</summary>
      <returns>Die serialisierte Extensible Rights Markup Language (XrML)-Zeichenfolge, mit der diese Lizenz erstellt wurde.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary>Ruft den URI ab, der zum Abrufen einer <see cref="T:System.Security.RightsManagement.UseLicense" /> verwendet werden soll.</summary>
      <returns>Der URI, der zum Abrufen einer <see cref="T:System.Security.RightsManagement.UseLicense" />verwendet werden soll.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary>Stellt einen Fehlerzustand dar, wenn eine Rechteverwaltungsoperation nicht erfolgreich abgeschlossen werden kann.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse und gibt im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Speicher Informationen zur Ausnahme an.</summary>
      <param name="info">Das Objekt, das die serialisierten Daten enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einem angegebenen <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.</summary>
      <param name="failureCode">Der Fehlercode des Fehlers.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einer angegebenen <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> und <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode">Der Fehlercode des Fehlers.</param>
      <param name="innerException">Die Ausnahmeinstanz, die diesen Fehler verursacht hat.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einer angegebenen <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> und <see cref="P:System.Exception.Message" />.</summary>
      <param name="failureCode">Der Fehlercode des Fehlers.</param>
      <param name="message">Eine Meldung mit einer Beschreibung des Fehlers.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> und <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode">Der Fehlercode des Fehlers.</param>
      <param name="message">Eine Meldung mit einer Beschreibung des Fehlers.</param>
      <param name="innerException">Die Ausnahmeinstanz, die diesen Fehler verursacht hat.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Eine Meldung mit einer Beschreibung des Fehlers.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.RightsManagementException" />-Klasse mit einer angegebenen <see cref="P:System.Exception.Message" /> und <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="message">Eine Meldung mit einer Beschreibung des Fehlers.</param>
      <param name="innerException">Die Ausnahmeinstanz, die diese Ausnahme verursacht hat.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary>Ruft den <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> für den Fehler ab.</summary>
      <returns>Der Fehlercode des Fehlers.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Speicher den Parameternamen sowie Informationen zur Ausnahme fest.</summary>
      <param name="info">Das Objekt, das die serialisierten Daten enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="info" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary>Gibt Fehlerzustände an, die auftreten können, wenn ein Rechteverwaltungsvorgang ausgeführt wird.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary>Asynchroner Vorgang wurde abgebrochen, oder ein nicht behebbarer Fehler ist aufgetreten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary>Fehler bei Lizenzaktivierung; Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary>Der aktuelle Benutzer wurde im Active Directory (AD) für die Zertifizierung im Rahmen der Windows-Authentifizierung nicht gefunden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary>Der angeforderte Vorgang wird bereits ausgeführt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary>Möglicher Authentifizierungsfehler (HTTP-Fehler 401) wurde durch eine Internetanforderung zurückgegeben. Es ist auch möglich, dass der aktuelle Benutzer in einem automatischen Benutzeraktivierungsversuch nicht über gültige Domänenanmeldeinformationen verfügt. Außerdem besteht die Möglichkeit, dass der Zertifizierungsserver sich bei der automatischen Benutzeraktivierung nicht in der lokalen Intranetzone oder der Zone der vertrauenswürdigen Sites befindet.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary>Eine ungültige Konstante wurde übergeben.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary>Die Zugriffsbedingung stimmt nicht mit dem aktivierenden Prinzipal überein, der der Bindung übergeben wird.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary>Der aktuelle Benutzer erfüllt nicht die in der Endbenutzerlizenz (End Use License, EUL) definierten Bedingungen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary>Die angegebene Ressource ist in keinem WORK-Knoten der Lizenz enthalten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary>Der aktivierende Prinzipal entspricht nicht der Endbenutzerlizenz (EUL).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary>Der definierte Zeitraum für den geschützten Inhalt ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary>Der aktuelle Computer ist nicht in der Gruppenidentität definiert, deren Rechte verwaltet werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary>Die angegebene Berechtigungsgruppe ist nicht in der Endbenutzerlizenz (EUL) enthalten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary>Die Lizenz erfordert, dass eine neue Sperrliste erworben werden muss.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary>Die Endbenutzerlizenz (EUL) enthält keinen WORK-Knoten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary>Der definierte Zeitraum für den geschützten Inhalt ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary>Die Rechteverwaltungs-Zertifikatskette ist unterbrochen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary>Zurücksetzen der Uhr wurde erkannt. Zugriff auf geschützten Inhalte ist nicht möglich.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary>Ein kryptografischer Vorgang, der angefordert wurde, wird nicht unterstützt. Beispiel: Übergeben eines RMS-Verschlüsselungsobjekts für die Entschlüsselung.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary>Inhalt mit eingeschränkten Berechtigungen kann nicht geöffnet oder veröffentlicht werden, da ein Debugger erkannt wurde.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary>Die E-Mail-Adresse des Benutzers kann nicht überprüft werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary>Der angegebene Prinzipal kann nicht aktiviert werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary>Verschlüsselung ist nicht zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary>Die <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> kann nicht geladen werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary>Die <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> kann nicht geladen werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary>Der in der Veröffentlichungslizenzvorlage definierte autorisierte Zeitraum ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary>Die angegebene Option wurde bereits festgelegt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary>Für die Clientsitzung wurde kein Benutzername angegeben.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary>Die in einem Computeraktivierungsversuch verwendete Hardware-ID (HID) ist falsch formatiert. Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary>Die in einem Computeraktivierungsversuch verwendete Hardware-ID (HID) ist ungültig. Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary>Die Inhalts-ID aus der Lizenz entspricht nicht der Inhalts-ID der Lizenzspeichersitzung.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary>Ein übergebener Objekttyp ist mit diesem Vorgang nicht kompatibel.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary>Beim Erstellen einer gebundenen Lizenz wurde eine Veröffentlichungslizenz angegeben, keine Endbenutzerlizenz.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary>Einige Informationen fehlen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary>Bei einem Installationsvorgang ist ein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary>Der angegebene Algorithmustyp ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary>Fehler bei der Überprüfung der E-Mail-Adresse des RMS-Servers.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary>Der angegebene Codierungstyp ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary>Entweder ist die Umgebung oder das aktivierende Prinzipalhandle ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary>Die Rechteverwaltungsserver-Vorlage enthält mindestens einen Fehler.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary>Die in einem Schlüssel-Wert-Paar angegebene Schlüssellänge ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary>Die Lizenzstruktur in einem der Zertifikate ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary>Signiertes digitales Rechteverwaltungszertifikat kann nicht überprüft werden. (Das signierte Zertifikat wurde möglicherweise manipuliert.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary>Der angegebene numerische Wert ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary>Der angegebene Registrierungspfad ist ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary>Die angegebenen Zeitinformationen sind ungültig.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary>Die Rechteverwaltungsversion ist falsch.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary>In einem Schlüssel-Wert-Paar wird der angegebene Schlüsseltyp nicht unterstützt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary>Bei diesem Bibliotheksvorgang ist ein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary>Das angegebene Bibliothek-Plug-In wird nicht unterstützt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary>Vom Rechteverwaltungsserver konnte keine Endbenutzerlizenz (EUL) abgerufen werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary>Die Anmeldeinformationen des aktuellen Benutzers gelten nicht für den Erwerb einer Lizenz.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary>Ein Vorgang verstößt gegen die Rechteverwaltungsmanifest-Richtlinie.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary>Die angegebenen Metadaten konnten nicht festgelegt werden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary>Der Benutzer ist nicht aktiviert, oder es wurde kein Rechtekontozertifikat (Rights Account Certificate, RAC) übermittelt, und im Lizenzspeicher wurde keines gefunden, dass der Lizenz entspricht, die dieser Sitzung zugeordnet ist.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary>Der Computer muss aktiviert werden, bevor der Benutzer aktiviert werden kann.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary>Die Rechteverwaltung kann keine Verbindung mit dem für den Lizenzserver angegebenen URI herstellen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary>Der geschützte Inhalt ist beschädigt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary>Eine erforderliche Lizenz ist nicht verfügbar.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary>Am angegebenen Index ist keine Lizenz bzw. kein Zertifikat vorhanden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary>Der Inhalt der Rechteverwaltung ist beschädigt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary>Das Element, dessen Löschung angefordert wurde, ist nicht vorhanden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary>Das maximale Kontingent von Endbenutzerlizenzen (EULs) des Lizenzservers wurde erreicht.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary>Das Dokument enthält keine Besitzerlizenz.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary>Es sind keine Instanzen des angeforderten Attributs vorhanden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary>Die angegebene Lizenz wurde nicht gefunden.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary>Der Rechteverwaltungsserver lässt keine temporäre Zertifizierung des aktuellen Benutzers zu.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary>Zertifikat- oder Lizenzsperrinformationen wurden nicht festgelegt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary>Der aktuelle Benutzer verfügt nicht über die Berechtigungen zum Zugriff auf den geschützten Inhalt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary>Das angeforderte Recht wurde beim Veröffentlichen des Inhalts mit der Rechteverwaltung nicht angegeben.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary>Rechteverwaltungsdienste sind nicht ordnungsgemäß konfiguriert.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary>Vorgang wurde erfolgreich abgeschlossen.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary>Die Anzahl der Zertifikate hat die maximale zulässige Anzahl überschritten.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary>Zu viele <see cref="T:System.Security.RightsManagement.SecureEnvironment" />-Instanzen wurden erstellt.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary>Es ist ein unbekannter Fehler aufgetreten.  Wird auch ausgelöst, wenn eine Anwendung im Debugmodus ausgeführt wird.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary>Wenn eine Anforderung für die Computeraktivierung oder ein Rechtekontozertifikat erfolgt, gibt das empfangende <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" />-Element an, dass die Anwendung <see langword="null" /> an den ActServInfo-Parameter übergeben soll.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary>Der definierte Zeitraum für den geschützten Inhalt ist abgelaufen. Zugriff ist nicht mehr zulässig.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary>Stellt eine sichere Clientsitzung für die Benutzeraktivierung, Lizenzbindung und andere Rights Management-Vorgänge dar.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary>Ruft das <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> ab, das beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> angegeben wurde.</summary>
      <returns>Das Anwendungsmanifest, das an die <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" />-Methode beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> übergeben wurde.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary>Erstellt eine sichere Clientsitzung unter Angabe von Anwendungsrechtemanifest, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> und <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest">Das Anwendungsrechtemanifest.</param>
      <param name="authentication">Die Authentifizierungsmethode.</param>
      <param name="userActivationMode">Der Typ des Benutzer-Rechtekontozertifikats.</param>
      <returns>Eine sichere Clientsitzung für die Aktivierung, Lizenzbindung und andere Rechteverwaltungsvorgänge.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary>Erstellt eine sichere Clientsitzung für einen angegebenen Benutzer mit einem angegebenen Rechtemanifest.</summary>
      <param name="applicationManifest">Das Anwendungsrechtemanifest.</param>
      <param name="user">Der Benutzer oder die Benutzergruppe, dem oder der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</param>
      <returns>Eine sichere Clientsitzung für die Aktivierung, Lizenzbindung und andere Rechteverwaltungsvorgänge.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary>Gibt alle vom <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary>Gibt eine Liste der aktivierten Benutzer zurück.</summary>
      <returns>Eine Liste der aktivierten Benutzer.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary>Gibt an, ob einem bestimmten Benutzer Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wurde.</summary>
      <param name="user">Der Benutzer oder die Benutzergruppe, dem oder der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</param>
      <returns>
        <see langword="true" />, wenn dem angegebenen <paramref name="user" /> Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary>Entfernt die Lizenzaktivierung für einen angegebenen Benutzer.</summary>
      <param name="user">Der Benutzer, für den die Lizenzaktivierung entfernt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="user" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene <paramref name="user" /> wurde weder über die Windows-Authentifizierung noch über die Passport-Authentifizierung authentifiziert.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary>Ruft den Benutzer oder die Benutzergruppe ab, die beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> angegeben wurde.</summary>
      <returns>Der Benutzer oder die Benutzergruppe, die an die <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />-Methode beim Erstellen von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> übergeben wurde.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary>Stellt eine <see cref="T:System.Security.RightsManagement.PublishLicense" />-Vorlage ohne Vorzeichen mit Rechteverwaltung oder eine <see cref="T:System.Security.RightsManagement.PublishLicense" />-Vorlage ohne Vorzeichen dar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Klasse aus einer angegebenen XrML-Vorlage für Veröffentlichungslizenzen.</summary>
      <param name="publishLicenseTemplate">Die Extensible Rights Markup Language (XrML)-Vorlage für Veröffentlichungslizenzen, die verwendet werden soll, um diese Lizenz zu erstellen.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary>Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab, oder legt diesen fest.</summary>
      <returns>Der vom Herausgeber erstellte Inhaltsbezeichner mit Rechteverwaltung.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary>Ruft eine Auflistung zugewiesener Benutzerrechte ab.</summary>
      <returns>Eine Auflistung zugewiesener Benutzerrechte, die in dieser Lizenz bereitgestellt werden.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary>Ruft eine paarweise Auflistung von Namen und Beschreibungen ab.</summary>
      <returns>Eine paarweise Auflistung von Namen und Beschreibungen.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary>Ruft den Besitzer des Inhalts ab oder legt diesen fest.</summary>
      <returns>Der Benutzer, der den veröffentlichten Inhalt besitzt.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary>Ruft den Kontaktnamen für den Autor oder den Herausgeber des Inhalts ab oder legt diesen fest.</summary>
      <returns>Der Kontaktname für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary>Ruft den Kontakt-URI für den Autor oder den Herausgeber des Inhalts ab oder legt diesen fest.</summary>
      <returns>Der Kontakt-URI (Uniform Resource Identifier) für den Autor oder den Herausgeber des Inhalts.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary>Erstellt eine signierte <see cref="T:System.Security.RightsManagement.PublishLicense" /> und gibt eine <see cref="T:System.Security.RightsManagement.UseLicense" /> für den Autor des Dokuments zurück.</summary>
      <param name="secureEnvironment">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
      <param name="authorUseLicense">Eine zurückgegebene <see cref="T:System.Security.RightsManagement.UseLicense" /> für den Autor des Dokuments.</param>
      <returns>Die signierte <see cref="T:System.Security.RightsManagement.PublishLicense" />, die durch Signieren dieser <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> erstellt wird.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary>Gibt eine serialisierte Vorlage zurück, die aus dem XrML-Objekt des <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Objekts erstellt wurde.</summary>
      <returns>Eine serialisierte Vorlage, die aus dem XrML-Objekt des <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Objekts erstellt wurde.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary>Stellt eine Lizenz dar, die Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.UseLicense" />-Klasse.</summary>
      <param name="useLicense">Eine Nutzungslizenz in serialisierter Extensible Rights Markup Language (XrML)-Form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="useLicense" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
        <paramref name="useLicense" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary>Ruft das Datenwörterbuch der Anwendung ab, das Schlüssel-Wert-Paare enthält, die von der veröffentlichenden Anwendung an die verarbeitende Anwendung übergeben wurden.</summary>
      <returns>Das Datenwörterbuch der Anwendung, das Schlüssel-Wert-Paare enthält, die von der veröffentlichenden Anwendung an die verarbeitende Anwendung übergeben wurden.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Bindet die Lizenz an eine bestimmte <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <param name="secureEnvironment">Die Umgebung, an die die Lizenz gebunden wird.</param>
      <returns>Eine <see cref="T:System.Security.RightsManagement.CryptoProvider" />-Instanz, wenn die Lizenzbindung erfolgreich ausgeführt wurde, andernfalls <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary>Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab.</summary>
      <returns>der vom Herausgeber erstellte Inhaltsbezeichner.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary>Gibt an, ob diese Lizenz zu einer anderen Lizenz äquivalent ist.</summary>
      <param name="x">Die zu vergleichende Lizenz.</param>
      <returns>
        <see langword="true" />, wenn beide Lizenzen äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary>Gibt den dieser Lizenz zugeordneten Hashcode zurück.</summary>
      <returns>Ein Hashcode für diese Lizenz.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary>Ruft den Inhaber der Lizenz ab.</summary>
      <returns>Der Inhaber der Lizenz.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary>Gibt die serialisierte XrML-Zeichenfolge zurück, mit der die Lizenz erstellt wurde.</summary>
      <returns>Die serialisierte Extensible Rights Markup Language (XrML)-Zeichenfolge, die ursprünglich an den <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />-Konstruktor übergeben wurde.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary>Gibt das Rechtekontozertifikat für Benutzer an, das für die Aktivierung der Rechteverwaltung angefordert werden soll.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary>Ein dauerhaftes Rechtekontozertifikat.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary>Ein temporäres Rechtekontozertifikat.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary>Stellt eine Basisklasse für .NET Framework-Attribute bereit, die den Verwendungsbereich für angefügte Eigenschaften melden.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary>Gibt an, dass eine angefügte Eigenschaft nur für Elemente durchsucht werden kann, die von einem bestimmten Typ abgeleitet sind.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />-Klasse unter Verwendung des bereitgestellten <paramref name="targetType" />.</summary>
      <param name="targetType">Der gewünschte Typ, der die Verwendung für die angefügte Eigenschaft festlegt, auf die dieses .NET Framework-Attribut angewendet wird.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework-Attribut einem angegebenen Objekt entspricht.</summary>
      <param name="obj">Die <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />, die mit der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> gleich der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diesen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework-Attribut zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary>Ruft den Basistyp ab, der die Verwendung der angefügten Eigenschaft festlegt, für die dieses .NET Framework-Attribut gilt.</summary>
      <returns>Der angeforderte <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary>Ruft einen eindeutigen Typbezeichner für diesen <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework-Attribut ab.</summary>
      <returns>Ein Objekt, bei dem es sich um einen eindeutigen Bezeichner für das <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> handelt.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary>Gibt an, dass eine angefügte Eigenschaft nur für ein Element gesucht werden kann, auf dessen Klassendefinition außerdem ein weiteres spezifisches .NET Framework-Attribut angewendet wurde.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />-Klasse.</summary>
      <param name="attributeType">Das <see cref="T:System.Type" />-Element von .NET Framework-Attribut, das auch auf eine Klasse angewendet werden muss, damit die angefügte Eigenschaft in der Klasse, in der das <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> angewendet wird, durchsucht werden kann.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary>Ruft den Typ des .NET Framework-Attribut ab, der auch auf eine Klasse angewendet werden muss.</summary>
      <returns>Der .NET Framework-Attribut Typ.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob das aktuelle <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework-Attribut einem angegebenen Objekt entspricht.</summary>
      <param name="obj">Die <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />, die mit der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> gleich der aktuellen <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diesen <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework-Attribut zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary>Enthält Eigenschaften, die angeben, wie sich eine Anwendung gegenüber neuen WPF-Funktionen verhalten sollte, die sich in der WindowsBase-Assembly befinden.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob Informationen über die <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> in die <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> gespeichert werden.</summary>
      <returns>
        <see langword="true" />, wenn Informationen über die <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> in die <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> gespeichert werden; sonst <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary>Definiert, wie der Verteiler auf Fehler reagiert, die bei der Anforderung für die Verarbeitung aufgetreten sind.</summary>
      <returns>Ein Wert, der definiert, wie der Verteiler auf Fehler reagiert.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary>Stellt einen Satz von Werten bereit, der beschreibt, wie der Verteiler auf Fehler reagiert, die bei der Verarbeitungsanforderung auftreten.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary>Fortfahren nach dem Fehler.
Dies ist der Standardwert. Dies stellt das Verhalten des Verteilers von Windows Presentation Foundation vor .NET Framework 4.7.1 dar. Möglicherweise reagiert der Verteiler nicht, wenn diese Option ausgewählt ist.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary>Setzen Sie den Zustand des Verteilers zurück, um erneut eine Anforderungen auszuprobieren, wenn diese erforderlich ist.
Während diese Option manchmal Probleme bei der Reaktionsfähigkeit beheben kann, kann sie nicht die normale Zeit der Verarbeitung beachten, die wesentlich sein kann. Wenn Sie diese Option wählen, kann es zu unerwarteten Verhalten kommen.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary>Löst eine Ausnahme aus.
Diese Option macht den Entwickler sofort auf das Problem aufmerksam.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob die <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />-Methode die Delegate in die Verteilerwarteschlange setzt oder ob der Delegat direkt aufgerufen wird.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />-Methode die Delegate in die Verteilerwarteschlange setzt oder wenn der Delegat direkt aufgerufen wird; sonst <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob eine einfache <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> für mehrfache Verteilervorgänge verwendet wird.</summary>
      <returns>Wahr, wenn eine einfache <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> für mehrfache Verteilervorgänge verwendet wird; sonst <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary>Stellt eine Vorlage für eine Methode bereit, die aufgerufen wird, wenn der Wert einer Abhängigkeitseigenschaft erneut ausgewertet wird oder wenn ausdrücklich eine Umwandlung angefordert wird.</summary>
      <param name="d">Das Objekt, für das die Eigenschaft vorhanden ist. Wenn der Rückruf aufgerufen wird, übergibt das Eigenschaftensystem diesen Wert.</param>
      <param name="baseValue">Der neue Wert der Eigenschaft vor einem Umwandlungsversuch.</param>
      <returns>Der umgewandelte Wert (mit dem entsprechenden Typ).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Int32Rect" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Int32Rect" />-Instanz konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Int32Rect" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value">Die zu konvertierende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Int32Rect" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Int32Rect" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Point" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.PointValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Point" />-Instanz konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Point" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Point" />.</summary>
      <param name="value">Die zu konvertierende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Point" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Point" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Rect" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.RectValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Rect" />-Instanz konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Rect" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value">Die zu konvertierende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Rect" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Rect" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine Zeichenfolgendarstellung des angegebenen <see cref="T:System.Windows.Rect" />-Objekts.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Size" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.SizeValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Size" />-Instanz konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Size" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Size" />.</summary>
      <param name="value">Die zu konvertierende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Size" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Size" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Vector" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Converters.VectorValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Vector" />-Instanz konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Vector" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value">Die zu konvertierende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Vector" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Vector" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary>Allgemeine Basisklasse und Vertrag für <see cref="T:System.Windows.Data.DataSourceProvider" />-Objekte, die Factorys sind, die bestimmte Abfragen ausführen, um ein einzelnes Objekt oder eine Liste von Objekten zu erstellen, die Sie als Quelle Bindungsquellenobjekte verwenden können.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Data.DataSourceProvider" />-Klasse. Dies ist ein geschützter Konstruktor.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary>Gibt an, dass die Initialisierung dieses Objekts gerade beginnt, es wird kein impliziter <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> ausgeführt, bis die übereinstimmende <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />-Methode aufgerufen wird.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse ruft diese Basisklasse diese Methode auf, wenn <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> oder <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> aufgerufen wurde. Die Basisklasse verzögert den Aufruf, wenn die Aktualisierung verzögert wird oder der ursprüngliche Ladevorgang deaktiviert ist.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary>Ruft das zugrunde liegende Datenobjekt ab</summary>
      <returns>Ein Wert des Typs <see cref="T:System.Object" />, der das zugrunde liegende Datenobjekt ist.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary>Tritt ein, wenn die <see cref="P:System.Windows.Data.DataSourceProvider.Data" />-Eigenschaft einen neuen Wert besitzt.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary>Wechselt in eine Verzögerungsschleife, mit der Sie Eigenschaften des Anbieters ändern und die automatische Aktualisierung verzögern können.</summary>
      <returns>Ein <see cref="T:System.IDisposable" />-Objekt, das Sie verwenden können, um das aufrufende Objekt zu verwerfen.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary>Ruft das aktuelle <see cref="T:System.Windows.Threading.Dispatcher" />-Objekt für den zu verwendenden UI-Thread ab oder legt dieses fest.</summary>
      <returns>Das aktuelle <see cref="T:System.Windows.Threading.Dispatcher" /> Objekt für den UI Thread, der verwendet werden soll. Standardmäßig ist dies das <see cref="T:System.Windows.Threading.Dispatcher" />-Objekt, das dem Thread zugeordnet ist, auf dem diese Instanz erstellt wurde.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary>Gibt an, dass die Initialisierung dieses Objekts abgeschlossen ist. Dadurch wird ein <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> ausgelöst, wenn kein weiterer <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> aussteht.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary>Ruft den Fehler des letzten Abfragevorgangs ab.</summary>
      <returns>Ein Wert vom Typ <see cref="T:System.Exception" />, der der Fehler des letzten Abfragevorgangs ist, oder <see langword="null" />, wenn kein Fehler vorliegt.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary>Startet die ursprüngliche Abfrage des zugrunde liegenden Datenmodells. Das Ergebnis wird für die <see cref="P:System.Windows.Data.DataSourceProvider.Data" />-Eigenschaft zurückgegeben.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary>Ruft ab oder legt einen Wert fest, der angibt, ob das automatische Laden der Daten zu verhindern oder zu verzögern.</summary>
      <returns>
        <see langword="false" />, wenn das automatische Laden von Daten verhindert oder verzögert werden soll, andernfalls <see langword="true" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary>Ruft einen Wert ab, mit dem angegeben wird, ob ein ausstehender <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> vorhanden ist.</summary>
      <returns>
        <see langword="true" />, wenn eine ausstehende <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />-Ereignis unter Verwendung der angegebenen Argumente aus.</summary>
      <param name="e">Argumente des ausgelösten Ereignisses.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary>Abgeleitete Klassen rufen diese Methode auf, um anzugeben, dass eine Abfrage beendet wurde.</summary>
      <param name="newData">Die Daten, die das Ergebnis der Abfrage bilden.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary>Abgeleitete Klassen rufen diese Methode auf, um anzugeben, dass eine Abfrage beendet wurde.</summary>
      <param name="newData">Die Daten, die das Ergebnis der Abfrage bilden.</param>
      <param name="error">Der Fehler, der beim Ausführen der Abfrage aufgetreten ist. Dieser Wert ist <see langword="null" />, wenn kein Fehler vorliegt.</param>
      <param name="completionWork">Optionaler Delegat, der zum Ausführen des Abschlusses für den UI-Thread verwendet wird, z. B. zum Festlegen zusätzlicher Eigenschaften.</param>
      <param name="callbackArguments">Optionale Argumente, die als Parameter für den <paramref name="completionWork" />-Delegaten gesendet werden.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary>Initiiert einen Aktualisierungsvorgang für das zugrunde liegenden Datenmodell. Das Ergebnis wird für die <see cref="P:System.Windows.Data.DataSourceProvider.Data" />-Eigenschaft zurückgegeben.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Tritt ein, wenn sich ein Eigenschaftswert ändert.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>Stellt ein Objekt dar, das im Abhängigkeitseigenschaftensystem teilnimmt.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.DependencyObject" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>Löscht den lokalen Wert einer Eigenschaft. Die Eigenschaft, deren Wert gelöscht werden soll, wird durch einen <see cref="T:System.Windows.DependencyProperty" />-Bezeichner angegeben.</summary>
      <param name="dp">Die Abhängigkeitseigenschaft, deren Wert gelöscht werden soll, wird durch einen <see cref="T:System.Windows.DependencyProperty" />-Objektverweis identifiziert.</param>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> für ein versiegeltes <see cref="T:System.Windows.DependencyObject" /> aufzurufen.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary>Löscht den lokalen Wert einer schreibgeschützten Eigenschaft. Die Eigenschaft, deren Wert gelöscht werden soll, wird durch einen <see cref="T:System.Windows.DependencyPropertyKey" /> angegeben.</summary>
      <param name="key">Der Schlüssel für die Abhängigkeitseigenschaft, deren Wert gelöscht werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> für ein versiegeltes <see cref="T:System.Windows.DependencyObject" /> aufzurufen.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary>Erzwingt den Wert der angegebenen Abhängigkeitseigenschaft. Dies erfolgt durch den Aufruf einer beliebigen <see cref="T:System.Windows.CoerceValueCallback" />-Funktion, die in den Metadaten für die Abhängigkeitseigenschaft angegeben ist, während sie beim aufrufenden <see cref="T:System.Windows.DependencyObject" /> beendet wird.</summary>
      <param name="dp">Der Bezeichner für die zu erzwingende Abhängigkeitseigenschaft.</param>
      <exception cref="T:System.InvalidOperationException">Der angegebene <paramref name="dp" /> oder sein Wert waren ungültig oder sind nicht vorhanden.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary>Ruft den <see cref="T:System.Windows.DependencyObjectType" /> ab, der den CLR-Typ dieser Instanz umschließt.</summary>
      <returns>Ein <see cref="T:System.Windows.DependencyObjectType" />, der den CLR-Typ dieser Instanz umschließt.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary>Bestimmt, ob ein angegebenes <see cref="T:System.Windows.DependencyObject" /> dem aktuellen <see cref="T:System.Windows.DependencyObject" /> entspricht.</summary>
      <param name="obj">Der <see cref="T:System.Windows.DependencyObject" />, der mit der aktuellen Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn beide Instanzen identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary>Ruft einen Hashcode für diese <see cref="T:System.Windows.DependencyObject" /> ab.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary>Erstellt einen spezialisierten Enumerator, mit dem bestimmt wird, welche Abhängigkeitseigenschaften dieses <see cref="T:System.Windows.DependencyObject" /> über lokal festgelegte Werte verfügen.</summary>
      <returns>Ein spezialisierter lokaler Wertenumerator.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>Gibt den aktuellen effektiven Wert einer Abhängigkeitseigenschaft für diese Instanz eines <see cref="T:System.Windows.DependencyObject" /> zurück.</summary>
      <param name="dp">Der <see cref="T:System.Windows.DependencyProperty" />-Bezeichner der Eigenschaft, für die der Wert abgerufen wird.</param>
      <returns>Gibt den aktuellen effektiven Wert zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Der angegebene <paramref name="dp" /> oder sein Wert ist ungültig, oder das angegebene <paramref name="dp" /> ist nicht vorhanden.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary>Wertet den effektiven Wert für die angegebene Abhängigkeitseigenschaft erneut aus.</summary>
      <param name="dp">Der <see cref="T:System.Windows.DependencyProperty" />-Bezeichner der neu zu berechnenden Eigenschaft.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary>Ruft einen Wert ab, der angibt, ob diese Instanz derzeit versiegelt (schreibgeschützt) ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Instanz versiegelt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Wird immer dann aufgerufen, wenn der effektive Wert einer Abhängigkeitseigenschaft für dieses <see cref="T:System.Windows.DependencyObject" /> aktualisiert wurde. Welche spezifische Abhängigkeitseigenschaft geändert wird, wird in den Ereignisdaten gemeldet.</summary>
      <param name="e">Ereignisdaten, die den betreffenden Bezeichner für eine Abhängigkeitseigenschaft, die Eigenschaftsmetadaten für den Typ sowie die alten und neuen Werte enthalten.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>Gibt, sofern vorhanden, den lokalen Wert einer Abhängigkeitseigenschaft zurück.</summary>
      <param name="dp">Der <see cref="T:System.Windows.DependencyProperty" />-Bezeichner der Eigenschaft, für die der Wert abgerufen wird.</param>
      <returns>Gibt den lokalen Wert oder den Sentinelwert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> zurück, wenn kein lokaler Wert festgelegt ist.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Legt den Wert einer Abhängigkeitseigenschaft fest, ohne die Wertquelle zu ändern.</summary>
      <param name="dp">Der Bezeichner der festzulegenden Abhängigkeitseigenschaft.</param>
      <param name="value">Der neue lokale Wert.</param>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine schreibgeschützte Abhängigkeitseigenschaft oder eine Eigenschaft eines versiegelten <see cref="T:System.Windows.DependencyObject" /> zu ändern.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> hatte nicht den richtigen Typ, wie er für die <paramref name="dp" />-Eigenschaft registriert ist.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Legt den lokalen Wert einer Abhängigkeitseigenschaft fest, die über ihren Bezeichner angegeben wird.</summary>
      <param name="dp">Der Bezeichner der festzulegenden Abhängigkeitseigenschaft.</param>
      <param name="value">Der neue lokale Wert.</param>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine schreibgeschützte Abhängigkeitseigenschaft oder eine Eigenschaft eines versiegelten <see cref="T:System.Windows.DependencyObject" /> zu ändern.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> entsprach nicht dem für die <paramref name="dp" />-Eigenschaft registrierten Typ.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary>Legt den lokalen Wert einer schreibgeschützten Abhängigkeitseigenschaft fest, die durch den <see cref="T:System.Windows.DependencyPropertyKey" />-Bezeichner der Abhängigkeitseigenschaft angegeben ist.</summary>
      <param name="key">Der <see cref="T:System.Windows.DependencyPropertyKey" />-Bezeichner der festzulegenden Eigenschaft.</param>
      <param name="value">Der neue lokale Wert.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>Gibt einen Wert zurück, der angibt, ob Serialisierungsprozesse den Wert der bereitgestellten Abhängigkeitseigenschaft serialisieren sollen.</summary>
      <param name="dp">Der Bezeichner für die Abhängigkeitseigenschaft, die serialisiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn die bereitgestellte Abhängigkeitseigenschaft serialisiert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary>Implementiert einen zugrunde liegenden Typencache für alle abgeleiteten <see cref="T:System.Windows.DependencyObject" />-Typen.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary>Ruft den <see cref="T:System.Windows.DependencyObjectType" /> der direkten Basisklasse des aktuellen <see cref="T:System.Windows.DependencyObjectType" /> ab.</summary>
      <returns>Der Typ der Basisklasse.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary>Gibt einen <see cref="T:System.Windows.DependencyObjectType" /> zurück, der einen bestimmten Systemtyp (CLR) darstellt.</summary>
      <param name="systemType">Der Systemtyp (CLR), der konvertiert werden soll.</param>
      <returns>Ein <see cref="T:System.Windows.DependencyObjectType" />, der den Systemtyp (CLR) darstellt.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Windows.DependencyObjectType" /> zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary>Ruft einen nullbasierten eindeutigen Bezeichner für Array-Suchvorgänge mit konstanter Zeit ab.</summary>
      <returns>Ein interner Bezeichner.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary>Bestimmt, ob das angegebene Objekt eine Instanz des aktuellen <see cref="T:System.Windows.DependencyObjectType" /> ist.</summary>
      <param name="dependencyObject">Das Objekt, das mit der aktuellen <see cref="T:System.Windows.DependencyObjectType" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn die durch den aktuellen <see cref="T:System.Windows.DependencyObjectType" /> dargestellte Klasse in der Vererbungshierarchie des <see cref="T:System.Windows.DependencyObject" /> als <paramref name="d" /> übergeben wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary>Bestimmt, ob der aktuelle <see cref="T:System.Windows.DependencyObjectType" /> vom angegebenen <see cref="T:System.Windows.DependencyObjectType" /> abgeleitet ist.</summary>
      <param name="dependencyObjectType">Der zu vergleichende <see cref="T:System.Windows.DependencyObjectType" />.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="dependencyObjectType" />-Parameter und der aktuelle <see cref="T:System.Windows.DependencyObjectType" /> Typen von Klassen darstellen und die vom aktuellen <see cref="T:System.Windows.DependencyObjectType" /> dargestellte Klasse von der durch <paramref name="dependencyObjectType" /> dargestellten Klasse abgeleitet ist. andernfalls <see langword="false" />. Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="dependencyObjectType" /> und der aktuelle <see cref="T:System.Windows.DependencyObjectType" /> dieselbe Klasse darstellen.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary>Ruft den Namen des dargestellten Common Language Runtime (CLR)-Systemtyps ab.</summary>
      <returns>Der Name des dargestellten CLR-Systemtyps.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary>Ruft den Common Language Runtime (CLR)-Systemtyp ab, der durch diesen <see cref="T:System.Windows.DependencyObjectType" /> dargestellt wird.</summary>
      <returns>Der CLR-Systemtyp, der durch diesen <see cref="T:System.Windows.DependencyObjectType" /> dargestellt wird.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>Stellt eine Eigenschaft dar, die durch Methoden festgelegt werden kann, z. B. Formatierung, Datenbindung, Animation und Vererbung.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary>Fügt einen weiteren Typ als Besitzer einer Abhängigkeitseigenschaft hinzu, die bereits registriert wurde.</summary>
      <param name="ownerType">Der Typ, der als ein Besitzer dieser Abhängigkeitseigenschaft hinzugefügt werden soll.</param>
      <returns>Ein Verweis auf den ursprünglichen <see cref="T:System.Windows.DependencyProperty" />-Bezeichner, der die Abhängigkeitseigenschaft angibt. Dieser Bezeichner sollte von der hinzufügenden Klasse als <see langword="public static readonly" />-Feld verfügbar gemacht werden.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary>Fügt einen anderen Typ als Besitzer einer Abhängigkeitseigenschaft hinzu, die bereits registriert wurde. Dabei werden Abhängigkeitseigenschaft-Metadaten für die Abhängigkeitseigenschaft bereitgestellt, wie sie für den bereitgestellten Besitzertyp vorhanden sind.</summary>
      <param name="ownerType">Der Typ, der als Besitzer dieser Abhängigkeitseigenschaft hinzugefügt werden soll.</param>
      <param name="typeMetadata">Die Metadaten, die die Abhängigkeitseigenschaft beschreiben, wie sie für den bereitgestellten Typ vorhanden sind.</param>
      <returns>Ein Verweis auf den ursprünglichen <see cref="T:System.Windows.DependencyProperty" />-Bezeichner, der die Abhängigkeitseigenschaft angibt. Dieser Bezeichner sollte von der hinzufügenden Klasse als <see langword="public static readonly" />-Feld verfügbar gemacht werden.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary>Ruft die Standardmetadaten der Abhängigkeitseigenschaft ab.</summary>
      <returns>Die Standardmetadaten der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary>Gibt einen Hashcode für diese <see cref="T:System.Windows.DependencyProperty" /> zurück.</summary>
      <returns>Der Hashcode für diese <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>Gibt die Metadaten für diese Abhängigkeitseigenschaft zurück, wie sie für einen angegebenen vorhanden Typ vorhanden sind.</summary>
      <param name="forType">Der spezifische Typ, von dem die Metadaten für die Abhängigkeitseigenschaft abgerufen werden sollen.</param>
      <returns>Ein Objekt für Eigenschaftenmetadaten.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary>Gibt die Metadaten für diese Abhängigkeitseigenschaft zurück, da sie für die angegebene Objektinstanz vorhanden sind.</summary>
      <param name="dependencyObject">Ein Abhängigkeitsobjekt, dessen Typ überprüft wird, um zu ermitteln, von welcher typspezifischen Version der Abhängigkeitseigenschaft die Metadaten stammen sollen.</param>
      <returns>Ein Objekt für Eigenschaftenmetadaten.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary>Gibt die Metadaten für diese Abhängigkeitseigenschaft zurück, wie sie für einen angegebenen Typ vorhanden sind.</summary>
      <param name="dependencyObjectType">Ein bestimmtes Objekt, das den Abhängigkeitsobjekttyp aufzeichnet, von dem die Metadaten für die Abhängigkeitseigenschaft stammen sollen.</param>
      <returns>Ein Objekt für Eigenschaftenmetadaten.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary>Ruft einen intern generierten Wert ab, der die Abhängigkeitseigenschaft eindeutig identifiziert.</summary>
      <returns>Ein eindeutiger numerischer Bezeichner.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary>Bestimmt, ob ein angegebener Wert für den Typ dieser Abhängigkeitseigenschaft akzeptiert wird, wie anhand des in der Registrierung der ursprünglichen Abhängigkeitseigenschaft angegebenen Eigenschaftentyps überprüft wurde.</summary>
      <param name="value">Der zu überprüfende Wert.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Wert der registrierte Eigenschaftentyp oder ein zulässiger abgeleiteter Typ ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary>Bestimmt, ob der angegebene Wert für den Eigenschaftentyp durch eine einfache Typüberprüfung zulässig ist und ob er sich potenziell im zulässigen Wertebereich für den Typ befindet.</summary>
      <param name="value">Der zu überprüfende Wert.</param>
      <returns>
        <see langword="true" />, wenn der Wert zulässig ist und den richtigen Typ oder einen abgeleiteten Typ aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary>Ruft den Namen der Abhängigkeitseigenschaft ab.</summary>
      <returns>Den Namen der Eigenschaft.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Gibt alternative Metadaten für diese Abhängigkeitseigenschaft an, wenn sie in Instanzen eines angegebenen Typs vorhanden ist. Dabei werden die Metadaten überschrieben, die für die Abhängigkeitseigenschaft bei der Vererbung von Basistypen vorhanden waren.</summary>
      <param name="forType">Der Typ, bei dem diese Abhängigkeitseigenschaft geerbt wird und bei dem die bereitgestellten alternativen Metadaten angewendet werden.</param>
      <param name="typeMetadata">Die Metadaten, die auf die Abhängigkeitseigenschaft im überschreibenden Typ angewendet werden sollen.</param>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, die Metadaten für eine schreibgeschützte Abhängigkeitseigenschaft zu überschreiben (dieser Vorgang kann nicht mit dieser Signatur ausgeführt werden).</exception>
      <exception cref="T:System.ArgumentException">Metadaten wurden für die Abhängigkeitseigenschaft bereits festgelegt, wie im bereitgestellten Typ vorhanden.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary>Stellt alternative Metadaten für eine schreibgeschützte Abhängigkeitseigenschaft bereit, wenn sie in Instanzen eines angegebenen Typs vorhanden ist, wodurch die Metadaten überschrieben werden, die bei der ersten Registrierung der Abhängigkeitseigenschaft bereitgestellt wurden. Sie müssen die <see cref="T:System.Windows.DependencyPropertyKey" /> für die schreibgeschützte Abhängigkeitseigenschaft übergeben, um das Auslösen einer Ausnahme zu vermeiden.</summary>
      <param name="forType">Der Typ, bei dem diese Abhängigkeitseigenschaft geerbt wird und bei dem die bereitgestellten alternativen Metadaten angewendet werden.</param>
      <param name="typeMetadata">Die Metadaten, die auf die Abhängigkeitseigenschaft im überschreibenden Typ angewendet werden sollen.</param>
      <param name="key">Der Zugriffsschlüssel für eine schreibgeschützte Abhängigkeitseigenschaft.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary>Ruft den Typ des Objekts ab, das die Abhängigkeitseigenschaft im Eigenschaftensystem registriert oder sich selbst als Besitzer der Eigenschaft hinzugefügt hat.</summary>
      <returns>Der Typ des Objekts, das die Eigenschaft registriert oder sich selbst als Besitzer der Eigenschaft hinzugefügt hat.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary>Ruft den Typ ab, den die Abhängigkeitseigenschaft für den Wert verwendet.</summary>
      <returns>Der <see cref="T:System.Type" /> des Eigenschaftswerts.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die von dieser <see cref="T:System.Windows.DependencyProperty" />-Instanz angegebene Abhängigkeitseigenschaft eine schreibgeschützte Abhängigkeitseigenschaft ist.</summary>
      <returns>
        <see langword="true" />, wenn die Abhängigkeitseigenschaft schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>Registriert eine Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftennamen, Eigenschaftentyp und Besitzertyp.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft. Der Name muss innerhalb des Registrierungsnamespace des Besitzertyps eindeutig sein.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <returns>Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registriert eine Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftsnamen, Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftsmetadaten.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <returns>Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registriert eine Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftennamen, Eigenschaftentyp, Besitzertyp, den angegebenen Eigenschaftenmetadaten und einem Wertvalidierungsrückruf für die Eigenschaft.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <param name="validateValueCallback">Ein Verweis auf einen Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns>Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>Registriert eine angefügte Eigenschaft mit dem angegebenen Eigenschaftsnamen, Eigenschaftstyp und Besitzertyp.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <returns>Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registriert eine angefügte Eigenschaft mit dem angegebenen Eigenschaftsnamen, Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftenmetadaten.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft. Dies kann den Standardwert sowie andere Merkmale einschließen.</param>
      <returns>Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registriert eine angefügte Eigenschaft mit dem angegebenen Eigenschaftentyp, Besitzertyp, Eigenschaftenmetadaten und einem Wertvalidierungsrückruf für die Eigenschaft.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft. Dies kann den Standardwert sowie andere Merkmale einschließen.</param>
      <param name="validateValueCallback">Ein Verweis auf einen Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns>Ein Bezeichner für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts eines <see langword="public static readonly" />-Felds in der Klasse verwendet werden soll. Dieser Bezeichner wird dann später in Vorgängen (z. B. beim programmgesteuerten Festlegen des Werts oder beim Abrufen von Metadaten) zum Verweisen auf die Abhängigkeitseigenschaft verwendet.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registriert eine schreibgeschützte angefügte Eigenschaft mit dem angegebenen Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftsmetadaten.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <returns>Ein Schlüssel für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts für ein statisches schreibgeschütztes Feld in der Klasse verwendet werden sollte. Mit diesem wird dann später auf die Abhängigkeitseigenschaft verwiesen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registriert eine schreibgeschützte Eigenschaft mit dem angegebenen Eigenschaftstyp, Besitzertyp, den angegebenen Eigenschaftsmetadaten und einem Validierungsrückruf.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="defaultMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <param name="validateValueCallback">Ein Verweis auf einen benutzerdefinierten Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns>Ein Abhängigkeitseigenschaftsschlüssel, der dazu verwendet werden soll, den Wert eines statischen schreibgeschützten Felds in Ihrer Klasse festzulegen, die dann dazu verwendet wird, auf die Abhängigkeitseigenschaft zu verweisen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Registriert eine schreibgeschützte Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftstyp und Besitzertyp sowie den angegebenen Eigenschaftsmetadaten.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <returns>Ein Abhängigkeitseigenschaftsschlüssel, der dazu verwendet werden soll, den Wert eines statischen schreibgeschützten Felds in Ihrer Klasse festzulegen, die dann dazu verwendet wird, auf die Abhängigkeitseigenschaft zu verweisen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Registriert eine schreibgeschützte Abhängigkeitseigenschaft mit dem angegebenen Eigenschaftstyp, Besitzertyp, den angegebenen Eigenschaftsmetadaten und einem Validierungsrückruf.</summary>
      <param name="name">Der Name der zu registrierenden Abhängigkeitseigenschaft.</param>
      <param name="propertyType">Den Typ der Eigenschaft.</param>
      <param name="ownerType">Der Besitzertyp, von dem die Abhängigkeitseigenschaft registriert wird.</param>
      <param name="typeMetadata">Eigenschaftsmetadaten für die Abhängigkeitseigenschaft.</param>
      <param name="validateValueCallback">Ein Verweis auf einen benutzerdefinierten Rückruf, der eine beliebige benutzerdefinierte Validierung des Werts der Abhängigkeitseigenschaft über die normale Validierung hinaus durchführen soll.</param>
      <returns>Ein Schlüssel für eine Abhängigkeitseigenschaft, der zum Festlegen des Werts für ein statisches schreibgeschütztes Feld in der Klasse verwendet werden sollte. Mit diesem wird dann später auf die Abhängigkeitseigenschaft verwiesen.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary>Gibt die Zeichenfolgendarstellung der Abhängigkeitseigenschaft zurück.</summary>
      <returns>Die Zeichenfolgendarstellung der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>Gibt einen statischen Wert an, der vom WPF-Eigenschaftensystem verwendet wird, und nicht <see langword="null" />, um anzugeben, dass die Eigenschaft vorhanden ist, der Wert jedoch nicht vom Eigenschaftensystem festgelegt wird.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary>Ruft den Wertvalidierungsrückruf für die Abhängigkeitseigenschaft ab.</summary>
      <returns>Der Wertvalidierungsrückruf für diese Abhängigkeitseigenschaft, wie für den <paramref name="validateValueCallback" />-Parameter in der ursprünglichen Registrierung der Abhängigkeitseigenschaft angegeben.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>Stellt Daten für verschiedene durch geänderte Eigenschaften ausgelöste Ereignisse bereit. Diese Ereignisse melden normalerweise effektive Änderungen beim Wert einer schreibgeschützten Abhängigkeitseigenschaft. Eine weitere Verwendungsmöglichkeit ist als Teil einer <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Klasse.</summary>
      <param name="property">Der Bezeichner für die Abhängigkeitseigenschaft, die geändert wurde.</param>
      <param name="oldValue">Der Wert der Eigenschaft vor der Änderung, die vom betreffenden Ereignis bzw. der Zustandsänderung gemeldet wurde.</param>
      <param name="newValue">Der Wert der Eigenschaft nach der Änderung, die vom betreffenden Ereignis bzw. der Zustandsänderung gemeldet wurde.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</summary>
      <param name="obj">Das mit der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zu vergleichende Objekt</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt gleich der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</summary>
      <param name="args">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das mit dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn die angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> gleich der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary>Ruft einen Hashcode für diese <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ab.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>Ruft den Wert der Eigenschaft nach der Änderung ab.</summary>
      <returns>Der Eigenschaftswert nach der Änderung.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>Ruft den Wert der Eigenschaft vor der Änderung ab.</summary>
      <returns>Der Eigenschaftswert vor der Änderung.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Objekte denselben Wert haben.</summary>
      <param name="left">Der erste zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <param name="right">Der zweite zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <returns>
        <see langword="true" />, wenn die beiden <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Instanzen äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Bestimmt, ob zwei angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Objekte ungleich sind.</summary>
      <param name="left">Der erste zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <param name="right">Der zweite zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
      <returns>
        <see langword="true" />, wenn sich die beiden <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Instanzen unterscheiden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>Ruft den Bezeichner für die Abhängigkeitseigenschaft ab, für die die Änderung des Werts aufgetreten ist.</summary>
      <returns>Das Bezeichnerfeld der Abhängigkeitseigenschaft, für die die Änderung des Werts aufgetreten ist.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>Stellt die Methode zum Behandeln von Ereignissen dar, die beim Ändern einer <see cref="T:System.Windows.DependencyProperty" /> für eine bestimmte <see cref="T:System.Windows.DependencyObject" />-Implementierung ausgelöst werden.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary>Stellt einen Bezeichner für eine Abhängigkeitseigenschaft für den beschränkten Schreibzugriff auf eine schreibgeschützte Abhängigkeitseigenschaft bereit.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary>Ruft den Bezeichner einer Abhängigkeitseigenschaft ab, der diesem Bezeichner einer spezialisierten schreibgeschützten Abhängigkeitseigenschaft zugeordnet ist.</summary>
      <returns>Der relevante Bezeichner einer Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Überschreibt die Metadaten einer schreibgeschützten Abhängigkeitseigenschaft, die durch diesen Bezeichner einer Abhängigkeitseigenschaft dargestellt wird.</summary>
      <param name="forType">Der Typ, für den diese Abhängigkeitseigenschaft vorhanden ist, sowie die Metadaten müssen überschrieben werden.</param>
      <param name="typeMetadata">Für diesen Typ angegebene Metadaten.</param>
      <exception cref="T:System.InvalidOperationException">Versuchte Überschreibung von Metadaten für eine Abhängigkeitseigenschaft mit Schreib- und Leseberechtigungen (kann nicht mit dieser Signatur ausgeführt werden).</exception>
      <exception cref="T:System.ArgumentException">Metadaten wurden für die Eigenschaft bereits festgelegt, da sie im bereitgestellten Typ bereits vorhanden sind.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>Dieser Typ unterstützt die Windows Presentation Foundation-Infrastruktur (WFP) und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary>Konvertiert Instanzen von <see cref="T:System.Windows.Expression" /> in andere Typen und aus anderen Typen.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.ExpressionConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter von einem Quellobjekt in ein <see cref="T:System.Windows.Expression" />-Objekt konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>Immer <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein <see cref="T:System.Windows.Expression" />-Objekt in einen bestimmten Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>Immer <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert den angegebenen Wert in den <see cref="T:System.Windows.Expression" />-Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <returns>Löst immer eine Ausnahme aus und gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene <see cref="T:System.Windows.Expression" />-Objekt in den angegebenen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>Löst immer eine Ausnahme aus und gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary>Definiert ein Objekt, das einen änderbaren Zustand und einen schreibgeschützten (fixierten) Zustand aufweist. Von <see cref="T:System.Windows.Freezable" /> abgeleitete Klassen stellen detaillierte Änderungsbenachrichtigung bereit, können unveränderlich gemacht werden und sind imstande, sich selbst zu klonen.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary>Initialisiert eine neue Instanz einer abgeleiteten <see cref="T:System.Windows.Freezable" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary>Ruft einen Wert ab, der anzeigt, ob das Objekt als nicht änderbar festgelegt werden kann.</summary>
      <returns>
        <see langword="true" />, wenn das aktuelle Objekt als nicht änderbar festgelegt werden kann oder bereits nicht änderbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary>Tritt auf, wenn <see cref="T:System.Windows.Freezable" /> oder ein darin enthaltenes Objekt geändert wird.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary>Erstellt einen änderbaren Klon des <see cref="T:System.Windows.Freezable" />-Objekts, indem tiefe Kopien der Werte des Objekts erstellt werden. Beim Kopieren der Abhängigkeitseigenschaften des Objekts kopiert diese Methode Ausdrücke (die möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</summary>
      <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> ist.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary>Definiert die Instanz als Klon (tiefe Kopie) des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, indem Basiseigenschaftenwerte (nicht animiert) verwendet werden.</summary>
      <param name="sourceFreezable">Das zu klonende Objekt.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary>Erstellt einen änderbaren Klon (tiefe Kopie) von <see cref="T:System.Windows.Freezable" /> mit den aktuellen Werten.</summary>
      <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> ist.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Macht die Instanz mithilfe aktueller Eigenschaftswerte zu einem Klon (tiefe Kopie) des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, der geändert werden kann.</summary>
      <param name="sourceFreezable">Der <see cref="T:System.Windows.Freezable" />, der geklont werden soll.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Freezable" />-Klasse.</summary>
      <returns>Die neue Instanz.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary>Erstellt beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der abgeleiteten <see cref="T:System.Windows.Freezable" />-Klasse.</summary>
      <returns>Die neue Instanz.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary>Definiert das aktuelle Objekt als nicht änderbar und legt seine <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft auf <see langword="true" /> fest.</summary>
      <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Windows.Freezable" />-Objekt kann nicht als nicht änderbar definiert werden.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary>Wenn der <paramref name="isChecking" />-Parameter <see langword="true" /> ist, gibt diese Methode an, ob das angegebene <see cref="T:System.Windows.Freezable" /> als nicht änderbar festgelegt werden kann. Wenn der <paramref name="isChecking" />-Parameter <see langword="false" /> ist, versucht diese Methode, das angegebene <see cref="T:System.Windows.Freezable" /> als nicht änderbar festzulegen und gibt an, ob der Vorgang erfolgreich ausgeführt wurde.</summary>
      <param name="freezable">Das Objekt, das überprüft oder als nicht änderbar festgelegt werden soll. Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, wird das Objekt überprüft, um zu bestimmen, ob es als nicht änderbar festgelegt werden kann. Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> hat, wird das Objekt als nicht änderbar festgelegt, falls möglich.</param>
      <param name="isChecking">
        <see langword="true" />, um zurückzugeben, ob das Objekt fixiert werden kann (ohne es tatsächlich zu fixieren), <see langword="false" />, um das Objekt tatsächlich zu fixieren.</param>
      <returns>Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der angegebene <see cref="T:System.Windows.Freezable" /> als nicht änderbar festgelegt werden kann, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann. Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der angegebene <see cref="T:System.Windows.Freezable" /> jetzt nicht änderbar ist, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann.</returns>
      <exception cref="T:System.InvalidOperationException">Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> aufweist, war der Versuch, <paramref name="freezable" /> als nicht änderbar festzulegen, nicht erfolgreich. Das Objekt befindet sich nun in einem unbekannten Zustand (möglicherweise ist es teilweise fixiert).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary>Legt das <see cref="T:System.Windows.Freezable" />-Objekt als nicht änderbar fest oder überprüft, ob es als nicht änderbar festgelegt werden kann.</summary>
      <param name="isChecking">
        <see langword="true" />, um zurückzugeben, ob das Objekt fixiert werden kann (ohne es tatsächlich zu fixieren), <see langword="false" />, um das Objekt tatsächlich zu fixieren.</param>
      <returns>Wenn <paramref name="isChecking" /> den Wert <see langword="true" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der <see cref="T:System.Windows.Freezable" /> als nicht änderbar festgelegt werden kann, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann. Wenn <paramref name="isChecking" /> den Wert <see langword="false" /> aufweist, gibt diese Methode <see langword="true" /> zurück, wenn der angegebene <see cref="T:System.Windows.Freezable" /> jetzt nicht änderbar ist, oder <see langword="false" />, wenn er nicht als nicht änderbar festgelegt werden kann.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary>Erstellt eine fixierte Kopie von <see cref="T:System.Windows.Freezable" /> mit Basiseigenschaftswerten (nicht animiert). Da die Kopie fixiert ist, werden alle fixierten Unterobjekte als Verweis kopiert.</summary>
      <returns>Eine fixierte Kopie von <see cref="T:System.Windows.Freezable" />. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Kopie ist auf <see langword="true" /> festgelegt.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Freezable" /> kann nicht fixiert werden, da er Ausdrücke oder animierte Eigenschaften enthält.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Definiert die Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, indem Basiseigenschaftenwerte (nicht animiert) verwendet werden.</summary>
      <param name="sourceFreezable">Die zu kopierende Instanz.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary>Erstellt eine fixierte Kopie von <see cref="T:System.Windows.Freezable" /> mit aktuellen Eigenschaftswerten. Da die Kopie fixiert ist, werden alle fixierten Unterobjekte als Verweis kopiert.</summary>
      <returns>Eine fixierte Kopie von <see cref="T:System.Windows.Freezable" />. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Kopie ist auf <see langword="true" /> festgelegt.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Legt die aktuelle Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" /> fest. Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die aktuellen animierten Werte kopiert.</summary>
      <param name="sourceFreezable">Das <see cref="T:System.Windows.Freezable" />, das kopiert und fixiert werden soll.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary>Ruft einen Wert ab, der angibt, ob das Objekt derzeit geändert werden kann.</summary>
      <returns>
        <see langword="true" />, wenn das Objekt eingefroren ist und nicht geändert werden kann, <see langword="false" />, wenn das Objekt geändert werden kann.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary>Wird aufgerufen, wenn das aktuelle <see cref="T:System.Windows.Freezable" />-Objekt geändert wird.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Stellt sicher, dass entsprechende Kontextzeiger für einen gerade festgelegten <see cref="T:System.Windows.DependencyObjectType" />-Datenmember eingerichtet werden.</summary>
      <param name="oldValue">Der vorherige Wert des Datenmembers.</param>
      <param name="newValue">Der aktuelle Wert des Datenmembers.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="oldValue">Der vorherige Wert des Datenmembers.</param>
      <param name="newValue">Der aktuelle Wert des Datenmembers.</param>
      <param name="property">Die geänderte Eigenschaft.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Überschreibt die <see cref="T:System.Windows.DependencyObject" />-Implementierung von <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />, damit in Reaktion auf eine geänderte Abhängigkeitseigenschaft des Typs <see cref="T:System.Windows.Freezable" /> auch <see cref="E:System.Windows.Freezable.Changed" />-Handler aufgerufen werden.</summary>
      <param name="e">Ereignisdaten mit Informationen dazu, welche Eigenschaft geändert wurde, sowie dem alten und neuen Wert.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary>Stellt sicher, dass über einen gültigen Thread auf <see cref="T:System.Windows.Freezable" /> zugegriffen wird. Vererber von <see cref="T:System.Windows.Freezable" /> müssen diese Methode am Anfang jeder API aufrufen, die Datenmember liest, bei denen es sich nicht um Abhängigkeitseigenschaften handelt.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary>Löst das <see cref="E:System.Windows.Freezable.Changed" />-Ereignis für das <see cref="T:System.Windows.Freezable" />-Objekt aus und ruft dessen <see cref="M:System.Windows.Freezable.OnChanged" />-Methode auf. Klassen, die aus <see cref="T:System.Windows.Freezable" /> abgeleitet werden, sollten diese Methode am Ende jeder API aufrufen, die Klassenmember ändert, die nicht als Abhängigkeitseigenschaften gespeichert sind.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary>Stellt sicher, dass das <see cref="T:System.Windows.Freezable" /> nicht fixiert ist und dass über einen gültigen Threadkontext darauf zugegriffen wird. Vererber von <see cref="T:System.Windows.Freezable" /> sollten diese Methode am Anfang jeder API aufrufen, die Datenmember schreibt, bei denen es sich nicht um Abhängigkeitseigenschaften handelt.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Freezable" />-Instanz ist fixiert, und in ihre Member kann nicht geschrieben werden.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary>Gibt die Richtung in einer Benutzeroberfläche an, in der eine gewünschte Fokusänderungsanforderung versucht wird. Die Richtung basiert auf der Aktivierreihenfolge oder der relativen Richtung im Layout.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary>Verschiebt den Fokus auf ein anderes fokussierbares Element unter dem derzeit fokussierten Element.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary>Verschiebt den Fokus auf das erste fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary>Verschiebt den Fokus auf das letzte fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary>Verschiebt den Fokus auf ein anderes fokussierbares Element links vom derzeit fokussierten Element.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary>Verschiebt den Fokus auf das nächste fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary>Verschiebt den Fokus auf das vorherige fokussierbare Element in der Aktivierreihenfolge. Wird für <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> nicht unterstützt.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary>Verschiebt den Fokus auf ein anderes fokussierbares Element rechts vom derzeit fokussierten Element.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary>Verschiebt den Fokus auf ein anderes fokussierbares Element über dem derzeit fokussierten Element.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>Gibt die möglichen Schlüsselwerte auf einer Tastatur an.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>A-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary>ABNT_C1-TASTE (Brasilien)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary>ABNT_C2-TASTE (Brasilien)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>ADDITIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary>ANWENDUNGSTASTE (Microsoft Natural Keyboard) Wird auch als Menütaste bezeichnet, weil sie ein anwendungsspezifisches Kontextmenü anzeigt.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary>ATTN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>B-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>RÜCKTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary>BROWSER-ZURÜCK-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary>BROWSER-FAVORITEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary>BROWSER-VORWÄRTS-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary>BROWSER-STARTSEITE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary>BROWSER-AKTUALISIEREN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary>BROWSER-SUCHEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary>BROWSER-ABBRECHEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>C-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary>CANCEL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary>FESTSTELLTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>FESTSTELLTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary>CLEAR-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary>CRSEL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>D-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>0-TASTE (null)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>1-TASTE (eins)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>2-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>3-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>4-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>5-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>6-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>7-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>8-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>9-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary>DBE_ALPHANUMERIC-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary>DBE_CODEINPUT-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary>DBE_DBCSCHAR-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary>DBE_DETERMINESTRING-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary>DBE_ENTERDLGCONVERSIONMODE-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary>DBE_ENTERIMECONFIGMODE-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary>DBE_ENTERWORDREGISTERMODE-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary>DBE_FLUSHSTRING-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary>DBE_HIRAGANA-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary>DBE_KATAKANA-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary>DBE_NOCODEINPUT-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary>DBE_NOROMAN-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary>DBE_ROMAN-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary>DBE_SBCSCHAR-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary>Die Taste wird zusammen mit einer anderen Taste verwendet, um ein einzelnes kombiniertes Zeichen zu erstellen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>KOMMATASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>ENTF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>DIVISIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>NACH-UNTEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>E-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>ENDE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>EINGABETASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary>ERASE EOF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>ESC-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary>AUSFÜHREN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary>EXSEL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>F-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>Die F1-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>F10-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>F11-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>F12-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary>F13-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary>F14-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary>F15-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary>F16-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary>F17-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary>F18-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary>F19-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>F2-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary>F20-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary>F21-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary>F22-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary>F23-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary>F24-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>F3-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>F4-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>F5-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>F6-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>F7-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>F8-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>F9-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary>Taste für den IME-Final-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>G-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>H-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary>Taste für den IME-Hangul-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary>Taste für den IME-Hanja-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary>HILFE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>POS1-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>I-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary>Taste für das Annehmen im IME</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary>Taste für die IME-Konvertierung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary>Taste für Änderungsanforderung des IME-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary>Taste für die IME-Nicht-Konvertierung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary>Eine spezielle Taste, die die von einer IME verarbeitete tatsächliche Taste maskiert.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>EINFG-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>J-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary>Taste für den IME-Junja-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>K-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary>Taste für den IME-Kana-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary>Taste für den IME-Kanji-Modus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>L-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary>Taste zum Starten der ersten Anwendung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary>Taste zum Starten der zweiten Anwendung</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary>MAIL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>NACH-LINKS-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary>Linke ALT-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary>Linke STRG-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary>Linke UMSCHALTTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary>ZEILENVORSCHUBTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary>Linke Windows-Taste (Microsoft Natural Keyboard)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>M-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary>Playertaste für den nächsten Titel</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary>Playertaste für Wiedergabe und Pause</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary>Playertaste für den vorherigen Titel</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary>Playertaste für das Beenden der Wiedergabe</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>MULTIPLIKATIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>N-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary>BILD-AB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary>Für zukünftige Verwendung reservierte Konstante</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>Keine Taste gedrückt.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary>NUM-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>0-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>1-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>2-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>3-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>4-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>5-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>6-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>7-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>8-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>9-TASTE auf der Zehnertastatur</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>O-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary>OEM 1-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary>OEM 102-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary>OEM 2-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary>OEM 3-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary>OEM 4-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary>OEM 5-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary>OEM 6-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary>OEM 7-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary>OEM 8-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary>OEM-abhängige ATTN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary>OEM-abhängige AUTO-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary>OEM-abhängige Taste mit dem umgekehrten Schrägstrich</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary>OEM-abhängige RÜCKWÄRTS-TAB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary>OEM-abhängige CLEAR-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary>OEM-abhängige Taste mit der schließenden Klammer</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary>OEM-abhängige KOMMATASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary>OEM-abhängige COPY-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary>OEM-abhängige ENLW-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary>OEM-abhängige BEENDEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary>OEM-abhängige MINUSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary>OEM-abhängige Taste mit der öffnenden Klammer</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary>OEM-abhängige PUNKTTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary>OEM-abhängige Taste mit dem senkrechten Balken</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary>OEM-abhängige ADDITIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary>OEM-abhängige FRAGEZEICHENTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary>OEM-abhängige ANFÜHRUNGSZEICHENTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary>OEM-abhängige SEMIKOLONTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary>OEM-abhängige TILDETASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>P-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary>PA1-Taste</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>BILD-AB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>BILD-AUF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary>PAUSE-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary>PLAY-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary>DRUCKEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary>DRUCK-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary>BILD-AUF-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>Q-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>R-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary>RETURN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>NACH-RECHTS-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary>Rechte ALT-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary>Rechte STRG-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary>Rechte UMSCHALTTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary>Rechte Windows-Taste (Microsoft Natural Keyboard)</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>S-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary>ROLLEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary>AUSWAHL-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary>Taste für die Medienauswahl</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary>TRENNZEICHENTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary>Taste für Standbymodus</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary>DRUCK-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>LEERTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>SUBTRAKTIONSTASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary>Eine spezielle Taste, die die als Systemtaste verarbeitete tatsächliche Taste maskiert.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>T-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>TAB-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>U-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>NACH-OBEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>V-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary>LEISER-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary>STUMMSCHALTEN-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary>LAUTER-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>W-TASTE</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>Die X-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>Die Y-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>Die Z-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary>ZOOM-TASTE</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary>Konvertiert ein <see cref="T:System.Windows.Input.Key" />-Objekt in andere bzw. aus anderen Typen.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.Key" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein Objekt des angegebenen Typs im angegebenen Kontext in eine Instanz von <see cref="T:System.Windows.Input.Key" /> konvertiert werden kann.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="sourceType">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" /> wenn <paramref name="sourceType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Input.Key" /> im angegebenen Kontext in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="destinationType">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" /> wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, das angegebene Objekt im angegebenen Kontext in einen <see cref="T:System.Windows.Input.Key" /> zu konvertieren.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
      <param name="source">Das zu konvertierende Objekt.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, einen <see cref="T:System.Windows.Input.Key" /> im angegebenen Kontext in den angegebenen Typ zu konvertieren.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> kann nicht in <paramref name="destinationType" /> konvertiert werden.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary>Stellt statische Methoden für die Konvertierung zwischen virtuellen Win32-Tasten und der <see cref="T:System.Windows.Input.Key" />-WPF-Enumeration dar.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary>Konvertiert eine virtuelle Win32-Taste in WPF <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="virtualKey">Die zu konvertierende virtuelle Taste.</param>
      <returns>Die WPF-Taste.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary>Konvertiert eine WPF <see cref="T:System.Windows.Input.Key" /> in eine virtuelle Win32-Taste.</summary>
      <param name="key">Die zu konvertierende WPF.</param>
      <returns>Die virtuelle Win32-Taste.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Input.Key" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.String" />-Objekt in eine Instanz von <see cref="T:System.Windows.Input.Key" /> konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Input.Key" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Taste.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value">Die Zeichenfolge, die in ein <see cref="T:System.Windows.Input.Key" />-Element konvertiert werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Input.Key" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Input.Key" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Die Taste, die in eine Zeichenfolge konvertiert werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine invariante Zeichenfolgendarstellung der angegebenen <see cref="T:System.Windows.Input.Key" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>Gibt den Satz von Modifizierertasten an.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>Die ALT-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>Die CTRL-TASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>Es werden keine Modifizierer gedrückt.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>Die UMSCHALTTASTE.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>Die WINDOWS-TASTE.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary>Konvertiert ein <see cref="T:System.Windows.Input.ModifierKeys" />-Objekt in andere bzw. aus anderen Typen.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.ModifierKeysConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein Objekt des angegebenen Typs im angegebenen Kontext in eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> konvertiert werden kann.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="sourceType">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="sourceType" /> vom Typ <see cref="T:System.String" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> im angegebenen Kontext in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="destinationType">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, das angegebene Objekt im angegebenen Kontext in einen <see cref="T:System.Windows.Input.ModifierKeys" /> zu konvertieren.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
      <param name="source">Das zu konvertierende Objekt.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, einen <see cref="T:System.Windows.Input.ModifierKeys" /> im angegebenen Kontext in den angegebenen Typ zu konvertieren.</summary>
      <param name="context">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> entspricht keiner gültigen <see cref="T:System.Windows.Input.ModifierKeys" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary>Ermittelt, ob der angegebene Wert ein gültiger <see cref="T:System.Windows.Input.ModifierKeys" />-Wert ist.</summary>
      <param name="modifierKeys">Der Wert, der auf Gültigkeit überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Eingabe ein gültiger <see cref="T:System.Windows.Input.ModifierKeys" />-Wert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Input.ModifierKeys" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.String" />-Objekt in eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Input.ModifierKeys" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertenden Modifizierertasten.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert einen <see cref="T:System.String" /> in einen <see cref="T:System.Windows.Input.ModifierKeys" />-Wert.</summary>
      <param name="value">Die Zeichenfolge, die in ein <see cref="T:System.Windows.Input.ModifierKeys" />-Element konvertiert werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Input.ModifierKeys" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Die Taste, die in eine Zeichenfolge konvertiert werden soll.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine invariante Zeichenfolgendarstellung des angegebenen <see cref="T:System.Windows.Input.ModifierKeys" />-Werts.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary>Stellt eine Anforderung dar, den Fokus zu einem anderen Steuerelement zu verschieben</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.TraversalRequest" />-Klasse.</summary>
      <param name="focusNavigationDirection">Die vorgesehene Richtung des Fokusdurchlaufs als Wert der Enumeration.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary>Ruft die Durchlaufrichtung ab.</summary>
      <returns>Einer der Enumerationswerte der Durchlaufrichtung.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary>Ruft einen Wert ab, der angibt, ob der Fokusdurchlauf das Ende der untergeordneten Elemente erreicht hat, die den Fokus besitzen können, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn dieser Durchlauf das Ende der untergeordneten Elemente erreicht hat, die den Fokus besitzen können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary>Beschreibt die Breite, Höhe und Position eines ganzzahligen Rechtecks.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz eines <see cref="T:System.Windows.Int32Rect" /> mit der angegebenen <see cref="P:System.Windows.Int32Rect.X" />-Koordinate und der angegebenen <see cref="P:System.Windows.Int32Rect.Y" />-Koordinate sowie der angegebenen <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" />.</summary>
      <param name="x">Das <see cref="P:System.Windows.Int32Rect.X" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, das die x-Koordinate der oberen linken Ecke des Rechtecks angibt.</param>
      <param name="y">Das <see cref="P:System.Windows.Int32Rect.Y" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, das die y-Koordinate der oberen linken Ecke des Rechtecks angibt.</param>
      <param name="width">Die <see cref="P:System.Windows.Int32Rect.Width" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, die die Breite des Rechtecks angibt.</param>
      <param name="height">Die <see cref="P:System.Windows.Int32Rect.Height" /> der neuen <see cref="T:System.Windows.Int32Rect" />-Instanz, die die Höhe des Rechtecks angibt.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary>Ruft das leere Rechteck ab, einen besonderen Wert, der ein Rechteck ohne Position oder Bereich darstellt.</summary>
      <returns>Ein leeres Rechteck ohne Position oder Bereich.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Rechteck und dieses Rechteck gleich sind.</summary>
      <param name="o">Das Objekt, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="o" /> eine <see cref="T:System.Windows.Int32Rect" />-Struktur ist und dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> wie dieses Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary>Bestimmt, ob das angegebene Rechteck und dieses Rechteck gleich sind.</summary>
      <param name="value">Das Rechteck, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />,<see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> wie dieses Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Bestimmt, ob die angegebenen Rechtecke gleich sind.</summary>
      <param name="int32Rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="int32Rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="int32Rect1" /> und <paramref name="int32Rect2" /> über dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary>Erstellt einen Hashcode aus den Werten <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> dieses Rechtecks.</summary>
      <returns>Der Hashcode dieses Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" />-Eigenschaften von <see cref="T:System.Windows.Int32Rect" /> größer als 0 sind.</summary>
      <returns>
        <see langword="true" />, <see cref="P:System.Windows.Int32Rect.Width" /><see cref="P:System.Windows.Int32Rect.Height" /><see cref="T:System.Windows.Int32Rect" /> wenn die-Eigenschaft und die-Eigenschaft von größer als 0 sind, andernfalls. <see langword="false" /></returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary>Ruft die Höhe des Rechtecks ab oder legt diese fest.</summary>
      <returns>Die Höhe des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob das Rechteck leer ist.</summary>
      <returns>
        <see langword="true" />, wenn das Rechteck leer ist. <see langword="false" />andernfalls. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Vergleicht zwei Rechtecke auf genaue Übereinstimmung.</summary>
      <param name="int32Rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="int32Rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="int32Rect1" /> und <paramref name="int32Rect2" /> über dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Vergleicht zwei Rechtecke auf Ungleichheit.</summary>
      <param name="int32Rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="int32Rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>
        <see langword="false" />, wenn <paramref name="int32Rect1" /> und <paramref name="int32Rect2" /> dieselben Werte für <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> aufweisen. Wenn alle Werte jedoch gleich sind, dann <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary>Erstellt eine <see cref="T:System.Windows.Int32Rect" />-Struktur aus der angegebenen <see cref="T:System.String" />-Darstellung.</summary>
      <param name="source">Eine Zeichenfolgendarstellung eines <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns>Die entsprechende <see cref="T:System.Windows.Int32Rect" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Formatiert den Wert der aktuellen Instanz unter Verwendung des angegebenen Formats.</summary>
      <param name="format">Das zu verwendende Format.</param>
      <param name="provider">Der zum Formatieren des Werts zu verwendende Anbieter.</param>
      <returns>Der Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary>Erstellt eine Zeichenfolgendarstellung der <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>Eine Zeichenfolge, die dieselben Werte <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> und <see cref="P:System.Windows.Int32Rect.Height" /> wie diese <see cref="T:System.Windows.Int32Rect" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary>Erstellt auf der Grundlage des angegebenen <see cref="T:System.Windows.Int32Rect" /> eine Zeichenfolgendarstellung dieser <see cref="T:System.IFormatProvider" />.</summary>
      <param name="provider">Der zu verwendende Formatanbieter. Wenn der Anbieter auf <see langword="null" /> festgelegt ist, wird die aktuelle Kultur verwendet.</param>
      <returns>Eine Zeichenfolgendarstellung dieser Instanz von <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary>Ruft die Breite des Rechtecks ab bzw. legt diese fest.</summary>
      <returns>Die Breite des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary>Ruft die x-Koordinate der linken oberen Ecke des Rechtecks ab oder legt diese fest.</summary>
      <returns>Die x-Koordinate der linken oberen Ecke des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary>Ruft die y-Koordinate der linken oberen Ecke des Rechtecks ab oder legt diese fest.</summary>
      <returns>Die y-Koordinate der linken oberen Ecke des Rechtecks. Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary>Konvertiert Instanzen anderer Typen in bzw. aus einem <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Int32RectConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz eines <see cref="T:System.Windows.Int32Rect" /> konvertiert werden kann.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="sourceType">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" />, wenn der Typ in einen <see cref="T:System.Windows.Int32Rect" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Instanz eines <see cref="T:System.Windows.Int32Rect" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="destinationType">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Int32Rect" /> konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Int32Rect" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, den angegebenen Typ in einen <see cref="T:System.Windows.Int32Rect" /> zu konvertieren.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value">Das Objekt, das konvertiert wird.</param>
      <returns>Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException">Wird ausgelöst, wenn das angegebene Objekt NULL ist oder einen Typ aufweist, der nicht in einen <see cref="T:System.Windows.Int32Rect" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, einen <see cref="T:System.Windows.Int32Rect" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Windows.Int32Rect" />.</param>
      <param name="destinationType">Der Typ, in den die <see cref="T:System.Windows.Int32Rect" /> konvertiert werden soll.</param>
      <returns>Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Int32Rect" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException">Wird ausgelöst, wenn <paramref name="value" /><see langword="null" /> oder kein <see cref="T:System.Windows.Int32Rect" /> ist, oder wenn der <paramref name="destinationType" /> kein gültiger Typ für die Konvertierung ist.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary>Aktiviert in Interoperationsszenarios das freigegebene Steuerelement des Nachrichtenfilters zwischen Win32 und WPF.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary>Ruft die letzte ausgelöste Meldung ab.</summary>
      <returns>Die letzte Meldung.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary>Tritt auf, wenn ein Thread modal wird.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary>Ruft einen Wert ab, mit dem angegeben wird, ob der Thread modal ist.</summary>
      <returns>
        <see langword="true" />, wenn der Thread modal ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary>Tritt auf, wenn ein modaler Thread nicht modal wird.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary>Wird aufgerufen, um anzugeben, dass ein modaler Thread nicht mehr modal ist.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary>Wird aufgerufen, um anzugeben, dass der Thread modal ist.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary>Wird aufgerufen, um anzugeben, dass sich ein Thread im Leerlauf befindet.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary>Gibt an, dass eine neue Meldung behandelt werden kann.</summary>
      <param name="msg">Die Meldung und die ihr zugeordneten Daten.</param>
      <returns>
        <see langword="true" />, wenn eines der Module, das die Meldungsschleife überwacht, die Meldung verarbeitet hat. Der Besitzer der Meldungsschleife kann die Meldung ignorieren. <see langword="false" />, wenn die Meldung nicht verarbeitet wurde. In diesem Fall sollte der Besitzer des Nachrichtenfilters die Win32-Funktion TranslateMessage gefolgt von DispatchMessage aufrufen.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary>Tritt auf, wenn der Nachrichtenfilter eine Tastaturmeldung empfängt.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary>Tritt auf, wenn sich der Thread im Leerlauf befindet.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary>Tritt auf, wenn der Nachrichtenfilter eine Tastaturmeldung empfängt.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary>Stellt für Komponenten eine Tastatursenke bereit, die die Navigation mit der TAB-TASTE, Zugriffstasten und mnemonische Zeichen über Interoperabilitätsgrenzen hinweg und zwischen HWNDs verwaltet. Diese Schnittstelle implementiert die Verwaltung von Tastaturmeldungen in WPF-Win32-Interoperationsszenarios.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary>Ruft einen Wert ab, mit dem angegeben wird, ob die Senke oder eine der enthaltenen Komponenten den Fokus hat.</summary>
      <returns>
        <see langword="true" />, wenn die Senke oder eine der enthaltenen Komponenten den Fokus hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary>Ruft einen Verweis auf die <see cref="T:System.Windows.Interop.IKeyboardInputSite" />-Schnittstelle des Containers der Komponente ab oder legt diesen Verweis fest.</summary>
      <returns>Ein Verweis auf die <see cref="T:System.Windows.Interop.IKeyboardInputSite" />-Schnittstelle des Containers.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Wird aufgerufen, wenn eines der mnemonischen Zeichen (Zugriffstasten) dieser Senke aufgerufen wird.</summary>
      <param name="msg">Die Meldung für die mnemonischen und zugeordneten Daten. Ändern Sie diese Meldungsstruktur nicht. Es wird als Verweis und nur aus Leistungsgründen übergeben.</param>
      <param name="modifiers">Modifizierertasten.</param>
      <returns>
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Registriert die <see cref="T:System.Windows.Interop.IKeyboardInputSink" />-Schnittstelle einer enthaltenen Komponente.</summary>
      <param name="sink">Die <see cref="T:System.Windows.Interop.IKeyboardInputSink" />-Senke der enthaltenen Komponente.</param>
      <returns>Die <see cref="T:System.Windows.Interop.IKeyboardInputSite" />-Site der enthaltenen Komponente.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>Legt den Fokus auf den ersten oder letzten Tabstopp der Senke fest.</summary>
      <param name="request">Gibt an, ob der Fokus auf den ersten oder letzten Tabstopp festgelegt werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Fokus wie angefordert festgelegt wurde, <see langword="false" />,wenn keine Tabstopps vorhanden sind.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Verarbeitet Tastatureingaben auf der Ebene von Meldungen für gedrückte Tasten.</summary>
      <param name="msg">Die Meldung und die zugeordneten Daten. Ändern Sie diese Struktur nicht. Es wird als Verweis und nur aus Leistungsgründen übergeben.</param>
      <param name="modifiers">Modifizierertasten.</param>
      <returns>
        <see langword="true" />, wenn die Meldung durch die Implementierung der Methode behandelt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Verarbeitet die Eingabemeldungen WM_CHAR, WM_SYSCHAR, WM_DEADCHAR und WM_SYSDEADCHAR, bevor <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> aufgerufen wird.</summary>
      <param name="msg">Die Meldung und die zugeordneten Daten. Ändern Sie diese Struktur nicht. Es wird als Verweis und nur aus Leistungsgründen übergeben.</param>
      <param name="modifiers">Modifizierertasten.</param>
      <returns>
        <see langword="true" />, wenn die Meldung verarbeitet wurde und <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> nicht aufgerufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary>Verwaltet den Tastaturfokus innerhalb des Containers.  Diese Schnittstelle implementiert die Verwaltung von Tastaturmeldungen in WPF-Win32-Interoperationsszenarios.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary>Wird von einer enthaltenen Komponente aufgerufen, wenn der letzte Tabstopp erreicht wurde und keine weiteren Elemente vorhanden sind, zu denen mit der TAB-TASTE gewechselt werden kann.</summary>
      <param name="request">Gibt an, ob der Fokus auf den ersten oder letzten Tabstopp festgelegt werden soll.</param>
      <returns>Wenn diese Methode <see langword="true" /> zurückgibt, hat die Site den Fokus auf eine andere Komponente festgelegt. Wenn diese Methode <see langword="false" /> zurückgibt, befindet sich der Fokus weiterhin in der aufrufenden Komponente. Die Komponente sollte "umbrochen werden" und den Fokus auf ihren ersten enthaltenen Tabstopp festlegen.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary>Ruft die dieser Site zugeordnete Tastatursenke ab.</summary>
      <returns>
        <see cref="T:System.Windows.Interop.IKeyboardInputSink" />-Schnittstelle der aktuellen Site.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary>Hebt die Registrierung einer untergeordneten Tastatureingabesenke von dieser Site auf.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary>Enthält Meldungsinformationen aus der Meldungswarteschlange eines Threads.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary>Ruft das Fensterhandle (HWND) des Fensters ab, dessen Fensterprozedur die Meldung empfängt, oder legt dieses fest.</summary>
      <returns>Das Fensterhandle (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary>Ruft den <paramref name="lParam" />-Wert ab, der zusätzliche Informationen über die Meldung angibt, oder legt diesen fest. Die genaue Bedeutung hängt vom Wert des <see cref="P:System.Windows.Interop.MSG.message" />-Members ab.</summary>
      <returns>Der <paramref name="lParam" />-Wert für die Meldung.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary>Ruft die Meldungs-ID ab, oder legt diese fest.</summary>
      <returns>Der Meldungsbezeichner.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary>Ruft die x-Koordinate der Position des Mauszeigers auf dem Bildschirm beim Senden der Meldung ab, oder legt diese fest.</summary>
      <returns>Die x-Koordinate der Cursorposition.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary>Ruft die y-Koordinate der Position des Mauszeigers auf dem Bildschirm beim Senden der Meldung ab, oder legt diese fest.</summary>
      <returns>Die y-Koordinate der Cursorposition.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary>Ruft die Zeit ab, zu der die Meldung gesendet wurde, oder legt diese fest.</summary>
      <returns>Die Zeit, zu der die Meldung gesendet wurde.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary>Ruft den <paramref name="wParam" />-Wert für die Meldung ab, der zusätzliche Informationen über die Meldung angibt, oder legt diesen fest. Die genaue Bedeutung hängt vom Wert der Meldung ab.</summary>
      <returns>Der <paramref name="wParam" />-Wert für die Meldung.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />-Ereignis und das <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />-Ereignis behandelt.</summary>
      <param name="msg">Eine Struktur mit den Nachrichtendaten.</param>
      <param name="handled">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary>Unterstützt Klassen, die Ereignisse über das WeakEvent-Muster erwarten, bei der Überwachung von Ereignissen und stellt einen <see cref="T:System.Windows.WeakEventManager" /> bereit.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Empfängt Ereignisse vom zentralen Ereignis-Manager.</summary>
      <param name="managerType">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft.</param>
      <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e">Ereignisdaten.</param>
      <returns>
        <see langword="true" />, wenn das Ereignis vom Listener behandelt wurde. Das Registrieren eines Listeners für ein Ereignis, das vom Listener nicht behandelt wird, wird von der <see cref="T:System.Windows.WeakEventManager" />-Behandlung in WPF als Fehler angesehen. Die Methode sollte jedoch unabhängig davon <see langword="false" /> zurückgeben, wenn ein Ereignis empfangen wird, das nicht erkannt oder nicht behandelt werden kann.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary>Stellt einen Eigenschaftsbezeichner und den Eigenschaftswert für eine lokal festgelegte Abhängigkeitseigenschaft dar.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary>Stellt fest, ob zwei <see cref="T:System.Windows.LocalValueEntry" />-Instanzen gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.Windows.LocalValueEntry" />, das mit dem aktuellen <see cref="T:System.Windows.LocalValueEntry" /> verglichen werden soll.</param>
      <returns>Diese <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />-Implementierung vergleicht die Werte der <see cref="P:System.Windows.LocalValueEntry.Property" /> und vergleicht möglicherweise die Werte von <see cref="P:System.Windows.LocalValueEntry.Value" />. Die <see cref="P:System.Windows.LocalValueEntry.Property" />-Komponente eines <see cref="T:System.Windows.LocalValueEntry" /> ist ein Werttyp, daher wird immer ein bitweiser Vergleich ausgeführt. Für die <see cref="P:System.Windows.LocalValueEntry.Value" />-Komponente führt diese Implementierung einen bitweisen Vergleich aus, wenn es sich um einen Werttyp handelt. Für lokal festgelegte Eigenschaften mit Referenztypen wird das Verhalten in Bezug auf die Mechanismen zum Bestimmen der Gleichheit des betreffenden Typs verzögert, da der Operator == für die beiden Werte intern verwendet wird. Standardmäßig ergibt sich eine Verweisgleichheit der Werte, und damit wird die Gleichheit des gesamten <see cref="T:System.Windows.LocalValueEntry" /> zu einer Verweisgleichheit.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Windows.LocalValueEntry" /> zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahlwert mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Vergleicht die angegebenen <see cref="T:System.Windows.LocalValueEntry" />-Instanzen, um zu bestimmen, ob diese identisch sind.</summary>
      <param name="obj1">Die erste zu vergleichende Instanz.</param>
      <param name="obj2">Die zweite zu vergleichende Instanz.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="obj1" />-<see cref="T:System.Windows.LocalValueEntry" /> gleich dem <paramref name="obj2" />-<see cref="T:System.Windows.LocalValueEntry" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Vergleicht die angegebenen <see cref="T:System.Windows.LocalValueEnumerator" />-Instanzen, um zu bestimmen, ob diese unterschiedlich sind.</summary>
      <param name="obj1">Die erste zu vergleichende Instanz.</param>
      <param name="obj2">Die zweite zu vergleichende Instanz.</param>
      <returns>Diese Implementierung vergleicht die Werte der <see cref="P:System.Windows.LocalValueEntry.Property" />-Komponente und der <see cref="P:System.Windows.LocalValueEntry.Value" />-Komponente eines <see cref="T:System.Windows.LocalValueEntry" />. Die <see cref="P:System.Windows.LocalValueEntry.Property" />-Komponente eines <see cref="T:System.Windows.LocalValueEntry" /> ist immer ein Werttyp, daher handelt es sich bei diesem Verweis immer um einen bitweisen Vergleich. Für die <see cref="P:System.Windows.LocalValueEntry.Value" />-Komponente führt diese Implementierung einen bitweisen Vergleich aus, wenn es sich um einen Werttyp handelt.
Für lokal festgelegte Eigenschaften mit Referenztypen wird das Verhalten in Bezug auf die Mechanismen zum Bestimmen der Gleichheit des betreffenden Typs verzögert, da der Operator <see langword="==" /> für die beiden Werte intern verwendet wird. Standardmäßig ergibt sich damit eine Verweisgleichheit der Werte.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary>Ruft den Bezeichner für die lokal festgelegte Abhängigkeitseigenschaft ab, die durch diesen Eintrag dargestellt wird.</summary>
      <returns>Der Bezeichner für die lokal festgelegte Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary>Ruft den Wert der lokal festgelegten Abhängigkeitseigenschaft ab.</summary>
      <returns>Der Wert der lokal festgelegten Abhängigkeitseigenschaft als Objekt.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary>Bietet Enumerationsunterstützung für die lokalen Werte aller Abhängigkeitseigenschaften, die in einem <see cref="T:System.Windows.DependencyObject" /> vorhanden sind.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary>Ruft die Anzahl der in der Auflistung dargestellten Elemente ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary>Ruft das aktuelle Element in der Auflistung ab.</summary>
      <returns>Das aktuelle <see cref="T:System.Windows.LocalValueEntry" /> in der Auflistung.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary>Bestimmt, ob der bereitgestellte <see cref="T:System.Windows.LocalValueEnumerator" /> zu diesem <see cref="T:System.Windows.LocalValueEnumerator" /> äquivalent ist.</summary>
      <param name="obj">Das <see cref="T:System.Windows.LocalValueEnumerator" />, das mit dem aktuellen <see cref="T:System.Windows.LocalValueEnumerator" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.LocalValueEnumerator" /> gleich der aktuellen <see cref="T:System.Windows.LocalValueEnumerator" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary>Gibt einen Hashcode für den aktuellen <see cref="T:System.Windows.LocalValueEnumerator" /> zurück.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hash.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
      <returns>
        <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Vergleicht, ob zwei angegebene <see cref="T:System.Windows.LocalValueEnumerator" />-Objekte gleich sind.</summary>
      <param name="obj1">Das erste zu vergleichende Objekt.</param>
      <param name="obj2">Das zweite zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="obj1" />-<see cref="T:System.Windows.LocalValueEnumerator" /> gleich dem <paramref name="obj2" />-<see cref="T:System.Windows.LocalValueEnumerator" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Vergleicht zwei angegebene <see cref="T:System.Windows.LocalValueEnumerator" />-Objekte und ermittelt, ob diese ungleich sind.</summary>
      <param name="obj1">Das erste zu vergleichende Objekt.</param>
      <param name="obj2">Das zweite zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn die Instanzen ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Eine Beschreibung dieser Member finden Sie unter <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>Das aktuelle Element in der Auflistung.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary>Gibt an, wie eine Eigenschaft serialisiert werden soll.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary>Die Eigenschaft wird als Attribut serialisiert.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary>Gibt die Serialisierungsflags für eine Eigenschaft an.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />-Klasse.</summary>
      <param name="designerSerializationOptions">Gibt an, wie die Eigenschaft serialisiert werden soll.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="designerSerializationOptions" /> ist kein gültiger <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />-Wert.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary>Ruft die für das Attribut festgelegten <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> ab.</summary>
      <returns>Die Serialisierungsoption als Wert der Enumeration.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary>Eine vom WPF-XAML-Compiler intern verwendete abstrakte Klasse zum Unterstützen der Verwendung interner Typen.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.InternalTypeHelper" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>Fügt beim Überschreiben in einer abgeleiteten (generierten) Klasse einen Ereignishandlerdelegaten an ein internes Ereignis an.</summary>
      <param name="eventInfo">Die Ereignisinformationen für das Ereignis (CLR-Reflektionsinformationen).</param>
      <param name="target">Das Ziel, an das der Handler angefügt wird.</param>
      <param name="handler">Der Ereignishandler.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten (generierten) Klasse einen Ereignisdelegaten, der auf eine nicht öffentliche Handlermethode verweist.</summary>
      <param name="delegateType">Der <see cref="T:System.Type" /> des Delegaten.</param>
      <param name="target">Das Ziel, an das der Handler angefügt wird.</param>
      <param name="handler">Der Name der Handlerimplementierung.</param>
      <returns>Der Delegatverweis.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>Beim Überschreiben in einer abgeleiteten (generierten) Klasse wird eine Instanz eines internen Typs erstellt.</summary>
      <param name="type">Die zu erstellende <see cref="T:System.Type" />.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
      <returns>Die erstellte Instanz.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten (generierten) Klasse den Wert einer internen Eigenschaft für das Zielobjekt ab.</summary>
      <param name="propertyInfo">Eigenschafteninformationen für die abzurufende Eigenschaft.</param>
      <param name="target">Das Objekt, das den gewünschten Eigenschaftswert enthält.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
      <returns>Der Wert der Eigenschaft.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>Legt beim Überschreiben in einer abgeleiteten (generierten) Klasse den Wert einer internen Eigenschaft für das Zielobjekt fest.</summary>
      <param name="propertyInfo">Eigenschafteninformationen für die festzulegende Eigenschaft.</param>
      <param name="target">Das Objekt, das den gewünschten Eigenschaftswert enthält.</param>
      <param name="value">Der festzulegende Wert.</param>
      <param name="culture">Kulturspezifische Informationen.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary>Stellt einen Mechanismus bereit, mit dem Typen deklarieren können, dass sie einen Ausdruck (oder eine andere Klasse) von einer Markuperweiterung empfangen können, wobei die Ausgabe einen anderen Eigenschaftentyp als die Zieleigenschaft aufweist. Nicht in .NET Framework 4-Implementierungen verwenden.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Stellt die Behandlung für die Markuperweiterungen bereit, die Eigenschaftswerte bereitstellen. Nicht in .NET Framework 4-Implementierungen verwenden; siehe <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property">Der Name der Zieleigenschaft.</param>
      <param name="markupExtension">Die Instanz der Markuperweiterungen der eingehenden Daten.</param>
      <param name="serviceProvider">Kann zusätzliche Dienste bereitstellen, die beim Verarbeiten der Markuperweiterungsdaten für einen Eigenschaftswert ausgeführt werden sollen.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary>Abstrakte Klasse, die ein Objekt darstellt, das zum Navigieren durch eine Struktur von Objekten verwendet werden kann.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary>Weist beim Überschreiben in einer abgeleiteten Klasse einen Stammkontext für <see cref="T:System.Windows.Markup.ValueSerializer" />-Klassen zu.</summary>
      <param name="context">Der <see cref="T:System.Windows.Markup.IValueSerializerContext" />, dem ein Stammkontext zugewiesen werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Attribute ab, die dieser <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> zugeordnet sind.</summary>
      <returns>Die Auflistung der Attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die von diesem <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> dargestellte Instanz des Objekts ab.</summary>
      <returns>Die Instanz des Objekts.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ der <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />-Instanz ab.</summary>
      <returns>Der Typ des Objekts.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Eigenschaften dieser <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />-Instanz ab, die in XAML geschrieben werden sollen.</summary>
      <returns>Die Eigenschaften.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary>Abstrakte Klasse, die eine Eigenschaftenbeschreibung bereitstellt, die beim Schreiben in Markup verwendet werden kann, das den Zugriff auf Eigenschaften und deren Werte kapselt.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Attribute ab, die dieser <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> zugeordnet sind.</summary>
      <returns>Die Auflistung der Attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.Windows.DependencyProperty" />-Bezeichner für die Markupeigenschaft ab, wenn die Eigenschaft als Abhängigkeitseigenschaft implementiert wird.</summary>
      <returns>Der Bezeichner der Abhängigkeitseigenschaft.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> eine angefügte <see cref="T:System.Windows.DependencyProperty" /> ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft eine angefügte <see cref="T:System.Windows.DependencyProperty" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> eine zusammengesetzte Eigenschaft ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Eigenschaft eine zusammengesetzte Eigenschaft ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ein Konstruktorargument darstellt.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft ein Konstruktorargument darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> den direkten Inhalt einer Auflistung darstellt.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft direkten Inhalt darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> den Schlüssel darstellt, den das <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> zum Speichern des Elements in einem Wörterbuch verwendet.</summary>
      <returns>
        <see langword="true" />, wenn diese Eigenschaft einen Schlüssel darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> Text darstellt, der an einen Typkonverter übergeben wird, um eine Instanz der Eigenschaft zu erstellen, oder ob ein Konstruktor verwendet werden sollte.</summary>
      <returns>
        <see langword="true" />, wenn diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> eine Zeichenfolge darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Elemente ab, aus denen sich der Wert dieser Eigenschaft zusammensetzt.</summary>
      <returns>Die Elemente, die den Wert dieser Eigenschaft bilden.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Namen ab, der für Diagnosen und Fehlerberichte verwendet wird.</summary>
      <returns>Der Eigenschaftenname des Bezeichners.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.ComponentModel.PropertyDescriptor" /> für die Markupeigenschaft ab.</summary>
      <returns>Der Eigenschaftendeskriptor.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den CLR-Typ der Eigenschaft ab.</summary>
      <returns>Der CLR-Typ.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Zeichenfolgenwert dieser <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ab.</summary>
      <returns>Der Zeichenfolgenwert.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Satz von Typen ab, auf den diese <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> beim Serialisieren des zugehörigen Werts als Zeichenfolge verweist.</summary>
      <returns>Der Satz von Typen.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den aktuellen Wert dieses <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ab.</summary>
      <returns>Der aktuelle Wert.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary>Stellt eine Implementierung für die <see cref="T:System.IServiceProvider" />-Schnittstelle mit Methoden bereit, die das Hinzufügen von Diensten aktivieren.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ServiceProviders" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary>Fügt der Liste einen Dienst hinzu.</summary>
      <param name="serviceType">Der Diensttyp des neuen Diensts.</param>
      <param name="service">Eine Implementierungsklasse des Diensts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> oder <paramref name="service" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Es wurde versucht, einen Dienst hinzuzufügen, der im Wörterbuch bereits vorhanden ist.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary>Ruft das Dienstobjekt des angegebenen Typs ab.</summary>
      <param name="serviceType">Der Typ des abzurufenden Dienstobjekts.</param>
      <returns>Eine Dienstimplementierung für den Typ <paramref name="serviceType" />. Kann <see langword="null" /> sein, wenn es für den Typ <paramref name="serviceType" /> keinen gespeicherten Dienst gibt.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary>Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.Windows.Media.Matrix" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob ein angegebener <see cref="T:System.String" /> in eine Instanz von <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Zeichenfolge.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn der Wert konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Media.Matrix" /> in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Instanz von <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Tritt auf, wenn <paramref name="value" /> keine <see cref="T:System.Windows.Media.Int32Collection" /> ist.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert ein <see cref="T:System.String" />-Element in ein <see cref="T:System.Windows.Media.Matrix" />-Element.</summary>
      <param name="value">Der in eine <see cref="T:System.String" /> zu konvertierende <see cref="T:System.Windows.Media.Matrix" />-Wert.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine neue Instanz von <see cref="T:System.Windows.Media.Matrix" /> anhand des angegebenen <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Media.Matrix" /> in einen <see cref="T:System.String" />.</summary>
      <param name="value">Die für die Konvertierung auszuwertende Instanz von <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns>Eine <see cref="T:System.String" />-Darstellung des angegebenen <see cref="T:System.Windows.Media.Matrix" />-Objekts.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary>Ermöglicht WPF-Anwendungen das Deaktivieren der Berücksichtigung von DPI (Dots per Inch)-Einstellungen für alle Benutzeroberflächenelemente.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary>Stellt eine affine 3x3-Transformationsmatrix dar, die für Transformationen im zweidimensionalen Raum verwendet wird.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="m11">Der <see cref="P:System.Windows.Media.Matrix.M11" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="m12">Der <see cref="P:System.Windows.Media.Matrix.M12" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="m21">Der <see cref="P:System.Windows.Media.Matrix.M21" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="m22">Der <see cref="P:System.Windows.Media.Matrix.M22" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="offsetX">Der <see cref="P:System.Windows.Media.Matrix.OffsetX" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="offsetY">Der <see cref="P:System.Windows.Media.Matrix.OffsetY" />-Koeffizient der neuen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary>Fügt die angegebene <see cref="T:System.Windows.Media.Matrix" />-Struktur an diese <see cref="T:System.Windows.Media.Matrix" />-Struktur an.</summary>
      <param name="matrix">Die an diese <see cref="T:System.Windows.Media.Matrix" />-Struktur anzufügende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary>Ruft die Determinante der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab.</summary>
      <returns>Die Determinante der <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> eine <see cref="T:System.Windows.Media.Matrix" />-Struktur ist, die mit der <see cref="T:System.Windows.Media.Matrix" /> identisch ist.</summary>
      <param name="o">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="o" /> eine <see cref="T:System.Windows.Media.Matrix" />-Struktur ist, die mit dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur identisch ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Media.Matrix" />-Struktur mit dieser Instanz identisch ist.</summary>
      <param name="value">Die Instanz von <see cref="T:System.Windows.Media.Matrix" />, die mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Media.Matrix" />-Strukturen identisch sind.</summary>
      <param name="matrix1">Die erste zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="matrix2">Die zweite zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="matrix1" /> und <paramref name="matrix2" /> identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Windows.Media.Matrix" />-Struktur zurück.</summary>
      <returns>Der Hashcode für diese Instanz.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Media.Matrix" />-Struktur invertierbar ist.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Media.Matrix" /> über eine Inverse verfügt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary>Ruft eine Identitäts-<see cref="T:System.Windows.Media.Matrix" /> ab.</summary>
      <returns>Eine Identitätsmatrix.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary>Invertiert die <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Media.Matrix" />-Struktur ist nicht invertierbar.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Identitätsmatrix ist.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Identitätsmatrix ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>Ruft den Wert der ersten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns>Der Wert der ersten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />. Der Standardwert ist 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary>Ruft den Wert der ersten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns>Der Wert der ersten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary>Ruft den Wert der zweiten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns>Der Wert der zweiten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>Ruft den Wert der zweiten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns>Der Wert der zweiten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur. Der Standardwert ist 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Multipliziert eine <see cref="T:System.Windows.Media.Matrix" />-Struktur mit einer anderen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="trans1">Die erste zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="trans2">Die zweite zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns>Das Ergebnis der Multiplikation von <paramref name="trans1" /> mit <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>Ruft den Wert der dritten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns>Der Wert der dritten Zeile und ersten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>Ruft den Wert der dritten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur ab oder legt diesen fest.</summary>
      <returns>Der Wert der dritten Zeile und zweiten Spalte der <see cref="T:System.Windows.Media.Matrix" />-Struktur. Der Standardwert ist 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Media.Matrix" />-Strukturen identisch sind.</summary>
      <param name="matrix1">Die erste zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="matrix2">Die zweite zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="matrix1" /> und <paramref name="matrix2" /> identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Media.Matrix" />-Strukturen nicht identisch sind.</summary>
      <param name="matrix1">Die erste zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="matrix2">Die zweite zu vergleichende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="matrix1" /> und <paramref name="matrix2" /> nicht identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Multipliziert eine <see cref="T:System.Windows.Media.Matrix" />-Struktur mit einer anderen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="trans1">Die erste zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <param name="trans2">Die zweite zu multiplizierende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
      <returns>Das Ergebnis der Multiplikation von <paramref name="trans1" /> mit <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary>Konvertiert eine <see cref="T:System.String" />-Darstellung einer Matrix in die entsprechende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="source">Die <see cref="T:System.String" />-Darstellung der Matrix.</param>
      <returns>Die entsprechende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary>Stellt dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur die angegebene <see cref="T:System.Windows.Media.Matrix" />-Struktur voran.</summary>
      <param name="matrix">Die dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur voranzustellende <see cref="T:System.Windows.Media.Matrix" />-Struktur.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary>Wendet eine Drehung im angegebenen Winkel um den Ursprung dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur an.</summary>
      <param name="angle">Der Rotationswinkel.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary>Dreht die Matrix um den angegebenen Punkt.</summary>
      <param name="angle">Der Winkel in Grad, um den die Matrix gedreht wird.</param>
      <param name="centerX">Die x-Koordinate des Punkts, um den die Matrix gedreht wird.</param>
      <param name="centerY">Die y-Koordinate des Punkts, um den die Matrix gedreht wird.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary>Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Drehung um den angegebenen Winkel an dem angegebenen Punkt voran.</summary>
      <param name="angle">Der Drehungswinkel in Grad.</param>
      <param name="centerX">Die x-Koordinate des Mittelpunkts der Drehung.</param>
      <param name="centerY">Die y-Koordinate des Mittelpunkts der Drehung.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary>Stellt dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Drehung mit dem angegebenen Winkel voran.</summary>
      <param name="angle">Der Winkel der voranzustellenden Drehung.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary>Fügt den angegebenen Skalierungsvektor an diese <see cref="T:System.Windows.Media.Matrix" />-Struktur an.</summary>
      <param name="scaleX">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse skaliert werden soll.</param>
      <param name="scaleY">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse skaliert werden soll.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary>Skaliert die <see cref="T:System.Windows.Media.Matrix" /> um den angegebenen Betrag um den angegebenen Punkt.</summary>
      <param name="scaleX">Der Betrag, um den die <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse skaliert werden soll.</param>
      <param name="scaleY">Der Betrag, um den die <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse skaliert werden soll.</param>
      <param name="centerX">Die x-Koordinate des Mittelpunkts der Skalierung.</param>
      <param name="centerY">Die y-Koordinate des Mittelpunkts der Skalierung.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary>Stellt der <see cref="T:System.Windows.Media.Matrix" /> die angegebene Skalierung auf dem angegebenen Punkt voran.</summary>
      <param name="scaleX">Der Skalierungsfaktor für die x-Achse.</param>
      <param name="scaleY">Der Skalierungsfaktor für die y-Achse.</param>
      <param name="centerX">Die x-Koordinate des Punkts, auf dem die Skalierung ausgeführt wird.</param>
      <param name="centerY">Die y-Koordinate des Punkts, auf dem die Skalierung ausgeführt wird.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary>Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur den angegebenen Skalierungsvektor voran.</summary>
      <param name="scaleX">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" />-Struktur auf der x-Achse skaliert werden soll.</param>
      <param name="scaleY">Der Wert, mit dem die <see cref="T:System.Windows.Media.Matrix" />-Struktur auf der y-Achse skaliert werden soll.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary>Ändert die <see cref="T:System.Windows.Media.Matrix" />-Struktur in eine Identitätsmatrix.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary>Fügt an die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Neigung mit den angegebenen Grad in der x- und y-Dimension an.</summary>
      <param name="skewX">Der Neigungswinkel in der x-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">Der Neigungswinkel in der y-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary>Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Neigung mit den angegebenen Grad in der x- und y-Dimension voran.</summary>
      <param name="skewX">Der Neigungswinkel in der x-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">Der Neigungswinkel in der y-Dimension für die <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Formatiert den Wert der aktuellen Instanz unter Verwendung des angegebenen Formats.</summary>
      <param name="format">Das zu verwendende Format.
- oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn das für den Typ der <see cref="T:System.IFormattable" /> -Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider">Der zum Formatieren des Werts zu verwendende Anbieter.

oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns>Der Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary>Erstellt eine <see cref="T:System.String" />-Darstellung dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Werte für <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> und <see cref="P:System.Windows.Media.Matrix.OffsetY" /> der <see cref="T:System.Windows.Media.Matrix" /> enthält.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary>Erstellt eine <see cref="T:System.String" />-Darstellung dieser <see cref="T:System.Windows.Media.Matrix" />-Struktur mit kulturspezifischen Formatierungsinformationen.</summary>
      <param name="provider">Die kulturspezifischen Formatierungsinformationen.</param>
      <returns>Ein <see cref="T:System.String" />, der die Werte für <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> und <see cref="P:System.Windows.Media.Matrix.OffsetY" /> der <see cref="T:System.Windows.Media.Matrix" /> enthält.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>Transformiert den angegebenen Punkt mit der <see cref="T:System.Windows.Media.Matrix" /> und gibt das Ergebnis zurück.</summary>
      <param name="point">Der zu transformierende Punkt.</param>
      <returns>Das Ergebnis der Transformation von <paramref name="point" /> mit der <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary>Transformiert die angegebenen Punkte mit dieser <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points">Die zu transformierenden Punkte. Die ursprünglichen Punkte im Array werden durch ihre transformierten Werte ersetzt.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary>Transformiert den angegebenen Vektor mit dieser <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Der zu transformierende Vektor.</param>
      <returns>Das Ergebnis der Transformation von <paramref name="vector" /> mit der <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary>Transformiert die angegebenen Vektoren mit dieser <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors">Die zu transformierenden Vektoren. Die ursprünglichen Vektoren im Array werden durch ihre transformierten Werte ersetzt.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary>Fügt an die <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Verschiebung um die angegebenen Offsets an.</summary>
      <param name="offsetX">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse.</param>
      <param name="offsetY">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary>Stellt der <see cref="T:System.Windows.Media.Matrix" />-Struktur eine Verschiebung um die angegebenen Offsets voran.</summary>
      <param name="offsetX">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der x-Achse.</param>
      <param name="offsetY">Der Betrag für den Offset der <see cref="T:System.Windows.Media.Matrix" /> auf der y-Achse.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary>Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Media.Matrix" />-Objekt.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein Objekt von einem bestimmten Typ in eine Instanz einer <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann.</summary>
      <param name="context">Die Kontextinformationen eines Typs.</param>
      <param name="sourceType">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Instanz einer <see cref="T:System.Windows.Media.Matrix" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context">Die Kontextinformationen eines Typs.</param>
      <param name="destinationType">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Media.Matrix" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Media.Matrix" /> zu konvertieren.</summary>
      <param name="context">Die Kontextinformationen eines Typs.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" /> des Typs, der konvertiert wird.</param>
      <param name="value">Das Objekt, das konvertiert wird.</param>
      <returns>Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException">Das angegebene Objekt ist NULL oder von einem Typ, der nicht in eine <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, eine <see cref="T:System.Windows.Media.Matrix" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context">Die Kontextinformationen eines Typs.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" /> des Typs, der konvertiert wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="destinationType">Der Typ, in den die <see cref="T:System.Windows.Media.Matrix" /> konvertiert werden soll.</param>
      <returns>Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Media.Matrix" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException">Der <paramref name="value" /> ist NULL oder keine <see cref="T:System.Windows.Media.Matrix" />, oder der <paramref name="destinationType" /> ist kein gültiger Konvertierungstyp.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary>Definiert die von der <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Klasse unterstützten Formatierungsmethoden.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary>Gibt an, dass das <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Objekt GDI-kompatible Schriftarteigenschaften für das Layout von Text verwendet.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary>Gibt an, dass das <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Objekt ideale Schriftarteigenschaften für das Layout von Text verwendet.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary>Implementiert WPF-Basisunterstützung für die <see cref="T:System.Windows.Markup.INameScope" />-Methoden zum Speichern oder Abrufen von Name-Objekt-Zuordnungen in einem bestimmten XAML-Namensbereich. Fügt Unterstützung für angefügte Eigenschaften hinzu, damit Namen im XAML-Namensbereich auf Elementebene leichter dynamisch abgerufen oder festgelegt werden können.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.NameScope" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Fügt der Auflistung ein Element hinzu.</summary>
      <param name="item">Ein <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />), das die Namenszuordnung darstellt, die dem XAML-NameScope hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">Eine oder beide Komponenten von <paramref name="item" /> sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary>Fügt der Auflistung ein Element hinzu.</summary>
      <param name="key">Der Zeichenfolgenschlüssel, der den Namen der Zuordnung für den XAML-Namescope darstellt, die hinzugefügt werden soll.</param>
      <param name="value">Der Objektwert, der den Objektverweis der Zuordnung für den XAML-Namescope darstellt, die hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Bestimmt, ob die Auflistung ein angegebenes Element enthält.</summary>
      <param name="item">Das Element, das in der Auflistung gesucht werden soll, angegeben als <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />).</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> eine vorhandene Zuordnung in diesem <see cref="T:System.Windows.NameScope" /> identifiziert. <see langword="false" />, wenn der angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> im aktuellen <see cref="T:System.Windows.NameScope" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary>Gibt zurück, ob ein angegebener Name bereits in diesem <see cref="T:System.Windows.NameScope" /> vorhanden ist.</summary>
      <param name="key">Der zu suchende Zeichenfolgenschlüssel.</param>
      <returns>
        <see langword="true" />, wenn der angegebene <paramref name="key" /> einen Namen für eine vorhandene Zuordnung in diesem <see cref="T:System.Windows.NameScope" /> identifiziert. <see langword="false" />, wenn der angegebene <paramref name="key" /> im aktuellen <see cref="T:System.Windows.NameScope" /> nicht vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus der Auflistung kopierten Elemente darstellt. Das Array muss eine nullbasierte Indizierung aufweisen.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung zugeordneter Namen in diesem <see cref="T:System.Windows.NameScope" /> zurück.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary>Gibt das einer angegebenen Namenszeichenfolge entsprechende Objekt im XAML-Namensbereich zurück, das von diesem <see cref="T:System.Windows.NameScope" /> verwaltet wird.</summary>
      <param name="name">Der Namensteil einer vorhandenen Zuordnung, für den der Objektteil abgerufen werden soll.</param>
      <returns>Das angeforderte Objekt, das <paramref name="name" /> zugeordnet ist. Kann <see langword="null" /> zurückgeben, wenn <see langword="null" /> oder leere Zeichenfolge für <paramref name="name" /> bereitgestellt wurde oder wenn kein übereinstimmendes Objekt gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary>Stellt den get-Accessor für die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft bereit.</summary>
      <param name="dependencyObject">Das Objekt, aus dem der XAML-Namensbereich abgerufen werden soll.</param>
      <returns>Ein XAML-Namensbereich als <see cref="T:System.Windows.Markup.INameScope" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <param name="key">Der Zeichenfolgenname für die XAML-Namenszuordnung, die abgerufen oder festgelegt werden soll.</param>
      <returns>Der Wert des Objekts, das vom XAML-Namen zugeordnet wird, angegeben als <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> wird als <see langword="null" /> bereitgestellt.
- oder -
<paramref name="value" /> wird als <see langword="null" /> für einen Set-Vorgang bereitgestellt.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary>Ruft eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Schlüssel ab.</summary>
      <returns>Eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Schlüssel.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary>Ruft dynamisch angefügte <see cref="T:System.Windows.NameScope" />-Instanzen ab oder legt diese fest.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary>Bezeichnet die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary>Registriert ein neues Name/Objekt-Paar beim aktuellen XAML-Namensbereich.</summary>
      <param name="name">Der Name, der zum Zuordnen des angegebenen Objekts verwendet werden soll.</param>
      <param name="scopedElement">Das Objekt, das dem angegebenen Namen zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="scopedElement" /> wurde als <see langword="null" /> bereitgestellt.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> wurde als leere Zeichenfolge bereitgestellt.
- oder -
Der bereitgestellte <paramref name="name" /> wurde vom Parser abgelehnt, da er Zeichen enthält, die für XAML-Namen ungültig sind
- oder -
Der bereitgestellte <paramref name="name" /> würde zu einer doppelten Namensregistrierung führen.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Entfernt das spezifische Objekt aus der Auflistung.</summary>
      <param name="item">Das Objekt, das aus der Auflistung entfernt werden soll, angegeben als <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (der Schlüssel ist <see cref="T:System.String" />, der Wert ist <see cref="T:System.Object" />).</param>
      <returns>
        <see langword="true" />, wenn das Element erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />. Gibt auch dann <see langword="false" /> zurück, wenn das Element nicht in der Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary>Entfernt eine Zuordnung für einen angegebenen Namen aus der Auflistung.</summary>
      <param name="key">Der Zeichenfolgenschlüssel, der den Namen der Zuordnung für den XAML-Namescope darstellt, die entfernt werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Element erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />. Gibt auch dann <see langword="false" /> zurück, wenn das Element nicht in der Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary>Stellt die Set-Zugriffsmethode für die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft bereit.</summary>
      <param name="dependencyObject">Objekt, für das der XAML-Namensbereich geändert werden soll.</param>
      <param name="value">Der neue XAML-Namensbereich über eine Schnittstellenumwandlung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein Enumerator, der eine Auflistung durchläuft.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein Enumerator, der eine Auflistung durchläuft.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary>Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</summary>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Wenn diese Methode beendet wird, enthält sie den Wert, der dem angegebenen Schlüssel zugeordnet ist; wenn der Schlüssel nicht gefunden wird, enthält die Methode ein NULL-Objekt. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Windows.NameScope" /> eine Zuordnung für den Namen enthält, der als <paramref name="key" /> angegeben wurde. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary>Entfernt eine Name-Objekt-Zuordnung aus dem XAML-Namensbereich.</summary>
      <param name="name">Der Name der zu entfernenden Zuordnung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> wurde als leere Zeichenfolge angegeben.
- oder -
Der angegebene <paramref name="name" /> wurde nicht registriert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary>Ruft eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Werte ab.</summary>
      <returns>Eine Auflistung aller im <see cref="T:System.Windows.NameScope" />-Wörterbuch enthaltenen Werte.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary>Repräsentiert ein X-/Y-Koordinatenpaar in einem zweidimensionalen Raum.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>Erstellt eine neue <see cref="T:System.Windows.Point" />-Struktur, die die angegebenen Koordinaten enthält.</summary>
      <param name="x">Die x-Koordinate der neuen <see cref="T:System.Windows.Point" />-Struktur.</param>
      <param name="y">Die y-Koordinate der neuen <see cref="T:System.Windows.Point" />-Struktur.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary>Addiert eine <see cref="T:System.Windows.Vector" />-Struktur und eine <see cref="T:System.Windows.Point" />-Struktur und gibt das Ergebnis als <see cref="T:System.Windows.Point" />-Struktur zurück.</summary>
      <param name="point">Die zu addierende <see cref="T:System.Windows.Point" />-Struktur.</param>
      <param name="vector">Die zu addierende <see cref="T:System.Windows.Vector" />-Struktur.</param>
      <returns>Gibt die Summe von <paramref name="point" /> und <paramref name="vector" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> ein <see cref="T:System.Windows.Point" /> ist und ob es dieselben Koordinaten enthält wie dieser <see cref="T:System.Windows.Point" />.</summary>
      <param name="o">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Point" /> ist dieselben Werte für <see cref="P:System.Windows.Point.X" /> und <see cref="P:System.Windows.Point.Y" /> enthält wie dieser <see cref="T:System.Windows.Point" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Gleichheit.</summary>
      <param name="value">Der Punkt, der mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn beide <see cref="T:System.Windows.Point" />-Strukturen dieselben Werte für <see cref="P:System.Windows.Point.X" /> und <see cref="P:System.Windows.Point.Y" /> enthalten, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary>Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Gleichheit.</summary>
      <param name="point1">Der erste zu vergleichende Punkt.</param>
      <param name="point2">Der zweite zu vergleichende Punkt.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="point1" /> und <paramref name="point2" /> dieselben Werte für <see cref="P:System.Windows.Point.X" /> und <see cref="P:System.Windows.Point.Y" /> aufweisen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Windows.Point" /> zurück.</summary>
      <returns>Der Hashcode für diese <see cref="T:System.Windows.Point" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Transformiert die angegebene <see cref="T:System.Windows.Point" />-Struktur mit der angegebenen <see cref="T:System.Windows.Media.Matrix" />-Struktur.</summary>
      <param name="point">Der zu transformierende Punkt.</param>
      <param name="matrix">Die Transformationsmatrix.</param>
      <returns>Der transformierte Punkt.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary>Verschiebt die <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Koordinaten eines Punkts um die angegebenen Werte.</summary>
      <param name="offsetX">Der Betrag, um den die <see cref="P:System.Windows.Point.X" />-Koordinate des Punkts versetzt werden soll.</param>
      <param name="offsetY">Der Betrag, um den die <see cref="P:System.Windows.Point.Y" />-Koordinate des Punkts versetzt werden soll.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary>Verschiebt den angegebenen <see cref="T:System.Windows.Point" /> um den angegebenen <see cref="T:System.Windows.Vector" /> und gibt das Ergebnis zurück.</summary>
      <param name="point">Der zu verschiebende Punkt.</param>
      <param name="vector">Der Betrag, um den <paramref name="point" /> verschoben werden soll.</param>
      <returns>Das Ergebnis aus der Verschiebung des angegebenen Punkts um den angegebenen Vektor.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Gleichheit.</summary>
      <param name="point1">Die erste zu vergleichende <see cref="T:System.Windows.Point" />-Struktur.</param>
      <param name="point2">Die zweite zu vergleichende <see cref="T:System.Windows.Point" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn sowohl die <see cref="P:System.Windows.Point.X" />-Koordinaten als auch die <see cref="P:System.Windows.Point.Y" />-Koordinaten von <paramref name="point1" /> und <paramref name="point2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary>Erstellt eine <see cref="T:System.Windows.Size" />-Struktur, deren <see cref="P:System.Windows.Size.Width" /> gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Size.Height" /> gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</summary>
      <param name="point">Der zu konvertierende Punkt.</param>
      <returns>Eine <see cref="T:System.Windows.Size" />-Struktur, deren <see cref="P:System.Windows.Size.Width" /> gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Size.Height" /> gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary>Erstellt eine <see cref="T:System.Windows.Vector" />-Struktur, deren <see cref="P:System.Windows.Vector.X" />-Wert gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Vector.Y" />-Wert gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</summary>
      <param name="point">Der zu konvertierende Punkt.</param>
      <returns>Ein Vektor, dessen <see cref="P:System.Windows.Vector.X" />-Wert gleich dem <see cref="P:System.Windows.Point.X" />-Wert und deren <see cref="P:System.Windows.Vector.Y" />-Wert gleich dem <see cref="P:System.Windows.Point.Y" />-Wert dieses Punkts ist.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>Vergleicht zwei <see cref="T:System.Windows.Point" />-Strukturen auf Ungleichheit.</summary>
      <param name="point1">Der erste zu vergleichende Punkt.</param>
      <param name="point2">Der zweite zu vergleichende Punkt.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="point1" /> und <paramref name="point2" /> unterschiedliche <see cref="P:System.Windows.Point.X" />- oder <see cref="P:System.Windows.Point.Y" />-Koordinaten aufweisen. <see langword="false" />, wenn <paramref name="point1" /> und <paramref name="point2" /> dieselben <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Koordinaten haben.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Transformiert den angegebenen <see cref="T:System.Windows.Point" /> mit der angegebenen <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="point">Der zu transformierende Punkt.</param>
      <param name="matrix">Die Transformationsmatrix.</param>
      <returns>Das Ergebnis aus der Transformation des angegebenen Punkts mit der angegebenen Matrix.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary>Subtrahiert den angegebenen <see cref="T:System.Windows.Point" /> von einem anderen angegebenen <see cref="T:System.Windows.Point" /> und gibt die Differenz als <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="point1">Der Punkt, von dem <paramref name="point2" /> subtrahiert wird.</param>
      <param name="point2">Der Punkt, der von <paramref name="point1" /> subtrahiert wird.</param>
      <returns>Die Differenz zwischen <paramref name="point1" /> und <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary>Subtrahiert den angegebenen <see cref="T:System.Windows.Vector" /> vom angegebenen <see cref="T:System.Windows.Point" /> und gibt den resultierenden <see cref="T:System.Windows.Point" /> zurück.</summary>
      <param name="point">Der Punkt, von dem <paramref name="vector" /> subtrahiert wird.</param>
      <param name="vector">Der Vektor, der von <paramref name="point1" /> subtrahiert wird.</param>
      <returns>Die Differenz zwischen <paramref name="point" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary>Erstellt eine <see cref="T:System.Windows.Point" /> aus der angegebenen <see cref="T:System.String" />.</summary>
      <param name="source">Eine Zeichenfolgendarstellung eines Punkts.</param>
      <returns>Die entsprechende <see cref="T:System.Windows.Point" />-Struktur.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="source" /> besteht nicht aus zwei durch Komma oder Leerzeichen getrennten Double-Werten.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> enthält nicht zwei Zahlen.
- oder -
<paramref name="source" /> enthält zu viele Trennzeichen.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary>Subtrahiert den angegebenen <see cref="T:System.Windows.Point" /> von einem anderen angegebenen <see cref="T:System.Windows.Point" /> und gibt die Differenz als <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="point1">Der Punkt, von dem <paramref name="point2" /> subtrahiert wird.</param>
      <param name="point2">Der Punkt, der von <paramref name="point1" /> subtrahiert wird.</param>
      <returns>Die Differenz zwischen <paramref name="point1" /> und <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary>Subtrahiert den angegebenen <see cref="T:System.Windows.Vector" /> vom angegebenen <see cref="T:System.Windows.Point" /> und gibt den resultierenden <see cref="T:System.Windows.Point" /> zurück.</summary>
      <param name="point">Der Punkt, von dem <paramref name="vector" /> subtrahiert wird.</param>
      <param name="vector">Der <paramref name="vector" />, der von <paramref name="point" /> subtrahiert wird.</param>
      <returns>Die Differenz zwischen <paramref name="point" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format">Die Zeichenfolge, die das zu verwendende Format angibt.
- oder -
<see langword="null" />, wenn das für diese Art der <see cref="T:System.IFormattable" />-Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider">Der zum Formatieren des Werts zu verwendende <see langword="IFormatProvider" />.

oder -
<see langword="null" />, wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns>Eine Zeichenfolge mit dem Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>Erstellt eine <see cref="T:System.String" />-Darstellung dieses <see cref="T:System.Windows.Point" />.</summary>
      <returns>Ein <see cref="T:System.String" /> mit den <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Werten dieser <see cref="T:System.Windows.Point" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>Erstellt eine <see cref="T:System.String" />-Darstellung dieses <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider">Kulturspezifische Formatierungsinformationen.</param>
      <returns>Ein <see cref="T:System.String" /> mit den <see cref="P:System.Windows.Point.X" />- und <see cref="P:System.Windows.Point.Y" />-Werten dieser <see cref="T:System.Windows.Point" />-Struktur.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>Ruft den <see cref="P:System.Windows.Point.X" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur ab oder legt den Wert fest.</summary>
      <returns>Der <see cref="P:System.Windows.Point.X" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur.  Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>Ruft den <see cref="P:System.Windows.Point.Y" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur ab oder legt den Wert fest.</summary>
      <returns>Der <see cref="P:System.Windows.Point.Y" />-Koordinatenwert dieser <see cref="T:System.Windows.Point" />-Struktur.  Der Standardwert ist <c>0</c>(null).</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary>Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Point" />-Objekt.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PointConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz einer <see cref="T:System.Windows.Point" /> konvertiert werden kann.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="sourceType">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Point" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Instanz einer <see cref="T:System.Windows.Point" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="destinationType">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Point" /> konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Point" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Point" /> zu konvertieren.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value">Das Objekt, das konvertiert wird.</param>
      <returns>Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException">Wird ausgelöst, wenn das angegebene Objekt NULL oder von einem Typ ist, der nicht in eine <see cref="T:System.Windows.Point" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, eine <see cref="T:System.Windows.Point" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture">Kulturinformationen, die während der Konvertierung beachtet werden müssen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Windows.Point" />.</param>
      <param name="destinationType">Der Typ, in den die <see cref="T:System.Windows.Point" /> konvertiert werden soll.</param>
      <returns>Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Point" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException">Wird ausgelöst, wenn <paramref name="value" /> is <see langword="null" /> oder keine <see cref="T:System.Windows.Point" /> ist, oder wenn der <paramref name="destinationType" /> kein gültiger Typ für die Konvertierung ist.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>Stellt den Rückruf dar, der aufgerufen wird, wenn der effektive Eigenschaftswert einer Abhängigkeitseigenschaft geändert wird.</summary>
      <param name="d">Das <see cref="T:System.Windows.DependencyObject" />, für das der Wert der Eigenschaft geändert wurde.</param>
      <param name="e">Ereignisdaten, die von jedem Ereignis ausgegeben werden, das Änderungen am tatsächlichen Wert dieser Eigenschaft nachverfolgt.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>Definiert bestimmte Verhaltensaspekte einer Abhängigkeitseigenschaft beim Anwenden für einen bestimmten Typ, einschließlich Bedingungen, mit denen sie registriert wurde.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit einem angegebenen Standardwert für die Abhängigkeitseigenschaft, auf die diese Metadaten angewendet werden.</summary>
      <param name="defaultValue">Der anzugebende Standardwert für die Abhängigkeitseigenschaft, der normalerweise als Wert eines bestimmten Typs angegeben wird.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> kann nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit dem angegebenen Standardwert und dem angegebenen <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierungsverweis.</summary>
      <param name="defaultValue">Der Standardwert für die Abhängigkeitseigenschaft, der normalerweise als Wert eines bestimmten Typs angegeben wird.</param>
      <param name="propertyChangedCallback">Verweis auf eine Handlerimplementierung, die vom Eigenschaftensystem aufgerufen werden muss, wenn der effektive Wert der Eigenschaft geändert wird.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> kann nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit dem angegebenen Standardwert und den angegebenen Rückrufen.</summary>
      <param name="defaultValue">Der Standardwert für die Abhängigkeitseigenschaft, der normalerweise als Wert eines bestimmten Typs angegeben wird.</param>
      <param name="propertyChangedCallback">Verweis auf eine Handlerimplementierung, die vom Eigenschaftensystem aufgerufen werden muss, wenn der effektive Wert der Eigenschaft geändert wird.</param>
      <param name="coerceValueCallback">Verweis auf eine Handlerimplementierung, die aufgerufen werden muss, wenn das Eigenschaftensystem <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> für diese Eigenschaft aufruft.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> kann nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyMetadata" />-Klasse mit dem angegebenen <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierungsverweis.</summary>
      <param name="propertyChangedCallback">Verweis auf eine Handlerimplementierung, die vom Eigenschaftensystem aufgerufen werden muss, wenn der effektive Wert der Eigenschaft geändert wird.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary>Ruft einen Verweis auf eine in diesen Metadaten angegebene <see cref="T:System.Windows.CoerceValueCallback" />-Implementierung ab oder legt diese fest.</summary>
      <returns>Ein Verweis auf eine <see cref="T:System.Windows.CoerceValueCallback" />-Implementierung.</returns>
      <exception cref="T:System.InvalidOperationException">Kann nach der Anwendung auf eine Abhängigkeitseigenschaftsoperation keine Metadateneigenschaft festlegen.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary>Ruft den Standardwert der Abhängigkeitseigenschaft ab oder legt diesen fest.</summary>
      <returns>Der Standardwert der Eigenschaft. Der Standardwert für eine <see cref="T:System.Windows.PropertyMetadata" /> -Instanz, die mit dem Parameter losen Konstruktor erstellt <see cref="F:System.Windows.DependencyProperty.UnsetValue" />wird, ist.</returns>
      <exception cref="T:System.ArgumentException">Kann nach der Erstellung nicht auf den Wert <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> festgelegt werden.</exception>
      <exception cref="T:System.InvalidOperationException">Kann nach der Anwendung auf eine Abhängigkeitseigenschaftsoperation keine Metadateneigenschaft festlegen.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary>Ruft einen Wert ab, der bestimmt, ob die Metadaten auf eine Eigenschaft angewendet wurden, wodurch die betreffende Metadateninstanz als unveränderlich festgelegt wurde.</summary>
      <returns>
        <see langword="true" />, wenn die Metadateninstanz unveränderlich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>Führt diese Metadaten mit den Basismetadaten zusammen.</summary>
      <param name="baseMetadata">Die Basismetadaten, die mit den Werten dieser Instanz zusammengeführt werden sollen.</param>
      <param name="dp">Die Abhängigkeitseigenschaft, auf die diese Metadaten angewendet werden.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>Wird aufgerufen, wenn diese Metadaten auf eine Eigenschaft angewendet wurden. Dies gibt an, dass die Metadaten versiegelt wurden.</summary>
      <param name="dp">Die Abhängigkeitseigenschaft, auf die die Metadaten angewendet wurden.</param>
      <param name="targetType">Der diesen Metadaten zugeordnete Typ, wenn es sich um typspezifische Metadaten handelt. Wenn es sich dabei um die Standardmetadaten handelt, ist dieser Wert ein NULL-Verweis.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary>Ruft einen Verweis auf eine in diesen Metadaten angegebene <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung ab oder legt diese fest.</summary>
      <returns>Ein Verweis auf eine <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung.</returns>
      <exception cref="T:System.InvalidOperationException">Kann nach der Anwendung auf eine Abhängigkeitseigenschaftsoperation keine Metadateneigenschaft festlegen.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>Beschreibt die Breite, Höhe und Position eines Rechtecks.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur, mit der angegebenen x-Koordinate, y-Koordinate, Breite und Höhe.</summary>
      <param name="x">Die x-Koordinate der linken oberen Ecke des Rechtecks.</param>
      <param name="y">Die y-Koordinate der linken oberen Ecke des Rechtecks.</param>
      <param name="width">Die Breite des Rechtecks.</param>
      <param name="height">Die Höhe des Rechtecks.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="width" /> ist eine negativer Wert.
- oder -
<paramref name="height" /> ist eine negativer Wert.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur, die genau die erforderliche Größe hat, um die beiden angegebenen Punkte einzuschließen.</summary>
      <param name="point1">Der erste Punkt, den das neue Rechteck enthalten muss.</param>
      <param name="point2">Der zweite Punkt, den das neue Rechteck enthalten muss.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur mit der angegebenen Position der oberen linken Ecke und der angegebenen Breite und Höhe.</summary>
      <param name="location">Ein Punkt, der die Position der linken oberen Ecke des Rechtecks angibt.</param>
      <param name="size">Eine <see cref="T:System.Windows.Size" />-Struktur, die die Breite und Höhe des Rechtecks angibt.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur, die genau die erforderliche Größe hat, um den angegebenen Punkt und die Summe aus dem angegebenen Punkt und dem angegebenen Vektor einzuschließen.</summary>
      <param name="point">Der erste Punkt, den das Rechteck enthalten muss.</param>
      <param name="vector">Der Betrag, um den der angegebene Punkt verschoben werden soll. Das sich ergebende Rechteck weist genau die erforderliche Größe auf, um beide Punkte einzuschließen.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Rect" />-Struktur mit der angegebenen Größe an der Position (0,0).</summary>
      <param name="size">Eine <see cref="T:System.Windows.Size" />-Struktur, die die Breite und Höhe des Rechtecks angibt.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>Ruft den y-Achsen-Wert des unteren Rands des Rechtecks ab.</summary>
      <returns>Der y-Achsen-Wert des unteren Rands des Rechtecks. Wenn das Rechteck leer ist, ist der Wert <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary>Ruft die Position der linken unteren Ecke des Rechtecks ab.</summary>
      <returns>Die Position der linken unteren Ecke des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary>Ruft die Position der rechten unteren Ecke des Rechtecks ab.</summary>
      <returns>Die Position der rechten unteren Ecke des Rechtecks.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary>Gibt an, ob das Rechteck die angegebene x- und y-Koordinate enthält.</summary>
      <param name="x">Die x-Koordinate des Punkts, der überprüft werden soll.</param>
      <param name="y">Die y-Koordinate des Punkts, der überprüft werden soll.</param>
      <returns>
        <see langword="true" /> wenn (<paramref name="x" />, <paramref name="y" />) im Rechteck enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>Gibt an, ob das Rechteck den angegebenen Punkt enthält.</summary>
      <param name="point">Der zu überprüfende Punkt.</param>
      <returns>
        <see langword="true" />, wenn das Rechteck den angegebenen Punkt enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary>Gibt an, ob das Rechteck das angegebene Rechteck enthält.</summary>
      <param name="rect">Das zu überprüfende Rechteck.</param>
      <returns>
        <see langword="true" /> wenn <paramref name="rect" /> vollständig im Rechteck enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>Ruft einen besonderen Wert ab, der ein Rechteck ohne Position oder Bereich darstellt.</summary>
      <returns>Das leere Rechteck, dessen <see cref="P:System.Windows.Rect.X" />-Eigenschaftswert und <see cref="P:System.Windows.Rect.Y" />-Eigenschaftswert <see cref="F:System.Double.PositiveInfinity" /> sind und dessen <see cref="P:System.Windows.Rect.Width" />-Eigenschaftswert und <see cref="P:System.Windows.Rect.Height" />-Eigenschaftswert <see cref="F:System.Double.NegativeInfinity" /> sind.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>Gibt an, ob das angegebene Objekt und das aktuelle Rechteck gleich sind.</summary>
      <param name="o">Das Objekt, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Rect" /> ist und den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert wie das aktuelle Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>Gibt an, ob as angegebene Rechteck und das aktuelle Rechteck gleich sind.</summary>
      <param name="value">Das Rechteck, mit dem das aktuelle Rechteck verglichen werden soll.</param>
      <returns>
        <see langword="true" />, das angegebene Rechteck den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert wie das aktuelle Rechteck aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary>Gibt an, ob die angegebenen Rechtecke gleich sind.</summary>
      <param name="rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>
        <see langword="true" />, wenn die Rechtecke über den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>Erstellt einen Hashcode für das Rechteck.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.Windows.Rect" />-Struktur.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>Ruft die Höhe des Rechtecks ab oder legt diese fest.</summary>
      <returns>Eine positive Zahl, die die Höhe des Rechtecks darstellt. Der Standard ist 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Rect.Height" /> ist auf einen negativen Wert festgelegt.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Height" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary>Erweitert oder verkleinert das Rechteck mithilfe der angegebenen Breite und Höhe in alle Richtungen.</summary>
      <param name="width">Der Betrag, um den die linke und die rechte Seite des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <param name="height">Der Betrag, um den der obere und der untere Rand des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <exception cref="T:System.InvalidOperationException">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary>Erstellt ein Rechteck, das sich beim Erweitern oder Verkleinern des angegebenen Rechtecks um die angegebenen Beträge für Breite und Höhe in alle Richtungen ergibt.</summary>
      <param name="rect">Die zu ändernde <see cref="T:System.Windows.Rect" />-Struktur.</param>
      <param name="width">Der Betrag, um den die linke und die rechte Seite des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <param name="height">Der Betrag, um den der obere und der untere Rand des Rechtecks erweitert oder verkleinert werden sollen.</param>
      <returns>Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> ist ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary>Gibt das Rechteck zurück, das sich beim Erweitern des angegebenen Rechtecks um die angegebene <see cref="T:System.Windows.Size" /> in alle Richtungen ergibt.</summary>
      <param name="rect">Die zu ändernde <see cref="T:System.Windows.Rect" />-Struktur.</param>
      <param name="size">Gibt den Betrag an, um den das Rechteck erweitert werden soll. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Width" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Left" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Right" />-Eigenschaft des Rechtecks erhöht werden sollen. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Height" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Top" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Bottom" />-Eigenschaft des Rechtecks erhöht werden sollen.</param>
      <returns>Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> ist ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary>Erweitert das Rechteck mithilfe der angegebenen <see cref="T:System.Windows.Size" /> in alle Richtungen.</summary>
      <param name="size">Gibt den Betrag an, um den das Rechteck erweitert werden soll. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Width" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Left" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Right" />-Eigenschaft des Rechtecks erhöht werden sollen. Die <see cref="T:System.Windows.Size" />-Eigenschaft der <see cref="P:System.Windows.Size.Height" />-Struktur gibt den Betrag an, um den die <see cref="P:System.Windows.Rect.Top" />-Eigenschaft und die <see cref="P:System.Windows.Rect.Bottom" />-Eigenschaft des Rechtecks erhöht werden sollen.</param>
      <exception cref="T:System.InvalidOperationException">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>Sucht die Schnittfläche des aktuellen Rechtecks und des angegebenen Rechtecks und speichert das Ergebnis als das aktuelle Rechteck.</summary>
      <param name="rect">Das Rechteck, das eine Schnittfläche mit dem aktuellen Rechteck bildet.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary>Gibt die Schnittfläche der angegebenen Rechtecke zurück.</summary>
      <param name="rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>Die Schnittmenge der beiden Rechtecke oder <see cref="P:System.Windows.Rect.Empty" />, wenn keine Schnittmenge vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary>Gibt an, ob sich das angegebene Rechteck mit dem aktuellen Rechteck überschneidet.</summary>
      <param name="rect">Das zu überprüfende Rechteck.</param>
      <returns>
        <see langword="true" />, wenn sich das angegebene Rechteck mit dem aktuellen Rechteck überschneidet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob das Rechteck das <see cref="P:System.Windows.Rect.Empty" />-Rechteck ist.</summary>
      <returns>
        <see langword="true" />, wenn das Rechteck das <see cref="P:System.Windows.Rect.Empty" />-Rechteck ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>Ruft den x-Achsen-Wert des linken Rands des Rechtecks ab.</summary>
      <returns>Der x-Achsen-Wert des linken Rands des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary>Ruft die Position der linken oberen Ecke des Rechtecks ab oder legt diese fest.</summary>
      <returns>Die Position der linken oberen Ecke des Rechtecks. Der Standardwert ist (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Location" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary>Verschiebt das Rechteck horizontal und vertikal um den jeweils angegebenen Betrag.</summary>
      <param name="offsetX">Der Betrag, um den das Rechteck horizontal verschoben werden soll.</param>
      <param name="offsetY">Der Betrag, um den das Rechteck vertikal verschoben werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary>Gibt ein Rechteck zurück, das im Bezug auf das angegebene Rechteck um den angegebenen horizontalen und vertikalen Betrag versetzt ist.</summary>
      <param name="rect">Das zu verschiebende Rechteck.</param>
      <param name="offsetX">Der horizontale Offset für das neue Rechteck.</param>
      <param name="offsetY">Der vertikale Offset für das neue Rechteck.</param>
      <returns>Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> ist <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary>Gibt ein Rechteck zurück, das im Bezug auf das angegebene Rechteck um den angegebenen Vektor versetzt ist.</summary>
      <param name="rect">Das ursprüngliche Rechteck.</param>
      <param name="offsetVector">Ein Vektor, der den horizontalen und den vertikalen Offset für das neue Rechteck angibt.</param>
      <returns>Das sich ergebende Rechteck.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> ist <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary>Verschiebt das Rechteck um den angegebenen Vektor.</summary>
      <param name="offsetVector">Ein Vektor, der die Beträge angibt, um die das Rechteck horizontal und vertikal verschoben werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Diese Methode wird für das <see cref="P:System.Windows.Rect.Empty" />-Rechteck aufgerufen.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Vergleicht zwei Rechtecke auf genaue Übereinstimmung.</summary>
      <param name="rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>
        <see langword="true" />, wenn die Rechtecke über den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Vergleicht zwei Rechtecke auf Ungleichheit.</summary>
      <param name="rect1">Das erste der zu vergleichenden Rechtecke.</param>
      <param name="rect2">Das zweite der zu vergleichenden Rechtecke.</param>
      <returns>
        <see langword="true" />, wenn die Rechtecke nicht über den gleichen <see cref="P:System.Windows.Rect.Location" />-Wert und <see cref="P:System.Windows.Rect.Size" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary>Erstellt ein neues Rechteck aus der angegebenen Zeichenfolgendarstellung.</summary>
      <param name="source">Die Zeichenfolgendarstellung des Rechtecks im Format "x, y, Breite, Höhe".</param>
      <returns>Das sich ergebende Rechteck.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>Ruft den x-Achsen-Wert des rechten Rands des Rechtecks ab.</summary>
      <returns>Der x-Achsen-Wert des rechten Rands des Rechtecks.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary>Multipliziert die Größe des aktuellen Rechtecks mit dem angegeben x-Wert und y-Wert.</summary>
      <param name="scaleX">Der Skalierungsfaktor in x-Richtung.</param>
      <param name="scaleY">Der Skalierungsfaktor in y-Richtung.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary>Ruft die Höhe und Breite des Rechtecks ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Windows.Size" />-Struktur, die die Breite und Höhe des Rechtecks angibt.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Size" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Formatiert den Wert der aktuellen Instanz mit dem angegebenen Format.</summary>
      <param name="format">Das zu verwendende Format.
- oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn das für den Typ der <see cref="T:System.IFormattable" /> -Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider">Der zum Formatieren des Werts zu verwendende Anbieter.
- oder -
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns>Eine Zeichenfolgendarstellung des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>Ruft die y-Achsen-Position des oberen Rands des Rechtecks ab.</summary>
      <returns>Die y-Achsen-Position des oberen Rands des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary>Ruft die Position der linken oberen Ecke des Rechtecks ab.</summary>
      <returns>Die Position der linken oberen Ecke des Rechtecks.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary>Ruft die Position der rechten oberen Ecke des Rechtecks ab.</summary>
      <returns>Die Position der rechten oberen Ecke des Rechtecks.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung des Rechtecks zurück.</summary>
      <returns>Eine Zeichenfolgendarstellung des aktuellen Rechtecks. Die Zeichenfolge weist das folgende Format auf: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>Gibt mithilfe des angegebenen Formatanbieters eine Zeichenfolgendarstellung des Rechtecks zurück.</summary>
      <param name="provider">Kulturspezifische Formatierungsinformationen.</param>
      <returns>Eine Zeichenfolgendarstellung des aktuellen Rechtecks, die vom angegebenen Formatanbieter bestimmt wird.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary>Transformiert das Rechteck durch Anwenden der angegebenen Matrix.</summary>
      <param name="matrix">Eine Matrix, die die anzuwendende Transformation angibt.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary>Gibt das Rechteck zurück, das sich durch das Anwenden der angegebenen Matrix auf das angegebene Rechteck ergibt.</summary>
      <param name="rect">Ein Rechteck, das die Grundlage für die Transformation darstellt.</param>
      <param name="matrix">Eine Matrix, die die anzuwendende Transformation angibt.</param>
      <returns>Das Rechteck, das sich aus der Operation ergibt.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>Erweitert das aktuelle Rechteck genau so weit, dass es den angegebenen Punkt einschließt.</summary>
      <param name="point">Der einzuschließende Punkt.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>Erweitert das aktuelle Rechteck genau so weit, dass es das angegebene Rechteck einschließt.</summary>
      <param name="rect">Das einzuschließende Rechteck.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary>Erstellt ein Rechteck, das genau groß genug ist, um das angegebene Rechteck und den angegebenen Punkt einzuschließen.</summary>
      <param name="rect">Das einzuschließende Rechteck.</param>
      <param name="point">Der einzuschließende Punkt.</param>
      <returns>Ein Rechteck, das genau groß genug ist, um das angegebene Rechteck und den angegebenen Punkt einzuschließen.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary>Erstellt ein Rechteck, das genau groß genug ist, um die beiden angegebenen Rechtecke einzuschließen.</summary>
      <param name="rect1">Das erste einzuschließende Rechteck.</param>
      <param name="rect2">Das zweite einzuschließende Rechteck.</param>
      <returns>Das sich ergebende Rechteck.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>Ruft die Breite des Rechtecks ab bzw. legt diese fest.</summary>
      <returns>Eine positive Zahl, die die Breite des Rechtecks darstellt. Der Standard ist 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Rect.Width" /> ist auf einen negativen Wert festgelegt.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Width" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>Ruft den x-Achsen-Wert des linken Rands des Rechtecks ab oder legt ihn fest.</summary>
      <returns>Der x-Achsen-Wert des linken Rands des Rechtecks.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.X" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>Ruft den y-Achsen-Wert des oberen Rands des Rechtecks ab oder legt ihn fest.</summary>
      <returns>Der y-Achsen-Wert des oberen Rands des Rechtecks.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Y" /> ist auf ein <see cref="P:System.Windows.Rect.Empty" />-Rechteck festgelegt.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary>Konvertiert Instanzen anderer Typen in bzw. aus Instanzen von <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.RectConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein Objekt von einem angegebenen Typ in eine Instanz von <see cref="T:System.Windows.Rect" /> konvertiert werden kann.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="sourceType">Der Typ der Quelle, die für die Konvertierung ausgewertet wird.</param>
      <returns>
        <see langword="true" />, wenn der Typ in eine <see cref="T:System.Windows.Rect" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob ein <see cref="T:System.Windows.Rect" /> in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="destinationType">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Rect" /> konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn ein <see cref="T:System.Windows.Rect" /> in <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, das angegebene Objekt in eine <see cref="T:System.Windows.Rect" /> zu konvertieren.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture">Kulturinformationen, die beim Konvertieren beachtet werden müssen.</param>
      <param name="value">Das Objekt, das konvertiert wird.</param>
      <returns>Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException">Wird ausgelöst, wenn das angegebene Objekt NULL oder von einem Typ ist, der nicht in eine <see cref="T:System.Windows.Rect" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, einen <see cref="T:System.Windows.Rect" /> in den angegebenen Typ zu konvertieren.</summary>
      <param name="context">Stellt erforderliche Kontextinformationen für die Konvertierung bereit.</param>
      <param name="culture">Kulturinformationen, die während der Konvertierung beachtet werden.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Windows.Rect" />.</param>
      <param name="destinationType">Der Typ, in den die <see cref="T:System.Windows.Rect" /> konvertiert werden soll.</param>
      <returns>Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Rect" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ist <see langword="null" />.

oder -
<paramref name="value" /> ist keine <see cref="T:System.Windows.Rect" />.

- oder -
Der <paramref name="destinationType" /> ist kein gültiger Typ für die Konvertierung.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary>Implementiert eine Struktur, die zum Beschreiben der <see cref="T:System.Windows.Size" /> eines Objekts verwendet wird.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Size" />-Struktur und weist dieser eine ursprüngliche <paramref name="width" /> und <paramref name="height" /> zu.</summary>
      <param name="width">Die Ausgangsbreite der Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="height">Die Ausgangshöhe der Instanz von <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>Ruft einen Wert ab, der eine statische leere <see cref="T:System.Windows.Size" /> darstellt.</summary>
      <returns>Eine leere Instanz von <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>Vergleicht ein Objekt mit einer Instanz von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="o">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn die Größen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>Vergleicht einen Wert mit einer Instanz von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="value">Die Größe, die mit dieser aktuellen Instanz von <see cref="T:System.Windows.Size" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Instanzen von <see cref="T:System.Windows.Size" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary>Prüft zwei Instanzen von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="size1">Die erste zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="size2">Die zweite zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <returns>
        <see langword="true" />, wenn die Instanzen von <see cref="T:System.Windows.Size" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>Ruft den Hashcode für diese Instanz von <see cref="T:System.Windows.Size" /> ab.</summary>
      <returns>Der Hashcode für diese Instanz von <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>Ruft die <see cref="P:System.Windows.Size.Height" /> dieser Instanz von <see cref="T:System.Windows.Size" /> ab oder legt diese fest.</summary>
      <returns>Die <see cref="P:System.Windows.Size.Height" /> dieser Instanz von <see cref="T:System.Windows.Size" />. Der Standard ist 0. Der Wert kann nicht negativ sein.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob diese Instanz von <see cref="T:System.Windows.Size" /> gleich <see cref="P:System.Windows.Size.Empty" /> ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Instanz der Größe <see cref="P:System.Windows.Size.Empty" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>Prüft zwei Instanzen von <see cref="T:System.Windows.Size" /> auf Gleichheit.</summary>
      <param name="size1">Die erste zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="size2">Die zweite zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <returns>
        <see langword="true" />, wenn die zwei Instanzen von <see cref="T:System.Windows.Size" /> identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Size" /> explizit in eine Instanz von <see cref="T:System.Windows.Point" />.</summary>
      <param name="size">Der zu konvertierende <see cref="T:System.Windows.Size" />-Wert.</param>
      <returns>Eine <see cref="T:System.Windows.Point" />-Struktur, deren Wert gleich dieser Instanz von <see cref="T:System.Windows.Size" /> ist.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary>Konvertiert eine Instanz von <see cref="T:System.Windows.Size" /> explizit in eine Instanz von <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size">Der zu konvertierende <see cref="T:System.Windows.Size" />-Wert.</param>
      <returns>Eine <see cref="T:System.Windows.Vector" />-Struktur, deren Wert gleich dieser Instanz von <see cref="T:System.Windows.Size" /> ist.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Windows.Size" /> auf Ungleichheit.</summary>
      <param name="size1">Die erste zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <param name="size2">Die zweite zu vergleichende Instanz von <see cref="T:System.Windows.Size" />.</param>
      <returns>
        <see langword="true" />, wenn die Instanzen von <see cref="T:System.Windows.Size" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary>Gibt eine Instanz von <see cref="T:System.Windows.Size" /> eines konvertierten <see cref="T:System.String" /> zurück.</summary>
      <param name="source">Ein <see cref="T:System.String" />-Wert, der in einen <see cref="T:System.Windows.Size" />-Wert analysiert werden soll.</param>
      <returns>Eine Instanz von <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Dieser Typ oder Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="format">Das zu verwendende Format.</param>
      <param name="provider">Der zum Formatieren des Werts zu verwendende Anbieter.</param>
      <returns>Der Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>Gibt einen <see cref="T:System.String" /> zurück, der dieses <see cref="T:System.Windows.Size" />-Objekt darstellt.</summary>
      <returns>Ein <see cref="T:System.String" />, der die Breite, gefolgt von der Höhe, angibt.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary>Gibt einen <see cref="T:System.String" /> zurück, der diese Instanz von <see cref="T:System.Windows.Size" /> darstellt.</summary>
      <param name="provider">Ein Objekt, das eine Möglichkeit zum Steuern der Formatierung bietet.</param>
      <returns>Ein <see cref="T:System.String" />, der dieses <see cref="T:System.Windows.Size" />-Objekt darstellt.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>Ruft die <see cref="P:System.Windows.Size.Width" /> dieser Instanz von <see cref="T:System.Windows.Size" /> ab oder legt diese fest.</summary>
      <returns>Die <see cref="P:System.Windows.Size.Width" /> dieser Instanz von <see cref="T:System.Windows.Size" />. Der Standardwert ist <c>0</c>(null). Der Wert kann nicht negativ sein.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary>Konvertiert Instanzen anderer Typen in bzw. aus Instanzen der <see cref="T:System.Windows.Size" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.SizeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Klasse aus einem angegebenen Typ in eine Instanz von <see cref="T:System.Windows.Size" /> konvertiert werden kann.</summary>
      <param name="context">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="sourceType">Bezeichnet den Datentyp, der für die Konvertierung ausgewertet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="sourceType" /> in eine Instanz von <see cref="T:System.Windows.Size" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Size" /> in einen anderen Typ konvertiert werden kann.</summary>
      <param name="context">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="destinationType">Bezeichnet den Datentyp, der für die Konvertierung ausgewertet werden soll.</param>
      <returns>
        <see langword="true" />, wenn diese Instanz von <see cref="T:System.Windows.Size" /> in den <paramref name="destinationType" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Versucht, ein angegebenes Objekt in eine Instanz von <see cref="T:System.Windows.Size" /> zu konvertieren.</summary>
      <param name="context">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="culture">Kulturspezifische Informationen, die bei der Konvertierung berücksichtigt werden sollten.</param>
      <param name="value">Das Quellobjekt, das konvertiert wird.</param>
      <returns>Die Instanz von <see cref="T:System.Windows.Size" />, die aus der konvertierten <paramref name="source" /> erstellt wird.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Versucht, eine Instanz von <see cref="T:System.Windows.Size" /> in einen angegebenen Typ zu konvertieren.</summary>
      <param name="context">Stellt Kontextinformationen zu einer Komponente bereit.</param>
      <param name="culture">Kulturspezifische Informationen, die bei der Konvertierung berücksichtigt werden sollten.</param>
      <param name="value">Die Instanz von <see cref="T:System.Windows.Size" />, um zu konvertieren.</param>
      <param name="destinationType">Der Typ, in den diese Instanz von <see cref="T:System.Windows.Size" /> konvertiert wird.</param>
      <returns>Das Objekt, das aus der konvertierten Instanz von <see cref="T:System.Windows.Size" /> erstellt wird.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ist <see langword="null" /> oder ist keine Instanz von <see cref="T:System.Windows.Size" />, oder wenn der <paramref name="destinationType" /> keiner der gültigen Zieltypen ist.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary>Stellt einen Startbildschirm für eine WPF (Windows Presentation Foundation)-Anwendung bereit.</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse mit der angegebenen Ressourcenassembly.</summary>
      <param name="resourceAssembly">Die Assembly, die die eingebettete Ressource enthält.</param>
      <param name="resourceName">Der Name der eingebetteten Ressource.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse mit der angegebenen Ressource.</summary>
      <param name="resourceName">Der Name der eingebetteten Ressource.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary>Schließt den Begrüßungsbildschirm.</summary>
      <param name="fadeoutDuration">Eine <see cref="T:System.TimeSpan" />, die angibt, nach welcher Zeitspanne der Begrüßungsbildschirm nach dem Initiieren des Schließvorgangs ausgeblendet wird.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary>Zeigt den Begrüßungsbildschirm an.</summary>
      <param name="autoClose">
        <see langword="true" />, damit der Begrüßungsbildschirm automatisch geschlossen wird, <see langword="false" />, wenn der Begrüßungsbildschirm manuell geschlossen werden soll.</param>
      <exception cref="T:System.IO.IOException">Die im Konstruktor angegebene Ressource konnte nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary>Zeigt den Begrüßungsbildschirm an.</summary>
      <param name="autoClose">
        <see langword="true" />, damit der Begrüßungsbildschirm automatisch geschlossen wird, <see langword="false" />, wenn der Begrüßungsbildschirm manuell geschlossen werden soll.</param>
      <param name="topMost">
        <see langword="true" />, wenn das Fenster für den Begrüßungsbildschirm den WS_EX_TOPMOST-Stil verwenden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>Stellt Dienste zum Verwalten der Warteschlange von Arbeitselementen für einen Thread bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten für den Thread aus, für den der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</summary>
      <param name="method">Der Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten und der angegebenen Priorität für den Thread aus, für den der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</summary>
      <param name="method">Der Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method">Der Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität und dem angegebenen Argument auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die ein Argument erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg">Das Objekt, das als Argument an die angegebene Methode übergeben wird.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität und dem angegebenen Argumentarray auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg">Das Objekt, das als Argument an die angegebene Methode übergeben wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange steht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> ist keine gültige Priorität.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary>Initiiert ein asynchrones Beenden des <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority">Die Priorität, bei der mit dem Beenden des Verteilers begonnen wird.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>Bestimmt, ob der aufrufende Thread diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <returns>
        <see langword="true" />, wenn der aufrufende Thread diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary>Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> für den derzeit ausgeführten Thread ab bzw. erstellt einen neuen, wenn dem Thread noch kein <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <returns>Der Verteiler, der dem aktuellen Thread zugeordnet ist.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary>Deaktiviert Verarbeitung der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange.</summary>
      <returns>Eine Struktur, mit der die Dispatcherverarbeitung wieder aktiviert wird.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary>Anforderung zum Beenden aller Frames einschließlich geschachtelter Frames.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> für den angegebenen Thread ab.</summary>
      <param name="thread">Der Thread, dessen <see cref="T:System.Windows.Threading.Dispatcher" /> abgerufen werden soll.</param>
      <returns>Der Verteiler für <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary>Bestimmt, ob der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung abgeschlossen hat.</summary>
      <returns>
        <see langword="true" />, wenn der Verteiler die Beendigung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary>Bestimmt, ob der <see cref="T:System.Windows.Threading.Dispatcher" /> gerade beendet wird.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> gerade beendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary>Ruft die Auflistung von Hooks ab, die zusätzliche Ereignisinformationen zum <see cref="T:System.Windows.Threading.Dispatcher" /> bereitstellen.</summary>
      <returns>Die Hooks, die diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet sind.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</param>
      <param name="timeout">Die minimale Zeitspanne, die auf den Start des Vorgangs gewartet wird.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary>Führt den angegebenen Delegaten synchron mit den angegebenen Argumenten für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary>Führt den angegebenen Delegaten in der angegebenen Zeitspanne mit der angegebenen Priorität und den angegebenen Argumenten synchron für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="timeout">Die maximale Zeitspanne, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Führt den angegebenen Delegaten in der angegebenen Zeitspanne mit der angegebenen Priorität und den angegebenen Argumenten synchron für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="timeout">Die maximale Zeitspanne, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="method">Ein Delegat für eine Methode, die in <paramref name="args" /> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen. Kann <see langword="null" /> sein.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Führt den angegebenen Delegaten synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Führt den angegebenen Delegaten mit der angegebenen Priorität und dem angegebenen Argument synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die ein Argument erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary>Führt den angegebenen Delegaten synchron mit der angegebenen Priorität und dem angegebenen Timeoutwert auf dem Thread aus, in dem der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="timeout">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="method">Der Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary>Führt den angegebenen Delegaten mit der angegebenen Priorität und dem angegebenen Argument synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="timeout">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll. Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist keine gültige Priorität.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary>Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="priority">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</param>
      <param name="timeout">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</param>
      <param name="method">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</param>
      <param name="arg">Ein Objekt, das als Argument an die angegebene Methode übergeben wird.</param>
      <param name="args">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</param>
      <returns>Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</param>
      <param name="timeout">Die minimale Zeitspanne, die auf den Start des Vorgangs gewartet wird.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Führt die angegebene <see cref="T:System.Action" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</param>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Führt die angegebene <see cref="T:System.Func`1" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <param name="callback">Ein Delegat, der über den Verteiler aufgerufen werden soll.</param>
      <param name="priority">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</param>
      <param name="cancellationToken">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</param>
      <typeparam name="TResult">Der Rückgabewerts des angegebenen Delegaten.</typeparam>
      <returns>Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary>Initiiert die synchrone Beendigung des <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary>Tritt in eine Ausführungsschleife ein.</summary>
      <param name="frame">Der Frame, den der Verteiler verarbeiten soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frame" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> ist gleich <see langword="true" />.
- oder -
<paramref name="frame" /> wird auf einem anderen <see cref="T:System.Windows.Threading.Dispatcher" /> ausgeführt.
- oder -
Verteilerverarbeitung wurde deaktiviert.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary>Stellt den Hauptausführungsframe in die Ereigniswarteschlange von <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary>Tritt ein, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung abschließt.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary>Tritt ein, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung beginnt.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary>Ruft den Thread ab, dem dieser <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
      <returns>Der Thread.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary>Tritt ein, wenn eine Threadausnahme ausgelöst und während der Ausführung eines Delegaten mit <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> oder <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nicht abgefangen wird.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary>Tritt ein, wenn eine Threadausnahme ausgelöst und nicht abgefangen wird, während ein Delegat mit <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> oder <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ausgeführt wird und sich in der Filterstufe befindet.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary>Ermittelt, ob die angegebene <see cref="T:System.Windows.Threading.DispatcherPriority" /> eine gültige Priorität ist.</summary>
      <param name="priority">Die zu überprüfende Priorität.</param>
      <param name="parameterName">Eine Zeichenfolge, die von der Ausnahme zurückgegeben wird, die auftritt, wenn die Priorität ungültig ist.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary>Bestimmt, ob der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.Dispatcher" /> zugreifen kann.</summary>
      <exception cref="T:System.InvalidOperationException">Der aufrufende Thread kann nicht auf diesen <see cref="T:System.Windows.Threading.Dispatcher" /> zugreifen.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary>Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</summary>
      <returns>Ein awaitable-Objekt, das asynchron dem aktuellen Verteiler Steuerelemente zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary>Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.  Die Arbeit, welche auftritt, wenn das Steuerelement an den Code zurückgibt, der auf das Ergebnis dieser Methode wartet, die mit der angegebenen Priorität geplant wurde.</summary>
      <param name="priority">Die Priorität, mit der die Fortsetzung geplant werden soll.</param>
      <returns>Ein awaitable-Objekt, das asynchron dem aktuellen Verteiler Steuerelemente zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary>Stellt Ereignisdaten für auf den <see cref="T:System.Windows.Threading.Dispatcher" /> bezogene Ereignisse bereit.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary>Der diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Der Verteiler.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary>Stellt eine Ausführungsschleife im <see cref="T:System.Windows.Threading.Dispatcher" /> dar.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherFrame" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherFrame" />-Klasse mit dem angegebenen Flag für eine Beendigungsanforderung.</summary>
      <param name="exitWhenRequested">Gibt an, ob dieser Frame beendet wird, wenn alle Frames eine Beendigungsaufforderung erhalten.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary>Ruft einen Wert ab, mit dem angegeben wird, ob dieser <see cref="T:System.Windows.Threading.DispatcherFrame" /> fortgesetzt werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Frame fortgesetzt werden soll, andernfalls <see langword="false" />.  Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary>Stellt Ereignisdaten für <see cref="T:System.Windows.Threading.DispatcherHooks" />-Ereignisse bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />-Klasse.</summary>
      <param name="operation">Der dem Ereignis zugeordnete Vorgang.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary>Ruft das diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.Dispatcher" /> ab.</summary>
      <returns>Der diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary>Ruft das diesem Ereignis zugeordnete <see cref="T:System.Windows.Threading.DispatcherOperation" /> ab.</summary>
      <returns>Der Vorgang.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary>Stellt die Methode für die Behandlung von auf <see cref="T:System.Windows.Threading.DispatcherHooks" /> bezogenen Ereignissen dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary>Stellt zusätzliche Ereignisinformationen über die <see cref="T:System.Windows.Threading.Dispatcher" />-Verarbeitung bereit.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary>Tritt ein, wenn der Verteiler keine weiteren Vorgänge zu verarbeiten hat.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary>Tritt nach dem Abbrechen eines Vorgangs ein.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary>Tritt ein, wenn ein Vorgang abgeschlossen ist.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary>Tritt ein, wenn ein Vorgang an den Verteiler gesendet wird.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary>Tritt ein, wenn die Priorität eines Vorgangs geändert wird.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary>Tritt nach dem Aufrufen eines Vorgangs ein.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary>Stellt ein Objekt dar, das einem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherObject" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary>Bestimmt, ob der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.DispatcherObject" /> zugreifen kann.</summary>
      <returns>
        <see langword="true" />, wenn der aufrufende Thread auf dieses Objekt zugreifen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary>Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> ab, der diesem <see cref="T:System.Windows.Threading.DispatcherObject" /> zugeordnet ist.</summary>
      <returns>Der Verteiler.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary>Erzwingt, dass der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.DispatcherObject" /> zugreifen kann.</summary>
      <exception cref="T:System.InvalidOperationException">der aufrufende Thread kann nicht auf dieses <see cref="T:System.Windows.Threading.DispatcherObject" /> zugreifen.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>Stellt ein Objekt dar, mit dem die Interaktion mit einem Vorgang erfolgt, der an die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange gesendet wurde.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary>Bricht den Vorgang ab.</summary>
      <returns>
        <see langword="true" />, wenn der Vorgang abgebrochen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary>Tritt nach dem Abbrechen des Vorgangs ein.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary>Tritt ein, wenn der Vorgang abgeschlossen wurde.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary>Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> ab, an den der Vorgang gesendet wurde.</summary>
      <returns>Der Verteiler.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary>Gibt ein Objekt zurück, das benachrichtigt wird, wenn der asynchrone Vorgang abgeschlossen ist.</summary>
      <returns>Ein Objekt, das benachrichtigt wird, wenn der asynchrone Vorgang abgeschlossen ist.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary>Startet den Vorgang, der diesem <see cref="T:System.Windows.Threading.DispatcherOperation" /> zugeordnet ist.</summary>
      <returns>
        <see langword="null" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary>Ruft die Priorität des Vorgangs in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange ab oder legt diese Priorität fest.</summary>
      <returns>Die Priorität des Delegaten in der Warteschlange.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary>Ruft das Ergebnis des Vorgangs nach dessen Abschluss ab.</summary>
      <returns>Das Ergebnis des Vorgangs oder <see langword="null" />, wenn der Vorgang nicht abgeschlossen wurde.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary>Ruft den aktuellen Status des Vorgangs ab.</summary>
      <returns>Der Status des Vorgangs.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary>Ruft einen <see cref="T:System.Threading.Tasks.Task`1" /> ab, der den aktuellen Vorgang darstellt.</summary>
      <returns>Ein Objekt, das den aktuellen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary>Wartet bis zum Abschluss des Vorgangs.</summary>
      <returns>Der Status des Vorgangs.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Dies kann beim Warten auf einen Vorgang auftreten, der bereits im gleichen Thread ausgeführt wird.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>Wartet für den angegebenen Zeitraum bis zum Abschluss des Vorgangs.</summary>
      <param name="timeout">Die maximale Wartezeit.</param>
      <returns>Der Status des Vorgangs.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Dies kann beim Warten auf einen Vorgang auftreten, der bereits im gleichen Thread ausgeführt wird.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary>Stellt ein Objekt dar, mit dem die Interaktion mit einem Vorgang erfolgt, der an die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange gesendet wurde und ein <see cref="T:System.Threading.Tasks.Task`1" /> enthält.</summary>
      <typeparam name="TResult">Der Typ, der von der <see cref="T:System.Threading.Tasks.Task`1" /> zurückgegeben wird.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary>Gibt ein Objekt zurück, das einen asynchronen Vorgang erwartet, der ein Ergebnis zurückgibt.</summary>
      <returns>Ein Objekt, das einen asynchronen Vorgang erwartet, der ein Ergebnis zurückgibt.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary>Startet den Vorgang, der diesem <see cref="T:System.Windows.Threading.DispatcherOperation" /> zugeordnet ist.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary>Ruft das Ergebnis des Vorgangs nach dessen Abschluss ab.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary>Ruft einen <see cref="T:System.Threading.Tasks.Task`1" /> ab, der den aktuellen Vorgang darstellt.</summary>
      <returns>Ein Objekt, das den aktuellen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary>Stellt einen Delegaten für Verteilervorgänge dar.</summary>
      <param name="arg">Ein Argument, das an den Rückruf übergeben wird.</param>
      <returns>Das vom Rückruf zurückgegebene Objekt.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary>Beschreibt die möglichen Werte für den Status einer <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary>Der Vorgang wurde abgebrochen.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary>Der Vorgang wurde abgeschlossen.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary>Das Ausführen des Vorgangs hat begonnen, wurde aber nicht abgeschlossen.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary>Der Vorgang steht noch aus und befindet sich weiterhin in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary>Beschreibt die Prioritäten, mit denen Vorgänge über den <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen werden können.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary>Der Enumerationswert ist 2. Vorgänge werden verarbeitet, wenn sich die Anwendung im Leerlauf befindet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary>Der Enumerationswert ist 4. Vorgänge werden verarbeitet, sobald alle Vorgänge außer den nicht im Leerlauf befindlichen abgeschlossen sind.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary>Der Enumerationswert ist 3. Vorgänge werden verarbeitet, sobald die Hintergrundvorgänge abgeschlossen sind.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary>Der Enumerationswert ist 8. Vorgänge werden mit gleicher Priorität wie die Datenbindung verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary>Der Enumerationswert ist 0. Vorgänge werden nicht verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary>Der Enumerationswert ist 5. Vorgänge werden mit gleicher Priorität wie die Eingabe verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary>Der Enumerationswert ist -1. Dies ist eine ungültige Priorität.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary>Der Enumerationswert ist 6. Vorgänge werden verarbeitet, sobald Layout und Wiedergabe beendet sind, aber bevor Elemente mit Eingabepriorität verarbeitet werden. Dieser wird insbesondere verwendet, wenn das Loaded-Ereignis ausgelöst wird.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary>Der Enumerationswert ist 9. Vorgänge werden mit normaler Priorität verarbeitet. Dies ist die häufigste Anwendungspriorität.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary>Der Enumerationswert ist 7. Vorgänge werden mit gleicher Priorität wie das Rendering verarbeitet.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary>Der Enumerationswert ist 10. Vorgänge werden vor anderen asynchronen Vorgängen verarbeitet. Dies ist die höchste Priorität.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary>Der Enumerationswert ist 1. Vorgänge werden verarbeitet, wenn sich das System im Leerlauf befindet.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary>Stellt ein Awaitable-Objekt dar, das asynchron die Steuerung an den aktuellen Verteiler zurückgibt und dem Verteiler die Möglichkeit bietet, andere Ereignisse zu verarbeiten.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary>Gibt ein Objekt zurück, dass auf die Vervollständigung der asynchronen Aufgabe wartet.</summary>
      <returns>Ein Objekt, das auf den Abschluss der asynchronen Aufgabe wartet.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary>Repräsentiert ein Objekt, welches auf die Vervollständigung der ansynchronen Aufgabe wartet.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary>Beendet das Warten auf den Abschluss der asynchronen Aufgabe.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary>Ruft einen Wert ab, der angibt, ob die asynchrone Aufgabe abgeschlossen wurde.</summary>
      <returns>
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary>Legt die Aktion fest, die ausgeführt wird, sobald das <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" />-Objekt nicht mehr auf die zu beendende asynchrone Aufgabe wartet.</summary>
      <param name="continuation">Die Aktion, die ausgeführt werden soll, wenn die Wartevorgang abgeschlossen wird.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary>Stellt den Verteiler im deaktivierten Zustand dar und stellt ein Verfahren zum erneuten Aktivieren der Verarbeitung durch den Verteiler bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary>Aktiviert die Verarbeitung durch den Verteiler erneut.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt und das <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt gleich sind.</summary>
      <param name="obj">Das auf Gleichheit zu prüfende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt und das <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary>Ruft einen Hashcode für diese Instanz ab.</summary>
      <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte gleich sind.</summary>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte ungleich sind.</summary>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>Stelle einen Synchronisierungskontext für Windows Presentation Foundation (WPF) bereit.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />-Klasse, indem der angegebene <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet wird.</summary>
      <param name="dispatcher">Der diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zuzuordnende <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />-Klasse, indem der angegebene <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet wird.</summary>
      <param name="dispatcher">Der diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zuzuordnende <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority">Die Priorität, die verwendet wird, um Rückrufmethoden zu senden und abzuschicken.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>Erstellt eine Kopie dieser Instanz von <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns>Die Kopie dieses Synchronisierungskontexts.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Ruft den Rückruf im Synchronisierungskontext asynchron auf.</summary>
      <param name="d">Der aufzurufende Delegat.</param>
      <param name="state">Das an den Delegaten übergebene Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Ruft den Rückruf im Synchronisierungskontext synchron auf.</summary>
      <param name="d">Der aufzurufende Delegat.</param>
      <param name="state">Das an den Delegaten übergebene Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary>Wartet darauf, dass ein beliebiges oder alle Elemente im angegebenen Array ein Signal empfangen.</summary>
      <param name="waitHandles">Ein Array, das die systemeigenen Betriebssystemhandles enthält.</param>
      <param name="waitAll">
        <see langword="true" />, um auf alle Handles zu warten, <see langword="false" />, um auf ein beliebiges Handle zu warten.</param>
      <param name="millisecondsTimeout">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</param>
      <returns>Der Arrayindex des Objekts, das den Wartevorgang erfüllt hat.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>Ein Zeitgeber, der in die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange integriert ist, die in einem festgelegten Zeitintervall und mit einer festgelegten Priorität verarbeitet wird.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die das angegebene Zeitintervall, die angegebene Priorität, den angegebenen Ereignishandler und den angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet.</summary>
      <param name="interval">Der Zeitraum zwischen Ticks.</param>
      <param name="priority">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</param>
      <param name="callback">Der Ereignishandler, der beim Eintreten des <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />-Ereignisses aufgerufen werden soll.</param>
      <param name="dispatcher">Der Verteiler, dem der Zeitgeber zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> ist <see langword="null" />.
- oder -
<paramref name="dispatcher" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die Zeitgeberereignisse mit der angegebenen Priorität verarbeitet.</summary>
      <param name="priority">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die im angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> mit der angegebenen Priorität ausgeführt wird.</summary>
      <param name="priority">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</param>
      <param name="dispatcher">Der Verteiler, dem der Zeitgeber zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary>Ruft den diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordneten <see cref="T:System.Windows.Threading.DispatcherTimer" /> ab.</summary>
      <returns>Der Verteiler.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>Ruft den Zeitraum zwischen den Ticks des Zeitgebers ab oder legt diesen fest.</summary>
      <returns>Der Zeitraum zwischen Ticks. Der Standardwert ist „00:00:00“.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" /> Millisekunden.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>Ruft einen Wert ab, mit dem angegeben wird, ob der Zeitgeber ausgeführt wird, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Zeitgeber aktiviert ist, andernfalls <see langword="false" />.  Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>Startet den <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>Hält den <see cref="T:System.Windows.Threading.DispatcherTimer" /> an.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary>Ruft ein benutzerdefiniertes Datenobjekt ab oder legt es fest.</summary>
      <returns>Die benutzerdefinierten Daten.  Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>Tritt auf, wenn das Zeitgeberintervall verstrichen ist.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary>Stellt Daten für das <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />-Ereignis bereit</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary>Ruft die Ausnahme ab, die ausgelöst wurde, als Code über den Verteiler ausgeführt wurde.</summary>
      <returns>Die Ausnahme.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary>Ruft ab oder legt fest, ob das Ausnahmeereignis behandelt wurde.</summary>
      <returns>
        <see langword="true" />, wenn die Ausnahme behandelt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary>Stellt Daten für das <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />-Ereignis bereit</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary>Ruft die Ausnahme ab, die ausgelöst wurde, als Code über den Verteiler ausgeführt wurde.</summary>
      <returns>Die Ausnahme.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary>Ruft ab, ob die Ausnahme abgefangen und die Ereignishandler aufgerufen werden sollen, oder legt dies fest.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> ausgelöst werden soll, andernfalls <see langword="false" />.  Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary>Stellt eine Methode dar, die als Rückruf verwendet wird, mit dem der effektive Wert einer Abhängigkeitseigenschaft überprüft wird.</summary>
      <param name="value">Der zu überprüfende Wert.</param>
      <returns>
        <see langword="true" />, wenn der Wert überprüft wurde. <see langword="false" />, wenn der übermittelte Wert ungültig war.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary>Stellt eine Verschiebung im zweidimensionalen Raum dar.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Vector" />-Struktur.</summary>
      <param name="x">Der <see cref="P:System.Windows.Vector.X" />-Offset des neuen <see cref="T:System.Windows.Vector" />.</param>
      <param name="y">Der <see cref="P:System.Windows.Vector.Y" />-Offset des neuen <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary>Verschiebt den angegebenen Punkt um den angegebenen Vektor und gibt den sich ergebenden Punkt zurück.</summary>
      <param name="vector">Der Betrag, um den der angegebene Punkt verschoben werden soll.</param>
      <param name="point">Der zu verschiebende Punkt.</param>
      <returns>Das Ergebnis der Verschiebung von <paramref name="point" /> um <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary>Fügt zwei Vektoren hinzu und gibt das Ergebnis als <see cref="T:System.Windows.Vector" />-Struktur zurück.</summary>
      <param name="vector1">Der erste zu addierende Vektor.</param>
      <param name="vector2">Der zweite zu addierende Vektor.</param>
      <returns>Die Summe von <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary>Ruft den in Grad ausgedrückten Winkel zwischen den zwei angegebenen Vektoren ab.</summary>
      <param name="vector1">Der erste auszuwertende Vektor.</param>
      <param name="vector2">Der zweite auszuwertende Vektor.</param>
      <returns>Der Winkel zwischen <paramref name="vector1" /> und <paramref name="vector2" /> in Grad.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary>Berechnet das Kreuzprodukt zweier Vektoren.</summary>
      <param name="vector1">Der erste auszuwertende Vektor.</param>
      <param name="vector2">Der zweite auszuwertende Vektor.</param>
      <returns>Das Kreuzprodukt von <paramref name="vector1" /> und <paramref name="vector2" />. Das Kreuzprodukt wird mithilfe der folgenden Formel berechnet:
<c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary>Berechnet die Determinante von zwei Vektoren.</summary>
      <param name="vector1">Der erste auszuwertende Vektor.</param>
      <param name="vector2">Der zweite auszuwertende Vektor.</param>
      <returns>Die Determinante von <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary>Dividiert den angegebenen Vektor durch die angegebene Skalarzahl und gibt das Ergebnis als <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="vector">Die zu dividierende Vektorstruktur.</param>
      <param name="scalar">Der Betrag, durch den <paramref name="vector" /> dividiert wird.</param>
      <returns>Das Ergebnis der Division von <paramref name="vector" /> durch <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> eine <see cref="T:System.Windows.Vector" />-Struktur ist. Wenn dies der Fall ist, wird überprüft, ob der <see cref="P:System.Windows.Vector.X" />-Wert und der <see cref="P:System.Windows.Vector.Y" />-Wert mit den Werten des Vektors übereinstimmen.</summary>
      <param name="o">Der zu vergleichende Vektor.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Vector" /> mit dem gleichen <see cref="P:System.Windows.Vector.X" />-Wert und dem gleichen <see cref="P:System.Windows.Vector.Y" />-Wert wie dieser Vektor ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary>Überprüft zwei Vektoren auf Gleichheit.</summary>
      <param name="value">Der mit diesem Vektor zu vergleichende Vektor.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> den gleichen <see cref="P:System.Windows.Vector.X" />-Wert und <see cref="P:System.Windows.Vector.Y" />-Wert wie dieser Vektor aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary>Vergleicht die beiden angegebenen Vektoren auf Gleichheit.</summary>
      <param name="vector1">Der erste zu vergleichende Vektor.</param>
      <param name="vector2">Der zweite zu vergleichende Vektor.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Windows.Vector.X" />-Komponente und die <see cref="P:System.Windows.Vector.Y" />-Komponente von <paramref name="vector1" /> und <paramref name="vector2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary>Gibt den Hashcode für diesen Vektor zurück.</summary>
      <returns>Der Hashcode für diese Instanz.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary>Ruft die Länge dieses Vektors ab.</summary>
      <returns>Die Länge dieses Vektors.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary>Ruft das Quadrat der Länge dieses Vektors ab.</summary>
      <returns>Das Quadrat der <see cref="P:System.Windows.Vector.Length" /> dieses Vektors.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary>Multipliziert den angegebenen Skalar mit dem angegebenen Vektor und gibt den sich ergebenden <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="scalar">Der zu multiplizierende Skalar.</param>
      <param name="vector">Der zu multiplizierende Vektor.</param>
      <returns>Das Ergebnis der Multiplikation von <paramref name="scalar" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary>Multipliziert den angegebenen Vektor mit dem angegebenen Skalar und gibt den sich ergebenden <see cref="T:System.Windows.Vector" /> zurück.</summary>
      <param name="vector">Der zu multiplizierende Vektor.</param>
      <param name="scalar">Der zu multiplizierende Skalar.</param>
      <returns>Das Ergebnis der Multiplikation von <paramref name="vector" /> und <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Transformiert den Koordinatenbereich des angegebenen Vektors mithilfe der angegebenen <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Die zu transformierende Vektorstruktur.</param>
      <param name="matrix">Die auf den <paramref name="vector" /> anzuwendende Transformation.</param>
      <returns>Das Ergebnis der Transformation von <paramref name="vector" /> um <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Berechnet das Skalarprodukt von zwei angegebenen Vektoren und gibt das Ergebnis als <see cref="T:System.Double" /> zurück.</summary>
      <param name="vector1">Der erste zu multiplizierende Vektor.</param>
      <param name="vector2">Die zweite zu multiplizierende Vektorstruktur.</param>
      <returns>Ein <see cref="T:System.Double" /> mit dem Skalarprodukt von <paramref name="vector1" /> und <paramref name="vector2" />, das mit der folgenden Formel berechnet wird:
<c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary>Negiert diesen Vektor. Der Vektor weist denselben Betrag wie zuvor, doch die entgegengesetzte Richtung auf.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary>Normalisiert diesen Vektor.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary>Verschiebt einen Punkt um den angegebenen Vektor und gibt den sich ergebenden Punkt zurück.</summary>
      <param name="vector">Der Vektor, der zum Verschieben von <paramref name="point" /> verwendet wird.</param>
      <param name="point">Der zu verschiebende Punkt.</param>
      <returns>Das Ergebnis der Verschiebung von <paramref name="point" /> um <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary>Addiert zwei Vektoren und gibt das Ergebnis als Vektor zurück.</summary>
      <param name="vector1">Der erste zu addierende Vektor.</param>
      <param name="vector2">Der zweite zu addierende Vektor.</param>
      <returns>Die Summe von <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary>Dividiert den angegebenen Vektor durch den angegebenen Skalar und gibt den sich ergebenden Vektor zurück.</summary>
      <param name="vector">Der zu dividierende Vektor.</param>
      <param name="scalar">Der Skalar, durch den <paramref name="vector" /> dividiert wird.</param>
      <returns>Das Ergebnis der Division von <paramref name="vector" /> durch <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Überprüft zwei Vektoren auf Gleichheit.</summary>
      <param name="vector1">Der erste zu vergleichende Vektor.</param>
      <param name="vector2">Der zweite zu vergleichende Vektor.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Windows.Vector.X" />-Komponente und die <see cref="P:System.Windows.Vector.Y" />-Komponente von <paramref name="vector1" /> und <paramref name="vector2" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary>Erstellt einen <see cref="T:System.Windows.Point" /> mit dem <see cref="P:System.Windows.Vector.X" />-Wert und dem <see cref="P:System.Windows.Vector.Y" />-Wert dieses Vektors.</summary>
      <param name="vector">Der zu konvertierende Vektor.</param>
      <returns>Ein Punkt, dessen <see cref="P:System.Windows.Point.X" />-Koordinatenwert und <see cref="P:System.Windows.Point.Y" />-Koordinatenwert den Offsetwerten <see cref="P:System.Windows.Vector.X" /> und <see cref="P:System.Windows.Vector.Y" /> von <paramref name="vector" /> entsprechen.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary>Erstellt eine <see cref="T:System.Windows.Size" /> aus den Offsets dieses Vektors.</summary>
      <param name="vector">Der zu konvertierende Vektor.</param>
      <returns>Eine <see cref="T:System.Windows.Size" />, deren <see cref="P:System.Windows.Size.Width" /> dem absoluten Wert der <see cref="P:System.Windows.Vector.X" />-Eigenschaft dieses Vektors entspricht und deren <see cref="P:System.Windows.Size.Height" /> dem absoluten Wert der <see cref="P:System.Windows.Vector.Y" />-Eigenschaft dieses Vektors entspricht.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Überprüft zwei Vektoren auf Ungleichheit.</summary>
      <param name="vector1">Der erste zu vergleichende Vektor.</param>
      <param name="vector2">Der zweite zu vergleichende Vektor.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Windows.Vector.X" />-Komponente und die <see cref="P:System.Windows.Vector.Y" />-Komponente von <paramref name="vector1" /> und <paramref name="vector2" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary>Multipliziert den angegebenen Skalar mit dem angegebenen Vektor und gibt den sich ergebenden Vektor zurück.</summary>
      <param name="scalar">Der zu multiplizierende Skalar.</param>
      <param name="vector">Der zu multiplizierende Vektor.</param>
      <returns>Das Ergebnis der Multiplikation von <paramref name="scalar" /> und <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary>Multipliziert den angegebenen Vektor mit dem angegebenen Skalar und gibt den sich ergebenden Vektor zurück.</summary>
      <param name="vector">Der zu multiplizierende Vektor.</param>
      <param name="scalar">Der zu multiplizierende Skalar.</param>
      <returns>Das Ergebnis der Multiplikation von <paramref name="vector" /> und <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Transformiert den Koordinatenbereich des angegebenen Vektors mithilfe der angegebenen <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Der zu transformierende Vektor.</param>
      <param name="matrix">Die auf den <paramref name="vector" /> anzuwendende Transformation.</param>
      <returns>Das Ergebnis der Transformation von <paramref name="vector" /> um <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Berechnet das Skalarprodukt von zwei angegebenen Vektorstrukturen und gibt das Ergebnis als <see cref="T:System.Double" /> zurück.</summary>
      <param name="vector1">Der erste zu multiplizierende Vektor.</param>
      <param name="vector2">Der zweite zu multiplizierende Vektor.</param>
      <returns>Gibt ein <see cref="T:System.Double" /> mit dem Skalarprodukt von <paramref name="vector1" /> und <paramref name="vector2" />, das mit der folgenden Formel berechnet wird:
<c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary>Subtrahiert einen angegebenen Vektor von einem anderen.</summary>
      <param name="vector1">Der Vektor, von dem <paramref name="vector2" /> subtrahiert wird.</param>
      <param name="vector2">Der Vektor, der von <paramref name="vector1" /> subtrahiert wird.</param>
      <returns>Die Differenz zwischen <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary>Negiert den angegebenen Vektor.</summary>
      <param name="vector">Der zu negierende Vektor.</param>
      <returns>Ein Vektor, dessen <see cref="P:System.Windows.Vector.X" />-Wert und <see cref="P:System.Windows.Vector.Y" />-Wert das umgekehrte Vorzeichen des <see cref="P:System.Windows.Vector.X" />-Werts und des <see cref="P:System.Windows.Vector.Y" />-Werts von <paramref name="vector" /> aufweisen.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolgendarstellung eines Vektors in die entsprechende <see cref="T:System.Windows.Vector" />-Struktur.</summary>
      <param name="source">Die Zeichenfolgendarstellung des Vektors.</param>
      <returns>Die entsprechende <see cref="T:System.Windows.Vector" />-Struktur.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary>Subtrahiert den angegebenen Vektor von einem anderen angegebenen Vektor.</summary>
      <param name="vector1">Der Vektor, von dem <paramref name="vector2" /> subtrahiert wird.</param>
      <param name="vector2">Der Vektor, der von <paramref name="vector1" /> subtrahiert wird.</param>
      <returns>Die Differenz zwischen <paramref name="vector1" /> und <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Dieser Member unterstützt die Windows Presentation Foundation (WPF)-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format">Die Zeichenfolge, die das zu verwendende Format angibt.

oder -
<see langword="null" />, wenn das für diese Art der <see cref="T:System.IFormattable" />-Implementierung definierte Standardformat verwendet werden soll.</param>
      <param name="provider">Der zum Formatieren des Werts zu verwendende <see langword="IFormatProvider" />.

oder -
<see langword="null" />, wenn die Informationen über numerische Formate dem aktuellen Gebietsschema des Betriebssystems entnommen werden sollen.</param>
      <returns>Eine Zeichenfolge mit dem Wert der aktuellen Instanz im angegebenen Format.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary>Gibt die Zeichenfolgendarstellung dieser <see cref="T:System.Windows.Vector" />-Struktur zurück.</summary>
      <returns>Eine Zeichenfolge, die den <see cref="P:System.Windows.Vector.X" />-Wert und den <see cref="P:System.Windows.Vector.Y" />-Wert dieses <see cref="T:System.Windows.Vector" /> darstellt.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary>Gibt die Zeichenfolgendarstellung dieser <see cref="T:System.Windows.Vector" />-Struktur mit den angegebenen Formatierungsinformationen zurück.</summary>
      <param name="provider">Die kulturspezifischen Formatierungsinformationen.</param>
      <returns>Eine Zeichenfolge, die den <see cref="P:System.Windows.Vector.X" />-Wert und den <see cref="P:System.Windows.Vector.Y" />-Wert dieses <see cref="T:System.Windows.Vector" /> darstellt.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary>Ruft die <see cref="P:System.Windows.Vector.X" />-Komponente dieses Vektors ab oder legt diese fest.</summary>
      <returns>Die <see cref="P:System.Windows.Vector.X" />-Komponente dieses Vektors. Der Standardwert ist 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary>Ruft die <see cref="P:System.Windows.Vector.Y" />-Komponente dieses Vektors ab oder legt diese fest.</summary>
      <returns>Die <see cref="P:System.Windows.Vector.Y" />-Komponente dieses Vektors. Der Standardwert ist 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary>Konvertiert Instanzen anderer Typen in ein bzw. aus einem <see cref="T:System.Windows.Vector" />-Objekt.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Vector" />-Struktur.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt an, ob ein Objekt von einem angegebenen Typ in eine Instanz einer <see cref="T:System.Windows.Vector" /> konvertiert werden kann.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="sourceType">Der Quell-<see cref="T:System.Type" />, dessen Konvertierungsunterstützung abgefragt wird.</param>
      <returns>
        <see langword="true" />, wenn Objekte vom angegebenen Typ in einen <see cref="T:System.Windows.Vector" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob Instanzen von <see cref="T:System.Windows.Vector" /> in den angegebenen Typ konvertiert werden können.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="destinationType">Der Typ, in den die auszuwertende <see cref="T:System.Windows.Vector" /> konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn Instanzen von <see cref="T:System.Windows.Vector" /> in <paramref name="destinationType" /> konvertiert werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in eine <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="culture">Beschreibt die <see cref="T:System.Globalization.CultureInfo" /> des zu konvertierenden Typs.</param>
      <param name="value">Das Objekt, das konvertiert wird.</param>
      <returns>Die durch Konvertieren von <paramref name="value" /> erzeugte <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert die angegebene <see cref="T:System.Windows.Vector" /> in den angegebenen Typ.</summary>
      <param name="context">Beschreibt die Kontextinformationen eines Typs.</param>
      <param name="culture">Beschreibt die <see cref="T:System.Globalization.CultureInfo" /> des zu konvertierenden Typs.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Windows.Vector" />.</param>
      <param name="destinationType">Der Typ, in den die <see cref="T:System.Windows.Vector" /> konvertiert werden soll.</param>
      <returns>Das Objekt, das durch Konvertieren der <see cref="T:System.Windows.Vector" /> erstellt wird.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary>Stellt eine Basisklasse für den Ereignis-Manager bereit, der im Muster für schwache Ereignisse verwendet wird. Der Manager fügt Listener hinzu oder entfernt diese für Ereignisse (oder Rückrufe), die ebenfalls dieses Muster verwenden.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary>Initialisiert als Initialisierer innerhalb des Konstruktors einer abgeleiteten Klasse die Basisklassenwerte.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary>Übermittelt das verwaltete Ereignis an alle Listener.</summary>
      <param name="sender">Das Objekt, für das das Ereignis behandelt wird.</param>
      <param name="args">Ein <see cref="T:System.EventArgs" />, das die vom Ereignis zu liefernden Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary>Übermittelt das verwaltete Ereignis an jeden Listener in der bereitgestellten Liste.</summary>
      <param name="sender">Das Objekt, für das das Ereignis behandelt wird.</param>
      <param name="args">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
      <param name="list">Die bereitgestellte <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary>Gibt die <see cref="T:System.Windows.WeakEventManager" />-Implementierung zurück, die für den bereitgestellten Typ verwendet wird.</summary>
      <param name="managerType">Der Typ, für den der <see cref="T:System.Windows.WeakEventManager" /> abgerufen werden sollen.</param>
      <returns>Die übereinstimmende <see cref="T:System.Windows.WeakEventManager" />-Implementierung.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary>Ruft die Daten ab, die für die angegebene Quelle gespeichert werden, oder legt diese fest.</summary>
      <param name="source">Der nullbasierte Index der angeforderten Quelle.</param>
      <returns>Daten, die vom Manager für diese Quelle gespeichert werden.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary>Stellt eine integrierte Auflistung zum Speichern von Listenern für einen <see cref="T:System.Windows.WeakEventManager" /> bereit.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Klasse mit der angegebenen anfänglichen Kapazität.</summary>
      <param name="capacity">Die Anzahl der Elemente, die in der ursprünglichen Liste zugeordnet werden sollen.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary>Fügt ein <see cref="T:System.Windows.IWeakEventListener" />-Objekt der <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Auflistung hinzu.</summary>
      <param name="listener">Das Listenerelement, das der <see cref="T:System.Windows.WeakEventManager.ListenerList" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary>Fügt der <see cref="T:System.Windows.WeakEventManager.ListenerList" /> einen Ereignishandler hinzu.</summary>
      <param name="handler">Der dem <see cref="T:System.Windows.WeakEventManager.ListenerList" /> hinzuzufügende Ereignishandler.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary>Gibt an, dass die Liste verwendet wird. Dadurch werden Änderungen an der Liste während der Iteration von Listenelementen verhindert.</summary>
      <returns>
        <see langword="true" />, wenn bereits angegeben wurde, dass die Liste verwendet wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary>Erstellt einen änderbaren Klon dieser <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>Ein änderbarer Klon des aktuellen Objekts.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary>Kopiert die aktuelle <see cref="T:System.Windows.WeakEventManager.ListenerList" /> in die angegebene <see cref="T:System.Windows.WeakEventManager.ListenerList" /></summary>
      <param name="newList">Das Objekt, in das kopiert werden soll.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary>Ruft die Anzahl der Elemente in <see cref="T:System.Windows.WeakEventManager.ListenerList" /> ab.</summary>
      <returns>Die Anzahl der Elemente in der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>Übermittelt das verwaltete Ereignis an alle Listener in der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="args">Ein Objekt, das die Ereignisdaten enthält.</param>
      <param name="managerType">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft.</param>
      <returns>
        <see langword="true" />, wenn einer der Listener in <see cref="T:System.Windows.WeakEventManager.ListenerList" /> auf ein Objekt verweist, das an den Garbage Collector übergeben wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary>Ruft einen Wert ab, der eine leere Liste für Vergleiche darstellt.</summary>
      <returns>Die Darstellung der leeren Liste.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary>Hebt den gesperrten Status auf, der von <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" /> initiiert wurde.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Windows.WeakEventManager.ListenerList" /> leer ist.</summary>
      <returns>
        <see langword="true" />, wenn die Liste leer ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary>Ruft ein bestimmtes Listenerelement in der <see cref="T:System.Windows.WeakEventManager.ListenerList" /> ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Listeners in der Liste.</param>
      <returns>Das Element an diesem Index, oder ein NULL-Verweis, wenn kein Element an diesem Index vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary>Überprüft eine mögliche Verwendung der bereitgestellten Liste und legt die Verweisparameter der Liste ggf. auf eine Kopie der Liste fest.</summary>
      <param name="list">Die Liste, die auf eine mögliche Verwendung überprüft und von der ggf. eine Kopie erstellt werden soll.</param>
      <returns>
        <see langword="true" />, wenn die bereitgestellte Liste zum Zeitpunkt des Aufrufs verwendet wurde und der <paramref name="list" />-Parameterverweis daher auf eine Kopie festgelegt wurde. <see langword="false" />, wenn die bereitgestellte Liste nicht verwendet wurde; der <paramref name="list" />-Parameterverweis wird in diesem Fall nicht verändert.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary>Entfernt alle Einträge aus der Liste mit dem zugrunde liegenden Verweisziel als NULL-Verweis.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn Einträge gelöscht würden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary>Entfernt das erste Vorkommen eines Listenerelements aus der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener">Das zu entfernende Element.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary>Entfernt einen Ereignishandler aus der <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler">Der vom <see cref="T:System.Windows.WeakEventManager.ListenerList" /> zu entfernende Ereignishandler.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary>Stellt eine typensichere Auflistung zum Speichern von Listenern für einen <see cref="T:System.Windows.WeakEventManager" /> bereit. Diese Klasse definiert einen Typparameter für die verwendeten Ereignisdaten.</summary>
      <typeparam name="TEventArgs">Der Typ, der die Ereignisdaten enthält.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />-Klasse mit der angegebenen anfänglichen Kapazität.</summary>
      <param name="capacity">Die Anzahl der Elemente, die in der ursprünglichen Liste zugeordnet werden sollen.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary>Erstellt einen änderbaren Klon der <see cref="T:System.Windows.WeakEventManager.ListenerList" />, indem tiefe Kopien der Werte erzeugt werden.</summary>
      <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true" /> war.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>Übermittelt das verwaltete Ereignis an alle Listener in der <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
      <param name="e">Ein Objekt, das die Ereignisdaten enthält.</param>
      <param name="managerType">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft.</param>
      <returns>
        <see langword="true" />, wenn einer der Listener in <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> auf ein Objekt verweist, das an den Garbage Collector übergeben wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu einem Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zu einem Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary>Fügt den angegebenen Delegaten als Ereignishandler der angegebenen Quelle hinzu.</summary>
      <param name="source">Das Quellobjekt, das der Handlerdelegat abonniert.</param>
      <param name="handler">Der Delegat, der das Ereignis behandelt, das von <paramref name="source" /> ausgelöst wird.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Fügt den bereitgestellten Listener der bereitgestellten Quelle für das verwaltete Ereignis hinzu.</summary>
      <param name="source">Die Quelle, an die Listener angefügt werden.</param>
      <param name="listener">Die Überwachungsklasse (diese muss <see cref="T:System.Windows.IWeakEventListener" /> implementieren).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary>Entfernt den zuvor hinzugefügten Handler aus der angegebenen Quelle.</summary>
      <param name="source">Der Handler, der aus der Quelle entfernt werden soll.</param>
      <param name="handler">Der zu vom <paramref name="source" />, zu entfernende Delegat.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Entfernt einen zuvor hinzugefügten Listener aus der bereitgestellten Quelle.</summary>
      <param name="source">Die Quelle, aus der Listener entfernt werden sollen.</param>
      <param name="listener">Die Überwachungsklasse (diese muss <see cref="T:System.Windows.IWeakEventListener" /> implementieren).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Entfernt inaktive Listenereinträge aus der Datenliste für die bereitgestellte Quelle. Gibt <see langword="true" /> zurück, wenn tatsächlich Einträge aus der Liste entfernt wurden.</summary>
      <param name="source">Die Quelle für Ereignisse, auf die gelauscht wird.</param>
      <param name="data">Die zu prüfenden Daten. Bei diesem Objekt wird erwartet, dass es sich um eine <see cref="T:System.Windows.WeakEventManager.ListenerList" />-Implementierung handelt.</param>
      <param name="purgeAll">
        <see langword="true" />, um das Lauschen auf <paramref name="source" /> zu beenden und alle Einträge aus <paramref name="data" /> zu entfernen.</param>
      <returns>
        <see langword="true" />, wenn tatsächlich Einträge entfernt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary>Richtet auf der zugrunde liegenden Datentabelle eine Lesesperre ein und gibt ein <see cref="T:System.IDisposable" /> zurück.</summary>
      <returns>Ein Objekt, das zum Einrichten einer Sperre für die Datentabellenmember verwendet werden kann und anschließend ordnungsgemäß mit einem <see langword="using" />-Konstrukt freigegeben wird.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary>Entfernt alle Listener für die angegebene Quelle.</summary>
      <param name="source">Die Quelle, für die Listenerinformationen entfernt werden sollen.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary>Fordert an, dass das Löschen nicht verwendeter Einträge aus der zugrunde liegenden Liste der Listener in einem Thread mit niedrigerer Priorität ausgeführt wird.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary>Legt den aktuellen Manager für den angegebenen Managertyp fest.</summary>
      <param name="managerType">Der Typ, auf den der neue Ereignis-Manager festgelegt werden soll.</param>
      <param name="manager">Der neue Ereignis-Manager.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary>Startet beim Überschreiben in einer abgeleiteten Klasse die Überwachung des verwalteten Ereignisses. Nach dem ersten Aufruf der <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" />-Methode muss der Manager bereit sein für einen Aufruf von <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> oder <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />, sobald das relevante Ereignis aus der bereitgestellten Quelle behandelt werden muss.</summary>
      <param name="source">Die Quelle, die überwacht werden soll.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary>Stoppt beim Überschreiben in einer abgeleiteten Klasse die Überwachung der bereitgestellten Quelle für das verwaltete Ereignis.</summary>
      <param name="source">Die Quelle, deren Überwachung beendet werden soll.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary>Richtet auf der zugrunde liegenden Datentabelle eine Schreibsperre ein und gibt ein <see cref="T:System.IDisposable" /> zurück.</summary>
      <returns>Ein Objekt, das zum Einrichten einer Sperre für die Datentabellenmember verwendet werden kann und anschließend ordnungsgemäß mit einem <see langword="using" />-Konstrukt freigegeben wird.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary>Stellt einen typsicheren <see cref="T:System.Windows.WeakEventManager" /> bereit, mit dem Sie den Ereignishandler angeben können, der für das Muster "weak event listener" verwendet werden soll. Diese Klasse definiert einen Typparameter für die Quelle des Ereignisses sowie einen Typparameter für die verwendeten Ereignisdaten.</summary>
      <typeparam name="TEventSource">Der Typ, der das Ereignis auslöst.</typeparam>
      <typeparam name="TEventArgs">Der Typ, der die Ereignisdaten enthält.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary>Fügt den angegebenen Ereignishandler dem angegebenen Ereignis hinzu.</summary>
      <param name="source">Das Quellobjekt, das das angegebene Ereignis auslöst.</param>
      <param name="eventName">Der Name des zu abonierenden Ereignisses.</param>
      <param name="handler">Der Delegat, der das Ereignis behandelt.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary>Gibt ein neues Objekt zurück, mit dem Listener zu einem Ereignis hinzugefügt werden.</summary>
      <returns>Ein neues Objekt, mit dem Listener zu einem Ereignis hinzugefügt werden.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary>Entfernt den angegebenen Ereignishandler aus dem angegebenen Ereingis.</summary>
      <param name="source">Das Quellobjekt, das das angegebene Ereignis auslöst.</param>
      <param name="eventName">Der Name der aus dem Ereignisses zu entfernenden Handlers.</param>
      <param name="handler">Der zu entfernende Delegat</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary>Startet das Lauschen auf das Ereignisses für das angegebene Objekt.</summary>
      <param name="source">Das Objekt, das das Ereignis auslöst.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary>Beendet das Lauschen auf das Ereignisses für das angegebene Objekt.</summary>
      <param name="source">Das Objekt, das das Ereignis auslöst.</param>
    </member>
  </members>
</doc>