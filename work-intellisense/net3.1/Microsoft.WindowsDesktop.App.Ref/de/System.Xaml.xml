<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">Notiert Typen für die Vorversion der Berichterstellung von XAML-Markuperweiterungseigenschaften.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />-Klasse.</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">Der Rückgabetyp, den dieses Attribut meldet.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">Ruft den Rückgabetyp ab, den dieses Attribut meldet, oder legt ihn fest.</summary>
      <returns vsli:raw="The return type that this attribute reports.">Der Rückgabetyp, den dieses Attribut meldet.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">Gibt an, dass eine Eigenschaft oder ein Typ als Umgebung behandelt werden soll. Das Umgebungskonzept bezieht sich darauf, wie XAML-Prozessoren Typbesitzer von Membern bestimmen.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.AmbientAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">Implementiert <see langword="x:Array" />-Unterstützung für XAML-Dienste von .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ArrayExtension" />-Klasse. Dadurch wird ein leeres Array erstellt.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ArrayExtension" />-Klasse auf der Basis des übergebenen unformatierten Arrays.</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">Der Arrayinhalt, mit dem das erstellte Array aufgefüllt wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elements" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ArrayExtension" /> -Klasse und den Typ des Arrays.</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">Der Objekttyp des neuen Arrays.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="arrayType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">Fügt das angegebene Objekt an das Ende des Arrays an.</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">Das Objekt, das dem Ende des Arrays hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">Fügt einen Textknoten als neues Arrayelement hinzu.</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">Der Text, der am Ende des Arrays hinzugefügt werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">Ruft den Inhalt des Arrays ab. Festlegbar in XAML durch XAML-Auflistungssyntax.</summary>
      <returns vsli:raw="The array contents.">Der Inhalt des Arrays.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Gibt ein Array zurück, dessen Größe durch die Anzahl von Objekten festgelegt ist, die in den <see cref="P:System.Windows.Markup.ArrayExtension.Items" />-Werten bereitgestellt werden.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">Ein Objekt, das Dienste für die Markuperweiterung bereitstellen kann.</param>
      <returns vsli:raw="The created array, or null.">Das erstellte Array oder „null“.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Hat ein Array verarbeitet, für das kein gültiger <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> bereitgestellt wurde.
- oder -
Es gibt einen Typenkonflikt zwischen dem deklarierten <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> des Arrays und mindestens einem seiner <see cref="P:System.Windows.Markup.ArrayExtension.Items" />-Werte.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">Ruft den Typ des Arrays ab, das bei Aufruf von <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" /> erstellt werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The type of the array.">Der Typ des Arrays.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">Gibt an, dass ein Objekt mit der Syntax eines nicht parameterlosen Konstruktors initialisiert werden kann und dass eine Eigenschaft mit dem angegebenen Namen Informationen zur Erstellung bereitstellt.  Diese Informationen sind in erster Linie für die XAML-Serialisierung vorgesehen.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />-Klasse.</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">Der Name des Konstruktors, der die zugeordnete Eigenschaft initialisieren soll.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">Ruft den Namensparameter des Konstruktors ab, der die zugeordnete Eigenschaft initialisiert.</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">Der Name des Konstruktors. Ausgehend von einer CLR-Sicherung entspricht dies der <see cref="P:System.Reflection.ParameterInfo.Name" /> im relevanten Konstruktorparameter.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">Zeigt an, welche Eigenschaft eines Typs die XAML-Inhaltseigenschaft ist. Ein XAML-Prozessor verwendet diese Informationen bei der Verarbeitung von untergeordneten XAML-Elementen von XAML-Darstellungen des attributierten Typs.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />-Klasse unter Verwendung des angegebenen Namens.</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">Der Eigenschaftenname der Eigenschaft, die die Inhaltseigenschaft ist.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">Ruft den Namen der Eigenschaft ab, bei der es sich um die Inhaltseigenschaft handelt.</summary>
      <returns vsli:raw="The name of the property that is the content property.">Der Name der Eigenschaft, bei der es sich um die Inhaltseigenschaft handelt.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">Gibt mindestens einen Typ für den zugeordneten Auflistungstyps an, der dazu verwendet wird, fremden Inhalt zu umschließen.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />-Klasse.</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">Der <see cref="T:System.Type" />, der als Inhaltswrapper für den Auflistungstyp deklariert wird.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">Ruft den Typ ab, der als Inhaltswrapper für den Auflistungstyp deklariert ist, der diesem Attribut zugeordnet ist.</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">Der Typ, der als Inhaltswrapper für den Auflistungstyp deklariert ist.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">Bestimmt, ob das angegebene <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> mit diesem <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> gleichwertig ist. Dazu werden die <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />-Eigenschaften verglichen.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />-Eigenschaften gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Ruft einen Hashcode für diese Instanz ab.</summary>
      <returns vsli:raw="An integer hash code.">Ein ganzzahliger Hashcode.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Ruft einen eindeutigen Bezeichner für dieses Attribut ab.</summary>
      <returns vsli:raw="A unique identifier for the attribute.">Ein eindeutiger Bezeichner für das Attribut.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Konvertiert Instanzen von <see cref="T:System.String" /> in <see cref="T:System.DateTime" />-Instanzen und umgekehrt.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.String" />-Objekt in eine Instanz von <see cref="T:System.DateTime" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Die Zeichenfolge, die für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt, ob das angegebene Objekt in einen <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> in einen <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Konvertiert einen <see cref="T:System.String" /> in eine <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Die Zeichenfolge, die in ein <see cref="T:System.DateTime" />-Element konvertiert werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz von <see cref="T:System.DateTime" /> anhand des angegebenen <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert eine Instanz von <see cref="T:System.DateTime" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Eine Zeichenfolgendarstellung des angegebenen <see cref="T:System.DateTime" />-Objekts.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist weder ein <see cref="T:System.DateTime" />-Objekt noch <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">Gibt an, dass die attributierte Eigenschaft vom Wert einer anderen Eigenschaft abhängig ist.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.DependsOnAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">Die Eigenschaft, von der die diesem <see cref="T:System.Windows.Markup.DependsOnAttribute" /> zugeordnete Eigenschaft abhängig ist.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Ruft den Namen der verwandten Eigenschaft ab, die in diesem <see cref="T:System.Windows.Markup.DependsOnAttribute" /> deklariert wird.</summary>
      <returns vsli:raw="The name of the related property.">Der Name der verwandten Eigenschaft.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Ruft einen eindeutigen Bezeichner für dieses <see cref="T:System.Windows.Markup.DependsOnAttribute" />ab.</summary>
      <returns vsli:raw="The unique identifier.">Der eindeutige Bezeichner.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">Gibt eine Eigenschaft der zugeordneten Klasse an, die den impliziten Schlüsselwert bereitstellt. Implizite Schlüssel werden eher als explizite <see langword="x:Key" />-Attribute, die in XAML für ein Element in <see cref="T:System.Collections.IDictionary" />-Auflistungen definiert sind, für Schlüssel verwendet.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">Der Name der Eigenschaft, die den impliziten Schlüsselwert bereitstellt.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">Ruft den Namen der Eigenschaft ab, die den impliziten Schlüsselwert bereitstellt.</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">Der Name der Eigenschaft, die den impliziten Schlüsselwert bereitstellt.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">Stellt Unterstützung für Markupkompilierung und benannte XAML-Elemente sowie zum Anfügen von Ereignishandlern an sie bereit.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">Fügt Ereignisse und Namen an kompilierten Inhalt an.</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">Ein Bezeichnertoken zur Unterscheidung von Aufrufen.</param>
      <param name="target" vsli:raw="The target to connect events and names to.">Das Ziel, mit dem Ereignisse und Namen verbunden werden sollen.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">Lädt die kompilierte Seite einer Komponente.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">Definiert einen Verfahrensvertrag für den Zugriff auf Elemente in einem bestimmten XAML-Namescope und für das Erzwingen der Eindeutigkeit von Namen in diesem XAML-Namescope.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">Gibt ein Objekt zurück, das den bereitgestellten kennzeichnenden Namen aufweist.</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">Der Namensbezeichner für das angeforderte Objekt.</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">Das ggf. gefundene Objekt. Gibt <see langword="null" /> zurück, wenn kein Objekt dieses Namens gefunden wurde.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">Registriert den bereitgestellten Namen im aktuellen XAML-Namescope.</summary>
      <param name="name" vsli:raw="The name to register.">Der zu registrierende Name.</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">Das bestimmte Element, auf das der bereitgestellte <paramref name="name" /> verweist.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">Hebt die Registrierung des bereitgestellten Namens im aktuellen XAML-Namescope auf.</summary>
      <param name="name" vsli:raw="The name to unregister.">Der Name, dessen Registrierung aufgehoben werden soll.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">Vereinigt aufzählbares Element, Auflistung und Wörterbuchunterstützung, die nützlich für das Verfügbarmachen eines Wörterbuchs von Namen in einem XAML-Namescope sind.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">Stellt einen Dienst dar, der situationsbedingte Objekteigenschaftsbeziehungen zur Auswertung der Markuperweiterung meldet.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">Ruft das Zielobjekt ab, das gemeldet wird.</summary>
      <returns vsli:raw="The target object being reported.">Das gemeldete Zielobjekt.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">Ruft einen Bezeichner für die Zieleigenschaft ab, die gemeldet wird.</summary>
      <returns vsli:raw="An identifier for the target property being reported.">Ein Bezeichner für die Zieleigenschaft, die gemeldet wird.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">Fragt ab, ob eine angegebene Eigenschaft im aktuellen Bereich als Ambient-Eigenschaft behandelt werden soll.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">Fragt ab, ob eine angegebene benannte Eigenschaft im aktuellen Bereich als Ambient betrachtet werden kann.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">Der Name der Eigenschaft, die auf den Ambience-Zustand überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angeforderte Eigenschaft als Ambient betrachtet werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">Stellt einen Dienst dar, der den Anwendungskontext dazu verwenden kann, um einen bereitgestellten relativen URI in einen absoluten URI aufzulösen.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">Ruft den Basis-URI des aktuellen Anwendungskontexts ab oder legt diesen fest.</summary>
      <returns vsli:raw="The base URI of the application context.">Der Basis-URI des Anwendungskontexts.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">Definiert einen Kontext, der für einen <see cref="T:System.Windows.Markup.ValueSerializer" /> bereitgestellt wird. Der Kontext kann verwendet werden, um spezielle Serialisierungen oder unterschiedliche Serialisierungsmodi zu aktivieren.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">Ruft einen <see cref="T:System.Windows.Markup.ValueSerializer" /> für den angegebenen Eigenschaftendeskriptor ab.</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">Der Deskriptor der konvertierten Eigenschaft.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">Ein zum Serialisieren der angegebenen Eigenschaft geeigneter <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">Ruft den dem angegebenen Typ zugeordneten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</summary>
      <param name="type" vsli:raw="The type of the value being converted.">Det Typ des zu konvertierenden Werts.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">Ein zum Serialisieren des angegebenen Typs geeigneter <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">Stellt einen Dienst dar, der von benannten Elementen in XAML-Markup in den entsprechenden CLR-Typ aufgelöst wird.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Löst einen benannten XAML-Typ in den entsprechenden CLR- <see cref="T:System.Type" />auf.</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">Der Name des XAML-Typs, der aufgelöst werden soll. Der Typname wird optional vom Präfix für einen XML-Namespace qualifiziert. Andernfalls wird der aktuelle XML-Standardnamespace angenommen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">Der <see cref="T:System.Type" />, in den <paramref name="qualifiedTypeName" /> aufgelöst wird.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">Stellt für Implementierungen von XAML-Markuperweiterungen eine Basisklasse bereit, die von .NET Framework-XAML-Diensten und anderen zugehörigen XAML-Readern und XAML-Writern unterstützt werden kann.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Initialisiert eine neue Instanz einer Klasse, die von <see cref="T:System.Windows.Markup.MarkupExtension" /> abgeleitet wurde.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">Gibt bei Implementierung in einer abgeleiteten Klasse ein Objekt zurück, das als Wert der Zieleigenschaft für diese Markuperweiterung bereitgestellt wird.</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">Ein Dienstanbieter-Hilfsprogramm, das Dienste für die Markuperweiterung bereitstellen kann.</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">Der Objektwert, der für die Eigenschaft festgelegt werden soll, auf die die Erweiterung angewendet wird.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">Meldet die Klammerzeichen, die eine Markuperweiterung zurückgeben kann.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" />-Klasse unter Verwendung der bereitgestellten Zeichen.</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">Ein <see cref="T:System.Char" />, das das Zeichen für die öffnende Klammer definiert.</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">Ein <see cref="T:System.Char" />, das das Zeichen für die schließende Klammer definiert.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Gibt das Zeichen an, das als schließendes Trennzeichen in einer <see cref="T:System.Windows.Markup.MarkupExtension" /> verwendet werden soll.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Ein <see cref="T:System.Char" />, das für das Zeichen steht.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Gibt das Zeichen an, das als öffnendes Trennzeichen in einer <see cref="T:System.Windows.Markup.MarkupExtension" /> verwendet werden soll.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Ein <see cref="T:System.Char" />, das für das Zeichen steht.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">Gibt den Typ an, den eine Markuperweiterung zurückgeben kann.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />-Klasse unter Verwendung des bereitgestellten <see cref="T:System.Type" />.</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">Der Rückgabetyp, den dieses Attribut meldet.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">Veraltet, nicht verwenden.</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">Der Rückgabetyp, der von diesem .NET Framework-Attribut gemeldet wird.</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">Veraltet, nicht verwenden.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">Veraltet, nicht verwenden.</summary>
      <returns vsli:raw="Deprecated; do not use.">Veraltet, nicht verwenden.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">Ruft den Rückgabetyp <see cref="T:System.Windows.Markup.MarkupExtension" /> ab, der von diesem .NET Framework-Attribut gemeldet wird.</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">Der typsichere Rückgabetyp der spezifischen <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> -Implementierung der Markuperweiterung, in der das <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> .NET Framework-Attribut angewendet wird.</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">Stellt die Basisklasse bereit, die für eine Markuptechnik verwendet wird, bei der Member einer Klasse in deklarativem XAML definiert werden.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.MemberDefinition" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">Ruft beim Implementieren in einer abgeleiteten Klasse den Namen des zu definierenden Members ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the member to define.">Der Name des zu definierenden Members.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">Stellt Typkonvertierung bereit, um einen Zeichenfolgennamen in einen Objektverweis auf das Objekt mit diesem Namen zu konvertieren oder um den Namen eines Objekts von Objektdiagrammen zurückzugeben.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.NameReferenceConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">Gibt zurück, ob dieser Konverter ein Objekt eines Typs in ein anderes Objekt konvertieren kann.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">Gibt einen Wert zurück, der angibt, ob der Konverter ein Objekt in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType" vsli:raw="The type to convert to.">Der Typ, in den konvertiert werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">Konvertiert das bereitgestellte Objekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in ein anderes Objekt.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</param>
      <param name="value" vsli:raw="The reference name string to convert.">Die zu konvertierende Verweisnamenzeichenfolge.</param>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">Das zurückgegebene Objekt, das potenziell jedes Objekt ist, das einem Typ in den relevanten Unterstützungsassemblys zugeordnet ist und in XAML mit einem XAML-Namensverweis deklariert werden kann.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">
        <paramref name="value" /> ist eine NULL-Zeichenfolge oder eine leere Zeichenfolge.
- oder -
<see cref="T:System.Xaml.IXamlNameResolver" />-Dienst fehlt oder ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">Konvertiert ein Objekt in den angegebenen Typ. Dies ist dazu gedacht, XAML-Verweisnamen von Objekten in einem Objektdiagramm zurückzugeben.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Das als aktuelle Kultur zu verwendende <see cref="T:System.Globalization.CultureInfo" />-Element.</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">Das Objekt, für das der Verweisname abgerufen werden soll.</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">Der Typ, der zurückgegeben wird. Sie sollten immer auf den <see cref="T:System.String" />-Typ verweisen.</param>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">Der Verweisname des eingegebenen <paramref name="value" />-Objekts.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">
        <see cref="T:System.Xaml.IXamlNameProvider" />-Dienst fehlt oder ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">Gibt eine Eigenschaft der zugeordneten Klasse an, die den Wert des XAML-Namescopes bereitstellt.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" />-Klasse mit dem angegebenen Namen.</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">Der Name der Eigenschaft für den Attributtyp, die den XAML-Namescope bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" />-Klasse mit dem angegebenen Namen und Typ.</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">Der Name des anfügbaren Members, der den XAML-Namescope bereitstellt.</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">Der Besitzertyp des anfügbaren Members, der den XAML-Namescope bereitstellt.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">Ruft den Namen der Eigenschaft ab, die den XAML-Namescope bereitstellt.</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">Ein Zeichenfolgenwert, der den Namen der Eigenschaft darstellt, die den XAML-Namescope bereitstellt.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">Ruft den Besitzertyp der angefügten Eigenschaft ab, die die Unterstützung für den XAML-Namescope bereitstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Type" />-Wert, der der Besitzertyp des angefügten Eigenschaft ist, die die Unterstützung für den XAML-Namescope bereitstellt, oder <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">Implementiert eine XAML-Markuperweiterung, damit ein NULL-Objekt zurückgegeben wird, das in XAML zum expliziten Festlegen von Werten auf NULL verwendet werden kann.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.NullExtension" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">Stellt <see langword="null" /> als Wert für die Ausgabe dieser Markuperweiterung zur Verfügung.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">Ein Objekt, das Dienste für die Implementierung der Markuperweiterung bereitstellen kann.</param>
      <returns vsli:raw="A null reference.">Ein NULL-Verweis.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">Unterstützt eine Markuptechnik zum Definieren von Eigenschaften einer Klasse in deklarativem XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.PropertyDefinition" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">Ruft eine Liste zugeordneter CLR-Attribute ab.</summary>
      <returns vsli:raw="A list of associated attributes.">Eine Liste der zugeordneten Attribute.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">Ruft die Zugriffsebene für die definierte Eigenschaft ab oder legt diese fest.</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">Die Zugriffsebene der definierten Eigenschaft, als Zeichenfolge.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">Ruft den Namen der Eigenschaft ab, die definiert werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the property to define.">Der Name der Eigenschaft, die definiert werden soll.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt der Eigenschaft ab, die definiert werden soll, oder legt es fest.</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">Der XAML-Typbezeichner der Eigenschaft, die definiert werden soll.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">Implementiert die Markuperweiterung <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.Reference" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.Reference" />-Klasse mit dem <paramref name="name" />-Argument.</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">Der XAML-Name des Elements, auf das verwiesen werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">Ruft den XAML-Namen ab, für den der Verweis abgerufen werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">Der XAML-Name des Elements, für den der Verweis abgerufen werden soll.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">Gibt ein Objekt zurück, das dem Wert der Zieleigenschaft entspricht. Für den <see cref="T:System.Windows.Markup.Reference" />-Typ ist dies das Objekt, das die bereitgestellten <see cref="P:System.Windows.Markup.Reference.Name" />-Verweise enthält.</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">Eine Klasse, die den <see cref="T:System.Xaml.IXamlNameResolver" />-Dienst implementiert.</param>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">Der Wert der Zieleigenschaft. Dies ist potenziell jedes Objekt, das in den relevanten unterstützenden Assemblys typzugeordnet ist.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">Der <paramref name="serviceProvider" />-Wert implementiert den <see cref="T:System.Xaml.IXamlNameResolver" />-Dienst nicht.
- oder -
Der <see cref="P:System.Windows.Markup.Reference.Name" />-Wert wurde nicht durch Konstruktion oder Verwendung fester Breite festgelegt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Stellt ein Attribut auf Assemblyebene dar, mit dem der Wert der <see langword="RootNamespace" />-Eigenschaft in einer Visual Studio-Projektdatei bestimmt wird.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />-Klasse.</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">Der Wert des Stammnamespace.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Ruft die Zeichenfolge ab, die dem Wert der <see langword="RootNamespace" />-Eigenschaft in einer Visual Studio-Projektdatei entspricht.</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Die Zeichenfolge, die dem Wert der <see langword="RootNamespace" /> -Eigenschaft in einer Visual Studio-Projektdatei entspricht.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">Stellt ein Attribut auf Typebene dar, das meldet, welche Eigenschaft des Typs dem x:Name-Attribut in XAML entspricht.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">Der Name der Eigenschaft, die als <see langword="x:Name" />-Äquivalent für die Klasse verwendet werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">Ruft den Namen der Laufzeiteigenschaft für den Namen ab, der von diesem <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" /> angegeben wird.</summary>
      <returns vsli:raw="The name of the property.">Den Namen der Eigenschaft.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">Implementiert eine Markuperweiterung, die Verweise auf statische Felder und Eigenschaften zurückgibt.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.StaticExtension" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.StaticExtension" />-Klasse unter Verwendung der angegebenen <paramref name="member" />-Zeichenfolge.</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">Eine Zeichenfolge, die den Member identifiziert, auf den verwiesen werden soll. Diese Zeichenfolge verwendet das Format <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefix</c> ist das Zuordnungspräfix für einen XAML-Namespace. Es ist nur für den Verweis auf statische Werte erforderlich, die nicht dem XAML-Standardnamespace zugeordnet werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">Ruft eine Membernamenszeichenfolge ab, mit der ein statisches Feld oder eine statische Eigenschaft auf Basis des vom Dienst bereitgestellten Typresolvers aufgelöst wird, oder legt diese Zeichenfolge fest.</summary>
      <returns vsli:raw="A string that identifies the member to make a reference to.">Eine Zeichenfolge, die den Member identifiziert, auf den verwiesen werden soll.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Es wurde versucht, <see cref="P:System.Windows.Markup.StaticExtension.Member" /> auf <see langword="null" /> festzulegen.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Ruft den <see cref="T:System.Type" /> ab, mit dem der zurückzugebende statische Member definiert wird, oder legt den Typ fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Der <see cref="T:System.Type" />, der den statischen Member definiert, der zurückgegeben werden soll.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Es wurde versucht, <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> auf <see langword="null" /> festzulegen.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">Gibt einen Objektwert zurück, der für die Eigenschaft festgelegt werden soll, für die diese Erweiterung angewendet wird. Für <see cref="T:System.Windows.Markup.StaticExtension" /> ist der Rückgabewert der statische Wert, der für den angeforderten statischen Member ausgewertet wird.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">Ein Objekt, das Dienste für die Markuperweiterung bereitstellen kann. Es wird erwartet, dass der Dienstanbieter einen Dienst zur Implementierung eines Typresolvers <see cref="T:System.Windows.Markup.IXamlTypeResolver" />) bereitstellt.</param>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">Der statische Wert, der für die Eigenschaft festgelegt werden soll, für die die Erweiterung angewendet wird.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">Der <paramref name="member" />-Wert zur Erweiterung ist zu der Zeit der Auswertung <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">Ein Teil der <paramref name="member" />-Zeichenfolge wurde nicht ordnungsgemäß analysiert.
- oder -
<paramref name="serviceProvider" /> hat keinen Dienst für <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> bereitgestellt.

oder -
Der <paramref name="member" />-Wert wurde nicht in einen statischen Member aufgelöst.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">Zeigt XAML-Prozessoren an, dass die Leerstellen, die Elemente des Typs in Markup umgeben, bei der Serialisierung abgeschnitten werden sollen.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">Implementiert eine Markuperweiterung, die einen <see cref="T:System.Type" /> zurückgibt, der auf einer Zeichenfolgeneingabe basiert.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse. Dabei wird der <see cref="P:System.Windows.Markup.TypeExtension.TypeName" />-Wert auf Basis der bereitgestellten <paramref name="typeName" />-Zeichenfolge initialisiert.</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">Eine Zeichenfolge, die den Typ identifiziert, auf den verwiesen werden soll. Diese Zeichenfolge weist das Format <c>Präfix:Klassenname</c> auf. <c>Präfix</c> ist das Zuordnungspräfix für einen XAML-Namespace. Es ist nur für den Verweis auf Typen erforderlich, die nicht dem XAML-Standardnamespace zugeordnet werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">Es wurde versucht, <paramref name="typeName" /> als <see langword="null" /> anzugeben.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.TypeExtension" />-Klasse, sodass der Typ direkt deklariert wird.</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">Der Typ, der durch diese <see cref="T:System.Windows.Markup.TypeExtension" />-Instanz dargestellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> ist gleich <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">Gibt ein Objekt zurück, das auf die Eigenschaft festgelegt werden soll, auf die diese Erweiterung angewendet wird. Bei <see cref="T:System.Windows.Markup.TypeExtension" /> ist dies der <see cref="T:System.Type" />-Wert, der für den angeforderten Typnamen ausgewertet wurde.</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">Das Objekt, das Dienste für die Markuperweiterung bereitstellen kann. Der Anbieter muss einen Dienst für <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> bereitstellen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">Der <see cref="T:System.Type" />, der für die Eigenschaft festgelegt wird, auf die die Erweiterung angewendet wird.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="member" />-Wert für die Erweiterung ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">Ein Teil der <paramref name="typeName" />-Zeichenfolge wurde nicht ordnungsgemäß analysiert

oder -
<paramref name="serviceProvider" /> hat keinen Dienst für <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> bereitgestellt.

oder -
der <paramref name="typeName" />-Wert wurde nicht in einen Typ aufgelöst.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> ist gleich <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">Ruft die Typinformationen für diese Erweiterung ab oder legt sie fest.</summary>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">Der eingerichtete Typ. Aus Laufzeitgründen kann dieser <see langword="null" /> sein, um Zugriff zu erhalten. Er kann jedoch nicht auf <see langword="null" /> festgelegt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Es wurde versucht, es auf <see langword="null" /> festzulegen.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">Ruft den Typnamen, der durch diese Markuperweiterung dargestellt wird, ab oder legt ihn fest.</summary>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">Eine Zeichenfolge, die den Typ identifiziert. Diese Zeichenfolge verwendet das Format Präfix<c>:</c>Klassenname. (prefix ist das Zuordnungspräfix für einen XML-Namespace und ist nur erforderlich, um auf Typen zu verweisen, die nicht dem XML-Standard Namespace für WPF (<c>http://schemas.microsoft.com/winfx/2006/xaml/presentation</c>) zugeordnet sind.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Es wurde versucht, es auf <see langword="null" /> festzulegen.</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">Gibt die CLR-Eigenschaft einer Klasse an, die den Wert x:Uid Directive bereitstellt.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.UidPropertyAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">Der Name der Eigenschaft, die den <see langword="x:Uid" />-Wert bereitstellt.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">Ruft den Namen der CLR-Eigenschaft ab, die den Wert x:Uid Directive darstellt.</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">Der Name der CLR-Eigenschaft, die den Wert x:Uid-Direktivedarstellt.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">Gibt an, ob dieser Typ beim Erstellen des XAML-Objektdiagramms von oben nach unten (Top-Down) erstellt wird.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />-Klasse.</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">Definiert, ob die zugeordnete Klasse während der Initialisierung verwendet werden kann.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">Ruft einen Wert ab, der angibt, ob die zugeordnete Klasse während der Initialisierung verwendet werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die zugeordnete Klasse während der Initialisierung verwendet werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">Abstrakte Klasse, die Konvertierungsverhalten für die Serialisierung von einer Objektdarstellung definiert.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ValueSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob die angegebene <see cref="T:System.String" /> in eine Instanz des Typs konvertiert werden kann, den die Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> unterstützt.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Die Zeichenfolge, die für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob das angegebene Objekt in eine <see cref="T:System.String" /> konvertiert werden kann.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Das Objekt, das für die Konvertierung ausgewertet werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <paramref name="value" /> in eine <see cref="T:System.String" /> konvertiert werden kann, andernfalls <see langword="false." />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">Konvertiert beim Überschreiben in einer abgeleiteten Klasse eine <see cref="T:System.String" /> in eine Instanz des Typs, den die Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> unterstützt.</summary>
      <param name="value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Eine neue Instanz des Typs, der von der Implementierung von <see cref="T:System.Windows.Markup.ValueSerializer" /> auf Basis des bereitgestellten <paramref name="value" />s unterstützt wird.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert das angegebene Objekt beim Überschreiben in einer abgeleiteten Klasse in eine <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Das in eine Zeichenfolge zu konvertierende Objekt.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="A string representation of the specified object.">Eine Zeichenfolgendarstellung des angegebenen Objekts.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Gibt eine Ausnahme zurück, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Das Objekt, das nicht konvertiert werden konnte.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">Ein <see cref="T:System.Exception" />-Objekt für die Ausnahme, die ausgelöst wird, wenn eine <see langword="ConvertFrom" />-Konvertierung nicht durchgeführt werden kann.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Gibt eine Ausnahme zurück, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Das Objekt, das nicht konvertiert werden konnte.</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">Ein Typ, der den Typ darstellt, in den konvertiert werden sollte.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">Ein <see cref="T:System.Exception" />-Objekt für die Ausnahme, die ausgelöst wird, wenn eine <see langword="ConvertTo" />-Konvertierung nicht durchgeführt werden kann.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">Ruft den <see cref="T:System.Windows.Markup.ValueSerializer" /> ab, der für eine Eigenschaft deklariert wurde, indem ein CLR-Eigenschaftendeskriptor für die Eigenschaft übergeben wird.</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">Der CLR-Eigenschaftendeskriptor für die zu serialisierende Eigenschaft.</param>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">Das der angegebenen Eigenschaft zugeordnete Serialisierungsprogramm. Gibt möglicherweise <see langword="null" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">Ruft im angegebenen Kontext den für die angegebene Eigenschaft deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">Deskriptor für die zu serialisierende Eigenschaft.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="The serializer associated with the specified property.">Das der angegebenen Eigenschaft zugeordnete Serialisierungsprogramm.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">Ruft den für den angegebenen Typ deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Der Typ, für den der <see cref="T:System.Windows.Markup.ValueSerializer" /> abgerufen werden soll.</param>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">Das dem angegebenen Typ zugeordnete Serialisierungsprogramm. Gibt möglicherweise <see langword="null" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">Ruft im angegebenen Kontext den für den angegebenen Typ deklarierten <see cref="T:System.Windows.Markup.ValueSerializer" /> ab.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Der Typ, für den der <see cref="T:System.Windows.Markup.ValueSerializer" /> abgerufen werden soll.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="The serializer associated with the specified type.">Das dem angegebenen Typ zugeordnete Serialisierungsprogramm.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Ruft eine Enumeration der vom <see cref="T:System.Windows.Markup.ValueSerializer" /> referenzierten Typen ab.</summary>
      <param name="value" vsli:raw="The value being serialized.">Der serialisierte Wert.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Die für die Konvertierung verwendeten Kontextinformationen.</param>
      <returns vsli:raw="The types converted by this serializer.">Die durch dieses Serialisierungsprogramm konvertierten Typen.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Gibt die <see cref="T:System.Windows.Markup.ValueSerializer" />-Klasse an, die bei der Serialisierung von einem Typ oder einer Eigenschaft verwendet werden soll.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.ValueSerializerAttribute" />-Klasse mit einer durch die Assembly qualifizierten Typnamenzeichenfolge.</summary>
      <param name="valueSerializerTypeName">Die durch die Assembly qualifizierte Typnamenzeichenfolge für die zu verwendende <see cref="T:System.Windows.Markup.ValueSerializer" />-Klasse.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <see cref="T:System.Windows.Markup.ValueSerializerAttribute" />-Klasse.</summary>
      <param name="valueSerializerType">Ein Typ , der den Typ der <see cref="T:System.Windows.Markup.ValueSerializer" />-Klasse darstellt.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Ruft den Typ der <see cref="T:System.Windows.Markup.ValueSerializer" />-Klasse ab, die von diesem Attribut gemeldet wird.</summary>
      <returns>Der Typ des <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Ruft den qualifizierten Assemblynamen des <see cref="T:System.Windows.Markup.ValueSerializer" />-Typs für diesen Typ oder diese Eigenschaft ab.</summary>
      <returns>Der qualifizierte Assemblyname des Typs.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">Gibt an, dass ein Auflistungstyp bei der Verarbeitung durch einen XAML-Prozessor als leerraumsignifikant behandelt werden soll.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">Gibt an, dass eine Klasse oder eine Eigenschaft über eine verzögerte Auslastungsverwendung für XAML (z. B. ein Vorlagenverhalten) verfügt, und meldet die Klasse, die das verzögernde Verhalten und seinen Ziel-/Inhaltstyp aktiviert.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />-Klasse unter Verwendung der Zeichenfolgennamen von Typen.</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">Der Zeichenfolgenname des Typs für die Implementierung, der zum Verzögern des Ladeverhaltens verwendet werden soll.</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Der Zeichenfolgenname des Typs für den Ziel-/Inhaltstyp des verzögerten Ladeverhaltens.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> oder <paramref name="contentType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />-Klasse unter Verwendung von CLR-<see cref="T:System.Type" />-Werten.</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Der CLR-<see cref="T:System.Type" />-Wert zur Implementierung, der zum Verzögern des Ladeverhaltens verwendet werden soll.</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Der CLR-<see cref="T:System.Type" />-Wert für den Ziel-/Inhaltstyp zum Verzögern des Ladeverhaltens.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> oder <paramref name="contentType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Ruft den CLR-<see cref="T:System.Type" />-Wert für den Ziel-/Inhaltstyp zum Verzögern des Ladeverhaltens ab.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Der CLR-<see cref="T:System.Type" />-Wert für den Ziel-/Inhaltstyp zum Verzögern des Ladeverhaltens.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">Ruft den Zeichenfolgennamen des Typs für die Implementierung ab, der zum Verzögern des Ladeverhaltens verwendet werden soll.</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">Der Zeichenfolgenname des Typs für die Konvertierung, der zum Verzögern des Ladeverhaltens verwendet werden soll.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Ruft den CLR-<see cref="T:System.Type" />-Wert zur Implementierung ab, der zum Verzögern des Ladeverhaltens verwendet werden soll.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Der CLR-<see cref="T:System.Type" />-Wert zur Implementierung, der zum Verzögern des Ladeverhaltens verwendet werden soll.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">Ruft den Zeichenfolgenname des Typs für den Ziel-/Inhaltstyp des verzögerten Ladeverhaltens ab.</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Der Zeichenfolgenname des Typs für den Ziel-/Inhaltstyp des verzögerten Ladeverhaltens.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">Gibt an, dass eine Klasse mithilfe einer Markuperweiterung einen Wert bereitstellen kann, und verweist auf einen Handler, der für Vorgänge im Markuperweiterungssatz verwendet werden soll.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />-Klasse.</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">Der Name des Handlers, der für Vorgänge im Markuperweiterungssatz verwendet werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">Ruft den Namen des Handlers ab, der für Vorgänge im Markuperweiterungssatz verwendet werden soll.</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">Der Name des Handlers, der für Vorgänge im Markuperweiterungssatz verwendet werden soll.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">Stellt Daten für Rückrufe bereit, die aufgerufen werden, wenn ein XAML-Objektwriter einen Wert mithilfe einer Markuperweiterung festlegt.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />-Klasse.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">XAML-Typsystem-/Schemainformationen für den Member, der festgelegt wird.</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">Der Markuperweiterungsverweis, der für den Member bereitgestellt wird, der festgelegt wird.</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">Dienstanbieterinformationen, die zur Markuperweiterung weitergeleitet werden.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Bietet eine Möglichkeit, einen Rückruf aufzurufen, wie auf einer Basisklasse des aktuellen handelnden Typs definiert.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Ruft den <see cref="T:System.Windows.Markup.MarkupExtension" />-Verweis ab, der für dieses <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />-Objekt relevant ist.</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Der Markuperweiterungsverweis, der für dieses <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />-Objekt relevant ist.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">Ruft Dienstanbieterinformationen ab, die an die Markuperweiterung weitergeleitet wurden.</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">Dienstanbieterinformationen, die an die Markuperweiterung weitergeleitet wurden.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">Gibt an, dass eine Klasse mithilfe eines Typkonverters einen Wert bereitstellen kann, und verweist auf einen Handler, der zum Einstellen des Typkonverters verwendet werden soll.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />-Klasse.</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">Der Name des Handlers, der zur Einstellung des Typkonverters verwendet werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Ruft den <paramref name="xamlSetTypeConverterHandler" />-Initialisierungswert (Handlername) ab, der im <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />-Objekt angegeben ist.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Der <paramref name="xamlSetTypeConverterHandler" />-Wert, der im <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />-Objekt angegeben ist.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">Stellt Daten für Rückrufe bereit, die aufgerufen werden, wenn ein XAML-Writer einen Wert mithilfe eines Typkonverteraufrufs festlegt.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />-Klasse.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">XAML-Typsystem-/Schemainformationen für den Member, der festgelegt wird.</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">Die bestimmte Typkonverterinstanz, die aufgerufen wird.</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">Der Wert, der für den festzulegenden Member bereitgestellt wird.</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Dienstanbieterinformationen, die von der <paramref name="typeConverter" />-Klasse verwendet werden können.</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Kulturinformationen, die von der <paramref name="typeConverter" />-Klasse verwendet werden können, wenn <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />-Objekte und andere Methoden aufgerufen werden.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Bietet eine Möglichkeit, einen Rückruf aufzurufen, wie auf einer Basisklasse des aktuellen handelnden Typs definiert.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Ruft <see cref="T:System.Globalization.CultureInfo" />-Informationen ab, die von der Typkonverterklasse verwendet werden können, wenn <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />-Objekte und andere Methoden aufgerufen werden.</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">Kulturinformationen, die von der Typkonverterklasse verwendet werden können</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">Ruft <see cref="T:System.IServiceProvider" />-Informationen ab, die von der Typkonverterklasse verwendet werden können.</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Dienstanbieterinformationen, die von der <paramref name="typeConverter" />-Klasse verwendet werden können.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">Ruft die <see cref="T:System.ComponentModel.TypeConverter" />-Instanz ab, die aufgerufen wird und Typkonvertierungsverhalten bereitstellt.</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">Der Typkonverter, der Typkonverterverhalten bereitstellt.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">Stellt Daten für Rückrufe bereit, die aufgerufen werden, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" /> bestimmte Werte festlegt.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />-Klasse.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">XAML-Typsystem-/Schemainformationen für den Member, der festgelegt wird.</param>
      <param name="value" vsli:raw="The value to provide for the member.">Der Wert, der für den Member bereitgestellt werden soll.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">Bietet beim Überschreiben in einer abgeleiteten Klasse eine Möglichkeit, einen <see langword="SetValue" />-Rückruf aufzurufen, wie auf einer Basisklasse des aktuellen handelnden Typs definiert.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">Ruft einen Wert ab oder legt einen Wert fest, der bestimmt, ob ein Anrufer, der das <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />-Objekt verwendet, die Werte verwenden kann, ohne <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> aufrufen zu müssen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Werte hilfreich wären und das Aufrufen von <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> nicht erforderlich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">Ruft XAML-Typsysteminformationen und XAML-Schemainformationen für den festgelegten Member ab.</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">XAML-Typsysteminformationen und XAML-Schemainformationen für den festgelegten Member.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">Ruft den Wert ab, der für den festzulegenden Member bereitgestellt wird.</summary>
      <returns vsli:raw="The value to provide for the member being set.">Der Wert, der für den festzulegenden Member bereitgestellt wird.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">Stellt Literaldaten dar, die als Wert für einen <see langword="Value" />-Knoten angezeigt werden können.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XData" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">Ruft die Literalwertzeichenfolge ab, die von diesem <see cref="T:System.Windows.Markup.XData" />-Objekt umschlossen wird, oder legt sie fest.</summary>
      <returns vsli:raw="The literal value string.">Die Literalwertzeichenfolge.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">Ruft einen Reader für die Literaldaten ab oder legt diese fest.</summary>
      <returns vsli:raw="A reader for the literal data.">Ein Reader für die Literaldaten.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">Bezeichnet die Eigenschaft, die dem Attribut xml:lang zugeordnet werden soll.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">Der Eigenschaftenname, der dem <see langword="xml:lang" />-Attribut zugeordnet werden soll.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">Ruft den Namen der Eigenschaft ab, die in diesem Attribut angegeben wird.</summary>
      <returns vsli:raw="The name of the property.">Den Namen der Eigenschaft.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">Gibt an, dass ein XAML-Namespace in einen anderen XAML-Namespace eingeordnet werden kann. In der Regel wird der zusammenfassende XAML-Namespace in einem zuvor definierten <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> angegeben.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />-Klasse.</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">Der XAML-Namespacebezeichner für den Verweis.</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">Der Bezeichner des XAML-Namespace für die Einordnung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> oder <paramref name="newNamespace" /> sind <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">Ruft den Namespacebezeichner für die Einordnung ab, der von diesem Attribut gemeldet wird.</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">Der zusammenfassende Namespacebezeichner, der von diesem Attribut gemeldet wird.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">Ruft den Namespacebezeichner für den Verweis ab, der von diesem Attribut gemeldet wird.</summary>
      <returns vsli:raw="The reference namespace identifier.">Der Namespacebezeichner für den Verweis.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">Gibt eine Zuordnung pro Assembly zwischen einem XAML- und einem CLR-Namespace an, die dann von einem XAML-Objektwriter oder einem XAML-Schemakontext für die Typauflösung verwendet wird.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />-Klasse.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Der Bezeichner für den XAML-Namespace.</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">Eine Zeichenfolge, die auf einen CLR-Namespacenamen verweist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> oder <paramref name="clrNamespace" /> sind <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">Ruft den Namen der Assembly ab, die diesem Attribut zugeordnet ist, oder legt den Namen fest.</summary>
      <returns vsli:raw="The assembly name.">Der Name der Assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">Ruft den Zeichenfolgennamen des CLR-Namespace ab, der in diesem Attribut angegeben wird.</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">Der als Zeichenfolge angegebene CLR-Namespace.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">Ruft den in diesem Attribut angegebenen XAML-Namespacebezeichner ab.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Der XAML-Namespacebezeichner.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">Gibt ein empfohlenes Präfix an, das einem XAML-Namespace für die XAML-Verwendung zugeordnet werden soll, wenn Elemente und Attribute in eine XAML-Datei geschrieben werden (Serialisierung) oder wenn mit einer Entwurfsumgebung interagiert wird, die XAML-Bearbeitungsfunktionen aufweist.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />-Klasse.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Der XAML-Namespacebezeichner.</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">Die empfohlene Präfixzeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> oder <paramref name="prefix" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">Ruft das diesem Attribut zugeordnete empfohlene Präfix ab.</summary>
      <returns vsli:raw="The recommended prefix string.">Die empfohlene Präfixzeichenfolge.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">Ruft den XAML-Namespacebezeichner ab, der diesem Attribut zugeordnet ist.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Der XAML-Namespacebezeichner.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">Meldet Informationen zu einer Ambient-Eigenschaft als Teil einer <see cref="T:System.Xaml.IAmbientProvider" />-Implementierung.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.AmbientPropertyValue" />-Klasse.</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">Der Bezeichner, der die Ambient-Eigenschaft darstellt.</param>
      <param name="value" vsli:raw="The value to report.">Der zu meldende Wert.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">Ruft den XAML-Typsystembezeichner ab, der (<see cref="T:System.Xaml.XamlMember" />), der die Ambient-Eigenschaft darstellt.</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">Der Bezeichner, der die Ambient-Eigenschaft darstellt.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">Ruft den Wert der Ambient-Eigenschaft ab.</summary>
      <returns vsli:raw="The value of the ambient property.">Der Wert der Ambient-Eigenschaft.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">Stellt eine Darstellung von XAML-Typsystembezeichnern für anfügbare Member bereit. Die Bezeichnerstruktur ist parallel zur <paramref name="declaringType" /><see langword="." /><paramref name="memberName" />-Zeichenfolgenform für die Verwendung durch anfügbare Member vorhanden.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.AttachableMemberIdentifier" />-Klasse.</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">Die <paramref name="declaringType" />-Komponente des Bezeichners, die dem Namen der deklarierenden <see cref="P:System.Xaml.XamlMember.Type" />-Eigenschaft entsprechen muss.</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Die <paramref name="memberName" />-Komponente des Bezeichners, die dem <see cref="P:System.Xaml.XamlMember.Name" /> entsprechen muss.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Ruft den <paramref name="declaringType" />-Komponentenwert des <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Der <paramref name="declaringType" />-Komponentenwert des <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">Bestimmt, ob diese Instanz von <see cref="T:System.Xaml.AttachableMemberIdentifier" /> und ein bestimmtes Objekt denselben Wert haben.</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Das Objekt, das mit der aktuellen <see cref="T:System.Xaml.AttachableMemberIdentifier" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="obj" /> ein <see cref="T:System.Xaml.AttachableMemberIdentifier" />-Objekt ist und den gleichen Wert wie diese Instanz hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">Bestimmt, ob diese Instanz und ein anderes angegebenes <see cref="T:System.Xaml.AttachableMemberIdentifier" />-Objekt denselben Wert haben.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Das <see cref="T:System.Xaml.AttachableMemberIdentifier" />, das mit dem aktuellen <see cref="T:System.Xaml.AttachableMemberIdentifier" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Objekte den gleichen Wert aufweisen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Gibt den Hashcode für diese <see cref="T:System.Xaml.AttachableMemberIdentifier" /> zurück.</summary>
      <returns vsli:raw="An integer hash code.">Ein ganzzahliger Hashcode.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Ruft den <paramref name="memberName" />-Komponentenwert des <see cref="T:System.Xaml.AttachableMemberIdentifier" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Der <paramref name="memberName" />-Komponentenwert des <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.AttachableMemberIdentifier" />-Objekte denselben Wert haben.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Xaml.AttachableMemberIdentifier" /> oder <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Xaml.AttachableMemberIdentifier" /> oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> denselben Wert haben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.AttachableMemberIdentifier" />-Objekte verschiedene Werte haben.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Xaml.AttachableMemberIdentifier" /> oder <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Xaml.AttachableMemberIdentifier" /> oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert von <paramref name="left" /> vom Wert von <paramref name="right" /> abweicht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Gibt eine <see cref="T:System.String" /> zurück, die das aktuelle <see cref="T:System.Xaml.AttachableMemberIdentifier" /> darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Ein <see cref="T:System.String" />, der den aktuellen <see cref="T:System.Xaml.AttachableMemberIdentifier" /> darstellt.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">Stellt statische Hilfsmethoden bereit, mit denen Werte und Accessormethodeninformationen aus einer anfügbaren Eigenschaft abgerufen werden und die mit einem angefügten Eigenschaftsspeicher arbeiten.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">Kopiert alle anfügbaren Eigenschafts-/Wertpaare aus einem angegebenen anfügbaren Eigenschaftsspeicher und in ein Zielarray.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Ein bestimmter anfügbarer Eigenschaftsspeicher, der das <see cref="T:System.Xaml.IAttachedPropertyStore" />-Element implementiert, oder ein beliebiges Objekt ungleich NULL für den Zugriff auf einen statischen, anfügbaren Standardeigenschaftsspeicher.</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Das Zielarray. Das Array ist ein generisches Array, das ohne Dimension übergeben werden sollte und Komponenten von <see cref="T:System.Xaml.AttachableMemberIdentifier" /> und <see langword="object" /> enthalten muss.</param>
      <param name="index" vsli:raw="The source index into which to copy.">Der Quellindex, an dem der Kopiervorgang stattfinden soll.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">Gibt die Anzahl der anfügbaren Eigenschaftseinträge im angegebenen Speicher zurück.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Ein bestimmter anfügbarer Eigenschaftsspeicher, der das <see cref="T:System.Xaml.IAttachedPropertyStore" />-Element implementiert, oder ein beliebiges Objekt ungleich NULL für den Zugriff auf einen statischen, anfügbaren Standardeigenschaftsspeicher.</param>
      <returns vsli:raw="The integer count of entries in the store.">Die ganzzahlige Anzahl der Einträge im Speicher.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">Entfernt den Eintrag für die angegebene anfügbare Eigenschaft aus dem angegebenen Speicher.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Ein bestimmter anfügbarer Eigenschaftsspeicher, der das <see cref="T:System.Xaml.IAttachedPropertyStore" />-Element implementiert, oder ein beliebiges Objekt ungleich NULL für den Zugriff auf einen statischen, anfügbaren Standardeigenschaftsspeicher.</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">Der Bezeichner für den aus dem Speicher zu entfernenden anfügbaren Eigenschaftseintrag.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im Speicher ein anfügbarer Eigenschaftseintrag für <paramref name="name" /> gefunden und entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">Legt einen Wert für die angegebene anfügbare Eigenschaft im angegebenen Speicher fest.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Ein bestimmter anfügbarer Eigenschaftsspeicher, der das <see cref="T:System.Xaml.IAttachedPropertyStore" />-Element implementiert, oder ein Objekt ungleich NULL, das einen statischen, anfügbaren Standardeigenschaftsspeicher verwenden soll.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">Der Bezeichner des anfügbaren Eigenschaftseintrags, für den ein Wert festgelegt werden soll.</param>
      <param name="value" vsli:raw="The value to set.">Der festzulegende Wert.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">Ein Wert könnte nicht im Speicher festgelegt werden.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">Versucht, einen Wert für die angegebene anfügbare Eigenschaft im angegebenen Speicher abzurufen. Löst keine Ausnahme aus, wenn die bestimmte anfügbare Eigenschaft im Speicher nicht vorhanden ist.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Ein bestimmter anfügbarer Eigenschaftsspeicher, der das <see cref="T:System.Xaml.IAttachedPropertyStore" />-Element implementiert, oder ein Objekt ungleich NULL, das einen statischen, anfügbaren Standardeigenschaftsspeicher verwenden soll.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Der Bezeichner des anfügbaren Eigenschaftseintrags, für den ein Wert abgerufen werden soll.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Out-Parameter. Enthält bei Beendigung dieser Methode das Zielobjekt für den Wert, wenn <paramref name="name" /> im Speicher vorhanden ist und über einen Wert verfügt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im Speicher ein anfügbarer Eigenschaftseintrag für <paramref name="name" /> gefunden wurde und ein Wert an <paramref name="value" /> gesendet wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">Versucht, einen Wert für die angegebene anfügbare Eigenschaft im angegebenen Speicher abzurufen und gibt ein generisches Ausgabeformat zurück. Löst keine Ausnahme aus, wenn die bestimmte anfügbare Eigenschaft im Speicher nicht vorhanden ist.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Ein bestimmter anfügbarer Eigenschaftsspeicher, der das <see cref="T:System.Xaml.IAttachedPropertyStore" />-Element implementiert, oder ein beliebiges Objekt ungleich NULL für den Zugriff auf einen statischen, anfügbaren Standardeigenschaftsspeicher.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Der Bezeichner des anfügbaren Eigenschaftseintrags, für den ein Wert abgerufen werden soll.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Out-Parameter. Enthält bei Beendigung dieser Methode das Zielobjekt für den Wert, wenn <paramref name="name" /> im Speicher vorhanden ist und über einen Wert verfügt.</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">Der erwartete Typ der Ausgabe.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im Speicher ein anfügbarer Eigenschaftseintrag für <paramref name="name" /> gefunden wurde und ein Wert an <paramref name="value" /> gesendet wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">Stellt einen Dienst dar, von dem Informationselemente zu Ambient-Eigenschaften oder Ambient-Typen an Typkonverter und Markuperweiterungen zurückgegeben werden können.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">Gibt einen aufzählbaren Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Typen und Eigenschaften zurück.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird. Dieser Typ enthält die gewünschte Ambient-Eigenschaft. Kann <see langword="null" /> sein.</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um keinen gespeicherten Kontext zu verwenden; <see langword="false" />, um einen gespeicherten Kontext zu verwenden. Die Standardeinstellung ist <see langword="false" />.</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">Gibt mindestens ein Typbezeichnerobjekt an, das die Typen identifiziert, die als ambient betrachtet werden sollen.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Gibt mindestens einen Eigenschaftenbezeichner an, durch den die Eigenschaften identifiziert werden, die als ambient betrachtet werden sollen.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">Ein aufzählbarer Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Typen und Eigenschaften. Die Eigenschaftsinformationen für jedes zurückgegebene <see cref="T:System.Xaml.AmbientPropertyValue" />-Objekt entsprechen einer der eingegebenen <paramref name="types" /> oder <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">Gibt einen aufzählbaren Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Eigenschaftssatz zurück.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird. Dieser Typ enthält die gewünschte Ambient-Eigenschaft. Kann <see langword="null" /> sein.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Gibt mindestens einen Eigenschaftenbezeichner an, durch den die Eigenschaften identifiziert werden, die als ambient betrachtet werden sollen.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">Ein aufzählbarer Satz von Ambient-Eigenschaftsinformationselementen für den angeforderten Satz von Eigenschaften. Die Eigenschaftsinformationen für jedes zurückgegebene <see cref="T:System.Xaml.AmbientPropertyValue" />-Objekt entsprechen einer der eingegebenen <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">Gibt einen aufzählbaren Satz von Objektinstanzen möglicher Ambient-Typen für die angeforderten Typen zurück.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Der Satz von Typen, von dem Informationen zu Ambient-Typen abgerufen werden sollen.</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">Ein aufzählbarer Satz von Objekten, die die Werte für den angeforderten Satz von <see cref="T:System.Xaml.XamlType" />-Bezeichnern darstellen.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">Gibt ein einzelnes Ambient-Eigenschaftsinformationselement vom angeforderten Eigenschaftssatz zurück. Dies ist abhängig von der zuerst gefundenen Eigenschaft.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">Gibt mindestens einen Typ an, von dem die Auswertung beendet werden sollte, wenn er im Objektdiagramm nach oben traversiert wird. Dieser Typ enthält die gewünschte Ambient-Eigenschaft.</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">Gibt mindestens ein Objekt an, durch das die Eigenschaften identifiziert werden, die als "ambient" betrachtet werden sollen.</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">Ein einzelnes Ambient-Eigenschaftsinformationselement für den ersten Ambient-Eigenschaftswert aus der <paramref name="properties" />-Liste, der gefunden wird.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">Gibt das erste übereinstimmende Objekt zurück, bei dem es sich um einen möglichen Ambient-Typ für die angeforderten Typen handelt.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Der Satz von Typen, von dem Informationen zu Ambient-Typen abgerufen werden sollen.</param>
      <returns vsli:raw="The first result object for the requested set.">Das erste Ergebnisobjekt für den angeforderten Satz.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">Stellt einen anfügbaren Memberspeicher für ein Objekt dar, in dem anfügbare Member festgelegt werden. Auf diesen anfügbaren Memberspeicher kann anschließend mit <see cref="T:System.Xaml.AttachablePropertyServices" /> verwiesen werden.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">Kopiert alle anfügbaren Member-Wert-Paare aus diesem anfügbaren Memberspeicher in ein Zielarray.</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Das Zielarray. Das Array ist ein generisches Array, das ohne Dimension übergeben werden sollte und Komponenten von <see cref="T:System.Xaml.AttachableMemberIdentifier" /> und <see langword="object" /> enthalten muss.</param>
      <param name="index" vsli:raw="The source index where copying should begin.">Der Quellindex, an dem der Kopiervorgang beginnen soll.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">Ruft die Anzahl der anfügbaren Membereinträge in diesem anfügbaren Memberspeicher ab.</summary>
      <returns vsli:raw="The integer count of entries in the store.">Die ganzzahlige Anzahl der Einträge im Speicher.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">Entfernt den Eintrag für den angegebenen anfügbaren Member aus diesem anfügbaren Memberspeicher.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">Der XAML-Typsystembezeichner für den zu entfernenden anfügbaren Membereintrag.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im Speicher ein anfügbarer Membereintrag für <paramref name="attachableMemberIdentifier" /> gefunden und entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">Legt einen Wert für den angegebenen anfügbaren Member im angegebenen Speicher fest.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">Der XAML-Typsystembezeichner für den festzulegenden anfügbaren Membereintrag.</param>
      <param name="value" vsli:raw="The value to set.">Der festzulegende Wert.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">Versucht, einen Wert für den angegebenen anfügbaren Member im angegebenen Speicher abzurufen.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">Der XAML-Typsystembezeichner für den abzurufenden anfügbaren Membereintrag.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Out-Parameter. Enthält bei Beendigung dieser Methode das Zielobjekt für den Wert, wenn <paramref name="attachableMemberIdentifier" /> im Speicher vorhanden ist und über einen Wert verfügt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im Speicher ein anfügbarer Membereintrag für <paramref name="attachableMemberIdentifier" /> gefunden wurde und ein Wert an <paramref name="value" /> gesendet wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">Stellt einen Dienst dar, von dem ein CLR-Typsystembezeichner für den Zieltyp zurückgegeben werden kann. Der Zieltyp ist in Fällen relevant, in denen der Zieltyp für einen property-setting-Vorgang durch Reflektion oder andere Mechanismen indirekt gemeldet wird.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">Gibt den CLR-<see cref="T:System.Type" /> zurück, der den Zieltyp für den relevanten Typkonverter oder die Markuperweiterung angibt.</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">Ein CLR-<see cref="T:System.Type" />-Wert für den Zieltyp.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">Stellt einen Dienst dar, von dem das empfohlene Präfix für eine XAML-Namespacezuordnung an Consumer zurückgegeben werden kann. Zu Consumern können beispielsweise Entwurfsumgebungen oder Serialisierungsprogramme zählen.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">Gibt das empfohlene Präfix für einen angegebenen XAML-Namespacebezeichner zurück.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">Die Zeichenfolge für den XAML-Namespacebezeichner, für die ein Präfix abgerufen werden soll.</param>
      <returns vsli:raw="The recommended prefix.">Das empfohlene Präfix.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">Beschreibt einen Dienst, der das Stammobjekt des analysierten Markups zurückgeben kann.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">Ruft das Stammobjekt aus dem Markup oder aus einem Objektdiagramm ab.</summary>
      <returns vsli:raw="The root object.">Das Stammobjekt.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">Stellt einen Dienst bereit, der ein indiziertes Knotensteuerelement für die einfache Implementierung eines knotenbasierten XAML-Readers darstellt.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">Ruft die Anzahl der Knoten in der aktuellen externen Knotengruppe ab.</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">Die Anzahl der Knoten in der aktuellen externen Knotengruppe.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">Ruft die Indexnummer der aktuellen Readerposition für die indizierte Listenansicht von XAML-Knoten ab oder legt diese fest.</summary>
      <returns vsli:raw="The index number of the current reader position.">Die Indexnummer der aktuellen Readerposition.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">Beschreibt einen Dienst zum Melden von Textzeileninformationen in XAML-Readerimplementierungen.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Ruft einen Wert ab, der angibt, ob Zeileninformationen verfügbar sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Zeileninformationen verfügbar sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Ruft die zu berichtende Zeilennummer ab.</summary>
      <returns vsli:raw="The line number to report.">Die Zeilennummer, die im Bericht enthalten sein soll.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Ruft die zu berichtende Zeilenposition ab.</summary>
      <returns vsli:raw="The line position to report.">Die Zeilenposition, die im Bericht enthalten sein soll.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">Beschreibt einen Dienst, in dem von einem XAML-Writer gemeldete Zeileninformationen verwendet werden können, die anschließend in die Ausgabe eingeschlossen werden.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">Sammelt Zeileninformationen.</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">Die Zeilennummer, die in der Ausgabe verwendet werden soll.</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">Die Zeilenposition, die in der Ausgabe verwendet werden soll.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">Ruft einen Wert ab, der bestimmt, ob von einem Zeileninformationsdienst Werte bereitgestellt werden sollen und ob dementsprechend <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> aufgerufen werden muss, wenn dies relevant ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Zeileninformationen von der Implementierung verwendet werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">Stellt einen Dienst bereit, der bei Speicher- und Schreibvorgängen verwendet wird, um ein Objekt einzugeben und einen XAML-Namen zurückzugeben.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">Ruft den XAML-Namen des angegebenen Objekts ab.</summary>
      <param name="value" vsli:raw="The object to get the name for.">Das Objekt, für das der Name abgerufen werden soll.</param>
      <returns vsli:raw="The XAML name value of the requested object.">Der Wert des XAML-Namens des angeforderten Objekts.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">Beschreibt einen Dienst, von dem nach dem XAML-Namen angegebene Objekte zurückgegeben werden können, oder von dem alternativ ein Token zurückgegeben wird, das die Namensauflösung zurückstellt. Vom Dienst kann auch ein aufzählbarer Satz aller benannten Objekte zurückgegeben werden, die im XAML-Namescope enthalten sind.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">Gibt einen aufzählbaren Satz aller benannten Objekte im XAML-Namescope zurück.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">Ein aufzählbarer Satz von <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Objekten. Für jede <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Struktur ist die <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Komponente eine Zeichenfolge, und die <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" />-Komponente ist das Objekt, von dem der <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" />-Name im XAML-Namescope verwendet wird.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Gibt ein Objekt zurück, das bestimmte Markupmuster korrigieren kann, die Vorwärtsverweise erzeugen.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Eine Auflistung von Namen, die mögliche Vorwärtsverweise sind.</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der aufgelöste Namensverweis sofort der Zieleigenschaft zugewiesen werden soll. <see langword="false" />, wenn der Benutzercode für eine erneute Analyse aufgerufen werden soll. Das Standardverhalten ist <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">Ruft einen Wert ab, der bestimmt, ob der Aufruf der <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />-Methode möglich ist, um einen Namen in ein Token für Vorwärtsauflösung aufzulösen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> als Implementierung verfügbar ist, von der ein nützliches Token für die Vorwärtsauflösung zurückgegeben wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">Tritt auf, wenn von einem XAML-Prozessor alle relevanten Namen zur Unterstützung des XAML-Namescopes registriert wurden.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">Löst ein Objekt aus einem Namensverweis auf.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Der aufzulösende Namenverweis.</param>
      <returns vsli:raw="The resolved object; or null.">Das aufgelöste Objekt oder NULL.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">Löst ein Objekt von einem Namensverweis auf und stellt einen Nachverfolgungswert bereit, durch den angegeben wird, ob das Objekt vollständig zu Objektdiagrammzwecken initialisiert wurde.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Der aufzulösende Namenverweis.</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Nach dem Beenden dieser Methode <see langword="true" />, wenn das zurückgegebene Objekt von nicht aufgelösten Verweisen abhängig ist, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Ein Objekt, das ein Token für das Suchverhalten bereitstellt, das später ausgewertet werden soll.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">Beschreibt einen Dienst, von dem auf Grundlage des Präfixes ein XAML-Namespace gemäß der Zuordnung im XAML-Markup zurückgegeben werden kann.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">Ruft einen XAML-Namespacebezeichner für die angegebene Präfixzeichenfolge ab.</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">Das Präfix, für das die XAML-Namespaceinformationen abgerufen werden sollen.</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">Der angeforderte XAML-Namespacebezeichner als Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">Gibt alle möglichen Zuordnungen von Präfixen zu XAML-Namespaces zurück (<see cref="T:System.Xaml.NamespaceDeclaration" />-Werte), die im aktiven XAML-Schemakontext verfügbar sind.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">Ein aufzählbarer Satz von <see cref="T:System.Xaml.NamespaceDeclaration" />-Werten. Rufen Sie den <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" />-Wert von jedem Wert in der Rückgabemenge ab, um alle Präfixzeichenfolgen zu erhalten. Wenn Präfixe für bestimmte XAML-Namespaces abgerufen werden sollen, verarbeiten Sie jeden Rückgabewert, der über den gewünschten <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" />-Wert verfügt.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">Stellt einen Dienst dar, der ein <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt generiert, das auf dem aktuellen internen Parserkontext basiert.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">Gibt das <see cref="T:System.Xaml.XamlObjectWriterSettings" />-Objekt vom ursprünglichen internen Parserkontext zurück.</summary>
      <returns vsli:raw="The settings from the original internal parser context.">Die Einstellungen aus dem ursprünglichen internen Parserkontext.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">Gibt ein <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt zurück, das auf dem aktiven XAML-Schemakontext basiert.</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Die Einstellungen, die für die Erstellung und Initialisierung des <see cref="T:System.Xaml.XamlObjectWriter" />-Objekts verwendet werden sollen.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">Ein <see cref="T:System.Xaml.XamlObjectWriter" /> mit den angegebenen Einstellungen.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">Stellt einen Dienst dar, der XAML-Schema-Kontextinformationen für Typkonverter und Markuperweiterungen bereitstellt.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">Ruft das vom Dienstkontext gemeldete <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt ab.</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">Der vom Dienstkontext gemeldete XAML-Schemakontext.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">Deklariert den Bezeichner und das Präfix für einen XAML-Namespace durch Speichern dieser Zeichenfolgenwerte als separate Eigenschaften.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.NamespaceDeclaration" />-Klasse mit Anfangseigenschaftswerten.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">Der XAML-Namespacebezeichner als Zeichenfolge.</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">Das in Präfixzuordnungen für den Namespace verwendete Zeichenfolgenpräfix.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Ruft die Bezeichnerkomponente einer <see cref="T:System.Xaml.NamespaceDeclaration" /> ab.</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">Der Bezeichner der XAML-Namespacedeklaration.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Ruft das als XAML-Namespacezuordnungspräfix verwendete Präfix für eine <see cref="T:System.Xaml.NamespaceDeclaration" /> ab.</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Die Präfixzeichenfolge für diese <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Definiert Zugriffssteuerung für Assemblys und Typen für XAML-Ladevorgänge.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Gibt auf Grundlage einer von <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> angeforderten Assembly eine <see cref="T:System.Reflection.Assembly" />-Instanz zurück.</summary>
      <param name="assembly">Der Assembly für die Anforderung.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, in der der <paramref name="assembly" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Gibt auf Grundlage einer von <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> angeforderten Assembly eine <see cref="T:System.Reflection.AssemblyName" />-Instanz zurück.</summary>
      <param name="assemblyName">Der Assemblyname für die Anforderung.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, in der der <paramref name="assemblyName" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> ist kein gültiger, vollqualifizierter Assemblyname.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Ruft die <see cref="T:System.Reflection.AssemblyName" />-Klasse der Assembly ab, für die durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</summary>
      <returns>Die <see cref="T:System.Reflection.AssemblyName" />-Klasse der Assembly, für die durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Gibt auf Grundlage eines bestimmten, durch seinem qualifizierten Namen angegebenen Typs eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz zurück.</summary>
      <param name="assemblyQualifiedTypeName">Eine Zeichenfolge, die als durch die Assembly qualifizierter Typname analysiert wird.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, bei der <paramref name="assemblyQualifiedTypeName" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> verwendet wird und <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> durch die Reflektion des Typs bestimmt wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> ist kein gültiger Assembly-qualifizierter Typname.
- oder -
Der Assemblyname innerhalb von <paramref name="assemblyQualifiedTypeName" /> ist kein gültiger Assemblyname.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Gibt auf Grundlage eines bestimmten Typs, der durch <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> angegeben wird, eine <see cref="T:System.Type" />-Instanz zurück.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Klasse, für die Zugriff angefordert werden soll.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, bei der <paramref name="type" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> verwendet wird und <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> durch die Reflektion des Typs bestimmt wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Ruft den nicht qualifizierten Zeichenfolgennamen des Typs ab, für den durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</summary>
      <returns>Der nicht qualifizierte Zeichenfolgenname des Typs, für den durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Deklariert Berechtigungen zum Laden von Typen aus Assemblys, die von einem XAML-Reader oder -Writer verwendet werden.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und verwendet einen aufzählbaren Satz bestimmter <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werte.</summary>
      <param name="allowedAccess">Ein aufzählbarer Satz von bestimmten <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> enthielt ungültige Informationen, z. B. ein NULL-Element.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse mithilfe von vorhandenen Berechtigungen.</summary>
      <param name="state">Ein <see cref="T:System.Security.Permissions.PermissionState" />-Enumerationswert.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse unter Verwendung eines einzelnen <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werts.</summary>
      <param name="allowedAccess">Der definierende <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Wert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Ruft die Liste aller <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werte ab, die diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse darstellt.</summary>
      <returns>Eine schreibgeschützte Liste mit <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werten oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und gibt die Kopie zurück.</summary>
      <returns>Eine Kopie der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="elem">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> enthält die XML-Codierung nicht für einen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.

oder -
Das Versionsattribut in <paramref name="elem" /> wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Gibt zurück ob diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse eine angegebene <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse in der <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> enthält.</summary>
      <param name="requestedAccess">Die spezielle <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse, nach der gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="requestedAccess" /> als Element in der <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />-Liste der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse vorhanden ist. Andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> ist NULL.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Erstellt eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse, bei der es sich um die Schnittmenge der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und der angegebenen Berechtigung handelt.</summary>
      <param name="target">Ein <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, dessen Schnittmenge mit dem aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> gebildet werden soll. Kann <see langword="null" /> sein.</param>
      <returns>Ein neuer Berechtigungssatz, der die Schnittmenge der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und der angegebenen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse darstellt. Diese neue Berechtigung ist <see langword="null" />, wenn die Schnittmenge leer ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> ist nicht <see langword="null" /> oder keine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Bestimmt, ob die aktuelle <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> eine Teilmenge der angegebenen Berechtigung ist.</summary>
      <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Kann <see langword="null" /> sein.</param>
      <returns>
        <see langword="true" />, wenn die aktuelle <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> ist nicht <see langword="null" /> oder keine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Gibt zurück, ob diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse uneingeschränkte Berechtigungen bezeichnet.</summary>
      <returns>
        <see langword="true" />, wenn diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> uneingeschränkte Berechtigungen bezeichnet. <see langword="false" />, wenn für diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> bestimmte Zugriffsebeneneinschränkungen in <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> gelten oder wenn keine Berechtigungen vorhanden sind.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Erstellt eine XML-Codierung dieser <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und ihres aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung dieser <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse, einschließlich Zustandsinformationen.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung, die die Gesamtmenge der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und der angegebenen Berechtigung darstellt.</summary>
      <param name="other">Eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, die mit der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> kombiniert werden soll. Kann <see langword="null" /> sein.</param>
      <returns>Ein neues <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, das die Gesamtmenge des aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und des angegebenen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> darstellt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> ist nicht <see langword="null" /> oder keine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Gibt die in einer Eigenschaft erzwungenen Syntaxeinschränkungen an, wenn es in XAML festgelegt wird (entsprechend der Angabe eines <see cref="T:System.Xaml.XamlDirective" />-Objekts).</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">Die Eigenschaft kann entweder in <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> oder <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" /> festgelegt werden. (Dieser Enumerationsmember wird als Kombination aus diesen Werten definiert.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">Die Eigenschaft kann in der XAML-Attributsyntax festgelegt werden.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">Die Eigenschaft kann in der Syntax des XAML-Eigenschaftselements festgelegt werden.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">Die Eigenschaft kann in XAML unter keinen Umständen festgelegt werden. Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Definiert das Serialisierungsverhalten entsprechend der Meldung durch ein <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">Unbekannt, wird zum Typ des Members verschoben.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">Serialisiert das Ergebnis nicht.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">Serialisiert das Ergebnis.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">Beschreibt die Auflistungsmetapher (sofern vorhanden), die von einem XAML-Member verwendet wird.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">XAML-Member unterstützt eine Arrayauflistung.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">XAML-Member unterstützt eine Liste oder Auflistung.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">XAML-Member unterstützt ein Wörterbuch (Schlüssel-/Wert-Paare).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">XAML-Member unterstützt keine Auflistung.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">Stellt einen Erweiterungspunkt bereit, der den Zugriff auf Membereigenschaften eines XAML-Members mit anderen Methoden als Reflektion ermöglicht.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse auf der Grundlage eines angegebenen <see cref="T:System.Xaml.XamlMember" />-Objekts.</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Der <see cref="T:System.Xaml.XamlMember" />-Wert für den bestimmten XAML-Member, der für das <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">Ruft einen Wert der relevanten Eigenschaft von einer Instanz ab.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Eine Instanz des Besitzertyps für den Member.</param>
      <returns vsli:raw="The requested property value.">Der angeforderte Eigenschaftswert.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlMember" /> basiert.
-oder-
Diese Methode wurde für einen schreibgeschützten Member aufgerufen.
-oder-
<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">Legt einen Wert der relevanten Eigenschaft für eine Instanz fest.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Eine Instanz des Besitzertyps für den Member.</param>
      <param name="value" vsli:raw="The property value to set.">Der festzulegende Eigenschaftswert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlMember" /> basiert.
-oder-
Diese Methode wurde für einen schreibgeschützten Member aufgerufen.
-oder-
<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">Gibt an, ob der Wert von Serialisierungsprozessen beibehalten werden muss.</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">Die Instanz mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</param>
      <returns vsli:raw="A value of the enumeration.">Ein Wert aus der Enumeration.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode ab, die Werte für die Eigenschaft abruft, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode, die Werte für die Eigenschaft abruft, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist, oder <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode ab, die Werte für die Eigenschaft festlegt, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode, die Werte für die Eigenschaft festlegt, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist, oder <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Stellt einen statischen Wert bereit, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt darstellt.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Ein statischer Wert, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt darstellt.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">Stellt einen Erweiterungspunkt bereit, mit dem Instanzen eines XAML-Typs durch andere Methoden als Reflektion und Konstruktoren erstellt werden können.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse auf der Grundlage eines angegebenen <see cref="T:System.Xaml.XamlType" />-Objekts.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Der <see cref="T:System.Xaml.XamlType" />-Wert für den bestimmten XAML-Typ, der für das <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt relevant ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Fügt das bereitgestellte Element einer Instanz des Typs hinzu, der für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relevant ist.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</param>
      <param name="item" vsli:raw="The item to add.">Das Element, das hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.
-oder-
Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ keine Sammlung ist.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gibt <see langword="null" /> zurück.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Fügt den bereitgestellten Schlüssel und den Elementwert einer Instanz des Typs hinzu, der für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relevant ist.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">Wörterbuchschlüssel für das hinzuzufügende Element.</param>
      <param name="item" vsli:raw="The item value to add.">Der hinzuzufügende Elementwert.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.
-oder-
Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ kein Wörterbuch ist.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gibt <see langword="null" /> zurück.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Erstellt eine Objektinstanz auf Grundlage des durch Konstruktion initiierten <see cref="T:System.Xaml.XamlType" />-Objekts für dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt.</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">Ein Objektarray, durch das die <see langword="x:ConstructorArgs" /> für die Instanz angegeben werden. Ist möglicherweise <see langword="null" /> für Typen, die nicht <see langword="x:ConstructorArgs" /> erfordern oder verwenden.</param>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Die erstellte Instanz auf Grundlage des durch Konstruktion initiierten <see cref="T:System.Xaml.XamlType" />-Objekts für dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt.</returns>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">Ein Konstruktor konnte nicht aufgelöst werden.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">Gibt die relevante <see langword="Add" />-Methode für ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt zurück, das relevant für eine Auflistung oder ein Wörterbuch ist.</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">
        <see cref="T:System.Xaml.XamlType" /> für den Elementtyp, der von der <see langword="Add" />-Methode verwendet wird.</param>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">CLR-bezogene <see cref="T:System.Reflection.MethodInfo" />-Informationen für die <see langword="Add" />-Methode oder NULL.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">Gibt ein Objekt zurück, das eine Methode darstellt, die Enumerationen über Elemente ermöglicht.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> für eine Enumeratormethode oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">Gibt ein <see cref="T:System.Collections.IEnumerator" />-Objekt zurück, das den Satz der Elemente darstellt.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt oder <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.
-oder-
Rief diese Methode für ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> auf, wobei der relevante Typ keine Auflistung bzw. kein Wörterbuch darstellt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Ruft den zu verwendenden Handler ab, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" /> eine implementierte <see cref="T:System.Windows.Markup.MarkupExtension" /> aufruft.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">Ruft den zu verwendenden Handler ab, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt einen Aufruf an ein CLR-implementiertes <see cref="T:System.ComponentModel.TypeConverter" />-Objekt richtet.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Stellt einen statischen Wert bereit, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt darstellt.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Ein statischer Wert, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt darstellt.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">Bietet eine Möglichkeit zur Angabe eines XAML-Typs bezüglich Name und Namespace.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeName" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeName" />-Klasse auf Grundlage des Namens und der Namespacezeichenfolgen.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">Der XAML-Namespace, der "name" enthält.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Der Name des Typs, für den ein <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt erstellt werden soll.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeName" />-Klasse auf Grundlage des Namens und der Namespacezeichenfolgen sowie eines Arrays von Typargumenten.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">Der XAML-Namespace, der <paramref name="name" /> enthält.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Der Name des Typs, für den ein <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt erstellt werden soll.</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ein Array von Typargumenten, von dem jedes ein <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt sein muss.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeName" />-Klasse auf der Grundlage eines vorhandenen <see cref="T:System.Xaml.XamlType" />-Objekts.</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ein vorhandener <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ruft den Namen zum Erstellen dieses <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekts ab.</summary>
      <returns vsli:raw="The name of the type.">Der Name des Typs.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ruft den XAML-Namespacebezeichner ab, mit dem das <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt erstellt wird.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Der Bezeichner für den XAML-Namespace.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Stellt einen <see cref="T:System.Xaml.Schema.XamlTypeName" />-Wert auf Grundlage eines Typnamens und eines Objekts bereit, die ein Markuppräfix in einen Namespace auflösen können.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Der Typname, für den ein <see cref="T:System.Xaml.Schema.XamlTypeName" />-Wert erstellt werden soll.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Ein Objekt oder Dienstanbieter, das bzw. der das <see cref="T:System.Xaml.IXamlNamespaceResolver" />-Objekt implementiert.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Der erstellte <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> oder <paramref name="namespaceResolver" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Zeichenfolge kann nicht analysiert werden.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Stellt einen <see cref="T:System.Xaml.Schema.XamlTypeName" />-Wert auf Grundlage einer Zeichenfolge, durch die mehrere Typnamen angegeben werden können, und eines Objekts bereit, die ein Markuppräfix in einen Namespace auflösen können.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Eine Zeichenfolge, die mehrere Typen enthält.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Ein Objekt oder Dienstanbieter, das bzw. der das <see cref="T:System.Xaml.IXamlNamespaceResolver" />-Objekt implementiert.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Der erstellte <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> oder <paramref name="namespaceResolver" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Zeichenfolge kann nicht analysiert werden.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">Konvertiert den Wert dieses <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Die entsprechende Zeichenfolgendarstellung dieser <see cref="T:System.Xaml.Schema.XamlTypeName" />-Klasse.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">Konvertiert den Wert dieses <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekts in die entsprechende Zeichenfolgendarstellung, die in der Markupsyntax für eine Objektelementverwendung mehrerer Typen verwendet werden kann.</summary>
      <param name="typeNameList" vsli:raw="A list of types.">Eine Typenliste.</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Ein Dienstverweis für die Präfixsuche.</param>
      <returns vsli:raw="A concatenated string of all type results.">Eine verkettete Zeichenfolge aller Typergebnisse.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefixLookup" /> oder <paramref name="typeNameList" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">Konvertiert den Wert dieses <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekts in die entsprechende Zeichenfolgendarstellung, die in der Markupsyntax für eine Objektelementverwendung eines Typs verwendet werden kann.</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Ein Dienstverweis für die Präfixsuche.</param>
      <returns vsli:raw="A prefixed usage string.">Eine vorangestellte Verwendungszeichenfolge.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeName" /> ist <see langword="null" />.
- oder -
<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> ist nicht gültig.
- oder -
Das Präfix konnte nicht nachgeschlagen werden.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Stellt einen <see cref="T:System.Xaml.Schema.XamlTypeName" />-Wert auf Grundlage eines Typnamens und eines Objekts bereit, die ein Markuppräfix in einen Namespace auflösen können.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Der Typname, für den ein <see cref="T:System.Xaml.Schema.XamlTypeName" />-Wert erstellt werden soll.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Ein Objekt oder Dienstanbieter, das bzw. der das <see cref="T:System.Xaml.IXamlNamespaceResolver" />-Objekt implementiert.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Out-Parameter, der das erstellte <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt enthält, wenn der Rückgabewert <see langword="true" /> ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Analyse erfolgreich war und <paramref name="result" /> einen hilfreichen Wert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> oder <paramref name="namespaceResolver" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Stellt einen <see cref="T:System.Xaml.Schema.XamlTypeName" />-Wert auf Grundlage einer Zeichenfolge, durch die mehrere Typnamen angegeben werden können, und eines Objekts bereit, die ein Markuppräfix in einen Namespace auflösen können.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Eine Zeichenfolge, die mehrere Typen enthält.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Ein Objekt oder Dienstanbieter, das bzw. der das <see cref="T:System.Xaml.IXamlNamespaceResolver" />-Objekt implementiert.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Out-Parameter, der das erstellte <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt enthält, wenn der Rückgabewert <see langword="true" /> ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Analyse erfolgreich war und <paramref name="result" /> einen hilfreichen Wert enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> oder <paramref name="namespaceResolver" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ruft die Typargumente ab, mit denen das <see cref="T:System.Xaml.Schema.XamlTypeName" />-Objekt erstellt wird.</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">Die Typargumente (sofern vorhanden). Ist möglicherweise NULL.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">Konvertiert ein <see cref="T:System.Xaml.XamlType" />-Objekt in eine und aus einer Zeichenfolge, die den Typnamen darstellt. Diese Funktionalität wird für die XAML-Erweiterbarkeit durch Markupdefinitionen über <see cref="T:System.Windows.Markup.PropertyDefinition" /> verwendet.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Bestimmt, ob ein Objekt des angegebenen Typs im angegebenen Kontext in eine Instanz von <see cref="T:System.Xaml.XamlType" /> konvertiert werden kann.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser Konverter den Vorgang durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">Bestimmt, ob eine Instanz von <see cref="T:System.Xaml.XamlType" /> im angegebenen Kontext in den angegebenen Typ konvertiert werden kann.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Der Typ, der zur Konvertierung ausgewertet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser Konverter den Vorgang durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Versucht, das angegebene Objekt im angegebenen Kontext in einen <see cref="T:System.Xaml.XamlType" /> zu konvertieren.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <param name="value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The converted object.">Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">Versucht, einen <see cref="T:System.Xaml.XamlType" /> im angegebenen Kontext in den angegebenen Typ zu konvertieren.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</param>
      <param name="culture" vsli:raw="Culture specific information.">Kulturspezifische Informationen.</param>
      <param name="value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns vsli:raw="The converted object.">Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> kann nicht konvertiert werden.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">Stellt eine allgemeine API-Oberfläche für alle Methoden bereit, die Initialisierungs- oder Serialisierungswerte für XAML auf Grundlage anderer Eingaben als der des endgültigen Zieltyps generieren. Dazu zählen Markuperweiterungen und Typkonverter.</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Die CLR-Basisklasse für den bestimmten Konverter, den dieses <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt darstellt. Normalerweise handelt es sich um eines der folgenden Objekte: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Klasse auf Grundlage eines Konverters, der <see cref="T:System.Type" /> implementiert, und des Ziels/Zieltyps des <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">Die <see cref="T:System.Type" />-Klasse, von der das Konverterverhalten implementiert wird.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Das Ziel-<see cref="T:System.Xaml.XamlType" />-Element des <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Klasse auf Grundlage eines Konverters, der <see cref="T:System.Type" /> implementiert, des Ziels/Zieltyps des <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts und eines Zeichenfolgennamens.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">Die <see cref="T:System.Type" />-Klasse, von der das Konverterverhalten implementiert wird.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Das Ziel-<see cref="T:System.Xaml.XamlType" />-Element des <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts.</param>
      <param name="name" vsli:raw="The string name.">Der Name der Zeichenfolge.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">Alle drei Parameter sind <see langword="null" /> (mindestens einer muss nicht 0 (null) sein).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">Ruft eine erstellte Instanz der Konverterimplementierung ab.</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Eine erstellte Instanz der Konverterimplementierung oder <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Ruft das <see cref="T:System.Type" />-Objekt für die Klasse ab, von der das Konverterverhalten implementiert wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Das <see cref="T:System.Type" />-Objekt für die Klasse, von der das Konverterverhalten implementiert wird.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">Gibt eine Instanz der Konverterimplementierung zurück.</summary>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Eine Instanz der Konverterimplementierung oder <see langword="null" />.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">Konverter hat den richtigen Basistyp nicht implementiert.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">Bestimmt, ob diese Instanz von <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> und ein angegebenes Objekt, das ebenfalls ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt sein muss, denselben Wert haben.</summary>
      <param name="obj" vsli:raw="The object to compare.">Das zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="obj" /> ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ist und denselben Wert wie diese Instanz hat; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">Bestimmt, ob diese Instanz von <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> und eines anderen <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts den gleichen Wert besitzen.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">Der zu vergleichende <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="other" /> ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ist und denselben Wert wie diese Instanz hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Gibt den Hashcode für diese <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> zurück.</summary>
      <returns vsli:raw="An integer hash code.">Ein ganzzahliger Hashcode.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Ruft einen Zeichenfolgennamen für dieses <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab.</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Ein Zeichenfolgenname für dieses <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekte denselben Wert haben.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, oder <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="converter1" /> und <paramref name="converter2" /> denselben Wert haben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekte verschiedene Werte haben.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, oder <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich der Wert von <paramref name="converter1" /> vom Wert von <paramref name="converter2" /> unterscheidet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Ruft das Ziel-<see cref="T:System.Xaml.XamlType" />-Element des <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts ab.</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Das Ziel-<see cref="T:System.Xaml.XamlType" />-Element des <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekts.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Gibt ein <see cref="T:System.String" />-Objekt zurück, das die <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Klasse darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Ein <see cref="T:System.String" />, der diesen <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> darstellt.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">Implementiert ein doppelt gepuffertes <see cref="T:System.Xaml.XamlReader" />-Objekt, das Lese- und Schreibvorgänge in unterschiedliche Threads aufteilen kann.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlBackgroundReader" />-Klasse.</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">Das <see cref="T:System.Xaml.XamlReader" />-Objekt, auf dem dieses <see cref="T:System.Xaml.XamlBackgroundReader" />-Objekt basiert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="wrappedReader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Xaml.XamlBackgroundReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn verwaltete Ressourcen freigegeben werden sollen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Ruft einen Wert ab, der angibt, ob Zeileninformationen verfügbar sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Zeileninformationen verfügbar sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">Ruft einen Wert ab, der angibt, ob die Readerposition am Dateiende ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Position am Ende der Datei befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Ruft die zu berichtende Zeilennummer ab.</summary>
      <returns vsli:raw="The line number to report.">Die Zeilennummer, die im Bericht enthalten sein soll.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Ruft die zu berichtende Zeilenposition ab.</summary>
      <returns vsli:raw="The line position to report.">Die Zeilenposition, die im Bericht enthalten sein soll.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Ruft den aktuellen Member an der Readerposition ab, wenn sich die Readerposition in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> befindet.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">Der aktuelle Member oder <see langword="null" />, wenn sich die Position nicht auf einem Member befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Ruft den XAML-Namespace aus dem aktuellen Knoten ab.</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der XAML-Namespace (sofern verfügbar), andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Ein Wert der <see cref="T:System.Xaml.XamlNodeType" />-Enumeration.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">Stellt den nächsten XAML-Knoten aus der Quelle bereit, wenn ein Knoten verfügbar ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Knoten verfügbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">Ruft ein Objekt ab, das Schemakontextinformationen für den Informationssatz bereitstellt.</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">Ein Objekt, das Schemakontextinformationen für den Informationssatz bereitstellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Erstellt und startet einen neuen <see cref="T:System.Threading.Thread" /> (aus <see cref="T:System.Threading.ParameterizedThreadStart" /> erstellt), der einen benannten Thread für den <see cref="T:System.Xaml.XamlReader" /> behandelt.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Der Thread wurde bereits gestartet.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">Erstellt und startet einen neuen <see cref="T:System.Threading.Thread" /> (aus <see cref="T:System.Threading.ParameterizedThreadStart" /> erstellt), der einen benannten Thread für den <see cref="T:System.Xaml.XamlReader" /> behandelt. Der Threadname wird als Parameter angegeben.</summary>
      <param name="threadName" vsli:raw="The name for the thread.">Der Name für den Thread.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Der Thread wurde bereits gestartet.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens, andernfalls <see langword="null" />, wenn sich die aktuelle Position des Readers nicht in einem Objekt befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Ruft den Wert des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Der Wert des aktuellen Knotens oder <see langword="null" />, wenn sich die aktuelle Position des Readers nicht auf einem <see cref="F:System.Xaml.XamlNodeType.Value" />-Knotentyp befindet.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">Stellt ein XAML-Readerverhalten dar, das verzögerten Inhalt lädt und zurückgibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDeferringLoader" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">Lädt XAML-Inhalt in einem Verzögerungsmodus auf Grundlage eines <see cref="T:System.Xaml.XamlReader" />-Objekts und bestimmter erforderlicher Dienste von einem Dienstanbieter.</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">Der initiierende Reader, der bei Aufrufen von <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" /> zurückgegeben wird.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Der Dienstanbieter für die erforderlichen Dienste.</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Das durch den Eingabe-<see cref="T:System.Xaml.XamlReader" /> erzeugte Stammobjekt.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">Führt für einen Wert für verzögertes Laden einen Commit aus.</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">Der Eingabewert, für den bei verzögertem Laden ein Commit ausgeführt werden soll.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Der Dienstanbieter für die erforderlichen Dienste.</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">Ein XAML-Reader, mit dem der verzögerte Wert als XAML-Knoteninformationen abgerufen werden kann.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Stellt den XAML-Typsystembezeichner für einen Member bereit, wenn der Member auch eine XAML-Direktive ist. XAML-Reader und XAML-Writer verwenden während Verarbeitung von Memberknoten den <see cref="T:System.Xaml.XamlDirective" />-Bezeichner. Der Bezeichner wird verwendet, wenn sich der XAML-Reader in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> befindet und <see cref="P:System.Xaml.XamlMember.IsDirective" /> gleich <see langword="true" /> ist.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse und gibt Werte für jeden fallbezogenen Wert einer <see cref="T:System.Xaml.XamlDirective" />-Klasse an.</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">Ein Satz von XAML-Namespaces, für die diese <see cref="T:System.Xaml.XamlDirective" /> vorhanden sein kann, übergeben als aufzählbarer Satz der Bezeichnerzeichenfolgen.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Der kennzeichnende Name der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Der XAML-Typ, der die <see cref="T:System.Xaml.XamlDirective" />-Klasse unterstützt.</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">Der Typkonverter, der von dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse für die Textsyntaxkonvertierung verwendet wird.</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">Ein Wert der <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />-Enumeration.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="xamlType" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse und gibt Werte für einen Namen und einen einzelnen XAML-Namespace an. Verwenden Sie diese Signatur nur, wenn Sie möchten oder erwarten, dass von <see cref="P:System.Xaml.XamlMember.IsUnknown" /> für die Direktive <see langword="true" /> angegeben wird.</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">Der primäre XAML-Namespace, in dem die <see cref="T:System.Xaml.XamlDirective" />-Klasse vorhanden sein kann.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Der kennzeichnende Name der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">Ruft einen Wert ab, durch den die XAML-Knotentypen angegeben werden, in denen die Direktive angegeben werden kann.</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">Ein Wert aus der Enumeration. Der Standardwert ist der Enumerationsstandard (<see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />).</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Gibt den Hashcode für dieses Objekt zurück.</summary>
      <returns vsli:raw="An integer hash code.">Ein ganzzahliger Hashcode.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das während des verzögerten Ladens von in XAML deklarierten Objekten verwendet wird. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten zurück. Von der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sind. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Gibt den <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> zurück, der einer <see cref="T:System.Xaml.XamlDirective" /> zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein Ereignis darstellt.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">Gibt zurück, ob die <see cref="T:System.Xaml.XamlDirective" />-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Gibt zurück, ob das <see cref="T:System.Xaml.XamlDirective" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="get" />-Accessor verfügt.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein nicht auflösbares Element darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">Gibt zurück, ob die <see cref="T:System.Xaml.XamlDirective" />-Klasse eine beabsichtigte lesegeschützte Eigenschaft darstellt.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Gibt zurück, ob das <see cref="T:System.Xaml.XamlDirective" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="set" />-Accessor verfügt.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt die <see cref="T:System.Xaml.XamlType" />-Klasse des Typs zurück, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs zurück.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Gibt eine Typkonverterimplementierung zurück, die dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt einen <see langword="get" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt eine <see cref="T:System.Reflection.MemberInfo" />-Klasse für CLR-Reflektion zurück, die dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt einen <see langword="set" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlDirective" /> zurück.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">Die Ausnahme, die ausgelöst wird, wenn ein XAML-Writer versucht, einen Wert für einen doppelten Member in den gleichen Objektknoten zu schreiben.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDuplicateMemberException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDuplicateMemberException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDuplicateMemberException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDuplicateMemberException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDuplicateMemberException" />-Klasse mit dem relevanten Member und den anzugebenden Typinformationen.</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">Der anzugebende XAML-Memberbezeichner.</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">Der XAML-Typbezeichner, der als übergeordneter Typ angegeben werden soll.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">Ruft den XAML-Memberbezeichner für die Eigenschaft ab, die als Duplikat gemeldet werden soll.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">Das anzugebende <see cref="T:System.Xaml.XamlMember" />-Objekt (XAML-Memberbezeichner).</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDuplicateMemberException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">Ruft den XAML-Typbezeichner ab, der als übergeordneter Typ gemeldet werden soll, oder legt ihn fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">Das <see cref="T:System.Xaml.XamlType" />-Objekt (XAML-Typbezeichner), das als übergeordneter Typ angegeben werden soll.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">Die Ausnahme, die für eine allgemeine Ausnahme bei XAML-Readern oder XAML-Writern ausgelöst wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlException" />-Klasse. Die Instanz enthält eine vom System bereitgestellte Meldung, in der der Fehler beschrieben wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlException" />-Klasse. Die Instanz enthält eine angegebene Meldung, in der der Fehler beschrieben wird.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlException" />-Klasse. Die Instanz enthält eine angegebene Fehlermeldung und einen Verweis auf die innere Ausnahme, die die Ursache dieser Ausnahme ist.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlException" />-Klasse. Die Instanz enthält eine angegebene Fehlermeldung, eine innere Ausnahme und Zeileninformationen.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">Die Zeilennummer, die an Consumer von Debugging- oder Zeileninformationen gemeldet werden muss.</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">Die Zeilenposition, die an Consumer von Debugging- oder Zeileninformationen gemeldet werden muss.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">Implementiert <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> und bietet Serialisierungsunterstützung für die Zeileninformationsdaten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">Ruft die Zeilennummernkomponente von XAML-Textzeileninformationen ab, die von der Ausnahme gemeldet werden, oder legt sie fest.</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">Die Zeilennummernkomponente der XAML-Textzeileninformationen.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">Ruft die Zeilenpositionskomponente von XAML-Textzeileninformationen ab, die von der Ausnahme gemeldet werden, oder legt sie fest.</summary>
      <returns vsli:raw="The line position component of XAML text line information.">Die Zeilenpositionskomponente der XAML-Textzeileninformationen.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">Ruft die Ausnahmemeldung ab. Wenn Zeileninformationen verfügbar sind, werden diese an die Meldung angefügt.</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">Die Ausnahmemeldung, die die angefügten Zeileninformationen enthält.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">Die Ausnahme, die für bei XAML-Lese- und -Schreibvorgängen auftretende interne Inkonsistenzen ausgelöst wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlInternalException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlInternalException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlInternalException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Die Meldung, in der die Ausnahme beschrieben wird</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlInternalException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Die Meldung, in der die Ausnahme beschrieben wird</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">Definiert Konstanten, die Zeichenfolgen oder Objekte bereitstellen, die für XAML-Markup oder für das Programmieren mit XAML-Typen hilfreich sind. Diese Zeichenfolgen oder Objekte sind relevant für XAML-Sprachkonzepte, für die Implementierung der XAML-Sprachkonzepte in .NET Framework-XAML-Diensten oder für beides.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Ruft eine schreibgeschützte generische Auflistung der einzelnen <see cref="T:System.Xaml.XamlDirective" />-Bezeichner ab, die durch die .NET Framework-XAML-Dienste definiert werden.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Eine schreibgeschützte generische Auflistung der einzelnen <see cref="T:System.Xaml.XamlDirective" />-Bezeichner, die durch die .NET Framework-XAML-Dienste definiert werden.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">Ruft eine schreibgeschützte generische Auflistung von einzelnen <see cref="T:System.Xaml.XamlType" />-Werten ab, die mit einem XAML-sprachinternen Element übereinstimmen oder als Alias darauf verweisen, das in .NET Framework-XAML-Diensten definiert wird.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">Eine schreibgeschützte generische Auflistung der einzelnen <see cref="T:System.Xaml.XamlType" />-Objekte, die mit einem sprachinternen XAML-Element übereinstimmen.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="Arguments" /> einer Factorymethode oder einer generischen Verwendung ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="Arguments" /> einer Factorymethode oder generischen Verwendung.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Array" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Array" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für den <see langword="AsyncRecords" />-Pseudomember ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für den <see langword="AsyncRecords" />-Pseudomember.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="base" />-Direktive aus XML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="base" />-Direktive aus XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Boolean" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Boolean" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Byte" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Byte" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Char" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Char" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Class" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Class" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="ClassAttributes" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="ClassAttributes" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="ClassModifier" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="ClassModifier" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für <see langword="Code" /> entsprechend den Details in [MS-XAML] ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für <see langword="Code" /> entsprechend den Details in [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt ab, das einen Verbindungspunkt zum Verknüpfen von Ereignissen mit Handlern bezeichnet.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt, das einen Verbindungspunkt zum Verknüpfen von Ereignissen mit Handlern bezeichnet.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Decimal" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Decimal" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Double" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Double" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt ab, das eine Factorymethode für XAML bezeichnet.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt, das eine Factorymethode für XAML bezeichnet.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="FieldModifier" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="FieldModifier" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Initialization" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Initialization" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Int16" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Int16" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Int32" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Int32" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Int64" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Int64" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Items" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Items" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Key" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Key" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="lang" />-Direktive aus XML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="lang" />-Direktive aus XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ ab, bei dem es sich um den Elementtyp von <see cref="P:System.Xaml.XamlLanguage.Members" /> handelt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ, bei dem es sich um den Elementtyp von <see cref="P:System.Xaml.XamlLanguage.Members" /> handelt.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für das <see langword="Members" />-Konzept in XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für das <see langword="Members" />-Konzept in XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Name" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Name" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Null" />- bzw. <see langword="NullExtension" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" /> für die  <see langword="Null" /> intrinsische XAML -Sprache / . <see langword="NullExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="Object" />-XAML-Sprachkonzept ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="Object" />-XAML-Sprachkonzept.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="PositionalParameters" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="PositionalParameters" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="Property" />-Konzept in XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="Property" />-Konzept in XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt ab, das einen <see langword="Reference" /> für XAML darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt, das einen <see langword="Reference" /> für XAML darstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="Shared" />-Direktive für XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="Shared" />-Direktive für XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Single" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Single" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="space" />-Direktive aus XML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt für die <see langword="space" />-Direktive aus XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Static" />/<see langword="StaticExtension" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" /> für die  <see langword="Static" /> intrinsische XAML -Sprache / . <see langword="StaticExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="String" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="String" />-XAML-Element.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Subclass" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Subclass" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">Ruft ein <see cref="T:System.Xaml.XamlDirective" />-Objekt ab, das das asynchrone Laden von XAML ermöglicht, wenn der XAML-Prozessor Unterstützung für einen derartigen Modus bietet.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt, das das asynchrone Laden von XAML ermöglicht.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="TimeSpan" />-Konzept in der XAML-Sprache ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="TimeSpan" />-XAML-Sprachkonzept.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das sprachinterne <see langword="Type" />/<see langword="TypeExtension" />-XAML-Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Ein <see cref="T:System.Xaml.XamlType" /> für die  <see langword="Type" /> intrinsische XAML -Sprache / . <see langword="TypeExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="TypeArguments" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="TypeArguments" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Uid" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="Uid" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Ruft eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="UnknownContent" />-Anweisung aus XAML ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Eine <see cref="T:System.Xaml.XamlDirective" /> für die <see langword="UnknownContent" />-Anweisung aus XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="Uri" />-XAML-Sprachkonzept ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für das <see langword="Uri" />-XAML-Sprachkonzept.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">Ruft einen Zeichenfolgenwert für die Zeichenfolge ab, durch die der XAML (2006)-Sprachnamespace bezeichnet wird. Der Namespace entspricht dem XAML (2006)-Namespace mit dem Präfix „x“ gemäß Definition in [MS-XAML] Abschnitt 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">Ruft eine Auflistung der Namespacebezeichner für XAML ab.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">Eine Auflistung der Namespacebezeichner für XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">Ruft ein <see cref="T:System.Xaml.XamlType" />-Objekt für den XAML-Typ ab, der einen <see langword="XData" />-Block in XAML unterstützt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den XAML-Typ, der einen <see langword="XData" />-Block unterstützt. Weitere Informationen finden Sie im Abschnitt [MS-XAML] 5.2.23.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">Ruft einen Zeichenfolgenwert für die Zeichenfolge ab, durch die der XML (1998)-Sprachnamespace bezeichnet wird. Der Namespace entspricht dem XML-Namespace mit dem Präfix „xml“ gemäß Verweis in [MS-XAML] Abschnitt 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">Ruft eine Auflistung der Namespacebezeichner für XML ab.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">Eine Auflistung der Namespacebezeichner für XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">Stellt den XAML-Typsystembezeichner für Member von XAML-Typen bereit. Der Bezeichner wird während der Verarbeitung von Memberknoten (wenn der XAML-Reader in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> positioniert ist) von XAML-Readern und XAML-Writern sowie für die allgemeine XAML-Typsystemlogik verwendet.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Die <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems, die den Ereignismember darstellt.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Die <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems, die den Ereignismember darstellt.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Reflektionslaufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Die <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit Reflektions-<see cref="T:System.Reflection.PropertyInfo" /> und einem <see cref="T:System.Xaml.XamlSchemaContext" />, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Die <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für ein <see cref="T:System.Xaml.XamlMember" />-Objekt, das eine anfügbare Eigenschaft darstellt.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Der Zeichenfolgenname der anfügbaren Eigenschaft.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="get" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="set" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der eine anfügbare Eigenschaft darstellt, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Der Zeichenfolgenname der anfügbaren Eigenschaft.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="get" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="set" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der ein anfügbares Ereignis darstellt.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Der Zeichenfolgenname des anfügbaren Ereignisses.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für die <see langword="Add" />-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der ein anfügbares Ereignis darstellt, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Der Zeichenfolgenname des anfügbaren Ereignisses.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für die <see langword="Add" />-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit einem Zeichenfolgennamen und deklarierenden <see cref="T:System.Xaml.XamlType" />-Informationen. Ein mit dieser Signatur erstellter <see cref="T:System.Xaml.XamlMember" /> weist deutliche Einschränkungen auf.</summary>
      <param name="name" vsli:raw="The string name of the member.">Der Zeichenfolgenname des Members.</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">Die <see cref="T:System.Xaml.XamlType" />-Informationen für den deklarierenden Typ.</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Member anfügbar ist, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> oder <paramref name="declaringType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ ab, durch den der dem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnete Member deklariert wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ, durch den der dem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnete Member deklariert wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ruft eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten ab. Von diesen werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sind.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Das Objekt, das mit diesem Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="obj" />-Parameter ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Ein Objekt, das mit diesem Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Gibt den Hashcode für dieses Objekt zurück.</summary>
      <returns vsli:raw="An integer hash code.">Ein ganzzahliger Hashcode.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ruft die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung ab, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xaml.XamlMember" /> als Ambient-Eigenschaft gemeldet wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein anfügbarer Member ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein anfügbarer Member ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">Ruft einen Wert ab, der angibt, ob es sich bei diesem <see cref="T:System.Xaml.XamlMember" />-Objekt um eine XAML-Direktive handelt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt eine XAML-Direktive ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xaml.XamlMember" /> einen Ereignismember darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein Ereignis darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge als <see cref="P:System.Xaml.XamlMember.Name" />-Eigenschaft initialisiert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge initialisiert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibgeschützten Member darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibgeschützten Member darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member mit einem aufrufbaren öffentlichen <see langword="get" />-Accessor darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen aufrufbaren öffentlichen <see langword="get" />-Accessor darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">Ruft einen Wert ab, der angibt, ob der Member durch das für Typ- und Memberauflösung verwendete Unterstützungssystem nicht aufgelöst werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">
        <see langword="true" />, wenn der Member nicht aufgelöst werden kann. <see langword="false" />, wenn der Member aufgelöst werden kann.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member mit einem aufrufbaren öffentlichen <see langword="set" />-Accessor darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen aufrufbaren öffentlichen <see langword="set" />-Accessor darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Gibt bei der Implementierung in einer abgeleiteten Klasse eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, der eine <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ besitzt.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten zurück. Von Elementen in der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" /> vorhanden sind.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> zurück, der diesem <see cref="T:System.Xaml.XamlMember" /> zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen für diesen <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser <see cref="T:System.Xaml.XamlMember" /> als Ambient-Eigenschaft gemeldet werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein Ereignis darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn gemeldet werden soll, dass dieser <see cref="T:System.Xaml.XamlMember" /> ein Ereignis darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">Gibt zurück, ob die <see cref="T:System.Xaml.XamlMember" />-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als gewünschte schreibgeschützte Eigenschaft gemeldet werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="get" />-Accessor verfügt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser <see cref="T:System.Xaml.XamlMember" /> eine Eigenschaft mit einem öffentlichen <see langword="get" />-Accessor darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein nicht auflösbares Element darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Gibt zurück, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member darstellt, der über einen öffentlichen <see langword="set" />-Accessor, jedoch nicht über einen öffentlichen <see langword="get" />-Accessor verfügt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Gibt zurück, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member darstellt, der über einen öffentlichen <see langword="set" />-Accessor verfügt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibbaren Member darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">Gibt die Zeichen für öffnende und schließende Klammern einer Markuperweiterung zurück.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Gibt die <see cref="T:System.Xaml.XamlType" />-Klasse des Typs zurück, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Der Typ, auf dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs zurück.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt eine Typkonverterimplementierung zurück, die dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt einen <see langword="get" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Reflection.MethodInfo" /> für den zugeordneten <see langword="get" />-Accessor oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt eine <see cref="T:System.Reflection.MemberInfo" /> des CLR-Typsystems zurück, die diesem <see cref="T:System.Xaml.XamlMember" /> zugeordnet ist.</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Reflection.MemberInfo" />-Objekt des CLR-Typsystems, das diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist, oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt einen <see langword="set" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Reflection.MethodInfo" /> für den zugeordneten <see langword="set" />-Accessor oder <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt eine Wertserialisierungsprogramm-Implementierung zurück, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung oder <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">Definiert die Zeichen für öffnende und schließende Klammern einer Markuperweiterung.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ruft die <see langword="xamlName" />-Namenszeichenfolge ab, durch die dieses <see cref="T:System.Xaml.XamlMember" />-Objekt deklariert wird.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Die <see langword="xamlName" />-Namenszeichenfolge, durch die dieses <see cref="T:System.Xaml.XamlMember" />-Objekt deklariert wird.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlMember" />-Objekte denselben Wert haben.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="xamlMember1" /> und <paramref name="xamlMember2" /> denselben Wert haben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlMember" />-Objekte verschiedene Werte haben.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert von <paramref name="xamlMember1" /> vom Wert von <paramref name="xamlMember2" /> abweicht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ruft den einzelnen XAML-Namespace-URI ab, der den primären XAML-Namespace für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt bezeichnet.</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">Der Bezeichner für den primären XAML-Namespace für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als Zeichenfolge.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">Ruft einen <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Wert ab, der angibt, wie der Member von einem visuellen Designer verarbeitet werden soll.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Ein Wert der <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Enumeration. Die Standardeinstellung ist <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des Typs ab, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Der Typ, auf dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlMember" /> zurück.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für die Typkonvertierungserstellung von in XAML deklarierten Objekten verwendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Wert mit einer <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung für den generischen Typ.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">Ruft die <see cref="T:System.Reflection.MemberInfo" /> des CLR-Typsystems ab, die für einen Member verfügbar ist, der von <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> oder <see cref="T:System.Reflection.EventInfo" /> erstellt wird.</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MemberInfo" />-Informationen des CLR-Typsystems entsprechend der Umwandlung von den ursprünglichen Konstruktorparametern. Ein <see cref="T:System.Xaml.XamlMember" />-Objekt, das mit der <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />-Signatur erstellt wird, gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für die Wertserialisierung von in XAML deklarierten Objekten verwendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung für den generischen Typ.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">Stellt eine Liste von XAML-Knoten für Szenarios wie das verzögerte Schreiben von XAML-Knoten bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlNodeList" />-Klasse unter Verwendung des angegebenen Schemakontexts.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Der Schemakontext, der für Knotenvorgänge verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlNodeList" />-Klasse unter Verwendung des angegebenen Schemakontexts und der Listengröße.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Der Schemakontext, der für Knotenvorgänge verwendet werden soll.</param>
      <param name="size" vsli:raw="The intended item count of the list.">Die gewünschte Elementanzahl der Liste.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">Löscht die Elemente in der Liste.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Ruft die Anzahl der Knoten in diesem <see cref="T:System.Xaml.XamlNodeList" />-Objekt ab.</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Die Anzahl der Knoten in diesem <see cref="T:System.Xaml.XamlNodeList" />-Objekt.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">Gibt einen Implementierungsdelegat für den XAML-Reader zurück.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Ein Implementierungsdelegat für den XAML-Reader.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">Die <see cref="T:System.Xaml.XamlNodeList" /> wird weiterhin im Schreibmodus geöffnet.
- oder -
Der für die Knotenliste verwendete Writer hat keinen Schemakontext.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Ruft den zugeordneten XAML-Writer ab.</summary>
      <returns vsli:raw="The associated XAML writer.">Der zugeordnete XAML-Writer.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">Stellt einen Puffer zum Schreiben von Knoten und zum Lesen der Knoten bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlNodeQueue" />-Klasse unter Verwendung des angegebenen XAML-Schemakontexts.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Der Schemakontext, der für Knotenvorgänge verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Ruft die Anzahl der Knoten im <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt ab.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Die Anzahl der Knoten im <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">Ruft einen Wert ab, der bestimmt, ob dieses <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt keine Knoten enthält.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt keine Knoten enthält. <see langword="false" />, wenn dieses <see cref="T:System.Xaml.XamlNodeQueue" />-Objekt Knoten enthält.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">Ruft einen Implementierungsdelegat für den XAML-Reader ab.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Ein Implementierungsdelegat für den XAML-Reader.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">Der XAML-Writer, der für die Knotenliste verwendet wird, ist kein gültiger XAML-Schemakontext.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Ruft den zugeordneten XAML-Writer ab.</summary>
      <returns vsli:raw="The associated XAML writer.">Der zugeordnete XAML-Writer.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">Beschreibt den Typ des Knotens, der derzeit von einem XAML-Reader verarbeitet wird.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">Der Reader befindet sich am Ende eines Memberknotens.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">Der Reader befindet sich am Ende eines Objektknotens.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">Der Reader befindet sich in einem Objektknoten und schreibt einen Standardwert oder impliziten Wert. Es handelt sich nicht um einen angegebenen Objektwert.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">Der Reader befindet sich innerhalb einer XML-Namespacedeklaration.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">Der Reader befindet sich nicht an einem tatsächlichen Knoten (d. h., der Reader kann sich am Ende einer Datei befinden).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">Der Reader befindet sich am Anfang eines Memberknotens.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">Der Reader befindet sich am Anfang eines Objektknotens.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">Der Reader befindet sich innerhalb eines Knotens und verarbeitet einen Wert.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Stellt Daten für Rückrufe bereit, die in der Reihenfolge für die Objektinitialisierung und Eigenschafteneinstellung eingefügt werden können. Dies wirkt sich auf das von <see cref="T:System.Xaml.XamlObjectWriter" /> erzeugte Objektdiagramm aus.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectEventArgs" />-Klasse.</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">Die Objektinstanz, die für die Ereignisdaten relevant ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">Ruft die Zeilennummer der relevanten Objektinstanz ab oder legt diese fest.</summary>
      <returns vsli:raw="The line number of the element.">Die Zeilennummer des Elements.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">Ruft die Position in der Zeile der relevanten Objektinstanz ab oder legt diese fest.</summary>
      <returns vsli:raw="The position in the line of the element.">Die Position in der Zeile des Elements.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">Ruft die Objektinstanz ab, die für die Ereignisdaten relevant ist.</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">Die Objektinstanz, die für die Ereignisdaten relevant ist.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">Ruft den BAM-URI der relevanten Objektinstanz ab oder legt diesen fest.</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">Der BAM-URI der relevanten Objektinstanz.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">Stellt eine <see cref="T:System.Xaml.XamlReader" />-Implementierung bereit, die Objektdiagramme liest und einen XAML-Knotenstream generiert.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReader" />-Klasse.</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">Das Stammverzeichnis der Objektstruktur/des Objektdiagramms, die bzw. das gelesen werden soll.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReader" />-Klasse mit den angegebenen Readereinstellungen.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Das Stammverzeichnis der Objektstruktur, die gelesen werden soll.</param>
      <param name="settings" vsli:raw="A settings object.">Ein Einstellungsobjekt.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReader" />-Klasse mit dem angegebenen Schemakontext.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Das Stammverzeichnis der Objektstruktur, die gelesen werden soll.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Der Schemakontext für den zu verwendenden Reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReader" />-Klasse mit dem angegebenen Schemakontext und den Readereinstellungen.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Das Stammverzeichnis der Objektstruktur, die gelesen werden soll.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Der Schemakontext für den zu verwendenden Reader.</param>
      <param name="settings" vsli:raw="A settings object.">Ein Einstellungsobjekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">Ruft die Objektinstanz ab, die an der aktuellen Readerposition verfügbar ist.</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">Die Objektinstanz an der aktuellen Readerposition oder <see langword="null" />, wenn sich die Readerposition nicht in einem Objekt befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">Ruft einen Wert ab, der angibt, ob die Readerposition am Dateiende ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Position des Readers am Ende der Datei befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Ruft das aktuelle <see cref="T:System.Xaml.XamlMember" />-Objekt an der Readerposition ab, wenn sich die Readerposition in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" />-Feld befindet.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">Der aktuelle Member oder <see langword="null" />, wenn sich die Readerposition nicht in einem Member befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">Ruft die XAML-Namespacedeklaration aus der aktuellen Readerposition ab.</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die XAML-Namespacedeklaration, wenn der Reader in einem <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />-Feld positioniert wird, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The type of the current node.">Der Typ des aktuellen Knotens.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">Stellt den nächsten XAML-Knoten aus dem Quellobjektdiagramm bereit, wenn ein Knoten verfügbar ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Knoten verfügbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Ruft ein Objekt ab, das Schemainformationen für den Informationssatz bereitstellt.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Ein Objekt, das Schemainformationen für den Informationssatz bereitstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des Objekts an der aktuellen Readerposition ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">Das <see cref="T:System.Xaml.XamlType" />-Objekt des Objekts an der aktuellen Readerposition oder <see langword="null" />, wenn sich die Position nicht in einem Objekt befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">Ruft den Wert des Knotens an der aktuellen Readerposition ab.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Der Wert des aktuellen Knotens oder <see langword="null" />, wenn sich die Readerposition nicht auf einem <see cref="F:System.Xaml.XamlNodeType.Value" />-Knotentyp befindet.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">Die Ausnahme, die von mehreren internen <see cref="T:System.Xaml.XamlObjectReader" />-Hilfe-APIs ausgelöst wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReaderException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReaderException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReaderException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReaderException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">Gibt Verarbeitungsregeln oder Optionseinstellungen für ein <see cref="T:System.Xaml.XamlObjectReader" />-Objekt an.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectReaderSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">Ruft einen Wert ab, durch den bestimmt wird, ob Writer, die das zugeordnete <see cref="T:System.Xaml.XamlObjectReader" />-Objekt für den Kontext verwenden, zum expliziten Schreiben von Inhalt Designereinstellungen verwenden sollen, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">
        <see langword="true" />, um anzugeben, dass Writer, die diesen Kontext verwenden, zum Schreiben von Ausgabeinhalten Designereinstellungen verwenden sollen, wenn <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> den Wert <see langword="false" /> meldet. <see langword="false" />, wenn Designereinstellungen ignoriert werden sollen.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">Erstellt ein Objektdiagramm aus einem Quell-XAML-Knotenstream.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse mit dem XAML-Schemakontext, der von einem <see cref="T:System.Xaml.XamlReader" /> verwendet wird.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse mithilfe eines durch einen <see cref="T:System.Xaml.XamlReader" /> verwendeten Kontexts und der zugehörigen Einstellungen.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">Ein Einstellungsobjekt, durch das bestimmte Optionen für das <see cref="T:System.Xaml.XamlObjectWriter" />-Verhalten und die Ausgabe angegeben werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">Setzt alle möglichen Frames zurück und löscht das Objektdiagramm.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">Gibt die von der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />-Methode auf, die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Das Objekt, das im Bericht enthalten sein soll. Das Objekt wird in <see cref="T:System.Xaml.XamlObjectEventArgs" /> gepackt, wenn der Handler aufgerufen wird.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />-Methode auf, die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Das Objekt, das im Bericht enthalten sein soll. Der Wert wird in <see cref="T:System.Xaml.XamlObjectEventArgs" /> gepackt, wenn der Handler aufgerufen wird.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Das Objekt, das im Bericht enthalten sein soll. Dies wird in das <see cref="T:System.Xaml.XamlObjectEventArgs" />-Objekt gepackt, wenn der Handler aufgerufen wird.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Der Wert, der mithilfe von <see cref="T:System.Xaml.XamlObjectEventArgs" /> übergeben werden soll, wenn der Handler aufgerufen wird.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen Writer zugeordnet ist (sofern <paramref name="handled" /> in den <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />-Ereignisdaten nicht <see langword="true" /> ist).</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">Das Objekt, das dem Handler als Quelle gemeldet werden soll.</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Der Name der festzulegenden Eigenschaft, die als Teil von <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> an den Handler übergeben wird.</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Der Wert, der für die von <paramref name="property" /> benannte Eigenschaft angegeben werden soll. Der Wert wird an den Handler als Teil von <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> übergeben.</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Ein boolescher Wert, der durch einen zugeordneten Handler festgelegt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">Ruft das letzte Objekt ab, das geschrieben wurde. Wird normalerweise nur aufgerufen, wenn das Ende des Knotenstreams erreicht und das Objektdiagramm abgeschlossen wurde.</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">Das letzte geschriebene Objekt oder <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">Ruft den <see cref="T:System.Windows.Markup.INameScope" />-Dienst ab, von dem der XAML-Namescope für den absoluten Knotenstamm des XAML-Objektwriters verwaltet wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">Der <see cref="T:System.Windows.Markup.INameScope" />-Dienst, von dem der XAML-Namescope für den aktuellen Stamm des Objektwriters verwaltet wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">Ruft den aktiven XAML-Schemakontext ab.</summary>
      <returns vsli:raw="The XAML schema context.">Der XAML-Schemakontext.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">Implementiert <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> und stellt Zeileninformationen für Ausnahmen bereit.</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">Die Zeilennummer vom Reader.</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">Die Zeilenposition vom Reader.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">Ruft einen Wert ab, der angibt, ob von einem Zeileninformationsdienst Werte bereitgestellt werden sollen und ob dementsprechend die <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />-Methode aufgerufen werden soll, wenn diese relevant ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn vom Writer Zeileninformationen verwendet werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">Schließt den aktuellen Memberbereich und schreibt möglicherweise den Wert des Memberbereichs beim Schließen. Der neue Bereich wird der übergeordnete Objektbereich des Members.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">Fehler beim Erstellen von Memberwerten aus einem Wertknoten, der zwischen diesem Aufruf und einem vorherigen <see langword="StartMember" /> gefunden wird.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">Schließt den aktuellen Objektbereich im Writer. Der neue Objektbereich wird der übergeordnete Bereich des Members.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">Schreibt das konzeptionelle <see langword="StartObject" />-Objekt in das Objektdiagramm, wenn das angegebene Objekt ein Standardwert oder ein impliziter Wert der übergeordneten Eigenschaft ist. Der implizite Wert stammt aus Informationen, die aus dem XAML-Schemakontext und Sicherungstypinformationen abgerufen und nicht als Objektwert in der eingegebenen XAML-Knotengruppe angegeben werden.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">Definiert eine Namespacedeklaration, die für den nächsten Objekt- oder Memberbereich übernommen wird.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Die zu schreibende Namespacedeklaration.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Eine Komponenten von <paramref name="namespaceDeclaration" /> lautet <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">Versucht, einen XAML-Namespace-Knoten in einen ungültigen Bereich zu schreiben.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">Schreibt einen neuen Memberknoten in den aktuellen Objektbereich, und der Bereich wird ein neuer Memberbereich.</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">Die zu schreibende XAML-Eigenschaft. In der Regel wird dieser Wert aus einem XAML-Reader über den dazwischen liegenden XAML-Knotenstream abgerufen.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">In <paramref name="property" /> ist <see cref="P:System.Xaml.XamlMember.IsUnknown" /> auf <see langword="true" /> festgelegt.
- oder -
<see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> wurde übergeben, was darauf hinweist, dass der XAML-Knotenstream Inhalt für ein Objekt enthalten hat, das keinen Inhalt unterstützt.
- oder -
Versucht, einen Startmember in einen ungültigen Bereich zu schreiben.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> gibt eine Eigenschaft an, die bereits im übergeordneten Objektbereich explizit festgelegt ist.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">Schreibt einen Objektknoten in den aktuellen Objektbereich und legt den Bereich auf einen neuen Objektbereich fest.</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">Der zu schreibende Typ. In der Regel wird dieser Wert von einem XAML-Reader abgerufen.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">Die Verarbeitung eines Objekts vom Typ <see cref="P:System.Xaml.XamlType.IsUnknown" /> und kann kein Objekt erstellen.
- oder -
Versucht, ein Startobjekt in einen ungültigen Bereich zu schreiben.</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">Versucht, ein Stammobjekt zu schreiben, wenn bereits ein Stammobjekt in den Einstellungen bereitgestellt wurde.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">Schreibt einen Wert in den aktuellen Memberbereich. Wenn sich der aktuelle Bereich in einer Auflistung, einem Wörterbuch oder einem Arrayobjekt befindet, sollte der Wert der Auflistung, dem Wörterbuch oder dem Array hinzugefügt werden.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">Versucht, einen Wert in einen ungültigen Bereich zu schreiben.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">Die Ausnahme, die ausgelöst wird, wenn beim Erstellen von Objektdiagrammen aus einem XAML-Knotenstream von einem XAML-Writer (z. B. der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse) ein Fehler erkannt wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriterException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriterException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriterException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriterException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Stellt bestimmte XAML-Writereinstellungen für <see cref="T:System.Xaml.XamlObjectWriter" /> bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriterSettings" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriterSettings" />-Klasse auf Grundlage der Kopie einer vorhandenen Instanz.</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">Die zu kopierende Einstellungsinstanz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">Ruft <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Berechtigungen ab, die der XAML-Writer beobachtet, oder legt sie fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">Die <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Berechtigungen.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">Ruft einen Verweis auf einen Rückruf ab, der vom XAML-Writer in der <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />-Phase der Objektlebensdauer für jedes erstellte Objekt aufgerufen wird, oder legt diesen fest.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">Ein Rückruf, der vom XAML-Writer in der <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />-Phase der Objektlebensdauer aufgerufen wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">Ruft einen Verweis auf einen Rückruf ab, der vom XAML-Writer in der <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />-Phase der Objektlebensdauer für jedes erstellte Objekt aufgerufen wird, oder legt diesen fest.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">Ein Rückruf, der vom XAML-Writer in der <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />-Phase der Objektlebensdauer aufgerufen wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">Ruft einen Verweis auf einen Rückruf ab, der vom XAML-Writer in der post-member-write-Phase der Objektlebensdauer für jedes erstellte Objekt aufgerufen wird, oder legt den Verweis fest.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">Ein Rückruf, der vom XAML-Writer in der post-member-write-Phase der Objektlebensdauer aufgerufen wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">Ruft einen Verweis auf einen Rückruf ab, der vom XAML-Writer in der pre-member-write-Phase der Objektlebensdauer für jedes erstellte Objekt aufgerufen wird, oder legt den Verweis fest.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">Ein Rückruf, der vom XAML-Writer in der pre-member-write-Phase der Objektlebensdauer aufgerufen wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Ruft den XAML-Namescope ab, der zum Registrieren von Namen des XAML-Writers verwendet werden soll, wenn <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /><see langword="true" /> ist, oder legt den Namescope fest.</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">Der XAML-Namescope, der zum Registrieren von Namen verwendet werden soll. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">Ruft einen Wert ab, der angibt, ob der XAML-Writer <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />-Implementierungen auf einem <see cref="T:System.ComponentModel.TypeConverter" />-Objekt in Typkonvertersituationen ignorieren (nicht aufrufen) soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der XAML-Writer <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />-Implementierungen ignoriert, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">Ruft einen Wert ab, der bestimmt, ob eine Standard-<see cref="T:System.Xaml.XamlObjectWriter" />-Funktion deaktiviert werden soll, die Typkonvertierungen für die <paramref name="K" />-Komponente eines <see cref="T:System.Collections.Generic.Dictionary`2" /> vor dem Schreiben der Objektdiagrammdarstellung ausführt, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <paramref name="K" />-Typkonvertierung für ein <see cref="T:System.Collections.Generic.Dictionary`2" />-Objekt deaktiviert werden soll. <see langword="false" />, wenn <paramref name="K" />-Typkonvertierungen für ein <see cref="T:System.Collections.Generic.Dictionary`2" />-Objekt durchgeführt werden. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">Ruft einen Wert ab, durch den bestimmt wird, ob eine Namensregistrierung unter Berücksichtigung der angegebenen <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />-Eigenschaft erfolgen soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Namensregistrierung gegen den <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> erfolgen soll, <see langword="false" />, wenn eine Namensregistrierung in den übergeordneten XAML-Namescope erfolgen soll. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Ruft ein bereits vorhandenes Stammobjekt für <see cref="T:System.Xaml.XamlObjectWriter" />-Vorgänge ab oder legt es fest.</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Ein bereits vorhandenes Stammobjekt für <see cref="T:System.Xaml.XamlObjectWriter" />-Vorgänge.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">Ruft einen Wert ab, der bestimmt, ob der XAML-Writer die Überprüfung des Codepfads zum Überprüfen doppelter Eigenschaften auslässt, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Überprüfung auf doppelte Eigenschaften ausgelassen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt den Aufruf von <see langword="ProvideValue" /> für eine Markuperweiterung auslassen soll, oder legt diesen fest. Dies ist relevant, wenn die Markuperweiterung den Stamm eines Objektdiagramms darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt den Aufruf von <see langword="ProvideValue" /> in einer Markuperweiterung auslassen soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Wird in <see langword="BeginInitHandler" /> anstelle des tatsächlichen <see langword="BaseUri" /> verwendet.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">
        <see cref="T:System.Uri" /> , der anstelle des tatsächlichen <see langword="BaseUri" />verwendet werden soll.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">Ruft den Handler ab, der verwendet werden soll, wenn der Objektwriter an einen CLR-implementierten <see langword="SetValue" /> einen Aufruf bezüglich Abhängigkeitseigenschaften richtet, oder legt den Handler fest.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">Die Ausnahme, die ausgelöst wird, wenn ein XAML-Reader keine Elemente der XAML-Readerquelle in einem XAML-Knotenstream verarbeiten kann.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlParseException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlParseException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlParseException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlParseException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">Stellt Basisdefinitionen für Klassen bereit, die XAML-Eingabe nutzen und XAML-Knotenstreams erzeugen.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Initialisiert die <see cref="T:System.Xaml.XamlReader" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">Schließt den XAML-Knotenstream.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">Gibt die von der <see cref="T:System.Xaml.XamlReader" />-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">Ruft ab, ob die <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />-Methode aufgerufen wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> aufgerufen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">Bei der Implementierung in einer abgeleiteten Klasse wird ein Wert abgerufen, durch den angegeben wird, ob sich die Readerposition am Dateiende befindet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Position am konzeptionellen Dateiende des XAML-Knotenstreams befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Bei der Implementierung in einer abgeleiteten Klasse wird der aktuelle Member an der Readerposition abgerufen, wenn sich die Readerposition in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" />-Feld befindet.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">Der aktuelle Member oder <see langword="null" />, wenn sich die Readerposition nicht in einem Member befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">Ruft bei der Implementierung in einer abgeleiteten Klasse die XAML-Namespaceinformationen aus dem aktuellen Knoten ab.</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die XAML-Namespaceinformationen, sofern verfügbar, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">Ruft beim Implementieren in einer abgeleiteten Klasse den Typ des aktuellen Knotens ab.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Ein Wert der <see cref="T:System.Xaml.XamlNodeType" />-Enumeration.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">Bei der Implementierung in einer abgeleiteten Klasse wird der nächste XAML-Knoten aus der Quelle bereitgestellt, wenn ein Knoten verfügbar ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Knoten verfügbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">Gibt ein <see cref="T:System.Xaml.XamlReader" />-Objekt auf Grundlage des aktuellen <see cref="T:System.Xaml.XamlReader" />-Objekts zurück, bei dem das zurückgegebene <see cref="T:System.Xaml.XamlReader" />-Objekt zum Durchlaufen einer Teilstruktur der XAML-Knotenstruktur verwendet wird.</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">Eine neue Instanz des XAML-Reader für die Teilstruktur.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">Ruft beim Implementieren in einer abgeleiteten Klasse ein Objekt ab, das XAML-Schemakontextinformationen für den Informationssatz bereitstellt.</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">Ein Objekt, das XAML-Schemakontextinformationen für den Informationssatz bereitstellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">Überspringt den aktuellen Knoten und verschiebt die Readerposition weiter zum nächsten Knoten.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Gibt alle von der aktuellen Instanz der <see cref="T:System.Xaml.XamlReader" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Ruft beim Implementieren in einer abgeleiteten Klasse das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens, andernfalls <see langword="null" />, wenn sich die aktuelle Position des Readers nicht in einem Objekt befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">Ruft beim Implementieren in einer abgeleiteten Klasse den Wert des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Der Wert des aktuellen Knotens oder <see langword="null" />, wenn sich die aktuelle Position des Readers nicht auf einem <see cref="F:System.Xaml.XamlNodeType.Value" />-Knotentyp befindet.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">Gibt Verarbeitungsregeln oder Optionseinstellungen für eine <see cref="T:System.Xaml.XamlReader" />-Implementierung an.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlReaderSettings" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlReaderSettings" />-Klasse auf der Grundlage von Werten in einem anderen <see cref="T:System.Xaml.XamlReaderSettings" />-Objekt.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Ein vorhandenes <see cref="T:System.Xaml.XamlReaderSettings" />-Objekt.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">Ruft einen Wert ab, der angibt, ob beim Melden der XAML-Typdarstellung das Stammobjekt Member mit einem geschützten Codezugriffsmodell enthalten darf, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Stammobjekt Member mit einem geschützten Codezugriffsmodell enthalten darf, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">Ruft den Basis-URI ab, mit dem relative Pfade aufgelöst werden, oder legt ihn fest.</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">Der zu verwendende Basis-URI. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">Ruft einen Wert ab, der angibt, ob der XAML-Reader Werte für <see langword="x:Uid" />-Attribute ignorieren soll, die in Eigenschaftselementen vorhanden sind, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader Werte für <see langword="x:Uid" />-Attribute in Eigenschaftenelementen ignorieren soll. <see langword="false" />, wenn der Reader <see langword="x:Uid" />-Attribute von Eigenschaftenelementen verarbeiten soll. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">Ruft das Objekt ab, das die aktuelle lokale Assembly darstellt, die verarbeitet werden soll, oder legt dieses fest. Diese Assemblyinformationen werden potenziell für Aufrufe von Hilfs-APIs wie <see cref="M:System.Xaml.XamlType.GetAllMembers" /> verwendet.</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">Eine <see cref="T:System.Reflection.Assembly" />-Objekt für CLR-Reflektion.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">Ruft einen Wert ab, der angibt, ob der Reader Zeilennummer und Position bereitstellen kann, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader Zeilennummer- und Positionsinformationen angeben kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">Ruft einen Wert ab, der angibt, ob der Reader erzwingt, dass alle <see langword="Value" />-Knoten als <see langword="String" />-Typ verarbeitet werden, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Reader erzwingt, dass nur <see langword="String" /> in <see langword="Value" />-Knoten enthalten ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">Definiert einen wiederverwendbaren Kontext zum Interpretieren oder Zuordnen von XAML-Typen und der Typen in den Assemblys, die ihnen zugrunde liegen.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse auf der Grundlage eines Satzes von Verweisassemblys.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Ein aufzählbarer Satz von Assemblyinformationselementen. Jedes Assemblyinformationselement wird durch einen <see cref="T:System.Reflection.Assembly" />-Wert angegeben.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse auf Grundlage eines Satzes von Verweisassemblys und eines Einstellungsobjekts.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Ein aufzählbarer Satz von Assemblyinformationen. Jedes Assemblyinformationselement wird durch einen <see cref="T:System.Reflection.Assembly" />-Wert angegeben.</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Das Einstellungsobjekt für das Erstellen der <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse auf der Grundlage eines Einstellungsobjekts.</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Das Einstellungsobjekt für das Erstellen der <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">Stellt eine nicht standardmäßige <see langword="Finalize" />-Implementierung bereit, in der <see langword="Dispose" /> nicht aufgerufen wird.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Ruft einen Wert ab, der angibt, ob ein XAML-Schema und der Kontext vollqualifizierte Assemblynamen in den von der Such-API zurückgegebenen Werten verwenden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein XAML-Schema und der Kontext vollqualifizierte Assemblynamen in den von den Such-APIs zurückgegebenen Werten verwenden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">Sucht die in dieser <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse enthaltenen Assemblys und gibt einen Satz von Namespaces zurück.</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">Ein aufzählbarer Satz von Namespacebezeichnern. Diese Bezeichner werden als Zeichenfolgen bereitgestellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">Sucht die in dieser <see cref="T:System.Xaml.XamlSchemaContext" />-Klasse enthaltenen Assemblys und gibt einen Satz von Typen aus dem angegebenen XAML-Namespace zurück.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">Der XAML-Namespace, für den Typen zurückgegeben werden sollen.</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">Ein aufzählbarer Satz von XAML-Typen. Jeder XAML-Typ im Satz wird durch ein <see cref="T:System.Xaml.XamlType" />-Objekt dargestellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">Ruft beim Zuordnen des angegebenen XAML-Namespaces eine Zeichenfolge ab, die als bevorzugtes Präfix für Consumer angegeben wird.</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">Der XAML-Namespace, für den das bevorzugte Präfix abgerufen werden soll.</param>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">Eine Zeichenfolge, die von Consumern beim Zuordnen des angegebenen XAML-Namespaces zur Markupverwendung verwendet werden sollte.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">
        <paramref name="xmlns" /> ist NULL.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">Gibt einen Wertkonverter zurück, der eine Konvertierung in den angeforderten <paramref name="targetType" /> vornehmen kann.</summary>
      <param name="converterType" vsli:raw="The converter implementation.">Die Konverterimplementierung.</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">Der gewünschte Zieltyp für den Konverter.</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">Die bestimmte Konverterbasisklasse.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mit einer Einschränkung, die der auf den Methodenaufruf angewendeten Einschränkung entspricht.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">Gibt einen <see cref="T:System.Xaml.XamlDirective" />-Wert zurück, der eine Direktive darstellt (entweder für die XAML-Sprache oder für eine bestimmte Implementierung).</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">Der XAML-Namespace, der die benannte Direktive enthält.</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">Der Name der abzurufenden Direktive.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">Ein <see cref="T:System.Xaml.XamlDirective" />-Objekt, das die angeforderte Direktive darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> oder <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">Gibt einen <see cref="T:System.Xaml.XamlType" /> zurück, der auf einem XAML-Namespace und einer Zeichenfolge für den Typnamen basiert. Diese Signatur kann die Typargumente für Fälle angeben, bei denen der gewünschte Typ ein generischer Typ ist.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">Der XAML-Namespace, der den gewünschten Typ enthält.</param>
      <param name="name" vsli:raw="The string name of the desired type.">Der Zeichenfolgenname des gewünschten Typs.</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">Die Initialisierungstypargumente für einen generischen Typ.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">Das <see cref="T:System.Xaml.XamlType" />-Objekt, das den Eingabekriterien entspricht.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">Gibt ein <see cref="T:System.Xaml.XamlType" />-Objekt zurück, das auf einem CLR-Typbezeichner basiert.</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Der Typ, für den ein <see cref="T:System.Xaml.XamlType" />-Objekt abgerufen werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">Das <see cref="T:System.Xaml.XamlType" />-Objekt, das dem <paramref name="type" /> der Eingabe entspricht.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">Gibt ein <see cref="T:System.Xaml.XamlType" />-Objekt zurück, das auf einem XAML-Systemtypnamen basiert.</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Der XAML-Typname, für den ein <see cref="T:System.Xaml.XamlType" />-Objekt abgerufen werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">Das <see cref="T:System.Xaml.XamlType" />-Objekt, das dem <paramref name="xamlTypeName" /> der Eingabe entspricht.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">Eine Komonenten von <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> oder <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) lautet <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">Wird aufgerufen, wenn für Vorgänge mithilfe des Schemakontexts eine Assembly aufgelöst wird, die für die Auflösung des darin enthaltenen XAML-Namespaces erforderlich ist.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">Der Namen zu ladenden Assembly.</param>
      <returns vsli:raw="The resolved assembly.">Die aufgelöste Assembly.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">Ruft einen aufzählbaren Satz von Verweisassemblys für den XAML-Schemakontext ab.</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Ein aufzählbarer Satz von Verweisassemblys für den Schemakontext. Jedes Assemblyinformationselement wird durch einen <see cref="T:System.Reflection.Assembly" />-Wert angegeben.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">Ruft einen Wert ab, der angibt, ob ein XAML-Schema und der Kontext Markuperweiterungen unterstützen, in denen zwei Konstruktoren mit der gleichen Stelligkeit (Anzahl von Eingabeparametern) enthalten sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Schemakontext Markuperweiterungen mit doppelter Stelligkeit zulässt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">Gibt den Erfolg oder den Fehler der Anforderung eines kompatiblen XAML-Namespaces zurück. Bei einer erfolgreichen Anforderung wird dieser XAML-Namespace als Out-Parameter gemeldet.</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">Die <see langword="xmlns" />-Zeichenfolge für den XAML-Namespace, der auf ein kompatibles Ergebnis überprüft werden soll.</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">Wenn diese Methode beendet wird, die <see langword="xmlns" />-Zeichenfolge für eine kompatible XAML-Namespaceanforderung. Diese kann mit <paramref name="xamlNamespace" /> identisch sein, wenn die Methode <see langword="false" /> zurückgibt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="compatibleNamespace" /> ein verwendbares Ergebnis enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Stellt optionale Einstellungen für ein <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaContextSettings" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaContextSettings" />-Klasse durch Kopieren der Werte einer vorhandenen <see cref="T:System.Xaml.XamlSchemaContextSettings" />-Instanz.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">Eine vorhandene <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Ruft einen Wert ab, der angibt, ob ein XAML-Schema und der Kontext vollqualifizierte Assemblynamen in den von der Such-API zurückgegebenen Werten verwenden, oder legt einen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein XAML-Schema und der Kontext vollqualifizierte Assemblynamen in den von den Such-APIs zurückgegebenen Werten verwenden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">Ruft einen Wert ab, der angibt, ob ein XAML-Schemakontext Markuperweiterungen zulässt, in denen zwei Konstruktoren mit der gleichen Stelligkeit (Anzahl von Eingabeparametern) enthalten sind, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Schemakontext Markuperweiterungen mit doppelter Stelligkeit zulässt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">Die Ausnahme, die ausgelöst wird, wenn dem Schemakontext von einem Bindungssystem oder einem anderen Schemadarstellungssystem für XAML eine Ausnahme gemeldet wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlSchemaException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">Stellt Dienste auf höherer Ebene (statische Methoden) für die allgemeinen XAML-Aufgaben Lesen von XAML und Schreiben eines Objektdiagramms bzw. Lesen von Objektdiagrammen und Schreiben von XAML-Dateiausgaben zu Serialisierungszwecken bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">Lädt eine <see cref="T:System.IO.Stream" />-Quelle für einen XAML-Reader und schreibt dessen Ausgabe als Objektdiagramm.</summary>
      <param name="stream" vsli:raw="The stream to load as input.">Der Datenstrom, der als Eingabe geladen werden soll.</param>
      <returns vsli:raw="The object graph that is written as output.">Das Objektdiagramm, das als Ausgabe geschrieben wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">Erstellt einen XAML-Reader aus einem <see cref="T:System.IO.TextReader" /> und gibt ein Objektdiagramm zurück.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Der <see cref="T:System.IO.TextReader" />, der als Basis für den erstellten <see cref="T:System.Xml.XmlReader" /> verwendet werden soll.</param>
      <returns vsli:raw="The object graph that is returned.">Das Objektdiagramm, das zurückgegeben wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">Lädt eine <see cref="T:System.IO.Stream" />-Quelle für einen XAML-Reader und gibt ein Objektdiagramm zurück.</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">Der Dateiname, der geladen und als Quelle verwendet werden soll.</param>
      <returns vsli:raw="The object graph that is returned.">Das Objektdiagramm, das zurückgegeben wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">Lädt eine bestimmte XAML-Readerimplementierung und gibt ein Objektdiagramm zurück.</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Die XAML-Readerimplementierung, die als Reader für diesen <see langword="Load" />-Vorgang verwendet werden soll.</param>
      <returns vsli:raw="The object graph that is returned.">Das Objektdiagramm, das zurückgegeben wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">Lädt eine bestimmte XML-Readerimplementierung und gibt ein Objektdiagramm zurück.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Die <see cref="T:System.Xml.XmlReader" />-Implementierung, die als Reader für den <see langword="Load" />-Vorgang verwendet werden soll.</param>
      <returns vsli:raw="The output object graph.">Das Ausgabeobjektdiagramm.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">Liest XAML als Zeichenfolgenausgabe und gibt ein Objektdiagramm zurück.</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">Die zu analysierende XAML-Zeichenfolgeneingabe.</param>
      <returns vsli:raw="The object graph that is returned.">Das Objektdiagramm, das zurückgegeben wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xaml" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und anschließend zu einem Ausgabedatenstrom für die Serialisierung.</summary>
      <param name="stream" vsli:raw="The destination stream.">Der Zieldatenstrom.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und anschließend zu einer Ausgabe, die der bereitgestellten <see cref="T:System.IO.TextWriter" />-Klasse zugeordnet wird.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Der <see cref="T:System.IO.TextWriter" />, von dem die Ausgabe geschrieben wird.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">Verarbeitet eine bereitgestellte Objektstruktur in einer XAML-Knotendarstellung und gibt eine Zeichenfolgendarstellung der Ausgabe-XAML zurück.</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
      <returns vsli:raw="The XAML markup output as a string.">Die XAML-Markupausgabe als Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und schreibt sie anschließend am angegebenen Speicherort in eine Ausgabedatei.</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">Der Name und Speicherort der Datei, in die die Ausgabe geschrieben werden soll.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">
        <paramref name="fileName" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und schreibt sie anschließend in einen bereitgestellten XAML-Writer.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">Die zu verwendende <see cref="T:System.Xaml.XamlWriter" />-Implementierung.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und schreibt sie anschließend in die bereitgestellte <see cref="T:System.Xml.XmlWriter" />-Klasse.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">Die zu verwendende <see cref="T:System.Xml.XmlWriter" />-Implementierung.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" />-Eingabe ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">Verbindet ein <see cref="T:System.Xaml.XamlReader" />-Element und ein <see cref="T:System.Xaml.XamlWriter" />-Element, um einen allgemeinen XAML-Knotengruppenvermittler zu verwenden. Transformiert potenziell den Inhalt, abhängig davon, welche Typen von Readern und Writern bereitgestellt wurden.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Die zu verwendende <see cref="T:System.Xaml.XamlReader" />-Implementierung.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xaml.XamlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" />- oder <paramref name="xamlWriter" />-Eingabe ist <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Der XAML-Schemakontext passt nicht zwischen die bereitgestellten <paramref name="xamlReader" /> und <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">Verbindet ein <see cref="T:System.Xaml.XamlReader" />-Element und ein <see cref="T:System.Xaml.XamlWriter" />-Element, um einen allgemeinen XAML-Knotengruppenvermittler zu verwenden. Transformiert potenziell den Inhalt, abhängig davon, welche Typen von Readern und Writern bereitgestellt wurden. Stellt einen Parameter bereit, mit dem angegeben wird, ob der Writer nach Abschluss des Aufrufs geschlossen werden soll.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Die zu verwendende <see cref="T:System.Xaml.XamlReader" />-Implementierung.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Xaml.XamlWriter" />.</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">
        <see langword="true" />, um den Writer zu schließen, nachdem der Aufruf abgeschlossen wurde, <see langword="false" />, um den Writer an der letzten geschriebenen Position in aktivem Zustand zu belassen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlReader" />- oder <paramref name="xamlWriter" />-Eingabe ist <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Der XAML-Schemakontext passt nicht zwischen die bereitgestellten <paramref name="xamlReader" /> und <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">Meldet Informationen zu XAML-Typen als Teil des gesamten XAML-Systems, das in .NET Framework-XAML-Diensten implementiert wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage eines Zeichenfolgennamens für den Typ.</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">Der Name des zu erstellenden Typs.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Die Typargumente für einen <see cref="T:System.Xaml.XamlType" />, der einen generischen Typ darstellt. Kann <see langword="null" /> sein (dies ist häufig der Fall). Damit wird angegeben, dass der dargestellte Typ kein generischer Typ ist.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">XAML-Schemakontext für XAML-Reader und XAML-Writer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder mehrere <paramref name="typeName" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage des XAML-Namespaces und eines Zeichenfolgennamens für den Typ. Dieser Konstruktor dient ausschließlich der Analyse und der XAML-Knoten-Aufzeichnung von Typverwendungen, von denen bekannt ist, dass sie keine Unterstützung im unterstützenden Typsystem und XAML-Schemakontext besitzen.</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">Der XAML-Namespace für den Typ (als Zeichenfolge).</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">Der Name des Typs im angegebenen <paramref name="unknownTypeNamespace" />-XAML-Namespace.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Die Typargumente für einen <see cref="T:System.Xaml.XamlType" />, der einen generischen Typ darstellt. Kann <see langword="null" /> sein (dies ist häufig der Fall). Damit wird angegeben, dass der dargestellte Typ kein generischer Typ ist.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">XAML-Schemakontext für XAML-Reader oder XAML-Writer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder mehrere <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage der zugrunde liegenden CLR-Typinformationen.</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">Das zugrunde liegende <see cref="T:System.Type" />-Objekt der CLR für den zu erstellenden XAML-Typ.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">XAML-Schemakontext für XAML-Reader oder XAML-Writer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder mehrere <paramref name="underlyingType" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage der zugrunde liegenden Typinformationen und einer <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung.</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">Der zugrunde liegende Typ für den zu erstellenden XAML-Typ.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">Der XML-Schemakontext für den XAML-Reader.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung, die die Reflektionslaufzeitaufrufe der <see cref="T:System.Xaml.XamlType" />-Klasse verarbeitet.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder mehrere <paramref name="underlyingType" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft eine schreibgeschützte Auflistung der Typen ab, die als <see cref="P:System.Xaml.XamlType.ContentProperty" />-Wert für dieses <see cref="T:System.Xaml.XamlType" />-Objekt verwendbar sind.</summary>
      <returns vsli:raw="A read-only collection of possible content types.">Eine schreibgeschützte Auflistung möglicher Inhaltstypen.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs ab. Die Ermittlung dieses Werts basiert auf dem zugrunde liegenden Typ des <see cref="T:System.Xaml.XamlType" />-Objekts und des Schemakontexts.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">Gibt einen Wert zurück, der angibt, ob eine Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse die angegebene <see cref="T:System.Xaml.XamlType" />-Klasse in der Liste zuweisbarer Typen enthält.</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">Der Typ, der anhand des aktuellen <see cref="T:System.Xaml.XamlType" /> überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="xamlType" /> in der Liste der zuweisbaren Typen enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Argumente (generische Einschränkungen für <see langword="x:TypeArguments" />, Initialisierungstext oder andere XAML-Techniken) aufweisen muss, um eine gültige Instanz des Typs zu erstellen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Erstellung einer Instanz einen Argumentwert erfordert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft die <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts ab.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">
        <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts. Kann <see langword="null" /> sein, wenn keine Inhaltseigenschaft vorhanden ist.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">Ruft die Typen ab, mit denen Inhalt für eine Inhaltseigenschaft umschlossen wird, wenn es sich nicht um eine strenge Typübereinstimmung handelt, z. B. Zeichenfolgen in einer stark typisierten <see langword="Collection&lt;T&gt;" />.</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Eine schreibgeschützte Auflistung möglicher Inhaltswrappertypen, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">Ruft das <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für diesen Typ das Konvertierungsverhalten für verzögertes Laden darstellt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">Der <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mit <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung, der für diesen Typ das Verhalten für verzögertes Laden darstellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Das Objekt, das mit diesem Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="obj" />-Parameter ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Ein Objekt, das mit diesem Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt den XAML-Member zurück, der durch die <see cref="T:System.Xaml.XamlType" />-Klasse mit einem Alias für die XAML-Direktive versehen ist.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Die Direktive, für die der mit einem Alias versehene Member gesucht werden soll.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der mit einem Alias versehene Member, sofern gefunden, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt eine Auflistung zurück, die alle anfügbaren Eigenschaften enthält, die von dieser <see cref="T:System.Xaml.XamlType" />-Klasse verfügbar gemacht werden.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Eine Auflistung, die null oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt eine Auflistung zurück, die alle Member enthält, die von dieser <see cref="T:System.Xaml.XamlType" />-Klasse verfügbar gemacht wurden.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Eine Auflistung, die null oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen <see cref="T:System.Xaml.XamlMember" /> zurück, der einen bestimmten benannten Member von diesem <see cref="T:System.Xaml.XamlType" /> darstellt, der anfügbar ist.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Der Name des abzurufenden, anfügbaren Members in der Form <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Ein <see cref="T:System.Xaml.XamlMember" />-Objekt für den angeforderten anfügbaren Member; andernfalls <see langword="null" />, wenn kein anfügbarer Member dieses Namens existiert.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Gibt den Hashcode für dieses Objekt zurück.</summary>
      <returns vsli:raw="An integer hash code.">Ein ganzzahliger Hashcode.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Der Name des abzurufenden Members (als Zeichenfolge).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Xaml.XamlMember" />-Informationen für den Member, wenn ein derartiger Member gefunden wurde, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Für Markuperweiterungstypen werden die Typen der Positionsparameter zurückgegeben, die bei einer bestimmten Verwendung der Markuperweiterung für diesen <see cref="T:System.Xaml.XamlType" /> unterstützt werden.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Die Anzahl (Stelligkeit) des bestimmten Syntax- oder Konstruktormodus, zu dem Sie Informationen anzeigen möchten.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, wobei jeder <see cref="T:System.Xaml.XamlType" /> der Typ für diese Position in der Syntax ist. Beim Angeben von Markupeingaben für die Markuperweiterung müssen die Typen in der gleichen Reihenfolge angegeben werden.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">Gibt eine Liste von Zeichenfolgenbezeichnern für XAML-Namespaces zurück, in denen der Typ enthalten ist.</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">Eine Liste von Zeichenfolgenwerten, in der jede Zeichenfolge der URI-Bezeichner für einen XAML-Namespace ist.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung ab, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt zugeordnet ist.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Array darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Array darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Auflistung darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Auflistung darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen generischen Typ darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen generischen Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge als <see cref="P:System.Xaml.XamlType.Name" />-Eigenschaft initialisiert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge initialisiert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ im relevanten Typsystem darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der nicht im zugrunde liegenden Typsystem aufgelöst werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen nicht auflösbaren Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung gemäß der XML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt XML-<see langword="XDATA" /> gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt <see langword="XDATA" /> darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft einen Wert ab, der die Typinformationen für die <see langword="Items" />-Eigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ der Elemente in der Auflistung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt keine Auflistung darstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Ruft einen Wert ab, der die Typinformationen für die Schlüsseleigenschaft von diesem <see cref="T:System.Xaml.XamlType" />-Objekt enthält, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ des Schlüssels für die Wörterbuchverwendung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein Wörterbuch darstellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt den XAML-Member zurück, der durch die <see cref="T:System.Xaml.XamlType" />-Klasse mit einem Alias für die XAML-Direktive versehen ist.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Die Direktive, für die der mit einem Alias versehene Member gesucht werden soll.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der mit einem Alias versehene Member, sofern gefunden, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen aufzählbaren Satz zurück, der alle anfügbaren, von diesem <see cref="T:System.Xaml.XamlType" /> verfügbar gemachten Eigenschaften enthält.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein aufzählbarer Satz, der 0 (null) oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen aufzählbaren Satz zurück, der alle Member enthält, die von diesem <see cref="T:System.Xaml.XamlType" /> verfügbar gemacht werden.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Ein aufzählbarer Satz, der 0 (null) oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt eine Liste der Typen zurück, die als <see cref="P:System.Xaml.XamlType.ContentProperty" />-Wert für dieses <see cref="T:System.Xaml.XamlType" />-Objekt verwendbar sind.</summary>
      <returns vsli:raw="A list of possible content types.">Eine Liste möglicher Inhaltstypen.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten anfügbaren Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Der Name des abzurufenden, anfügbaren Members in der Form <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Ein <see cref="T:System.Xaml.XamlMember" />-Objekt für den angeforderten anfügbaren Member; andernfalls <see langword="null" />, wenn kein anfügbarer Member dieses Namens existiert.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs zurück. Die Ermittlung dieses Werts basiert auf dem zugrunde liegenden Typ des <see cref="T:System.Xaml.XamlType" />-Objekts und des Schemakontexts.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">Gibt einen Wert der <see cref="T:System.Xaml.Schema.XamlCollectionKind" />-Enumeration zurück, durch den deklariert wird, welcher bestimmte Auflistungstyp von diesem <see cref="T:System.Xaml.XamlType" />-Objekt verwendet wird.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">Ein Wert der <see cref="T:System.Xaml.Schema.XamlCollectionKind" />-Enumeration.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Argumente (generische Einschränkungen für <see langword="x:TypeArguments" />, Initialisierungstext oder andere XAML-Techniken) aufweisen muss, um eine gültige Instanz des Typs zu erstellen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Erstellung einer Instanz einen Argumentwert erfordert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts zurück.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts. Kann <see langword="null" /> sein.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten ab, die die Inhaltswrapper für dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellen.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, die die Inhaltswrapper für dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellen.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Gibt bei der Implementierung in einer abgeleiteten Klasse eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, der eine <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ besitzt.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zurück, der diesem <see cref="T:System.Xaml.XamlType" /> zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Informationen für diesen <see cref="T:System.Xaml.XamlType" />, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen Umgebungstyp gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen erstellbaren Typ gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen XAML-Namescope gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen Nullable-Typ gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ im relevanten Typsystem darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der nicht im zugrunde liegenden Typsystem aufgelöst werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen nicht auflösbaren Typ darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung gemäß der XML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt XML-<see langword="XDATA" /> gemäß XAML-Definition darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt <see langword="XDATA" /> darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt einen Wert zurück, der die Typinformationen für die <see langword="Items" />-Eigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ der Elemente in der Auflistung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt keine Auflistung darstellt</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Gibt einen Wert zurück, der die Typinformationen für die Schlüsseleigenschaft von diesem <see cref="T:System.Xaml.XamlType" />-Objekt enthält, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ des Schlüssels für die Wörterbuchverwendung oder <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein Wörterbuch darstellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Gibt einen Wert zurück, der die Typinformationen für das zurückgegebene <see langword="ProvideValue" />-Objekt dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält, wenn es eine Markuperweiterung darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Rückgabetyp für die Verwendung der Markuperweiterung, andernfalls <see langword="null" />, wenn dieser <see cref="T:System.Xaml.XamlType" /> keine Markuperweiterung darstellt.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt den <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Der Name des abzurufenden Members (als Zeichenfolge).</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um einen Member zurückzugeben, auch wenn dieser Member den Wert <see langword="true" /> für <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> aufweist. <see langword="false" />, wenn kein <see cref="P:System.Xaml.XamlMember.IsReadOnly" />-Member zurückgegeben werden soll. Die Standardeinstellung ist <see langword="false" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Die <see cref="T:System.Xaml.XamlMember" />-Informationen für den Member, wenn ein Member gefunden wurde, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Für Markuperweiterungstypen werden die Typen der Positionsparameter zurückgegeben, die bei einer bestimmten Verwendung der Markuperweiterung für diesen <see cref="T:System.Xaml.XamlType" /> unterstützt werden.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Die Anzahl (Stelligkeit) des bestimmten Syntax- oder Konstruktormodus, zu dem Sie Informationen anzeigen möchten.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, wobei jedes derartige <see cref="T:System.Xaml.XamlType" />-Objekt der Typ für diese Position in der Syntax ist. Beim Angeben von Markupeingaben für die Markuperweiterung müssen diese Typen in der gleichen Reihenfolge angegeben werden.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">Gibt einen Handlerrückruf zurück, der für set-Vorgänge von Markuperweiterungen verwendet werden soll.</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">Ein Handlerrückruf, der für set-Vorgänge von Markuperweiterungen verwendet werden soll.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">Gibt einen Handler zurück, der in Fällen von Typkonverterfestlegung verwendet werden soll.</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">Ein Handler, der in Fällen von Typkonverterfestlegung verwendet werden soll.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einem Modus serialisiert werden soll, in dem umgebender Leerraum abgeschnitten wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einem Modus serialisiert werden soll, in dem umgebender Leerraum abgeschnitten wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit einer <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung zurück, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung zurück, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt das <see cref="T:System.Type" />-Objekt der CLR zurück, das diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Das <see cref="T:System.Type" />-Objekt der CLR, das diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit einer <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung zurück, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Ruft einen Wert ab, der die Typinformationen für das zurückgegebene <see langword="ProvideValue" />-Objekt dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält, wenn es eine Markuperweiterung darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Rückgabetyp für die Verwendung der Markuperweiterung, andernfalls <see langword="null" />, wenn dieser <see cref="T:System.Xaml.XamlType" /> keine Markuperweiterung darstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">Ruft den Zeichenfolgennamen des Typs ab, den dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellt.</summary>
      <returns vsli:raw="The string name of this XAML type.">Der Zeichenfolgenname dieses XAML-Typs.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlType" />-Objekte denselben Wert haben.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="xamlType1" /> und <paramref name="xamlType2" /> denselben Wert haben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlType" />-Objekte verschiedene Werte haben.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert von <paramref name="xamlType1" /> vom Wert von <paramref name="xamlType2" /> verschieden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft den einzelnen XAML-Namespace ab, der der primäre XAML-Namespace für diesen <see cref="T:System.Xaml.XamlType" /> ist.</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">Der Bezeichner für den primären XAML-Namespace für diesen XAML-Typ als Zeichenfolge.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft das aktive <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zum Verarbeiten dieses <see cref="T:System.Xaml.XamlType" />-Objekt ab.</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Das aktive <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zum Verarbeiten dieses <see cref="T:System.Xaml.XamlType" />-Objekts.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Leerraumbehandlungsverhalten für die Serialisierung aufweist, bei dem umgebender Leerraum in seinem Inhalt abgeschnitten wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der Leerraumeinschränkung verwendet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">Ruft eine Liste von Typargumenten für Fälle ab, in denen dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein generisches Objekt darstellt.</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">Eine Liste von Typargumenttypen, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein generisches Objekt darstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung ab, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft das <see cref="T:System.Type" />-Objekt der CLR ab, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Der CLR-<see cref="T:System.Type" />, der diesem <see cref="T:System.Xaml.XamlType" /> zugrunde liegt.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung ab, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">Stellt die Standardimplementierung und Basisklassendefinitionen für einen XAML-Writer bereit. Dies ist kein funktionierender Standard-XAML-Writer. Sie müssen entweder von <see cref="T:System.Xaml.XamlWriter" /> ableiten und dessen abstrakte Member implementieren oder eine vorhandene abgeleitete <see cref="T:System.Xaml.XamlWriter" />-Klasse verwenden.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlWriter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">Schließt das XAML-Writerobjekt.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Xaml.XamlWriter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">Ruft ab, ob die <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />-Methode aufgerufen wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> aufgerufen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">Bei der Implementierung in einer abgeleiteten Klasse wird der aktive XAML-Schemakontext abgerufen.</summary>
      <returns vsli:raw="The active XAML schema context.">Der aktive XAML-Schemakontext.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">Siehe <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">Bei der Implementierung in einer abgeleiteten Klasse wird die Darstellung eines Endmemberknotens erzeugt.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">Bei der Implementierung in einer abgeleiteten Klasse wird die Darstellung eines Endobjektknotens erzeugt.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">Bei der Implementierung in einer abgeleiteten Klasse wird ein Objekt für Fälle erzeugt, in denen das betreffende Objekt ein Standardwert oder impliziter Wert der festgelegten Eigenschaft ist. Das Objekt wird also nicht als diskreter Objektwert in der Eingabe-XAML-Knotengruppe angegeben.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">Bei der Implementierung in einer abgeleiteten Klasse wird ein XAML-Namespacedeklarationsknoten geschrieben.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Die zu schreibende Namespacedeklaration.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">Führt eine Umschaltung auf Grundlage des Knotentyps des XAML-Readers aus (<see cref="P:System.Xaml.XamlReader.NodeType" />) und ruft die relevante <see langword="Write" />-Methode für die Writerimplementierung auf.</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">Der Reader, der für Knotenermittlung verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">Die Standardimplementierung fand <see cref="T:System.Xaml.XamlNodeType" />, der nicht in der Standardenumeration ist.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">Bei der Implementierung in einer abgeleiteten Klasse wird die Darstellung eines Startmemberknotens geschrieben.</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">Der zu schreibende Memberknoten.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">Bei der Implementierung in einer abgeleiteten Klasse wird die Darstellung eines Startobjektknotens geschrieben.</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">Der XAML-Typ des zu schreibenden Objekts.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">Bei der Implementierung in einer abgeleiteten Klasse wird ein Wertknoten geschrieben.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">Stellt Initialisierungseinstellungen für eine <see cref="T:System.Xaml.XamlWriter" />-Implementierung bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlWriterSettings" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlWriterSettings" />-Klasse unter Verwendung einer anderen vorhandenen Einstellungsinstanz.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">Ein vorhandenes <see cref="T:System.Xaml.XamlWriterSettings" />-Objekt.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">Verarbeitet XAML-Markup aus XML-Dateien durch Verwenden eines <see cref="T:System.Xml.XmlReader" />-Vermittlers und erzeugt einen XAML-Knotenstream.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage eines Datenstroms.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Der ursprüngliche Datenstrom, der in den Reader geladen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage eines Datenstroms und mit einem angegebenen XAML-Schemakontext.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Der ursprüngliche Datenstrom, der in den Reader geladen werden soll.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage eines Datenstroms mit einem angegebenen XAML-Schemakontext und XAML-spezifischen Einstellungen.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Der ursprüngliche Datenstrom, der in den Reader geladen werden soll.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Die bestimmten Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage eines Datenstroms mit XAML-spezifischen Einstellungen.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Der ursprüngliche Datenstrom, der in den Reader geladen werden soll.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Die bestimmten Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage eines <see cref="T:System.IO.TextReader" />-Objekts.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Die für die Initialisierung zu verwendende <see cref="T:System.IO.TextReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage einer <see cref="T:System.IO.TextReader" />-Klasse mit einem angegebenen Schemakontext und XAML-spezifischen Einstellungen.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Die für die Initialisierung zu verwendende <see cref="T:System.IO.TextReader" />.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> ist <see langword="null" />.
- oder -
<paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage einer <see cref="T:System.IO.TextReader" />-Klasse und mit einem angegebenen Schemakontext und XAML-spezifischen Einstellungen.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Die für die Initialisierung zu verwendende <see cref="T:System.IO.TextReader" />.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Die bestimmten Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> ist <see langword="null" />.
- oder -
<paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage einer <see cref="T:System.IO.TextReader" />-Klasse und mit XAML-spezifischen Einstellungen.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Die für die Initialisierung zu verwendende <see cref="T:System.IO.TextReader" />.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Die bestimmten Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage des Dateinamens einer Datei, die in einem XAML-Standardreader geladen werden soll.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Der Name der zu ladenden XML-Datei.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse mit einem angegebenen XAML-Schemakontext auf Grundlage des Dateinamens einer Datei, die in einen Standard-XML-Reader geladen werden soll.</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">Der Name der zu ladenden Datei.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">Initialisiert mit einem angegebenen XAML-Schemakontext und XAML-spezifischen Einstellungen eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage des Dateinamens einer Datei, die in einen Standard-XML-Reader geladen werden soll.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Der Name der zu ladenden XML-Datei.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Die bestimmten Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ist <see langword="null" />.
- oder -
<paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">Initialisiert mit XAML-spezifischen Readereinstellungen eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse auf Grundlage des Dateinamens einer Datei, die in einen Standard-XML-Reader geladen werden soll.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Der Name der zu ladenden XML-Datei.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Die bestimmten Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse unter Verwendung des bereitgestellten <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Das <see cref="T:System.Xml.XmlReader" />-Element, das als Vermittler-XML-Prozessor verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse mithilfe des bereitgestellten <see cref="T:System.Xml.XmlReader" />-Objekts und des Schemakontexts.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Das <see cref="T:System.Xml.XmlReader" />-Element, das als Vermittler-XML-Prozessor verwendet werden soll.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse mithilfe des bereitgestellten <see cref="T:System.Xml.XmlReader" />-Objekts, des Schemakontexts und der Readereinstellungen.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Das <see cref="T:System.Xml.XmlReader" />-Element, das als Vermittler-XML-Prozessor verwendet werden soll.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Der XML-Schemakontext für die XAML-Verarbeitung.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Die bestimmten XAML-Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReader" />-Klasse mithilfe des bereitgestellten <see cref="T:System.Xml.XmlReader" />-Objekts und der Readereinstellungen.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Das <see cref="T:System.Xml.XmlReader" />-Element, das als Vermittler-XML-Prozessor verwendet werden soll.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Die bestimmten XAML-Readereinstellungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Ruft einen Wert ab, der angibt, ob Zeileninformationen verfügbar sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Zeileninformationen verfügbar sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">Ruft einen Wert ab, der angibt, ob die Readerposition im XAML-Knotenstream am Dateiende ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Position am konzeptionellen Dateiende des Knotenstreams befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Ruft die zu berichtende Zeilennummer ab.</summary>
      <returns vsli:raw="The line number to report.">Die Zeilennummer, die im Bericht enthalten sein soll.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Ruft die zu berichtende Zeilenposition ab.</summary>
      <returns vsli:raw="The line position to report.">Die Zeilenposition, die im Bericht enthalten sein soll.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Ruft den aktuellen Member an der Readerposition ab, wenn sich die aktuelle Readerposition in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" />-Feld befindet.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">Der aktuelle Member oder <see langword="null" />, wenn sich die aktuelle Readerposition nicht in einem Member befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Ruft den XAML-Namespace aus dem aktuellen Knoten ab.</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der XAML-Namespace im aktuellen Knoten (wenn verfügbar), andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Ein Wert der <see cref="T:System.Xaml.XamlNodeType" />-Enumeration.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">Stellt den nächsten XAML-Knoten aus der geladenen Quelle bereit, wenn ein XAML-Knoten verfügbar ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Knoten verfügbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Ruft ein Objekt ab, das Schemainformationen für den Informationssatz bereitstellt.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Ein Objekt, das Schemainformationen für den Informationssatz bereitstellt.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">Der <see cref="T:System.Xaml.XamlType" />-Typ des aktuellen Knotens oder <see langword="null" />, wenn sich die Position nicht in einem Objekt befindet.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Ruft den Wert des aktuellen Knotens ab.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Der Wert des aktuellen Knotens oder <see langword="null" />, wenn sich die Position nicht auf einem <see cref="F:System.Xaml.XamlNodeType.Value" />-Knotentyp befindet.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">Gibt Verarbeitungsregeln oder Optionseinstellungen für die <see cref="T:System.Xaml.XamlXmlReader" />-XAML-Readerimplementierung an.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReaderSettings" />-Klasse.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlReaderSettings" />-Klasse durch Kopieren von Einstellungen aus einem vorhandenen <see cref="T:System.Xaml.XamlXmlReaderSettings" />-Objekt.</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">Das zu kopierende vorhandene <see cref="T:System.Xaml.XamlXmlReaderSettings" />-Objekt.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">Ruft einen Wert ab, der angibt, ob der zugrunde liegende Datenstrom oder Textreader geschlossen werden soll, wenn das <see cref="T:System.Xaml.XamlXmlReader" />-Objekt geschlossen wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der zugrunde liegenden Stream oder Reader geschlossen werden soll, nachdem der <see cref="T:System.Xaml.XamlXmlReader" /> geschlossen wurde, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">Ruft einen Wert ab, der bestimmt, ob der Reader vom Standard-<see cref="T:System.Xaml.XamlXmlReader" />-Verhalten bei der Verarbeitung von Markupkompatibilitätsinhalt abweichen soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der initiierende Reader direkt verwendet wird, sodass XML-Kompatibilitätsmarkup als Teil des Hauptstreams verarbeitet wird und die Kompatibilität keine Rolle spielt. <see langword="false" />, wenn das Standardverhalten verwendet wird, bei dem XML-Kompatibilität getrennt verarbeitet wird. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">Ruft den Spracheinstellungswert ab, den der Reader möglicherweise auf Writer hochstuft, die <see langword="xml:lang" />-Attribute in Knoten schreiben, oder legt diesen fest.</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">Die Zeichenfolge, die für eine mögliche <see langword="xml:lang" />-Ausgabe auf Grundlage des Readers verwendet werden soll.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">Ruft einen Wert ab, der bestimmt, ob der XAML-Reader XAML-Writer anweist, <see langword="xml:space" />-Attribute in Knoten zu schreiben, oder legt diesen fest. Wenn dieses Verhalten gewünscht wird, werden diese Informationen über den freigegebenen XAML-Schemakontext übergeben.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" />Wenn Writer, die den XAML-knotenstream verarbeiten, <c>XML: Space = "preserve"</c> in der Ausgabe schreiben können; , Wenn <see langword="xml:space" />  in Knoten keine Attribute geschrieben werden können. <see langword="false" /></returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">Verwendet eine <see cref="T:System.IO.TextWriter" />-Hilfsklasse oder eine <see cref="T:System.Xml.XmlWriter" />-Hilfsklasse, um einen XAML-Knotenstream in ein mit Text oder Markup serialisiertes Formular zu schreiben.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse aus einem Datenstrom.</summary>
      <param name="stream" vsli:raw="The stream to write.">Der Datenstrom, der geschrieben werden soll.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Der XAML-Schemakontext für den XAML-Writer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.
- oder -
<paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse aus einem Datenstrom mithilfe eines Writer-Einstellungsobjekts.</summary>
      <param name="stream" vsli:raw="The stream to write.">Der Datenstrom, der geschrieben werden soll.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Der XAML-Schemakontext für den XAML-Writer.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Eine Instanz von <see cref="T:System.Xaml.XamlXmlWriterSettings" />, die i. d. R. über bestimmte von den Standardwerten abweichende Einstellungen verfügt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="stream" /> oder <paramref name="schemaContext" /> ist <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse aus einer <see cref="T:System.IO.TextWriter" />-Basis.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Der <see cref="T:System.IO.TextWriter" />, von dem die Ausgabe geschrieben wird.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Der XAML-Schemakontext für den XAML-Writer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse aus einer <see cref="T:System.IO.TextWriter" />-Basis mithilfe eines Einstellungsobjekts.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Der <see cref="T:System.IO.TextWriter" />, von dem die Ausgabe geschrieben wird.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Der XAML-Schemakontext für den XAML-Writer.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Eine Instanz von <see cref="T:System.Xaml.XamlXmlWriterSettings" />, die i. d. R. über bestimmte von den Standardwerten abweichende Einstellungen verfügt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse aus einer <see cref="T:System.Xml.XmlWriter" />-Basis.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">Der <see cref="T:System.Xml.XmlWriter" />, von dem die Ausgabe geschrieben wird.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Der XAML-Schemakontext für den XAML-Writer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse aus einer <see cref="T:System.Xml.XmlWriter" />-Basis mithilfe eines Einstellungsobjekts.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">Der <see cref="T:System.Xml.XmlWriter" />, von dem die Ausgabe geschrieben wird.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Der XAML-Schemakontext für den XAML-Writer.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Eine Instanz von <see cref="T:System.Xaml.XamlXmlWriterSettings" />, die i. d. R. über bestimmte von den Standardwerten abweichende Einstellungen verfügt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> oder <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">Gibt die von der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die nicht verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">Ruft die <see langword="Flush" />-Methode der zugrunde liegenden <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse auf, die alle derzeit im Puffer enthaltenen Elemente schreibt und den Writer anschließend schließt.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">Ruft den XAML-Schemakontext ab, der von der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse zur Verarbeitung verwendet wird.</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Der XAML-Schemakontext, der von <see cref="T:System.Xaml.XamlXmlWriter" /> zur XAML-Verarbeitung verwendet wird.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Ruft die Writereinstellungen ab, die von der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse zur XAML-Verarbeitung verwendet werden.</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Die Writereinstellungen, die von der <see cref="T:System.Xaml.XamlXmlWriter" />-Klasse zur XAML-Verarbeitung verwendet werden.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">Schreibt einen XAML-Endmemberknoten in die zugrunde liegende <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse. Löst eine Ausnahme aus, wenn die aktuelle Position des XAML-Knotendatenstroms nicht innerhalb eines Members liegt oder wenn der interne Zustand des Writers nicht das Schreiben in Endmember unterstützt.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">Die aktuelle Position des XAML-Knotenstreams liegt nicht innerhalb eines Members.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">Der aktuelle Writerzustand unterstützt das Schreiben eines Endmembers nicht.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">Schreibt einen XAML-Endobjektknoten in die zugrunde liegende <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse. Löst eine Ausnahme aus, wenn die aktuelle Position des XAML-Knotenstreams, die verarbeitet wird, nicht mit dem Schreiben eines Endobjekts kompatibel ist.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">Die aktuelle Position des XAML-Knotenstreams ist innerhalb eines Members; oder sie ist nicht in einem Bereich, wo ein Endmember geschrieben werden kann.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">Der aktuelle Writerzustand unterstützt das Schreiben eines Endobjekts nicht.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">Schreibt ein Objekt für Fälle, in denen das angegebene Objekt ein standardmäßiger oder impliziter Wert der geschriebenen Eigenschaft ist. Das Objekt wird nicht als Objektwert in der Eingabe-XAML-Knotengruppe angegeben.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">Schreibt Namespaceinformationen in die zugrunde liegende <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse. Löst möglicherweise eine Ausnahme für bestimmte Zustände aus. Darf jedoch stattdessen das Schreiben der Namespaceinformationen verzögern, bis der verarbeitete Writer und XAML-Knotenstream eine Position erreicht, an der eine XAML-Namespacedeklaration eingefügt werden kann.</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">Die zu schreibende XAML-Namespacedeklaration.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> ist keine gültige XAML-Namespacedeklaration (verfügt über ein NULL-Präfix oder eine NULL-Bezeichnerkomponente).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">Der aktuelle Writerzustand unterstützt das Schreiben einer XAML-Namespacedeklaration nicht.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">Schreibt einen XAML-Startmemberknoten in die zugrunde liegende <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse. Löst eine Ausnahme aus, wenn sich die aktuelle Position des XAML-Knotendatenstroms innerhalb eines anderen Members befindet oder andernfalls nicht in einem Bereich oder Zustand des Writers, in dem ein Startmember geschrieben werden kann.</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">Der XAML-Memberbezeichner für den zu schreibenden Member.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> ist kein gültiger <see cref="T:System.Xaml.XamlMember" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">Die aktuelle Position des XAML-Knotenstreams ist für das Schreiben eines Startmembers nicht gültig.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">Der Writerzustand ist nicht gültig für das Schreiben eines Startmembers.
- oder -
Der XAML-Writer hat versucht, einen doppelten Member zu schreiben. Diese Ausnahme verfügt möglicherweise über eine präzisere innere Ausnahme.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">Schreibt einen XAML-Startobjektknoten in die zugrunde liegende <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse. Löst eine Ausnahme aus, wenn sich die aktuelle Position des XAML-Knotendatenstroms nicht in einem Bereich befindet, in dem ein Startobjekt geschrieben werden kann, oder der Writer sich nicht in einem Zustand befindet, in dem ein Startobjekt geschrieben werden kann.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">Der <see cref="T:System.Xaml.XamlType" /> (XAML-Typbezeichner) für das zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> ist kein gültiger <see cref="T:System.Xaml.XamlType" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">Die aktuelle Position des XAML-Knotenstreams ist für das Schreiben eines neuen Startobjekts nicht gültig.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">Die Zustand des XAML-Writers ist für das Schreiben eines neuen Startobjekts nicht gültig.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">Schreibt einen XAML-Wertknoten in die zugrunde liegende <see cref="T:System.Xml.XmlWriter" />- oder <see cref="T:System.IO.TextWriter" />-Klasse. Löst eine Ausnahme aus, wenn die aktuelle Position des XAML-Knotenstreams für das Schreiben eines Werts ungültig ist oder der Writer sich in einem Zustand befindet, in dem ein Wert nicht geschrieben werden kann.</summary>
      <param name="value" vsli:raw="The value information to write.">Die zu schreibenden Wertinformationen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">Die aktuelle Position des XAML-Knotenstreams ist für das Schreiben eines Werts nicht gültig.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">Der XAML-Writerzustand unterstützt das Schreiben eines Wertknotens nicht.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> gibt einen Wert an, der nicht Null oder eine Zeichenfolge ist.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">Die Ausnahme, die von bestimmten <see cref="T:System.Xaml.XamlXmlWriter" />-APIs ausgelöst wird.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriterException" />-Klasse mit einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriterException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriterException" />-Klasse mit einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriterException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">Stellt Initialisierungseinstellungen für die Implementierung des <see cref="T:System.Xaml.XamlXmlWriter" />-XAML-Writers bereit.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlXmlWriterSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">Ruft einen Wert ab, der angibt, ob vom <see cref="T:System.Xaml.XamlXmlWriter" />-Objekt immer gültige XAML-Eingaben zum Zweck doppelter Auflösung oder anderer Fehlerüberprüfungsmaßnahmen angenommen werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Xaml.XamlXmlWriter" />-Objekt bestimmte Validierungs- oder Fehlerüberprüfungen überspringen soll, z. B. das Auslösen von Ausnahmen für doppelte Elemente. <see langword="false" />, wenn der <see cref="T:System.Xaml.XamlXmlWriter" /> beim Feststellen von ungültigem XAML Ausnahmen auslöst. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xaml.XamlXmlWriter" /> bei <see langword="Dispose" /> oder anderen Vorgängen sofort geschlossen werden soll oder ob der XAML-Writer stattdessen vor dem Schließen die Pufferausgabe schreiben soll, oder legt diesen Wert fest. Verwenden Sie diese Einstellung mit äußerster Vorsicht. Durch das sofortige Schließen kann ungültiges XAML erhalten werden, das nicht wieder geladen werden kann.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xaml.XamlXmlWriter" /> bei einem <see langword="Dispose" />-Vorgang oder ähnlichen Vorgängen sofort geschlossen wird. <see langword="false" />, wenn die verbleibende Pufferausgabe vor dem Freigeben des <see cref="T:System.Xaml.XamlXmlWriter" /> geschrieben wird. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">Gibt eine Kopie dieser <see cref="T:System.Xaml.XamlXmlWriterSettings" />-Instanz zurück.</summary>
      <returns vsli:raw="The returned copy.">Die zurückgegebene Kopie.</returns>
    </member>
  </members>
</doc>