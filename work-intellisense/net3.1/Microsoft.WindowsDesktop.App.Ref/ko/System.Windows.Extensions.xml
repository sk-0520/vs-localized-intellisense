<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.FontConverter">
      <summary>한 데이터 형식에서 다른 데이터 형식으로 <see cref="T:System.Drawing.Font" /> 개체를 변환합니다.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>새 <see cref="T:System.Drawing.FontConverter" /> 개체를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 변환기가 지정된 소스 형식의 개체를 변환기의 네이티브 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출되는 환경에 대한 추가 정보를 가져올 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="sourceType">변환할 원본 형식입니다.</param>
      <returns>이 개체가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>컨텍스트를 사용하여 이 변환기에서 개체를 지정된 대상 형식으로 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see langword="ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="destinationType">변환할 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</param>
      <returns>이 변환기가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>지정된 개체를 변환기의 네이티브 형식으로 변환합니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출되는 환경에 대한 추가 정보를 가져올 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="culture">글꼴을 나타내는 데 사용된 문화권을 지정하는 <see langword="CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 개체입니다.</param>
      <returns>변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 수행할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>지정된 개체를 다른 형식으로 변환합니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출되는 환경에 대한 추가 정보를 가져올 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="culture">개체를 나타내는 데 사용된 문화권을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 개체입니다.</param>
      <param name="destinationType">개체를 변환할 데이터 형식입니다.</param>
      <returns>변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">변환에 성공하지 못한 경우</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>지정된 개체의 속성 값 집합을 사용하여 이러한 형식의 개체를 만듭니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <param name="propertyValues">새 속성 값의 사전입니다. 이 사전은 <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> 메서드에서 반환된 각 속성에 대해 이름/값 쌍을 하나씩 포함하는 이름/값 쌍 집합을 포함합니다.</param>
      <returns>새로 만들어진 개체를 반환하거나, 개체를 만들 수 없는 경우 <see langword="null" />을 반환합니다. 기본 구현은 <see langword="null" />를 반환합니다.
<see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />는 변경할 수 있는 속성을 가진 변경할 수 없는 개체를 만드는 데 유용합니다.</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" />는 글꼴 이름과 여러 가지 다른 표현 사이를 변환하는 데 사용되는 형식 변환기입니다.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 변환기가 지정된 소스 형식의 개체를 변환기의 네이티브 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context">이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성에서 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="sourceType">변환할 원본 형식입니다.</param>
      <returns>변환기가 변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>지정된 개체를 변환기의 네이티브 형식으로 변환합니다.</summary>
      <param name="context">이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성에서 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="culture">변환을 수행하는 데 사용할 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환할 개체입니다.</param>
      <returns>변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 완료할 수 없습니다.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 변환기를 사용하도록 디자인된 데이터 형식의 표준 값이 포함된 컬렉션을 검색합니다.</summary>
      <param name="context">이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성에서 <see langword="null" />을 반환할 수도 있습니다.</param>
      <returns>유효한 값의 표준 집합이나 <see langword="null" />을 포함하는 컬렉션입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 메서드에서 반환된 표준 값 목록이 단독 목록인지 여부를 확인합니다.</summary>
      <param name="context">이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성에서 <see langword="null" />을 반환할 수도 있습니다.</param>
      <returns>
        <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />에서 반환된 컬렉션이 가능한 값의 단독 목록이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 개체가 목록에서 선택할 수 있는 표준 값 집합을 지원하는지 여부를 확인합니다.</summary>
      <param name="context">이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성에서 <see langword="null" />을 반환할 수도 있습니다.</param>
      <returns>개체가 지원하는 일반 값 집합을 찾기 위해 <see langword="true" />를 호출해야 하는 경우 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 애플리케이션 정의 작업을 수행합니다.</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>글꼴 단위와 다른 단위 형식 사이를 변환합니다.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontUnitConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <see cref="T:System.Drawing.Font" /> 형식에 유효한 표준 값의 컬렉션을 반환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 개체의 값을 변경할 때 <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> 메서드를 호출하여 새 값을 만들어야 할지 여부를 확인합니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <returns>이 개체의 속성을 하나 이상 변경할 때 <see langword="true" /> 개체를 호출해야 하면 이 메서드가 <see langword="CreateInstance" />를 반환하고 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>이 형식의 속성 집합을 검색합니다. 기본적으로 형식은 반환할 속성을 갖지 않습니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <param name="value">속성을 가져올 개체의 값입니다.</param>
      <param name="attributes">속성을 설명하는 <see cref="T:System.Attribute" /> 개체의 배열입니다.</param>
      <returns>이 데이터 형식에 대해 노출되어야 하는 속성의 집합을 반환합니다. 노출해야 할 속성이 없으면 <see langword="null" />이 반환될 수 있습니다. 기본 구현에서는 항상 <see langword="null" />을 반환합니다.
이 메서드를 간단히 구현하려면 올바른 데이터 형식에 대한 <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> 메서드를 호출하면 됩니다.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 개체가 속성을 지원하는지 여부를 결정합니다. 기본값은 <see langword="false" />입니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <returns>이 개체의 속성을 찾기 위해 <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 메서드를 호출해야 하면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>
        <see cref="T:System.Drawing.Icon" /> 개체를 한 데이터 형식에서 다른 것으로 변환합니다. <see cref="T:System.ComponentModel.TypeDescriptor" /> 개체를 통해 이 클래스에 액세스합니다.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.IconConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 <see cref="T:System.Drawing.IconConverter" />에서 지정된 컨텍스트를 사용하여 지정된 형식의 인스턴스를 <see cref="T:System.Drawing.Icon" />로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="sourceType">변환할 원본 형식을 지정하는 <see cref="T:System.Type" />입니다.</param>
      <returns>이 <see cref="T:System.Drawing.IconConverter" />가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 <see cref="T:System.Drawing.IconConverter" />에서 지정된 컨텍스트를 사용하여 <see cref="T:System.Drawing.Icon" />를 지정된 형식의 인스턴스로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="destinationType">변환할 대상 형식을 지정하는 <see cref="T:System.Type" />입니다.</param>
      <returns>이 <see cref="T:System.Drawing.IconConverter" />가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>지정된 개체를 <see cref="T:System.Drawing.Icon" />로 변환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture">특정 문화권에 대한 정보를 보관하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환될 <see cref="T:System.Object" />입니다.</param>
      <returns>이 메서드는 성공하면 지정된 개체를 변환하여 만든 <see cref="T:System.Drawing.Icon" />를 반환합니다. 그렇지 않으면 예외가 throw됩니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 수행할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Drawing.Icon" /> 또는 <see cref="T:System.Drawing.Icon" />으로 캐스팅할 수 있는 개체를 지정된 형식으로 변환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture">특정 문화에서 사용된 형식 지정 규칙을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 개체입니다. 이 개체는 아이콘 형식이거나 <see cref="T:System.Drawing.Icon" />으로 캐스팅될 수 있는 형식이어야 합니다.</param>
      <param name="destinationType">아이콘을 변환할 대상 형식입니다.</param>
      <returns>이 메서드는 변환된 개체를 반환합니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 수행할 수 없는 경우</exception>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" />는 하나의 데이터 형식에서 다른 데이터 형식으로 <see cref="T:System.Drawing.Image" /> 개체를 변환하는 데 사용할 수 있는 클래스입니다. <see cref="T:System.ComponentModel.TypeDescriptor" /> 개체를 통해 이 클래스에 액세스합니다.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 <see cref="T:System.Drawing.ImageConverter" />에서 지정된 컨텍스트를 사용하여 지정된 형식의 인스턴스를 <see cref="T:System.Drawing.Image" />로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="sourceType">변환할 원본 형식을 지정하는 <see cref="T:System.Type" />입니다.</param>
      <returns>이 <see cref="T:System.Drawing.ImageConverter" />가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 <see cref="T:System.Drawing.ImageConverter" />에서 지정된 컨텍스트를 사용하여 <see cref="T:System.Drawing.Image" />를 지정된 형식의 인스턴스로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="destinationType">변환할 대상 형식을 지정하는 <see cref="T:System.Type" />입니다.</param>
      <returns>이 <see cref="T:System.Drawing.ImageConverter" />가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>지정된 개체를 <see cref="T:System.Drawing.Image" />로 변환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture">특정 문화권에 대한 정보를 보관하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환될 <see cref="T:System.Object" />입니다.</param>
      <returns>이 메서드는 성공하면 지정된 개체를 변환하여 만든 <see cref="T:System.Drawing.Image" />를 반환합니다. 그렇지 않으면 예외가 throw됩니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 완료할 수 없습니다.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Drawing.Image" /> 또는 <see cref="T:System.Drawing.Image" />로 캐스팅할 수 있는 개체를 지정된 형식으로 변환합니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출될 환경에 대한 더 많은 정보를 추출할 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="culture">특정 문화에서 사용된 형식 지정 규칙을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destinationType">
        <see cref="T:System.Type" />를 변환할 <see cref="T:System.Drawing.Image" />입니다.</param>
      <returns>이 메서드는 변환된 개체를 반환합니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 완료할 수 없습니다.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>이 형식의 속성 집합을 가져옵니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <param name="value">속성을 가져올 개체의 값입니다.</param>
      <param name="attributes">속성을 설명하는 <see cref="T:System.Attribute" /> 개체의 배열입니다.</param>
      <returns>이 데이터 형식에 대해 노출되어야 하는 속성의 집합을 반환합니다. 노출해야 할 속성이 없으면 <see langword="null" />이 반환될 수 있습니다. 기본 구현에서는 항상 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 개체가 속성을 지원하는지 여부를 나타냅니다. 기본적으로 이 값은 <see langword="false" />입니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <returns>이 개체의 속성을 찾기 위해 <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> 메서드를 호출해야 하면 이 메서드는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" />는 하나의 데이터 형식에서 다른 데이터 형식으로 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체를 변환하는 데 사용할 수 있는 클래스입니다. <see cref="T:System.ComponentModel.TypeDescriptor" /> 개체를 통해 이 클래스에 액세스합니다.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 변환기가 지정된 소스 형식의 개체를 변환기의 네이티브 형식으로 변환할 수 있는지 여부를 나타냅니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출될 환경에 대한 더 많은 정보를 추출할 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="sourceType">변환할 원본 형식입니다.</param>
      <returns>이 개체가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>컨텍스트를 사용하여 이 변환기에서 개체를 지정된 대상 형식으로 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="context">이런 유형의 변환에 대해 컨텍스트를 지정하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="destinationType">이 <see cref="T:System.Type" /> 개체를 변환할 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" />입니다.</param>
      <returns>이 개체가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>지정된 개체를 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체로 변환합니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출될 환경에 대한 더 많은 정보를 추출할 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="culture">특정 문화권에 대한 형식 지정 규칙을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 개체입니다.</param>
      <returns>변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 완료할 수 없습니다.</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>지정된 개체를 지정된 형식으로 변환합니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출될 환경에 대한 더 많은 정보를 추출할 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <param name="culture">특정 문화권에 대한 형식 지정 규칙을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value">변환할 개체입니다.</param>
      <param name="destinationType">개체를 변환할 대상 유형입니다.</param>
      <returns>변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException">변환을 완료할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" />가 <see langword="null." />인 경우</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 유효성 검사기를 사용하도록 디자인된 데이터 형식의 표준 값이 포함된 컬렉션을 가져옵니다. 데이터 형식이 표준 값 집합을 지원하지 않으면 <see langword="null" />이 반환됩니다.</summary>
      <param name="context">포맷터 컨텍스트입니다. 이 개체를 사용하여 이 변환기가 호출될 환경에 대한 더 많은 정보를 추출할 수 있습니다. 이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다. 또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</param>
      <returns>유효한 값의 표준 집합이나 <see langword="null" /> 을 포함하는 컬렉션을 반환합니다. 기본 구현에서는 항상 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 개체가 목록에서 선택할 수 있는 표준 값 집합을 지원하는지 여부를 나타냅니다.</summary>
      <param name="context">추가 컨텍스트를 제공하는 형식 설명자입니다.</param>
      <returns>개체가 지원하는 일반 값 집합을 찾기 위해 <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> 메서드를 호출해야 하는 경우 이 메서드는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>
        <see cref="T:System.Drawing.Printing.MarginsConverter" />에 <see cref="T:System.Drawing.Printing.Margins" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.MarginsConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 변환기가 지정된 소스 형식의 개체를 지정된 컨텍스트를 사용하는 변환기의 네이티브 형식으로 변환할 수 있는지 여부를 반환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="sourceType">변환할 원본 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns>개체가 변환을 수행할 수 있으면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>이 변환기가 개체를 해당 컨텍스트를 사용하는 지정된 대상 형식으로 변환할 수 있는지 여부를 반환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="destinationType">변환할 대상 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns>이 변환기에서 변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>지정된 개체를 변환기의 네이티브 형식으로 변환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture">변환할 언어를 제공하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환할 <see cref="T:System.Object" />입니다.</param>
      <returns>변환된 값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />에 네 가지 여백 중 일부 값이 포함되어 있지 않습니다. 예를 들어, "100,100,100,100"은 왼쪽, 오른쪽, 위쪽 및 아래쪽 여백에 1인치를 지정합니다.</exception>
      <exception cref="T:System.NotSupportedException">변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>주어진 값 개체를 지정 컨텍스트 및 인수를 사용하는 지정된 대상 형식으로 변환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture">변환할 언어를 제공하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value">변환할 <see cref="T:System.Object" />입니다.</param>
      <param name="destinationType">값을 변환할 <see cref="T:System.Type" />입니다.</param>
      <returns>변환된 값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>개체의 속성 값 집합이 제공된 <see cref="T:System.Object" />를 만듭니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="propertyValues">새 속성 값의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
      <returns>지정된 <see cref="T:System.Object" />를 나타내는 <see cref="T:System.Collections.IDictionary" />이거나 개체를 만들 수 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>이 개체의 값을 변경할 때 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 메서드를 호출하여 지정된 컨텍스트로 새 값을 만들어야 하는지 여부를 반환합니다.</summary>
      <param name="context">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns>이 개체의 속성을 변경할 때 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />를 호출하여 새 값을 만들어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 메서드는 항상 <see langword="true" />을 반환합니다.</returns>
    </member>
    <member name="T:System.Media.SoundPlayer">
      <summary>.wav 파일에서의 소리 재생을 제어합니다.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor">
      <summary>
        <see cref="T:System.Media.SoundPlayer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)">
      <summary>
        <see cref="T:System.Media.SoundPlayer" /> 클래스의 새 인스턴스를 초기화하고 지정된 <see cref="T:System.IO.Stream" /> 내의 .wav 파일을 연결합니다.</summary>
      <param name="stream">.wav 파일에 대한 <see cref="T:System.IO.Stream" />입니다.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Media.SoundPlayer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">deserialization에 사용할 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">deserialization에 사용할 대상입니다.</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="serializationInfo" />에 지정된 <see cref="P:System.Media.SoundPlayer.SoundLocation" />을 확인할 수 없는 경우</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.String)">
      <summary>
        <see cref="T:System.Media.SoundPlayer" /> 클래스의 새 인스턴스를 초기화하고 지정된 .wav 파일을 연결합니다.</summary>
      <param name="soundLocation">로드할 .wav 파일의 위치입니다.</param>
      <exception cref="T:System.UriFormatException">
        <paramref name="soundLocation" />으로 지정된 URL 값을 확인할 수 없는 경우</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.IsLoadCompleted">
      <summary>.wav 파일 로드가 성공적으로 완료되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>.wav 파일이 로드되었으면 <see langword="true" />이고, .wav 파일이 아직 로드되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.Load">
      <summary>소리를 동기적으로 로드합니다.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">로딩 중 경과된 시간이 <see cref="P:System.Media.SoundPlayer.LoadTimeout" />으로 지정된 시간(밀리초)을 초과하는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일을 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.LoadAsync">
      <summary>새 스레드를 사용하여 스트림 또는 웹 리소스에서 .wav 파일을 로드합니다.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">로딩 중 경과된 시간이 <see cref="P:System.Media.SoundPlayer.LoadTimeout" />으로 지정된 시간(밀리초)을 초과하는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일을 찾을 수 없는 경우</exception>
    </member>
    <member name="E:System.Media.SoundPlayer.LoadCompleted">
      <summary>성공 여부에 관계없이 .wav 파일의 로드가 완료될 때 발생합니다.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.LoadTimeout">
      <summary>.wav 파일을 로드해야 할 제한 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>대기하는 밀리초 수입니다. 기본값은 10000(10초)입니다.</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary>
        <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.Play">
      <summary>새 스레드를 사용하여 .wav 파일을 재생하며, .wav 파일이 아직 로드되지 않았으면 먼저 .wav 파일을 로드합니다.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">로딩 중 경과된 시간이 <see cref="P:System.Media.SoundPlayer.LoadTimeout" />으로 지정된 시간(밀리초)을 초과하는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">.wav 헤더가 손상된 경우, 즉 <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일이 PCM .wav 파일이 아닌 경우</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlayLooping">
      <summary>새 스레드를 사용하여 .wav 파일을 재생 및 반복하며, .wav 파일이 아직 로드되지 않았으면 먼저 .wav 파일을 로드합니다.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">로딩 중 경과된 시간이 <see cref="P:System.Media.SoundPlayer.LoadTimeout" />으로 지정된 시간(밀리초)을 초과하는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">.wav 헤더가 손상된 경우, 즉 <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일이 PCM .wav 파일이 아닌 경우</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlaySync">
      <summary>.wav 파일을 재생하며, .wav 파일이 아직 로드되지 않았으면 먼저 .wav 파일을 로드합니다.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">로딩 중 경과된 시간이 <see cref="P:System.Media.SoundPlayer.LoadTimeout" />으로 지정된 시간(밀리초)을 초과하는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">.wav 헤더가 손상된 경우, 즉 <see cref="P:System.Media.SoundPlayer.SoundLocation" />으로 지정된 파일이 PCM .wav 파일이 아닌 경우</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.SoundLocation">
      <summary>로드할 .wav 파일의 파일 경로 또는 URL을 가져오거나 설정합니다.</summary>
      <returns>로드할 .wav 파일이 있는 파일 경로 또는 URL이거나, 파일 경로가 없는 경우 <see cref="F:System.String.Empty" />입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.SoundLocationChanged">
      <summary>이 <see cref="T:System.Media.SoundPlayer" />의 새 오디오 소스 경로가 설정되었을 때 발생합니다.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.Stop">
      <summary>소리가 재생 중인 경우 재생을 중지합니다.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.Stream">
      <summary>로드할 .wav 파일이 포함된 <see cref="T:System.IO.Stream" />을 가져오거나 설정합니다.</summary>
      <returns>로드할 .wav 파일이 포함된 <see cref="T:System.IO.Stream" />이거나, 사용할 수 있는 스트림이 없는 경우 <see langword="null" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.StreamChanged">
      <summary>이 <see cref="T:System.IO.Stream" />의 새 <see cref="T:System.Media.SoundPlayer" /> 오디오 소스가 설정되었을 때 발생합니다.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>이 멤버에 대한 설명을 보려면 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 메서드를 참조하세요.</summary>
      <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="P:System.Media.SoundPlayer.Tag">
      <summary>
        <see cref="T:System.Object" />에 대한 데이터가 들어 있는 <see cref="T:System.Media.SoundPlayer" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Media.SoundPlayer" />에 대한 데이터가 들어 있는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.Media.SystemSound">
      <summary>시스템 소리 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Media.SystemSound.Play">
      <summary>시스템 소리 형식을 재생합니다.</summary>
    </member>
    <member name="T:System.Media.SystemSounds">
      <summary>Windows 운영 체제의 소리 이벤트 형식 집합과 연결된 소리를 검색합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Media.SystemSounds.Asterisk">
      <summary>현재 Windows 소리 구성표의 <see langword="Asterisk" /> 프로그램 이벤트와 연결된 소리를 가져옵니다.</summary>
      <returns>현재 Windows 소리 구성표의 <see langword="Asterisk" /> 프로그램 이벤트와 연결된 <see cref="T:System.Media.SystemSound" />입니다.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Beep">
      <summary>현재 Windows 소리 구성표의 <see langword="Beep" /> 프로그램 이벤트와 연결된 소리를 가져옵니다.</summary>
      <returns>현재 Windows 소리 구성표의 <see langword="Beep" /> 프로그램 이벤트와 연결된 <see cref="T:System.Media.SystemSound" />입니다.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Exclamation">
      <summary>현재 Windows 소리 구성표의 <see langword="Exclamation" /> 프로그램 이벤트와 연결된 소리를 가져옵니다.</summary>
      <returns>현재 Windows 소리 구성표의 <see langword="Exclamation" /> 프로그램 이벤트와 연결된 <see cref="T:System.Media.SystemSound" />입니다.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Hand">
      <summary>현재 Windows 소리 구성표의 <see langword="Hand" /> 프로그램 이벤트와 연결된 소리를 가져옵니다.</summary>
      <returns>현재 Windows 소리 구성표의 <see langword="Hand" /> 프로그램 이벤트와 연결된 <see cref="T:System.Media.SystemSound" />입니다.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Question">
      <summary>현재 Windows 소리 구성표의 <see langword="Question" /> 프로그램 이벤트와 연결된 소리를 가져옵니다.</summary>
      <returns>현재 Windows 소리 구성표의 <see langword="Question" /> 프로그램 이벤트와 연결된 <see cref="T:System.Media.SystemSound" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary>사용자가 X.509 인증서를 선택하고 보는 데 사용할 수 있는 사용자 인터페이스 대화 상자를 표시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>X.509 인증서와 관련 인증서 체인의 속성이 들어 있는 대화 상자를 표시합니다.</summary>
      <param name="certificate">표시할 X.509 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 매개 변수가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary>부모 창에 대한 핸들을 사용하여 X.509 인증서와 관련 인증서 체인의 속성이 들어 있는 대화 상자를 표시합니다.</summary>
      <param name="certificate">표시할 X.509 인증서입니다.</param>
      <param name="hwndParent">대화 상자를 표시하는 데 사용할 부모 창에 대한 핸들입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 매개 변수가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary>인증서 컬렉션에서 X.509 인증서를 선택하는 데 사용할 수 있는 대화 상자를 표시합니다.</summary>
      <param name="certificates">X.509 인증서를 선택할 인증서 컬렉션입니다.</param>
      <param name="title">대화 상자의 제목입니다.</param>
      <param name="message">사용자에게 표시할 설명 메시지입니다.  이 메시지는 대화 상자에 표시됩니다.</param>
      <param name="selectionFlag">인증서를 하나만 선택할 수 있는지 아니면 여러 개 선택할 수 있는지를 지정하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 값 중 하나입니다.</param>
      <returns>선택한 인증서가 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionFlag" /> 매개 변수가 유효한 플래그가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificates" /> 매개 변수가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary>부모 창에 대한 핸들을 사용하여 인증서 컬렉션에서 X.509 인증서를 선택하는 데 사용할 수 있는 대화 상자를 표시합니다.</summary>
      <param name="certificates">X.509 인증서를 선택할 인증서 컬렉션입니다.</param>
      <param name="title">대화 상자의 제목입니다.</param>
      <param name="message">사용자에게 표시할 설명 메시지입니다.  이 메시지는 대화 상자에 표시됩니다.</param>
      <param name="selectionFlag">인증서를 하나만 선택할 수 있는지 아니면 여러 개 선택할 수 있는지를 지정하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 값 중 하나입니다.</param>
      <param name="hwndParent">대화 상자를 표시하는 데 사용할 부모 창에 대한 핸들입니다.</param>
      <returns>선택한 인증서가 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionFlag" /> 매개 변수가 유효한 플래그가 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificates" /> 매개 변수가 잘못되었습니다.</exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary>
        <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" /> 메서드를 사용한 선택 유형을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary>여러 항목을 선택할 수 있습니다. 두 개 이상의 X.509 인증서를 선택하려면 Shift 또는 Crtl 키를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary>하나의 항목만 선택할 수 있습니다. 이 UI를 사용하면 하나의 X.509 인증서를 선택할 수 있습니다.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>XAML 로드를 위해 어셈블리 및 형식에 대한 액세스 제어를 정의합니다.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에서 요청한 어셈블리를 기반으로 <see cref="T:System.Reflection.Assembly" /> 인스턴스를 반환합니다.</summary>
      <param name="assembly">요청에 대한 어셈블리입니다.</param>
      <returns>
        <paramref name="assembly" /> 값을 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />의 소스 정보로 사용하는 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에서 요청한 어셈블리를 기반으로 <see cref="T:System.Reflection.AssemblyName" /> 인스턴스를 반환합니다.</summary>
      <param name="assemblyName">요청에 대한 어셈블리 이름입니다.</param>
      <returns>
        <paramref name="assemblyName" /> 값을 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />의 소스 정보로 사용하는 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" />은 올바른 정규화된 어셈블리 이름이 아닙니다.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>이 <see cref="T:System.Reflection.AssemblyName" />에 따라 사용 권한이 결정되는 어셈블리의 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Reflection.AssemblyName" />에 따라 사용 권한이 결정되는 어셈블리의 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>정규화된 이름으로 지정된 특정 형식을 기반으로 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 인스턴스를 반환합니다.</summary>
      <param name="assemblyQualifiedTypeName">어셈블리로 한정된 형식 이름으로 구문 분석되는 문자열입니다.</param>
      <returns>
        <paramref name="assemblyQualifiedTypeName" /> 값을 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에 대한 소스 정보로 사용하고 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />이 형식에 대한 리플렉션에 따라 결정되는 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" />은 올바른 정규화된 어셈블리 형식 이름이 아닙니다.
또는
<paramref name="assemblyQualifiedTypeName" /> 내의 어셈블리 이름은 유효한 어셈블리 이름이 아닙니다.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에서 지정한 특정 형식을 기반으로 <see cref="T:System.Type" /> 인스턴스를 반환합니다.</summary>
      <param name="type">액세스를 요청할 <see cref="T:System.Type" />입니다.</param>
      <returns>
        <paramref name="type" /> 값을 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에 대한 소스 정보로 사용하고 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />이 형식에 대한 리플렉션에 따라 결정되는 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>이 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에 따라 사용 권한이 결정되는 형식의 정규화되지 않은 문자열 이름을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />에 따라 사용 권한이 결정되는 형식의 정규화되지 않은 문자열 이름입니다.</returns>
    </member>
  </members>
</doc>