<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">"약한 이벤트 수신기" 패턴을 사용하여 <see cref="T:System.Windows.WeakEventManager" /> 이벤트에 대한 수신기를 연결할 수 있도록 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">지정된 소스가 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트를 발생시킬 때 호출되는 지정된 이벤트 처리기를 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트를 처리하는 대리자입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">지정된 수신기를 지정된 소스의 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트에 추가합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">수신기로 추가할 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">지정한 소스에서 지정한 이벤트 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트를 처리하는 대리자입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">지정된 소스의 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트에서 지정된 수신기를 제거합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The listener to remove.">제거할 수신기입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트 수신 대기를 시작합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 이벤트 수신 대기를 중지합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">"약한 이벤트 수신기" 패턴을 사용하여 <see cref="T:System.Windows.WeakEventManager" /> 이벤트에 대한 수신기를 연결할 수 있도록 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">지정된 소스가 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트를 발생시킬 때 호출되는 지정된 이벤트 처리기를 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">지정된 수신기를 지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트에 추가합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">수신기로 추가할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">지정한 소스에서 지정한 이벤트 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트를 처리하는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트에서 지정된 수신기를 제거합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The listener to remove.">제거할 수신기입니다.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트 수신 대기를 시작합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 이벤트 수신 대기를 중지합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">지정된 <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> 값을 사용하여 <paramref name="isCancelable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">이벤트를 취소할 수 있는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">이벤트를 취소할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">이벤트가 취소되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> 값이 <see langword="false" />인 경우입니다.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">이벤트를 취소할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">이벤트를 취소할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">이벤트를 발생시킨 개체입니다.</param>
      <param name="e" vsli:raw="Information about the event.">이벤트 정보입니다.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">"약한 이벤트 수신기" 패턴을 사용하여 <see cref="T:System.Windows.WeakEventManager" /> 이벤트에 대한 수신기를 연결할 수 있도록 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">지정된 소스가 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트를 발생시킬 때 호출되는 지정된 이벤트 처리기를 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트를 처리하는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">지정된 수신기를 지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트에 추가합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">수신기로 추가할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">지정한 소스에서 지정한 이벤트 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트를 처리하는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트에서 지정된 수신기를 제거합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The listener to remove.">제거할 수신기입니다.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트 수신 대기를 시작합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 이벤트 수신 대기를 중지합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">종속성 속성의 추가 속성 특징을 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />의 확장을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">이 속성이 변경되면 다른 개체에서 알림을 받을 수 있도록 합니다.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">처리기를 추가할 구성 요소입니다.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">수신기로 추가할 대리자입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">이 멤버에 대한 특성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">특성의 <see cref="T:System.ComponentModel.AttributeCollection" /> 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">개체를 다시 설정하면 해당 값이 변경되는지 여부를 반환합니다.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">다시 설정 기능을 테스트할 구성 요소입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 요소를 다시 설정하면 해당 값이 변경되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">
        <see cref="T:System.ComponentModel.CategoryAttribute" />에 지정된, 해당 멤버가 속해 있는 범주의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">해당 멤버가 속해 있는 범주의 이름입니다. <see cref="T:System.ComponentModel.CategoryAttribute" />가 없으면 범주 이름은 기본 범주인 <see langword="Misc" />로 설정됩니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">이 속성이 바인딩된 구성 요소의 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">이 속성이 바인딩된 구성 요소의 형식을 나타내는 <see cref="T:System.Type" />입니다. <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> 또는 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />가 호출될 때, 지정된 개체는 이 형식의 인스턴스가 될 수 있습니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">이 속성의 형식 변환기를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">이 속성의 <see cref="T:System.ComponentModel.TypeConverter" />을 변환하는 데 사용되는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">종속성 속성 식별자를 반환합니다.</summary>
      <returns vsli:raw="The dependency property identifier.">종속성 속성의 식별자입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">
        <see cref="T:System.ComponentModel.DescriptionAttribute" />에 지정된 멤버 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">멤버 설명입니다. <see cref="T:System.ComponentModel.DescriptionAttribute" />가 없으면 속성 값은 기본값인 빈 문자열("")로 설정됩니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">종속성 속성 값이 종속성 속성 엔진에 저장되기 전에 디자이너에서 종속성 속성의 유효 값을 수정하는 데 사용하는 콜백을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">종속성 속성 값이 종속성 속성 엔진에 저장되기 전에 디자이너에서 종속성 속성의 유효 값을 수정하는 데 사용하는 콜백입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">
        <see cref="T:System.ComponentModel.DesignOnlyAttribute" />에 지정된, 이 멤버가 디자인 타임에만 설정되어야 하는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">이 멤버가 디자인 타임에만 설정되어야 하면 <see langword="true" />이고, 런타임에 설정될 수 있으면 <see langword="false" />입니다. <see cref="T:System.ComponentModel.DesignOnlyAttribute" />가 없으면 반환되는 값은 기본값인 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">속성 창 등의 창에 표시될 수 있는 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name to display for the property.">속성에 대해 표시할 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">두 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 인스턴스가 같은지 비교합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">현재 인스턴스와 비교할 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">지정된 속성 이름에 대한 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">종속성 속성 또는 연결된 속성의 등록된 이름입니다.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">속성 정의를 소유하는 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">속성을 설정할 대상 개체의 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">요청된 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">지정된 속성 이름에 대한 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />를 반환합니다.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">종속성 속성 또는 연결된 속성의 등록된 이름입니다.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">속성 정의를 소유하는 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">속성을 설정할 대상 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">속성 형식을 무시하도록 지정합니다.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">요청된 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">지정된 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />에 대한 <see cref="T:System.ComponentModel.PropertyDescriptor" />를 반환합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">확인할 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">
        <paramref name="property" />에서 설명한 속성이 종속성 속성인 경우 유효한 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />를 반환합니다. 그렇지 않으면 <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />를 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">제공된 종속성 속성 및 대상 형식에 대한 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />를 반환합니다.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">종속성 속성의 식별자입니다.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">속성이 설정된 개체의 형식입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">제공된 종속성 속성에 대한 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />를 반환합니다.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">속성을 가져올 구성 요소입니다.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">필터로 사용할 <see cref="T:System.Attribute" /> 형식의 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">지정된 구성 요소의 지정된 특성과 일치하는 속성이 포함된 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">지정된 형식의 편집기를 가져옵니다.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">속성이 지원하는 여러 편집기를 구별하는 데 사용되는 기본 편집기 형식입니다.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">요청된 편집기 형식의 인스턴스이거나, 편집기를 찾을 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">이 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">구성 요소에 대한 현재 속성 값을 반환합니다.</summary>
      <param name="component" vsli:raw="The component instance.">구성 요소 인스턴스입니다.</param>
      <returns vsli:raw="The requested value.">요청된 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">속성이 연결된 속성으로 등록되었으며 연결된 사용량을 통해 사용되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 연결된 속성이면<see langword="true" /> 이고, 연결된 속성이 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">속성에 대한 <see cref="T:System.ComponentModel.BrowsableAttribute" /> 값을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성에 <see cref="T:System.ComponentModel.BrowsableAttribute" />가 지정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">
        <see cref="T:System.ComponentModel.LocalizableAttribute" />에 지정된, 이 속성이 지역화되어야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값이 true인 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 생성자로 멤버가 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">이 속성이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 읽기 전용이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">종속성 속성과 연결된 메타데이터를 가져옵니다.</summary>
      <returns vsli:raw="The dependency property metadata.">종속성 속성 메타데이터입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">종속성 속성의 표시된 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">종속성 속성의 <see cref="T:System.Type" /> 입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">이 속성이 변경되면 다른 개체에서 알림을 받을 수 있도록 합니다.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">처리기를 추가할 구성 요소입니다.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">수신기로 추가할 대리자입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">구성 요소의 이 속성 값을 기본값으로 다시 설정합니다.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">기본값으로 다시 설정될 속성 값이 포함된 구성 요소입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">구성 요소의 값을 다른 값으로 설정합니다.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">설정될 속성 값이 포함된 구성 요소입니다.</param>
      <param name="value" vsli:raw="The new value.">새 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">serialization 프로세스에서 이 속성의 값을 지속시켜야 하는지 여부를 나타냅니다.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">지속성을 검사할 속성이 포함된 구성 요소입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성을 지속시켜야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">이 속성에 대한 속성 값 변경 알림이 구성 요소와 같은 속성 설명자 외부에서 발생하는지 또는 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />에 대한 직접 호출에서만 발생하는지를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">이 속성에 대한 알림이 구성 요소 자체와 같은 속성 설명자 외부에서 발생할 수 있으면 <see langword="true" />이고, 알림이 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />에 대한 직접 호출에서만 발생하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">이 인스턴스의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">
        <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> 값을 반환합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">약한 이벤트 수신기 패턴을 사용하여 <see cref="T:System.Windows.WeakEventManager" /> 이벤트에 대한 수신기를 연결할 수 있도록 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">지정된 소스가 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 발생시킬 때 호출되는 지정된 이벤트 처리기를 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 처리하는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">지정한 소스에서 지정한 이벤트 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 처리하는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트 수신 대기를 시작합니다.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">지정된 소스의 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트 수신 대기를 중지합니다.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">컬렉션의 항목을 그룹으로 나누는 방법을 설명하는 형식에 대한 추상 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.GroupDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">
        <see cref="T:System.Collections.IComparer" />를 구현하는 개체를 사용하여 그룹을 정렬하는 사용자 지정 비교자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">
        <see cref="T:System.Collections.IComparer" />를 구현하는 개체를 사용하여 그룹을 정렬하는 사용자 지정 비교자입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">지정된 항목의 그룹 이름을 반환합니다.</summary>
      <param name="item" vsli:raw="The item to return group names for.">그룹 이름을 반환할 항목입니다.</param>
      <param name="level" vsli:raw="The level of grouping.">그룹화 수준입니다.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">변환기에 제공할 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <returns vsli:raw="The group name(s) for the given item.">지정된 항목의 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">지정된 이름을 가진 하위 그룹 집합으로 그룹을 초기화하는 데 사용할 이름의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">지정된 이름을 가진 하위 그룹 집합으로 그룹을 초기화하는 데 사용할 이름의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">항목이 그룹에 속하도록 그룹 이름과 항목 이름이 일치하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">확인할 그룹의 이름입니다.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">확인할 항목의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이름이 일치하고 항목이 그룹에 속하면 <see langword="true" />이고, 일치하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">발생할 이벤트의 인수입니다.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">속성 값이 변경될 때 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">serialization 프로세스가 이 클래스의 인스턴스에 있는 <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> 속성의 효과적인 값을 직렬화하는지 여부를 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">serialization 프로세스가 이 클래스의 인스턴스에 있는 <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> 속성의 효과적인 값을 직렬화하는지 여부를 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">그룹을 정렬할 정렬 조건 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">그룹을 정렬할 정렬 조건의 컬렉션입니다.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">속성 값이 변경될 때 발생합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">컬렉션이 현재 레코드 관리, 사용자 지정 정렬, 필터링 및 그룹화 기능을 갖도록 합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">이 뷰에서 <see cref="P:System.ComponentModel.ICollectionView.Filter" /> 속성을 통해 필터링이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 뷰에서 필터링이 지원되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">이 뷰에서 <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> 속성을 통해 그룹화가 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 뷰에서 그룹화가 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">이 뷰에서 <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> 속성을 통해 정렬이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 뷰에서 정렬이 지원되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">지정된 항목이 이 컬렉션 뷰에 속하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="item" vsli:raw="The object to check.">검사할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목이 이 컬렉션 뷰에 속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">정렬과 같이 문화권에 따라 다를 수 있는 뷰 작업에 대한 문화권 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The culture to use during sorting.">정렬하는 동안 사용할 문화권입니다.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">이 인터페이스를 구현할 경우 현재 항목이 변경된 이후 이 이벤트가 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">이 인터페이스를 구현할 경우 현재 항목을 변경하기 전에 이 이벤트가 발생합니다. 이벤트 처리기가 이 이벤트를 취소할 수 있습니다.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">뷰의 현재 항목을 가져옵니다.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">뷰의 현재 항목이거나 현재 항목이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">뷰 내에 있는 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />의 서수 위치를 가져옵니다.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">뷰 내에 있는 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />의 서수 위치입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">변경 내용을 뷰에 병합하고 자동 새로 고침을 지연하는 데 사용할 수 있는 지연 주기를 입력합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">호출하는 개체를 삭제하는 데 사용할 수 있는 <see cref="T:System.IDisposable" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">항목이 뷰에 포함되기에 적합한지 여부를 결정하는 데 사용되는 콜백을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">항목이 뷰에 포함되기에 적합한지 확인하는 데 사용할 메서드입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">컬렉션의 항목이 뷰에서 그룹화되는 방법을 설명하는 <see cref="T:System.ComponentModel.GroupDescription" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">컬렉션의 항목이 뷰에서 그룹화되는 방법을 설명하는 <see cref="T:System.ComponentModel.GroupDescription" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">최상위 그룹을 가져옵니다.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">최상위 그룹의 읽기 전용 컬렉션 또는 그룹이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 컬렉션의 끝 부분을 벗어나는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 컬렉션의 끝 부분을 벗어나면 <see langword="true" />이고, 벗어나지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 컬렉션의 시작 부분을 벗어나는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />뷰의이 컬렉션의 시작 부분을 초과 하면이 고, <see langword="false" />그렇지 않으면입니다. <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /></returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">결과 뷰가 비어 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 뷰가 비어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">지정한 항목을 뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정합니다.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정할 항목입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 뷰 내에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">뷰의 첫 번째 항목을 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 뷰 내에 있는 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">뷰의 마지막 항목을 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 뷰 내에 있는 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 다음에 나오는 항목을 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 뷰 내에 있는 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">지정한 인덱스에 있는 항목을 뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정합니다.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />을 설정할 인덱스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 뷰 내에 있는 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">뷰의 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 앞에 나오는 항목을 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />으로 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">결과 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />이 뷰 내의 항목이면 <see langword="true" />이고, 뷰 내의 항목이 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">뷰를 다시 만듭니다.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">컬렉션의 항목이 뷰에서 정렬되는 방법을 설명하는 <see cref="T:System.ComponentModel.SortDescription" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">컬렉션의 항목이 뷰에서 정렬되는 방법을 설명하는 <see cref="T:System.ComponentModel.SortDescription" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">기본 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">기본 컬렉션인 <see cref="T:System.Collections.IEnumerable" /> 개체입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">해당 데이터에 대한 뷰를 만드는 컬렉션을 구현할 수 있게 하는 인터페이스입니다. 일반적으로 사용자 코드에서는 이 인터페이스의 메서드를 호출하지 않습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">이 인터페이스를 구현하는 컬렉션에 새 뷰를 만듭니다. 일반적으로 사용자 코드에서는 이 메서드를 호출하지 않습니다.</summary>
      <returns vsli:raw="The newly created view.">새로 만든 뷰입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">
        <see cref="T:System.Windows.Data.CollectionView" />에서 정렬, 그룹화 및 필터링을 사용할 수 있는 속성을 실시간으로 정의합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">컬렉션 뷰에서 실시간으로 필터링 데이터 켜기 또는 끄기를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 뷰에서 라이브 필터링 켜기 또는 끄기를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">컬렉션 뷰에서 실시간으로 데이터 그룹화의 설정 또는 해제를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 뷰에서 실시간 그룹화 켜기/끄기를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">컬렉션 뷰에서 실시간으로 데이터 정렬의 설정 또는 해제를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 뷰에서 실시간 정렬 켜기/끄기를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">실시간 데이터 필터링을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">실시간 데이터 필터링을 사용할 수 있으면 <see langword="true" />이고, 실시간 필터링을 사용할 수 없으면 <see langword="false" />입니다. 컬렉션 뷰에서 실시간 필터링을 구현할지 여부를 알 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">실시간 데이터 그룹화를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">실시간 데이터 그룹화를 사용할 수 있으면 <see langword="true" />이고, 실시간 그룹화를 사용할 수 없으면 <see langword="false" />입니다. 컬렉션 뷰에서 실시간 그룹화를 구현할지 여부를 알 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">실시간 정렬을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">실시간 데이터 정렬을 사용할 수 있으면 <see langword="true" />이고, 실시간 정렬을 사용할 수 없으면 <see langword="false" />입니다. 컬렉션 뷰에서 실시간 정렬을 구현할지 여부를 알 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">실시간 데이터 필터링에 참여하는 속성을 지정하는 문자열의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">실시간 데이터 필터링에 참여하는 속성을 지정하는 문자열의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">실시간 데이터 그룹화에 참여하는 속성을 지정하는 문자열의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">실시간 데이터 그룹화에 참여하는 속성을 지정하는 문자열의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">실시간 데이터 정렬에 참여하는 속성을 지정하는 문자열의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">실시간 데이터 정렬에 참여하는 속성을 지정하는 문자열의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">
        <see cref="T:System.Windows.Data.CollectionView" />가 컬렉션에 편집 기능을 제공하기 위해 구현하는 메서드 및 속성을 정의합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">컬렉션에 새 항목을 추가합니다.</summary>
      <returns vsli:raw="The new item that is added to the collection.">컬렉션에 추가되는 새 항목입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">컬렉션에 새 항목을 추가할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 새 항목을 추가할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">컬렉션 뷰에서 보류 중인 변경 내용을 삭제하고 편집된 개체의 원래 값을 복원할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 뷰에서 보류 중인 변경 내용을 삭제하고 편집된 개체의 원래 값을 복원할 수 있으면 <see langword="true" />이고, 복원할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">편집 트랜잭션을 끝내고 가능한 경우 항목의 원래 값을 복원합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">추가 트랜잭션을 끝내고 보류 중인 새 항목을 삭제합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">컬렉션에서 항목을 제거할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에서 항목을 제거할 수 있으면 <see langword="true" />이고, 제거할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">편집 트랜잭션을 끝내고 보류 중인 변경 내용을 저장합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">추가 트랜잭션을 끝내고 보류 중인 새 항목을 저장합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">현재 추가 트랜잭션 중에 추가되는 항목을 가져옵니다.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />가 <see langword="true" />이면 추가되는 항목이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">편집되는 컬렉션의 항목을 가져옵니다.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />이 <see langword="true" />인 경우 편집 중인 컬렉션의 항목이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">지정된 항목에 대해 편집 트랜잭션을 시작합니다.</summary>
      <param name="item" vsli:raw="The item to edit.">편집할 항목입니다.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">추가 트랜잭션이 진행 중인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">추가 트랜잭션이 진행 중이면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">편집 트랜잭션이 진행 중인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">편집 트랜잭션이 진행 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">컬렉션 뷰에서의 새 항목 자리 표시자 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">컬렉션 뷰에서의 새 항목 자리 표시자 위치를 지정하는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">컬렉션에서 지정한 항목을 제거합니다.</summary>
      <param name="item" vsli:raw="The item to remove.">제거할 항목입니다.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">컬렉션에서 지정된 위치의 항목을 제거합니다.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">제거할 항목의 위치입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" />가 0보다 작거나 컬렉션 뷰의 항목 수보다 큰 경우</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">특정 형식의 항목 추가를 지정할 수 있도록 <see cref="T:System.Windows.Data.CollectionView" />가 구현하는 메서드와 속성을 정의합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">컬렉션에 지정된 개체를 추가합니다.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">컬렉션에 추가할 개체입니다.</param>
      <returns vsli:raw="The object that is added to the collection.">컬렉션에 추가되는 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">컬렉션에 지정된 개체를 추가할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 개체를 컬렉션에 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">개체 속성에 대한 정보를 제공하는 속성을 정의합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">컬렉션의 항목에서 사용할 수 있는 속성에 대한 정보를 포함하는 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">컬렉션의 항목에서 사용할 수 있는 속성에 대한 정보를 포함하는 컬렉션입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">속성에 대한 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.ItemPropertyInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the property.">속성의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">속성에 대한 추가 정보가 들어 있는 개체입니다.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">속성에 대한 추가 정보가 들어 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">속성에 대한 추가 정보가 들어 있는 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">속성 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the property.">속성의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">속성의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the property.">속성의 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">컬렉션에서 새 항목에 대한 자리 표시자가 표시되는 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">컬렉션의 시작 부분에 새 항목에 대한 자리 표시자가 나타납니다.  컬렉션의 시작 부분에서 새 항목 자리 표시자 뒤에 새 항목이 나타납니다.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">컬렉션의 끝 부분에 새 항목에 대한 자리 표시자가 나타납니다. 컬렉션의 끝 부분에서 새 항목 자리 표시자 앞에 새 항목이 나타납니다.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">컬렉션에서 새 항목 자리 표시자를 사용하지 않습니다. 기본 컬렉션에 따라 추가된 항목의 위치입니다.  일반적으로 컬렉션의 끝에 추가됩니다.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">"약한 이벤트 수신기" 패턴을 사용하여 <see cref="T:System.Windows.WeakEventManager" /> 이벤트에 대한 수신기를 연결할 수 있도록 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">지정된 소스가 지정된 속성에 대한 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생시킬 때 호출되는 지정된 이벤트 처리기를 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 처리하는 대리자입니다.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">변경을 수신 대기할 <paramref name="source" />에 있는 속성 이름입니다. "모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">
        <paramref name="handler" />에 두 개 이상의 메서드가 연결되었습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">지정된 수신기를 지정된 소스의 수신기 목록에 추가합니다.</summary>
      <param name="source" vsli:raw="The object with the event.">이벤트가 있는 개체입니다.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">수신기로 추가할 개체입니다.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">변경을 수신 대기할 <paramref name="source" />에 있는 속성 이름입니다. "모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">더 이상 활성 상태가 아닌 수신기를 제공된 소스의 데이터에서 제거합니다.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">모든 수신기를 제거할 소스 개체입니다.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">지울 데이터입니다. 이는 <see cref="T:System.Collections.Specialized.HybridDictionary" />여야 합니다.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">수신 대기를 중지하고 모든 데이터를 완전히 제거하려면 <see langword="true" />로 설정합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">일부 항목이 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">지정한 소스에서 지정한 이벤트 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 발생하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트를 처리하는 대리자입니다.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">변경 수신 대기를 중지할 <paramref name="source" />에 있는 속성 이름입니다. "모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">
        <paramref name="handler" />에 두 개 이상의 메서드가 연결되었습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">제공된 소스의 수신기 목록에서 지정된 수신기를 제거합니다.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">수신기를 제거할 개체입니다.</param>
      <param name="listener" vsli:raw="The listener to remove.">제거할 수신기입니다.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">변경 수신 대기를 중지할 <paramref name="source" />에 있는 속성 이름입니다. "모든 속성"을 나타내려면 <see cref="F:System.String.Empty" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">제공된 소스의 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트 수신 대기를 시작합니다.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 수신 대기를 시작할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">제공된 소스의 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 이벤트 수신 대기를 중지합니다.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 수신 대기를 중지할 소스 개체입니다.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">형식 설명자, 특히 <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" /> 메서드에서 보고할 속성을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">이 속성 필터에 대해 설명하는 옵션입니다.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">현재 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 특성가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">이 <see cref="T:System.ComponentModel.PropertyFilterAttribute" />과 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.ComponentModel.PropertyFilterAttribute" />와 같으면 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">이 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 특성에 대한 필터 옵션을 가져옵니다.</summary>
      <returns vsli:raw="The property filter options.">속성 필터 옵션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">현재 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 특성에 대한 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">부호 있는 32비트 정수 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">현재 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 특성의 속성 필터 옵션이 지정된 개체의 속성 필터 옵션과 일치하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">비교할 개체입니다. 이 개체는 <see cref="T:System.ComponentModel.PropertyFilterAttribute" />여야 합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">일치하는 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">형식 설명자, 특히 <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" /> 메서드에서 보고할 속성을 지정합니다. 이 열거형은 <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" /> 속성의 값을 지정하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">모든 속성을 반환합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">개체의 현재 컨텍스트에서 유효하지 않은 속성만 반환합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">속성을 반환하지 않습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">로컬 값이 현재 설정된 해당 속성만 반환합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">로컬 값이 설정되지 않았거나 외부 식 저장소(예: 바인딩 또는 지연된 리소스)에 속성이 설정되지 않은 속성만 반환합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">현재 범위의 개체에 유효한 모든 속성을 반환합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">컬렉션의 정렬 기준으로 사용할 방향 및 속성 이름을 정의합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">
        <see cref="T:System.ComponentModel.SortDescription" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">목록 정렬 기준이 될 속성의 이름입니다.</param>
      <param name="direction" vsli:raw="The sort order.">정렬 순서입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">
        <paramref name="direction" /> 매개 변수에 유효한 값이 지정되지 않았습니다.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">오름차순으로 정렬할지 아니면 내림차순으로 정렬할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">오름차순으로 정렬할지 아니면 내림차순으로 정렬할지를 나타내는 <see cref="T:System.ComponentModel.ListSortDirection" /> 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">지정된 인스턴스와 <see cref="T:System.ComponentModel.SortDescription" />의 현재 인스턴스를 비교하여 값이 같은지 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">비교할 <see cref="T:System.ComponentModel.SortDescription" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <paramref name="obj" />와 <see cref="T:System.ComponentModel.SortDescription" />의 이 인스턴스 값이 서로 같으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">이 <see cref="T:System.ComponentModel.SortDescription" /> 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">이 <see cref="T:System.ComponentModel.SortDescription" /> 인스턴스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">이 개체가 변경 불가능한 상태인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 개체가 사용 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">두 <see cref="T:System.ComponentModel.SortDescription" /> 개체를 비교하여 값이 같은지 확인합니다.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 개체가 같으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">두 <see cref="T:System.ComponentModel.SortDescription" /> 개체를 비교하여 값이 다른지 확인합니다.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값이 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">정렬 기준으로 사용되는 속성 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The default value is null.">기본값은 null입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.SortDescription" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.SortDescriptionCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">컬렉션에서 모든 항목을 제거합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">항목을 추가하거나 제거하면 발생합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.SortDescriptionCollection" />의 수정할 수 없는 빈 인스턴스를 가져옵니다.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">컬렉션 내의 지정한 인덱스에 항목을 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">
        <paramref name="item" />을 삽입하는 인덱스(0부터 시작)입니다.</param>
      <param name="item" vsli:raw="The object to insert.">삽입할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">컬렉션의 지정된 인덱스에서 항목을 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">제거할 요소의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">지정된 인덱스에 있는 요소를 바꿉니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">바꿀 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">지정한 인덱스에 있는 요소의 새 값입니다.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">항목을 추가하거나 제거하면 발생합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">특정 개체에 대해 추적할 세부 수준을 설명합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">모든 추가 정보를 추적합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">일부 추가 정보를 추적합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">중간 양의 추가 정보를 추적합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">사용할 수 있는 추가 정보를 추적하지 않습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">특히 WPF(Windows Presentation Foundation) 애플리케이션을 대상으로 한 디버그 추적 지원을 제공합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">애니메이션 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="An animation trace source.">애니메이션 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">데이터 바인딩 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A data-binding trace source.">데이터 바인딩 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">종속성 속성 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A dependency property trace source.">종속성 속성 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">문서 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A document trace source.">문서 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Freezable 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A Freezable trace source.">Freezable 추적 소스입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">지정된 요소에 대한 <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> 연결된 속성의 값을 설정합니다.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">속성 값을 읽어올 요소입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">요소의 <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> 속성 값입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">추적 소스를 호스트 하는 hwnd 가져옵니다.</summary>
      <returns vsli:raw="An hwnd host trace source.">Hwnd 호스트 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">마크업 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A markup trace source.">마크업 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">이름 범위 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A name scope trace source.">이름 범위 추적 소스입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">새로 고침 app.config 파일을 다시 읽도록 강제 적용 하 여 소스를 추적 합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">리소스 사전 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A resource dictionary trace source.">리소스 사전 추적 소스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">라우트된 이벤트 추적 원본을 가져옵니다.</summary>
      <returns vsli:raw="A routed event trace source.">라우트된 이벤트 추적 원본입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">지정된 요소에 대한 <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> 연결된 속성의 값을 설정합니다.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">연결된 속성이 작성될 요소입니다.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">필요한 <see cref="T:System.Diagnostics.PresentationTraceLevel" /> 값입니다.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">셸 추적 소스를 가져옵니다.</summary>
      <returns vsli:raw="A shell trace source.">셸 추적 소스입니다.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">
        <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> 연결된 속성을 식별합니다.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>특정 파일 형식 사양을 따라야 할 입력 파일이나 데이터 스트림의 형식이 올바르지 않은 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>
        <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만들고 serialize된 데이터를 사용하여 초기화합니다. deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</summary>
      <param name="info">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 예외 형식을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
      <param name="innerException">현재 예외의 원인을 나타내는 <see cref="P:System.Exception.InnerException" /> 속성의 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>소스 URI 값을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>소스 URI 값 및 예외 형식을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
      <param name="innerException">현재 예외의 원인을 나타내는 <see cref="P:System.Exception.InnerException" /> 속성의 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>소스 URI 값 및 지정된 오류 메시지를 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
      <param name="message">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>소스 URI 값, 지정된 오류 메시지 및 예외 형식을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
      <param name="message">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
      <param name="innerException">현재 예외의 원인을 나타내는 <see cref="P:System.Exception.InnerException" /> 속성의 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>파일 이름 및 추가 예외 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>
        <see cref="T:System.IO.FileFormatException" />의 원인이 된 파일의 이름을 가져옵니다.</summary>
      <returns>예외의 원인이 된 파일의 이름을 나타내는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">서명에 사용되는 X.509 인증서가 저장되는 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">인증서가 자체 <see cref="T:System.IO.Packaging.PackagePart" />에 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">인증서가 추가되는 서명에 대해 만들어지는 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />에 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">인증서가 패키지에 포함되지 않았습니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>
        <see cref="T:System.IO.Packaging.PackagePart" />에 저장되는 콘텐츠의 압축 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>성능을 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>크기를 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>크기와 성능의 균형을 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>압축이 해제됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>고성능을 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">암호화된 패키지가 들어 있는 OLE 복합 파일을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">암호화된 패키지 및 이를 보유한 OLE 복합 파일을 닫습니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">지정된 스트림에서 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />를 만들어 반환합니다.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">파일을 만들 스트림입니다.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">복합 파일에 포함된 게시 라이선스입니다.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">새로 만든 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" />에서 읽기/쓰기 액세스를 제공하지 않는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />를 만들어 반환하고 지정된 파일 이름을 부여합니다.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">OLE 복합 파일의 이름입니다.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">복합 파일에 포함된 게시 라이선스입니다.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">새로 만든 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">지정된 암호화되지 않은 패키지를 해당 콘텐츠로 사용하는 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />를 지정된 스트림에 만들어 반환합니다.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">파일을 만들 스트림입니다.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">암호화되지 않은 기존 패키지를 나타내는 스트림입니다.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">복합 파일에 포함된 게시 라이선스입니다.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">새로 만든 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> 또는 <paramref name="packageStream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" />에서 읽기/쓰기 액세스를 제공하지 않는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">지정된 암호화되지 않은 패키지를 해당 콘텐츠로 사용하는 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />를 만들고 지정된 파일 이름을 부여하여 반환합니다.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">OLE 복합 파일의 이름입니다.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">암호화되지 않은 기존 패키지를 나타내는 스트림입니다.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">복합 파일에 포함된 게시 라이선스입니다.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">새로 만든 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> 또는 <paramref name="packageStream" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">파일을 열 때 읽기 권한을 부여했는지, 쓰기 권한을 부여했는지, 아니면 두 권한을 모두 부여했는지 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">파일을 여는 데 사용된 <see cref="T:System.IO.FileAccess" /> 값입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 및 해당 패키지 콘텐츠 모두에 대해 스트림을 플러시합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 내의 암호화된 패키지를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">엔벌로프에 있는 <see cref="T:System.IO.Packaging.Package" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">지정된 스트림이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일인지 여부를 지정하는 값을 가져옵니다.</summary>
      <param name="stream" vsli:raw="The stream that is tested.">테스트할 스트림입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 스트림이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">지정된 파일이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일인지 여부를 지정하는 값을 가져옵니다.</summary>
      <param name="fileName" vsli:raw="The file that is tested.">테스트할 파일입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 파일이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">지정된 스트림의 암호화된 패키지를 엽니다.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">암호화된 패키지를 포함하는 스트림입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">열려 있는 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">지정된 파일의 암호화된 패키지를 공유하지 않고 읽기 전용 모드로 엽니다.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">암호화된 패키지가 들어 있는 파일입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">열려 있는 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">지정된 액세스 권한을 적용하여 지정된 파일의 암호화된 패키지를 공유하지 않고 엽니다.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">암호화된 패키지가 들어 있는 파일입니다.</param>
      <param name="access" vsli:raw="The type of access.">액세스 유형입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">열려 있는 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">지정된 파일의 암호화된 패키지를 열고 지정된 액세스 권한 및 공유 설정을 적용합니다.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">암호화된 패키지가 들어 있는 파일입니다.</param>
      <param name="access" vsli:raw="The type of access.">액세스 유형입니다.</param>
      <param name="sharing" vsli:raw="The type of sharing.">공유 유형입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">열려 있는 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">권한으로 관리되는 문서의 핵심 패키지 속성(Title 및 Subject 등)을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">패키지의 <see cref="T:System.IO.Packaging.PackageProperties" />입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />에 저장되어 있는 권한 관리 정보를 가져옵니다. 권한 관리를 통해 보호되는 패키지를 구현하는 OLE 복합 파일에 저장되어 있는 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 및 <see cref="T:System.Security.RightsManagement.UseLicense" />가 특히 여기에 해당합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">패키지의 <see cref="T:System.IO.Packaging.RightsManagementInformation" />입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">암호화된 패키지 외부에 있는 복합 파일 스트림에 대한 액세스 권한을 제공하는 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">암호화된 패키지 외부에 있는 OLE 복합 파일의 스트림을 나타내는 <see cref="T:System.IO.Packaging.StorageInfo" />입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>
        <see cref="T:System.IO.Packaging.Package" />의 파트에 대한 암호화 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>암호화하지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>권한 관리를 통해 지원되는 암호화입니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">
        <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />에서 유효하지 않은 서명을 발견했을 때 발생하는 <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">이벤트의 유효하지 않은 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 소스입니다.</param>
      <param name="e" vsli:raw="The event data.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>여러 데이터 개체를 저장할 수 있는 컨테이너를 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>지정된 <see cref="T:System.IO.Packaging.Package" />를 사용하는 <see cref="T:System.IO.FileAccess" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="openFileAccess">패키지의 파일 IO 권한입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="openFileAccess" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>패키지 및 모든 내부 파트 스트림을 저장하고 닫습니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>지정된 URI 및 콘텐츠 형식으로 압축되지 않은 새 파트를 만듭니다.</summary>
      <param name="partUri">새 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="contentType">데이터 스트림의 콘텐츠 형식입니다.</param>
      <returns>새로 만들어진 파트입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 또는 <paramref name="contentType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">지정된 <paramref name="partUri" />의 파트가 이미 패키지에 있는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우. 이 경우 새 파트를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>지정된 URI, 콘텐츠 형식 및 압축 옵션으로 새 파트를 만듭니다.</summary>
      <param name="partUri">새 파트의 URI입니다.</param>
      <param name="contentType">데이터 스트림의 콘텐츠 형식입니다.</param>
      <param name="compressionOption">데이터 스트림의 압축 옵션으로 <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 또는 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 압축입니다.</param>
      <returns>새로 만들어진 파트입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 또는 <paramref name="contentType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI(Uniform Resource Identifier)가 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">지정된 <paramref name="partUri" />의 파트가 이미 패키지에 있는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우. 이 경우 새 파트를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>파생 클래스에서 재정의되는 경우 패키지에서 새 파트를 만듭니다.</summary>
      <param name="partUri">만드는 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="contentType">데이터 스트림의 콘텐츠 형식입니다.</param>
      <param name="compressionOption">데이터 스트림의 압축 옵션입니다.</param>
      <returns>만들어진 파트입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>지정된 URI, 대상 모드 및 관계 형식을 가진 파트에 대한 패키지 수준 관계를 만듭니다.</summary>
      <param name="targetUri">대상 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="targetMode">대상 파트가 패키지에 <see cref="F:System.IO.Packaging.TargetMode.Internal" />인지 또는 <see cref="F:System.IO.Packaging.TargetMode.External" />인지를 나타냅니다.</param>
      <param name="relationshipType">관계의 역할을 고유하게 정의하는 URI입니다.</param>
      <returns>지정된 파트에 대한 패키지 수준 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 파트가 <see cref="T:System.IO.Packaging.PackageRelationship" />이거나 <paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />이고 <paramref name="targetUri" />가 절대 URI인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" />의 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>지정된 URI, 대상 모드, 관계 형식 및 ID(식별자)를 가진 파트에 대한 패키지 수준 관계를 만듭니다.</summary>
      <param name="targetUri">대상 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="targetMode">대상 파트가 패키지에 <see cref="F:System.IO.Packaging.TargetMode.Internal" />인지 또는 <see cref="F:System.IO.Packaging.TargetMode.External" />인지를 나타냅니다.</param>
      <param name="relationshipType">관계의 역할을 고유하게 정의하는 URI입니다.</param>
      <param name="id">고유 XML 식별자입니다.</param>
      <returns>지정된 파트에 대한 패키지 수준 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 파트가 <see cref="T:System.IO.Packaging.PackageRelationship" />이거나 <paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />이고 <paramref name="targetUri" />가 절대 URI인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" />의 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아니거나 지정된 <paramref name="id" />의 파트가 이미 패키지에 있는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>패키지에서 지정된 URI의 파트를 삭제합니다.</summary>
      <param name="partUri">삭제할 파트의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>파생 클래스에서 재정의되는 경우 지정된 URI의 파트를 삭제합니다.</summary>
      <param name="partUri">삭제할 <see cref="P:System.IO.Packaging.PackagePart.Uri" />의 <see cref="T:System.IO.Packaging.PackagePart" />입니다.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>패키지 수준 관계를 삭제합니다.</summary>
      <param name="id">삭제할 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />의 <see cref="T:System.IO.Packaging.PackageRelationship" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>모든 파트 및 관계의 콘텐츠를 플러시 및 저장하고, 패키지를 닫고, 모든 리소스를 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>패키지의 파일 액세스 설정을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.FileAccess" />의 <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, 또는 <see cref="F:System.IO.FileAccess.ReadWrite" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>패키지에 포함된 모든 파트 및 관계의 콘텐츠를 저장합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용이며 수정할 수 없는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>파생 클래스에 재정의되는 경우 모든 파트 및 관계의 콘텐츠를 파생 클래스 저장소에 저장합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>지정된 URI의 파트를 반환합니다.</summary>
      <param name="partUri">반환할 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <returns>지정된 <paramref name="partUri" />의 파트입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI(Uniform Resource Identifier)가 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">지정된 <paramref name="partUri" />의 파트가 패키지에 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>파생 클래스에서 재정의되는 경우 지정된 URI로 확인되는 파트를 반환합니다.</summary>
      <param name="partUri">검색할 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <returns>요청된 파트, 또는 지정된 <paramref name="partUri" />의 파트가 패키지에 있지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>패키지에 있는 모든 파트의 컬렉션을 반환합니다.</summary>
      <returns>패키지에 포함된 모든 <see cref="T:System.IO.Packaging.PackagePart" /> 요소의 컬렉션입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>파생 클래스에서 재정의되는 경우 패키지에 있는 모든 파트의 배열을 반환합니다.</summary>
      <returns>패키지에 포함된 모든 파트의 배열입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>지정된 식별자를 가진 패키지 수준 관계를 반환합니다.</summary>
      <param name="id">반환할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns>지정된 <paramref name="id" />의 패키지 수준 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException">지정된 <paramref name="id" />의 관계가 패키지에 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>모든 패키지 수준 관계의 컬렉션을 반환합니다.</summary>
      <returns>패키지에 포함된 모든 패키지 수준 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>지정된 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />에 일치하는 모든 패키지 수준 관계의 컬렉션을 반환합니다.</summary>
      <param name="relationshipType">컬렉션에서 일치하고 반환할 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />입니다.</param>
      <returns>지정된 <paramref name="relationshipType" />에 일치하는 패키지 수준 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>지정된 IO 스트림에서 패키지를 엽니다.</summary>
      <param name="stream">패키지를 열 IO 스트림입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>지정된 IO 스트림 및 파일 모드를 사용하여 패키지를 엽니다.</summary>
      <param name="stream">패키지를 열 IO 스트림입니다.</param>
      <param name="packageMode">패키지를 열 때 사용할 파일 모드입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 값이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>지정된 IO 스트림, 파일 모드 및 파일 액세스 설정을 사용하여 패키지를 엽니다.</summary>
      <param name="stream">패키지를 열 IO 스트림입니다.</param>
      <param name="packageMode">패키지를 열 때 사용할 파일 모드입니다.</param>
      <param name="packageAccess">패키지를 열 때 사용할 파일 액세스 권한입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 또는 <paramref name="packageAccess" />의 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>지정된 경로 및 파일 이름에서 패키지를 엽니다.</summary>
      <param name="path">패키지의 경로 및 파일 이름입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>지정된 경로의 패키지를 지정된 파일 모드를 사용하여 엽니다.</summary>
      <param name="path">패키지의 경로 및 파일 이름입니다.</param>
      <param name="packageMode">패키지를 열 때 사용할 파일 모드입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>지정된 경로의 패키지를 지정된 파일 모드 및 파일 액세스 설정을 사용하여 엽니다.</summary>
      <param name="path">패키지의 경로 및 파일 이름입니다.</param>
      <param name="packageMode">패키지를 열 때 사용할 파일 모드입니다.</param>
      <param name="packageAccess">패키지를 열 때 사용할 파일 액세스 권한입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 또는 <paramref name="packageAccess" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>지정된 경로의 패키지를 지정된 파일 모드, 파일 액세스 및 파일 공유 설정을 사용하여 엽니다.</summary>
      <param name="path">패키지의 경로 및 파일 이름입니다.</param>
      <param name="packageMode">패키지를 열 때 사용할 파일 모드입니다.</param>
      <param name="packageAccess">패키지를 열 때 사용할 파일 액세스 권한입니다.</param>
      <param name="packageShare">패키지를 열 때 사용할 파일 공유 모드입니다.</param>
      <returns>열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" />, <paramref name="packageAccess" /> 또는 <paramref name="packageShare" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>패키지의 핵심 속성을 가져옵니다.</summary>
      <returns>패키지의 핵심 속성입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>지정된 URI의 파트가 패키지에 있는지 여부를 나타냅니다.</summary>
      <param name="partUri">확인할 파트의 <see cref="T:System.Uri" />입니다.</param>
      <returns>지정된 <paramref name="partUri" />의 파트가 패키지에 있으면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI(Uniform Resource Identifier)가 아닙니다.</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우. 이 경우 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>지정된 ID의 패키지 수준 관계가 패키지에 포함되어 있는지 여부를 나타냅니다.</summary>
      <param name="id">확인할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns>지정된 <paramref name="id" />의 패키지 수준 관계가 패키지에 있으면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.ObjectDisposedException">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하는 것으로 애플리케이션에서는 사용하지 않는 것이 좋습니다.  형식이 안전한 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 메서드를 대신 사용하세요.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">패키지 파트 및 관계 집합에 적용되는 디지털 서명을 나타냅니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">X.509 인증서 포함 옵션을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">디지털 서명에 대한 옵션을 지정하는 <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">지정된 파트에 적용되는 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 작업의 순서 지정된 목록을 반환합니다.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">변환 목록을 반환할 <see cref="T:System.Uri" />의 <see cref="T:System.IO.Packaging.PackagePart" />입니다.</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">지정된 <paramref name="partName" /> URI의 파트에 적용되는 정식 XML 변환을 나타내는 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> 또는 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />과 같은 URI 문자열의 순서 지정된 목록입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">XML 디지털 서명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The XML digital signature.">XML 디지털 서명입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">서명이 포함된 <see cref="T:System.IO.Packaging.PackagePart" />를 가져옵니다.</summary>
      <returns vsli:raw="The package part that contains the signature.">서명이 포함된 패키지 파트입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">서명 형식을 식별하는 URI 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">서명 형식을 식별 하는 URI 문자열입니다. 기본값은 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">
        <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />의 암호화된 해시 값을 가져옵니다.</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">
        <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />의 암호화된 해시 값이 포함된 바이트 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">서명된 모든 <see cref="T:System.IO.Packaging.PackagePart" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">서명된 모든 패키지 파트가 포함된 컬렉션입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">서명된 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트의 목록을 가져옵니다.</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">서명된 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트의 목록입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">서명자의 X.509 인증서를 가져옵니다.</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">서명자의 디지털 인증서이거나, 인증서가 <see cref="T:System.IO.Packaging.Package" />에 저장되지 않은 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">서명이 생성된 날짜와 시간을 가져옵니다.</summary>
      <returns vsli:raw="The date and time that the signature was created.">서명이 생성된 날짜와 시간입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">
        <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 속성에서 반환된 날짜와 시간의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">
        <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 속성에서 반환된 날짜와 시간의 형식입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">X.509 인증서에 대한 디지털 서명을 확인합니다.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">확인이 성공했으면<see cref="F:System.IO.Packaging.VerifyResult.Success" /> 이고, 실패했으면 문제를 식별하는 <see cref="T:System.IO.Packaging.VerifyResult" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">지정된 X.509 인증서에 대해 디지털 서명을 확인합니다.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">디지털 서명을 확인하기 위한 서명자의 X.509 인증서입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">확인이 성공했으면<see cref="F:System.IO.Packaging.VerifyResult.Success" /> 이고, 실패했으면 문제를 식별하는 <see cref="T:System.IO.Packaging.VerifyResult" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">디지털 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />가 삭제되었습니다.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />에 디지털 서명을 만들고 이러한 서명을 확인하기 위한 유틸리티 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">지정된 <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" />에 사용할 <see cref="T:System.IO.Packaging.Package" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">이 서명 관리자와 연결되는 패키지입니다.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">
        <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> 메서드에서 패키지 파트에 디지털 서명하는 데 사용할 X.509 인증서 포함 옵션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">
        <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">사용자가 선택한 X.509 인증서를 사용하여 패키지의 모든 서명을 연대 서명합니다.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">연대 서명으로 추가된 서명입니다. 인증서를 찾을 수 없거나 사용자가 인증서 선택 대화 상자를 취소한 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">지정된 X.509 인증서를 사용하여 패키지의 모든 서명에 연대 서명합니다.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">연대 서명으로 서명을 추가할 X.509 인증서입니다.</param>
      <returns vsli:raw="The signature that was added as a countersign.">연대 서명으로 추가된 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">지정된 X.509 인증서를 사용하여 서명 목록에 연대 서명합니다.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">지정된 각 <paramref name="signatures" />에 연대 서명할 X.509 인증서입니다.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">연대 서명할 서명 목록입니다.</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">각 <paramref name="signatures" />에 연대 서명하는 데 사용할 디지털 서명입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 또는 <paramref name="signatures" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">패키지에 서명된 <see cref="T:System.IO.Packaging.PackagePart" /> 개체가 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">패키지에 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 파트가 없는 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">서명을 만들고 확인하는 데 사용되는 기본 해시 알고리즘을 식별하는 URI 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">서명을 만들고 확인 하는 데 사용 되는 기본 해시 알고리즘을 식별 하는 URI 문자열입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">지정된 서명 URI(Uniform Resource Identifier)의 디지털 서명을 반환합니다.</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">반환할 디지털 서명의 URI입니다.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">지정된 <paramref name="signatureUri" />의 디지털 서명, 또는 지정된 <paramref name="signatureUri" />의 서명을 찾을 수 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">서명을 만들고 확인하는 데 사용되는 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 인스턴스의 URI 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">서명을 만들고 확인 하는 데 사용 되는 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 인스턴스의 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> URI 식별자입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">설정할 URI의 문자열이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">설정할 URI의 문자열이 비어 있는 경우</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">
        <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />가 유효하지 않은 서명을 발견하면 발생합니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">패키지에 서명이 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">패키지에 서명이 포함되어 있으면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">인증서 선택 대화 상자를 표시하는 데 사용할 부모 창에 대한 핸들을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">인증서 선택 대화 상자를 표시하는 데 사용할 부모 창에 대한 핸들입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">패키지에서 모든 디지털 서명을 제거합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">지정된 서명 URI(Uniform Resource Identifier)의 디지털 서명을 제거합니다.</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">제거할 <see cref="T:System.IO.Packaging.PackageDigitalSignature" />의 URI입니다.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">사용자에게 지정된 패키지 파트 목록을 디지털로 서명하는 데 사용되는 X.509 인증서에 대해 묻는 메시지를 표시합니다.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">서명할 <see cref="T:System.IO.Packaging.PackagePart" /> 요소의 URI(Uniform Resource Identifier) 목록입니다.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">
        <paramref name="parts" /> 목록에 서명하는 데 사용되는 디지털 서명입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">지정된 X.509 인증서를 사용하여 패키지 파트 목록에 서명합니다.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">서명할 <see cref="T:System.IO.Packaging.PackagePart" /> 요소의 URI(Uniform Resource Identifier) 목록입니다.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">지정된 각 <paramref name="parts" />에 디지털 서명하는 데 사용할 X.509 인증서입니다.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">지정된 <paramref name="parts" /> 목록에 서명하는 데 사용할 디지털 서명 또는 인증서가 없거나 사용자가 인증서 선택 대화 상자에서 "취소"를 클릭한 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">지정된 X.509 인증서를 사용하여 패키지 파트 및 패키지 관계 목록에 서명합니다.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">서명할 <see cref="T:System.IO.Packaging.PackagePart" /> 개체의 URI(Uniform Resource Identifier) 목록입니다.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">지정된 각 파트 및 관계에 디지털 서명하는 데 사용할 X.509 인증서입니다.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">서명할 <see cref="T:System.IO.Packaging.PackageRelationship" /> 개체 목록입니다.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">
        <paramref name="parts" /> 및 <paramref name="relationshipSelectors" /> 목록에 지정된 요소에 서명하는 데 사용되는 디지털 시그니처입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">
        <paramref name="parts" /> 또는 <paramref name="relationshipSelectors" /> 모두 서명할 개체를 지정하지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">지정된 X.509 인증서 및 ID(식별자)를 사용하여 패키지 파트 및 패키지 관계 목록에 서명합니다.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">서명할 <see cref="T:System.IO.Packaging.PackagePart" /> 개체의 URI(Uniform Resource Identifier) 목록입니다.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">지정된 각 파트 및 관계에 디지털 서명하는 데 사용할 X.509 인증서입니다.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">서명할 <see cref="T:System.IO.Packaging.PackageRelationship" /> 개체 목록입니다.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">서명과 연결할 식별 문자열입니다.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">
        <paramref name="parts" /> 및 <paramref name="relationshipSelectors" /> 목록에 지정된 요소에 서명하는 데 사용되는 디지털 시그니처입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" /> 또는 <paramref name="relationshipSelectors" /> 모두 서명할 요소를 지정하지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">지정된 X.509 인증서와 서명 ID(식별자)를 사용하여 패키지 파트, 패키지 관계 또는 사용자 지정 개체 목록에 서명합니다.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">서명할 <see cref="T:System.IO.Packaging.PackagePart" /> 개체의 URI(Uniform Resource Identifier) 목록입니다.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">지정된 각 파트 및 관계에 디지털 서명하는 데 사용할 X.509 인증서입니다.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">서명할 <see cref="T:System.IO.Packaging.PackageRelationship" /> 개체 목록입니다.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">서명과 연결할 식별 문자열입니다.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">서명할 사용자 지정 데이터 개체의 목록입니다.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">서명할 사용자 지정 개체에 대한 참조 목록입니다.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">
        <paramref name="parts" /> 및 <paramref name="relationshipSelectors" /> 목록에 지정된 요소에 서명하는 데 사용되는 디지털 시그니처입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> 또는 <paramref name="objectReferences" /> 모두 서명할 요소를 지정하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">서명 중인 파트의 <see cref="P:System.IO.Packaging.PackagePart.ContentType" />이 비어 있거나, <see langword="null" />이거나 또는 정의되지 않은 <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />을 참조합니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" />가 <see langword="null" />이 아니고 유효한 XML 스키마 ID(예: 선행 숫자로 시작)가 아닙니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">서명 원점 파트의 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="The URI of the signature origin part.">서명 원점 파트의 URI입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">기본 서명 원본 관계의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">기본 서명 원본 관계의 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">패키지에 포함된 모든 서명의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">모든 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">서명 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />을 만드는 데 사용되는 날짜/시간 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">서명 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />을 만드는 데 사용되는 날짜/시간 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">정의된 각 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> 및 연결된 XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 식별자가 포함된 사전을 가져옵니다.</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">사전 정의 된 각 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> 및 관련 XML <see cref="T:System.Security.Cryptography.Xml.Transform" />합니다.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 가져옵니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">지정된 X.509 인증서를 확인합니다.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">확인할 X.509 인증서입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">인증서가 확인되면 <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" />(값 0)이고, 그렇지 않으면 오류 플래그의 비트 열거형입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">패키지 내에서 서명된 모든 파트에서 서명을 확인합니다.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">첫 번째 실패 시 종료하려면 <see langword="true" />이고, 계속해서 모든 서명을 확인하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">모든 서명이 성공적으로 확인되면<see cref="F:System.IO.Packaging.VerifyResult.Success" /> (값 0)이고, 그렇지 않으면 오류를 나타내는 열거형입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>
        <see cref="T:System.IO.Packaging.Package" />에 저장되는 파트에 대한 기본 클래스를 제공합니다.  이 클래스는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>지정된 부모 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 및 파트 URI를 사용하여 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package">파트의 부모 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri">부모 <see cref="T:System.IO.Packaging.Package" /> 루트에 상대적인 파트의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 또는 <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>지정된 부모 <see cref="P:System.IO.Packaging.PackagePart.Package" />, 파트 URI 및 MIME 콘텐츠 형식을 사용하여 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package">파트의 부모 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri">부모 <see cref="T:System.IO.Packaging.Package" /> 루트에 상대적인 파트의 URI입니다.</param>
      <param name="contentType">파트 데이터 스트림의 MIME 콘텐츠 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 또는 <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>지정된 부모 <see cref="P:System.IO.Packaging.PackagePart.Package" />, 파트 URI, MIME 콘텐츠 형식 및 <see cref="T:System.IO.Packaging.CompressionOption" />을 사용하여 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package">파트의 부모 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri">부모 <see cref="T:System.IO.Packaging.Package" /> 루트에 상대적인 파트의 URI입니다.</param>
      <param name="contentType">파트 데이터 스트림의 MIME 콘텐츠 형식입니다.</param>
      <param name="compressionOption">파트 데이터 스트림의 압축 옵션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 또는 <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 값이 올바르지 않은 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>파트 콘텐츠 스트림의 압축 옵션을 가져옵니다.</summary>
      <returns>파트 콘텐츠 스트림의 압축 옵션입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>콘텐츠 스트림의 MIME 형식을 가져옵니다.</summary>
      <returns>파트에 대한 콘텐츠 데이터 스트림의 MIME 형식입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)
또는
파생 클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 메서드에서 반환한 문자열이 비어 있는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>이 <see cref="T:System.IO.Packaging.PackagePart" />와 지정된 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계를 만듭니다.</summary>
      <param name="targetUri">대상 파트의 URI입니다.</param>
      <param name="targetMode">열거형 값 중 하나입니다. 예를 들어 대상 파트가 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 내부에 있으면 <see cref="T:System.IO.Packaging.Package" />이고, 대상이 <see cref="F:System.IO.Packaging.TargetMode.External" /> 외부의 리소스이면 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="relationshipType">관계의 역할입니다.</param>
      <returns>이 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 매개 변수가 유효한 <see cref="T:System.IO.Packaging.TargetMode" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" />로 식별된 파트가 관계인 경우. 관계의 대상은 다른 관계가 될 수 없습니다.
또는
<paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />로 지정되었지만 <paramref name="targetUri" />가 절대적인 외부 URI인 경우</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우. 이 경우 새 관계를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>이 <see cref="T:System.IO.Packaging.PackagePart" />와 지정된 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계를 만듭니다.</summary>
      <param name="targetUri">대상 파트의 URI입니다.</param>
      <param name="targetMode">열거형 값 중 하나입니다. 예를 들어 대상 파트가 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 내부에 있으면 <see cref="T:System.IO.Packaging.Package" />이고, 대상이 <see cref="F:System.IO.Packaging.TargetMode.External" /> 외부의 리소스이면 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="relationshipType">관계의 역할입니다.</param>
      <param name="id">관계의 고유 ID입니다.</param>
      <returns>이 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 매개 변수가 유효한 <see cref="T:System.IO.Packaging.TargetMode" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" />로 식별된 파트가 관계인 경우. 관계의 대상은 다른 관계가 될 수 없습니다.
또는
<paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />로 지정되었지만 <paramref name="targetUri" />가 절대적인 외부 URI인 경우</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우. 이 경우 새 관계를 추가할 수 없습니다.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우
또는
지정된 <paramref name="id" />의 파트가 이미 있는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>지정된 파트 수준 <see cref="T:System.IO.Packaging.PackageRelationship" />을 삭제합니다.</summary>
      <param name="id">삭제할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">패키지가 읽기 전용인 경우. 이 경우 관계를 삭제할 수 없습니다.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>파생 클래스에서 재정의되는 경우 파트 콘텐츠의 MIME 형식을 반환합니다.</summary>
      <returns>파트 콘텐츠의 MIME 형식입니다.</returns>
      <exception cref="T:System.NotSupportedException">파생 클래스는 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 메서드에 필요한 재정의 구현을 제공하지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>지정된 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />의 관계를 반환합니다.</summary>
      <param name="id">반환할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns>지정된 <paramref name="id" />와 일치하는 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)
또는
지정된 <paramref name="id" />의 관계가 패키지에 없는 경우</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>이 파트에서 소유한 모든 관계의 컬렉션을 반환합니다.</summary>
      <returns>이 파트에서 소유한 모든 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>지정된 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />과 일치하는 관계의 컬렉션을 반환합니다.</summary>
      <param name="relationshipType">컬렉션에서 찾아서 반환할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />입니다.</param>
      <returns>지정된 <paramref name="relationshipType" />과 일치하는 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>파트 콘텐츠 데이터 스트림을 반환합니다.</summary>
      <returns>파트의 콘텐츠 데이터 스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">파생된 서브클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드에서 반환한 스트림 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>지정된 I/O <see cref="T:System.IO.FileMode" />에서 열린 콘텐츠 스트림을 반환합니다.</summary>
      <param name="mode">콘텐츠 스트림을 열 I/O 모드입니다.</param>
      <returns>파트의 콘텐츠 스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 매개 변수가 유효한 <see cref="T:System.IO.FileMode" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 매개 변수가 패키지 및 파트 스트림과 호환되지 않는 경우
또는
파생된 서브클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드에서 반환한 스트림 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>지정된 <see cref="T:System.IO.FileMode" /> 및 <see cref="T:System.IO.FileAccess" />로 열린 파트 콘텐츠 스트림을 반환합니다.</summary>
      <param name="mode">콘텐츠 스트림을 열 I/O 모드입니다.</param>
      <param name="access">콘텐츠 스트림을 열 때 사용하는 액세스 권한입니다.</param>
      <returns>파트의 콘텐츠 스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 매개 변수가 유효한 <see cref="T:System.IO.FileMode" /> 열거형 값이 아닌 경우
또는
<paramref name="access" /> 매개 변수가 유효한 <see cref="T:System.IO.FileAccess" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 또는 <paramref name="access" />가 패키지 및 파트 스트림과 호환되지 않는 경우
또는
<paramref name="access" /> 매개 변수가 <see cref="F:System.IO.FileAccess.Read" />로 지정되었지만 <paramref name="mode" /> 매개 변수에서 쓰기 권한을 필요로 하는 경우.  <see cref="T:System.IO.FileMode" />, <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, 그리고 <see cref="F:System.IO.FileMode.Truncate" />의 <see cref="F:System.IO.FileMode.Append" /> 값에는 <see cref="F:System.IO.FileAccess.Write" /> 또는 <see cref="F:System.IO.FileAccess.ReadWrite" /> 액세스가 필요합니다.
또는
파생된 서브클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드에서 반환한 스트림 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>파생 클래스에서 재정의되는 경우 지정된 <see cref="T:System.IO.FileMode" /> 및 <see cref="T:System.IO.FileAccess" />로 열린 파트 콘텐츠 스트림을 반환합니다.</summary>
      <param name="mode">콘텐츠 스트림을 열 I/O 모드입니다.</param>
      <param name="access">콘텐츠 스트림을 열 때 사용하는 액세스 권한입니다.</param>
      <returns>파트의 콘텐츠 데이터 스트림입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>파트의 부모 <see cref="T:System.IO.Packaging.Package" />를 가져옵니다.</summary>
      <returns>파트의 부모 패키지입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>지정된 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />의 관계를 이 파트가 소유하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="id">확인할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns>지정된 <paramref name="id" />의 관계를 이 파트가 소유하는 경우에는 <see langword="true" />이고 그렇지 않은 경우에는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>파트의 URI를 가져옵니다.</summary>
      <returns>패키지 루트를 기준으로 하는 파트의 URI입니다.</returns>
      <exception cref="T:System.InvalidOperationException">파트가 삭제된 경우
또는
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>
        <see cref="T:System.IO.Packaging.PackagePart" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>컬렉션의 파트를 반복하는 데 사용할 열거자를 반환합니다.</summary>
      <returns>컬렉션의 <see cref="T:System.IO.Packaging.PackagePart" /> 요소를 반복하는 데 사용할 열거자입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>
        <see cref="T:System.IO.Packaging.Package" />의 핵심 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>
        <see cref="T:System.IO.Packaging.PackageProperties" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 범주를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠의 범주입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 상태를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 상태입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠의 형식을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠의 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />를 만든 날짜와 시간을 가져오거나 설정합니다.</summary>
      <returns>처음에 <see cref="T:System.IO.Packaging.Package" />를 만든 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 만든 개인이나 엔터티를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 만든 개인 또는 엔터티입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>
        <see cref="T:System.IO.Packaging.PackageProperties" /> 인스턴스에 사용된 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.IO.Packaging.PackageProperties" /> 인스턴스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 명확하게 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 명확하게 식별하는 값입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠의 검색 및 인덱싱을 지원하는 한정된 키워드 집합을 정의하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠의 검색 및 인덱싱을 지원하는 한정된 키워드 집합입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 언어를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠 언어를 식별하는 값입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 수정한 사용자를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 수정한 사용자입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 인쇄한 날짜와 시간을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 인쇄한 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />를 마지막으로 변경한 날짜와 시간을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />를 마지막으로 변경한 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 수정 번호를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />의 수정 번호입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 항목을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 항목입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠에 지정된 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠에 지정된 이름입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />의 버전 번호입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>소스 <see cref="T:System.IO.Packaging.Package" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 개체 사이의 연결을 나타냅니다. 대상 개체는 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스일 수 있습니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>관계를 식별하는 문자열을 가져옵니다.</summary>
      <returns>관계를 식별하는 문자열입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>이 관계를 포함하는 <see cref="T:System.IO.Packaging.Package" />를 가져옵니다.</summary>
      <returns>이 관계를 포함하는 패키지입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>관계의 정규화된 형식 이름을 가져옵니다.</summary>
      <returns>관계의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>관계를 소유한 패키지 또는 파트의 URI를 가져옵니다.</summary>
      <returns>관계를 소유 하는 <see cref="T:System.IO.Packaging.Package" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>관계의 대상이 <see cref="F:System.IO.Packaging.TargetMode.Internal" />에 대해 <see cref="F:System.IO.Packaging.TargetMode.External" />인지 아니면 <see cref="T:System.IO.Packaging.Package" />인지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />에 대한 리소스 <see cref="F:System.IO.Packaging.TargetMode.External" />을 참조하는지 아니면 <see cref="T:System.IO.Packaging.Package" />을 참조하는지를 나타내는 열거형 값입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>관계 대상 리소스의 URI를 가져옵니다.</summary>
      <returns>대상 리소스의 URI입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>지정된 <see cref="T:System.IO.Packaging.PackageRelationship" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />가 소유하는 <see cref="T:System.IO.Packaging.Package" /> 요소의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>컬렉션에서 관계를 반복하는 데 사용할 열거자를 반환합니다.</summary>
      <returns>컬렉션의 <see cref="T:System.IO.Packaging.PackageRelationship" /> 요소를 반복하는 데 사용할 열거자입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 형식 또는 멤버는 Windows Presentation Foundation 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns>
        <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />를 사용하지 마세요.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>파트 수준 또는 패키지 수준 관계를 선택하는 <see cref="T:System.IO.Packaging.PackageRelationship" /> 조건을 정의합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="sourceUri">관계를 소유하는 <see cref="T:System.IO.Packaging.Package" />(<c>SourceUri</c>=“/”) 또는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="selectorType">
        <paramref name="selectionCriteria" />의 형식입니다. 이는 관계 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />이거나 관계 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />입니다.</param>
      <param name="selectionCriteria">
        <paramref name="selectorType" />을 기준으로 관계를 선택하는 데 사용되는 한정 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> 또는 <paramref name="selectionCriteria" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="selectorType" /> 매개 변수가 잘못된 경우</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="selectorType" /> 매개 변수가 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />이지만 <paramref name="selectionCriteria" />가 올바른 XSD(XML 스키마 정의) ID(식별자)가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">지정된 <paramref name="selectionCriteria" />에 대해 <paramref name="selectorType" />가 유효하지 않은 경우
또는
<paramref name="sourceUri" />가 <see cref="T:System.IO.Packaging.Package" /> 루트(“/”)가 아니고 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI도 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>정의된 <see cref="T:System.IO.Packaging.PackageRelationship" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> 및 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" />에 일치하는 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> 개체의 목록을 반환합니다.</summary>
      <param name="package">선택 조건에 따라 관계를 선택할 패키지입니다.</param>
      <returns>
        <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 생성자에 지정한 선택 매개 변수와 일치하는 관계의 목록입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>
        <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 생성자에 지정된 선택 조건을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 생성자에 지정된 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 또는 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />의 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />에 따른 선택 조건입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> 생성자에 지정된 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />을 가져옵니다.</summary>
      <returns>
        <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 생성자에 지정된 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 또는 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />의 선택기 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 생성자에 관계 소유자로 지정된 루트 패키지 URI("/") 또는 파트 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />를 가져옵니다.</summary>
      <returns>
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 생성자에 관계 소유자로 지정된 루트 패키지 URI("/") 또는 파트 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" />를 통해 일치하는 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 선택 항목을 찾아 반환하는 데 사용되는 선택 조건의 유형을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" />에 따라 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />을 선택합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" />에 따라 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />을 선택합니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>구성할 유틸리티 메서드를 제공하고 pack URI 개체를 구문 분석합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>두 pack URI가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="firstPackUri">첫 번째 pack URI입니다.</param>
      <param name="secondPackUri">두 번째 pack URI입니다.</param>
      <returns>
        <paramref name="firstPackUri" />와 <paramref name="secondPackUri" /> 간의 관계를 나타내는 부호 있는 정수입니다.
 값 
 의미 
 0보다 작음 
<paramref name="firstPackUri" />가 <paramref name="secondPackUri" />보다 작은 경우  
  
 0 
<paramref name="firstPackUri" />는 <paramref name="secondPackUri" />와 같습니다.  
  
 0보다 큼 
<paramref name="firstPackUri" />가 <paramref name="secondPackUri" />보다 큰 경우</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> 또는 <paramref name="secondPackUri" />가 절대 URI가 아닙니다.
또는
<paramref name="firstPackUri" /> 또는 <paramref name="secondPackUri" />가 "pack://" 체계로 시작하지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>두 패키지 파트 URI가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="firstPartUri">첫 번째 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <param name="secondPartUri">두 번째 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <returns>
        <paramref name="firstPartUri" />와 <paramref name="secondPartUri" /> 간의 관계를 나타내는 값입니다.
 값 
 의미 
 0보다 작음 
<paramref name="firstPartUri" />가 <paramref name="secondPartUri" />보다 작은 경우  
  
 0 
<paramref name="firstPartUri" />는 <paramref name="secondPartUri" />와 같습니다.  
  
 0보다 큼 
<paramref name="firstPartUri" />가 <paramref name="secondPartUri" />보다 큰 경우</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> 또는 <paramref name="secondPartUri" />는 유효한 파트 URI 구문이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>패키지를 가리키는 새 Pack URI를 만듭니다.</summary>
      <param name="packageUri">참조된 <see cref="T:System.IO.Packaging.Package" />의 URI입니다.</param>
      <returns>지정된 <paramref name="packageUri" />에서 참조하는 <see cref="T:System.IO.Packaging.Package" />의 Pack URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" />가 절대 URI가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>패키지에 파트의 URI 및 <see cref="T:System.IO.Packaging.Package" /> URI가 지정된 pack URI를 만듭니다.</summary>
      <param name="packageUri">
        <see cref="T:System.IO.Packaging.Package" />의 URI입니다.</param>
      <param name="partUri">패키지에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <returns>지정된 <see cref="T:System.IO.Packaging.PackagePart" />의 pack URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 가 절대 URI가 아닙니다.
또는
<paramref name="partUri" />는 유효한 파트 URI 구문이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> URI, 패키지 파트의 URI 및 추가할 “#” 조각이 지정된 pack URI를 만듭니다.</summary>
      <param name="packageUri">
        <see cref="T:System.IO.Packaging.Package" />의 URI입니다.</param>
      <param name="partUri">패키지에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <param name="fragment">패키지 파트 내에서 요소를 식별하는 "#" 참조입니다.</param>
      <returns>지정된 패키지, 패키지 파트 및 조각을 식별하는 Pack URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 가 절대 URI가 아닙니다.
또는
<paramref name="partUri" />는 유효한 파트 URI 구문이 아닙니다.
또는
<paramref name="fragment" />가 비어 있거나 "#"으로 시작하지 않는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>형식 지정된 <see cref="T:System.IO.Packaging.PackagePart" /> URI를 만듭니다.</summary>
      <param name="partUri">패키지 내 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <returns>형식 지정된 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />는 절대 <see cref="T:System.Uri" />가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>지정된 <see cref="T:System.IO.Packaging.PackagePart" /> URI의 정규화된 형태를 반환합니다.</summary>
      <param name="partUri">정규화할 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</param>
      <returns>지정된 <paramref name="partUri" />의 정규화된 형태입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />에 유효한 <see cref="T:System.Uri" /> 구문이 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>지정된 pack URI의 전체 패키지를 가리키는 내부 URI를 반환합니다.</summary>
      <param name="packUri">
        <see cref="T:System.IO.Packaging.Package" />의 URI를 반환하려는 pack URI입니다.</param>
      <returns>지정된 <paramref name="packUri" />의 <see cref="T:System.IO.Packaging.Package" /> URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" />는 절대 <see cref="T:System.Uri" />가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>지정된 Pack URI 내에서 <see cref="T:System.IO.Packaging.PackagePart" />의 URI를 반환합니다.</summary>
      <param name="packUri">
        <see cref="T:System.IO.Packaging.PackagePart" /> URI를 반환할 Pack URI입니다.</param>
      <returns>지정된 <paramref name="packUri" />에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI 또는 <paramref name="packUri" />에서 <see cref="T:System.IO.Packaging.PackagePart" />가 아니라 패키지를 가리키는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" />가 절대 <see cref="T:System.Uri" />가 아닌 경우
또는
<paramref name="packUri" />에 “pack://” 체계가 없는 경우
또는
<paramref name="packUri" />에서 추출된 partUri가 유효한 partUri 구문을 준수하지 않는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>지정된 <see cref="T:System.IO.Packaging.PackagePart" />와 연결된 관계 파트의 URI를 반환합니다.</summary>
      <param name="partUri">연결된 <see cref="P:System.IO.Packaging.PackagePart.Uri" />의 URI를 반환할 <see cref="T:System.IO.Packaging.PackagePart" />의 <see cref="T:System.IO.Packaging.PackageRelationship" />입니다.</param>
      <returns>
        <paramref name="partUri" />로 식별되는 <see cref="T:System.IO.Packaging.PackageRelationship" />와 연결된 <see cref="T:System.IO.Packaging.PackagePart" /> 파트의 URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 구문이 패키지 파트 URI에 대해 유효하지 않은 경우
또는
<paramref name="partUri" />가 절대 URI인 경우
또는
<paramref name="partUri" />가 관계 파트를 참조하는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>지정된 두 가지 <see cref="T:System.IO.Packaging.PackagePart" /> URI 사이의 상대 URI를 반환합니다.</summary>
      <param name="sourcePartUri">소스 파트의 URI입니다.</param>
      <param name="targetPartUri">대상 파트의 URI입니다.</param>
      <returns>
        <paramref name="sourcePartUri" />에서 <paramref name="targetPartUri" />까지의 상대 URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 또는 <paramref name="targetPartUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 또는 <paramref name="targetPartUri" />에 유효한 <see cref="T:System.Uri" /> 구문이 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>지정된 URI의 <see cref="T:System.IO.Packaging.PackageRelationship" />에서 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />를 반환합니다.</summary>
      <param name="relationshipPartUri">
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />를 반환할 관계 파트의 URI입니다.</param>
      <returns>지정된 <paramref name="relationshipPartUri" />의 관계에서 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />의 <see cref="T:System.IO.Packaging.PackagePart" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" />가 절대 URI인 경우
또는
<paramref name="relationshipPartUri" /> 구문이 <see cref="T:System.IO.Packaging.PackagePart" />에 대해 유효하지 않은 경우
또는
<paramref name="relationshipPartUri" />가 관계 파트를 참조하지 않는 경우
또는
관계 파트의 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />가 다른 관계 파트를 참조하는 경우(올바르지 않음)</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>지정된 URI가 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트의 URI인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="partUri">
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트를 확인할 URI입니다.</param>
      <returns>
        <paramref name="partUri" />가 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트를 식별하는 경우 <see langword="true" />이고 그렇지 않은 경우 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" />가 절대 URI인 경우
또는
<paramref name="partUri" />가 잘못된 <see cref="T:System.IO.Packaging.PackagePart" /> 구문인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>지정된 소스 파트 URI와 대상 파트에 대한 상대 경로를 가진 URI에 대한 파트 URI를 반환합니다.</summary>
      <param name="sourcePartUri">소스 파트의 URI 또는 <see cref="T:System.IO.Packaging.Package" /> 루트를 나타내는 "/"입니다.</param>
      <param name="targetUri">대상 파트에 대한 상대 URI입니다.</param>
      <returns>지정된 <paramref name="SourcePartUri" /> 및 <paramref name="targetUri" /> 매개 변수 사이에서 확인되는 대상 파트의 URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 또는 <paramref name="targetUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" />가 올바른 파트 URI가 아닌 경우
또는
<paramref name="targetUri" />가 올바른 상대 URI가 아닌 경우</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>pack URI 체계 이름 "pack"을 정의합니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />에 저장되어 있는 DRM(디지털 권한 관리) 정보를 나타냅니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">패키지의 암호화된 권한 관리 데이터 스트림에 액세스하기 위한 <see cref="T:System.Security.RightsManagement.CryptoProvider" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">권한 관리 정보에 액세스하기 위한 <see cref="T:System.Security.RightsManagement.CryptoProvider" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">암호화된 권한 관리 데이터 스트림에서 지정된 사용자의 <see cref="T:System.Security.RightsManagement.UseLicense" />를 삭제합니다.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">삭제할 <see cref="T:System.Security.RightsManagement.UseLicense" />의 사용자입니다.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">암호화된 권한 관리 데이터 스트림에서 사용자 및 <see cref="T:System.Security.RightsManagement.UseLicense" /> 키/값 쌍의 사전 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">권한 관리를 통해 보호되는 패키지에 들어 있는 사용자 및 <see cref="T:System.Security.RightsManagement.UseLicense" /> 키/값 쌍의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">암호화된 권한 관리 데이터 스트림에서 포함된 <see cref="T:System.Security.RightsManagement.PublishLicense" />를 반환합니다.</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">포함된 <see cref="T:System.Security.RightsManagement.PublishLicense" />이거나, 패키지에 <see cref="T:System.Security.RightsManagement.PublishLicense" />가 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">이 클래스의 현재 버전으로는 이 패키지에 있는 권한 관리 정보를 읽을 수 없는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">암호화된 권한 관리 데이터 스트림에서 지정된 사용자의 포함된 <see cref="T:System.Security.RightsManagement.UseLicense" />를 반환합니다.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">
        <see cref="T:System.Security.RightsManagement.UseLicense" />를 반환할 사용자 또는 사용자 그룹입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">지정된 사용자의 <see cref="T:System.Security.RightsManagement.UseLicense" />입니다. 지정된 <paramref name="userKey" />에 일치하는 <see cref="T:System.Security.RightsManagement.UseLicense" />가 패키지에 포함되어 있지 않으면 <see langword="null" />을 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="userKey" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">이 클래스의 현재 버전으로는 이 패키지에 있는 권한 관리 정보를 읽을 수 없는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">지정된 <see cref="T:System.Security.RightsManagement.PublishLicense" />를 암호화된 권한 관리 데이터 스트림에 저장합니다.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">패키지에 저장하여 포함할 게시 라이선스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="publishLicense" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">이 클래스의 현재 버전으로는 이 패키지에 있는 권한 관리 정보를 읽을 수 없는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">지정된 사용자의 지정된 <see cref="T:System.Security.RightsManagement.UseLicense" />를 암호화된 권한 관리 데이터 스트림에 저장합니다.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" />의 사용자입니다.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">패키지에 저장하여 포함할 사용 라이선스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="userKey" /> 또는 <paramref name="useLicense" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">이 클래스의 현재 버전으로는 이 패키지에 있는 권한 관리 정보를 읽을 수 없는 경우</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />에 제공되는 이벤트 인수를 지정합니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">확인할 디지털 서명을 가져옵니다.</summary>
      <returns vsli:raw="The digital signature being verified.">확인할 디지털 서명입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">서명 확인 오류를 가져옵니다.</summary>
      <returns vsli:raw="The signature verification error.">서명 확인 오류입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />에서 데이터 저장소를 조작하는 데 필요한 액세스 권한과 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">지정된 이름으로 새 스트림을 만듭니다.</summary>
      <param name="name" vsli:raw="The name for the new stream.">새 스트림의 이름입니다.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">지정된 <paramref name="name" />의 새 스트림입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">지정된 이름, <see cref="T:System.IO.Packaging.CompressionOption" /> 및 <see cref="T:System.IO.Packaging.EncryptionOption" />을 사용하여 새 스트림을 만듭니다.</summary>
      <param name="name" vsli:raw="The name for the new stream.">새 스트림의 이름입니다.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">데이터 스트림의 압축 옵션입니다.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">데이터 스트림의 암호화 옵션입니다.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">지정된 <paramref name="name" />, <paramref name="compressionOption" /> 및 <paramref name="encryptionOption" />을 사용하여 만든 새 스트림입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">이 <see cref="T:System.IO.Packaging.StorageInfo" />를 사용하여 새 자식 <see cref="T:System.IO.Packaging.StorageInfo" />를 부모로 만듭니다.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">새 자식 데이터 저장소의 이름입니다.</param>
      <returns vsli:raw="The new child data store.">새 자식 데이터 저장소입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">지정된 이름의 스트림을 삭제합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">삭제할 스트림의 <see cref="T:System.IO.Packaging.StreamInfo" /> 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">지정된 하위 저장소를 삭제합니다.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">삭제할 하위 저장소의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">지정된 이름의 <see cref="T:System.IO.Packaging.StreamInfo" /> 인스턴스를 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">반환할 <see cref="T:System.IO.Packaging.StreamInfo" /> 인스턴스의 이름입니다.</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">지정된 <paramref name="name" />의 스트림입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">이 저장소에 현재 포함되어 있는 <see cref="T:System.IO.Packaging.StreamInfo" /> 인스턴스의 배열을 반환합니다.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">각각 이 저장소 내에 정의된 I/O 스트림을 가리키는 <see cref="T:System.IO.Packaging.StreamInfo" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">지정된 이름을 가진 자식 하위 저장소를 반환합니다.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">반환할 하위 저장소의 이름입니다.</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">지정된 <paramref name="name" />을 가진 자식 하위 저장소입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">현재 이 저장소에 포함된 자식 하위 저장소의 배열을 반환합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">각각 이 저장소에서 정의된 하위 저장소를 가리키는 <see cref="T:System.IO.Packaging.StorageInfo" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">저장소의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of this store.">이 저장소의 이름입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">지정된 스트림이 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">확인할 <see cref="T:System.IO.Packaging.StreamInfo" /> 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="name" />의 스트림이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">지정된 자식 하위 저장소가 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">확인할 자식 <see cref="T:System.IO.Packaging.StorageInfo" /> 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="name" />을 가진 자식 하위 저장소가 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" /> 내에서 I/O 스트림을 조작하는 데 필요한 액세스 권한과 정보를 제공합니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">스트림에 대한 <see cref="T:System.IO.Packaging.CompressionOption" /> 설정을 가져옵니다.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">패키지 스트림에 대한 압축 옵션 설정입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">스트림에 대한 <see cref="T:System.IO.Packaging.EncryptionOption" /> 설정을 가져옵니다.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">패키지 스트림에 대한 암호화 옵션 설정입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">기본 <see cref="T:System.IO.FileMode" /> 및 <see cref="T:System.IO.FileAccess" />에 열려 있는 스트림을 반환합니다.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">기본 <see cref="T:System.IO.Packaging.Package" /> 루트 <see cref="T:System.IO.FileMode" /> 및 <see cref="T:System.IO.FileAccess" />에 열려 있는 I/O 스트림입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">지정된 <see cref="T:System.IO.FileMode" />에 열려 있는 I/O 스트림을 반환합니다.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">스트림을 여는 데 사용되는 파일 모드입니다.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">지정된 파일 <paramref name="mode" />로 열려 있는 스트림입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">지정된 <see cref="T:System.IO.FileMode" />를 사용하여 지정된 <see cref="T:System.IO.FileAccess" />로 열려 있는 I/O 스트림을 반환합니다.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">스트림을 여는 데 사용되는 파일 모드입니다.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">스트림에 대한 읽기 또는 쓰기 작업에 사용되는 파일 액세스 모드입니다.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">지정된 <see cref="T:System.IO.FileMode" />를 사용하여 지정된 <see cref="T:System.IO.FileAccess" />로 열려 있는 I/O 스트림입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">스트림의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of this stream.">이 스트림의 이름입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" />의 대상이 <see cref="T:System.IO.Packaging.Package" /> 내부에 있는지 또는 외부에 있는지 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>관계가 패키지 외부의 리소스를 참조합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>관계가 패키지 내의 파트를 참조합니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">인증서 또는 서명 확인의 결과를 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">X.509 인증서를 사용하여 서명을 확인할 수 없습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">X.509 인증서가 잘못되었습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">서명이 잘못되었습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">지정된 패키지 또는 파트에 서명이 없습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">서명에 대한 참조 관계를 찾을 수 없습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">확인이 완료되었습니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> 추상 기본 클래스의 파생 서브클래스를 구현합니다. <see cref="T:System.IO.Packaging.ZipPackage" /> 클래스는 ZIP 보관 파일을 컨테이너 저장소로 사용합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>
        <see cref="T:System.IO.Packaging.ZipPackage" />에 저장되는 파트를 나타냅니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" />은 부분 신뢰 WPF(Windows Presentation Foundation) 애플리케이션에서 오디오, 이미지 및 비디오 미디어가 작동되는 능력을 제어하는 보안 사용 권한 집합을 설명합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>오디오 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>오디오, 비디오 및 이미지 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" />의 열거형 값입니다.</param>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" />의 열거형 값입니다.</param>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>이미지 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>비디오 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>사용 권한 상태를 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" />의 열거형 값입니다.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>오디오 권한 수준의 현재 값을 가져옵니다.</summary>
      <returns>오디오 권한 수준입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>이미지 권한 수준의 현재 값을 가져옵니다.</summary>
      <returns>이미지 권한 수준입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>두 사용 권한의 교집합에 해당하는 권한은 이들이 공통으로 설명하는 상태를 설명하는 사용 권한입니다. 원래의 두 사용 권한을 모두 전달하는 요구만 공통 사용 권한에 대해 유효합니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>현재 사용 권한이 무제한인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>오디오, 이미지 및 비디오 사용 권한에 제한이 없으면<see langword="true" /> 이고, 제한이 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함한 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>비디오 권한 수준의 현재 값을 가져옵니다.</summary>
      <returns>미디어 권한 수준입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />의 오디오 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" />의 상태입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.MediaPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.MediaPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />에 대한 이미지 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionImage" />의 상태입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />에 대한 오디오 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" />의 상태입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>오디오에 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>오디오 재생을 제한하지 않는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>모든 오디오 재생을 거부하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>이미지 파일에 대한 스트림 액세스를 거부하는 권한을 비롯하여 제한적인 안전한 오디오 재생을 허용하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>애플리케이션의 원본 사이트에 있는 파일에 대한 오디오 재생만 허용하는 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>이미지에 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>이미지 표시를 제한하지 않는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>모든 이미지 표시를 거부하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>이미지 파일에 대한 스트림 액세스를 거부하는 권한을 비롯하여 제한적인 안전한 이미지 표시를 허용하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>애플리케이션의 원본 사이트에 있는 이미지만 표시할 수 있는 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>비디오 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>비디오 재생을 제한하지 않는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>모든 비디오 재생을 거부하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>이미지 파일에 대한 스트림 액세스를 거부하는 권한을 비롯하여 제한적인 안전한 비디오 재생을 허용하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>애플리케이션의 원본 사이트에 있는 파일에 대한 비디오 재생만 허용하는 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 개체는 WebBrowser 컨트롤을 만드는 기능을 제어합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>사용 권한 상태를 지정하여 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>웹 브라우저 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="webBrowserPermissionLevel">
        <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>두 사용 권한의 교집합에 해당하는 권한은 이들이 공통으로 설명하는 상태를 설명하는 사용 권한입니다. 원래의 두 사용 권한을 모두 전달하는 요구만 공통 사용 권한에 대해 유효합니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>현재 사용 권한이 무제한인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> 속성이 <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>웹 브라우저 권한 수준의 현재 값을 가져오거나 설정합니다.</summary>
      <returns>웹 브라우저 권한 수준의 현재 값입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 만들어 반환합니다.</summary>
      <returns>보안 선언에 해당하는 <see cref="T:System.Security.Permissions.WebBrowserPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />에 대한 현재 웹 브라우저 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>현재 웹 브라우저 권한 수준의 상태입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>웹 브라우저에 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>프레임에서 HTML을 탐색할 수 없는 웹 브라우저입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>프레임에서 안전하게 HTML을 탐색할 수 있지만 몇 가지 제한이 적용되는 웹 브라우저입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>제한 없이 탐색할 수 있는 웹 브라우저입니다.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">권한 관리 인증 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">요청하는 사용자에 대한 인증을 암시합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Windows Live ID 인증입니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">회사 도메인 환경의 창 인증입니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Windows 인증 또는 Windows Live ID 인증입니다.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">권한 관리 문서의 정보에 액세스할 수 있도록 사용자에게 부여된 권한을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.ContentGrant" />에 지정된 <see cref="T:System.Security.RightsManagement.ContentUser" />를 부여하는 <see cref="T:System.Security.RightsManagement.ContentRight" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">액세스 권한이 부여된 사용자입니다.</param>
      <param name="right" vsli:raw="The access right that is granted.">부여된 액세스 권한입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">지정된 <see cref="T:System.Security.RightsManagement.ContentGrant" /> 기간 동안 지정된 <see cref="T:System.Security.RightsManagement.ContentUser" />에 지정된 <see cref="T:System.Security.RightsManagement.ContentRight" />를 부여하는 <see cref="T:System.DateTime" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">액세스 권한이 부여된 사용자입니다.</param>
      <param name="right" vsli:raw="The access right that is granted.">부여된 액세스 권한입니다.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">권한이 시작되는 시작 날짜 및 시간입니다.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">권한이 만료되는 끝 날짜 및 시간입니다.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">부여된 <see cref="T:System.Security.RightsManagement.ContentRight" />를 가져옵니다.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">
        <see cref="P:System.Security.RightsManagement.ContentGrant.User" /> 생성자에 지정된 대로 <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />에 부여된 액세스 권한입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">액세스 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />가 부여된 사용자를 가져옵니다.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">
        <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 생성자에 지정된 대로, 액세스 <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />가 부여된 사용자입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">부여된 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />가 시작되는 시작 날짜 및 시간을 가져옵니다.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">시작 날짜 및 시간을 부여 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 시작 또는 <see cref="T:System.DateTime" />합니다.<see cref="F:System.DateTime.MinValue" /> 없는 경우에 시작 제한이 없습니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">부여된 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />가 만료되는 끝 날짜 및 시간을 가져옵니다.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">끝 날짜 및 시간을 부여 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 만료 되 면 또는 <see cref="T:System.DateTime" />합니다.<see cref="F:System.DateTime.MaxValue" /> 끝 제한이 없는 경우.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">권한 관리 문서의 내용에 액세스하기 위해 사용자에게 부여할 수 있는 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">사용자가 보호된 콘텐츠를 포함하는 문서를 편집할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">사용자가 보호된 콘텐츠를 편집 및 암호화할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">사용자가 보호된 콘텐츠를 내보낼 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">사용자가 보호된 콘텐츠를 추출(복사 및 붙여넣기)할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">사용자가 보호된 콘텐츠를 다른 사용자에게 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">사용자가 보호된 콘텐츠에 대한 액세스를 프로그래밍 방식으로 제어할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">사용자가 콘텐츠 소유자입니다.  소유자는 보호된 콘텐츠를 편집 및 암호화하고 서명된 <see cref="T:System.Security.RightsManagement.PublishLicense" />의 암호를 해독할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">사용자가 보호된 콘텐츠를 인쇄할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">사용자가 보호된 콘텐츠의 보낸 사람에게 회신할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">사용자가 보호된 콘텐츠의 받는 사람에게 “모두 회신”할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">사용자가 보호된 콘텐츠에 디지털 서명할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">사용자가 보호된 콘텐츠를 볼 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">사용자가 서명된 <see cref="T:System.Security.RightsManagement.PublishLicense" />의 암호를 해독하고 지정된 권한을 볼 수 있습니다.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">권한 관리 콘텐츠에 대한 액세스를 부여하기 위한 사용자 또는 사용자 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">
        <see cref="T:System.Security.RightsManagement.ContentUser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The user or group name.">사용자 또는 그룹 이름입니다.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">인증 방법입니다.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">"Anyone" <see cref="T:System.Security.RightsManagement.ContentUser" /> 가상 사용자의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">"Anyone" <see cref="T:System.Security.RightsManagement.ContentUser" /> 가상 사용자의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">
        <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 생성자에 지정된 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">
        <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 생성자에 지정된 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">이 <see cref="T:System.Security.RightsManagement.ContentUser" />가 지정된 다른 인스턴스와 동일한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">같은지 비교할 사용자 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 사용자와 지정된 사용자의 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 및 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">사용자 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 및 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />에 따라 계산된 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">사용자 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 및 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />에 따라 계산된 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">사용자가 현재 인증되었는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">사용자가 현재 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  인증되기 전에는 기본값이 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">
        <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 생성자에 지정된 사용자 또는 그룹 이름을 가져옵니다.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">
        <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 생성자에 지정된 사용자 또는 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">"Owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> 가상 사용자의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">"Owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> 가상 사용자의 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">보호된 콘텐츠를 암호화 및 해독하기 위한 디지털 권한 관리 서비스를 제공합니다.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">암호화 블록 크기를 바이트 단위로 가져옵니다.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">암호화 블록 크기(바이트 단위)입니다.  기본 블록 크기에 대 한 표준 AES (고급 암호화)는 8입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">확인 과정을 거쳐 사용자에게 부여된 권한을 나열하는 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">확인 과정을 거쳐 사용자에게 부여된 권한을 열거하는 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">사용자에게 암호 해독 권한이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 경우는 <see cref="T:System.Security.RightsManagement.UseLicense" /> 암호를 해독할; 사용자 권한 부여이 고, 그렇지 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">사용자에게 암호화 권한이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 경우는 <see cref="T:System.Security.RightsManagement.UseLicense" /> 암호화;에 사용자 권한을 부여이 고, 그렇지 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">
        <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 및 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />에 블록 크기의 길이가 서로 다른 버퍼를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 버퍼에 전달 하는 경우 <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 전달 된 버퍼의 길이가 다를 수 있습니다 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />이 고, 그렇지 않으면 <see langword="false" /> 버퍼에 전달 하는 경우 <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 및 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> 정확히 동일한 길이 여야 합니다.  기본값은 aes <see langword="true" />합니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">암호화 텍스트를 일반 텍스트로 해독합니다.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">해독할 암호화 텍스트입니다.</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">
        <paramref name="cryptoText" />를 해독한 일반 텍스트입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" />가 null입니다.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">암호 해독 권한이 부여되지 않은 경우</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.CryptoProvider" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Security.RightsManagement.CryptoProvider" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">일반 텍스트를 암호화 텍스트로 암호화합니다.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">암호화할 일반 텍스트 콘텐츠입니다.</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">지정된 <paramref name="clearText" />의 암호화된 암호화 텍스트입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" />가 null입니다.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">암호화가 허용되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">가비지 컬렉션에 의해 인스턴스가 회수되기 전에 리소스를 해제하고 내부 정리를 수행합니다.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">"이름" 및 "설명" 문자열의 변경이 불가능한(읽기 전용) 쌍을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">
        <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">로캘 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 속성의 값입니다.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">로캘 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 속성의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수 또는 <paramref name="description" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">로캘 설명을 가져옵니다.</summary>
      <returns vsli:raw="The locale description.">로캘 설명입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">특정 개체의 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 및 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 속성이 이 <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />와 일치하는지 여부를 나타냅니다.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">
        <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 및 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 속성을 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">특정 개체의 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 및 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 속성이 이 인스턴스와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">
        <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 및 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 속성을 기반으로 하여 계산된 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">이 <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />의 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 및 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 속성을 기반으로 하여 계산된 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">로캘 이름을 가져옵니다.</summary>
      <returns vsli:raw="The locale name.">로캘 이름입니다.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">서명된 권한 관리 게시 라이선스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">serialize 및 서명된 해당 <see cref="T:System.Security.RightsManagement.PublishLicense" />에서 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">서명되고 serialize된 게시 라이선스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">라이선스가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.UseLicense" />에 있는 사용자 또는 사용자 그룹에 대한 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 얻으려고 합니다.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">라이선스 활성화 및 바인딩을 위한 보안 환경입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">지정된 <paramref name="secureEnvironment" />에 있는 사용자 또는 사용자 그룹에 대한 <see cref="T:System.Security.RightsManagement.UseLicense" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">인증이 실패한 경우.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.UseLicense" />에 있는 사용자 또는 사용자 그룹에 대한 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 얻으려고 합니다.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">라이선스 활성화 및 바인딩을 위한 보안 환경입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">지정된 <paramref name="secureEnvironment" />에 있는 사용자 또는 사용자 그룹에 대한 <see cref="T:System.Security.RightsManagement.UseLicense" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">인증이 실패한 경우.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">게시자가 만든 콘텐츠 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The publisher-created content identifier.">게시자가 만든 콘텐츠 식별자입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">서명된 이 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />에 대한 해독된 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 버전을 반환합니다.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">라이선스를 해독하는 데 사용할 권한 관리 서비스입니다.</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">이 라이선스에 대한 서명되지 않은, 해독된 버전입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 이름을 가져옵니다.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 이름입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 URI를 가져옵니다.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 URI (uniform resource identifier)입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">이 라이선스를 만드는 데 사용된 직렬화된 XrML 문자열을 반환합니다.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">이 라이선스를 만드는 데 사용된 직렬화된 XrML(Extensible Rights Markup Language) 문자열입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" />를 얻는 데 사용할 URI를 가져옵니다.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" />를 가져오는 데 사용할 URI입니다.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">권한 관리 작업을 성공적으로 완료할 수 없는 오류 조건을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">
        <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">
        <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 저장소를 예외에 대한 정보로 설정합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">serialize된 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.RightsManagementException" />를 사용하여 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">오류의 실패 코드입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 및 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />을 사용하여 <see cref="P:System.Exception.InnerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">오류의 실패 코드입니다.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">오류를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 및 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />을 사용하여 <see cref="P:System.Exception.Message" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">오류의 실패 코드입니다.</param>
      <param name="message" vsli:raw="A message that describes the error.">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.RightsManagementException" />, <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> 및 <see cref="P:System.Exception.Message" />을 사용하여 <see cref="P:System.Exception.InnerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">오류의 실패 코드입니다.</param>
      <param name="message" vsli:raw="A message that describes the error.">오류를 설명하는 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">오류를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">지정된 메시지를 사용하여 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes the error.">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 및 <see cref="P:System.Exception.Message" />을 사용하여 <see cref="P:System.Exception.InnerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes the error.">오류를 설명하는 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">이 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">오류의 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />를 가져옵니다.</summary>
      <returns vsli:raw="The failure code for the error.">오류의 실패 코드입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 저장소를 매개 변수 이름 및 예외에 대한 정보로 설정합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">serialize된 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">권한 관리 작업을 수행할 때 발생할 수 있는 오류 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">비동기 작업이 취소되었거나 복구할 수 없는 오류가 발생했습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">라이선스 활성화가 실패했습니다. 권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">현재 사용자가 Windows 인증에서 인증을 받기 위해 포함되어야 하는 AD(Active Directory)에 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">요청된 작업이 이미 진행 중입니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">인터넷 요청에 의해 가능한 인증 오류(HTTP 오류 401)가 반환되었습니다. 또는 자동 사용자 활성화 시도 시 현재 사용자에게 유효한 도메인 자격 증명이 없습니다. 또는 자동 사용자 활성화 시 인증 서버가 로컬 인트라넷이나 신뢰할 수 있는 사이트 영역에 있지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">잘못된 인수가 전달되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">액세스 조건이 바인딩에 전달되는 활성화하는 보안 주체와 일치하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">현재 사용자가 EUL(최종 사용 라이선스)에 정의된 조건을 충족하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">지정된 리소스가 라이선스의 WORK 노드에 들어 있지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">활성화하는 보안 주체가 EUL(최종 사용 라이선스)의 발급된 보안 주체와 일치하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">보호된 콘텐츠에 대해 정의된 기간이 만료되었습니다. 더 이상 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">현재 컴퓨터가 권한 관리 그룹 ID 내에 정의되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">지정된 권한 그룹이 EUL(최종 사용 라이선스)에 포함되어 있지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">이 라이선스를 사용하려면 새 해지 목록을 획득해야 합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">EUL(최종 사용 라이선스)에 WORK 노드가 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">보호된 콘텐츠에 대해 정의된 기간이 만료되었습니다. 더 이상 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">권한 관리 인증서 체인이 끊어졌습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">클록 롤백이 검색되었습니다. 보호된 콘텐츠에 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">요청된 암호화 작업이 지원되지 않습니다. 예를 들어 암호 해독을 위해 RMS 암호화 개체를 전달하는 작업이 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">디버거가 발견되어 권한이 제한된 콘텐츠를 열거나 게시할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">사용자의 전자 메일 주소를 확인할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">지정된 보안 주체를 사용하도록 설정할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">암호화가 허용되지 않는 경우</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 로드할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 로드할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">발급 라이선스 템플릿에 정의된 인증된 기간이 만료되었습니다. 더 이상 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">지정된 옵션이 이미 설정되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">클라이언트 세션에 대해 사용자 이름이 지정되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">컴퓨터 인증 시도에 사용된 HID(하드웨어 ID) 형식이 잘못되었습니다. 권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">컴퓨터 인증 시도에 사용된 HID(하드웨어 ID)가 올바르지 않습니다. 권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">라이선스의 콘텐츠 ID가 라이선스 스토리지 세션의 콘텐츠 ID와 일치하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">전달된 개체 형식이 이 작업과 호환되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">바인딩된 라이선스를 만들 때 최종 사용 라이선스가 아닌 발급 라이선스가 지정되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">일부 정보가 누락되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">설치 작업이 실패했습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">지정한 알고리즘 형식이 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">RMS 서버 전자 메일 주소 확인이 실패했습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">지정한 인코딩 형식이 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">환경 또는 활성화하는 보안 주체 핸들이 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">Rights Management Services 템플릿에 하나 이상의 오류가 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">키/값 쌍에 지정된 키 길이가 올바르지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">인증서 중 하나의 라이선스 구조가 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">권한 관리로 서명된 디지털 인증서가 유효한지 확인할 수 없습니다. (서명된 인증서가 손상되었을 수 있습니다.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">지정한 숫자 값이 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">지정된 레지스트리 경로가 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">지정된 시간 정보가 올바르지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">권한 관리 버전이 올바르지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">키/값 쌍에 지정된 키 형식이 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">라이브러리 작업을 수행하지 못했습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">지정된 라이브러리 플러그 인이 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">권한 관리 서버에서 EUL(최종 사용 라이선스)을 획득할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">현재 사용자 자격 증명이 라이선스를 획득하는 데 적합하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">작업이 권한 관리 매니페스트 정책을 위반합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">지정된 메타데이터를 설정할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">사용자가 활성화되지 않았거나, RAC(권한 계정 인증서)가 제출되지 않았으며 라이선스 저장소에서 이 세션과 연결된 라이선스와 일치하는 라이선스를 찾을 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">사용자가 활성화되려면 먼저 컴퓨터를 활성화해야 합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">권한 관리는 라이선스 서버에 대해 지정된 URI에 연결할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">보호된 콘텐츠가 손상되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">필요한 라이선스를 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">지정된 인덱스에 라이선스 또는 인증서가 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">권한 관리 콘텐츠가 손상되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">삭제 요청된 항목이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">라이선스 서버의 최대 EUL(최종 사용 라이선스) 할당량에 도달했습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">문서에 소유자 라이선스가 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">요청된 특성의 인스턴스가 존재하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">지정된 라이선스를 찾을 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">권한 관리 서버에서 현재 사용자의 임시 인증을 허용하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">인증서 또는 라이선스 해지 정보가 설정되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">현재 사용자가 보호된 콘텐츠에 액세스할 수 있는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">권한 관리를 사용하여 콘텐츠가 게시되었을 때 요청된 권한이 지정되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">권한 관리 서비스가 제대로 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">작업이 성공적으로 완료되었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">인증서 수가 허용되는 최대 수를 초과했습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">너무 많은 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 인스턴스를 만들었습니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">지정되지 않은 오류가 발생했습니다.  애플리케이션이 디버그 모드에서 실행되는 경우에도 throw됩니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">컴퓨터 인증 또는 권한 계정 인증서가 요청되면 수신 <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" />는 애플리케이션이 ActServInfo 매개 변수에 <see langword="null" />를 전달해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">보호된 콘텐츠에 대해 정의된 기간이 만료되었습니다. 더 이상 액세스할 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">사용자 활성화, 라이선스 바인딩 및 기타 권한 관리 작업에 대한 보안 클라이언트 세션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">
        <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />를 만들 때 지정된 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 가져옵니다.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">
        <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" />를 만들 때 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 메서드에 지정된 애플리케이션 매니페스트입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">애플리케이션 권한 매니페스트, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 및 <see cref="T:System.Security.RightsManagement.UserActivationMode" />를 제공한 보안 클라이언트 세션을 만듭니다.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">애플리케이션 권한 매니페스트입니다.</param>
      <param name="authentication" vsli:raw="The method of authentication.">인증 방법입니다.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">사용자 권한 계정 인증서의 형식입니다.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">활성화, 라이선스 바인딩 및 기타 권한 관리 작업에 대한 보안 클라이언트 세션입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">지정된 권한 매니페스트를 사용하여 지정된 사용자에 대한 보안 클라이언트 세션을 만듭니다.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">애플리케이션 권한 매니페스트입니다.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">권한 관리 콘텐츠에 대한 액세스를 부여하기 위한 사용자 또는 사용자 그룹입니다.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">활성화, 라이선스 바인딩 및 기타 권한 관리 작업에 대한 보안 클라이언트 세션입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">활성화된 사용자의 목록을 반환합니다.</summary>
      <returns vsli:raw="A list of the currently activated users.">현재 활성화된 사용자의 목록입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">지정된 사용자가 권한 관리 콘텐츠에 액세스하기 위해 활성화되었는지 여부를 나타냅니다.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">권한 관리 콘텐츠에 대한 액세스를 부여하기 위한 사용자 또는 사용자 그룹입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="user" />가 권한 관리 콘텐츠에 액세스하기 위해 활성화된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">지정된 사용자에 대한 라이선스 정품 인증을 제거합니다.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">라이선스 정품 인증을 제거할 사용자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="user" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">지정된 <paramref name="user" />가 Windows 인증 또는 Passport 인증으로 인증되지 않은 경우</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 만들 때 지정된 사용자 또는 사용자 그룹을 가져옵니다.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">
        <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />를 만들 때 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 메서드에 지정된 사용자 또는 사용자 그룹입니다.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">서명되지 않은 권한 관리 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 또는 서명되지 않은 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 템플릿을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">
        <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">지정된 XrML 게시 라이선스 템플릿에서 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">이 라이선스를 만드는 데 사용할 XrML(Extensible Rights Markup Language) 게시 라이선스 템플릿입니다.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">게시자가 만든 콘텐츠 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">게시자가 만든 권한 관리 콘텐츠 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">지정된 사용자 권한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">이 라이선스에 제공된, 지정된 사용자 권한 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">이름/설명 쌍으로 된 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of name and description pairs.">이름/설명 쌍으로 된 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">콘텐츠 소유자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The user who owns the published content.">게시된 콘텐츠의 소유자입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 이름입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 URI를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">콘텐츠 작성자 또는 게시자의 연락처 URI (uniform resource identifier)입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">서명된 <see cref="T:System.Security.RightsManagement.PublishLicense" />를 만들고 문서 작성자에 대한 <see cref="T:System.Security.RightsManagement.UseLicense" />를 반환합니다.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">라이선스 활성화 및 바인딩을 위한 보안 환경입니다.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">문서 작성자에 대해 반환된 <see cref="T:System.Security.RightsManagement.UseLicense" />입니다.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">이 <see cref="T:System.Security.RightsManagement.PublishLicense" />에 서명하여 만들어진 서명된 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />의 XrML에서 만든 직렬화된 템플릿을 반환합니다.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />의 XrML에서 만든 직렬화된 템플릿입니다.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">보호된 권한 관리 콘텐츠에 액세스할 수 있게 하는 라이선스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">serialize된 XrML(Extensible Rights Markup Language) 형식의 사용 라이선스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" />이 잘못되었습니다.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">게시하는 애플리케이션에서 사용하는 애플리케이션으로 전달한 키/값 쌍이 들어 있는 애플리케이션 데이터 사전을 가져옵니다.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">게시하는 애플리케이션에서 사용하는 애플리케이션으로 전달한 키/값 쌍이 들어 있는 애플리케이션 데이터 사전입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">지정된 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />에 라이선스를 바인딩합니다.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">라이선스를 바인딩할 환경입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">라이선스 바인딩에 성공했으면 <see cref="T:System.Security.RightsManagement.CryptoProvider" />이고, 실패했으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">게시자가 만든 콘텐츠 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">게시자가 만든 콘텐츠 식별자입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">이 라이선스가 지정된 다른 라이선스와 같은지 여부를 나타냅니다.</summary>
      <param name="x" vsli:raw="The license to compare.">비교할 라이선스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 라이선스가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">이 라이선스와 연결된 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A hash code for this license.">이 라이선스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">라이선스 소유자를 가져옵니다.</summary>
      <returns vsli:raw="The owner of the license.">라이선스 소유자입니다.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">이 라이선스를 만드는 데 사용된 serialize된 XrML 문자열을 가져옵니다.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">최초에 <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /> 생성자에 전달된 serialize된 XrML(Extensible Rights Markup Language) 문자열입니다.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">권한 관리 활성화를 요청할 사용자 권한 계정 인증서의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">영구 권한 계정 인증서입니다.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">임시 권한 계정 인증서입니다.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">연결된 속성의 사용 범위를 보고하는 .NET Framework 요소에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">연결된 속성이 지정된 형식에서 파생된 요소만 검색할 수 있도록 지정합니다.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">제공된 <paramref name="targetType" />을 사용하여 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">이 .NET Framework 특성이 적용되는 연결된 속성의 사용 범위를 지정하는 의도된 형식입니다.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">현재 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework 특성이 지정된 개체와 같은지 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">현재 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />와 비교할 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />와 같으면 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">이 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework 특성의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">부호 없는 32비트 정수 값입니다.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">연결된 속성의 사용 범위를 지정하는 기본 형식을 가져옵니다. 해당 사용 범위에 이 .NET Framework 특성이 적용됩니다.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">요청된 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">이 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework 특성의 고유 형식 식별자를 가져옵니다.</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />의 고유 식별자인 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">다른 특정 .NET Framework 특성도 해당 클래스 정의에 적용한 요소에서만 연결된 속성을 검색할 수 있도록 지정합니다.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />가 적용된 클래스에서 연결된 속성을 탐색하기 위해 해당 클래스에 함께 적용되어야 하는 .NET Framework 특성의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">클래스에 함께 적용해야 하는 .NET Framework 특성의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">.NET Framework 특성 형식입니다.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">현재 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework 특성이 지정된 개체와 같은지 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">현재 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />와 비교할 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />와 같으면 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">이 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework 특성의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">부호 없는 32비트 정수 값입니다.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">애플리케이션이 WindowsBase 어셈블리에 있는 새 WPF 기능을 기준으로 동작하는 방식을 지정하는 속성을 포함합니다.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" />에 대한 정보를 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />에 저장할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" />에 대한 정보가 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />에 저장되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">디스패처에서 처리를 요청하면 발생하는 오류에 반응하는 방식을 정의합니다.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">디스패처에서 오류에 반응하는 방식을 정의하는 값입니다.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">디스패처가 요청을 처리하는 동안 발생하는 오류에 반응하는 방법을 설명하는 값 집합을 제공합니다.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">실패 후 계속합니다.
기본값입니다. .NET Framework 4.7.1 이전의 Windows Presentation Foundation 디스패처 동작을 정의합니다. 이 옵션을 선택하는 경우 디스패처에서 응답하지 않을 수 있습니다.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">다음번에 필요 시 디스패처의 상태를 다시 설정하여 다른 요청을 시도하세요.
이 옵션은 때로는 무응답을 “복구”하지만, 중요할 수 있는 일반적인 처리 시기를 적용할 수 없습니다. 이 옵션을 선택하면 예기치 않은 동작이 발생할 수 있습니다.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">예외를 throw합니다.
이 옵션은 애플리케이션 개발자에게 즉시 문제를 제기합니다.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">
        <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> 메서드가 대리자를 디스패처 큐에 가져오는지 또는 대리자가 직접 호출되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> 메서드가 대리자를 디스패처 큐에 가져오거나 대리자가 직접 호출되는 경우  <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">단일 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />가 복수 디스패처 작업에 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">여러 디스패처 작업에서 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />가 한 번 사용되면 true이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">종속성 속성 값이 다시 계산되거나 강제 형 변환이 특별히 요청될 때마다 호출되는 메서드에 대한 템플릿을 제공합니다.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">속성이 있는 개체입니다. 이 값은 콜백이 호출될 때 속성 시스템에서 전달합니다.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">속성의 새 값입니다(강제 형 변환을 시도하기 전).</param>
      <returns vsli:raw="The coerced value (with appropriate type).">적절한 형식을 사용하여 강제 변환된 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Int32Rect" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Converters.Int32RectValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Windows.Int32Rect" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Windows.Int32Rect" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">변환을 위해 평가할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Int32Rect" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Int32Rect" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Int32Rect" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">문자열로 변환할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">지정된 <see cref="T:System.Windows.Int32Rect" />의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Point" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Converters.PointValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Windows.Point" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Windows.Point" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">변환을 위해 평가할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Point" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Point" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Point" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">문자열로 변환할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 <see cref="T:System.Windows.Point" />의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Rect" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Converters.RectValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Windows.Rect" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Windows.Rect" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">변환을 위해 평가할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Rect" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Rect" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Rect" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">문자열로 변환할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">지정된 <see cref="T:System.Windows.Rect" />의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Size" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Converters.SizeValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Windows.Size" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Windows.Size" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">변환을 위해 평가할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Size" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Size" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">문자열로 변환할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">지정된 <see cref="T:System.Windows.Size" />의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Vector" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Converters.VectorValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Windows.Vector" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Windows.Vector" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">변환을 위해 평가할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Vector" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert.">변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Vector" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">문자열로 변환할 개체입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정된 <see cref="T:System.Windows.Vector" />의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">일부 쿼리를 실행하여 바인딩 소스 개체로 사용할 수 있는 단일 개체 또는 개체 목록을 생성하는 팩터리인 <see cref="T:System.Windows.Data.DataSourceProvider" /> 개체에 대한 공통 기본 클래스 및 계약입니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">
        <see cref="T:System.Windows.Data.DataSourceProvider" /> 클래스의 새 인스턴스를 초기화합니다. 이 생성자는 protected 생성자입니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">이 개체의 초기화가 시작되려고 함을 나타냅니다. 짝을 이루는 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 메서드가 호출될 때까지 암시적인 <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />가 발생하지 않습니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">파생 클래스에서 재정의되는 경우 이 기본 클래스에서 <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> 또는 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />가 호출되었을 때 이 메서드를 호출합니다. 새로 고침이 지연되거나 초기 로드가 비활성화된 경우 기본 클래스에서 호출을 지연합니다.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">기본 데이터 개체를 가져옵니다.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">기본 데이터 개체인 <see cref="T:System.Object" /> 형식의 값입니다.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">
        <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 속성에 새 값을 사용하면 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">공급자 속성을 변경하고 자동 새로 고침을 지연하는 데 사용할 수 있는 지연 주기를 입력합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">호출하는 개체를 삭제하는 데 사용할 수 있는 <see cref="T:System.IDisposable" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">사용할 UI 스레드에 대한 현재 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">현재 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체는 UI 스레드를 사용 합니다. 이 개체는 기본적으로 인스턴스를 만든 스레드에 연결되는 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">이 개체의 초기화가 완료되었음을 나타냅니다. 처리 중인 다른 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />가 없으면 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />가 발생합니다.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">마지막 쿼리 작업의 오류를 가져옵니다.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">마지막 쿼리 작업의 오류인 <see cref="T:System.Exception" /> 형식의 값입니다. 오류가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">기본 데이터 모델에 대한 초기 쿼리를 시작합니다. 결과는 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 속성에 반환됩니다.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">데이터 자동 로드를 방해하거나 지연할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">데이터 자동 로드를 방해하거나 지연하면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">사용하고 있는 처리 중인 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용하고 있는 처리 중인 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">지정된 인수를 사용하여 <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">발생할 이벤트의 인수입니다.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">쿼리 결과인 데이터입니다.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">쿼리 결과인 데이터입니다.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">쿼리를 실행하는 동안 발생한 오류입니다. 오류가 없는 경우 이 값은 <see langword="null" />입니다.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">추가 속성 설정 등 UI 스레드에서 완성 기능을 실행하는 데 사용되는 선택적 대리자입니다.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">
        <paramref name="completionWork" /> 대리자와 함께 매개 변수로 전송할 선택적 인수입니다.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">속성 값이 변경될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">기본 데이터 모델의 새로 고침 작업을 초기화합니다. 결과는 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 속성에 반환됩니다.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">속성 값이 변경될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">종속성 속성 시스템에 참가하는 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">
        <see cref="T:System.Windows.DependencyObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">속성의 로컬 값을 지웁니다. 지울 속성이 <see cref="T:System.Windows.DependencyProperty" /> 식별자에서 지정됩니다.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">
        <see cref="T:System.Windows.DependencyProperty" /> 개체 참조로 식별되는 지울 종속성 속성입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">봉인된 <see cref="T:System.Windows.DependencyObject" />에서 <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />를 호출하려고 시도했습니다.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">읽기 전용 속성의 로컬 값을 지웁니다. 선언할 속성이 <see cref="T:System.Windows.DependencyPropertyKey" />에서 지정됩니다.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">지울 종속성 속성의 키입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">봉인된 <see cref="T:System.Windows.DependencyObject" />에서 <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />를 호출하려고 시도했습니다.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">지정된 종속성 속성의 값을 강제 변환합니다. 호출하는 <see cref="T:System.Windows.DependencyObject" />에 있으므로 이 작업은 종속성 속성의 속성 메타데이터에 지정된 <see cref="T:System.Windows.CoerceValueCallback" /> 함수를 호출하여 수행합니다.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">강제 변환할 종속성 속성의 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">지정된 <paramref name="dp" /> 또는 해당 값이 잘못되었거나 존재하지 않습니다.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">이 인스턴스의 CLR 형식을 래핑하는 <see cref="T:System.Windows.DependencyObjectType" />을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">이 인스턴스의 CLR 형식을 래핑하는 <see cref="T:System.Windows.DependencyObjectType" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">제공된 <see cref="T:System.Windows.DependencyObject" />가 현재 <see cref="T:System.Windows.DependencyObject" />에 해당하는지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">현재 인스턴스와 비교할 <see cref="T:System.Windows.DependencyObject" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyObject" />의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyObject" />에 대해 로컬로 값을 설정한 종속성 속성을 확인하기 위한 특수 열거자를 만듭니다.</summary>
      <returns vsli:raw="A specialized local value enumerator.">특수 로컬 값 열거자입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyObject" />의 인스턴스에서 종속성 속성의 현재 유효 값을 반환합니다.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">값을 검색할 속성의 <see cref="T:System.Windows.DependencyProperty" /> 식별자입니다.</param>
      <returns vsli:raw="Returns the current effective value.">현재 유효 값을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">지정된 <paramref name="dp" /> 또는 해당 값이 잘못되었거나 지정된 <paramref name="dp" />가 없는 경우</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">지정된 종속성 속성의 유효 값을 다시 계산합니다.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">무효화할 속성의 <see cref="T:System.Windows.DependencyProperty" /> 식별자입니다.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">이 인스턴스가 현재 봉인되어 있는지(읽기 전용인지) 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 인스턴스가 봉인되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">이 <see cref="T:System.Windows.DependencyObject" />에서 종속성 속성의 유효 값이 업데이트될 때마다 호출됩니다. 변경된 특정 종속성 속성은 이벤트 데이터에서 보고됩니다.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">해당하는 종속성 속성 식별자, 해당 형식의 속성 메타데이터 및 이전 값과 새 값이 포함될 이벤트 데이터입니다.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">종속성 속성의 로컬 값을 반환합니다(있는 경우).</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">값을 검색할 속성의 <see cref="T:System.Windows.DependencyProperty" /> 식별자입니다.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">로컬 값을 반환하거나 로컬 값이 설정되어 있지 않은 경우 센티널 값인 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">해당 값 소스를 변경하지 않고 종속성 속성의 값을 설정합니다.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">설정할 종속성 속성의 식별자입니다.</param>
      <param name="value" vsli:raw="The new local value.">새 로컬 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">읽기 전용 종속성 속성 또는 봉인된 <see cref="T:System.Windows.DependencyObject" />의 속성을 수정하려고 한 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" />가 <paramref name="dp" /> 속성에 대해 등록된 올바른 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">지정된 종속성 속성 식별자를 가진 종속성 속성의 로컬 값을 설정합니다.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">설정할 종속성 속성의 식별자입니다.</param>
      <param name="value" vsli:raw="The new local value.">새 로컬 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">읽기 전용 종속성 속성 또는 봉인된 <see cref="T:System.Windows.DependencyObject" />의 속성을 수정하려고 한 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" />가 <paramref name="dp" /> 속성에 대해 등록된 올바른 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">종속성 속성의 <see cref="T:System.Windows.DependencyPropertyKey" /> 식별자에 의해 지정된 읽기 전용 종속성 속성의 로컬 값을 설정합니다.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">설정할 속성의 <see cref="T:System.Windows.DependencyPropertyKey" /> 식별자입니다.</param>
      <param name="value" vsli:raw="The new local value.">새 로컬 값입니다.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">serialization 프로세스에서 지정된 종속성 속성의 값을 직렬화해야 하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">serialize해야 하는 종속성 속성의 식별자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제공되는 종속성 속성의 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">모든 <see cref="T:System.Windows.DependencyObject" /> 파생 형식에 대해 내부 형식 캐시를 구현합니다.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">현재 <see cref="T:System.Windows.DependencyObjectType" />의 직접 기본 클래스 <see cref="T:System.Windows.DependencyObjectType" />을 가져옵니다.</summary>
      <returns vsli:raw="The type of the base class.">기본 클래스의 형식입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">지정된 시스템 (CLR) 형식을 나타내는 <see cref="T:System.Windows.DependencyObjectType" />을 반환합니다.</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">변환할 시스템 (CLR) 형식입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">시스템 (CLR) 형식을 나타내는 <see cref="T:System.Windows.DependencyObjectType" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyObjectType" />의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">일정한 시간의 배열 조회 작업에 대해 0부터 시작하는 고유 식별자를 가져옵니다.</summary>
      <returns vsli:raw="An internal identifier.">내부 식별자입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">지정된 개체가 현재 <see cref="T:System.Windows.DependencyObjectType" />의 인스턴스인지를 확인합니다.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">현재 <see cref="T:System.Windows.DependencyObjectType" />와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 <see cref="T:System.Windows.DependencyObjectType" />이 나타내는 클래스가 <paramref name="d" />로 전달된 <see cref="T:System.Windows.DependencyObject" />의 상속 계층 구조에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">현재 <see cref="T:System.Windows.DependencyObjectType" />이 지정된 <see cref="T:System.Windows.DependencyObjectType" />에서 파생되는지 여부를 확인합니다.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">비교할 <see cref="T:System.Windows.DependencyObjectType" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">
        <paramref name="dependencyObjectType" /> 매개 변수와 현재 <see cref="T:System.Windows.DependencyObjectType" />이 클래스 형식을 나타내며 현재 <see cref="T:System.Windows.DependencyObjectType" />이 나타내는 클래스가 <paramref name="dependencyObjectType" />이 나타내는 클래스에서 파생되면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 이 메서드는 <paramref name="dependencyObjectType" />와 현재 <see cref="T:System.Windows.DependencyObjectType" />이 같은 클래스를 나타내는 경우에도 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">표시되는 CLR(공용 언어 런타임) 시스템 형식의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">표시되는 CLR 시스템 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyObjectType" />이 표시하는 CLR(공용 언어 런타임) 시스템 형식을 가져옵니다.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyObjectType" />이 표시하는 CLR 시스템 형식입니다.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">스타일 지정, 데이터 바인딩, 애니메이션 및 상속과 같은 메서드를 통해 설정할 수 있는 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">이미 등록된 종속성 속성의 소유자로 다른 형식을 추가합니다.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">이 종속성 속성의 소유자로 추가할 형식입니다.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">종속성 속성을 식별하는 원본 <see cref="T:System.Windows.DependencyProperty" /> 식별자에 대한 참조입니다. 이 식별자는 클래스를 <see langword="public static readonly" /> 필드로 추가하여 공개해야 합니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">이미 등록된 종속성 속성의 소유자로 다른 형식을 추가하며, 제공된 소유자 형식에 존재하는 종속성 속성에 대한 종속성 속성 메타데이터를 제공합니다.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">이 종속성 속성의 소유자로 추가할 형식입니다.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">제공된 형식에 존재하는 종속성 속성을 정규화하는 메타데이터입니다.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">종속성 속성을 식별하는 원본 <see cref="T:System.Windows.DependencyProperty" /> 식별자에 대한 참조입니다. 이 식별자는 클래스를 <see langword="public static readonly" /> 필드로 추가하여 공개해야 합니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">종속성 속성의 기본 메타데이터를 가져옵니다.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">종속성 속성의 기본 메타데이터입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyProperty" />의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyProperty" />에 대한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">종속성 속성이 지정된 기존 형식일 경우 이 종속성 속성의 메타데이터를 반환합니다.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">종속성 속성 메타데이터를 검색할 특정 형식입니다.</param>
      <returns vsli:raw="A property metadata object.">속성 메타데이터 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">종속성 속성이 지정된 개체 인스턴스에 있을 때 이 종속성 속성의 메타데이터를 반환합니다.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">메타데이터를 가져와야 하는 종속성 속성의 형식별 버전을 결정하기 위해 형식이 검사된 종속성 개체입니다.</param>
      <returns vsli:raw="A property metadata object.">속성 메타데이터 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">종속성 속성이 지정된 형식일 때 이 종속성 속성의 메타데이터를 반환합니다.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">종속성 속성 메타데이터가 필요한 종속성 개체 형식을 기록하는 특정 개체입니다.</param>
      <returns vsli:raw="A property metadata object.">속성 메타데이터 개체입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">종속성 속성을 고유하게 식별하는 내부 생성 값을 가져옵니다.</summary>
      <returns vsli:raw="A unique numeric identifier.">고유 숫자 식별자입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">원래 종속성 속성 등록 시 제공된 속성 형식을 기준으로 지정된 값을 이 종속성 속성 형식에 사용할 수 있는지 확인합니다.</summary>
      <param name="value" vsli:raw="The value to check.">확인할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 값이 등록된 속성 형식이거나 사용 가능한 파생 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">제공된 값이 속성 형식에 허용되는지 기본 형식 확인을 통해 확인하고, 해당 형식에 허용되는 값 범위에 속하는지도 확인합니다.</summary>
      <param name="value" vsli:raw="The value to check.">확인할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값을 사용할 수 있고 올바른 형식이거나 파생 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">종속성 속성의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the property.">속성의 이름입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">지정된 형식의 인스턴스에 있는 경우 이 종속성 속성에 대해 대체 메타데이터를 지정하고, 기본 형식에서 상속된 종속성 속성에 존재하는 메타데이터를 재정의합니다.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">이 종속성 속성에 상속되는 형식이며, 지정된 대체 메타데이터에 적용될 형식입니다.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">재정의하는 형식에서 종속성 속성에 적용할 메타데이터입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">읽기 전용 종속성 속성에서 메타데이터 재정의를 시도한 경우(이 서명을 사용하여 해당 작업을 완료할 수 없음)</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">지정된 형식에 있는 종속성 속성에 대해 메타데이터가 이미 설정되어 있는 경우</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">지정된 형식의 인스턴스에 있을 경우 읽기 전용 종속성 속성에 대해 대체 메타데이터를 제공하여 초기 종속성 속성 등록 시 제공된 메타데이터를 재정의합니다. 예외가 발생하지 않도록 읽기 전용 종속성 속성에 <see cref="T:System.Windows.DependencyPropertyKey" />를 전달해야 합니다.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">이 종속성 속성에 상속되는 형식이며, 지정된 대체 메타데이터에 적용될 형식입니다.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">재정의하는 형식에서 종속성 속성에 적용할 메타데이터입니다.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">읽기 전용 종속성 속성에 대한 액세스 키입니다.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">속성 시스템에 종속성 속성을 등록하거나 자체적으로 속성 소유자로 추가한 개체의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">속성을 등록하거나 자체적으로 속성 소유자로 추가한 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">종속성 속성에서 값으로 사용하는 형식을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">속성 값의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">이 <see cref="T:System.Windows.DependencyProperty" /> 인스턴스로 식별되는 종속성 속성이 읽기 전용 종속성 속성인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">종속성 속성이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">지정된 속성 이름, 속성 형식 및 소유자 유형을 사용하여 종속성 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">등록할 종속성 속성의 이름입니다. 이름은은 소유자 형식의 등록 네임스페이스 내에서 고유해야 합니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">클래스에서 <see langword="public static readonly" /> 필드의 값을 설정하는 데 사용해야 하는 종속성 속성 식별자입니다. 해당 식별자는 나중에 해당 값을 프로그래밍 방식으로 설정하거나 메타데이터를 가져오는 등의 작업에서 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">지정된 속성 이름, 속성 형식, 소유자 유형 및 속성 메타데이터를 사용하여 종속성 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">종속성 속성의 속성 메타데이터입니다.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">클래스에서 <see langword="public static readonly" /> 필드의 값을 설정하는 데 사용해야 하는 종속성 속성 식별자입니다. 해당 식별자는 나중에 해당 값을 프로그래밍 방식으로 설정하거나 메타데이터를 가져오는 등의 작업에서 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">속성에 대해 지정된 속성 이름, 속성 형식, 소유자 유형, 속성 메타데이터 및 값 유효성 검사 콜백을 사용하여 종속성 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">종속성 속성의 속성 메타데이터입니다.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">일반적인 형식 유효성 검사 이외에 종속성 속성 값의 사용자 지정 유효성 검사를 수행하는 콜백에 대한 참조입니다.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">클래스에서 <see langword="public static readonly" /> 필드의 값을 설정하는 데 사용해야 하는 종속성 속성 식별자입니다. 해당 식별자는 나중에 해당 값을 프로그래밍 방식으로 설정하거나 메타데이터를 가져오는 등의 작업에서 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">지정된 속성 이름, 속성 형식 및 소유자 유형을 사용하여 연결된 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">클래스에서 <see langword="public static readonly" /> 필드의 값을 설정하는 데 사용해야 하는 종속성 속성 식별자입니다. 해당 식별자는 나중에 해당 값을 프로그래밍 방식으로 설정하거나 메타데이터를 가져오는 등의 작업에서 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">지정된 속성 이름, 속성 형식, 소유자 유형 및 속성 메타데이터에 연결된 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">종속성 속성의 속성 메타데이터입니다. 여기에는 기본값뿐만 아니라 다른 특성도 포함될 수 있습니다.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">클래스에서 <see langword="public static readonly" /> 필드의 값을 설정하는 데 사용해야 하는 종속성 속성 식별자입니다. 해당 식별자는 나중에 해당 값을 프로그래밍 방식으로 설정하거나 메타데이터를 가져오는 등의 작업에서 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">속성에 대해 지정된 속성 형식, 소유자 유형, 속성 메타데이터 및 값 유효성 검사 콜백에 연결된 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">종속성 속성의 속성 메타데이터입니다. 여기에는 기본값뿐만 아니라 다른 특성도 포함될 수 있습니다.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">일반적인 형식 유효성 검사 이외에 종속성 속성 값의 사용자 지정 유효성 검사를 수행하는 콜백에 대한 참조입니다.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">클래스에서 <see langword="public static readonly" /> 필드의 값을 설정하는 데 사용해야 하는 종속성 속성 식별자입니다. 해당 식별자는 나중에 해당 값을 프로그래밍 방식으로 설정하거나 메타데이터를 가져오는 등의 작업에서 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">지정된 속성 형식, 소유자 유형 및 속성 메타데이터를 사용하여 읽기 전용 연결된 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">종속성 속성의 속성 메타데이터입니다.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">클래스의 정적 읽기 전용 필드 값을 설정하는 데 사용할 종속성 속성 키로, 나중에 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">지정된 속성 형식, 소유자 유형, 속성 메타데이터 및 유효성 검사 콜백을 사용하여 읽기 전용 연결된 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">종속성 속성의 속성 메타데이터입니다.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">일반적인 형식 유효성 검사 이외에 종속성 속성 값의 사용자 지정 유효성 검사를 수행하는 사용자가 만든 콜백에 대한 참조입니다.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">클래스의 정적 읽기 전용 필드 값을 설정하는 데 사용할 종속성 속성 키로, 나중에 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">지정된 속성 형식, 소유자 유형 및 속성 메타데이터를 사용하여 읽기 전용 종속성 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">종속성 속성의 속성 메타데이터입니다.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">클래스의 정적 읽기 전용 필드 값을 설정하는 데 사용할 종속성 속성 키로, 나중에 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">지정된 속성 형식, 소유자 유형, 속성 메타데이터 및 유효성 검사 콜백을 사용하여 읽기 전용 종속성 속성을 등록합니다.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">등록할 종속성 속성의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of the property.">속성의 형식입니다.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">종속성 속성을 등록하는 소유자 유형입니다.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">종속성 속성의 속성 메타데이터입니다.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">일반적인 형식 유효성 검사 이외에 종속성 속성 값의 사용자 지정 유효성 검사를 수행하는 사용자가 만든 콜백에 대한 참조입니다.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">클래스의 정적 읽기 전용 필드 값을 설정하는 데 사용할 종속성 속성 키로, 나중에 종속성 속성을 참조하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">종속성 속성의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="The string representation of the dependency property.">종속성 속성의 문자열 표현입니다.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">속성이 있지만 속성 시스템에 의해 값이 설정되지 않았음을 나타내기 위해 WPF 속성 시스템에서 <see langword="null" /> 대신 사용하는 정적 값을 지정합니다.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">종속성 속성의 값 유효성 검사 콜백을 가져옵니다.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">이 종속성 속성을 원래 등록할 때 <paramref name="validateValueCallback" /> 매개 변수로 제공된 값 유효성 검사 콜백입니다.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">다양한 속성 변경 이벤트에 대한 데이터를 제공합니다. 일반적으로 이러한 이벤트는 읽기 전용 종속성 속성 값에서 유효한 값이 변경된 내용을 보고합니다. <see cref="T:System.Windows.PropertyChangedCallback" /> 구현의 일부로도 사용됩니다.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">변경된 종속성 속성의 식별자입니다.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">관련 이벤트에서 보고한 변경 또는 상태 변경 이전의 속성 값입니다.</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">관련 이벤트에서 보고한 변경 또는 상태 변경 이후의 속성 값입니다.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">제공된 개체가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />에 해당하는지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />과 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제공된 개체가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">제공된 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />에 해당하는지 여부를 확인합니다.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />와 비교할 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">제공된 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />가 현재 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">이 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">변경 후의 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="The property value after the change.">변경 후의 속성 값입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">변경 전의 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="The property value before the change.">변경 전의 속성 값입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">지정된 두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 개체의 값이 같은지를 확인합니다.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 인스턴스가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">지정된 두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 개체가 다른지 여부를 확인합니다.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 인스턴스가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">값이 변경된 종속성 속성의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">값이 변경된 종속성 속성의 식별자 필드입니다.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">특정 <see cref="T:System.Windows.DependencyObject" /> 구현에서 <see cref="T:System.Windows.DependencyProperty" />가 변경될 때 발생하는 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The event data.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">읽기 전용 종속성 속성에 대해 제한적인 쓰기 권한을 제공하기 위한 종속성 속성 식별자를 제공합니다.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">이 특수 읽기 전용 종속성 속성 식별자와 연결된 종속성 속성 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">관련 종속성 속성 식별자입니다.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">이 종속성 속성 식별자가 나타내는 읽기 전용 종속성 속성의 메타데이터를 재정의합니다.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">이 종속성 속성에 대해 지정되어 있으며 메타데이터를 재정의해야 하는 형식입니다.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">이 형식에 대해 제공되는 메타데이터입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">읽기-쓰기 종속성 속성의 메타데이터를 재정의한 경우. 이 시그니처를 사용하여 이 작업을 수행할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">제공된 형식에 있는 속성에 메타데이터가 이미 설정된 경우</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">이 형식은 WPF(Windows Presentation Foundation) 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">
        <see cref="T:System.Windows.Expression" />의 인스턴스를 다른 형식으로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.ExpressionConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">이 변환기가 소스 개체를 <see cref="T:System.Windows.Expression" /> 개체로 변환할 수 있는지 여부를 반환합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">변환할 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">항상 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">이 변환기가 <see cref="T:System.Windows.Expression" /> 개체를 특정 대상 형식으로 변환할 수 있는지 여부를 반환합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">변환할 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">항상 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">제공된 값을 <see cref="T:System.Windows.Expression" /> 형식으로 변환합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">현재 문화권으로 사용할 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">항상 예외를 throw하고 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">제공된 <see cref="T:System.Windows.Expression" /> 개체를 지정된 형식으로 변환합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">현재 문화권으로 사용할 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">변환할 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">항상 예외를 throw하고 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">수정 가능한 상태와 읽기 전용(고정) 상태를 가진 개체를 정의합니다. <see cref="T:System.Windows.Freezable" />에서 파생된 클래스는 자세한 변경 알림을 제공하며, 변경할 수 없도록 설정될 수 있고, 자신을 복제할 수 있습니다.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">
        <see cref="T:System.Windows.Freezable" /> 파생 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">개체를 수정 불가능으로 설정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체를 수정 불가능으로 설정할 수 있거나 이미 수정 불가능이면 <see langword="true" />이고, 설정할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">
        <see cref="T:System.Windows.Freezable" /> 또는 여기에 들어 있는 개체가 수정될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">개체 값의 전체 복사본을 만들어 <see cref="T:System.Windows.Freezable" />의 수정 가능한 복제본을 만듭니다. 개체의 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 식을 복사하지만 애니메이션 또는 해당 현재 값은 복사하지 않습니다.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">기본(애니메이션이 적용되지 않은) 속성 값을 사용하여 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 복제본(전체 복사본)으로 만듭니다.</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">복제할 개체입니다.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">현재 값을 사용하여 <see cref="T:System.Windows.Freezable" />의 수정 가능한 복제본(전체 복사본)을 만듭니다.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">현재 속성 값을 사용하여 이 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 수정 가능한 클론(전체 복사본)으로 만듭니다.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">복제할 <see cref="T:System.Windows.Freezable" />입니다.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">
        <see cref="T:System.Windows.Freezable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <returns vsli:raw="The new instance.">새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">파생 클래스에서 구현되는 경우 <see cref="T:System.Windows.Freezable" /> 파생 클래스의 새 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="The new instance.">새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">현재 개체를 수정할 수 없게 설정하고 해당 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성을 <see langword="true" />로 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">
        <see cref="T:System.Windows.Freezable" />은 수정할 수 없도록 설정할 수 없습니다.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">
        <paramref name="isChecking" /> 매개 변수가 <see langword="true" />이면 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들 수 있는지 여부를 알려 줍니다. <paramref name="isChecking" /> 매개 변수가 <see langword="false" />이면 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들고 이 작업에 성공했는지 여부를 알려 줍니다.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">확인할 개체 또는 수정할 수 없게 만들 개체입니다. <paramref name="isChecking" />이 <see langword="true" />이면 이 개체를 수정할 수 없게 만들 수 있는지 확인합니다. <paramref name="isChecking" />이 <see langword="false" />이면 가능한 경우 개체를 수정할 수 없게 만듭니다.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">개체를 실제로 고정하지 않고 고정할 수 있는지 여부를 반환하려면 <see langword="true" />이고, 개체를 실제로 고정하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">
        <paramref name="isChecking" />이 <see langword="true" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들 수 있으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다. <paramref name="isChecking" />이 <see langword="false" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 이제 수정할 수 없으면 <see langword="true" />를, 수정할 수 없게 만들 수 없으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">
        <paramref name="isChecking" />이 <see langword="false" />인 경우 <paramref name="freezable" />을 수정할 수 없게 만드는 작업이 실패하면 개체의 상태를 알 수 없게 되며, 부분적으로 고정될 수도 있습니다.</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">
        <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들거나, 수정할 수 없게 만들 수 있는지 테스트합니다.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">개체를 실제로 고정하지 않고 고정할 수 있는지 여부를 반환하려면 <see langword="true" />이고, 개체를 실제로 고정하려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">
        <paramref name="isChecking" />이 <see langword="true" />인 경우 이 메서드는 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들 수 있으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다. <paramref name="isChecking" />이 <see langword="false" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 이제 수정할 수 없으면 <see langword="true" />를, 수정할 수 없게 만들 수 없으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">애니메이션이 적용되지 않은 기준 속성 값을 사용하여 <see cref="T:System.Windows.Freezable" />의 고정된 복사본을 만듭니다. 복사본이 고정되므로 고정된 하위 개체는 모두 참조를 통해 복사됩니다.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Freezable" />의 고정된 복사본입니다. 복사본의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="true" />로 설정됩니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">식 또는 애니메이션이 적용된 속성이 들어 있어서 <see cref="T:System.Windows.Freezable" />을 고정할 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">기본(애니메이션이 적용되지 않은) 속성 값을 사용하여 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 고정된 복제본으로 만듭니다.</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">복사할 인스턴스입니다.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">현재 속성 값을 사용하여 <see cref="T:System.Windows.Freezable" />의 고정된 복사본을 만듭니다. 복사본이 고정되므로 고정된 하위 개체는 모두 참조를 통해 복사됩니다.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Freezable" />의 고정된 복사본입니다. 복사본의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="true" />로 설정됩니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">현재 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 고정 클론으로 만듭니다. 개체에 애니메이션 효과를 준 종속성 속성이 있는 경우 애니메이션 효과를 준 현재 값이 복사됩니다.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">복사 및 고정할 <see cref="T:System.Windows.Freezable" />입니다.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">개체가 현재 수정 가능한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">개체가 고정되어 있어 수정할 수 없으면 <see langword="true" />이고, 개체를 수정할 수 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">현재 <see cref="T:System.Windows.Freezable" /> 개체가 수정될 때 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">방금 설정된 <see cref="T:System.Windows.DependencyObjectType" /> 데이터 멤버에 대한 적절한 컨텍스트 포인터를 설정합니다.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">데이터 멤버의 이전 값입니다.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">데이터 멤버의 현재 값입니다.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">데이터 멤버의 이전 값입니다.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">데이터 멤버의 현재 값입니다.</param>
      <param name="property" vsli:raw="The property that changed.">변경된 속성입니다.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">
        <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />의 <see cref="T:System.Windows.DependencyObject" /> 구현을 재정의하여 <see cref="T:System.Windows.Freezable" /> 형식의 변화하는 종속성 속성에 대한 응답으로 <see cref="E:System.Windows.Freezable.Changed" /> 처리기도 호출합니다.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">변경된 속성, 해당하는 이전 값 및 새 값에 관한 정보가 포함된 이벤트 데이터입니다.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">유효한 스레드에서 <see cref="T:System.Windows.Freezable" />에 액세스하고 있는지 확인합니다. <see cref="T:System.Windows.Freezable" /> 상속자는 종속성 속성이 아닌 데이터 멤버를 읽는 API의 시작 부분에서 이 메서드를 호출해야 합니다.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">
        <see cref="T:System.Windows.Freezable" />에 대한 <see cref="E:System.Windows.Freezable.Changed" /> 이벤트를 발생시키고 해당 <see cref="M:System.Windows.Freezable.OnChanged" /> 메서드를 호출합니다. <see cref="T:System.Windows.Freezable" />에서 파생된 클래스는 종속성 속성으로 저장되지 않은 클래스 멤버를 수정하는 모든 API의 끝에서 이 메서드를 호출해야 합니다.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">
        <see cref="T:System.Windows.Freezable" />이 고정되어 있지 않고 유효한 스레드 컨텍스트에서 액세스되고 있는지 확인합니다. <see cref="T:System.Windows.Freezable" /> 상속자는 종속성 속성이 아닌 데이터 멤버에 쓰는 API의 시작 부분에서 이 메서드를 호출해야 합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">
        <see cref="T:System.Windows.Freezable" /> 인스턴스가 고정되어 있어 해당 멤버에 쓸 수 없는 경우</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">UI(사용자 인터페이스) 내에서 원하는 포커스 변경 요청이 시도되는 방향을 지정합니다. 방향은 탭 순서나 레이아웃에서의 상대적 방향을 기준으로 합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">현재 포커스가 있는 요소의 아래쪽에 있으며 포커스를 받을 수 있는 다른 요소로 포커스를 이동합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">탭 순서에 따라 포커스를 받을 수 있는 첫 번째 요소로 포커스를 이동합니다. <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />에는 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">탭 순서에 따라 포커스를 받을 수 있는 마지막 요소로 포커스를 이동합니다. <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />에는 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">현재 포커스가 있는 요소의 왼쪽에 있으며 포커스를 받을 수 있는 다른 요소로 포커스를 이동합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">탭 순서에 따라 포커스를 받을 수 있는 다음 요소로 포커스를 이동합니다. <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />에는 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">탭 순서에 따라 포커스를 받을 수 있는 이전 요소로 포커스를 이동합니다. <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />에는 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">현재 포커스가 있는 요소의 오른쪽에 있으며 포커스를 받을 수 있는 다른 요소로 포커스를 이동합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">현재 포커스가 있는 요소의 위쪽에 있으며 포커스를 받을 수 있는 다른 요소로 포커스를 이동합니다.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">키보드에서 가능한 키 값을 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">A 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">ABNT_C1(브라질) 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">ABNT_C2(브라질) 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">추가 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">애플리케이션 키(Microsoft Natural 키보드)입니다. 애플리케이션별 상황에 맞는 메뉴를 표시하므로 메뉴 키라고도 합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">ATTN 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">B 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">백스페이스 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">브라우저 뒤로 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">브라우저 즐겨찾기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">브라우저 앞으로 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">브라우저 홈 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">브라우저 새로 고침 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">브라우저 검색 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">브라우저 중지 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">C 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">취소 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">&amp;lt;Caps Lock&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">&amp;lt;Caps Lock&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">지우기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">CRSEL 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">D 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">0 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">1 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">2 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">3 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">4 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">5 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">6 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">7 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">8 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">9 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">DBE_ALPHANUMERIC 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">DBE_CODEINPUT 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">DBE_DBCSCHAR 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">DBE_DETERMINESTRING 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">DBE_ENTERDLGCONVERSIONMODE 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">DBE_ENTERIMECONFIGMODE 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">DBE_ENTERWORDREGISTERMODE 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">DBE_FLUSHSTRING 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">DBE_HIRAGANA 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">DBE_KATAKANA 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">DBE_NOCODEINPUT 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">DBE_NOROMAN 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">DBE_ROMAN 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">DBE_SBCSCHAR 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">키는 조합된 단일 문자를 만들기 위해 다른 키와 함께 사용됩니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">소수점 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">&amp;lt;Delete&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">나누기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">아래쪽 화살표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">E 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">&amp;lt;End&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">&amp;lt;Enter&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">ERASE EOF 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">&amp;lt;ESC&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">실행 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">EXSEL 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">F 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">F1 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">F10 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">F11 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">F12 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">F13 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">F14 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">F15 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">F16 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">F17 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">F18 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">F19 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">F2 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">F20 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">F21 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">F22 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">F23 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">F24 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">F3 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">F4 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">F5 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">F6 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">F7 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">F8 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">F9 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">IME 최종 모드 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">G 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">H 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">IME 한글 모드 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">IME 한자 모드 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">도움말 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">Home 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">I 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">IME 수락 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">IME 변환 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">IME 모드 변경 요청입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">IME 변환 안 함 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">IME에서 처리될 실제 키를 마스킹하는 특수 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">&amp;lt;Insert&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">J 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">IME 전자 모드 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">K 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">IME 가나 모드 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">IME 간지 모드 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">L 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">애플리케이션1 시작 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">애플리케이션2 시작 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">메일 시작 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">왼쪽 화살표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">왼쪽 &amp;lt;Alt&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">왼쪽 &amp;lt;Ctrl&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">왼쪽 &amp;lt;Shift&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">줄 바꿈 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">왼쪽 Windows 로고 키(Microsoft Natural 키보드)입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">M 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">미디어 다음 트랙 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">미디어 재생 일시 중지 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">미디어 이전 트랙 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">미디어 중지 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">곱하기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">N 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">&amp;lt;Page Down&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">나중에 사용하기 위해 예약된 상수입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">키를 누르지 않았습니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">&amp;lt;Num Lock&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">숫자 키패드의 0 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">숫자 키패드의 1 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">숫자 키패드의 2 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">숫자 키패드의 3 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">숫자 키패드의 4 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">숫자 키패드의 5 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">숫자 키패드의 6 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">숫자 키패드의 7 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">숫자 키패드의 8 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">숫자 키패드의 9 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">O 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">OEM 1 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">OEM 102 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">OEM 2 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">OEM 3 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">OEM 4 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">OEM 5 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">OEM 6 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">OEM 7 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">OEM 8 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">OEM ATTN 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">OEM 자동 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">OEM 백슬래시 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">OEM BACKTAB 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">OEM 지우기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">OEM 닫는 괄호 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">OEM 쉼표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">OEM 복사 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">OEM ENLW 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">OEM 마침 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">OEM 빼기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">OEM 여는 괄호 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">OEM 마침표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">OEM 파이프 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">OEM 추가 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">OEM 물음표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">OEM 따옴표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">OEM 세미콜론 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">OEM 물결표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">P 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">PA1 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">&amp;lt;Page Down&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">&amp;lt;Page Up&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">&amp;lt;Pause&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">재생 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">인쇄 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">&amp;lt;Print Screen&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">&amp;lt;Page Up&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Q 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">R 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">Enter 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">오른쪽 화살표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">오른쪽 &amp;lt;Alt&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">오른쪽 &amp;lt;Ctrl&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">오른쪽 &amp;lt;Shift&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">오른쪽 Windows 로고 키(Microsoft Natural 키보드)입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">S 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">&amp;lt;Scroll Lock&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">선택 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">미디어 선택 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">구분 기호 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">컴퓨터 절전 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">&amp;lt;Print Screen&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">스페이스바 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">빼기 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">시스템 키로 처리될 실제 키를 마스킹하는 특수 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">T 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">&amp;lt;Tab&amp;gt; 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">U 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">위쪽 화살표 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">V 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">볼륨 작게 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">볼륨 음소거 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">볼륨 크게 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">W 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">X 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Y 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Z 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">확대/축소 키입니다.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">
        <see cref="T:System.Windows.Input.Key" /> 개체를 다른 형식으로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">
        <see cref="T:System.Windows.Input.Key" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">지정된 컨텍스트를 사용하여 지정된 형식의 개체를 <see cref="T:System.Windows.Input.Key" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">변환을 위해 확인하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />의 형식이 <paramref name="sourceType" />이면 <see cref="T:System.String" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">지정한 컨텍스트를 사용하여 <see cref="T:System.Windows.Input.Key" />의 인스턴스를 지정한 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">변환을 위해 확인하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />의 형식이 <paramref name="destinationType" />이면 <see cref="T:System.String" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">지정한 컨텍스트를 사용하여 지정한 개체를 <see cref="T:System.Windows.Input.Key" />로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
      <param name="source" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted object.">변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" />를 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">지정한 컨텍스트를 사용하여 <see cref="T:System.Windows.Input.Key" />를 지정한 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">개체를 변환할 대상 유형입니다.</param>
      <returns vsli:raw="The converted object.">변환된 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" />를 <paramref name="destinationType" />으로 변환할 수 없는 경우</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Win32 가상 키와 WPF <see cref="T:System.Windows.Input.Key" /> 열거형 사이에 변환하는 정적 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Win32 가상 키를 WPF <see cref="T:System.Windows.Input.Key" />로 변환합니다.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">변환할 가상 키입니다.</param>
      <returns vsli:raw="The WPF key.">WPF 키입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">WPF <see cref="T:System.Windows.Input.Key" />를 Win32 가상 키로 변환합니다.</summary>
      <param name="key" vsli:raw="The WPF to convert.">변환할 WPF입니다.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">Win32 가상 키입니다.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Input.Key" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Input.KeyValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">지정된 <see cref="T:System.String" />이 <see cref="T:System.Windows.Input.Key" />의 인스턴스로 변환될 수 있는지 여부를 결정합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정한 <see cref="T:System.Windows.Input.Key" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">변환을 위해 확인할 키입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Input.Key" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">
        <see cref="T:System.Windows.Input.Key" />으로 변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Input.Key" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Input.Key" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">문자열로 변환할 키입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">지정된 <see cref="T:System.Windows.Input.Key" />의 고정 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">보조키 집합을 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">Alt 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">CTRL 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">보조키가 눌러져 있지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">Shift 키입니다.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">Windows 로고 키입니다.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">
        <see cref="T:System.Windows.Input.ModifierKeys" /> 개체를 다른 형식으로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.Input.ModifierKeysConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">지정된 컨텍스트를 사용하여 지정된 형식의 개체를 <see cref="T:System.Windows.Input.ModifierKeys" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">변환을 위해 확인하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="sourceType" />이 <see cref="T:System.String" /> 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">지정한 컨텍스트를 사용하여 <see cref="T:System.Windows.Input.ModifierKeys" />의 인스턴스를 지정한 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">변환을 위해 확인하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destinationType" />이 <see cref="T:System.String" /> 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">지정한 컨텍스트를 사용하여 지정한 개체를 <see cref="T:System.Windows.Input.ModifierKeys" />로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
      <param name="source" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <returns vsli:raw="The converted object.">변환된 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" />를 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">지정한 컨텍스트를 사용하여 <see cref="T:System.Windows.Input.ModifierKeys" />를 지정한 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">이 변환기가 호출되는 환경에 대한 정보를 제공하는 형식 컨텍스트입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
      <param name="value" vsli:raw="The object to convert.">변환할 개체입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">개체를 변환할 대상 유형입니다.</param>
      <returns vsli:raw="The converted object.">변환된 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" />가 유효한 <see cref="T:System.Windows.Input.ModifierKeys" />에 매핑되지 않는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" />를 변환할 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">지정된 값이 유효한 <see cref="T:System.Windows.Input.ModifierKeys" /> 값인지 여부를 확인합니다.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">유효성을 확인할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">입력이 유효한 <see cref="T:System.Windows.Input.ModifierKeys" /> 값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Input.ModifierKeys" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">지정된 <see cref="T:System.String" />이 <see cref="T:System.Windows.Input.ModifierKeys" />의 인스턴스로 변환될 수 있는지 여부를 결정합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정한 <see cref="T:System.Windows.Input.ModifierKeys" />를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">변환을 위해 확인할 보조키입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Input.ModifierKeys" /> 값으로 변환합니다.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <see cref="T:System.Windows.Input.ModifierKeys" />으로 변환할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Input.ModifierKeys" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Input.ModifierKeys" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">문자열로 변환할 키입니다.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">지정된 <see cref="T:System.Windows.Input.ModifierKeys" /> 값의 고정 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">다른 컨트롤로 포커스를 이동할 요청을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">
        <see cref="T:System.Windows.Input.TraversalRequest" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">원하는 포커스 이동 방향으로 열거형 값입니다.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">이동 방향을 가져옵니다.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">이동 방향 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">포커스 이동이 포커스를 가질 수 있는 마지막 자식 요소에 도달했는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">이 이동이 포커스를 가질 수 있는 마지막 자식 요소에 도달했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">정수 사각형의 너비, 높이 및 위치를 설명합니다.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">지정된 <see cref="T:System.Windows.Int32Rect" /> 및 <see cref="P:System.Windows.Int32Rect.X" /> 좌표와 지정된 <see cref="P:System.Windows.Int32Rect.Y" /> 및 <see cref="P:System.Windows.Int32Rect.Width" />를 사용하여 <see cref="P:System.Windows.Int32Rect.Height" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">사각형 왼쪽 위 모퉁이의 X 좌표를 지정하는 새 <see cref="P:System.Windows.Int32Rect.X" /> 인스턴스의 <see cref="T:System.Windows.Int32Rect" />입니다.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">사각형 왼쪽 위 모퉁이의 Y 좌표를 지정하는 새 <see cref="P:System.Windows.Int32Rect.Y" /> 인스턴스의 <see cref="T:System.Windows.Int32Rect" />입니다.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">사각형의 너비를 지정하는 새 <see cref="P:System.Windows.Int32Rect.Width" /> 인스턴스의 <see cref="T:System.Windows.Int32Rect" />입니다.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">사각형의 높이를 지정하는 새 <see cref="P:System.Windows.Int32Rect.Height" /> 인스턴스의 <see cref="T:System.Windows.Int32Rect" />입니다.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">위치와 넓이가 없는 사각형을 나타내는 특수 값인 빈 사각형을 가져옵니다.</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">위치와 넓이가 없는 빈 사각형입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">지정된 사각형이 이 사각형과 같은지 여부를 확인합니다.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">현재 사각형과 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="o" />이 <see cref="T:System.Windows.Int32Rect" />이고 이 사각형과 <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">지정된 사각형이 이 사각형과 같은지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">현재 사각형과 비교할 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 이 사각형과 <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">지정된 사각형이 같은지를 확인합니다.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="int32Rect1" />과 <paramref name="int32Rect2" />가 서로 <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">이 사각형의 <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" /> 값에서 해시 코드를 만듭니다.</summary>
      <returns vsli:raw="This rectangle's hash code.">사각형의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">
        <see cref="P:System.Windows.Int32Rect.Width" />의 <see cref="P:System.Windows.Int32Rect.Height" /> 및 <see cref="T:System.Windows.Int32Rect" /> 속성이 0보다 큰지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 경우는 <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" /> 의 속성을 <see cref="T:System.Windows.Int32Rect" /> 이 고, 그렇지 않으면 0 보다 큰 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">사각형의 높이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">사각형의 높이입니다. 기본값은 <c>0</c>합니다.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">사각형이 비어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 사각형이 비어 있는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">두 사각형이 정확히 같은지 비교합니다.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="int32Rect1" />과 <paramref name="int32Rect2" />가 서로 <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">두 사각형이 다른지 비교합니다.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">
        <paramref name="int32Rect1" />과 <paramref name="int32Rect2" />가 서로 <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> 및 <see cref="P:System.Windows.Int32Rect.Height" />가 같으면 <see langword="false" />이고, 그렇지 않으면 이러한 값이 모두 같은 경우 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">지정된 <see cref="T:System.Windows.Int32Rect" /> 표현에서 <see cref="T:System.String" /> 구조체를 만듭니다.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">
        <see cref="T:System.Windows.Int32Rect" />의 문자열 표현입니다.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">해당 <see cref="T:System.Windows.Int32Rect" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</summary>
      <param name="format" vsli:raw="The format to use.">사용할 형식입니다.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">값에 형식을 지정하기 위해 사용할 공급자입니다.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">지정된 형식의 현재 인스턴스 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">이 <see cref="T:System.Windows.Int32Rect" />의 문자열 표현을 만듭니다.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">이 <see cref="P:System.Windows.Int32Rect.X" /> 구조체와 동일한 <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, <see cref="P:System.Windows.Int32Rect.Height" /> 및 <see cref="T:System.Windows.Int32Rect" /> 값이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">제공된 <see cref="T:System.Windows.Int32Rect" />를 기준으로 이 <see cref="T:System.IFormatProvider" />의 문자열 표현을 만듭니다.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">사용할 서식 공급자입니다. 공급자가 <see langword="null" />이면 현재 문화권이 사용됩니다.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">이 <see cref="T:System.Windows.Int32Rect" /> 인스턴스의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">사각형의 너비를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">사각형의 너비입니다. 기본값은 <c>0</c>합니다.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이의 X 좌표를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">사각형의 왼쪽 위 모퉁이의 X 좌표입니다. 기본값은 <c>0</c>합니다.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이의 y 좌표를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">사각형의 왼쪽 위 모퉁이의 y 좌표입니다. 기본값은 <c>0</c>합니다.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">다른 형식의 인스턴스를 <see cref="T:System.Windows.Int32Rect" />로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.Int32RectConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">개체를 지정된 형식에서 <see cref="T:System.Windows.Int32Rect" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">변환을 위해 확인할 소스 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식을 <see cref="T:System.Windows.Int32Rect" />로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">
        <see cref="T:System.Windows.Int32Rect" />의 인스턴스를 다른 형식으로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">변환을 위해 이 <see cref="T:System.Windows.Int32Rect" />를 확인 중인 원하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Windows.Int32Rect" />를 <paramref name="destinationType" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">지정한 형식을 <see cref="T:System.Windows.Int32Rect" />로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">변환 도중 적용할 문화권 정보입니다.</param>
      <param name="value" vsli:raw="The object being converted.">변환되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 변환하여 만드는 <see cref="T:System.Windows.Int32Rect" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">지정된 개체가 NULL이거나 <see cref="T:System.Windows.Int32Rect" />로 변환할 수 없는 형식인 경우</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">
        <see cref="T:System.Windows.Int32Rect" />를 지정한 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">변환 도중 적용할 문화권 정보입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">변환할 <see cref="T:System.Windows.Int32Rect" />입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">이 <see cref="T:System.Windows.Int32Rect" />을 변환할 대상 형식입니다.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">이 <see cref="T:System.Windows.Int32Rect" />을 변환하여 만드는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" />가 <see langword="null" />이거나 <see cref="T:System.Windows.Int32Rect" />가 아니거나 <paramref name="destinationType" />이 변환 가능한 형식 중 하나가 아닌 경우</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">상호 운용 시나리오에서 Win32와 WPF 간에 메시지 펌프의 공유 제어를 사용하도록 설정합니다.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">마지막으로 발생한 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The last message.">마지막 메시지입니다.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">스레드가 모달이 될 때 발생합니다.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">스레드가 모달인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스레드가 모달이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">모달 스레드가 모달이 아닌 스레드가 될 때 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">모달 스레드가 더 이상 모달이 아님을 나타내기 위해 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">스레드가 모달임을 나타내기 위해 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">스레드가 유휴 상태임을 나타내기 위해 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">새 메시지를 가능한 처리에 사용할 수 있음을 나타냅니다.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">메시지 및 관련 데이터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">메시지 루프를 수신 대기하는 모듈 중 하나에서 메시지가 처리된 경우 <see langword="true" />입니다. 메시지 루프의 소유자는 메시지를 무시해야 합니다. 메시지가 처리되지 않았으면 <see langword="false" />입니다. 이 경우 메시지 펌프의 소유자는 Win32 함수 TranslateMessage와 DispatchMessage를 차례로 호출해야 합니다.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">메시지 펌프가 키보드 메시지를 받을 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">스레드가 유휴 상태일 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">메시지 펌프가 키보드 메시지를 받을 때 발생합니다.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">상호 운용 경계 및 HWND 간의 탭 이동, 액셀러레이터 키 및 니모닉을 관리하는 구성 요소에 대한 키보드 싱크를 제공합니다. WPF-Win32 상호 운용 시나리오의 키보드 메시지 관리는 이 인터페이스로 구현됩니다.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">구성 요소 컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">이 싱크에 대한 니모닉(선택키) 중 하나가 호출될 때 호출됩니다.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">니모닉 및 연결된 데이터에 대한 메시지입니다. 이 메시지 구조체를 수정하지 마십시오. 성능상의 이유로 이 구조체는 참조로만 전달됩니다.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">보조키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 인터페이스를 등록합니다.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 싱크입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 사이트입니다.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">싱크의 첫 번째 또는 마지막 탭 정지에 포커스를 설정합니다.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">포커스가 요청대로 설정되었으면 <see langword="true" />이고, 탭 정지가 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">keydown 메시지 수준에서 키보드 입력을 처리합니다.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">메시지 및 연결된 데이터입니다. 이 구조체를 수정하지 마십시오. 성능상의 이유로 이 구조체는 참조로만 전달됩니다.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">보조키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드 구현에서 메시지가 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">
        <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />이 호출되기 전에 WM_CHAR, WM_SYSCHAR, WM_DEADCHAR 및 WM_SYSDEADCHAR 입력 메시지를 처리합니다.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">메시지 및 연결된 데이터입니다. 이 구조체를 수정하지 마십시오. 성능상의 이유로 이 구조체는 참조로만 전달됩니다.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">보조키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었고 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />을 호출하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">컨테이너 내에서 키보드 포커스를 관리합니다.  WPF-Win32 상호 운용 시나리오의 키보드 메시지 관리는 이 인터페이스로 구현됩니다.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">마지막 탭 정지에 도달하여 Tab 키를 눌러서 이동할 수 있는 항목이 더 없을 때 포함된 구성 요소에서 호출됩니다.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">이 메서드가 <see langword="true" />를 반환하면 사이트에서 포커스를 다른 구성 요소로 이동한 것입니다. 이 메서드가 <see langword="false" />를 반환하면 포커스가 호출하는 구성 요소 내에 있는 것입니다. 구성 요소는 포커스를 "래핑"한 다음 포함된 첫 번째 탭 정지로 설정해야 합니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">이 사이트와 연결된 키보드 싱크를 가져옵니다.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">현재 사이트의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 인터페이스입니다.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">이 사이트에서 자식 키보드 입력 싱크의 등록을 취소합니다.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">스레드 메시지 큐의 메시지 정보를 포함합니다.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">창 프로시저에서 메시지를 받는 창에 대한 창 핸들(HWND)을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The window handle (HWND).">창 핸들(HWND)입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">메시지에 대한 추가 정보를 지정하는 <paramref name="lParam" /> 값을 가져오거나 설정합니다. 정확한 의미는 <see cref="P:System.Windows.Interop.MSG.message" /> 멤버의 값에 따라 달라집니다.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">메시지의 <paramref name="lParam" /> 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">메시지 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The message identifier.">메시지 식별자입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">메시지가 게시될 때 화면에 표시되는 커서 위치의 X 좌표를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">커서 위치의 X 좌표입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">메시지가 게시될 때 화면에 표시되는 커서 위치의 Y 좌표를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">커서 위치의 Y 좌표입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">메시지가 게시된 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The time that the message was posted.">메시지가 게시된 시간입니다.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">메시지에 대한 추가 정보를 지정하는 메시지의 <paramref name="wParam" /> 값을 가져오거나 설정합니다. 정확한 의미는 메시지의 값에 따라 달라집니다.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">메시지의 <paramref name="wParam" /> 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">
        <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> 및 <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">메시지 데이터를 포함하는 구조체입니다.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">WeakEvent 패턴 및 <see cref="T:System.Windows.WeakEventManager" />를 통해 이벤트를 수신해야 하는 클래스에 대해 이벤트 수신 대기를 지원합니다.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">중앙 집중화된 이벤트 관리자에서 이벤트를 수신합니다.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">이 메서드를 호출하는 <see cref="T:System.Windows.WeakEventManager" />의 형식입니다.</param>
      <param name="sender" vsli:raw="Object that originated the event.">이벤트를 발생시킨 개체입니다.</param>
      <param name="e" vsli:raw="Event data.">이벤트 데이터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">수신기가 이벤트를 처리했으면 <see langword="true" />입니다. 수신기가 처리하지 않는 이벤트에 대해 수신기를 등록하기 위해 WPF에서 처리하는 <see cref="T:System.Windows.WeakEventManager" />에서 오류로 간주합니다. 이와 관계없이 메서드는 인식하거나 처리하지 않는 이벤트를 수신하는 경우 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">속성 식별자 및 로컬로 설정된 종속성 속성에 대한 속성 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">두 개의 <see cref="T:System.Windows.LocalValueEntry" /> 인스턴스가 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">현재 <see cref="T:System.Windows.LocalValueEntry" />과 비교할 <see cref="T:System.Windows.LocalValueEntry" />입니다.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">이 <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> 구현에서는 <see cref="P:System.Windows.LocalValueEntry.Property" />의 값을 비교하며 필요한 경우 <see cref="P:System.Windows.LocalValueEntry.Value" />의 값을 비교합니다. <see cref="P:System.Windows.LocalValueEntry.Property" />의 <see cref="T:System.Windows.LocalValueEntry" /> 구성 요소는 값 형식이므로 항상 비트 비교가 수행됩니다. <see cref="P:System.Windows.LocalValueEntry.Value" /> 구성 요소의 경우 이 구현에서는 해당 구성 요소가 값 형식이면 비트 비교를 수행합니다. 참조 형식이 있는 로컬에서 설정한 속성의 경우에는 두 값에 대해 내부적으로 == 연산자만 사용되므로 동작은 해당 형식이 같은지 여부를 결정하는 메커니즘으로 지연됩니다. 기본적으로 값의 참조가 같은지 여부를 비교하므로 결과적으로는 전체 <see cref="T:System.Windows.LocalValueEntry" />의 참조가 같은지를 비교하게 됩니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">이 <see cref="T:System.Windows.LocalValueEntry" />의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">부호 있는 32비트 정수 값입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">지정된 <see cref="T:System.Windows.LocalValueEntry" /> 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj1" />
        <see cref="T:System.Windows.LocalValueEntry" />가 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">지정된 <see cref="T:System.Windows.LocalValueEnumerator" /> 인스턴스를 비교하여 다른지 여부를 확인합니다.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">비교할 첫 번째 인스턴스입니다.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">비교할 두 번째 인스턴스입니다.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">이 구현에서는 <see cref="P:System.Windows.LocalValueEntry.Property" />의 <see cref="P:System.Windows.LocalValueEntry.Value" /> 값과 <see cref="T:System.Windows.LocalValueEntry" /> 구성 요소의 값을 비교합니다. <see cref="P:System.Windows.LocalValueEntry.Property" />의 <see cref="T:System.Windows.LocalValueEntry" /> 구성 요소는 항상 값 형식이므로 이 비교는 항상 비트 비교입니다. <see cref="P:System.Windows.LocalValueEntry.Value" /> 구성 요소의 경우 이 구현에서는 해당 구성 요소가 값 형식이면 비트 비교를 수행합니다.
참조 형식이 있는 로컬에서 설정한 속성의 경우에는 두 값에 대해 내부적으로 <see langword="==" /> 연산자만 사용되므로 동작은 해당 형식이 같은지 여부를 결정하는 메커니즘으로 지연됩니다. 이는 기본적으로 값의 참조가 같은지 여부를 비교하는 작업입니다</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">이 항목에서 나타난 로컬로 설정된 종속성 속성의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">로컬로 설정된 종속성 속성의 식별자입니다.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">로컬에서 설정된 종속성 속성의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">로컬에서 설정된 종속성 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">
        <see cref="T:System.Windows.DependencyObject" />에 있는 종속성 속성의 로컬 값에 대해 열거형을 지원합니다.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">컬렉션에 표현된 항목 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of items in the collection.">컬렉션의 항목 수입니다.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">컬렉션의 현재 <see cref="T:System.Windows.LocalValueEntry" />입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">제공된 <see cref="T:System.Windows.LocalValueEnumerator" />가 이 <see cref="T:System.Windows.LocalValueEnumerator" />와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">현재 <see cref="T:System.Windows.LocalValueEnumerator" />과 비교할 <see cref="T:System.Windows.LocalValueEnumerator" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.LocalValueEnumerator" />와 같으면 <see cref="T:System.Windows.LocalValueEnumerator" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">현재 <see cref="T:System.Windows.LocalValueEnumerator" />의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">열거자를 컬렉션의 다음 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">지정된 두 <see cref="T:System.Windows.LocalValueEnumerator" /> 개체가 같은지 비교합니다.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">비교할 첫 번째 개체입니다.</param>
      <param name="obj2" vsli:raw="The second object to compare.">비교할 두 번째 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj1" />
        <see cref="T:System.Windows.LocalValueEnumerator" />가 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">지정된 두 <see cref="T:System.Windows.LocalValueEnumerator" /> 개체를 비교하여 다른지 여부를 확인합니다.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">비교할 첫 번째 개체입니다.</param>
      <param name="obj2" vsli:raw="The second object to compare.">비교할 두 번째 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인스턴스가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.Collections.IEnumerator.Current" />를 참조하십시오.</summary>
      <returns vsli:raw="The current element in the collection.">컬렉션의 현재 요소입니다.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">속성을 serialize하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">특성으로 serialize되어야 할 속성입니다.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">특성의 serialization 플래그를 지정합니다.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">속성이 serialize되는 방법을 지정합니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" />는 유효한 <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> 값이 아닙니다.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">특성에 설정된 <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />를 가져옵니다.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">serialization 옵션(열거형 값)입니다.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">내부 형식의 사용을 지원하기 위해 WPF XAML 컴파일러에서 내부적으로 사용되는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.InternalTypeHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">파생된(생성된) 클래스에서 재정의되는 경우 이벤트 처리기 대리자를 내부 이벤트에 연결합니다.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">이벤트에 대한 이벤트 정보입니다(CLR 리플렉션 정보).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">처리기가 연결되는 대상입니다.</param>
      <param name="handler" vsli:raw="The event handler.">이벤트 처리기입니다.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">파생된(생성된) 클래스에서 재정의되는 경우 public이 아닌 처리기 메서드를 참조하는 이벤트 대리자를 만듭니다.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">대리자의 <see cref="T:System.Type" />입니다.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">처리기가 연결되는 대상입니다.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">처리기 구현의 이름입니다.</param>
      <returns vsli:raw="The delegate reference.">대리자 참조입니다.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">파생된(생성된) 클래스에서 재정의되는 경우 내부 형식의 인스턴스를 만듭니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">만들 <see cref="T:System.Type" />입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
      <returns vsli:raw="The created instance.">만들어진 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">파생된(생성된) 클래스에서 재정의되는 경우 대상 개체의 내부 속성 값을 가져옵니다.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">가져올 속성에 대한 속성 정보입니다.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">필요한 속성 값을 보유한 개체입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
      <returns vsli:raw="The value of the property.">속성 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">파생된(생성된) 클래스에서 재정의되는 경우 대상 개체의 내부 속성 값을 설정합니다.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">설정할 속성에 대한 속성 정보입니다.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">필요한 속성 값을 보유한 개체입니다.</param>
      <param name="value" vsli:raw="The value to set.">설정할 값입니다.</param>
      <param name="culture" vsli:raw="Culture specific information.">문화권별 정보입니다.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">출력이 대상 속성과 다른 속성 유형인 태그 확장에서 식 또는 다른 클래스를 받을 수 있는 형식을 선언하는 데 사용하는 메커니즘을 제공합니다. .NET Framework 4 구현에 사용하지 마십시오.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">속성 값을 제공하는 태그 확장에 대한 처리를 제공합니다. .NET Framework 4 구현에는 사용하지 마십시오. <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />을 참조하십시오.</summary>
      <param name="property" vsli:raw="The name of the target property.">대상 속성의 이름입니다.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">들어오는 데이터의 태그 확장 인스턴스입니다.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">속성 값에 대한 태그 확장 데이터를 처리할 때 수행해야 하는 추가 서비스를 제공할 수 있습니다.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">개체 트리를 탐색하는 데 사용할 수 있는 개체를 나타내는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Windows.Markup.ValueSerializer" /> 클래스에 대한 루트 컨텍스트를 할당합니다.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">루트 컨텍스트를 할당할 <see cref="T:System.Windows.Markup.IValueSerializerContext" />입니다.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />와 연결된 특성을 가져옵니다.</summary>
      <returns vsli:raw="The collection of attributes.">특성 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />에서 나타내는 개체의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The instance of the object.">개체의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">파생 클래스에서 재정의되는 경우 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 인스턴스의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the object.">개체의 형식입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">파생 클래스에서 재정의되는 경우 XAML에 기록되어야 하는 이 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 인스턴스의 속성을 가져옵니다.</summary>
      <returns vsli:raw="The properties.">속성입니다.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">속성과 속성 값에 대한 액세스를 캡슐화하는 태그에 쓰는 동안 사용할 속성 설명을 제공하는 추상 클래스입니다.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />와 연결된 특성을 가져옵니다.</summary>
      <returns vsli:raw="The collection of attributes.">특성 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">파생 클래스에서 재정의되는 경우 마크업 속성이 종속성 속성으로 구현되면 해당 속성에 대한 <see cref="T:System.Windows.DependencyProperty" /> 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The dependency property identifier.">종속성 속성의 식별자입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 연결된 <see cref="T:System.Windows.DependencyProperty" />인지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 연결된 <see cref="T:System.Windows.DependencyProperty" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 복합 속성인지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 속성이 복합 속성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 생성자 인수를 나타내는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 속성이 데이터 생성자 인수를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 컬렉션의 직접 콘텐츠를 나타내는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 직접 콘텐츠를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 사전에 항목을 저장하기 위해 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />에서 사용한 키를 나타내는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 키를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 속성의 인스턴스를 만들기 위해 형식 변환기에 전달된 텍스트를 나타내는지 여부 또는 생성자를 사용해야 하는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 문자열을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">파생 클래스에서 재정의되는 경우 이 속성의 값을 구성하는 항목을 가져옵니다.</summary>
      <returns vsli:raw="The items that make up the value of this property.">이 속성의 값을 구성하는 항목입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">파생 클래스에서 재정의되는 경우 진단 및 오류 보고에 사용되는 이름을 가져옵니다.</summary>
      <returns vsli:raw="The identifier property name.">식별자 속성 이름입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">파생 클래스에서 재정의되는 경우 태그 속성에 대한 <see cref="T:System.ComponentModel.PropertyDescriptor" />를 가져옵니다.</summary>
      <returns vsli:raw="The property descriptor.">속성 설명자입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">파생 클래스에서 재정의된 경우 속성의 CLR 형식을 가져옵니다.</summary>
      <returns vsli:raw="The CLR type.">CLR 형식입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">파생된 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />의 문자열 값을 가져옵니다.</summary>
      <returns vsli:raw="The string value.">문자열 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">파생 클래스에서 재정의되는 경우 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />가 자신의 값을 문자열로 serialize할 때 참조할 형식 집합을 가져옵니다.</summary>
      <returns vsli:raw="The set of types.">형식 집합입니다.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">파생된 클래스에 재정의될 때 이 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />의 현재 값을 가져옵니다.</summary>
      <returns vsli:raw="The current value.">현재 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">서비스를 추가하는 메서드를 사용하여 <see cref="T:System.IServiceProvider" /> 인터페이스에 대한 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">
        <see cref="T:System.Windows.Markup.ServiceProviders" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">서비스를 목록에 추가합니다.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">새 서비스의 서비스 형식입니다.</param>
      <param name="service" vsli:raw="The service implementation class.">서비스 구현 클래스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> 또는 <paramref name="service" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">이미 사전에 있는 서비스를 추가하려고 시도했습니다.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">지정된 형식의 서비스 개체를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">가져올 서비스 개체의 형식입니다.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">
        <paramref name="serviceType" /> 형식의 서비스 구현입니다. <paramref name="serviceType" /> 형식에 대해 저장된 서비스가 없는 경우 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" /> 인스턴스를 <see cref="T:System.Windows.Media.Matrix" /> 인스턴스로 변환하거나 그 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">지정된 <see cref="T:System.String" />을 <see cref="T:System.Windows.Media.Matrix" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">변환을 위해 확인할 문자열입니다.</param>
      <param name="context" vsli:raw="Context information used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값을 변환할 수 있으면 <see langword="true" />이고, 변환할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Media.Matrix" />의 인스턴스를 <see cref="T:System.String" />으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">변환을 위해 확인할 <see cref="T:System.Windows.Media.Matrix" />의 인스턴스입니다.</param>
      <param name="context" vsli:raw="Context information used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />를 <see cref="T:System.String" />으로 변환할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">
        <paramref name="value" />가 <see cref="T:System.Windows.Media.Int32Collection" />이 아닌 경우 발생한 경우</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" />을 <see cref="T:System.Windows.Media.Matrix" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" />로 변환할 <see cref="T:System.Windows.Media.Matrix" /> 값입니다.</param>
      <param name="context" vsli:raw="Context information used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">지정된 <paramref name="value" />을 기반으로 하는 <see cref="T:System.Windows.Media.Matrix" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Windows.Media.Matrix" />의 인스턴스를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">변환을 위해 확인할 <see cref="T:System.Windows.Media.Matrix" />의 인스턴스입니다.</param>
      <param name="context" vsli:raw="Context information used for conversion.">변환에 사용되는 컨텍스트 정보입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">제공된 <see cref="T:System.String" /> 개체의 <see cref="T:System.Windows.Media.Matrix" /> 표현입니다.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">WPF 애플리케이션에서 모든 사용자 인터페이스 요소에 대해 dpi(인치당 도트 수) 인식 기능을 비활성화할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">2-D 공간에서의 변형에 사용되는 3x3 유사 변형 매트릭스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">
        <see cref="T:System.Windows.Media.Matrix" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">새 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 <see cref="P:System.Windows.Media.Matrix.M11" /> 계수입니다.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">새 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 <see cref="P:System.Windows.Media.Matrix.M12" /> 계수입니다.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">새 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 <see cref="P:System.Windows.Media.Matrix.M21" /> 계수입니다.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">새 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 <see cref="P:System.Windows.Media.Matrix.M22" /> 계수입니다.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">새 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 계수입니다.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">새 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 계수입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 뒤에 추가합니다.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 뒤에 추가할 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 행렬식을 가져옵니다.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />의 행렬식입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정한 <see cref="T:System.Object" />가 이 <see cref="T:System.Windows.Media.Matrix" />와 같은 <see cref="T:System.Windows.Media.Matrix" /> 구조체인지 여부를 결정합니다.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="o" />가 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체와 같은 <see cref="T:System.Windows.Media.Matrix" /> 구조체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">지정한 <see cref="T:System.Windows.Media.Matrix" /> 구조체가 이 인스턴스와 같은지 여부를 결정합니다.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">이 인스턴스와 비교할 <see cref="T:System.Windows.Media.Matrix" />의 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인스턴스가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">지정한 두 <see cref="T:System.Windows.Media.Matrix" /> 구조체가 같은지 여부를 결정합니다.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">비교할 첫 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">비교할 두 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="matrix1" />과 <paramref name="matrix2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for this instance.">이 인스턴스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 반전할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Media.Matrix" />에 역이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">항등 <see cref="T:System.Windows.Media.Matrix" />를 가져옵니다.</summary>
      <returns vsli:raw="An identity matrix.">항등 행렬입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 반전합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">
        <see cref="T:System.Windows.Media.Matrix" /> 구조체를 반전할 수 없는 경우</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체가 항등 행렬인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Media.Matrix" /> 구조체가 항등 행렬이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 첫 번째 행과 첫 번째 열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">이 <see cref="T:System.Windows.Media.Matrix" />의 첫 번째 행과 첫 번째 열 값입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 첫 번째 행과 두 번째 열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">이 <see cref="T:System.Windows.Media.Matrix" />의 첫 번째 행과 첫 번째 열 값입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 두 번째 행과 첫 번째 열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">이 <see cref="T:System.Windows.Media.Matrix" />의 두 번째 행과 첫 번째 열 값입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 두 번째 행과 두 번째 열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 두 번째 행과 두 번째 열 값입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">
        <see cref="T:System.Windows.Media.Matrix" /> 구조체에 다른 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 곱합니다.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">곱할 첫 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">곱할 두 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">
        <paramref name="trans1" />에 <paramref name="trans2" />를 곱한 결과입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 세 번째 행과 첫 번째 열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 세 번째 행과 첫 번째 열 값입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 세 번째 행과 두 번째 열 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 세 번째 행과 두 번째 열 값입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">지정한 두 <see cref="T:System.Windows.Media.Matrix" /> 구조체가 같은지 여부를 결정합니다.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">비교할 첫 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">비교할 두 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="matrix1" />과 <paramref name="matrix2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">지정한 두 <see cref="T:System.Windows.Media.Matrix" /> 구조체가 같지 않은지 여부를 결정합니다.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">비교할 첫 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">비교할 두 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="matrix1" />과 <paramref name="matrix2" />가 같지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">
        <see cref="T:System.Windows.Media.Matrix" /> 구조체에 다른 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 곱합니다.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">곱할 첫 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">곱할 두 번째 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">
        <paramref name="trans1" />에 <paramref name="trans2" />를 곱한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">매트릭스의 <see cref="T:System.String" /> 표현을 해당 <see cref="T:System.Windows.Media.Matrix" /> 구조체로 변환합니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">매트릭스의 <see cref="T:System.String" /> 표현입니다.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">해당 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가합니다.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가할 <see cref="T:System.Windows.Media.Matrix" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">원점을 기준으로 지정한 각도만큼 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체에 회전을 적용합니다.</summary>
      <param name="angle" vsli:raw="The angle of rotation.">회전 각도입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">지정한 점을 기준으로 이 매트릭스를 회전합니다.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">이 매트릭스를 회전할 각도(도)입니다.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">이 매트릭스를 회전할 때 기준으로 사용할 점의 X 좌표입니다.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">이 매트릭스를 회전할 때 기준으로 사용할 점의 Y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 점을 기준으로 하는 지정한 각도의 회전을 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가합니다.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">회전 각도(도)입니다.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">회전 중심의 X 좌표입니다.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">회전 중심의 Y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 각도의 회전을 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가합니다.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">앞에 추가할 회전 각도입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 배율 벡터를 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 뒤에 추가합니다.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">X축 방향으로 이 <see cref="T:System.Windows.Media.Matrix" />의 배율을 조정할 값입니다.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Y축 방향으로 이 <see cref="T:System.Windows.Media.Matrix" />의 배율을 조정할 값입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">지정한 점을 기준으로 지정한 크기만큼 이 <see cref="T:System.Windows.Media.Matrix" />의 배율을 조정합니다.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">X축 방향으로 이 <see cref="T:System.Windows.Media.Matrix" />의 배율을 조정할 크기입니다.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Y축 방향으로 이 <see cref="T:System.Windows.Media.Matrix" />의 배율을 조정할 크기입니다.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">배율 조정 작업의 중심점의 X 좌표입니다.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">배율 조정 작업의 중심점의 Y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정한 점을 기준으로 하는 지정한 배율 조정을 이 <see cref="T:System.Windows.Media.Matrix" /> 앞에 추가합니다.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">X축 배율 인수입니다.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Y축 배율 인수입니다.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">배율 조정 작업을 수행할 때 기준으로 사용할 점의 X 좌표입니다.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">배율 조정 작업을 수행할 때 기준으로 사용할 점의 Y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 배율 벡터를 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가합니다.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">X축 방향으로 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 배율을 조정할 값입니다.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">Y축 방향으로 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체의 배율을 조정할 값입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">이 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 항등 매트릭스로 변경합니다.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">X축 및 Y축 방향의 지정한 각도의 기울이기를 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 뒤에 추가합니다.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 기울일 X축 방향의 각도입니다.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 기울일 Y축 방향의 각도입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">X축 및 Y축 방향의 지정한 각도의 기울이기를 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가합니다.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 기울일 X축 방향의 각도입니다.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 기울일 Y축 방향의 각도입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">사용할 형식입니다.
또는
<see cref="T:System.IFormattable" /> 구현의 형식에 대해 정의된 기본 형식을 사용하려는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">값의 형식을 지정하는 데 사용할 공급자입니다.
또는
운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오려는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">지정된 형식의 현재 인스턴스 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">이 <see cref="T:System.String" /> 구조체의 <see cref="T:System.Windows.Media.Matrix" /> 표현을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.String" />의 <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 및 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 값이 포함된 <see cref="T:System.Windows.Media.Matrix" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">문화권별 형식 지정 정보를 사용하여 이 <see cref="T:System.String" /> 구조체의 <see cref="T:System.Windows.Media.Matrix" /> 표현을 만듭니다.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">문화권별 형식 지정 정보입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.String" />의 <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 및 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 값이 포함된 <see cref="T:System.Windows.Media.Matrix" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">
        <see cref="T:System.Windows.Media.Matrix" />를 사용하여 지정한 점을 변환한 다음 결과를 반환합니다.</summary>
      <param name="point" vsli:raw="The point to transform.">변형할 점입니다.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 사용하여 <paramref name="point" />를 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 사용하여 지정한 점을 변환합니다.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">변환할 점입니다. 배열의 원래 지점은 해당 변환 값으로 대체됩니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 사용하여 지정한 벡터를 변환합니다.</summary>
      <param name="vector" vsli:raw="The vector to transform.">변형할 벡터입니다.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 사용하여 <paramref name="vector" />를 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 사용하여 지정한 벡터를 변환합니다.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">변환할 벡터입니다. 배열의 원래 벡터는 해당 변환 값으로 대체됩니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 오프셋 변환을 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 뒤에 추가합니다.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">X축을 기준으로 이 <see cref="T:System.Windows.Media.Matrix" />를 오프셋할 크기입니다.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Y축을 기준으로 이 <see cref="T:System.Windows.Media.Matrix" />를 오프셋할 크기입니다.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정한 오프셋 변환을 이 <see cref="T:System.Windows.Media.Matrix" /> 구조체 앞에 추가합니다.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">X축을 기준으로 이 <see cref="T:System.Windows.Media.Matrix" />를 오프셋할 크기입니다.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Y축을 기준으로 이 <see cref="T:System.Windows.Media.Matrix" />를 오프셋할 크기입니다.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">다른 형식의 인스턴스를 <see cref="T:System.Windows.Media.Matrix" />으로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">
        <see cref="T:System.Windows.Media.MatrixConverter" />의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">개체를 특정 형식에서 <see cref="T:System.Windows.Media.Matrix" />의 인스턴스로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context" vsli:raw="The context information of a type.">형식에 대한 컨텍스트 정보입니다.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">변환을 위해 확인할 소스 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식을 <see cref="T:System.Windows.Media.Matrix" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">
        <see cref="T:System.Windows.Media.Matrix" />의 인스턴스를 다른 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="The context information of a type.">형식에 대한 컨텍스트 정보입니다.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">변환을 위해 이 <see cref="T:System.Windows.Media.Matrix" />를 확인 중인 원하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />를 <paramref name="destinationType" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정된 개체를 <see cref="T:System.Windows.Media.Matrix" />로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="The context information of a type.">형식에 대한 컨텍스트 정보입니다.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">변환되는 유형의 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value" vsli:raw="The object being converted.">변환되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 변환하여 만드는 <see cref="T:System.Windows.Media.Matrix" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정한 개체가 null이거나 <see cref="T:System.Windows.Media.Matrix" />로 변환할 수 없는 형식인 경우</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">
        <see cref="T:System.Windows.Media.Matrix" />를 지정된 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="The context information of a type.">형식에 대한 컨텍스트 정보입니다.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">변환되는 유형의 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">변환할 <see cref="T:System.Windows.Media.Matrix" />입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">이 <see cref="T:System.Windows.Media.Matrix" />을 변환할 대상 형식입니다.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">이 <see cref="T:System.Windows.Media.Matrix" />을 변환하여 만드는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">
        <paramref name="value" />가 null이거나 <see cref="T:System.Windows.Media.Matrix" />가 아닌 경우 또는 <paramref name="destinationType" />이 올바른 변환 형식이 아닌 경우</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">
        <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 클래스에서 지원하는 형식 지정 메서드를 정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">
        <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />가 GDI 호환 글꼴 메트릭을 사용하여 텍스트를 레이아웃함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">
        <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />가 이상적인 글꼴 메트릭을 사용하여 텍스트를 레이아웃함을 나타냅니다.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">이름-개체 매핑을 특정 XAML 이름 범위에 저장하거나 검색하는 <see cref="T:System.Windows.Markup.INameScope" /> 메서드에 대한 기본 WPF 지원을 구현합니다. 요소 수준에서 더 간단하게 XAML 이름 범위 이름을 동적으로 가져오거나 설정할 수 있도록 연결된 속성 지원을 추가합니다.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">
        <see cref="T:System.Windows.NameScope" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">컬렉션에 항목을 추가합니다.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">XAML 이름 범위에 추가할 이름 매핑을 나타내는 <see cref="T:System.Collections.Generic.KeyValuePair`2" />(키는 <see cref="T:System.String" />, 값은 <see cref="T:System.Object" />)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="item" />의 구성 요소 중 하나 또는 둘 다 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">컬렉션에 항목을 추가합니다.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">추가할 XAML 이름 범위 매핑의 이름이 되는 문자열 키입니다.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">추가할 XAML 이름 범위 매핑의 개체 참조가 되는 개체 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">컬렉션에서 모든 항목을 제거합니다.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">컬렉션에 지정된 항목이 포함되는지 여부를 확인합니다.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" />(키는 <see cref="T:System.String" />, 값은 <see cref="T:System.Object" />)로 지정된, 컬렉션에서 찾을 항목입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">지정한 <see cref="T:System.Collections.Generic.KeyValuePair`2" />가 <see cref="T:System.Windows.NameScope" />의 기존 매핑을 식별하면 <see langword="true" />입니다. 지정한 <see cref="T:System.Collections.Generic.KeyValuePair`2" />가 현재 <see cref="T:System.Windows.NameScope" />에 존재하지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">제공된 이름이 이 <see cref="T:System.Windows.NameScope" />에 이미 존재하는지 여부를 반환합니다.</summary>
      <param name="key" vsli:raw="The string key to find.">찾을 문자열 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">지정한 <paramref name="key" />가 이 <see cref="T:System.Windows.NameScope" />의 기존 매핑에 대한 이름을 식별하면 <see langword="true" />입니다. 지정한 <paramref name="key" />가 현재 <see cref="T:System.Windows.NameScope" />에 존재하지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">특정 배열 인덱스부터 시작하여 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">컬렉션에서 복사된 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">이 <see cref="T:System.Windows.NameScope" />의 매핑된 이름 컬렉션에 있는 항목 수를 반환합니다.</summary>
      <returns vsli:raw="The number of items in the collection.">컬렉션의 항목 수입니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">제공된 이름 문자열을 기준으로 이 <see cref="T:System.Windows.NameScope" />에 의해 유지되는 XAML 이름 범위의 해당 개체를 반환합니다.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">개체 부분을 검색할 기존 매핑의 이름 부분입니다.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">
        <paramref name="name" />과 매핑되어 있는 요청된 개체입니다. <paramref name="name" />이 <see langword="null" /> 또는 빈 문자열로 제공되었거나 일치하는 개체가 없으면 <see langword="null" />을 반환할 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">
        <see cref="P:System.Windows.NameScope.NameScope" /> 연결된 속성에 대한 연결된 속성의 get 접근자를 제공합니다.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">XAML 이름 범위를 가져올 개체입니다.</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">
        <see cref="T:System.Windows.Markup.INameScope" /> 인스턴스로 사용되는 XAML 이름 범위입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">항상 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">지정된 키를 가진 항목을 가져오거나 설정합니다.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">가져오거나 설정할 XAML 이름 매핑에 대한 문자열 이름입니다.</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />로 제공된 XAML 이름을 기준으로 매핑되어 있는 개체의 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" />는 <see langword="null" />로 제공됩니다.
또는
<paramref name="value" />는 설정 작업을 위해 <see langword="null" />로 제공합니다.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">
        <see cref="T:System.Windows.NameScope" /> 사전에 있는 키의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">
        <see cref="T:System.Windows.NameScope" /> 사전에 있는 키의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">동적으로 연결된 <see cref="T:System.Windows.NameScope" /> 인스턴스를 가져오거나 설정합니다.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">
        <see cref="P:System.Windows.NameScope.NameScope" /> 연결된 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">현재 XAML 이름 범위에 새 이름-개체 쌍을 등록합니다.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">지정된 개체를 매핑하는 데 사용할 이름입니다.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">지정된 이름에 매핑할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 또는 <paramref name="scopedElement" />가 <see langword="null" />로 제공되었습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">
        <paramref name="name" />이 빈 문자열로 제공된 경우
또는
제공된 <paramref name="name" />에 XAML 이름에 대해 유효하지 않은 문자가 포함되어 있어 파서에서 거부된 경우
또는
제공된 <paramref name="name" />으로 인해 이름 등록이 중복됩니다.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">컬렉션에서 특정 개체를 제거합니다.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" />(키는 <see cref="T:System.String" />, 값은 <see cref="T:System.Object" />)로 지정된, 컬렉션에서 제거할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">항목이 컬렉션에서 제거된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 항목을 컬렉션에서 찾을 수 없는 경우에도 <see langword="false" />가 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">컬렉션에서 지정된 이름의 매핑을 제거합니다.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">제거할 XAML 이름 범위 매핑의 이름이 되는 문자열 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">항목이 컬렉션에서 제거된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 항목을 컬렉션에서 찾을 수 없는 경우에도 <see langword="false" />가 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">
        <see cref="P:System.Windows.NameScope.NameScope" /> 연결된 속성에 대한 연결된 속성의 set 접근자를 제공합니다.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">XAML 이름 범위를 변경할 개체입니다.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">인터페이스 캐스트를 사용하는 새 XAML 이름 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">컬렉션을 반복하는 열거자입니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">컬렉션을 반복하는 열거자입니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">지정한 키와 연결된 값을 가져옵니다.</summary>
      <param name="key" vsli:raw="The key of the value to get.">가져올 값의 키입니다.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값을 포함하고, 그렇지 않으면 null 개체를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="key" />로 제공된 이름에 대한 매핑이 <see cref="T:System.Windows.NameScope" />에 들어 있으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">XAML 이름 범위에서 이름-개체 매핑을 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">제거할 매핑의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">
        <paramref name="name" />이 빈 문자열로 제공된 경우
또는
제공된 <paramref name="name" />이 등록되지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">
        <see cref="T:System.Windows.NameScope" /> 사전에 있는 값의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">
        <see cref="T:System.Windows.NameScope" /> 사전에 있는 값의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">2차원 공간에서 x 및 y 좌표 쌍을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">지정된 좌표가 들어 있는 새 <see cref="T:System.Windows.Point" /> 구조체를 만듭니다.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">새 <see cref="T:System.Windows.Point" /> 구조체의 X 좌표입니다.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">새 <see cref="T:System.Windows.Point" /> 구조체의 Y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.Windows.Vector" />에 <see cref="T:System.Windows.Point" />를 추가하고 그 결과를 <see cref="T:System.Windows.Point" /> 구조체로 반환합니다.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">추가할 <see cref="T:System.Windows.Point" /> 구조체입니다.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">추가할 <see cref="T:System.Windows.Vector" /> 구조체입니다.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" />과 <paramref name="vector" />의 합을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 <see cref="T:System.Object" />가 <see cref="T:System.Windows.Point" />인지 여부와 이 <see cref="T:System.Windows.Point" />와 동일한 좌표가 들어 있는지 여부를 확인합니다.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="o" />가 <see cref="T:System.Windows.Point" />이고 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 이 <see cref="T:System.Windows.Point" />와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">이 인스턴스와 비교할 점입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Windows.Point" /> 구조체의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
      <param name="point1" vsli:raw="The first point to compare.">비교할 첫 번째 점입니다.</param>
      <param name="point2" vsli:raw="The second point to compare.">비교할 두 번째 점입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="point1" />과 <paramref name="point2" />의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">이 <see cref="T:System.Windows.Point" />의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">이 <see cref="T:System.Windows.Point" /> 구조체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">지정된 <see cref="T:System.Windows.Point" /> 구조체로 지정된 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 변환합니다.</summary>
      <param name="point" vsli:raw="The point to transform.">변형할 점입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변환 행렬입니다.</param>
      <returns vsli:raw="The transformed point.">변환된 점입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">점의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표를 지정된 크기만큼 오프셋합니다.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">지정된 점의 <see cref="P:System.Windows.Point.X" /> 좌표를 오프셋할 크기입니다.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">지정된 점의 <see cref="P:System.Windows.Point.Y" /> 좌표를 오프셋할 크기입니다.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">지정된 <see cref="T:System.Windows.Point" />에 따라 지정된 <see cref="T:System.Windows.Vector" />를 변환한 다음 결과를 반환합니다.</summary>
      <param name="point" vsli:raw="The point to translate.">변환할 점입니다.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">
        <paramref name="point" />를 변환할 크기입니다.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">지정된 벡터에 따라 지정된 점을 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">비교할 첫 번째 <see cref="T:System.Windows.Point" /> 구조체입니다.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">비교할 두 번째 <see cref="T:System.Windows.Point" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="point1" />과 <paramref name="point2" />의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표가 모두 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">
        <see cref="T:System.Windows.Size" />가 이 점의 <see cref="P:System.Windows.Size.Width" /> 값과 같고 <see cref="P:System.Windows.Point.X" />가 이 점의 <see cref="P:System.Windows.Size.Height" /> 값과 같은 <see cref="P:System.Windows.Point.Y" /> 구조체를 만듭니다.</summary>
      <param name="point" vsli:raw="The point to convert.">변환할 점입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">
        <see cref="T:System.Windows.Size" />가 이 점의 <see cref="P:System.Windows.Size.Width" /> 값과 같고 <see cref="P:System.Windows.Point.X" />가 이 점의 <see cref="P:System.Windows.Size.Height" /> 값과 같은 <see cref="P:System.Windows.Point.Y" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">
        <see cref="T:System.Windows.Vector" /> 값이 점의 <see cref="P:System.Windows.Vector.X" /> 값과 같고 <see cref="P:System.Windows.Point.X" /> 값이 점의 <see cref="P:System.Windows.Vector.Y" /> 값과 같은 <see cref="P:System.Windows.Point.Y" /> 구조체를 만듭니다.</summary>
      <param name="point" vsli:raw="The point to convert.">변환할 점입니다.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">
        <see cref="P:System.Windows.Vector.X" /> 값이 점의 <see cref="P:System.Windows.Point.X" /> 값과 같고 <see cref="P:System.Windows.Vector.Y" /> 값이 점의 <see cref="P:System.Windows.Point.Y" /> 값과 같은 벡터입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">두 <see cref="T:System.Windows.Point" /> 구조체가 다른지 여부를 비교합니다.</summary>
      <param name="point1" vsli:raw="The first point to compare.">비교할 첫 번째 점입니다.</param>
      <param name="point2" vsli:raw="The second point to compare.">비교할 두 번째 점입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">
        <paramref name="point1" /> 및 <paramref name="point2" />에 다른 <see cref="P:System.Windows.Point.X" /> 또는 <see cref="P:System.Windows.Point.Y" /> 좌표가 있으면 <see langword="true" />이고, <paramref name="point1" /> 및 <paramref name="point2" />에 동일한 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표가 있이면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정된 <see cref="T:System.Windows.Point" />에 따라 지정된 <see cref="T:System.Windows.Media.Matrix" />를 변환합니다.</summary>
      <param name="point" vsli:raw="The point to transform.">변형할 점입니다.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">변형 행렬입니다.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">지정된 매트릭스를 사용하여 지정된 점을 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">또 다른 지정된 <see cref="T:System.Windows.Point" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 그 차이를 <see cref="T:System.Windows.Vector" />로 반환합니다.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">
        <paramref name="point2" />를 빼는 점입니다.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">
        <paramref name="point1" />에서 뺄 점입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">
        <paramref name="point1" />와 <paramref name="point2" />의 차이입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 <see cref="T:System.Windows.Vector" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 결과 <see cref="T:System.Windows.Point" />를 반환합니다.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">
        <paramref name="vector" />를 빼는 점입니다.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">
        <paramref name="point1" />에서 뺄 벡터입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" />와 <paramref name="vector" />의 차이입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">지정된 <see cref="T:System.Windows.Point" />에서 <see cref="T:System.String" />를 생성합니다.</summary>
      <param name="source" vsli:raw="A string representation of a point.">점에 대한 문자열 표현입니다.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">해당 <see cref="T:System.Windows.Point" /> 구조체입니다.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" />가 두 개의 쉼표 또는 공백으로 구분된 Double 값으로 구성되어 있지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" />에 두 개의 숫자가 포함되어 있지 않은 경우
또는
<paramref name="source" />에 구분 기호가 너무 많은 경우</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">또 다른 지정된 <see cref="T:System.Windows.Point" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 그 차이를 <see cref="T:System.Windows.Vector" />로 반환합니다.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">
        <paramref name="point2" />를 빼는 점입니다.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">
        <paramref name="point1" />에서 뺄 점입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">
        <paramref name="point1" />와 <paramref name="point2" />의 차이입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 <see cref="T:System.Windows.Vector" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 결과 <see cref="T:System.Windows.Point" />를 반환합니다.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">
        <paramref name="vector" />를 빼는 점입니다.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">
        <paramref name="vector" />에서 뺄 <paramref name="point" />입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" />와 <paramref name="vector" />의 차이입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하며 코드에서 직접 사용할 수 없습니다. 이 멤버에 대한 설명은 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />를 참조하십시오.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">사용할 형식을 지정하는 문자열입니다.
또는
<see cref="T:System.IFormattable" /> 구현 형식에 대해 정의된 기본 형식을 사용하기 위한 <see langword="null" />입니다.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">값의 형식을 지정하는 데 사용할 <see langword="IFormatProvider" />입니다.
또는
운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 <see langword="null" />입니다.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">지정된 형식의 현재 인스턴스 값이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">이 <see cref="T:System.String" />의 <see cref="T:System.Windows.Point" /> 표현을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">이 <see cref="T:System.String" /> 구조체의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 포함된 <see cref="T:System.Windows.Point" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">이 <see cref="T:System.String" />의 <see cref="T:System.Windows.Point" /> 표현을 만듭니다.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">문화권별 형식 지정 정보입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">이 <see cref="T:System.String" /> 구조체의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 포함된 <see cref="T:System.Windows.Point" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">이 <see cref="P:System.Windows.Point.X" /> 구조체의 <see cref="T:System.Windows.Point" /> 좌표 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">이 <see cref="P:System.Windows.Point.X" /> 구조체의 <see cref="T:System.Windows.Point" /> 좌표 값입니다.  기본값은 <c>0</c>합니다.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">이 <see cref="P:System.Windows.Point.Y" />의 <see cref="T:System.Windows.Point" /> 좌표 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">이 <see cref="P:System.Windows.Point.Y" /> 구조체의 <see cref="T:System.Windows.Point" /> 좌표 값입니다.  기본값은 <c>0</c>합니다.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">다른 형식의 인스턴스를 <see cref="T:System.Windows.Point" />으로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.PointConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">개체를 지정된 형식에서 <see cref="T:System.Windows.Point" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">변환을 위해 확인할 소스 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식을 <see cref="T:System.Windows.Point" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">
        <see cref="T:System.Windows.Point" />의 인스턴스를 다른 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">변환을 위해 이 <see cref="T:System.Windows.Point" />를 확인 중인 원하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Windows.Point" />를 <paramref name="destinationType" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 개체를 <see cref="T:System.Windows.Point" />로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">변환 도중 적용할 문화권 정보입니다.</param>
      <param name="value" vsli:raw="The object being converted.">변환되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 변환하여 만드는 <see cref="T:System.Windows.Point" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">지정된 개체가 NULL이거나 <see cref="T:System.Windows.Point" />으로 변환할 수 없는 형식인 경우</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">
        <see cref="T:System.Windows.Point" />를 지정된 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">변환 도중 적용할 문화권 정보입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">변환할 <see cref="T:System.Windows.Point" />입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">이 <see cref="T:System.Windows.Point" />을 변환할 대상 형식입니다.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">이 <see cref="T:System.Windows.Point" />을 변환하여 만드는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" />가 <see langword="null" />이거나 <see cref="T:System.Windows.Point" />이 아니거나 <paramref name="destinationType" />이 변환 가능한 형식 중 하나가 아닌 경우</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">종속성 속성의 유효한 속성 값이 변경될 때 호출되는 콜백을 나타냅니다.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">속성 값이 변경된 <see cref="T:System.Windows.DependencyObject" />입니다.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">이 속성의 유효 값에 대한 변경 내용을 추적하는 이벤트에서 발급되는 이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">등록하는 조건을 포함하여 특정 형식에 적용될 때 종속성 속성의 특정 동작 측면을 정의합니다.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">
        <see cref="T:System.Windows.PropertyMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">이 메타데이터가 적용될 종속성 속성에 대한 지정된 기본값을 사용하여 <see cref="T:System.Windows.PropertyMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">종속성 속성에 대해 지정할 기본값이며, 일반적으로 특정 형식의 값으로 제공됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" />는 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 값으로 설정할 수 없습니다.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">제공된 기본값 및 <see cref="T:System.Windows.PropertyMetadata" /> 구현 참조를 사용하여 <see cref="T:System.Windows.PropertyChangedCallback" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">종속성 속성의 기본값이며, 일반적으로 특정 형식의 값으로 제공됩니다.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">속성의 유효 값이 변경될 때마다 속성 시스템에서 호출할 처리기 구현에 대한 참조입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" />는 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 값으로 설정할 수 없습니다.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">지정된 기본값 및 콜백을 사용하여 <see cref="T:System.Windows.PropertyMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">종속성 속성의 기본값이며, 일반적으로 특정 형식의 값으로 제공됩니다.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">속성의 유효 값이 변경될 때마다 속성 시스템에서 호출할 처리기 구현에 대한 참조입니다.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">속성 시스템에서 이 속성에 대해 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />를 호출할 때마다 호출되는 처리기 구현에 대한 참조입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" />는 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 값으로 설정할 수 없습니다.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">지정된 <see cref="T:System.Windows.PropertyMetadata" /> 구현 참조를 사용하여 <see cref="T:System.Windows.PropertyChangedCallback" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">속성의 유효 값이 변경될 때마다 속성 시스템에서 호출할 처리기 구현에 대한 참조입니다.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">이 메타데이터에 지정되어 있는 <see cref="T:System.Windows.CoerceValueCallback" /> 구현에 대한 참조를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">
        <see cref="T:System.Windows.CoerceValueCallback" /> 구현 참조입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">종속성 속성 작업에 적용된 후에는 메타데이터 속성을 설정할 수 없습니다.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">종속성 속성의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">속성의 기본값입니다. 기본 값을 <see cref="T:System.Windows.PropertyMetadata" /> 매개 변수가 없는 생성자를 사용 하 여 만든 인스턴스 수 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">만든 후에는 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 값으로 설정할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">종속성 속성 작업에 적용된 후에는 메타데이터 속성을 설정할 수 없습니다.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">메타데이터가 속성에 적용되어 해당 메타데이터 인스턴스가 변경될 수 없는 상태가 되었는지 여부를 결정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메타데이터 인스턴스를 변경할 수 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">이 메타데이터를 기본 메타데이터와 병합합니다.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">이 인스턴스의 값과 병합할 기본 메타데이터입니다.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">이 메타데이터를 적용하는 종속성 속성입니다.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">이 메타데이터가 속성에 적용되어 메타데이터가 봉인될 때 호출됩니다.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">메타데이터를 적용한 종속성 속성입니다.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">형식별 메타데이터인 경우 이 메타데이터에 연결된 형식입니다. 기본 메타데이터의 경우 이 값은 null 참조입니다.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">이 메타데이터에 지정되어 있는 <see cref="T:System.Windows.PropertyChangedCallback" /> 구현에 대한 참조를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">
        <see cref="T:System.Windows.PropertyChangedCallback" /> 구현 참조입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">종속성 속성 작업에 적용된 후에는 메타데이터 속성을 설정할 수 없습니다.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">사각형의 너비, 높이 및 위치를 설명합니다.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">지정된 x좌표, y좌표, 너비 및 높이를 갖는 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이의 X 좌표입니다.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이의 y 좌표입니다.</param>
      <param name="width" vsli:raw="The width of the rectangle.">사각형의 너비입니다.</param>
      <param name="height" vsli:raw="The height of the rectangle.">사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" />가 음의 값입니다.
또는
<paramref name="height" />가 음의 값입니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">지정된 두 지점을 정확히 포함할 수 있는 크기의 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">새 사각형에 들어 있어야 하는 첫 번째 지점입니다.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">새 사각형에 들어 있어야 하는 두 번째 지점입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">지정된 왼쪽 위 모퉁이 좌표 및 지정된 너비와 높이를 갖는 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이 위치를 지정하는 지점입니다.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">사각형의 너비와 높이를 지정하는 <see cref="T:System.Windows.Size" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">지정된 지점 및 지정된 지점과 지정된 벡터의 합을 정확히 포함할 수 있는 크기의 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">사각형에 들어 있어야 하는 지점입니다.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">지정된 지점에 대한 오프셋 거리입니다. 결과 사각형은 두 지점을 정확히 포함할 수 있는 크기입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">지정된 크기를 가지며 위치가 (0,0)인 <see cref="T:System.Windows.Rect" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">사각형의 너비와 높이를 지정하는 <see cref="T:System.Windows.Size" /> 구조체입니다.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">사각형 아래쪽의 y축 값을 가져옵니다.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">사각형 아래쪽의 y축 값입니다. 사각형이 비어 있으면 값이 <see cref="F:System.Double.NegativeInfinity" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">사각형의 왼쪽 아래 모퉁이 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">사각형의 왼쪽 아래 모퉁이 위치입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">사각형의 오른쪽 아래 모퉁이 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">사각형의 오른쪽 아래 모퉁이 위치입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">지정된 x좌표와 y좌표가 사각형에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">확인할 지점의 x좌표입니다.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">확인할 지점의 y좌표입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">(<paramref name="x" />, <paramref name="y" />)가 사각형에 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">지정된 지점이 사각형에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="point" vsli:raw="The point to check.">확인할 지점입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 지점이 사각형에 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">지정된 사각형이 사각형에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">확인할 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="rect" /> 전체가 사각형에 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">위치와 넓이가 없는 사각형을 나타내는 특수 값을 가져옵니다.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">
        <see cref="P:System.Windows.Rect.X" /> 및 <see cref="P:System.Windows.Rect.Y" /> 속성 값이 <see cref="F:System.Double.PositiveInfinity" />이고 <see cref="P:System.Windows.Rect.Width" /> 및 <see cref="P:System.Windows.Rect.Height" /> 속성 값이 <see cref="F:System.Double.NegativeInfinity" />인 빈 사각형입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">지정된 개체가 현재 사각형과 같은지 여부를 나타냅니다.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">현재 사각형과 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="o" />가 <see cref="T:System.Windows.Rect" />이고 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 현재 사각형과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">지정된 사각형이 현재 사각형과 같은지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">현재 사각형과 비교할 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 현재 사각형과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">지정된 사각형이 서로 같은지 여부를 나타냅니다.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">사각형에 대한 해시 코드를 만듭니다.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">현재 <see cref="T:System.Windows.Rect" /> 구조체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">사각형의 높이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">사각형의 높이를 나타내는 양수입니다. 기본값은 0입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Height" />가 음수 값으로 설정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">사각형을 지정된 너비 및 높이만큼 모든 방향으로 확장하거나 축소합니다.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">사각형의 왼쪽 및 오른쪽을 확장하거나 축소할 크기입니다.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">사각형의 위쪽 및 아래쪽을 확장하거나 축소할 크기입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">지정된 사각형을 지정된 너비 및 높이만큼 모든 방향으로 확장하거나 축소한 사각형을 만듭니다.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">수정할 <see cref="T:System.Windows.Rect" /> 구조체입니다.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">사각형의 왼쪽 및 오른쪽을 확장하거나 축소할 크기입니다.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">사각형의 위쪽 및 아래쪽을 확장하거나 축소할 크기입니다.</param>
      <returns vsli:raw="The resulting rectangle.">결과 사각형입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형입니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">지정된 사각형을 지정된 <see cref="T:System.Windows.Size" />만큼 모든 방향으로 확장하여 만들어지는 사각형을 반환합니다.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">수정할 <see cref="T:System.Windows.Rect" /> 구조체입니다.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">사각형을 확장할 크기를 지정합니다. <see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Width" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Left" /> 및 <see cref="P:System.Windows.Rect.Right" /> 속성을 늘릴 크기를 지정합니다. <see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Height" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Top" /> 및 <see cref="P:System.Windows.Rect.Bottom" /> 속성을 늘릴 크기를 지정합니다.</param>
      <returns vsli:raw="The resulting rectangle.">결과 사각형입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형입니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">지정된 <see cref="T:System.Windows.Size" />를 사용하여 모든 방향으로 사각형을 확장합니다.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">사각형을 확장할 크기를 지정합니다. <see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Width" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Left" /> 및 <see cref="P:System.Windows.Rect.Right" /> 속성을 늘릴 크기를 지정합니다. <see cref="T:System.Windows.Size" /> 구조체의 <see cref="P:System.Windows.Size.Height" /> 속성은 사각형의 <see cref="P:System.Windows.Rect.Top" /> 및 <see cref="P:System.Windows.Rect.Bottom" /> 속성을 늘릴 크기를 지정합니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">현재 사각형과 지정된 사각형이 겹치는 부분을 찾아 결과를 현재 사각형으로 저장합니다.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">현재 사각형과 겹치는 사각형입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">지정된 사각형이 겹치는 부분을 반환합니다.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">두 사각형이 겹치는 부분이거나, 겹치는 부분이 없으면 <see cref="P:System.Windows.Rect.Empty" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">지정된 사각형이 현재 사각형과 겹치는지 여부를 나타냅니다.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">확인할 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 사각형이 현재 사각형과 겹치면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">사각형이 <see cref="P:System.Windows.Rect.Empty" /> 사각형인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사각형이 <see cref="P:System.Windows.Rect.Empty" /> 사각형이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">사각형 왼쪽의 x축 값을 가져옵니다.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">사각형 왼쪽의 x축 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">사각형의 왼쪽 위 모퉁이 위치입니다. 기본값은 (0, 0)입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">사각형을 지정된 가로 및 세로 거리만큼 이동합니다.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">사각형을 가로 방향으로 이동할 거리입니다.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">사각형을 세로 방향으로 이동할 거리입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">지정된 사각형에서 지정된 가로 및 세로 거리만큼 오프셋된 사각형을 반환합니다.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">이동할 사각형입니다.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">새 사각형의 가로 오프셋입니다.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">새 사각형의 세로 오프셋입니다.</param>
      <returns vsli:raw="The resulting rectangle.">결과 사각형입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" />가 <see cref="P:System.Windows.Rect.Empty" />입니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">지정된 사각형에서 지정된 벡터만큼 오프셋된 사각형을 반환합니다.</summary>
      <param name="rect" vsli:raw="The original rectangle.">원래 사각형입니다.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">새 사각형의 가로 및 세로 오프셋을 지정하는 벡터입니다.</param>
      <returns vsli:raw="The resulting rectangle.">결과 사각형입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" />가 <see cref="P:System.Windows.Rect.Empty" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">사각형을 지정된 벡터만큼 이동합니다.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">사각형을 이동할 가로 및 세로 거리를 지정하는 벡터입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Empty" /> 사각형에 대해 이 메서드를 호출한 경우</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">두 사각형이 정확히 같은지 비교합니다.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">두 사각형이 다른지 비교합니다.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">비교할 첫 번째 사각형입니다.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">비교할 두 번째 사각형입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사각형의 <see cref="P:System.Windows.Rect.Location" /> 및 <see cref="P:System.Windows.Rect.Size" /> 값이 서로 같지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">지정된 문자열 표현을 사용하여 새 사각형을 만듭니다.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">사각형의 문자열 표현이며 "x, y, 너비, 높이" 형식입니다.</param>
      <returns vsli:raw="The resulting rectangle.">결과 사각형입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">사각형 오른쪽의 x축 값을 가져옵니다.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">사각형 오른쪽의 x축 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">현재 사각형의 크기에 지정된 x 및 y 값을 곱합니다.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">x 방향 배율 인수입니다.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">y 방향 배율 인수입니다.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">사각형의 너비와 높이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">사각형의 너비와 높이를 지정하는 <see cref="T:System.Windows.Size" /> 구조체입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">사용할 형식입니다.
또는
<see cref="T:System.IFormattable" /> 구현의 형식에 대해 정의된 기본 형식을 사용하려는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">값의 형식을 지정하는 데 사용할 공급자입니다.
또는
운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오려는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</param>
      <returns vsli:raw="A string representation of the rectangle.">사각형의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">사각형 위쪽의 y축 좌표를 가져옵니다.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">사각형 위쪽의 y축 좌표입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">사각형의 왼쪽 위 모퉁이 위치입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">사각형의 오른쪽 위 모퉁이 위치를 가져옵니다.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">사각형의 오른쪽 위 모퉁이 위치입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">사각형의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">현재 사각형의 문자열 표현입니다. 문자열의 형식은 "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />"입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">지정된 형식 공급자를 사용하여 사각형의 문자열 표현을 반환합니다.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">문화권별 형식 지정 정보입니다.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">지정된 형식 공급자에 따라 결정된 현재 사각형의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">지정된 매트릭스를 적용하여 사각형을 변환합니다.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">적용할 변환을 지정하는 매트릭스입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">지정된 사각형에 지정된 매트릭스를 적용하여 만들어진 사각형을 반환합니다.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">변환의 기준이 되는 사각형입니다.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">적용할 변환을 지정하는 매트릭스입니다.</param>
      <returns vsli:raw="The rectangle that results from the operation.">작업 결과로 만들어지는 사각형입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">지정된 지점을 정확히 포함할 수 있는 크기로 현재 사각형을 확장합니다.</summary>
      <param name="point" vsli:raw="The point to include.">포함할 지점입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">지정된 사각형을 정확히 포함할 수 있는 크기로 현재 사각형을 확장합니다.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">포함할 사각형입니다.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">지정된 사각형과 지정된 지점을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">포함할 사각형입니다.</param>
      <param name="point" vsli:raw="The point to include.">포함할 지점입니다.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">지정된 사각형과 지정된 지점을 정확히 포함할 수 있는 크기의 사각형입니다.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">지정된 두 사각형을 정확히 포함할 수 있는 크기의 사각형을 만듭니다.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">포함할 첫 번째 사각형입니다.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">포함할 두 번째 사각형입니다.</param>
      <returns vsli:raw="The resulting rectangle.">결과 사각형입니다.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">사각형의 너비를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">사각형의 너비를 나타내는 양수입니다. 기본값은 0입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Width" />가 음수 값으로 설정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">사각형 왼쪽의 x축 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">사각형 왼쪽의 x축 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">사각형 위쪽의 y축 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">사각형 위쪽의 y축 값입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" />는 <see cref="P:System.Windows.Rect.Empty" /> 사각형에 설정됩니다.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">다른 형식의 인스턴스와 <see cref="T:System.Windows.Rect" />의 인스턴스를 상호 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.RectConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">개체를 지정된 형식에서 <see cref="T:System.Windows.Rect" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">변환을 위해 확인할 소스 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식을 <see cref="T:System.Windows.Rect" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">
        <see cref="T:System.Windows.Rect" />를 지정된 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">변환을 위해 이 <see cref="T:System.Windows.Rect" />를 확인 중인 원하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Rect" />를 <paramref name="destinationType" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">지정된 개체를 <see cref="T:System.Windows.Rect" />로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">변환 시 적용되는 문화권 정보입니다.</param>
      <param name="value" vsli:raw="The object being converted.">변환되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 변환하여 만드는 <see cref="T:System.Windows.Rect" />입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">지정된 개체가 NULL이거나 <see cref="T:System.Windows.Rect" />으로 변환할 수 없는 형식인 경우</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">
        <see cref="T:System.Windows.Rect" />를 지정한 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">변환에 필요한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">변환 도중 적용되는 문화권 정보입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">변환할 <see cref="T:System.Windows.Rect" />입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">이 <see cref="T:System.Windows.Rect" />을 변환할 대상 형식입니다.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">이 <see cref="T:System.Windows.Rect" />을 변환하여 만드는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" />가 <see langword="null" />입니다.
또는
<paramref name="value" />가 <see cref="T:System.Windows.Rect" />가 아닌 경우
또는
<paramref name="destinationType" />이 변환할 수 있는 형식 중 하나가 아닌 경우</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">개체의 <see cref="T:System.Windows.Size" />를 설명하는 데 사용할 구조체를 구현합니다.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 구조체의 새 인스턴스를 초기화하여 초기 <paramref name="width" /> 및 <paramref name="height" />를 할당합니다.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 인스턴스의 초기 너비입니다.</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 인스턴스의 초기 높이입니다.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">빈 정적 <see cref="T:System.Windows.Size" />를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 빈 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">개체와 <see cref="T:System.Windows.Size" /> 인스턴스가 같은지 비교합니다.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">크기가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">
        <see cref="T:System.Windows.Size" />의 인스턴스와 값이 같은지 비교합니다.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 이 현재 인스턴스와 비교할 크기입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 인스턴스가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">
        <see cref="T:System.Windows.Size" />의 두 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Windows.Size" /> 인스턴스입니다.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Windows.Size" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 인스턴스가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">이 <see cref="T:System.Windows.Size" /> 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">이 <see cref="T:System.Windows.Size" /> 인스턴스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="P:System.Windows.Size.Height" />의 이 인스턴스에 대한 <see cref="T:System.Windows.Size" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">
        <see cref="P:System.Windows.Size.Height" />의 이 인스턴에 대한 <see cref="T:System.Windows.Size" />입니다. 기본값은 0입니다. 값은 음수일 수 없습니다.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 이 인스턴스가 <see cref="P:System.Windows.Size.Empty" />인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">이 크기 인스턴스가 <see cref="P:System.Windows.Size.Empty" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">
        <see cref="T:System.Windows.Size" />의 두 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Windows.Size" /> 인스턴스입니다.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Windows.Size" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 두 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 인스턴스를 <see cref="T:System.Windows.Point" />의 인스턴스로 명시적으로 변환합니다.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">변환될 <see cref="T:System.Windows.Size" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Point" />의 이 인스턴스와 값이 같은 <see cref="T:System.Windows.Size" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 인스턴스를 <see cref="T:System.Windows.Vector" />의 인스턴스로 명시적으로 변환합니다.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">변환될 <see cref="T:System.Windows.Size" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" />의 이 인스턴스와 값이 같은 <see cref="T:System.Windows.Size" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">
        <see cref="T:System.Windows.Size" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">비교할 첫 번째 <see cref="T:System.Windows.Size" /> 인스턴스입니다.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">비교할 두 번째 <see cref="T:System.Windows.Size" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 인스턴스가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">변환된 <see cref="T:System.Windows.Size" />에서 <see cref="T:System.String" />의 인스턴스를 반환합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">
        <see cref="T:System.String" /> 값에 대해 구문 분석할 <see cref="T:System.Windows.Size" /> 값입니다.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">이 형식 또는 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="format" vsli:raw="The format to use.">사용할 형식입니다.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">값의 형식을 지정하는 데 사용할 공급자입니다.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">지정된 형식의 현재 인스턴스 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">이 <see cref="T:System.String" /> 개체를 나타내는 <see cref="T:System.Windows.Size" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">너비 다음에 높이를 지정하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.String" />의 이 인스턴스를 나타내는 <see cref="T:System.Windows.Size" />을 반환합니다.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">형식 지정을 제어하는 방법을 제공하는 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">이 <see cref="T:System.String" /> 개체를 나타내는 <see cref="T:System.Windows.Size" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="P:System.Windows.Size.Width" />의 이 인스턴스에 대한 <see cref="T:System.Windows.Size" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">
        <see cref="P:System.Windows.Size.Width" />의 이 인스턴에 대한 <see cref="T:System.Windows.Size" />입니다. 기본값은 <c>0</c>합니다. 값은 음수일 수 없습니다.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">다른 형식의 인스턴스와 <see cref="T:System.Windows.Size" /> 클래스의 인스턴스를 상호 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">
        <see cref="T:System.Windows.SizeConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">클래스를 지정된 형식에서 <see cref="T:System.Windows.Size" />의 인스턴스로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">구성 요소에 대한 컨텍스트 정보를 제공합니다.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">변환할 수 있는지 확인할 데이터 형식을 식별합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="sourceType" />을 <see cref="T:System.Windows.Size" />의 인스턴스로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">
        <see cref="T:System.Windows.Size" />의 인스턴스를 다른 형식으로 변환할 수 있는지 여부를 확인합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">구성 요소에 대한 컨텍스트 정보를 제공합니다.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">변환할 수 있는지 확인할 데이터 형식을 식별합니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 이 인스턴스를 <paramref name="destinationType" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">지정된 개체를 <see cref="T:System.Windows.Size" />의 인스턴스로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">구성 요소에 대한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">변환 도중 적용할 문화권별 정보입니다.</param>
      <param name="value" vsli:raw="The source object that is being converted.">변환되는 소스 개체입니다.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">변환된 <paramref name="source" />에서 만든 <see cref="T:System.Windows.Size" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">
        <see cref="T:System.Windows.Size" />의 인스턴스를 지정된 형식으로 변환하려고 합니다.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">구성 요소에 대한 컨텍스트 정보를 제공합니다.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">변환 도중 적용할 문화권별 정보입니다.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">변환할 <see cref="T:System.Windows.Size" />의 인스턴스입니다.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">
        <see cref="T:System.Windows.Size" />의 이 인스턴스가 변환되는 대상 형식입니다.</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" />의 변환된 인스턴스에서 만드는 개체입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" />가 <see langword="null" />이거나 <see cref="T:System.Windows.Size" />의 인스턴스가 아니거나 <paramref name="destinationType" />이 유효한 대상 형식 중 하나가 아닌 경우</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">WPF(Windows Presentation Foundation) 애플리케이션의 시작 화면을 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">지정된 리소스 어셈블리를 사용하여 <see cref="T:System.Windows.SplashScreen" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">포함된 리소스를 포함하는 어셈블리입니다.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">포함된 리소스의 이름입니다.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">지정된 리소스를 사용하여 <see cref="T:System.Windows.SplashScreen" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">포함된 리소스의 이름입니다.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">시작 화면을 닫습니다.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">닫기 작업이 시작된 후 시작 화면이 사라지는 데 걸리는 시간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">시작 화면을 표시합니다.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">시작 화면을 자동으로 닫으려면 <see langword="true" />이고, 시작 화면을 수동으로 닫으려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">생성자에 지정된 리소스를 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">시작 화면을 표시합니다.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">시작 화면을 자동으로 닫으려면 <see langword="true" />이고, 시작 화면을 수동으로 닫으려면 <see langword="false" />입니다.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">시작 화면 창이 WS_EX_TOPMOST 스타일을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">스레드에 대한 작업 항목 큐를 관리하는 서비스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 만들어진 스레드에서 지정된 인수를 사용하여 지정된 대리자를 비동기적으로 실행합니다.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <paramref name="args" />에 지정된 매개 변수를 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">주어진 메서드에 인수로 전달하는 개체의 배열입니다. <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 만들어진 스레드에서 지정된 우선 순위에 지정된 인수를 사용하여 지정된 대리자를 비동기적으로 실행합니다.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <paramref name="args" />에 지정된 매개 변수를 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">주어진 메서드에 인수로 전달하는 개체의 배열입니다. <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 대리자를 비동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수가 없는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" />은 유효한 <see cref="T:System.Windows.Threading.DispatcherPriority" />이 아닙니다.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위에 있는 지정된 대리자를 비동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수를 하나 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">지정된 메서드에 인수로 전달하는 개체입니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" />은 유효한 <see cref="T:System.Windows.Threading.DispatcherPriority" />이 아닙니다.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수 배열을 사용하여 지정된 우선 순위에 있는 지정된 대리자를 비동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수를 여러 개 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">지정된 메서드에 인수로 전달하는 개체입니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">지정된 메서드에 인수로 전달하는 개체의 배열입니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />가 호출된 후 즉시 반환되며, <see cref="T:System.Windows.Threading.Dispatcher" /> 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" />가 올바른 속성이 아닌 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">비동기적으로 <see cref="T:System.Windows.Threading.Dispatcher" /> 종료를 시작합니다.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">Dispatcher 종료를 시작하는 우선 순위입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">호출 스레드가 이 <see cref="T:System.Windows.Threading.Dispatcher" />에 연결된 스레드인지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호출 스레드가 이 <see cref="T:System.Windows.Threading.Dispatcher" />에 연결된 스레드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">스레드에 연결된 Dispatcher가 없는 경우 현재 실행 중인 스레드에 대한 <see cref="T:System.Windows.Threading.Dispatcher" />를 가져와서 새 <see cref="T:System.Windows.Threading.Dispatcher" />를 만듭니다.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">현재 스레드에 연결된 Dispatcher입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 큐 프로세스를 비활성화합니다.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Dispatcher 처리를 다시 활성화하는 데 사용되는 구조체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">중첩된 프레임을 포함하여 모든 프레임을 종료하도록 요청합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">지정된 스레드에 대한 <see cref="T:System.Windows.Threading.Dispatcher" />를 가져옵니다.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">
        <see cref="T:System.Windows.Threading.Dispatcher" />를 가져올 스레드입니다.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">
        <paramref name="thread" />에 대한 Dispatcher입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 완전히 종료되었는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Dispatcher가 완전히 종료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 종료되었는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 종료되기 시작했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에 대한 추가 이벤트 정보를 제공하는 후크 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">이 <see cref="T:System.Windows.Threading.Dispatcher" />에 연결된 후크입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">동작을 취소할지 여부를 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">동작을 취소할지 여부를 나타내는 개체입니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 시작될 때까지 대기하는 최소 시간입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <paramref name="args" />에 지정된 매개 변수를 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">주어진 메서드에 인수로 전달하는 개체의 배열입니다. <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위의 지정된 기간 내에서 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <paramref name="args" />에 지정된 매개 변수를 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 완료될 때까지 대기하는 최대 시간입니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">주어진 메서드에 인수로 전달하는 개체의 배열입니다. <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위의 지정된 기간 내에서 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <paramref name="args" />에 지정된 매개 변수를 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 완료될 때까지 대기하는 최대 시간입니다.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">주어진 메서드에 인수로 전달하는 개체의 배열입니다. <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <paramref name="args" />에 지정된 매개 변수를 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">주어진 메서드에 인수로 전달하는 개체의 배열입니다. <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수가 없는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" />가 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />와 같은 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" />가 올바른 속성이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수를 하나 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">지정된 메서드에 인수로 전달하는 개체입니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" />가 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />와 같은 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" />가 올바른 속성이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수를 여러 개 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">지정된 메서드에 인수로 전달하는 개체입니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">주어진 메서드에 인수로 전달하는 개체의 배열입니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" />가 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />와 같은 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" />가 올바른 속성이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 만들어진 스레드에서 지정된 제한 시간 값을 사용하여 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 완료될 때까지 대기하는 최대 시간입니다.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수가 없는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 완료될 때까지 대기하는 최대 시간입니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수를 여러 개 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">지정된 메서드에 인수로 전달하는 개체입니다. 인수가 필요하지 않으면 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" />가 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />와 같은 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" />가 올바른 속성이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드에서 지정된 인수를 사용하여 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐의 다른 보류 중인 작업에 상대적인 우선 순위로, 이 순위에 따라 지정된 메서드가 호출됩니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 완료될 때까지 대기하는 최대 시간입니다.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">인수를 여러 개 사용하는 메서드에 대한 대리자로, <see cref="T:System.Windows.Threading.Dispatcher" /> 이벤트 큐로 푸시됩니다.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">지정된 메서드에 인수로 전달하는 개체입니다.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">지정된 메서드에 인수로 전달하는 개체의 배열입니다.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">호출되는 대리자의 반환 값이거나, 대리자에 반환 값이 없는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" />가 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />와 같은 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" />은 유효한 <see cref="T:System.Windows.Threading.DispatcherPriority" />이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">작업을 취소할지 여부를 나타내는 개체입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">작업을 취소할지 여부를 나타내는 개체입니다.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">작업이 시작될 때까지 대기하는 최소 시간입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Action" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">동작을 취소할지 여부를 나타내는 개체입니다.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">
        <see cref="T:System.Func`1" />가 연결된 스레드에서 지정된 우선 순위에 있는 지정된 <see cref="T:System.Windows.Threading.Dispatcher" />를 비동기적으로 실행합니다.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">디스패처를 통해 호출할 대리자입니다.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에서 보류 중인 다른 작업에 맞춰 어떤 순서로 지정된 콜백을 호출할지를 결정하는 우선 순위입니다.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">작업을 취소할지 여부를 나타내는 개체입니다.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">지정된 대리자의 반환 값 형식입니다.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">
        <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />가 호출된 후 즉시 반환되며, 이벤트 큐에서 실행 보류 중일 때 대리자와 상호 작용하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">
        <see cref="T:System.Windows.Threading.Dispatcher" />의 종료 프로세스를 동기적으로 시작합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">실행 루프로 들어갑니다.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">처리할 Dispatcher의 프레임입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />가 <see langword="true" />인 경우
또는
<paramref name="frame" />이 다른 <see cref="T:System.Windows.Threading.Dispatcher" />에서 실행 중인 경우
또는
Dispatcher 처리가 비활성화된 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />의 이벤트 큐에서 기본 실행 프레임을 푸시합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 종료되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">
        <see cref="T:System.Windows.Threading.Dispatcher" />가 종료되기 시작하면 발생합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">이 <see cref="T:System.Windows.Threading.Dispatcher" />가 연결된 스레드를 가져옵니다.</summary>
      <returns vsli:raw="The thread.">스레드입니다.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">
        <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> 또는 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />를 통해 대리자를 실행하는 동안 스레드 예외가 throw되고 catch되지 않으면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">필터 단계에서 <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> 또는 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />를 통해 대리자를 실행하는 동안 스레드 예외가 throw되고 catch되지 않으면 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">지정된 <see cref="T:System.Windows.Threading.DispatcherPriority" />가 유효한 우선 순위인지 여부를 확인합니다.</summary>
      <param name="priority" vsli:raw="The priority to check.">확인할 우선 순위입니다.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">우선 순위가 잘못된 경우 발생하는 예외에서 반환되는 문자열입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" />은 유효한 <see cref="T:System.Windows.Threading.DispatcherPriority" />이 아닙니다.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">호출 스레드가 이 <see cref="T:System.Windows.Threading.Dispatcher" />에 액세스할 수 있는지 여부를 확인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">호출 스레드에서 이 <see cref="T:System.Windows.Threading.Dispatcher" />에 액세스할 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">현재 디스패처에 비동기적으로 제어를 다시 제공하여 다른 이벤트를 처리할 수 있는 기회를 디스패처에 제공하는 awaitable 개체를 만듭니다.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">현재 디스패처에 제어를 비동기적으로 다시 제공하여 디스패처가 다른 이벤트를 처리할 수 있도록 기회를 제공하는 awaitable 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">현재 디스패처에 비동기적으로 제어를 다시 제공하여 다른 이벤트를 처리할 수 있는 기회를 디스패처에 제공하는 awaitable 개체를 만듭니다.  이 메서드의 결과를 기다리는 코드에 제어를 반환할 때 발생하는 작업은 지정된 우선 순위를 사용하여 예약됩니다.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">연속 예약할 우선 순위입니다.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">현재 디스패처에 제어를 비동기적으로 다시 제공하여 디스패처가 다른 이벤트를 처리할 수 있도록 기회를 제공하는 awaitable 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 관련 이벤트에 대한 이벤트 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">이 이벤트와 연결된 <see cref="T:System.Windows.Threading.Dispatcher" />입니다.</summary>
      <returns vsli:raw="The dispatcher.">디스패처입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />에 있는 실행 루프를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">
        <see cref="T:System.Windows.Threading.DispatcherFrame" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">지정된 종료 요청 플래그를 사용하여 <see cref="T:System.Windows.Threading.DispatcherFrame" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">모든 프레임이 종료되도록 요청될 때 이 프레임이 종료될지 여부를 나타냅니다.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">이 <see cref="T:System.Windows.Threading.DispatcherFrame" />을 계속할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">프레임을 계속해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">
        <see cref="T:System.Windows.Threading.DispatcherHooks" /> 이벤트에 대한 이벤트 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">이벤트와 연결된 작업입니다.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">이 이벤트와 연결된 <see cref="T:System.Windows.Threading.Dispatcher" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">이 이벤트와 연결된 <see cref="T:System.Windows.Threading.Dispatcher" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">이 이벤트와 연결된 <see cref="T:System.Windows.Threading.DispatcherOperation" />를 가져옵니다.</summary>
      <returns vsli:raw="The operation.">작업입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">
        <see cref="T:System.Windows.Threading.DispatcherHooks" /> 관련 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The event data.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 처리에 대한 추가 이벤트 정보를 제공합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">디스패처에서 처리할 작업이 더 없을 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">작업이 중단될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">작업이 완료될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">작업이 디스패처로 게시될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">작업의 우선 순위가 변경될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">작업이 호출될 때 발생합니다.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />와 연결된 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">
        <see cref="T:System.Windows.Threading.DispatcherObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">호출 스레드가 이 <see cref="T:System.Windows.Threading.DispatcherObject" />에 액세스할 수 있는지 여부를 확인합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호출 스레드에서 이 개체에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">이 <see cref="T:System.Windows.Threading.Dispatcher" />와 연결된 <see cref="T:System.Windows.Threading.DispatcherObject" />를 가져옵니다.</summary>
      <returns vsli:raw="The dispatcher.">디스패처입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">호출 스레드에서 이 <see cref="T:System.Windows.Threading.DispatcherObject" />에 액세스할 수 있는지 확인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">호출 스레드에서 이 <see cref="T:System.Windows.Threading.DispatcherObject" />에 액세스할 수 없는 경우</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 큐로 게시된 작업과 상호 작용하는 데 사용되는 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">작업을 중단합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">작업이 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">작업이 중단될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">작업이 완료되면 발생합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">작업이 게시된 <see cref="T:System.Windows.Threading.Dispatcher" />를 가져옵니다.</summary>
      <returns vsli:raw="The dispatcher.">디스패처입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">비동기 작업이 완료될 때 알림을 받는 개체를 반환합니다.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">비동기 작업이 완료될 때 알림을 받는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">이 <see cref="T:System.Windows.Threading.DispatcherOperation" />과 관련된 작업을 시작합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">모든 경우에 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 큐에 있는 작업의 우선 순위를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">큐에 있는 대리자의 우선 순위입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">작업이 완료된 후 작업 결과를 가져옵니다.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">작업이 완료되었으면 작업 결과이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">작업의 현재 상태를 가져옵니다.</summary>
      <returns vsli:raw="The status of the operation.">작업의 상태입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">현재 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task`1" />를 가져옵니다.</summary>
      <returns vsli:raw="An object that represents the current operation.">현재 작업을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">작업이 완료되기를 기다립니다.</summary>
      <returns vsli:raw="The status of the operation.">작업의 상태입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" />가 <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />와 같은 경우  동일 스레드에서 이미 실행 중인 작업을 기다릴 때 이 예외가 발생할 수 있습니다.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">지정된 시간 동안 작업이 완료되기를 기다립니다.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">기다릴 최대 시간입니다.</param>
      <returns vsli:raw="The status of the operation.">작업의 상태입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" />가 <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />와 같은 경우  동일 스레드에서 이미 실행 중인 작업을 기다릴 때 이 예외가 발생할 수 있습니다.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 큐로 게시되고 <see cref="T:System.Threading.Tasks.Task`1" />을 포함하는 작업과 상호 작용하는 데 사용되는 개체를 나타냅니다.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Task`1" />에서 반환하는 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">결과를 반환하는 비동기 작업을 기다리는 개체를 반환합니다.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">결과를 반환하는 비동기 작업을 기다리는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">이 <see cref="T:System.Windows.Threading.DispatcherOperation" />과 관련된 작업을 시작합니다.</summary>
      <returns vsli:raw="The result of the operation.">작업의 결과입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">작업이 완료된 후 작업 결과를 가져옵니다.</summary>
      <returns vsli:raw="The result of the operation.">작업의 결과입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">현재 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task`1" />를 가져옵니다.</summary>
      <returns vsli:raw="An object that represents the current operation.">현재 작업을 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">디스패처 작업에 사용할 대리자를 나타냅니다.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">콜백에 전달된 인수입니다.</param>
      <returns vsli:raw="The object returned by the callback.">콜백에서 반환된 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> 상태에 대한 가능한 값을 설명합니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">작업이 중단되었습니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">작업이 완료되었습니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">작업이 실행되기 시작했지만 완료되지 않았습니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">작업이 보류 중이며 아직 <see cref="T:System.Windows.Threading.Dispatcher" /> 큐에 있습니다.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.Dispatcher" />를 통해 작업이 호출되는 우선 순위를 설명합니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">열거형 값이 2입니다. 애플리케이션이 유휴 상태일 때 작업이 처리됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">열거형 값이 4입니다. 유휴 상태가 아닌 다른 모든 작업이 완료된 후 작업이 처리됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">열거형 값이 3입니다. 백그라운드 작업이 완료된 후 작업이 처리됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">열거형 값이 8입니다. 데이터 바인딩과 동일한 우선 순위로 작업이 처리됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">열거형 값이 0입니다. 작업이 처리되지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">열거형 값이 5입니다. 입력과 동일한 우선 순위로 작업이 처리됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">열거형 값이 -1입니다. 잘못된 우선 순위입니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">열거형 값이 6입니다. 레이아웃과 렌더링이 종료되었지만 입력 우선 순위의 항목이 처리되기 전에 작업이 처리됩니다. 특히 Loaded 이벤트를 발생시킬 때 사용됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">열거형 값이 9입니다. 보통 우선 순위로 작업이 처리됩니다. 일반적인 애플리케이션 우선 순위입니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">열거형 값이 7입니다. 렌더링과 동일한 우선 순위로 작업이 처리됩니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">열거형 값이 10입니다. 다른 비동기 작업 전에 작업이 처리됩니다. 가장 높은 우선 순위입니다.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">열거형 값이 1입니다. 시스템이 유휴 상태일 때 작업이 처리됩니다.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">현재 디스패처에 비동기적으로 제어를 다시 제공하여 다른 이벤트를 처리할 수 있는 기회를 디스패처에 제공하는 awaitable 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">비동기 작업의 완료를 기다리는 개체를 반환합니다.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">비동기 작업의 완료를 기다리는 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">비동기 작업의 완료를 기다리는 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">비동기 작업의 완료에 대한 대기를 종료합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">비동기 작업이 완료되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">
        <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> 개체가 비동기 작업을 완료하기 위해 대기를 중지할 경우 수행할 동작을 설정합니다.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">대기 작업이 완료될 때 수행할 작업입니다.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">비활성 상태일 때 디스패처를 나타내며 디스패처 처리를 다시 활성화할 수 있도록 합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">디스패처 처리를 다시 활성화합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">지정된 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체가 이 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체와 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">같은지 평가할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 개체가 이 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">두 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체가 서로 같은지 확인합니다.</summary>
      <param name="left" vsli:raw="The first object to compare.">비교할 첫 번째 개체입니다.</param>
      <param name="right" vsli:raw="The second object to compare.">비교할 두 번째 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">두 개의 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체가 같은지 여부를 확인합니다.</summary>
      <param name="left" vsli:raw="The first object to compare.">비교할 첫 번째 개체입니다.</param>
      <param name="right" vsli:raw="The second object to compare.">비교할 두 번째 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 개체가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">WPF(Windows Presentation Foundation)에 대한 동기화 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">현재 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />를 사용하여 <see cref="T:System.Windows.Threading.Dispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">지정된 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />을 사용하여 <see cref="T:System.Windows.Threading.Dispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">이 <see cref="T:System.Windows.Threading.Dispatcher" />와 연결할 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">지정된 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />을 사용하여 <see cref="T:System.Windows.Threading.Dispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">이 <see cref="T:System.Windows.Threading.Dispatcher" />와 연결할 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />입니다.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">콜백 메서드를 보내고 게시하는 데 사용되는 우선 순위입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">이 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />의 복사본을 만듭니다.</summary>
      <returns vsli:raw="The copy of this synchronization context.">이 동기화 컨텍스트의 복사본입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">동기화 컨텍스트에서 비동기적으로 콜백을 호출합니다.</summary>
      <param name="d" vsli:raw="The delegate to call.">호출할 대리자입니다.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">대리자에 전달된 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> 가 <see langword="null" />일 수 있습니다.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">동기화 컨텍스트에서 동기적으로 콜백을 호출합니다.</summary>
      <param name="d" vsli:raw="The delegate to call.">호출할 대리자입니다.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">대리자에 전달된 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">지정된 배열의 임의 또는 모든 요소가 신호를 받기를 기다립니다.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">네이티브 운영 체제 핸들을 포함하는 배열입니다.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">모든 핸들을 대기하려면 <see langword="true" />이고, 임의 핸들을 대기하려면 <see langword="false" />입니다.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">대기를 만족한 개체의 배열 인덱스입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">에 통합 된 타이머를 <see cref="T:System.Windows.Threading.Dispatcher" /> 큐 지정된 된 시간 간격에서 지정 된 우선 순위로 처리 됩니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">
        <see cref="T:System.Windows.Threading.DispatcherTimer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">새 인스턴스를 초기화 합니다 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 지정 된 시간 간격, 우선 순위, 이벤트 처리기를 사용 하는 클래스 및 <see cref="T:System.Windows.Threading.Dispatcher" />합니다.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">기간 틱 사이의 시간입니다.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">타이머를 호출 하는 우선 순위입니다.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">될 때 호출할 이벤트 처리기는 <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> 이벤트가 발생 합니다.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">디스패처 타이머와 연결 된입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" />가 <see langword="null" />인 경우
-또는-
<paramref name="dispatcher" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" />가 0보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">새 인스턴스를 초기화 합니다 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 지정된 된 우선 순위로 타이머 이벤트를 처리 하는 클래스입니다.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">타이머를 호출 하는 우선 순위입니다.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">새 인스턴스를 초기화 합니다 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 지정 된 실행 되는 클래스 <see cref="T:System.Windows.Threading.Dispatcher" /> 지정된 된 우선 순위로입니다.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">타이머를 호출 하는 우선 순위입니다.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">디스패처 타이머와 연결 된입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">이 <see cref="T:System.Windows.Threading.Dispatcher" />와 연결된 <see cref="T:System.Windows.Threading.DispatcherTimer" />를 가져옵니다.</summary>
      <returns vsli:raw="The dispatcher.">디스패처입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">타이머 틱 사이의 시간을 가져오거나 설정 합니다.</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">기간 틱 사이의 시간입니다. 기본값은 00:00:00입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> 가 0 보다 작거나 보다 큰 <see cref="F:System.Int32.MaxValue" /> 시간 (밀리초)입니다.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">타이머가 실행 중인지 여부를 나타내는 값을 가져오거나 설정 합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 타이머를 사용 하면 그렇지 않으면 <see langword="false" />합니다.  기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">
        <see cref="T:System.Windows.Threading.DispatcherTimer" />를 시작합니다.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">중지 된 <see cref="T:System.Windows.Threading.DispatcherTimer" />합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">사용자 정의 데이터 개체를 가져오거나 설정 합니다.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">사용자 정의 데이터입니다.  기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">타이머 간격이 경과 하면 발생 합니다.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">
        <see cref="T:System.Windows.Threading.Dispatcher" />
        <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">디스패처로 코드를 실행할 때 발생한 예외를 가져옵니다.</summary>
      <returns vsli:raw="The exception.">예외입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">예외 이벤트가 처리되었는지 여부를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">예외가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">
        <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The event data.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">
        <see cref="T:System.Windows.Threading.Dispatcher" />
        <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">디스패처로 코드를 실행할 때 발생한 예외를 가져옵니다.</summary>
      <returns vsli:raw="The exception.">예외입니다.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">이벤트 처리기가 호출될 때 예외를 catch해야 하는지 여부를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />이 발생해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">
        <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="The event data.">이벤트 데이터입니다.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">종속성 속성의 유효 값을 확인하는 콜백으로 사용되는 메서드를 나타냅니다.</summary>
      <param name="value" vsli:raw="The value to be validated.">유효성을 검사할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">값의 유효성이 확인되었으면 <see langword="true" />이고, 제출된 값이 잘못되었으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">2차원 공간의 변위를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">
        <see cref="T:System.Windows.Vector" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">새 <see cref="P:System.Windows.Vector.X" />의 <see cref="T:System.Windows.Vector" /> 오프셋입니다.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">새 <see cref="P:System.Windows.Vector.Y" />의 <see cref="T:System.Windows.Vector" /> 오프셋입니다.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">지정된 벡터에 따라 지정된 점을 변환하고 결과 점을 반환합니다.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">지정된 점을 변환할 크기입니다.</param>
      <param name="point" vsli:raw="The point to translate.">변환할 점입니다.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" />에 따라 <paramref name="vector" />를 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">두 벡터를 더한 결과를 <see cref="T:System.Windows.Vector" /> 구조체로 반환합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" />와 <paramref name="vector2" />의 합입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">지정된 두 벡터 사이의 각도를 도 단위로 검색합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">계산할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">계산할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" />과 <paramref name="vector2" /> 사이의 각도(도 단위)입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">두 벡터의 외적을 계산합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">계산할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">계산할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">
        <paramref name="vector1" />과 <paramref name="vector2" />의 외적입니다. 다음 수식을 통해 외적이 계산됩니다.
<c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">두 벡터의 행렬식을 계산합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">계산할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">계산할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" />과 <paramref name="vector2" />의 행렬식입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정된 벡터를 지정된 스칼라로 나눈 결과를 <see cref="T:System.Windows.Vector" />로 반환합니다.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">나눌 벡터 구조체입니다.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">
        <paramref name="vector" />를 나눌 크기입니다.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" />를 <paramref name="scalar" />로 나눈 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">지정된 <see cref="T:System.Object" /> 가 <see cref="T:System.Windows.Vector" /> 구조체인지 확인하고, 벡터 구조체이면 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 이 벡터와 같은지 확인합니다.</summary>
      <param name="o" vsli:raw="The vector to compare.">비교할 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="o" />가 <see cref="T:System.Windows.Vector" />이고 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 이 벡터와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">두 벡터가 같은지 비교합니다.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">이 벡터와 비교할 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 이 벡터와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">지정된 두 벡터가 서로 같은지 비교합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="vector1" />과 <paramref name="vector2" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 구성 요소가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">이 벡터에 대한 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code for this instance.">이 인스턴스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">이 벡터의 길이를 가져옵니다.</summary>
      <returns vsli:raw="The length of this vector.">이 벡터의 길이입니다.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">이 벡터 길이의 제곱을 가져옵니다.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">이 벡터 <see cref="P:System.Windows.Vector.Length" />의 제곱입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정된 스칼라에 지정된 벡터를 곱한 결과 <see cref="T:System.Windows.Vector" />를 반환합니다.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">곱할 스칼라입니다.</param>
      <param name="vector" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="scalar" />와 <paramref name="vector" />를 곱한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정된 벡터에 지정된 스칼라를 곱한 결과 <see cref="T:System.Windows.Vector" />를 반환합니다.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">곱할 스칼라입니다.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" />와 <paramref name="scalar" />를 곱한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정된 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 사용하여 지정된 벡터의 좌표 공간을 변환합니다.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">변환할 벡터 구조체입니다.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="vector" />에 적용할 변환입니다.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">
        <paramref name="vector" />를 <paramref name="matrix" />에 따라 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">지정된 두 벡터의 내적을 계산한 결과를 <see cref="T:System.Double" />로 반환합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">곱할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">곱할 두 번째 벡터 구조체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">다음 수식에 따라 계산된 <paramref name="vector1" />과 <paramref name="vector2" />의 스칼라 내적이 들어 있는 <see cref="T:System.Double" />입니다.
<c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">이 벡터를 반전합니다. 벡터의 크기는 전과 동일하지만 방향은 반대가 됩니다.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">이 벡터를 정규화합니다.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">지정된 벡터에 따라 점을 변환하고 결과 점을 반환합니다.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">
        <paramref name="point" />를 변환하는 데 사용되는 벡터입니다.</param>
      <param name="point" vsli:raw="The point to translate.">변환할 점입니다.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" />에 따라 <paramref name="vector" />를 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">두 벡터를 더한 결과를 벡터로 반환합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">더할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to add.">더할 두 번째 벡터입니다.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" />와 <paramref name="vector2" />의 합입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">지정된 벡터를 지정된 스칼라로 나누고 결과 벡터를 반환합니다.</summary>
      <param name="vector" vsli:raw="The vector to divide.">나눌 벡터입니다.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">
        <paramref name="vector" />를 나눌 스칼라입니다.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" />를 <paramref name="scalar" />로 나눈 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">두 벡터가 같은지 비교합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="vector1" />과 <paramref name="vector2" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 구성 요소가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">이 벡터의 <see cref="T:System.Windows.Point" /> 및 <see cref="P:System.Windows.Vector.X" /> 값을 사용하여 <see cref="P:System.Windows.Vector.Y" />를 만듭니다.</summary>
      <param name="vector" vsli:raw="The vector to convert.">변환할 벡터입니다.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">
        <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표 값이 <paramref name="vector" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 오프셋 값과 같은 점입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">이 벡터의 오프셋을 사용하여 <see cref="T:System.Windows.Size" />를 만듭니다.</summary>
      <param name="vector" vsli:raw="The vector to convert.">변환할 벡터입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">
        <see cref="T:System.Windows.Size" />가 이 벡터의 <see cref="P:System.Windows.Size.Width" /> 속성의 절대값과 같고 <see cref="P:System.Windows.Vector.X" />가 이 벡터의 <see cref="P:System.Windows.Size.Height" /> 속성의 절대값과 같은 <see cref="P:System.Windows.Vector.Y" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">두 벡터가 서로 다른지 비교합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">비교할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">비교할 두 번째 벡터입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="vector1" />과 <paramref name="vector2" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 구성 요소가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">지정된 스칼라에 지정된 벡터를 곱한 결과 벡터를 반환합니다.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">곱할 스칼라입니다.</param>
      <param name="vector" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="scalar" />와 <paramref name="vector" />를 곱한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">지정된 벡터에 지정된 스칼라를 곱한 결과 벡터를 반환합니다.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">곱할 벡터입니다.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">곱할 스칼라입니다.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" />와 <paramref name="scalar" />를 곱한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">지정된 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 사용하여 지정된 벡터의 좌표 공간을 변환합니다.</summary>
      <param name="vector" vsli:raw="The vector to transform.">변환할 벡터입니다.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="vector" />에 적용할 변환입니다.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">
        <paramref name="vector" />를 <paramref name="matrix" />에 따라 변환한 결과입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">지정된 두 벡터 구조체의 내적을 계산한 결과를 <see cref="T:System.Double" />로 반환합니다.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">곱할 첫 번째 벡터입니다.</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">곱할 두 번째 벡터입니다.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">다음 수식에 따라 계산된 <paramref name="vector1" />과 <paramref name="vector2" />의 스칼라 내적이 들어 있는 <see cref="T:System.Double" />을 반환합니다.
<c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">벡터를 서로 뺍니다.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">
        <paramref name="vector2" />를 빼는 벡터입니다.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">
        <paramref name="vector1" />에서 뺄 벡터입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" />와 <paramref name="vector2" />의 차이입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">지정된 벡터를 부정합니다.</summary>
      <param name="vector" vsli:raw="The vector to negate.">부정할 벡터입니다.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">
        <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값이 <paramref name="vector" />의 <see cref="P:System.Windows.Vector.X" /> 및 <see cref="P:System.Windows.Vector.Y" /> 값과 반대 방향인 벡터입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">벡터의 문자열 표현을 해당 <see cref="T:System.Windows.Vector" /> 구조체로 변환합니다.</summary>
      <param name="source" vsli:raw="The string representation of the vector.">벡터에 대한 문자열 표현입니다.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">해당 <see cref="T:System.Windows.Vector" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">지정된 벡터에서 지정된 다른 벡터를 뺍니다.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">
        <paramref name="vector2" />를 빼는 벡터입니다.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">
        <paramref name="vector1" />에서 뺄 벡터입니다.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" />와 <paramref name="vector2" />의 차이입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하며 코드에서 직접 사용할 수 없습니다. 이 멤버에 대한 설명은 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />를 참조하십시오.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">사용할 형식을 지정하는 문자열입니다.
또는
<see cref="T:System.IFormattable" /> 구현 형식에 대해 정의된 기본 형식을 사용하기 위한 <see langword="null" />입니다.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">값의 형식을 지정하는 데 사용할 <see langword="IFormatProvider" />입니다.
또는
운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 <see langword="null" />입니다.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">지정된 형식의 현재 인스턴스 값이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">이 <see cref="T:System.Windows.Vector" /> 구조체의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">이 <see cref="P:System.Windows.Vector.X" />의 <see cref="P:System.Windows.Vector.Y" /> 및 <see cref="T:System.Windows.Vector" /> 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">지정된 형식 정보를 사용하여 이 <see cref="T:System.Windows.Vector" /> 구조체의 문자열 표현을 반환합니다.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">문화권별 형식 지정 정보입니다.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">이 <see cref="P:System.Windows.Vector.X" />의 <see cref="P:System.Windows.Vector.Y" /> 및 <see cref="T:System.Windows.Vector" /> 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">이 벡터의 <see cref="P:System.Windows.Vector.X" /> 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">이 벡터의 <see cref="P:System.Windows.Vector.X" /> 구성 요소입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">이 벡터의 <see cref="P:System.Windows.Vector.Y" /> 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">이 벡터의 <see cref="P:System.Windows.Vector.Y" /> 구성 요소입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">다른 형식의 인스턴스를 <see cref="T:System.Windows.Vector" />으로 변환하거나 반대로 변환합니다.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">
        <see cref="T:System.Windows.Vector" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정한 형식에서 <see cref="T:System.Windows.Vector" />의 인스턴스로 개체를 변환할 수 있는지 여부를 나타냅니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">변환이 지원되는지 여부를 쿼리하는 소스 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 형식의 개체를 <see cref="T:System.Windows.Vector" />로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">
        <see cref="T:System.Windows.Vector" />의 인스턴스를 지정한 형식으로 변환할 수 있는지 여부를 결정합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">변환을 위해 이 <see cref="T:System.Windows.Vector" />를 확인 중인 원하는 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" />의 인스턴스를 <paramref name="destinationType" />으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">지정한 개체를 <see cref="T:System.Windows.Vector" />으로 변환합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">변환 중인 형식의 <see cref="T:System.Globalization.CultureInfo" />를 설명합니다.</param>
      <param name="value" vsli:raw="The object being converted.">변환되는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 변환하여 만드는 <see cref="T:System.Windows.Vector" />입니다.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">지정한 <see cref="T:System.Windows.Vector" />을 지정한 형식으로 변환합니다.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">형식의 컨텍스트 정보를 설명합니다.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">변환 중인 형식의 <see cref="T:System.Globalization.CultureInfo" />를 설명합니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">변환할 <see cref="T:System.Windows.Vector" />입니다.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">이 <see cref="T:System.Windows.Vector" />을 변환할 대상 형식입니다.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">이 <see cref="T:System.Windows.Vector" />을 변환하여 만드는 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">약한 이벤트 패턴에서 사용되는 이벤트 관리자에 대해 기본 클래스를 제공합니다. 이 관리자는 마찬가지로 패턴을 사용하는 이벤트(콜백)에 대해 수신기를 추가하거나 제거합니다.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">파생 클래스의 생성자에서 이니셜라이저로 사용될 때 기본 클래스 값을 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">각 수신기에 대해 관리되는 이벤트를 전달합니다.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">이벤트가 처리되는 개체입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">전달할 이벤트에 대한 이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">제공된 목록에서 각 수신기에 대해 관리되는 이벤트를 전달합니다.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">이벤트가 처리되는 개체입니다.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">제공된 <see cref="T:System.Windows.WeakEventManager.ListenerList" />입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">제공된 형식에 사용되는 <see cref="T:System.Windows.WeakEventManager" /> 구현을 반환합니다.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">
        <see cref="T:System.Windows.WeakEventManager" />를 가져올 형식입니다.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">일치하는 <see cref="T:System.Windows.WeakEventManager" /> 구현입니다.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">지정된 소스에 대해 저장될 데이터를 가져오거나 설정합니다.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">요청된 소스의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">이 소스에 대해 관리자가 저장하는 데이터입니다.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager" />에 대한 수신기를 저장하기 위한 기본 제공 컬렉션 목록을 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">지정된 초기 용량을 사용하여 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">초기 목록에 할당되는 항목의 수입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.IWeakEventListener" />에 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 개체를 추가합니다.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에 추가할 수신기 항목입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에 이벤트 처리기를 추가합니다.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에 추가할 이벤트 처리기입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">목록이 사용 중인 것으로 선언합니다. 이렇게 하면 목록 항목을 반복하는 동안 목록이 직접 변경되지 않습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">목록이 이미 사용 중인 것으로 선언되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">이 <see cref="T:System.Windows.WeakEventManager.ListenerList" />의 수정 가능한 복제본을 만듭니다.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">현재 개체의 수정 가능한 복제본입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">현재 <see cref="T:System.Windows.WeakEventManager.ListenerList" />을 지정된 <see cref="T:System.Windows.WeakEventManager.ListenerList" />에 복사합니다.</summary>
      <param name="newList" vsli:raw="The object to copy to.">복사할 개체입니다.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에 들어 있는 항목 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에 들어 있는 항목 수입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에서 각 수신기에 대해 관리되는 이벤트를 전달합니다.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">이벤트를 발생시킨 개체입니다.</param>
      <param name="args" vsli:raw="An object that contains the event data.">이벤트 데이터를 포함하는 개체입니다.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">이 메서드를 호출하는 <see cref="T:System.Windows.WeakEventManager" />의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />의 임의의 수신기가 가비지 수집된 개체를 가리키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">비교 작업에 사용할 빈 목록을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="The empty list representation.">빈 목록 표현입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">
        <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />에 의해 초기화되는 잠긴 상태를 해제합니다.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">이 <see cref="T:System.Windows.WeakEventManager.ListenerList" />가 비어 있는지 여부를 선언하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">목록이 비어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />의 특정 수신기 항목을 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">목록에 있는 수신기의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">해당 인덱스의 항목이거나, 해당 인덱스에 항목이 없으면 null 참조입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">지정된 목록이 사용 중인지 확인하고, 사용 중일 경우 목록 참조 매개 변수를 원본이 아닌 목록의 복사본으로 설정합니다.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">사용 상태를 확인하고 복사할 목록입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">지정된 목록이 호출 시 사용 중이므로 <paramref name="list" /> 매개 변수 참조가 복사본으로 다시 설정되었으면 <see langword="true" />이고, 지정된 목록이 사용 중이 아니므로 <paramref name="list" /> 매개 변수 참조가 변경되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">내부 참조 대상이 null 참조인 목록에서 모든 항목을 제거합니다.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">모든 항목이 제거되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에서 맨 처음 발견되는 수신기 항목을 제거합니다.</summary>
      <param name="listener" vsli:raw="The item to remove.">제거할 항목입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에서 이벤트 처리기를 제거합니다.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" />에서 제거할 이벤트 처리기입니다.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">
        <see cref="T:System.Windows.WeakEventManager" />에 대한 수신기를 저장하기 위한 형식 안전 컬렉션 목록을 제공합니다. 이 클래스는 사용되는 이벤트 데이터의 형식 매개 변수를 정의 합니다.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">이벤트 데이터가 있는 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">지정된 초기 용량을 사용하여 <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">초기 목록에 할당되는 항목의 수입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.WeakEventManager.ListenerList" />의 수정 가능한 복제본을 만듭니다.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true" />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />에서 각 수신기에 대해 관리되는 이벤트를 전달합니다.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">이벤트를 발생시킨 개체입니다.</param>
      <param name="e" vsli:raw="An object that contains the event data.">이벤트 데이터를 포함하는 개체입니다.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">이 메서드를 호출하는 <see cref="T:System.Windows.WeakEventManager" />의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />의 임의의 수신기가 가비지 수집된 개체를 가리키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">지정된 대리자를 지정된 소스의 이벤트 처리기로 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">처리기 대리자가 구독하는 소스 개체입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />에서 발생한 이벤트를 처리하는 대리자입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">제공된 수신기를 관리 중인 이벤트에 대해 제공된 소스에 추가합니다.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">수신기를 연결할 소스입니다.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">
        <see cref="T:System.Windows.IWeakEventListener" />를 구현해야 하는 수신 클래스입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">지정한 소스에서 이전에 추가한 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">처리기를 제거할 소스입니다.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />에서 제거할 대리자입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">제공된 소스에서 이전에 추가한 수신기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">수신기를 제거할 소스입니다.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">
        <see cref="T:System.Windows.IWeakEventListener" />를 구현해야 하는 수신 클래스입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">비활성 수신기 항목을 제공된 소스의 데이터 목록에서 제거합니다. 일부 항목이 실제로 목록에서 제거된 경우 <see langword="true" />를 반환합니다.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">수신 중인 이벤트의 소스입니다.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">확인할 데이터입니다. 이 개체는 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 구현이어야 합니다.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">
        <paramref name="source" /> 수신 대기를 중지하고 <paramref name="data" />에서 모든 항목을 완전히 제거하려면 <see langword="true" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">일부 항목이 실제로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">기본 데이터 테이블에 대해 읽기 잠금을 설정하고 <see cref="T:System.IDisposable" />을 반환합니다.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">데이터 테이블 멤버에 대해 잠금을 설정한 다음 <see langword="using" /> 구문을 사용하여 적절하게 삭제할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">지정된 소스에 대해 모든 수신기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">수신기 정보를 제거할 소스입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">기본 수신기 목록에서 사용하지 않는 항목을 비우는 작업을 우선 순위가 낮은 스레드에서 수행하도록 요청합니다.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">지정된 관리자 형식에 대해 현재 관리자를 설정합니다.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">새 이벤트 관리자를 설정할 형식입니다.</param>
      <param name="manager" vsli:raw="The new event manager.">새 이벤트 관리자입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">파생 클래스에서 재정의되는 경우 관리 중인 이벤트 수신을 시작합니다. <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> 메서드를 처음으로 호출하고 나면 제공된 소스의 관련 이벤트를 처리할 때마다 관리자는 <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> 또는 <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />를 호출하는 상태여야 합니다.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">수신을 시작할 소스입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">파생 클래스에서 재정의되는 경우 관리 중인 이벤트에 대해 제공된 소스에서 수신을 중지합니다.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">수신을 중지할 소스입니다.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">기본 데이터 테이블에 대해 쓰기 잠금을 설정하고 <see cref="T:System.IDisposable" />을 반환합니다.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">데이터 테이블 멤버에 대해 잠금을 설정한 다음 <see langword="using" /> 구문을 사용하여 적절하게 삭제할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">이벤트 처리기를 지정하여 "약한 이벤트 수신기" 패턴을 사용할 수 있게 하도록 형식이 안전한 <see cref="T:System.Windows.WeakEventManager" />를 제공합니다. 이 클래스는 사용되는 이벤트 데이터에 대한 형식 매개 변수와 이벤트 소스의 형식 매개 변수를 정의합니다.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">이벤트를 발생시키는 형식입니다.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">이벤트 데이터가 있는 형식입니다.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">지정된 이벤트 처리기를 지정된 이벤트에 추가합니다.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">지정된 이벤트를 발생시키는 소스 개체입니다.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">구도할 이벤트의 이름입니다.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">이벤트를 처리하는 대리자입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">이벤트에 대한 수신기를 포함하는 새 개체를 반환합니다.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">이벤트에 대한 수신기를 포함하는 새 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">지정한 이벤트에서 지정한 이벤트 처리기를 제거합니다.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">지정된 이벤트를 발생시키는 소스 개체입니다.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">처리기에서 제거할 이벤트의 이름입니다.</param>
      <param name="handler" vsli:raw="The delegate to remove.">제거할 대리자</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">지정된 개체의 이벤트 수신 대기를 시작합니다.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">이벤트를 발생시키는 개체입니다.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">지정된 개체의 이벤트 수신 대기를 중지합니다.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">이벤트를 발생시키는 개체입니다.</param>
    </member>
  </members>
</doc>