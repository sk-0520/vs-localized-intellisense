<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing.Common</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.Bitmap">
      <summary>그래픽 이미지의 픽셀 데이터와 그 특성으로 구성되는 GDI+ 비트맵을 캡슐화합니다. <see cref="T:System.Drawing.Bitmap" />은 픽셀 데이터로 정의된 이미지에서 작업하는 데 사용되는 개체입니다.</summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>지정된 기존 이미지에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="original">새 <see cref="T:System.Drawing.Image" />을 만들 <see cref="T:System.Drawing.Bitmap" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>지정한 크기로 조정된 기존의 지정한 이미지에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="original">새 <see cref="T:System.Drawing.Image" />을 만들 <see cref="T:System.Drawing.Bitmap" />입니다.</param>
      <param name="newSize">새 <see cref="T:System.Drawing.Size" />의 크기를 나타내는 <see cref="T:System.Drawing.Bitmap" /> 구조체입니다.</param>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>지정한 크기로 조정된 기존의 지정한 이미지에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="original">새 <see cref="T:System.Drawing.Image" />을 만들 <see cref="T:System.Drawing.Bitmap" />입니다.</param>
      <param name="width">새 <see cref="T:System.Drawing.Bitmap" />의 너비(픽셀)입니다.</param>
      <param name="height">새 <see cref="T:System.Drawing.Bitmap" />의 높이(픽셀)입니다.</param>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>지정된 크기를 사용하여 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="width">새 <see cref="T:System.Drawing.Bitmap" />의 너비(픽셀)입니다.</param>
      <param name="height">새 <see cref="T:System.Drawing.Bitmap" />의 높이(픽셀)입니다.</param>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Bitmap" /> 개체의 해상도와 지정된 크기를 사용하여 <see cref="T:System.Drawing.Graphics" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="width">새 <see cref="T:System.Drawing.Bitmap" />의 너비(픽셀)입니다.</param>
      <param name="height">새 <see cref="T:System.Drawing.Bitmap" />의 높이(픽셀)입니다.</param>
      <param name="g">새 <see cref="T:System.Drawing.Graphics" />의 해상도를 지정하는 <see cref="T:System.Drawing.Bitmap" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>지정된 크기와 형식을 사용하여 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="width">새 <see cref="T:System.Drawing.Bitmap" />의 너비(픽셀)입니다.</param>
      <param name="height">새 <see cref="T:System.Drawing.Bitmap" />의 높이(픽셀)입니다.</param>
      <param name="format">새 <see cref="T:System.Drawing.Bitmap" />의 픽셀 형식입니다. <c>서식</c>으로 시작하는 값을 지정해야 합니다.</param>
      <exception cref="T:System.ArgumentException">이름이 서식으로 시작하지 않는 경우, <see cref="T:System.Drawing.Imaging.PixelFormat" /> 값이 지정됩니다. 예를 들어, <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />를 지정하면 <see cref="T:System.ArgumentException" />이 초래되나, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />는 초래되지 않습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>지정된 크기, 픽셀 형식 및 픽셀 데이터를 사용하여 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="width">새 <see cref="T:System.Drawing.Bitmap" />의 너비(픽셀)입니다.</param>
      <param name="height">새 <see cref="T:System.Drawing.Bitmap" />의 높이(픽셀)입니다.</param>
      <param name="stride">한 스캐닝선의 처음부터 다음 스캐닝선까지의 바이트 오프셋을 지정하는 정수입니다. 일반적으로 이 값은 픽셀 형식의 바이트 수(예: 16비트/픽셀의 경우 2)와 비트맵의 너비를 곱한 값입니다. 이 매개 변수에 전달된 값은 4의 배수여야 합니다.</param>
      <param name="format">새 <see cref="T:System.Drawing.Bitmap" />의 픽셀 형식입니다. <c>서식</c>으로 시작하는 값을 지정해야 합니다.</param>
      <param name="scan0">픽셀 데이터가 들어 있는 바이트 배열에 대한 포인터입니다.</param>
      <exception cref="T:System.ArgumentException">이름이 서식으로 시작하지 않는 경우, <see cref="T:System.Drawing.Imaging.PixelFormat" /> 값이 지정됩니다. 예를 들어, <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />를 지정하면 <see cref="T:System.ArgumentException" />이 초래되나, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />는 초래되지 않습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>지정된 데이터 스트림에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이미지를 로드하는 데 사용된 데이터 스트림입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />이 이미지 데이터를 포함하지 않거나 <see langword="null" />인 경우
또는
<paramref name="stream" />에 단일 크기가 65,535픽셀보다 큰 PNG 이미지 파일이 있는 경우</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>지정된 데이터 스트림에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이미지를 로드하는 데 사용된 데이터 스트림입니다.</param>
      <param name="useIcm">이 <see cref="T:System.Drawing.Bitmap" />의 색 보정을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />이 이미지 데이터를 포함하지 않거나 <see langword="null" />인 경우
또는
<paramref name="stream" />에 단일 크기가 65,535픽셀보다 큰 PNG 이미지 파일이 있는 경우</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>지정된 파일에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filename">비트맵 파일 이름과 경로입니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정된 파일을 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>지정된 파일에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filename">비트맵 파일 이름입니다.</param>
      <param name="useIcm">이 <see cref="T:System.Drawing.Bitmap" />의 색 보정을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>지정된 리소스에서 <see cref="T:System.Drawing.Bitmap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">리소스를 추출하는 데 사용된 클래스입니다.</param>
      <param name="resource">리소스의 이름입니다.</param>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>지정된 <see cref="T:System.Drawing.Bitmap" /> 열거형과 함께 <see cref="T:System.Drawing.Rectangle" /> 구조체에서 정의된 해당 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 개체의 섹션 복사본을 만듭니다.</summary>
      <param name="rect">해당 <see cref="T:System.Drawing.Bitmap" />의 복사할 부분을 정의합니다. 좌표는 해당 <see cref="T:System.Drawing.Bitmap" />에 상대적입니다.</param>
      <param name="format">새 <see cref="T:System.Drawing.Bitmap" />의 픽셀 형식입니다. <c>서식</c>으로 시작하는 값을 지정해야 합니다.</param>
      <returns>이 메서드가 만드는 새 <see cref="T:System.Drawing.Bitmap" />를 반환합니다.</returns>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" />가 소스 비트맵의 범위를 벗어난 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" />의 높이나 너비가 0인 경우
또는
이름이 서식으로 시작하지 않는 경우, <see cref="T:System.Drawing.Imaging.PixelFormat" /> 값이 지정됩니다. 예를 들어, <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" />를 지정하면 <see cref="T:System.ArgumentException" />이 초래되나, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />는 초래되지 않습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>지정된 <see cref="T:System.Drawing.Bitmap" /> 열거형과 함께 정의된 해당 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 섹션의 복사본을 만듭니다.</summary>
      <param name="rect">해당 <see cref="T:System.Drawing.Bitmap" />의 복사할 부분을 정의합니다.</param>
      <param name="format">대상 <see cref="T:System.Drawing.Imaging.PixelFormat" />의 <see cref="T:System.Drawing.Bitmap" /> 열거형을 지정합니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" />가 소스 비트맵의 범위를 벗어난 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" />의 높이나 너비가 0인 경우</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>창 핸들에서 아이콘까지 <see cref="T:System.Drawing.Bitmap" />을 만듭니다.</summary>
      <param name="hicon">아이콘에 대한 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>지정된 Windows 리소스에서 <see cref="T:System.Drawing.Bitmap" />을 만듭니다.</summary>
      <param name="hinstance">리소스를 포함하는 실행 파일의 인스턴스에 대한 핸들입니다.</param>
      <param name="bitmapName">리소스 비트맵의 이름을 포함하는 문자열입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>이 <see cref="T:System.Drawing.Bitmap" />에서 GDI 비트맵 개체를 만듭니다.</summary>
      <returns>이 메서드가 만드는 GDI 비트맵 개체에 대한 핸들</returns>
      <exception cref="T:System.ArgumentException">비트맵의 높이나 너비가 <see cref="F:System.Int16.MaxValue" />보다 큰 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>이 <see cref="T:System.Drawing.Bitmap" />에서 GDI 비트맵 개체를 만듭니다.</summary>
      <param name="background">배경색을 지정하는 <see cref="T:System.Drawing.Color" /> 구조체입니다. 해당 비트맵이 완전히 불투명하면 이 매개 변수는 무시됩니다.</param>
      <returns>이 메서드가 만드는 GDI 비트맵 개체에 대한 핸들</returns>
      <exception cref="T:System.ArgumentException">비트맵의 높이나 너비가 <see cref="F:System.Int16.MaxValue" />보다 큰 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>아이콘에 대한 핸들을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" />과 같은 이미지가 있는 아이콘에 대한 창 핸들</returns>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>해당 <see cref="T:System.Drawing.Bitmap" />의 지정된 픽셀의 색을 가져옵니다.</summary>
      <param name="x">검색할 픽셀의 x 좌표입니다.</param>
      <param name="y">검색할 픽셀의 y 좌표입니다.</param>
      <returns>지정된 픽셀의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="x" />가 0보다 작거나 <see cref="P:System.Drawing.Image.Width" />보다 크거나 같은 경우
또는
<paramref name="y" />가 0보다 작거나 <see cref="P:System.Drawing.Image.Height" />보다 크거나 같은 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <see cref="T:System.Drawing.Bitmap" />을 시스템 메모리에 잠급니다.</summary>
      <param name="rect">잠글 <see cref="T:System.Drawing.Rectangle" />의 부분을 지정하는 <see cref="T:System.Drawing.Bitmap" /> 구조체입니다.</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ImageLockMode" />의 액세스 수준(읽기/쓰기)을 지정하는 <see cref="T:System.Drawing.Bitmap" /> 열거형입니다.</param>
      <param name="format">이 <see cref="T:System.Drawing.Imaging.PixelFormat" />의 데이터 형식을 지정하는 <see cref="T:System.Drawing.Bitmap" /> 열거형입니다.</param>
      <returns>이 잠금 작업에 대한 정보가 들어 있는 <see cref="T:System.Drawing.Imaging.BitmapData" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" />이 특정 비트/픽셀 값이 아닌 경우
또는
잘못된 <see cref="T:System.Drawing.Imaging.PixelFormat" />이 비트맵에 대해 전달된 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)">
      <summary>
        <see cref="T:System.Drawing.Bitmap" />을 시스템 메모리에 잠급니다.</summary>
      <param name="rect">잠글 <see cref="T:System.Drawing.Bitmap" />의 부분을 지정하는 사각형 구조체입니다.</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ImageLockMode" />의 액세스 수준(읽기/쓰기)을 지정하는 <see cref="T:System.Drawing.Bitmap" /> 값 중 하나입니다.</param>
      <param name="format">
        <see cref="T:System.Drawing.Imaging.PixelFormat" />의 데이터 형식을 지정하는 <see cref="T:System.Drawing.Bitmap" /> 값 중 하나입니다.</param>
      <param name="bitmapData">잠금 작업에 대한 정보가 들어 있는 <see cref="T:System.Drawing.Imaging.BitmapData" />입니다.</param>
      <returns>잠금 작업에 대한 정보가 들어 있는 <see cref="T:System.Drawing.Imaging.BitmapData" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 값이 특정 비트/픽셀 값이 아닌 경우
또는
잘못된 <see cref="T:System.Drawing.Imaging.PixelFormat" />이 비트맵에 대해 전달된 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>기본 투명 색을 이 <see cref="T:System.Drawing.Bitmap" />에 대해 투명하게 만듭니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" />의 이미지 형식이 아이콘 형식인 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>해당 <see cref="T:System.Drawing.Bitmap" />의 지정된 색 투명을 만듭니다.</summary>
      <param name="transparentColor">투명으로 만든 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" />의 이미지 형식이 아이콘 형식인 경우</exception>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>이 <see cref="T:System.Drawing.Bitmap" />에서 지정된 픽셀의 색을 설정합니다.</summary>
      <param name="x">설정할 픽셀의 x좌표입니다.</param>
      <param name="y">설정할 픽셀의 y좌표입니다.</param>
      <param name="color">지정된 픽셀에 할당할 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조입니다.</param>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>해당 <see cref="T:System.Drawing.Bitmap" />의 해상도를 설정합니다.</summary>
      <param name="xDpi">
        <see cref="T:System.Drawing.Bitmap" />의 가로 해상도(dpi)입니다.</param>
      <param name="yDpi">
        <see cref="T:System.Drawing.Bitmap" />의 세로 해상도(dpi)입니다.</param>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>시스템 메모리에서 해당 <see cref="T:System.Drawing.Bitmap" /> 잠금을 해제합니다.</summary>
      <param name="bitmapdata">잠금 작업에 대한 정보를 지정하는 <see cref="T:System.Drawing.Imaging.BitmapData" />입니다.</param>
      <exception cref="T:System.Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 선언 해석 시, 어셈블리는 동일한 어셈블리에 표시된 리소스를, 선언 파일 이름에 추가된 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 구성 값과 함께 검색하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSameAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 선언 해석 시, 어셈블리는 위성 어셈블리에 표시된 리소스를, 선언 파일 이름에 추가된 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 구성 값과 함께 검색하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>사각형, 타원, 파이, 다각형 및 경로와 같은 그래픽 도형의 내부를 채우는 데 사용할 개체를 정의합니다.</summary>
    </member>
    <member name="M:System.Drawing.Brush.#ctor">
      <summary>
        <see cref="T:System.Drawing.Brush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>파생된 클래스에 재정의할 때 이 <see cref="T:System.Drawing.Brush" />와 정확하게 일치하는 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만드는 새 <see cref="T:System.Drawing.Brush" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>이 <see cref="T:System.Drawing.Brush" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Brush.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Brush" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Drawing.Brush.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
      <summary>파생 클래스에서 GDI+ 브러시 개체에 대한 참조를 설정합니다.</summary>
      <param name="brush">GDI+ 브러시 개체에 대한 포인터입니다.</param>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>모든 표준 색에 사용되는 브러시입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>시스템 정의 <see cref="T:System.Drawing.Brush" /> 개체를 가져옵니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Brush" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphics">
      <summary>이중 버퍼링을 위한 그래픽 버퍼를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Dispose">
      <summary>해당 <see cref="T:System.Drawing.BufferedGraphics" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphics.Graphics">
      <summary>그래픽 버퍼에 출력하는 <see cref="T:System.Drawing.Graphics" /> 개체를 가져옵니다.</summary>
      <returns>그래픽 버퍼에 출력하는 <see cref="T:System.Drawing.Graphics" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render">
      <summary>그래픽 버퍼의 내용을 기본 디바이스에 씁니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
      <summary>그래픽 버퍼의 내용을 지정된 <see cref="T:System.Drawing.Graphics" /> 개체에 씁니다.</summary>
      <param name="target">그래픽 버퍼의 내용을 쓸 대상 <see cref="T:System.Drawing.Graphics" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
      <summary>그래픽 버퍼의 내용을 지정된 <see cref="T:System.IntPtr" /> 핸들과 연결된 디바이스 컨텍스트에 씁니다.</summary>
      <param name="targetDC">그래픽 버퍼의 내용을 쓸 대상 디바이스 컨텍스트를 가리키는 <see cref="T:System.IntPtr" />입니다.</param>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsContext">
      <summary>이중 버퍼링에 사용할 수 있는 그래픽 버퍼를 만드는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
      <summary>
        <see cref="T:System.Drawing.BufferedGraphicsContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Graphics" />의 픽셀 형식을 사용하여 지정된 크기의 그래픽 버퍼를 만듭니다.</summary>
      <param name="targetGraphics">새 버퍼의 픽셀 형식을 일치시킬 대상 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <param name="targetRectangle">만들 버퍼의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <returns>지정된 크기의 버퍼를 그리는 데 사용할 수 있는 <see cref="T:System.Drawing.BufferedGraphics" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Graphics" />의 픽셀 형식을 사용하여 지정된 크기의 그래픽 버퍼를 만듭니다.</summary>
      <param name="targetDC">새 버퍼의 픽셀 형식을 일치시킬 대상 디바이스 컨텍스트에 대한 <see cref="T:System.IntPtr" />입니다.</param>
      <param name="targetRectangle">만들 버퍼의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <returns>지정된 크기의 버퍼를 그리는 데 사용할 수 있는 <see cref="T:System.Drawing.BufferedGraphics" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Dispose">
      <summary>
        <see cref="T:System.Drawing.BufferedGraphicsContext" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
      <summary>버퍼가 할당된 후 아직 삭제되지 않았으면 현재 그래픽 버퍼를 삭제합니다.</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
      <summary>사용할 버퍼의 최대 크기를 가져오거나 설정합니다.</summary>
      <returns>버퍼의 최대 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
      <exception cref="T:System.ArgumentException">크기의 높이나 너비가 0보다 작거나 같은 경우</exception>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsManager">
      <summary>애플리케이션 도메인의 기본 버퍼링된 그래픽 컨텍스트 개체에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsManager.Current">
      <summary>현재 애플리케이션 도메인에 대한 <see cref="T:System.Drawing.BufferedGraphicsContext" />를 가져옵니다.</summary>
      <returns>현재 애플리케이션 도메인에 대한 <see cref="T:System.Drawing.BufferedGraphicsContext" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>문자열 내에 문자 위치의 범위를 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.CharacterRange" /> 구조체의 새 인스턴스를 초기화하고 문자열 내에 문자 위치의 범위를 지정합니다.</summary>
      <param name="First">범위에서 첫째 문자의 위치입니다. 예를 들어, <paramref name="First" />가 0으로 설정되어 있으면 범위의 첫째 위치는 문자열에서 0의 위치입니다.</param>
      <param name="Length">범위의 위치 수입니다.</param>
    </member>
    <member name="M:System.Drawing.CharacterRange.Equals(System.Object)">
      <summary>이 개체가 지정된 개체와 같은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="obj">일치 여부를 비교할 개체입니다.</param>
      <returns>지정된 개체가 이 인스턴스와 같은 <see cref="P:System.Drawing.CharacterRange.First" /> 및 <see cref="P:System.Drawing.CharacterRange.Length" /> 값을 가진 인스턴스이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>이 <see cref="T:System.Drawing.CharacterRange" />의 첫째 문자의 문자열 위치를 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.CharacterRange" />의 첫째 위치입니다.</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>이 인스턴스의 해시 코드인 32비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>
        <see cref="T:System.Drawing.CharacterRange" />의 위치 수를 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.CharacterRange" />의 위치 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>두 <see cref="T:System.Drawing.CharacterRange" /> 개체를 비교합니다. 두 <see cref="P:System.Drawing.CharacterRange.First" /> 개체의 <see cref="P:System.Drawing.CharacterRange.Length" /> 및 <see cref="T:System.Drawing.CharacterRange" /> 값이 같은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="cr1">일치 여부를 비교할 <see cref="T:System.Drawing.CharacterRange" />입니다.</param>
      <param name="cr2">일치 여부를 비교할 <see cref="T:System.Drawing.CharacterRange" />입니다.</param>
      <returns>두 <see cref="T:System.Drawing.CharacterRange" /> 개체의 <see cref="P:System.Drawing.CharacterRange.First" /> 및 <see cref="P:System.Drawing.CharacterRange.Length" /> 값이 같으면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>두 <see cref="T:System.Drawing.CharacterRange" /> 개체를 비교합니다. 두 <see cref="P:System.Drawing.CharacterRange.First" /> 개체의 <see cref="P:System.Drawing.CharacterRange.Length" /> 또는 <see cref="T:System.Drawing.CharacterRange" /> 값이 같지 않은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="cr1">불일치 여부를 비교할 <see cref="T:System.Drawing.CharacterRange" />입니다.</param>
      <param name="cr2">불일치 여부를 비교할 <see cref="T:System.Drawing.CharacterRange" />입니다.</param>
      <returns>두 <see cref="P:System.Drawing.CharacterRange.First" /> 개체의 <see cref="P:System.Drawing.CharacterRange.Length" /> 또는 <see cref="T:System.Drawing.CharacterRange" /> 값이 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.ColorTranslator">
      <summary>색을 GDI+ <see cref="T:System.Drawing.Color" /> 구조체로 변환하거나 구조체에서 변환합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>HTML 색 표현을 GDI+ <see cref="T:System.Drawing.Color" /> 구조체로 변환합니다.</summary>
      <param name="htmlColor">변환할 Html 색의 문자열 표현입니다.</param>
      <returns>
        <paramref name="htmlColor" />가 <see langword="null" />인 경우 변환된 HTML 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체 또는 <see cref="F:System.Drawing.Color.Empty" />입니다.</returns>
      <exception cref="T:System.Exception">
        <paramref name="htmlColor" />이 올바른 HTML 색 이름이 아닌 경우</exception>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>OLE 색상 값을 GDI+ <see cref="T:System.Drawing.Color" /> 구조체로 변환합니다.</summary>
      <param name="oleColor">변환할 OLE 색입니다.</param>
      <returns>변환된 OLE 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>Windows 색상 값을 GDI+ <see cref="T:System.Drawing.Color" /> 구조체로 변환합니다.</summary>
      <param name="win32Color">변환할 Windows 색입니다.</param>
      <returns>변환된 Windows 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Color" /> 구조체를 HTML 문자열 색 표현으로 변환합니다.</summary>
      <param name="c">변환할 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <returns>HTML 색을 나타내는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Color" /> 구조체를 OLE 색으로 변환합니다.</summary>
      <param name="c">변환할 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <returns>OLE 색상 값을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Color" /> 구조체를 Windows 색으로 변환합니다.</summary>
      <param name="c">변환할 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <returns>Windows 색상 값을 반환합니다.</returns>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>그리기 화면에서 콘텐츠의 맞춤을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>콘텐츠의 세로는 아래쪽에 맞추고, 가로는 가운데 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>콘텐츠의 세로는 아래쪽에 맞추고, 가로는 왼쪽에 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>콘텐츠의 세로는 아래쪽에 맞추고, 가로는 오른쪽에 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>콘텐츠의 세로는 중간에 맞추고, 가로는 가운데 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>콘텐츠의 세로는 중간에 맞추고, 가로는 왼쪽에 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>콘텐츠의 세로는 중간에 맞추고, 가로는 오른쪽에 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>콘텐츠의 세로는 위쪽에 맞추고, 가로는 가운데 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>콘텐츠의 세로는 위쪽에 맞추고, 가로는 왼쪽에 맞춥니다.</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>콘텐츠의 세로는 위쪽에 맞추고, 가로는 오른쪽에 맞춥니다.</summary>
    </member>
    <member name="T:System.Drawing.CopyPixelOperation">
      <summary>픽셀 복사 작업의 소스 색이 대상 색과 결합되어 최종 색을 생성하는 방법을 결정합니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Blackness">
      <summary>대상 영역이 실제 색상표의 인덱스 0과 연결된 색을 사용하여 채워집니다. 기본 실제 색상표의 경우 이 색은 검정입니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
      <summary>사용자 창 위에 놓인 창들이 생성되는 이미지에 포함됩니다. 기본적으로 이미지에는 사용자 창만 포함됩니다. 이것은 인쇄 디바이스 컨텍스트에는 대개 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.DestinationInvert">
      <summary>대상 영역이 반전됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergeCopy">
      <summary>소스 영역의 색이 Boolean <see langword="AND" /> 연산자를 사용하여 대상 디바이스 컨텍스트의 선택된 브러시 색과 병합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergePaint">
      <summary>반전된 소스 영역의 색이 Boolean <see langword="OR" /> 연산자를 사용하여 대상 영역의 색과 병합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NoMirrorBitmap">
      <summary>비트맵이 미러링되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceCopy">
      <summary>반전된 소스 영역이 대상에 복사됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceErase">
      <summary>소스 및 대상 색이 Boolean <see langword="OR" /> 연산자를 사용하여 결합된 다음 생성된 색이 반전됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatCopy">
      <summary>대상 디바이스 컨텍스트에서 현재 선택된 브러시가 대상 비트맵에 복사됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatInvert">
      <summary>대상 디바이스 컨텍스트에서 현재 선택된 브러시 색이 Boolean <see langword="XOR" /> 연산자를 사용하여 대상 색과 결합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatPaint">
      <summary>대상 디바이스 컨텍스트에서 현재 선택된 브러시 색이 Boolean <see langword="OR" /> 연산자를 사용하여 반전된 소스 영역의 색과 결합됩니다. 이 연산의 결과는 Boolean <see langword="OR" /> 연산자를 사용하여 대상 영역의 색과 결합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceAnd">
      <summary>소스 및 대상 영역의 색이 Boolean <see langword="AND" /> 연산자를 사용하여 결합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceCopy">
      <summary>소스 영역이 직접 대상 영역에 복사됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceErase">
      <summary>대상 영역의 반전된 색이 Boolean <see langword="AND" /> 연산자를 사용하여 소스 영역의 색과 결합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceInvert">
      <summary>소스 및 대상 영역의 색이 Boolean <see langword="XOR" /> 연산자를 사용하여 결합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourcePaint">
      <summary>소스 및 대상 영역의 색이 Boolean <see langword="OR" /> 연산자를 사용하여 결합됩니다.</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Whiteness">
      <summary>대상 영역이 실제 색상표의 인덱스 1과 연결된 색을 사용하여 채워집니다. 기본 실제 색상표의 경우 이 색은 흰색입니다.</summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>범주 이름 문자열의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>지정된 컬렉션을 사용하여 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">컬렉션 값을 초기화할 이름이 포함된 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>지정된 이름 배열을 사용하여 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">컬렉션 값을 초기화할 범주의 이름이 포함된 문자열의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>지정된 범주가 컬렉션에 포함되는지 여부를 지정합니다.</summary>
      <param name="value">컬렉션에서 검사할 문자열입니다.</param>
      <returns>지정된 범주가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>지정된 인덱스의 지정된 배열에 컬렉션 요소를 복사합니다.</summary>
      <param name="array">복사할 대상 배열입니다.</param>
      <param name="index">복사를 시작할 대상 배열의 인덱스입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>지정된 값의 인덱스를 가져옵니다.</summary>
      <param name="value">컬렉션에서 인덱스를 검색할 범주 이름입니다.</param>
      <returns>컬렉션에 있는 인덱스이거나, 문자열이 컬렉션에 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>지정된 인덱스의 범주 이름을 가져옵니다.</summary>
      <param name="index">액세스할 컬렉션 요소의 인덱스입니다.</param>
      <returns>지정된 인덱스의 범주 이름입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>조정 가능한 화살표 모양의 선 끝 모양을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>지정된 너비 및 높이를 사용하여 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 클래스의 새 인스턴스를 초기화합니다. 이 생성자를 사용하여 만든 화살표 끝 모양은 항상 채워져 있습니다.</summary>
      <param name="width">화살표의 너비입니다.</param>
      <param name="height">화살표의 높이입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>지정된 너비, 높이 및 채우기 속성을 사용하여 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 클래스의 새 인스턴스를 초기화합니다. <paramref name="isFilled" /> 매개 변수에 전달된 인수에 따라 화살표 끝 모양이 채워지는지 여부가 결정됩니다.</summary>
      <param name="width">화살표의 너비입니다.</param>
      <param name="height">화살표의 높이입니다.</param>
      <param name="isFilled">화살표 끝 모양을 채우려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>화살표 끝 모양을 채우는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>이 속성은 화살표 끝 모양이 채워져 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>화살표 끝 모양의 높이를 가져오거나 설정합니다.</summary>
      <returns>화살표 끝 모양의 높이입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>화살표 끝 모양의 윤곽선과 채우기 영역 사이의 단위 수를 가져오거나 설정합니다.</summary>
      <returns>화살표 끝 모양의 윤곽선과 채우기 영역 사이의 단위 수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>화살표 끝 모양의 너비를 가져오거나 설정합니다.</summary>
      <returns>화살표 끝 모양의 너비(단위)입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 개체의 혼합 패턴을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Blend" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>지정된 비율과 위치의 수를 사용하여 <see cref="T:System.Drawing.Drawing2D.Blend" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="count">
        <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> 및 <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> 배열의 요소 수입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>그라데이션을 위한 혼합 비율의 배열을 가져오거나 설정합니다.</summary>
      <returns>시작 색 및 끝 색의 백분율을 지정하는 혼합 비율의 배열로서 해당 위치에서 사용됩니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>그라데이션을 위한 혼합 위치의 배열을 가져오거나 설정합니다.</summary>
      <returns>그라데이션 선을 따라 거리의 백분율을 지정하는 혼합 위치 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>다중 색 그라데이션에 색 혼합 효과를 주는 데 사용할 색과 위치의 배열을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>지정된 색과 위치의 수를 사용하여 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="count">이 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />의 색과 위치의 수입니다</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>그라데이션을 따라 해당 위치에 사용할 색을 나타내는 색 배열을 가져오거나 설정합니다.</summary>
      <returns>그라데이션을 따라 해당 위치에 사용할 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>그라데이션 선을 따라 해당 위치를 가져오거나 설정합니다.</summary>
      <returns>그라데이션 선을 따라 거리의 백분율을 지정하는 값 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>서로 다른 클리핑 영역을 결합할 수 있는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>기존 영역이 새 영역에서 제거되는 기존 영역의 결과로 대체되도록 지정합니다. 즉, 새 영역에서 기존 영역을 제외합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>기존 영역이 기존 영역에서 제거되는 새 영역의 결과로 대체되도록 지정합니다. 즉, 기존 영역에서 새 영역을 제외합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>교차 부분을 포함하여 두 클리핑 영역을 결합합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>한 클리핑 영역을 다른 클리핑 영역으로 대체합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>통합 부분을 포함하여 두 클리핑 영역을 결합합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>어느 한 영역으로 둘러싸인 영역만 포함하여 두 클리핑 영역을 결합합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>소스 색을 배경색과 결합하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>색이 렌더링될 때 배경색을 덮어쓰도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>색이 렌더링될 때 배경색과 혼합되도록 지정합니다. 혼합은 렌더링되고 있는 색의 알파 구성 요소에 의해 결정됩니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>합성하는 동안 사용할 품질 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>선형 값을 가정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>기본 품질입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>감마 보정을 사용합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>고품질, 저속 합성입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>고속, 저품질 합성입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>잘못된 품질입니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>좌표를 사용할 좌표계를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>좌표가 디바이스 좌표 컨텍스트에 있도록 지정합니다. 컴퓨터 화면에서 디바이스 좌표는 대개 픽셀 단위로 측정됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>좌표가 페이지 좌표 컨텍스트에 있도록 지정합니다. 이 좌표의 단위는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 의해 정의되며, <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 요소 중 하나여야 합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>좌표가 영역 좌표 컨텍스트에 있도록 지정합니다. 영역 좌표는 모델링 환경 같은 비물리적 환경에 사용됩니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>사용자 정의 선 끝 모양을 끝 모양슐화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>지정된 윤곽선 및 채우기를 사용하여 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fillPath">사용자 지정 끝 모양의 채우기를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
      <param name="strokePath">사용자 지정 끝 모양의 윤곽선을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>지정된 윤곽선 및 채우기를 사용하여 지정된 기존 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형에서 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fillPath">사용자 지정 끝 모양의 채우기를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
      <param name="strokePath">사용자 지정 끝 모양의 윤곽선을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
      <param name="baseCap">사용자 지정 끝 모양을 만들 선 끝 모양입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>지정된 윤곽선, 채우기 및 음각을 사용하여 지정된 기존 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형에서 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fillPath">사용자 지정 끝 모양의 채우기를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
      <param name="strokePath">사용자 지정 끝 모양의 윤곽선을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
      <param name="baseCap">사용자 지정 끝 모양을 만들 선 끝 모양입니다.</param>
      <param name="baseInset">끝 모양과 선 사이의 거리입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 기반이 되는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 기반이 되는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>끝 모양과 선 사이의 거리를 가져오거나 설정합니다.</summary>
      <returns>끝 모양의 시작과 선 끝 사이의 거리입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
      <summary>가비지 수집기에서 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />를 회수하기 전에 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>이 사용자 지정 끝 모양을 구성하는 선의 시작과 끝에 사용되는 끝 모양을 가져옵니다.</summary>
      <param name="startCap">이 끝 모양 내의 선 시작 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</param>
      <param name="endCap">이 끝 모양 내의 선 끝 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>이 사용자 지정 끝 모양을 구성하는 선의 시작과 끝에 사용되는 끝 모양을 설정합니다.</summary>
      <param name="startCap">이 끝 모양 내의 선 시작 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</param>
      <param name="endCap">이 끝 모양 내의 선 끝 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 개체를 구성하는 선의 조인 방식을 결정하는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 개체가 선을 조인할 때 사용하는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 개체의 너비에 비례해서 이 <see cref="T:System.Drawing.Pen" /> 클래스 개체에 지정할 배율을 가져오거나 설정합니다.</summary>
      <returns>끝 모양에 지정할 배율입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>각 파선의 양 끝에 사용할 그래픽 모양의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>각 파선의 양 끝에 정사각형 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>각 파선의 양 끝에 원형 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>각 파선의 양 끝에 삼각형 끝 모양을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 개체를 사용하여 그린 파선의 스타일을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>사용자 정의 파선 스타일을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>대시로 구성된 파선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>대시와 점이 반복되는 선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>대시와 두 개의 점이 반복되는 선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>점으로 구성된 선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>실선을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>닫힌 경로의 내부를 채우는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>Alternate 채우기 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>Winding 채우기 모드를 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>그래픽 스택에 있는 명령이 즉시 종료(플러시)되거나 가능한 한 빨리 실행되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>스택에 있는 모든 그래픽 작업이 즉시 플러시되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>스택에 있는 모든 그래픽 작업이 가능한 한 빨리 실행되도록 지정합니다. 이렇게 하면 그래픽 상태가 동기화됩니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>그래픽 컨테이너의 내부 데이터를 나타냅니다. 이 클래스는 <see cref="T:System.Drawing.Graphics" /> 및 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 메서드를 사용하여 <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> 개체의 상태를 저장하는 데 사용됩니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>연결된 일련의 선과 곡선을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 값을 사용하여 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fillMode">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />의 내부를 채우는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열을 사용하여 <see cref="T:System.Drawing.Point" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pts">이 <see cref="T:System.Drawing.Point" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</param>
      <param name="types">
        <paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열과 지정된 <see cref="T:System.Drawing.Point" /> 열거형 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pts">이 <see cref="T:System.Drawing.Point" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</param>
      <param name="types">
        <paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</param>
      <param name="fillMode">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열을 사용하여 <see cref="T:System.Drawing.PointF" /> 배열의 새 인스턴스를 초기화합니다.</summary>
      <param name="pts">이 <see cref="T:System.Drawing.PointF" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</param>
      <param name="types">
        <paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열과 지정된 <see cref="T:System.Drawing.PointF" /> 열거형 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 배열의 새 인스턴스를 초기화합니다.</summary>
      <param name="pts">이 <see cref="T:System.Drawing.PointF" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</param>
      <param name="types">
        <paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</param>
      <param name="fillMode">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>타원형 호를 현재 그림에 추가합니다.</summary>
      <param name="rect">호가 그려지는 타원의 사각형 범위를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>타원형 호를 현재 그림에 추가합니다.</summary>
      <param name="rect">호가 그려지는 타원의 사각형 범위를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>타원형 호를 현재 그림에 추가합니다.</summary>
      <param name="x">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</param>
      <param name="height">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>타원형 호를 현재 그림에 추가합니다.</summary>
      <param name="x">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</param>
      <param name="height">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>3차원 큐빅 곡선을 현재 그림에 추가합니다.</summary>
      <param name="pt1">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="pt2">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="pt3">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="pt4">곡선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>3차원 큐빅 곡선을 현재 그림에 추가합니다.</summary>
      <param name="pt1">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="pt2">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="pt3">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="pt4">곡선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>3차원 큐빅 곡선을 현재 그림에 추가합니다.</summary>
      <param name="x1">곡선의 시작점에 대한 X좌표입니다.</param>
      <param name="y1">곡선의 시작점에 대한 Y좌표입니다.</param>
      <param name="x2">곡선의 첫째 제어점에 대한 X좌표입니다.</param>
      <param name="y2">곡선의 첫째 제어점에 대한 Y좌표입니다.</param>
      <param name="x3">곡선의 둘째 제어점에 대한 X좌표입니다.</param>
      <param name="y3">곡선의 둘째 제어점에 대한 Y좌표입니다.</param>
      <param name="x4">곡선의 엔드포인트에 대한 X좌표입니다.</param>
      <param name="y4">곡선의 엔드포인트에 대한 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>3차원 큐빅 곡선을 현재 그림에 추가합니다.</summary>
      <param name="x1">곡선의 시작점에 대한 X좌표입니다.</param>
      <param name="y1">곡선의 시작점에 대한 Y좌표입니다.</param>
      <param name="x2">곡선의 첫째 제어점에 대한 X좌표입니다.</param>
      <param name="y2">곡선의 첫째 제어점에 대한 Y좌표입니다.</param>
      <param name="x3">곡선의 둘째 제어점에 대한 X좌표입니다.</param>
      <param name="y3">곡선의 둘째 제어점에 대한 Y좌표입니다.</param>
      <param name="x4">곡선의 엔드포인트에 대한 X좌표입니다.</param>
      <param name="y4">곡선의 엔드포인트에 대한 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>닫힌 곡선을 이 경로에 추가합니다. 곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>닫힌 곡선을 이 경로에 추가합니다. 곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="tension">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>닫힌 곡선을 이 경로에 추가합니다. 곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>닫힌 곡선을 이 경로에 추가합니다. 곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="tension">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>스플라인 곡선을 현재 그림에 추가합니다. 곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>스플라인 곡선을 현재 그림에 추가합니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="offset">곡선의 첫째 지점으로 사용되는 <paramref name="points" /> 배열에 있는 요소의 인덱스입니다.</param>
      <param name="numberOfSegments">제어점 사이의 곡률을 지정하는 값입니다. 1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</param>
      <param name="tension">제어점 사이의 곡률을 지정하는 값입니다. 1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>스플라인 곡선을 현재 그림에 추가합니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="tension">제어점 사이의 곡률을 지정하는 값입니다. 1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>스플라인 곡선을 현재 그림에 추가합니다. 곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>스플라인 곡선을 현재 그림에 추가합니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="offset">곡선의 첫째 지점으로 사용되는 <paramref name="points" /> 배열에 있는 요소의 인덱스입니다.</param>
      <param name="numberOfSegments">곡선을 그리는 데 사용되는 세그먼트 수입니다. 세그먼트는 두 지점을 연결하는 선입니다.</param>
      <param name="tension">제어점 사이의 곡률을 지정하는 값입니다. 1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>스플라인 곡선을 현재 그림에 추가합니다.</summary>
      <param name="points">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="tension">제어점 사이의 곡률을 지정하는 값입니다. 1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>타원을 현재 경로에 추가합니다.</summary>
      <param name="rect">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>타원을 현재 경로에 추가합니다.</summary>
      <param name="rect">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>타원을 현재 경로에 추가합니다.</summary>
      <param name="x">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 경계 사각형의 높이입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>타원을 현재 경로에 추가합니다.</summary>
      <param name="x">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 경계 사각형의 높이입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</summary>
      <param name="pt1">선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="pt2">선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</summary>
      <param name="pt1">선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="pt2">선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>선 세그먼트를 현재 그림에 추가합니다.</summary>
      <param name="x1">선의 시작점에 대한 X좌표입니다.</param>
      <param name="y1">선의 시작점에 대한 Y좌표입니다.</param>
      <param name="x2">선의 엔드포인트에 대한 X좌표입니다.</param>
      <param name="y2">선의 엔드포인트에 대한 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</summary>
      <param name="x1">선의 시작점에 대한 X좌표입니다.</param>
      <param name="y1">선의 시작점에 대한 Y좌표입니다.</param>
      <param name="x2">선의 엔드포인트에 대한 X좌표입니다.</param>
      <param name="y2">선의 엔드포인트에 대한 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</summary>
      <param name="points">추가할 선 세그먼트를 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</summary>
      <param name="points">추가할 선 세그먼트를 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 이 경로에 추가합니다.</summary>
      <param name="addingPath">추가할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <param name="connect">추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부인지 여부를 지정하는 부울 값입니다. <see langword="true" />로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부가 되고, <see langword="false" />로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림과 별개가 됩니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</summary>
      <param name="rect">부채꼴이 그려지는 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 부채꼴 끝 사이의 각도이며, <paramref name="startAngle" />에서 시계 방향으로 측정한 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</summary>
      <param name="x">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 부채꼴 끝 사이의 각도이며, <paramref name="startAngle" />에서 시계 방향으로 측정한 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</summary>
      <param name="x">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" />과 부채꼴 끝 사이의 각도이며, <paramref name="startAngle" />에서 시계 방향으로 측정한 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>이 경로에 다각형을 추가합니다.</summary>
      <param name="points">추가할 다각형을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>이 경로에 다각형을 추가합니다.</summary>
      <param name="points">추가할 다각형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>이 경로에 사각형을 추가합니다.</summary>
      <param name="rect">추가할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>이 경로에 사각형을 추가합니다.</summary>
      <param name="rect">추가할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>이 경로에 일련의 사각형을 추가합니다.</summary>
      <param name="rects">추가할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>이 경로에 일련의 사각형을 추가합니다.</summary>
      <param name="rects">추가할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>이 경로에 텍스트 문자열을 추가합니다.</summary>
      <param name="s">추가할 <see cref="T:System.String" />입니다.</param>
      <param name="family">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="style">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다. 이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</param>
      <param name="emSize">문자를 제한하는 em 정사각형 상자의 높이입니다.</param>
      <param name="origin">텍스트가 시작되는 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="format">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>이 경로에 텍스트 문자열을 추가합니다.</summary>
      <param name="s">추가할 <see cref="T:System.String" />입니다.</param>
      <param name="family">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="style">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다. 이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</param>
      <param name="emSize">문자를 제한하는 em 정사각형 상자의 높이입니다.</param>
      <param name="origin">텍스트가 시작되는 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="format">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>이 경로에 텍스트 문자열을 추가합니다.</summary>
      <param name="s">추가할 <see cref="T:System.String" />입니다.</param>
      <param name="family">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="style">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다. 이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</param>
      <param name="emSize">문자를 제한하는 em 정사각형 상자의 높이입니다.</param>
      <param name="layoutRect">텍스트를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <param name="format">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>이 경로에 텍스트 문자열을 추가합니다.</summary>
      <param name="s">추가할 <see cref="T:System.String" />입니다.</param>
      <param name="family">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="style">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다. 이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</param>
      <param name="emSize">문자를 제한하는 em 정사각형 상자의 높이입니다.</param>
      <param name="layoutRect">텍스트를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
      <param name="format">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>이 경로에서 모든 마커를 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>이 경로와 정확하게 일치하는 복사본을 만듭니다.</summary>
      <returns>이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>이 경로에 있는 열린 그림을 모두 닫고 새 그림을 시작합니다. 열린 각 그림의 엔드포인트에서 시작점으로 선을 연결하면 해당 그림이 닫힙니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>현재 그림을 닫고 새 그림을 시작합니다. 연결된 일련의 선과 곡선이 현재 그림에 있으면 메서드가 엔드포인트에서 시작점으로 선을 연결하여 루프를 닫습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>지정된 변환을 적용한 다음 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</summary>
      <param name="matrix">직선으로 만들기 전에 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</summary>
      <param name="matrix">직선으로 만들기 전에 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <param name="flatness">곡선과 해당 곡선의 직선화 근사값 사이의 최대 허용 오류를 지정합니다. 기본값은 0.25입니다. 이 값을 낮추면 근사값에서 선 세그먼트의 수가 증가합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 제한하는 사각형을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 의해 이 경로가 변환되면 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 제한하는 사각형을 반환합니다.</summary>
      <param name="matrix">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다. 이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</param>
      <returns>이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>현재 경로가 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 의해 변환되고 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 사용하여 그려지는 경우 이 <see cref="T:System.Drawing.Pen" />를 제한하는 사각형을 반환합니다.</summary>
      <param name="matrix">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다. 이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</param>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />를 그릴 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <returns>이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>이 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 배열에 있는 마지막 지점을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.PointF" />에 있는 마지막 지점을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="point">테스트할 위치를 지정하는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="pt">테스트할 위치를 지정하는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="point">테스트할 위치를 지정하는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="pt">테스트할 위치를 지정하는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="pen">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="point">테스트할 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="pt">테스트할 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="point">테스트할 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="pt">테스트할 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>지정된 지점이 이 개체 내에 들어 있으면 이 메서드가 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 사용하여 지정된 지점이 이 <see cref="T:System.Drawing.Graphics" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>지정된 지점이 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 가시 클리핑 영역에 있는 이 <see cref="T:System.Drawing.Graphics" /> 내에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="graphics">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.PathData" />의 지점(<paramref name="points" />) 및 형식(<paramref name="types" />)의 배열을 캡슐화하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.PathData" />의 지점 및 형식에 대한 배열을 캡슐화하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>경로의 지점을 가져옵니다.</summary>
      <returns>경로를 나타내는 <see cref="T:System.Drawing.PointF" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 배열의 해당 지점 종류를 가져옵니다.</summary>
      <returns>경로에서 해당 지점 종류를 나타내는 바이트의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 또는 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열의 요소 수를 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 또는 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열의 요소 수를 지정하는 정수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 및 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열을 비우고 <see cref="T:System.Drawing.Drawing2D.FillMode" />를 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />로 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>이 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 배열에 있는 지점의 순서를 반대로 바꿉니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 마커를 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>현재 그림을 닫지 않고 새 그림을 시작합니다. 경로에 추가된 모든 후속 지점이 이 새 그림에 추가됩니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 변환 매트릭스를 적용합니다.</summary>
      <param name="matrix">적용할 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</summary>
      <param name="destPoints">
        <paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다. 이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데, 세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</param>
      <param name="srcRect">
        <paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</summary>
      <param name="destPoints">
        <paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다. 이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데, 세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</param>
      <param name="srcRect">
        <paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
      <param name="matrix">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</summary>
      <param name="destPoints">
        <paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다. 이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데, 세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</param>
      <param name="srcRect">
        <paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
      <param name="matrix">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="warpMode">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</summary>
      <param name="destPoints">
        <paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다. 이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데, 세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</param>
      <param name="srcRect">
        <paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</param>
      <param name="matrix">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="warpMode">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 열거형입니다.</param>
      <param name="flatness">결과로 만들어지는 경로의 직선화 정도를 지정하는 0에서 1 사이의 값입니다. 자세한 내용은 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 메서드를 참조하십시오.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>경로에 윤곽선을 추가합니다.</summary>
      <param name="pen">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 윤곽선을 추가합니다.</summary>
      <param name="pen">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="matrix">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 바꿉니다.</summary>
      <param name="pen">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="matrix">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="flatness">곡선에 대한 직선화 정도를 지정하는 값입니다.</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 하위 경로를 반복할 수 있도록 하고, 각 하위 경로에 포함된 모양의 종류를 테스트합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 개체를 사용하여 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">이 도우미 클래스가 초기화되는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>연결된 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 속성 및 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 속성 배열을 지정된 두 배열에 복사합니다.</summary>
      <param name="points">반환될 때 해당 경로에 있는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열을 포함합니다.</param>
      <param name="types">반환될 때 해당 경로에 있는 지점의 종류를 나타내는 바이트의 배열을 포함합니다.</param>
      <param name="startIndex">배열의 시작 인덱스를 지정합니다.</param>
      <param name="endIndex">배열의 끝 인덱스를 지정합니다.</param>
      <returns>복사된 지점 수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>경로의 지점 수를 가져옵니다.</summary>
      <returns>경로의 지점 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>연결된 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 속성 및 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 속성 배열을 지정된 두 배열에 복사합니다.</summary>
      <param name="points">반환될 때 해당 경로에 있는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열을 포함합니다.</param>
      <param name="types">반환될 때 해당 경로에 있는 지점의 종류를 나타내는 바이트의 배열을 포함합니다.</param>
      <returns>복사된 지점 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />와 연결된 경로에 곡선이 포함되어 있는지 여부를 나타냅니다.</summary>
      <returns>현재 하위 경로에 곡선이 들어 있으면 이 메서드가 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 개체에는 해당 개체와 관련된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체가 있습니다. <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> 메서드는 연결된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 경로에 있는 다음 마커까지 증가시키고, 현재 마커와 다음 마커(또는 경로 끝) 사이에 있는 모든 지점을 매개 변수에 전달되는 두 번째 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체에 복사합니다.</summary>
      <param name="path">지점이 복사될 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</param>
      <returns>이 마커와 다음 마커 사이의 지점 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />를 경로에 있는 다음 마커까지 증가시키고, [out] 매개 변수를 사용하여 시작 및 중지 인덱스를 반환합니다.</summary>
      <param name="startIndex">[out] 이 매개 변수에 제공된 정수 참조는 하위 경로를 시작하는 지점의 인덱스를 받습니다.</param>
      <param name="endIndex">[out] 이 매개 변수에 제공된 정수 참조는 <paramref name="startIndex" />가 가리키는 하위 경로를 끝내는 지점의 인덱스를 받습니다.</param>
      <returns>이 마커와 다음 마커 사이의 지점 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>형식이 모두 같은 데이터 지점의 다음 그룹에 대한 시작 인덱스와 끝 인덱스를 가져옵니다.</summary>
      <param name="pathType">[out] 그룹 내 모든 점이 공유하는 점 종류를 받습니다. 가능한 종류는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형에서 검색할 수 있습니다.</param>
      <param name="startIndex">[out] 점 그룹의 시작 인덱스를 받습니다.</param>
      <param name="endIndex">[out] 점 그룹의 끝 인덱스를 받습니다.</param>
      <returns>이 메서드는 그룹에 있는 데이터 지점 수를 반환합니다. 경로에 그룹이 더 이상 없으면 이 메서드는 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />의 연결된 경로에서 다음 그림(하위 경로)을 가져옵니다.</summary>
      <param name="path">이 반복기에 대해 가져온 그림(하위 경로)의 데이터 지점과 일치하도록 해당 데이터 지점을 설정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <param name="isClosed">[out] 현재 하위 경로가 닫혀 있는지 여부를 나타냅니다. 그림이 닫혀 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>가져온 그림(하위 경로)에 있는 데이터 지점 수입니다. 가져올 그림이 더 이상 없으면 0이 반환됩니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />를 경로에 있는 다음 하위 경로로 이동합니다. 다음 하위 경로의 시작 인덱스와 끝 인덱스는 [out] 매개 변수에 들어 있습니다.</summary>
      <param name="startIndex">[out] 다음 하위 경로의 시작 인덱스를 받습니다.</param>
      <param name="endIndex">[out] 다음 하위 경로의 끝 인덱스를 받습니다.</param>
      <param name="isClosed">[out] 하위 경로가 닫혀 있는지 여부를 나타냅니다.</param>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체의 하위 경로 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />를 연결된 경로의 시작까지 다시 수행합니다.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>경로의 하위 경로 수를 가져옵니다.</summary>
      <returns>경로의 하위 경로 수입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>
        <see cref="T:System.Drawing.Graphics" /> 개체의 상태를 나타냅니다. 이 개체는 <see cref="M:System.Drawing.Graphics.Save" /> 메서드를 호출하면 반환됩니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>빗살 무늬 스타일, 전경색 및 배경색을 사용하여 사각형 브러시를 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 열거형 및 전경색을 사용하여 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hatchstyle">
        <see cref="T:System.Drawing.Drawing2D.HatchStyle" />를 사용하여 그린 무늬를 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 값 중 하나입니다.</param>
      <param name="foreColor">이 <see cref="T:System.Drawing.Color" />를 사용하여 그린 선의 색을 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 열거형, 전경색 및 배경색을 사용하여 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hatchstyle">
        <see cref="T:System.Drawing.Drawing2D.HatchStyle" />를 사용하여 그린 무늬를 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 값 중 하나입니다.</param>
      <param name="foreColor">이 <see cref="T:System.Drawing.Color" />를 사용하여 그린 선의 색을 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 구조체입니다.</param>
      <param name="backColor">이 <see cref="T:System.Drawing.Color" />를 사용하여 그린 선 사이의 공간 색을 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 구조체입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 개체를 사용하여 그린 빗살 무늬 선 사이의 공백 색을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Color" />의 배경색을 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 개체의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 개체를 사용하여 그린 빗살 무늬 선의 색을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Color" />의 전경색을 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 개체의 빗살 무늬 스타일을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.HatchStyle" />의 무늬를 나타내는 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 개체에 사용할 수 있는 다른 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>오른쪽 위에서 왼쪽 아래로 향하는 대각선 모양의 선 무늬입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>서로 교차하는 가로선과 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>오른쪽으로 기울어져 있고 맨 위 지점에서 맨 아래 지점으로 향하며, <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />보다 간격이 50% 정도 가까우며, 너비가 두 배인 대각선을 지정합니다. 이 빗살 무늬는 앤티 앨리어싱되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />보다 간격이 50% 정도 가까우며, <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 너비의 두 배인 가로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>맨 위 지점에서 맨 아래 지점으로 향하면서 왼쪽으로 기울어져 있고, <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />보다 간격이 50% 정도 가까우며, 너비가 두 배인 앤티 앨리어싱되지 않는 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" />보다 간격이 50% 정도 가까우며, 너비가 두 배인 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>오른쪽으로 기울어져 있고 맨 위 지점에서 맨 아래 지점으로 향하는 대시로 구성된 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>대시 가로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>왼쪽으로 기울어져 있고 맨 위 지점에서 맨 아래 지점으로 향하는 대시가 있는 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>대시 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>왼쪽으로 기울어져 있고 맨 위 지점에서 맨 아래 지점으로 향하는 벽돌을 쌓은 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>십자형으로 교차하는 대각선의 무늬입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>잔디 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>점으로 구성되어 있고 서로 교차하는 정방향 대각선과 역방향 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>점으로 구성되어 있고 서로 교차하는 가로선과 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>왼쪽 위에서 오른쪽 아래로 향하는 대각선 모양의 선 무늬입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>가로선의 무늬입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>가로로 쌓은 벽돌 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" />보다 두 배의 크기를 가진 정사각형으로 구성된 바둑판 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" />보다 큰 조각으로 구성된 색종이 조각 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> 빗살 무늬 스타일을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>맨 위 지점에서 맨 아래 지점으로 향하면서 오른쪽으로 기울어져 있고, <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />보다 간격이 50% 정도 가까운 앤티 앨리어싱되지 않는 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />보다 간격이 50% 정도 가까운 가로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>맨 위 지점에서 맨 아래 지점으로 향하면서 왼쪽으로 기울어져 있고, <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />보다 간격이 50% 정도 가까운 앤티 앨리어싱되지 않는 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" />보다 간격이 50% 정도 가까운 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" /> 빗살 무늬 스타일을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 빗살 무늬 스타일을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 빗살 무늬 스타일보다 간격이 75% 정도 가깝거나 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" />보다 25% 정도 가까운 가로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 빗살 무늬 스타일보다 간격이 75% 정도 가깝거나 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" />보다 25% 정도 가까운 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>서로 교차하지만 앤티 앨리어싱되지 않는 정방향 대각선과 역방향 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>5% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 5:95입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>10% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 10:90입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>20% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 20:80입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>25% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 25:75입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>30% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 30:70입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>40% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 40:60입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>50% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 50:50입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>60% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 60:40입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>70% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 70:30입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>75% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 75:25입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>80% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 80:100입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>90% 빗살 무늬를 지정합니다. 전경색과 배경색의 비율은 90:10입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>격자 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>오른쪽으로 기울어져 있고 맨 위 지점에서 맨 아래 지점으로 향하며, 대각선 방향으로 널빤지를 쌓은 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>바둑판 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>색종이 조각 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>서로 교차하며 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> 빗살 무늬 스타일보다 간격이 50% 정도 가까운 가로선과 세로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>대각선 방향으로 놓인 바둑판 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>서로 인접한 구 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>창살 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>세로선의 무늬입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>물결표로 구성된 가로선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>직물 모양의 빗살 무늬를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>맨 위 지점에서 맨 아래 지점으로 향하면서 오른쪽으로 기울어져 있고, <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 빗살 무늬 스타일과 간격이 같으며, 너비는 세 배인 앤티 앨리어싱되지 않는 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>맨 위 지점에서 맨 아래 지점으로 향하며서 왼쪽으로 기울어져 있고, <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 빗살 무늬 스타일과 간격이 같으며, 너비는 세 배인 앤티 앨리어싱되지 않는 대각선을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>지그재그로 구성된 가로선을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 열거형은 이미지의 크기를 조정하거나 회전하는 데 사용되는 알고리즘을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>이중 큐빅 보간을 지정합니다. 아무 것도 사전 필터링되지 않았습니다. 이 모드는 이미지를 원래 크기의 25% 미만으로 축소하는 경우에는 적합하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>이중 선형 보간을 지정합니다. 아무 것도 사전 필터링되지 않았습니다. 이 모드는 이미지를 원래 크기의 50% 미만으로 축소하는 경우에는 적합하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>기본 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>고품질 보간을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>고품질 이중 큐빅 보간을 지정합니다. 고품질 축소를 보장하기 위해 사전 필터링이 수행됩니다. 이 모드에서는 최고 품질의 변환 이미지가 만들어집니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>고품질 이중 선형 보간을 지정합니다. 고품질 축소를 보장하기 위해 사전 필터링이 수행됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> 열거형의 <see cref="T:System.Drawing.Drawing2D.QualityMode" /> 요소에 해당합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>저품질 보간을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>최근접 픽셀 보간을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>선형 그라데이션을 사용하여 <see cref="T:System.Drawing.Brush" />를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>지정된 점과 색을 사용하여 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="point1">선형 그라데이션의 시작점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="point2">선형 그라데이션의 엔드포인트를 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="color1">선형 그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">선형 그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>지정된 점과 색을 사용하여 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="point1">선형 그라데이션의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="point2">선형 그라데이션의 엔드포인트를 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="color1">선형 그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">선형 그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>사각형, 시작 및 끝 색, 방향을 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="rect">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="color1">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="linearGradientMode">그라데이션의 방향을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 열거형입니다. 방향은 그라데이션의 시작점과 끝점을 결정합니다. 예를 들어, <see langword="LinearGradientMode.ForwardDiagonal" />은 시작점을 사각형의 왼쪽 위 모퉁이로, 끝점을 사각형의 오른쪽 아래 모퉁이로 지정합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="rect">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="color1">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="angle">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="rect">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="color1">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="angle">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</param>
      <param name="isAngleScaleable">각도가 이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />와 연결된 변환의 영향을 받도록 지정하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>사각형, 시작 및 끝 색, 방향 모드를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="rect">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="color1">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="linearGradientMode">그라데이션의 방향을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 열거형입니다. 방향은 그라데이션의 시작점과 끝점을 결정합니다. 예를 들어, <see langword="LinearGradientMode.ForwardDiagonal" />은 시작점을 사각형의 왼쪽 위 모퉁이로, 끝점을 사각형의 오른쪽 아래 모퉁이로 지정합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="rect">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="color1">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="angle">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="rect">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="color1">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="color2">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <param name="angle">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</param>
      <param name="isAngleScaleable">각도가 이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />와 연결된 변환의 영향을 받도록 지정하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>그라데이션에 대한 사용자 지정 대칭을 정의하는 위치와 비율을 지정하는 <see cref="T:System.Drawing.Drawing2D.Blend" />를 가져오거나 설정합니다.</summary>
      <returns>그라데이션에 대한 사용자 지정 대칭을 나타내는 <see cref="T:System.Drawing.Drawing2D.Blend" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />에 감마 보정을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />에 감마 보정을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>다중 색 선형 그라데이션을 정의하는 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />를 가져오거나 설정합니다.</summary>
      <returns>다중 색 선형 그라데이션을 정의하는 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>그라데이션의 시작 색과 끝 색을 가져오거나 설정합니다.</summary>
      <returns>그라데이션의 시작 색과 끝 색을 나타내는 두 <see cref="T:System.Drawing.Color" /> 구조체의 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 지정된 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 로컬 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</summary>
      <param name="matrix">기하학적 변환을 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서에 따라 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />의 로컬 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</summary>
      <param name="matrix">기하학적 변환을 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="order">두 매트릭스를 곱할 순서를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>그라데이션의 시작점과 끝점을 정의하는 사각형 영역을 가져옵니다.</summary>
      <returns>그라데이션의 시작점과 끝점을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> 속성을 동일하게 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>지정된 각도만큼 로컬 기하학적 변환을 회전합니다. 이 메서드는 변환에 회전을 추가합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>특정 순서대로 지정된 각도만큼 로컬 기하학적 변환을 회전합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
      <param name="order">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다. 이 메서드는 변환 앞에 배율 조정 매트릭스를 추가합니다.</summary>
      <param name="sx">X축 방향으로 변환의 배율을 조정할 값입니다.</param>
      <param name="sy">Y-축 방향으로 변환의 배율을 조정할 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>특정 순서로 지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다.</summary>
      <param name="sx">X축 방향으로 변환의 배율을 조정할 값입니다.</param>
      <param name="sy">Y-축 방향으로 변환의 배율을 조정할 값입니다.</param>
      <param name="order">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>가운데에 특정 색이 있으며, 양쪽 끝에서 단일 색으로 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</summary>
      <param name="focus">그라데이션이 끝 색으로만 구성된 지점인 그라데이션 가운데를 지정하는 0에서 100 사이의 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>가운데에 특정 색이 있으며, 양쪽 끝에서 단일 색으로 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</summary>
      <param name="focus">그라데이션이 끝 색으로만 구성된 지점인 그라데이션 가운데를 지정하는 0에서 100 사이의 값입니다.</param>
      <param name="scale">시작 색에서 <paramref name="focus" />(끝 색)까지 색이 대칭을 이루는 속도를 지정하는 0에서 1 사이의 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>종 모양의 곡선을 기반으로 그라데이션 대칭을 만듭니다.</summary>
      <param name="focus">시작 색과 끝 색이 똑같이 혼합되어 있는 지점인 그라데이션 가운데를 지정하는 0에서 1 사이의 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>종 모양의 곡선을 기반으로 그라데이션 대칭을 만듭니다.</summary>
      <param name="focus">그라데이션이 끝 색으로만 구성된 지점인 그라데이션 가운데를 지정하는 0에서 100 사이의 값입니다.</param>
      <param name="scale">
        <paramref name="focus" />에서 색이 대칭을 이루는 속도를 지정하는 0에서 1 사이의 값입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 로컬 기하학적 변환을 정의하는 복사본 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />로 그린 채우기에만 적용되는 기하학적 변환을 정의하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>지정된 크기만큼 로컬 기하학적 변환을 이동합니다. 이 메서드는 변환 앞에 이동을 추가합니다.</summary>
      <param name="dx">X축으로의 이동 값입니다.</param>
      <param name="dy">Y축으로의 이동 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>특정 순서로 지정된 크기만큼 로컬 기하학적 변환을 이동합니다.</summary>
      <param name="dx">X축으로의 이동 값입니다.</param>
      <param name="dy">Y축으로의 이동 값입니다.</param>
      <param name="order">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 랩 모드를 나타내는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />로 그린 채우기를 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>선형 그라데이션의 방향을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>오른쪽 위에서 왼쪽 아래로 향하는 그라데이션을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>왼쪽 위에서 오른쪽 아래로 향하는 그라데이션을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>왼쪽에서 오른쪽으로 향하는 그라데이션을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>위쪽에서 아래쪽으로 향하는 그라데이션을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 개체가 선을 끝낼 때 사용할 수 있는 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>선 끝 모양이 앵커 모양인지 여부를 검사하는 데 사용되는 마스크를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>화살표 모양의 앵커를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>사용자 지정 선 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>다이아몬드 앵커 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>일직선 형태의 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>앵커를 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>둥근 선 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>둥근 앵커 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>정사각형 형태의 선 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>정사각형 앵커 선 끝 모양을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>삼각형 선 끝 모양을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체에 들어 있는 그림(하위 경로)의 연속된 선이나 곡선 세그먼트를 조인하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>3D 조인을 지정합니다. 대각선 모퉁이가 만들어집니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>마이터 조인을 지정합니다. 마이터 길이가 마이터 한계를 초과하는지의 여부에 따라 날카로운 모퉁이나 클리핑된 모퉁이가 만들어집니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>마이터 조인을 지정합니다. 마이터 길이가 마이터 한계를 초과하는지의 여부에 따라 날카로운 모퉁이나 각진 모퉁이가 만들어집니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>원형 조인을 지정합니다. 선 사이에 부드러운 원형 호가 만들어집니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>기하학적 변환을 나타내는 3 x 3 상관 매트릭스를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 항등 매트릭스로 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 초기화합니다.</summary>
      <param name="rect">변환할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="plgpts">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다. 처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 초기화합니다.</summary>
      <param name="rect">변환할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="plgpts">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다. 처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>지정된 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="m11">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 첫째 행과 첫째 열 값입니다.</param>
      <param name="m12">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 첫째 행과 둘째 열 값입니다.</param>
      <param name="m21">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 둘째 행과 첫째 열 값입니다.</param>
      <param name="m22">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 둘째 행과 둘째 열 값입니다.</param>
      <param name="dx">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 셋째 행과 첫째 열 값입니다.</param>
      <param name="dy">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 셋째 행과 둘째 열 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 요소를 나타내는 부동 소수점 값의 배열을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 요소를 나타내는 부동 소수점 값의 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>지정된 개체가 <see cref="T:System.Drawing.Drawing2D.Matrix" />이고 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />와 동일한지 여부를 테스트합니다.</summary>
      <param name="obj">테스트할 개체입니다.</param>
      <returns>이 메서드는 <paramref name="obj" />가 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />와 동일한 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />이면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>해시 코드를 반환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 대한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>역변환할 수 있으면 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환합니다.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 항등 매트릭스인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 항등 매트릭스이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 <paramref name="matrix" /> 매개 변수에 지정된 매트릭스를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</summary>
      <param name="matrix">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <paramref name="matrix" /> 매개 변수에 지정된 순서대로 <paramref name="order" /> 매개 변수에 지정된 매트릭스를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</summary>
      <param name="matrix">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="order">곱할 순서를 나타내는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 x 이동 값(dx 값 또는 셋째 행과 첫째 열에 있는 요소)을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 x 이동 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 y 이동 값(dy 값 또는 셋째 행과 둘째 열에 있는 요소)을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 y 이동 값입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>항등 매트릭스의 요소를 포함하도록 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>원점을 기준으로 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 앞에 시계 방향 회전을 추가합니다.</summary>
      <param name="angle">회전 각도(도)입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>원점(X 및 Y 좌표가 0임)을 기준으로 <paramref name="angle" /> 매개 변수에 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</summary>
      <param name="angle">회전 각도(도)입니다.</param>
      <param name="order">이 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />에 회전이 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>회전을 앞에 추가하여 <paramref name="point" /> 매개 변수에 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</summary>
      <param name="angle">회전 각도(도)입니다.</param>
      <param name="point">회전의 중심을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서대로 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</summary>
      <param name="angle">회전 각도(도)입니다.</param>
      <param name="point">회전의 중심을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</param>
      <param name="order">회전이 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>배율 벡터를 앞에 추가하여 지정된 배율 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</summary>
      <param name="scaleX">X축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</param>
      <param name="scaleY">Y축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서대로 지정된 배율 벡터(<paramref name="scaleX" /> 및 <paramref name="scaleY" />)를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</summary>
      <param name="scaleX">X축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</param>
      <param name="scaleY">Y축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</param>
      <param name="order">이 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />에 배율 벡터가 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>기울이기 변환을 앞에 추가하여 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</summary>
      <param name="shearX">가로 기울이기 요소입니다.</param>
      <param name="shearY">세로 기울이기 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서대로 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</summary>
      <param name="shearX">가로 기울이기 요소입니다.</param>
      <param name="shearY">세로 기울이기 요소입니다.</param>
      <param name="order">기울이기가 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</summary>
      <param name="pts">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</summary>
      <param name="pts">변환할 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율과 회전 구성 요소만 지정된 지점의 배열에 적용합니다.</summary>
      <param name="pts">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>배열의 각 벡터에 매트릭스를 곱합니다. 이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</summary>
      <param name="pts">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>이동 벡터를 앞에 추가하여 지정된 이동 벡터(<paramref name="offsetX" /> 및 <paramref name="offsetY" />)를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</summary>
      <param name="offsetX">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 x 값입니다.</param>
      <param name="offsetY">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 y 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서대로 지정된 이동 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</summary>
      <param name="offsetX">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 x 값입니다.</param>
      <param name="offsetY">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 y 값입니다.</param>
      <param name="order">이 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />에 이동이 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>배열의 각 벡터에 매트릭스를 곱합니다. 이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</summary>
      <param name="pts">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>매트릭스 변환 작업의 순서를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>새 작업이 이전 작업 이후에 적용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>새 작업이 이전 작업 이전에 적용됩니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체를 구성하는 그래픽 데이터를 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.PathData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>경로를 구성하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열을 가져오거나 설정합니다.</summary>
      <returns>경로를 구성하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>경로의 해당 지점 종류를 가져오거나 설정합니다.</summary>
      <returns>경로에서 해당 지점의 종류를 나타내는 바이트의 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>그라데이션을 사용하여 <see cref="T:System.Drawing.Brush" /> 개체의 내부를 채우는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>지정된 경로를 사용하여 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 사용하여 채운 영역을 정의하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>지정된 지점을 사용하여 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="points">경로의 꼭짓점을 구성하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>지정된 지점 및 랩 모드를 사용하여 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="points">경로의 꼭짓점을 구성하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="wrapMode">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />로 그린 채우기를 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>지정된 지점을 사용하여 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="points">경로의 꼭짓점을 구성하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>지정된 지점 및 랩 모드를 사용하여 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="points">경로의 꼭짓점을 구성하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="wrapMode">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />로 그린 채우기를 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>그라데이션에 대한 사용자 지정 대칭을 정의하는 위치와 비율을 지정하는 <see cref="T:System.Drawing.Drawing2D.Blend" />를 가져오거나 설정합니다.</summary>
      <returns>그라데이션에 대한 사용자 지정 대칭을 나타내는 <see cref="T:System.Drawing.Drawing2D.Blend" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>경로 그라데이션의 가운데에 있는 색을 가져오거나 설정합니다.</summary>
      <returns>경로 그라데이션의 가운데에 있는 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>경로 그라데이션의 중점을 가져오거나 설정합니다.</summary>
      <returns>경로 그라데이션의 중점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>그라데이션 대칭의 포커스 지점을 가져오거나 설정합니다.</summary>
      <returns>그라데이션 대칭의 포커스 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>다중 색 선형 그라데이션을 정의하는 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />를 가져오거나 설정합니다.</summary>
      <returns>다중 색 선형 그라데이션을 정의하는 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>다른 매트릭스를 곱한 브러시의 변환 매트릭스로 해당 브러시의 변환 매트릭스를 업데이트합니다.</summary>
      <param name="matrix">브러시의 현재 변환 매트릭스를 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>다른 매트릭스를 곱한 브러시의 변환 매트릭스로 해당 브러시의 변환 매트릭스를 업데이트합니다.</summary>
      <param name="matrix">브러시의 현재 변환 매트릭스를 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="order">두 매트릭스를 곱할 순서를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />의 경계 사각형을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.RectangleF" />가 채우는 경로를 제한하는 사각형 영역을 나타내는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> 속성을 동일하게 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>지정된 각도만큼 로컬 기하학적 변환을 회전합니다. 이 메서드는 변환에 회전을 추가합니다.</summary>
      <param name="angle">회전 각도(범위)입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>특정 순서대로 지정된 각도만큼 로컬 기하학적 변환을 회전합니다.</summary>
      <param name="angle">회전 각도(범위)입니다.</param>
      <param name="order">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다. 이 메서드는 변환 앞에 배율 조정 매트릭스를 추가합니다.</summary>
      <param name="sx">X축 방향의 변환 배율 인수입니다.</param>
      <param name="sy">Y축 방향의 변환 배율 인수입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>특정 순서로 지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다.</summary>
      <param name="sx">X축 방향의 변환 배율 인수입니다.</param>
      <param name="sy">Y축 방향의 변환 배율 인수입니다.</param>
      <param name="order">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>가운데에 다른 색이 있으며, 주변에 있는 다른 한 색과 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</summary>
      <param name="focus">경로의 가운데에서 가장자리까지 반지름을 따라 가운데 색의 농도가 가장 높은 위치를 지정하는 0에서 1 사이의 값입니다. 경로 가운데에 있는 농도가 가장 높은 위치가 기본값(1)입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>가운데에 다른 색이 있으며, 주변에 있는 각 색과 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</summary>
      <param name="focus">경로의 가운데에서 가장자리까지 반지름을 따라 가운데 색의 농도가 가장 높은 위치를 지정하는 0에서 1 사이의 값입니다. 경로 가운데에 있는 농도가 가장 높은 위치가 기본값(1)입니다.</param>
      <param name="scale">가장자리 색과 혼합되는 가운데 색의 최대 농도를 지정하는 0에서 1사이의 값입니다. 기본값인 1은 가운데 색에 사용할 수 있는 가장 높은 농도를 나타냅니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>경로의 가운데에서 시작하여 가장자리로 향하는 색을 변경하는 그라데이션 브러시를 만듭니다. 한 색에서 다른 색으로의 전환은 종 모양의 곡선을 기반으로 합니다.</summary>
      <param name="focus">경로의 가운데에서 가장자리까지 반지름을 따라 가운데 색의 농도가 가장 높은 위치를 지정하는 0에서 1 사이의 값입니다. 경로 가운데에 있는 농도가 가장 높은 위치가 기본값(1)입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>경로의 가운데에서 시작하여 가장자리로 향하는 색을 변경하는 그라데이션 브러시를 만듭니다. 한 색에서 다른 색으로의 전환은 종 모양의 곡선을 기반으로 합니다.</summary>
      <param name="focus">경로의 가운데에서 가장자리까지 반지름을 따라 가운데 색의 농도가 가장 높은 위치를 지정하는 0에서 1 사이의 값입니다. 경로 가운데에 있는 농도가 가장 높은 위치가 기본값(1)입니다.</param>
      <param name="scale">가장자리 색과 혼합되는 가운데 색의 최대 농도를 지정하는 0에서 1사이의 값입니다. 기본값인 1은 가운데 색에 사용할 수 있는 가장 높은 농도를 나타냅니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />가 채우는 경로의 지점에 해당하는 색의 배열을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Color" />가 채우는 경로의 각 지점과 관련된 색을 나타내는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 구조체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 로컬 기하학적 변환을 정의하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />의 복사본을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />로 그린 채우기에만 적용되는 기하학적 변환을 정의하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>로컬 기하학적 변환에 지정된 이동을 적용합니다. 이 메서드는 변환 앞에 이동을 추가합니다.</summary>
      <param name="dx">X축으로의 이동 값입니다.</param>
      <param name="dy">Y축으로의 이동 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서대로 지정된 이동을 로컬 기하학적 변환에 적용합니다.</summary>
      <param name="dx">X축으로의 이동 값입니다.</param>
      <param name="dy">Y축으로의 이동 값입니다.</param>
      <param name="order">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 랩 모드를 나타내는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />를 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />로 그린 채우기를 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체에 있는 지점의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>기본 3차원 곡선입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>3차원 큐빅 곡선입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>하위 경로의 엔드포인트입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>해당 세그먼트가 파선이 됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>선 세그먼트입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>경로 마커입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>마스크 지점입니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체의 시작점입니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>이론적으로 너비가 0인 선을 기준으로 <see cref="T:System.Drawing.Pen" /> 개체의 맞춤을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 개체가 이론적인 선의 가운데에 오도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>
        <see cref="T:System.Drawing.Pen" />이 이론적인 선의 안쪽에 오도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>
        <see cref="T:System.Drawing.Pen" />이 이론적인 선의 왼쪽에 오도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>
        <see cref="T:System.Drawing.Pen" />이 이론적인 선의 바깥쪽에 오도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>
        <see cref="T:System.Drawing.Pen" />이 이론적인 선의 오른쪽에 오도록 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>선을 채울 때 <see cref="T:System.Drawing.Pen" /> 개체가 사용할 채우기 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>빗살 무늬 채우기를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>선형 그라데이션 채우기를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>경로 그라데이션 채우기를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>단색 채우기를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>비트맵 질감 채우기를 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>렌더링하는 동안 픽셀을 오프셋하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>기본 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>고속 앤티 앨리어싱을 위해 가로 방향과 세로 방향으로 모두 -0.5 단위씩 픽셀을 오프셋하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>고품질, 저속 렌더링을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>저품질, 고속 렌더링을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>잘못된 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>픽셀 오프셋을 지정하지 않습니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>GDI+ 개체를 렌더링할 때 전체 품질을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>기본 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>고품질, 저속 렌더링을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>잘못된 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>저품질, 고속 렌더링을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>
        <see cref="T:System.Drawing.Region" /> 개체를 구성하는 데이터를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>
        <see cref="T:System.Drawing.Region" /> 개체를 지정하는 바이트의 배열을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Region" /> 개체를 지정하는 바이트의 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>선, 곡선 및 채워진 영역의 가장자리에 다듬기(앤티 앨리어싱)를 적용할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>앤티 앨리어싱된 렌더링을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>앤티 앨리어싱을 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>앤티 앨리어싱된 렌더링을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>앤티 앨리어싱을 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>잘못된 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>앤티 앨리어싱을 지정하지 않습니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>
        <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> 메서드에 적용된 휘기 변환의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>이중 선형 휘기를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>원근 휘기를 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>채워질 영역보다 질감이나 그라데이션이 작은 경우 바둑판 모양으로 배열하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>질감이나 그라데이션이 바둑판 모양으로 배열되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>그라데이션이나 질감을 바둑판 모양으로 배열합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>질감이나 그라데이션을 좌우로 대칭 이동한 다음 바둑판 모양으로 배열합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>질감이나 그라데이션을 좌우 및 상하로 대칭 이동한 다음 바둑판 모양으로 배열합니다.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>질감이나 그라데이션을 상하로 대칭 이동한 다음 바둑판 모양으로 배열합니다.</summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>글꼴, 크기 및 스타일 특성을 포함하여 텍스트의 특정 형식을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>지정된 기존 <see cref="T:System.Drawing.Font" /> 및 <see cref="T:System.Drawing.FontStyle" /> 열거형을 사용하는 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="prototype">새 <see cref="T:System.Drawing.Font" />를 만들 기존 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="newStyle">새 <see cref="T:System.Drawing.Font" />에 적용할 <see cref="T:System.Drawing.FontStyle" />입니다. <see cref="T:System.Drawing.FontStyle" /> 열거형의 여러 값은 <see langword="OR" /> 연산자와 함께 사용할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>지정된 크기를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>지정된 크기 및 스타일을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>지정된 크기, 스타일 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <param name="gdiCharSet">새 글꼴에 사용할 <see cref="T:System.Byte" /> 문자 집합을 지정하는
GDI입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <param name="gdiCharSet">새 글꼴에 사용할 <see cref="T:System.Byte" /> 문자 집합을 지정하는
GDI입니다.</param>
      <param name="gdiVerticalFont">새 글꼴이 GDI 세로 방향 글꼴에서 파생되었는지 여부를 나타내는 부울 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>지정된 크기 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다. 스타일을 <see cref="F:System.Drawing.FontStyle.Regular" />로 설정합니다.</summary>
      <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>지정된 크기를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
      <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>지정된 크기 및 스타일을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
      <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>지정된 크기, 스타일 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <param name="gdiCharSet">이 글꼴에 사용할 GDI 문자 집합을 지정하는 <see cref="T:System.Byte" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <param name="gdiCharSet">이 글꼴에 사용할 GDI 문자 집합을 지정하는 <see cref="T:System.Byte" />입니다.</param>
      <param name="gdiVerticalFont">새 <see cref="T:System.Drawing.Font" />가 GDI 세로 방향 글꼴에서 파생되었는지 여부를 나타내는 부울 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>지정된 크기 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다. 스타일은 <see cref="F:System.Drawing.FontStyle.Regular" />로 설정됩니다.</summary>
      <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
      <param name="emSize">
        <paramref name="unit" /> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
      <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>이 <see cref="T:System.Drawing.Font" />가 볼드인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />가 볼드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>이 <see cref="T:System.Drawing.Font" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만들고 <see cref="T:System.Object" />로 캐스팅되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>이 <see cref="T:System.Drawing.Font" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>지정된 개체가 <see cref="T:System.Drawing.Font" />이고 이 <see cref="T:System.Drawing.Font" />와 같은 <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" /> 및 <see cref="P:System.Drawing.Font.Unit" /> 속성 값을 갖고 있는지 여부를 나타냅니다.</summary>
      <param name="obj">테스트할 개체입니다.</param>
      <returns>
        <paramref name="obj" /> 매개 변수가 <see cref="T:System.Drawing.Font" />이고 이 <see cref="T:System.Drawing.Font" />와 같은 <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" /> 및 <see cref="P:System.Drawing.Font.Unit" /> 속성 값을 갖고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>이 <see cref="T:System.Drawing.FontFamily" />와 연결된 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.FontFamily" />와 연결된 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>디바이스 컨텍스트에 대한 지정된 창 핸들에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
      <param name="hdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
      <exception cref="T:System.ArgumentException">지정된 디바이스 컨텍스트의 글꼴이 트루타입 글꼴이 아닌 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>지정된 창 핸들에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
      <param name="hfont">GDI 글꼴에 대한 창 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hfont" />가 트루타입 글꼴이 아닌 개체를 가리키는 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>지정된 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
      <param name="lf">
        <see cref="T:System.Drawing.Font" />를 만들 GDI <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>지정된 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
      <param name="lf">
        <see cref="T:System.Drawing.Font" />를 만들 GDI <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
      <param name="hdc">
        <paramref name="lf" /> 구조체에 대한 추가 정보가 들어 있는 디바이스 컨텍스트 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
      <exception cref="T:System.ArgumentException">글꼴이 트루타입 글꼴이 아닌 경우</exception>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>이 <see cref="T:System.Drawing.Font" />가 사용하는 GDI 문자 집합을 지정하는 바이트 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />가 사용하는 GDI 문자 집합을 지정하는 바이트 값입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>이 <see cref="T:System.Drawing.Font" />가 GDI 세로 방향 글꼴에서 파생되었는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />가 GDI 세로 방향 글꼴에서 파생되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>이 <see cref="T:System.Drawing.Font" />의 해시 코드를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />에 대한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>이 글꼴의 줄 간격(픽셀)을 반환합니다.</summary>
      <returns>이 글꼴의 줄 간격(픽셀)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>이 글꼴의 줄 간격을 지정된 <see cref="T:System.Drawing.Graphics" />의 현재 단위로 반환합니다.</summary>
      <param name="graphics">디스플레이 디바이스의 수직 해상도(인치당 도트 수)와 페이지 단위 및 페이지 배율에 대한 설정을 보유하는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 글꼴의 줄 간격(픽셀)입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>지정된 수직 해상도를 가진 디바이스에 그리는 경우 이 <see cref="T:System.Drawing.Font" />의 높이(픽셀)를 반환합니다.</summary>
      <param name="dpi">글꼴의 높이를 계산하는 데 사용되는 수직 해상도(인치당 도트 수)입니다.</param>
      <returns>이 <see cref="T:System.Drawing.Font" />의 높이(픽셀)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>이 글꼴의 줄 간격을 가져옵니다.</summary>
      <returns>이 글꼴의 줄 간격(픽셀)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.IsSystemFont">
      <summary>글꼴이 <see cref="T:System.Drawing.SystemFonts" />의 멤버인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>글꼴이 <see cref="T:System.Drawing.SystemFonts" />의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>이 글꼴에 기울임꼴 스타일이 적용되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>이 글꼴에 기울임꼴 스타일이 적용되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>이 <see cref="T:System.Drawing.Font" />의 글꼴 이름을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />의 글꼴 이름 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.OriginalFontName">
      <summary>원래 지정된 글꼴의 이름을 가져옵니다.</summary>
      <returns>원래 지정된 글꼴의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>
        <see cref="T:System.Drawing.Font" /> 속성에서 지정하는 단위로 측정된 이 <see cref="P:System.Drawing.Font.Unit" />의 em-size를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />의 em-size입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>이 <see cref="T:System.Drawing.Font" />의 em-size(포인트)를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />의 em-size(포인트)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>이 <see cref="T:System.Drawing.Font" />가 글꼴을 통과하는 가로줄을 지정하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />에 글꼴을 통과하는 가로줄이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>이 <see cref="T:System.Drawing.Font" />의 스타일 정보를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />의 스타일 정보를 포함하는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="si">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="P:System.Drawing.Font.SystemFontName">
      <summary>
        <see cref="P:System.Drawing.Font.IsSystemFont" /> 속성이 <see langword="true" />를 반환하는 경우 시스템 글꼴의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Font.IsSystemFont" />가 <see langword="true" />를 반환하면 시스템 글꼴의 이름이고, 그렇지 않으면 빈 문자열("")입니다.</returns>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>이 <see cref="T:System.Drawing.Font" />의 핸들을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />에 대한 창 핸들입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">작업에 실패한 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>이 <see cref="T:System.Drawing.Font" />에서 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체를 만듭니다.</summary>
      <param name="logFont">이 메서드가 만드는 <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>이 <see cref="T:System.Drawing.Font" />에서 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체를 만듭니다.</summary>
      <param name="logFont">이 메서드가 만드는 <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
      <param name="graphics">
        <see langword="LOGFONT" /> 구조체에 대한 추가 정보를 제공하는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>이 <see cref="T:System.Drawing.Font" />의 사람이 인식할 수 있는 문자열 표현을 반환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>이 <see cref="T:System.Drawing.Font" />에 밑줄이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />에 밑줄이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>이 <see cref="T:System.Drawing.Font" />의 단위를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Font" />의 단위를 나타내는 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>비슷한 기본 디자인 및 스타일의 특정 변형이 있는 형식의 그룹을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>지정된 일반 글꼴 패밀리에서 새 <see cref="T:System.Drawing.FontFamily" />를 초기화합니다.</summary>
      <param name="genericFamily">새 <see cref="T:System.Drawing.Text.GenericFontFamilies" />을 만들 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>지정된 이름을 사용하여 새 <see cref="T:System.Drawing.FontFamily" />를 초기화합니다.</summary>
      <param name="name">새 <see cref="T:System.Drawing.FontFamily" />의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />가 빈 문자열("")인 경우
또는
<paramref name="name" />은 애플리케이션을 실행하는 컴퓨터에 설치되지 않은 글꼴을 지정합니다.
또는
<paramref name="name" />은 트루타입 글꼴이 아닌 글꼴을 지정합니다.</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>지정된 이름을 사용하여 지정된 <see cref="T:System.Drawing.FontFamily" />에서 새 <see cref="T:System.Drawing.Text.FontCollection" />를 초기화합니다.</summary>
      <param name="name">새 <see cref="T:System.String" />의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <param name="fontCollection">이 <see cref="T:System.Drawing.Text.FontCollection" />를 포함하는 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />가 빈 문자열("")인 경우
또는
<paramref name="name" />은 애플리케이션을 실행하는 컴퓨터에 설치되지 않은 글꼴을 지정합니다.
또는
<paramref name="name" />은 트루타입 글꼴이 아닌 글꼴을 지정합니다.</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>이 <see cref="T:System.Drawing.FontFamily" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>지정된 개체가 <see cref="T:System.Drawing.FontFamily" />이고 이 <see cref="T:System.Drawing.FontFamily" />와 동일한지 여부를 나타냅니다.</summary>
      <param name="obj">테스트할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Drawing.FontFamily" />이고 이 <see cref="T:System.Drawing.FontFamily" />와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>현재 그래픽 컨텍스트와 관련된 모든 <see cref="T:System.Drawing.FontFamily" /> 개체를 포함하는 배열을 반환합니다.</summary>
      <returns>현재 그래픽 컨텍스트와 관련된 <see cref="T:System.Drawing.FontFamily" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>일반 고정 폭 <see cref="T:System.Drawing.FontFamily" />를 가져옵니다.</summary>
      <returns>일반 고정 폭 글꼴을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>일반 sans serif <see cref="T:System.Drawing.FontFamily" /> 개체를 가져옵니다.</summary>
      <returns>일반 sans serif 글꼴을 나타내는 <see cref="T:System.Drawing.FontFamily" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>일반 serif <see cref="T:System.Drawing.FontFamily" />를 가져옵니다.</summary>
      <returns>일반 serif 글꼴을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>지정된 스타일의 <see cref="T:System.Drawing.FontFamily" />에 대한 셀 상승을 디자인 단위로 반환합니다.</summary>
      <param name="style">글꼴의 스타일 정보를 포함하는 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.FontFamily" />을 사용하는 이 <see cref="T:System.Drawing.FontStyle" />의 셀 상승입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>지정된 스타일의 <see cref="T:System.Drawing.FontFamily" />에 대한 셀 하강을 디자인 단위로 반환합니다.</summary>
      <param name="style">글꼴의 스타일 정보를 포함하는 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.FontFamily" />을 사용하는 이 <see cref="T:System.Drawing.FontStyle" />의 셀 하강 메트릭입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>지정된 스타일의 em 정사각형의 높이를 글꼴 디자인 단위로 가져옵니다.</summary>
      <param name="style">em 높이를 가져올 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <returns>em 사각형의 높이를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>지정된 그래픽 컨텍스트에 사용 가능한 모든 <see cref="T:System.Drawing.FontFamily" /> 개체를 포함하는 배열을 반환합니다.</summary>
      <param name="graphics">
        <see cref="T:System.Drawing.FontFamily" /> 개체를 반환할 <see cref="T:System.Drawing.Graphics" /> 개체입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.Graphics" /> 개체에 사용 가능한 <see cref="T:System.Drawing.FontFamily" /> 개체의 배열입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>이 <see cref="T:System.Drawing.FontFamily" />의 해시 코드를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.FontFamily" />에 대한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>지정된 스타일의 <see cref="T:System.Drawing.FontFamily" />에 대한 줄 간격을 디자인 단위로 반환합니다. 줄 간격은 텍스트에 있는 연속된 두 줄 사이의 세로 거리입니다.</summary>
      <param name="style">적용할 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <returns>텍스트의 연속된 두 줄 사이의 거리를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>이 <see cref="T:System.Drawing.FontFamily" />의 이름을 지정된 언어로 반환합니다.</summary>
      <param name="language">이름이 반환될 언어입니다.</param>
      <returns>이 <see cref="T:System.String" />의 이름을 지정된 언어로 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>지정된 <see cref="T:System.Drawing.FontStyle" /> 열거가 사용 가능한지 여부를 나타냅니다.</summary>
      <param name="style">테스트할 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.FontStyle" />이 사용 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>이 <see cref="T:System.Drawing.FontFamily" />의 이름을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.String" />의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>이 <see cref="T:System.Drawing.FontFamily" />를 사람이 인식할 수 있는 문자열 표현으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.FontFamily" />를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>텍스트에 적용된 스타일 정보를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>굵은 텍스트</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>기울임꼴 텍스트</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>일반 텍스트</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>중간에 줄이 있는 텍스트</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>밑줄이 그어진 텍스트</summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>GDI+ 그리기 화면을 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>현재 <see cref="T:System.Drawing.Imaging.Metafile" />에 주석을 추가합니다.</summary>
      <param name="data">주석을 포함한 바이트의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 새 그래픽 컨테이너를 열어 사용합니다.</summary>
      <returns>이 메서드는 호출되었을 때 이 <see cref="T:System.Drawing.Graphics" />의 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 지정된 크기 조정 변환으로 새 그래픽 컨테이너를 열어 사용합니다.</summary>
      <param name="dstrect">
        <paramref name="srcrect" /> 매개 변수로 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcrect">
        <paramref name="dstrect" /> 매개 변수로 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="unit">컨테이너의 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <returns>이 메서드는 호출되었을 때 이 <see cref="T:System.Drawing.Graphics" />의 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 지정된 크기 조정 변환으로 새 그래픽 컨테이너를 열어 사용합니다.</summary>
      <param name="dstrect">
        <paramref name="srcrect" /> 매개 변수로 새 그래픽 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcrect">
        <paramref name="dstrect" /> 매개 변수로 새 그래픽 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="unit">컨테이너의 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <returns>이 메서드는 호출되었을 때 이 <see cref="T:System.Drawing.Graphics" />의 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>전체 그리기 화면을 지우고 지정된 배경색으로 화면을 채웁니다.</summary>
      <param name="color">그리기 화면의 배경색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 그리기 영역을 제한하는 <see cref="T:System.Drawing.Region" />을 가져오거나 설정합니다.</summary>
      <returns>현재 그리기에 사용할 수 있는 이 <see cref="T:System.Drawing.Graphics" />의 부분을 제한하는 <see cref="T:System.Drawing.Region" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역에 대한 경계를 설정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역에 대한 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>이 <see cref="T:System.Drawing.Graphics" />에 합성 이미지가 그려지는 방식을 지정하는 값을 가져옵니다.</summary>
      <returns>이 속성은 <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 열거형의 멤버를 지정합니다. 기본값은 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>이 <see cref="T:System.Drawing.Graphics" />에 그려진 합성 이미지의 렌더링 품질을 가져오거나 설정합니다.</summary>
      <returns>이 속성은 <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 열거형의 멤버를 지정합니다. 기본값은 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>픽셀의 사각형에 해당하는 색 데이터를 화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 bitblt(bit-block transfer)합니다.</summary>
      <param name="upperLeftSource">소스 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</param>
      <param name="upperLeftDestination">대상 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</param>
      <param name="blockRegionSize">전송할 영역의 크기입니다.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>픽셀의 사각형에 해당하는 색 데이터를 화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 bitblt(bit-block transfer)합니다.</summary>
      <param name="upperLeftSource">소스 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</param>
      <param name="upperLeftDestination">대상 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</param>
      <param name="blockRegionSize">전송할 영역의 크기입니다.</param>
      <param name="copyPixelOperation">
        <see cref="T:System.Drawing.CopyPixelOperation" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" />는 <see cref="T:System.Drawing.CopyPixelOperation" />의 멤버가 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
      <summary>화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 픽셀의 사각형에 해당하는 색 데이터 비트 블록 전송을 수행합니다.</summary>
      <param name="sourceX">원본 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</param>
      <param name="sourceY">원본 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</param>
      <param name="destinationX">대상 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</param>
      <param name="destinationY">대상 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</param>
      <param name="blockRegionSize">전송할 영역의 크기입니다.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 픽셀의 사각형에 해당하는 색 데이터 비트 블록 전송을 수행합니다.</summary>
      <param name="sourceX">원본 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</param>
      <param name="sourceY">소스 사각형의 왼쪽 위 모퉁이에 있는 점의 Y 좌표입니다.</param>
      <param name="destinationX">대상 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</param>
      <param name="destinationY">대상 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</param>
      <param name="blockRegionSize">전송할 영역의 크기입니다.</param>
      <param name="copyPixelOperation">
        <see cref="T:System.Drawing.CopyPixelOperation" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" />는 <see cref="T:System.Drawing.CopyPixelOperation" />의 멤버가 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">작업을 수행하지 못했습니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>이 <see cref="T:System.Drawing.Graphics" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 가로 해상도를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Graphics" />에서 지원하는 가로 해상도 값(dpi)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 세로 해상도를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Graphics" />에서 지원하는 세로 해상도 값(dpi)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체에서 지정한 타원의 부분을 나타내는 호를 그립니다.</summary>
      <param name="pen">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">타원의 경계를 정의하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="startAngle">X축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체에서 지정한 타원의 부분을 나타내는 호를 그립니다.</summary>
      <param name="pen">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">타원의 경계를 정의하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="startAngle">X축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표, 너비, 높이의 쌍으로 지정된 타원의 부분을 나타내는 호를 그립니다.</summary>
      <param name="pen">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표, 너비, 높이의 쌍으로 지정된 타원의 부분을 나타내는 호를 그립니다.</summary>
      <param name="pen">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>네 개의 <see cref="T:System.Drawing.Point" /> 구조체로 정의되는 3차원 곡선 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</param>
      <param name="pt1">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="pt2">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="pt3">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="pt4">곡선의 끝점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>네 개의 <see cref="T:System.Drawing.PointF" /> 구조체로 정의되는 3차원 곡선 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="pt1">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="pt2">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="pt3">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="pt4">곡선의 끝점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>점을 나타내는 순서가 있는 네 개의 좌표 쌍에 의해 정의되는 3차원 곡선 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x1">곡선의 시작점에 대한 X좌표입니다.</param>
      <param name="y1">곡선의 시작점에 대한 Y좌표입니다.</param>
      <param name="x2">곡선의 첫째 제어점에 대한 X좌표입니다.</param>
      <param name="y2">곡선의 첫째 제어점에 대한 Y좌표입니다.</param>
      <param name="x3">곡선의 둘째 제어점에 대한 X좌표입니다.</param>
      <param name="y3">곡선의 둘째 제어점에 대한 Y좌표입니다.</param>
      <param name="x4">곡선의 끝점에 대한 X좌표입니다.</param>
      <param name="y4">곡선의 끝점에 대한 Y좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>일련의 3차원 곡선 스플라인을 <see cref="T:System.Drawing.Point" /> 구조체의 배열에서 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">곡선을 결정하는 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다. 배열의 점 수는 3의 배수에 1을 더한 값이어야 합니다(예: 4, 7, 10 등).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>일련의 3차원 곡선 스플라인을 <see cref="T:System.Drawing.PointF" /> 구조체의 배열에서 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">곡선을 결정하는 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다. 배열의 점 수는 3의 배수에 1을 더한 값이어야 합니다(예: 4, 7, 10 등).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의되는 닫힌 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의되는 닫힌 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <param name="fillmode">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다. 이 매개 변수는 필수이지만 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체의 배열에 의해 정의되는 닫힌 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 배열에 의해 정의되는 닫힌 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <param name="fillmode">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다. 이 매개 변수는 필수이지만 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>지정된 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="offset">
        <paramref name="points" /> 매개 변수 배열의 첫째 요소에서 곡선의 시작점까지의 오프셋입니다.</param>
      <param name="numberOfSegments">시작점 다음부터 곡선에 포함될 세그먼트의 수입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>지정된 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다. 그리기는 배열의 시작에서 오프셋을 시작합니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="offset">
        <paramref name="points" /> 매개 변수 배열의 첫째 요소에서 곡선의 시작점까지의 오프셋입니다.</param>
      <param name="numberOfSegments">시작점 다음부터 곡선에 포함될 세그먼트의 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>지정된 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다. 그리기는 배열의 시작에서 오프셋을 시작합니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="offset">
        <paramref name="points" /> 매개 변수 배열의 첫째 요소에서 곡선의 시작점까지의 오프셋입니다.</param>
      <param name="numberOfSegments">시작점 다음부터 곡선에 포함될 세그먼트의 수입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>지정된 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</summary>
      <param name="pen">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">곡선을 정의하는 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>경계 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 타원을 그립니다.</summary>
      <param name="pen">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">타원의 경계를 정의하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>경계 <see cref="T:System.Drawing.RectangleF" />에 의해 정의된 타원을 그립니다.</summary>
      <param name="pen">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">타원의 경계를 정의하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>직사각형의 왼쪽 위 좌표, 높이 및 너비로 지정된 경계 사각형에 의해 정의되는 타원을 그립니다.</summary>
      <param name="pen">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 경계 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표, 높이, 너비의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원을 그립니다.</summary>
      <param name="pen">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 경계 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 영역 안에 그립니다.</summary>
      <param name="icon">그릴 <see cref="T:System.Drawing.Icon" />입니다.</param>
      <param name="targetRect">표시 화면에 결과로 나타날 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. <paramref name="icon" /> 매개 변수에 포함된 이미지는 이 사각형 영역의 크기에 맞게 크기가 조정됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 지정된 좌표에 그립니다.</summary>
      <param name="icon">그릴 <see cref="T:System.Drawing.Icon" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>이미지의 크기 조정 없이 지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 그립니다.</summary>
      <param name="icon">그릴 <see cref="T:System.Drawing.Icon" />입니다.</param>
      <param name="targetRect">결과로 나타날 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 이 사각형에 맞게 크기 조정되지 않으며, 원래 크기를 유지합니다. 이미지가 사각형보다 크면, 그 안에 맞추기 위해 잘려집니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>지정된 위치에 원래의 크기를 사용하여 특정 <see cref="T:System.Drawing.Image" />를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="point">그려지는 이미지의 왼쪽 위 모퉁이의 위치를 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 모양과 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <param name="callbackData">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 대리자의 추가 데이터를 지정하는 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>지정된 위치에 원래의 크기를 사용하여 특정 <see cref="T:System.Drawing.Image" />를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="point">그려지는 이미지의 왼쪽 위 모퉁이를 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 모양과 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destPoints">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <param name="callbackData">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 대리자의 추가 데이터를 지정하는 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="rect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttr">
        <paramref name="image" />에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttrs">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <param name="callbackData">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see langword="DrawImage" /> 대리자의 추가 데이터를 지정하는 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttrs">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttrs">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcX">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="srcY">그릴 소스 이미지 부분의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcWidth">그릴 소스 이미지의 부분에 대한 너비입니다.</param>
      <param name="srcHeight">그릴 소스 이미지의 부분에 대한 높이입니다.</param>
      <param name="srcUnit">소스 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="imageAttrs">
        <paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
      <param name="callback">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다. 이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</param>
      <param name="callbackData">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see langword="DrawImage" /> 대리자의 추가 데이터를 지정하는 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="rect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="destRect">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다. 이미지는 사각형에 맞게 크기가 조정됩니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>지정된 이미지를 좌표 쌍으로 지정된 위치에 원래 실제 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>이미지의 부분을 지정된 위치에 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcRect">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="width">그려지는 이미지의 너비입니다.</param>
      <param name="height">그려지는 이미지의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>지정된 위치에 원래의 크기를 사용하여 특정 <see cref="T:System.Drawing.Image" />를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>이미지의 부분을 지정된 위치에 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="srcRect">그릴 <see cref="T:System.Drawing.RectangleF" />의 부분을 지정하는 <see cref="T:System.Drawing.Image" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="width">그려지는 이미지의 너비입니다.</param>
      <param name="height">그려지는 이미지의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Drawing.Graphics.DrawImageAbort">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 메서드가 중간에 실행을 취소하고 이미지 그리기를 중지해야 하는 시점을 결정하는 데 필요한 콜백 메서드를 제공합니다.</summary>
      <param name="callbackdata">콜백 메서드의 데이터를 지정하는 내부 포인터입니다. 이 매개 변수는 모든 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 오버로드로 전달되지 않습니다. <see cref="F:System.IntPtr.Zero" /> 값을 확인하여 전달된 매개 변수가 없음을 테스트할 수 있습니다.</param>
      <returns>
        <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 메서드가 중간에 실행을 중지해야 한다고 결정하면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 메서드가 실행을 계속해야 한다고 나타내기 위해 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>지정된 위치에 원래의 크기를 사용하여 특정 이미지를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="point">그려지는 이미지의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>지정된 위치에 원래의 크기를 사용하여 특정 이미지를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="rect">그려지는 이미지의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다. 사각형의 X와 Y 속성은 왼쪽 위 모퉁이를 지정합니다. Width 및 Height 속성은 무시됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>지정된 이미지를 좌표 쌍으로 지정된 위치에 원래 실제 크기로 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 위치에 원래의 크기를 사용하여 특정 이미지를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="x">그려지는 이미지의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
      <param name="y">그려지는 이미지의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
      <param name="width">사용되지 않습니다.</param>
      <param name="height">사용되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>지정된 사각형에 맞게 이미지 크기를 조정하여 클리핑하지 않고 지정된 이미지를 그립니다.</summary>
      <param name="image">그릴 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="rect">이미지가 그려질 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>두 개의 <see cref="T:System.Drawing.Point" /> 구조체를 연결하는 선을 그립니다.</summary>
      <param name="pen">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="pt1">연결할 첫째 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="pt2">연결할 둘째 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>두 개의 <see cref="T:System.Drawing.PointF" /> 구조체를 연결하는 선을 그립니다.</summary>
      <param name="pen">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="pt1">연결할 첫째 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="pt2">연결할 둘째 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표 쌍에 의해 지정된 두 개의 점을 연결하는 선을 그립니다.</summary>
      <param name="pen">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x1">첫째 점의 X좌표입니다.</param>
      <param name="y1">첫째 점의 Y좌표입니다.</param>
      <param name="x2">둘째 점의 X좌표입니다.</param>
      <param name="y2">둘째 점의 Y좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표 쌍에 의해 지정된 두 개의 점을 연결하는 선을 그립니다.</summary>
      <param name="pen">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x1">첫째 점의 X좌표입니다.</param>
      <param name="y1">첫째 점의 Y좌표입니다.</param>
      <param name="x2">둘째 점의 X좌표입니다.</param>
      <param name="y2">둘째 점의 Y좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 구조체의 배열을 연결하는 일련의 선 세그먼트를 그립니다.</summary>
      <param name="pen">선분의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">연결할 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체의 배열을 연결하는 일련의 선 세그먼트를 그립니다.</summary>
      <param name="pen">선분의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">연결할 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 그립니다.</summary>
      <param name="pen">경로의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="path">그릴 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="path" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체와 두 개의 방사형 선에 의해 지정된 타원으로 정의된 부채꼴 모양을 그립니다.</summary>
      <param name="pen">부채꼴 모양의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">부채꼴 모양에서 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="startAngle">X축에서 부채꼴 모양의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 모양의 둘째 점까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체와 두 개의 방사형 선에 의해 지정된 타원으로 정의된 부채꼴 모양을 그립니다.</summary>
      <param name="pen">부채꼴 모양의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">부채꼴 모양에서 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="startAngle">X축에서 부채꼴 모양의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 모양의 둘째 점까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원으로 정의된 부채꼴 모양을 그립니다.</summary>
      <param name="pen">부채꼴 모양의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 부채꼴 모양의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 모양의 둘째 점까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원으로 정의된 부채꼴 모양을 그립니다.</summary>
      <param name="pen">부채꼴 모양의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 부채꼴 모양이 되도록 정의하는 경계 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 부채꼴 모양의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 모양의 둘째 점까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의된 다각형을 그립니다.</summary>
      <param name="pen">다각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체의 배열에 의해 정의된 다각형을 그립니다.</summary>
      <param name="pen">다각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="points">다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형을 그립니다.</summary>
      <param name="pen">사각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rect">그릴 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표 쌍, 너비 및 높이에 의해 지정된 사각형을 그립니다.</summary>
      <param name="pen">사각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">그릴 사각형의 왼쪽 위 모퉁이의 X좌표입니다.</param>
      <param name="y">그릴 사각형의 왼쪽 위 모퉁이의 Y좌표입니다.</param>
      <param name="width">그릴 사각형의 너비입니다.</param>
      <param name="height">그릴 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표 쌍, 너비 및 높이에 의해 지정된 사각형을 그립니다.</summary>
      <param name="pen">사각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="x">그릴 사각형의 왼쪽 위 모퉁이의 X좌표입니다.</param>
      <param name="y">그릴 사각형의 왼쪽 위 모퉁이의 Y좌표입니다.</param>
      <param name="width">그릴 사각형의 너비입니다.</param>
      <param name="height">그릴 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 일련의 사각형을 그립니다.</summary>
      <param name="pen">사각형 윤곽선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rects">그릴 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />인 경우
또는
<paramref name="rects" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" />이 길이가 0인 배열입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 일련의 사각형을 그립니다.</summary>
      <param name="pen">사각형 윤곽선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="rects">그릴 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" />가 <see langword="null" />입니다.
또는
<paramref name="rects" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" />이 길이가 0인 배열입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</summary>
      <param name="s">그릴 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="brush">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="point">그려지는 이미지의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="s" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" />의 서식 특성을 사용하여 지정된 <see cref="T:System.Drawing.Font" /> 및 <see cref="T:System.Drawing.StringFormat" /> 개체로 지정된 텍스트 문자열을 그립니다.</summary>
      <param name="s">그릴 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="brush">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="point">그려지는 이미지의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="format">그릴 텍스트에 적용되는 줄 간격 및 맞춤과 같은 서식 특성을 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="s" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>지정된 사각형에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</summary>
      <param name="s">그릴 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="brush">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="layoutRectangle">그려지는 텍스트의 위치를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="s" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>지정된 사각형에 지정된 <see cref="T:System.Drawing.Brush" />의 서식 특성을 사용하여 지정된 <see cref="T:System.Drawing.Font" /> 및 <see cref="T:System.Drawing.StringFormat" /> 개체로 지정된 텍스트 문자열을 그립니다.</summary>
      <param name="s">그릴 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="brush">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="layoutRectangle">그려지는 텍스트의 위치를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="format">그릴 텍스트에 적용되는 줄 간격 및 맞춤과 같은 서식 특성을 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="s" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</summary>
      <param name="s">그릴 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="brush">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="s" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" />의 서식 특성을 사용하여 지정된 <see cref="T:System.Drawing.Font" /> 및 <see cref="T:System.Drawing.StringFormat" /> 개체로 지정된 텍스트 문자열을 그립니다.</summary>
      <param name="s">그릴 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="brush">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="format">그릴 텍스트에 적용되는 줄 간격 및 맞춤과 같은 서식 특성을 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="s" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>현재 그래픽 컨테이너를 닫고 <see cref="T:System.Drawing.Graphics" /> 메서드에 대한 호출에 의해 저장된 상태로 이 <see cref="M:System.Drawing.Graphics.BeginContainer" />의 상태를 복원합니다.</summary>
      <param name="container">이 메서드가 복원하는 컨테이너를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는<see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는<see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는<see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="unit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="unit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는<see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는<see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는<see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoint">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="unit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destPoints">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="unit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="unit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" />의 선택한 사각형에 있는 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</summary>
      <param name="metafile">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="destRect">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="srcRect">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="unit">
        <paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</param>
      <param name="callback">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</param>
      <param name="callbackData">필수적이지만 무시되는 내부 포인터입니다. 이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" /> 를 전달할 수 있습니다.</param>
      <param name="imageAttr">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> 메서드에 대한 콜백 메서드를 제공합니다</summary>
      <param name="recordType">메타파일 레코드의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 열거형의 멤버입니다.</param>
      <param name="flags">레코드의 특성을 지정하는 플래그를 설정합니다.</param>
      <param name="dataSize">레코드 데이터의 바이트 수입니다.</param>
      <param name="data">레코드 데이터가 포함된 버퍼에 대한 포인터입니다.</param>
      <param name="callbackData">사용되지 않습니다.</param>
      <returns>레코드를 계속 열거하려면 <see langword="true" />를 반환하고 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 업데이트하여 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 영역을 제외합니다.</summary>
      <param name="rect">사각형이 클립 영역에서 제외되도록 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 업데이트하여 <see cref="T:System.Drawing.Region" />에 의해 지정된 영역을 제외합니다.</summary>
      <param name="region">영역이 클립 영역에서 제외되도록 지정하는 <see cref="T:System.Drawing.Region" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 닫힌 카디널 스플라인 곡선의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 닫힌 카디널 스플라인 곡선의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="fillmode">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>지정된 채우기 모드와 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 닫힌 카디널 스플라인 곡선의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="fillmode">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체의 배열로 정의된 닫힌 카디널 스플라인 곡선의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 배열로 정의된 닫힌 카디널 스플라인 곡선의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="fillmode">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>지정된 채우기 모드와 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 배열로 정의된 닫힌 카디널 스플라인 곡선의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="fillmode">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</param>
      <param name="tension">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rect">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rect">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표, 너비, 높이의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 경계 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표, 너비, 높이의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 정의하는 경계 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="path">채울 경로를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="path" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체와 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 부채꼴 섹션의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rect">부채꼴 섹션에서 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="startAngle">X축에서 부채꼴 섹션의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 섹션의 둘째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 부채꼴 섹션의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 부채꼴 섹션의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 섹션의 둘째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 부채꼴 섹션의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 너비입니다.</param>
      <param name="height">타원을 부채꼴 섹션이 되도록 정의하는 경계 사각형의 높이입니다.</param>
      <param name="startAngle">X축에서 부채꼴 섹션의 첫째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 매개 변수에서 부채꼴 섹션의 둘째 면까지 시계 방향으로 측정한 각도입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.Point" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
      <param name="fillMode">채우기의 스타일을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="points" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="points">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
      <param name="fillMode">채우기의 스타일을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="points" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체의 의해 지정된 사각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rect">채울 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체의 의해 지정된 사각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rect">채울 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표 쌍, 너비 및 높이로 지정된 사각형의 내부에 의해 정의되는 사각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">채울 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">채울 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">채울 사각형의 너비입니다.</param>
      <param name="height">채울 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표 쌍, 너비 및 높이로 지정된 사각형의 내부에 의해 정의되는 사각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="x">채울 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">채울 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">채울 사각형의 너비입니다.</param>
      <param name="height">채울 사각형의 높이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 일련의 사각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rects">채울 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="rects" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" />이 길이가 0인 배열입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 일련의 사각형의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="rects">채울 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.
또는
<paramref name="rects" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rects" />이 길이가 0인 배열입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>
        <see cref="T:System.Drawing.Region" />의 내부를 채웁니다.</summary>
      <param name="brush">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</param>
      <param name="region">채울 영역을 나타내는 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우
또는
<paramref name="region" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>모든 보류 중인 그래픽 작업을 강제로 제외시켜, 작업이 끝나기를 기다리지 않고 즉시 반환합니다.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>메서드가 기다리거나 기다리지 않도록 지정되어 있든, 모든 보류 중인 그래픽 작업을 강제로 실행시켜 작업이 끝나기 전에 반환합니다.</summary>
      <param name="intention">메서드가 즉시 반환하거나 모든 기존 작업을 마칠 때까지 기다리도록 지정하는 <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>디바이스 컨텍스트에 대한 지정된 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</summary>
      <param name="hdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <returns>이 메서드는 지정된 디바이스 컨텍스트에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>디바이스 컨텍스트에 대한 지정된 핸들과 디바이스에 대한 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</summary>
      <param name="hdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="hdevice">디바이스 핸들입니다.</param>
      <returns>이 메서드는 지정된 디바이스 컨텍스트와 디바이스에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>지정된 디바이스 컨텍스트에 대한 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</summary>
      <param name="hdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <returns>지정된 디바이스 컨텍스트에 대한 <see cref="T:System.Drawing.Graphics" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>지정된 창 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</summary>
      <param name="hwnd">창 핸들입니다.</param>
      <returns>이 메서드는 지정된 창 핸들에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>지정된 창 핸들에 대한 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</summary>
      <param name="hwnd">창 핸들입니다.</param>
      <returns>지정된 창 핸들에 대한 <see cref="T:System.Drawing.Graphics" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>지정된 <see cref="T:System.Drawing.Graphics" />에서 새 <see cref="T:System.Drawing.Image" />를 만듭니다.</summary>
      <param name="image">새 <see cref="T:System.Drawing.Image" />를 만들 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>이 메서드는 지정된 <see cref="T:System.Drawing.Graphics" />에 대한 새 <see cref="T:System.Drawing.Image" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Exception">
        <paramref name="image" />에 인덱싱된 픽셀 형식이 있거나 형식이 정의되어 있지 않는 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.GetContextInfo">
      <summary>누적 그래픽 컨텍스트를 가져옵니다.</summary>
      <returns>누적 그래픽 컨텍스트를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>현재 Windows 하프톤 팔레트에 대한 핸들을 가져옵니다.</summary>
      <returns>팔레트에 대한 핸들을 지정하는 내부 포인터입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>이 <see cref="T:System.Drawing.Graphics" />와 관련된 디바이스 컨텍스트에 대한 핸들을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Graphics" />와 관련된 디바이스 컨텍스트에 대한 핸들입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Color" /> 구조체와 가장 가까운 색을 가져옵니다.</summary>
      <param name="color">일치를 찾을 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
      <returns>
        <paramref name="color" /> 매개 변수로 지정된 색에 가장 가까운 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>이 <see cref="T:System.Drawing.Graphics" />와 관련된 보간 모드를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 교차 부분으로 업데이트합니다.</summary>
      <param name="rect">현재 클립 영역과 교차하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 교차 부분으로 업데이트합니다.</summary>
      <param name="rect">현재 클립 영역과 교차하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.Region" />의 교차 부분으로 업데이트합니다.</summary>
      <param name="region">현재 영역과 교차하는 <see cref="T:System.Drawing.Region" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역이 비어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역이 비어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>지정된 <see cref="T:System.Drawing.Point" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="point">표시 여부를 테스트하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <returns>
        <paramref name="point" /> 매개 변수에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>지정된 <see cref="T:System.Drawing.PointF" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="point">표시 여부를 테스트하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <returns>
        <paramref name="point" /> 매개 변수에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="rect">표시 여부를 테스트하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <returns>
        <paramref name="rect" /> 매개 변수에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="rect">표시 여부를 테스트하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <returns>
        <paramref name="rect" /> 매개 변수에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>좌표 쌍에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="x">표시 여부를 테스트할 점의 X좌표입니다.</param>
      <param name="y">표시 여부를 테스트할 점의 Y좌표입니다.</param>
      <returns>
        <paramref name="x" />와 <paramref name="y" /> 매개 변수에 의해 정의된 점이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>좌표 쌍, 너비 및 높이에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="x">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">표시 여부를 테스트할 사각형의 너비입니다.</param>
      <param name="height">표시 여부를 테스트할 사각형의 높이입니다.</param>
      <returns>
        <paramref name="x" />, <paramref name="y" />, <paramref name="width" /> 및 <paramref name="height" /> 매개 변수에 의해 정의된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>좌표 쌍에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="x">표시 여부를 테스트할 점의 X좌표입니다.</param>
      <param name="y">표시 여부를 테스트할 점의 Y좌표입니다.</param>
      <returns>
        <paramref name="x" />와 <paramref name="y" /> 매개 변수에 의해 정의된 점이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>좌표 쌍, 너비 및 높이에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되었는지 여부를 나타냅니다.</summary>
      <param name="x">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</param>
      <param name="y">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</param>
      <param name="width">표시 여부를 테스트할 사각형의 너비입니다.</param>
      <param name="height">표시 여부를 테스트할 사각형의 높이입니다.</param>
      <returns>
        <paramref name="x" />, <paramref name="y" />, <paramref name="width" /> 및 <paramref name="height" /> 매개 변수에 의해 정의된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역 안에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역이 비어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역에 대해 보이는 부분이 비어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>지정된 문자열 안의 문자 위치 영역의 경계를 각각 설정하는 <see cref="T:System.Drawing.Region" /> 개체의 배열을 가져옵니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="layoutRect">문자열에 대한 레이아웃 사각형을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="stringFormat">줄 간격과 같은 문자열에 대한 서식 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <returns>이 메서드는 지정된 문자열 안의 문자 위치 영역의 경계를 각각 설정하는 <see cref="T:System.Drawing.Region" /> 개체의 배열을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수를 사용하여 그린 대로 <paramref name="font" /> 매개 변수에 지정된 문자열의 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 형식을 지정할 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="origin">문자열의 왼쪽 위 모퉁이를 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="stringFormat">줄 간격과 같은 문자열에 대한 서식 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수와 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="stringFormat" /> 매개 변수에 지정된 문자열의 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>지정된 레이아웃 영역 안에서 지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="layoutArea">텍스트에 대한 최대 레이아웃 영역을 지정하는 <see cref="T:System.Drawing.SizeF" /> 구조체입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수를 사용하여 그린 대로 <paramref name="font" /> 매개 변수에 지정된 문자열의 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 형식을 지정할 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="layoutArea">텍스트에 대한 최대 레이아웃 영역을 지정하는 <see cref="T:System.Drawing.SizeF" /> 구조체입니다.</param>
      <param name="stringFormat">줄 간격과 같은 문자열에 대한 서식 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수와 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="stringFormat" /> 매개 변수에 지정된 문자열의 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 형식을 지정할 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="layoutArea">텍스트에 대한 최대 레이아웃 영역을 지정하는 <see cref="T:System.Drawing.SizeF" /> 구조체입니다.</param>
      <param name="stringFormat">줄 간격과 같은 문자열에 대한 서식 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <param name="charactersFitted">문자열에 있는 문자의 수입니다.</param>
      <param name="linesFilled">문자열에 있는 텍스트 줄의 수입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수와 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="stringFormat" /> 매개 변수의 문자열 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="width">최대 문자열 너비(픽셀)입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수를 사용하여 그린 대로 <paramref name="font" /> 매개 변수에 지정된 문자열의 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 형식을 지정할 때 지정된 문자열을 측정합니다.</summary>
      <param name="text">측정할 문자열입니다.</param>
      <param name="font">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</param>
      <param name="width">문자열의 최대 너비입니다.</param>
      <param name="format">줄 간격과 같은 문자열에 대한 서식 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</param>
      <returns>이 메서드는 <paramref name="text" /> 매개 변수와 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="stringFormat" /> 매개 변수에 지정된 문자열의 크기(<see cref="T:System.Drawing.SizeF" /> 속성에 지정된 단위)를 나타내는 <see cref="P:System.Drawing.Graphics.PageUnit" /> 구조체를 반환합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 전역 변환과 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 곱합니다.</summary>
      <param name="matrix">전역 변환을 곱하는 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 전역 변환과 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 지정된 순서로 곱합니다.</summary>
      <param name="matrix">전역 변환을 곱하는 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="order">곱하기의 순서를 결정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 전체 단위와 페이지 단위 사이의 배율을 가져오거나 설정합니다.</summary>
      <returns>이 속성은 이 <see cref="T:System.Drawing.Graphics" />에 대한 전체 단위와 페이지 단위 사이의 배율 값을 지정합니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 페이지 좌표에 사용되는 측정 단위를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="F:System.Drawing.GraphicsUnit.World" />를 제외한 <see cref="T:System.Drawing.GraphicsUnit" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Graphics.PageUnit" />는 물리적 단위가 아닌 <see cref="F:System.Drawing.GraphicsUnit.World" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>이 <see cref="T:System.Drawing.Graphics" />를 렌더링할 때 픽셀을 오프셋하는 방법을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>이 속성은 <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 열거형의 멤버를 지정합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트 핸들을 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트 핸들을 해제합니다.</summary>
      <param name="hdc">이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트에 대한 핸들입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>디바이스 컨텍스트에 대한 핸들을 해제합니다.</summary>
      <param name="hdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>디더링 및 빗살 무늬 브러시에 대한 이 <see cref="T:System.Drawing.Graphics" />의 렌더링 원점을 가져오거나 설정합니다.</summary>
      <returns>픽셀 당 8비트 및 픽셀 당 16비트 디더링의 디더링 원점을 나타내고 빗살 무늬 브러시의 원점을 설정하는 데도 사용되는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 무한 영역으로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 전역 변환 매트릭스를 항등 매트릭스로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 상태를 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />가 나타내는 상태로 복원합니다.</summary>
      <param name="gstate">이 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />가 복원될 상태를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 변환 매트릭스에 지정된 회전을 적용합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 변환 매트릭스에 지정된 회전을 지정된 순서로 적용합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
      <param name="order">회전이 매트릭스 변환에 추가되거나 미리 추가되는지 여부를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 현재 상태를 저장하고 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />로 저장된 상태를 확인합니다.</summary>
      <returns>이 메서드는 이 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />의 저장된 상태를 나타내는 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>변환 매트릭스를 개체의 변환 매트릭스에 미리 추가하여, 지정된 크기 조정 작업을 이 <see cref="T:System.Drawing.Graphics" />의 변환 매트릭스에 적용합니다.</summary>
      <param name="sx">x 방향으로 인수의 크기를 조정합니다.</param>
      <param name="sy">Y 방향으로 인수의 크기를 조정합니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 크기 조정 작업을 지정된 순서로 이 <see cref="T:System.Drawing.Graphics" />의 변환 매트릭스에 적용합니다.</summary>
      <param name="sx">x 방향으로 인수의 크기를 조정합니다.</param>
      <param name="sy">Y 방향으로 인수의 크기를 조정합니다.</param>
      <param name="order">크기 조정 작업이 변환 매트릭스에 추가되거나 미리 추가되는지 여부를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />로 설정합니다.</summary>
      <param name="path">새 클립 영역을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>현재 클립 영역과 지정된 <see cref="T:System.Drawing.Graphics" />를 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 클립 영역을 설정합니다.</summary>
      <param name="path">결합할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <param name="combineMode">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 지정된 <see cref="T:System.Drawing.Graphics" />의 <see langword="Clip" /> 속성으로 설정합니다.</summary>
      <param name="g">새 클립 영역을 가져오는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>현재 클립 영역과 지정된 <see cref="T:System.Drawing.Graphics" />의 <see cref="P:System.Drawing.Graphics.Clip" /> 속성의 지정된 결합 작업의 결과로 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 설정합니다.</summary>
      <param name="g">결합할 클립 영역을 지정하는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <param name="combineMode">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형으로 설정합니다.</summary>
      <param name="rect">새 클립 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>현재 클립 영역과 <see cref="T:System.Drawing.Graphics" /> 구조체에 의해 지정된 사각형을 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Rectangle" />의 클립 영역을 설정합니다.</summary>
      <param name="rect">결합할 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="combineMode">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 사각형으로 설정합니다.</summary>
      <param name="rect">새 클립 영역을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>현재 클립 영역과 <see cref="T:System.Drawing.Graphics" /> 구조체에 의해 지정된 사각형을 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.RectangleF" />의 클립 영역을 설정합니다.</summary>
      <param name="rect">결합할 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="combineMode">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>현재 클립 영역과 지정된 <see cref="T:System.Drawing.Graphics" />를 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Region" />의 클립 영역을 설정합니다.</summary>
      <param name="region">결합할 <see cref="T:System.Drawing.Region" />입니다.</param>
      <param name="combineMode">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 렌더링 품질을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>렌더링 텍스트의 감마 보정 값을 가져오거나 설정합니다.</summary>
      <returns>앤티 앨리어싱된 ClearType 텍스트의 렌더링에 사용되는 감마 보정 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>이 <see cref="T:System.Drawing.Graphics" />와 관련된 텍스트의 렌더링 모드를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Text.TextRenderingHint" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>이 <see cref="T:System.Drawing.Graphics" />에 대한 기하학적 변환의 복사본을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 대한 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Graphics" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 현재 전체 및 페이지 변환을 사용하여 점의 배열을 하나의 좌표 공간에서 다른 좌표 공간으로 변환합니다.</summary>
      <param name="destSpace">대상 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</param>
      <param name="srcSpace">소스 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</param>
      <param name="pts">변환할 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>이 <see cref="T:System.Drawing.Graphics" />의 현재 전체 및 페이지 변환을 사용하여 점의 배열을 하나의 좌표 공간에서 다른 좌표 공간으로 변환합니다.</summary>
      <param name="destSpace">대상 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</param>
      <param name="srcSpace">소스 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</param>
      <param name="pts">변환할 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>가로와 세로 방향으로 지정된 크기만큼 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 변환합니다.</summary>
      <param name="dx">변환의 X좌표입니다.</param>
      <param name="dy">변환의 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>가로와 세로 방향으로 지정된 크기만큼 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 변환합니다.</summary>
      <param name="dx">변환의 X좌표입니다.</param>
      <param name="dy">변환의 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Graphics" />의 변환 매트릭스 앞에 지정된 변환을 추가하여 좌표계의 원점을 변경합니다.</summary>
      <param name="dx">변환의 X좌표입니다.</param>
      <param name="dy">변환의 Y좌표입니다.</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서로 <see cref="T:System.Drawing.Graphics" />의 변환 매트릭스에 지정된 변환을 적용하여 좌표계의 원점을 변경합니다.</summary>
      <param name="dx">변환의 X좌표입니다.</param>
      <param name="dy">변환의 Y좌표입니다.</param>
      <param name="order">해당 이동이 변환 매트릭스의 앞에 추가될지 또는 뒤에 추가될지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</param>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>
        <see cref="T:System.Drawing.Graphics" />의 보이는 클립 영역에 대한 경계 사각형을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.RectangleF" />의 보이는 클립 영역에 대한 경계 사각형을 나타내는 <see cref="T:System.Drawing.Graphics" /> 구조체입니다.</returns>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>주어진 데이터를 측정하는 단위를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>디스플레이 디바이스의 측정 단위를 지정합니다. 일반적으로 비디오 디스플레이의 경우 픽셀이고 프린터의 경우 1/100인치입니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>1/300 인치의 문서 단위를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>인치를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>밀리미터를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>디바이스 픽셀을 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>프린터의 점(1/72인치)을 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>영역 좌표계 단위를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>개체를 나타내는 데 사용되는 작은 비트맵 이미지인 Windows 아이콘을 나타냅니다. 아이콘은 시스템에 의해 크기가 결정되지만, 투명한 비트맵으로 생각될 수 있습니다.</summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>
        <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화하여 요청한 크기와 일치하는 아이콘의 버전을 찾아봅니다.</summary>
      <param name="original">크기가 새로 조정된 아이콘을 로드할 소스 <see cref="T:System.Drawing.Icon" />입니다.</param>
      <param name="size">새 <see cref="T:System.Drawing.Size" />의 높이와 너비를 지정하는 <see cref="T:System.Drawing.Icon" /> 구조체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화하여 요청한 크기와 일치하는 아이콘의 버전을 찾아봅니다.</summary>
      <param name="original">다른 크기를 로드해올 아이콘입니다.</param>
      <param name="width">새 아이콘의 너비입니다.</param>
      <param name="height">새 아이콘의 높이입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>지정된 데이터 스트림에서 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">
        <see cref="T:System.Drawing.Icon" />을 로드할 소스 데이터 스트림입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)">
      <summary>지정된 스트림에서 지정된 크기로 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">아이콘 데이터가 들어 있는 스트림입니다.</param>
      <param name="size">원하는 아이콘 크기입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />이 <see langword="null" />이거나 이미지 데이터를 포함하지 않는 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>너비와 높이가 지정된 특정 데이터 스트림에서 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">아이콘을 로드할 데이터 스트림입니다.</param>
      <param name="width">아이콘의 너비(픽셀)입니다.</param>
      <param name="height">아이콘의 높이(픽셀)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>지정된 파일 이름을 사용하여 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">
        <see cref="T:System.Drawing.Icon" />을 로드할 소스 파일입니다.</param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)">
      <summary>지정된 파일에서 지정된 크기로 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">아이콘 데이터가 들어 있는 파일의 이름과 경로입니다.</param>
      <param name="size">원하는 아이콘 크기입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" />이 <see langword="null" />이거나 이미지 데이터를 포함하지 않는 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)">
      <summary>지정된 파일의 지정된 너비와 높이를 사용하여 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">
        <see cref="T:System.Drawing.Icon" /> 데이터가 들어 있는 파일의 이름과 경로입니다.</param>
      <param name="width">원하는 <see cref="T:System.Drawing.Icon" />의 너비입니다.</param>
      <param name="height">원하는 <see cref="T:System.Drawing.Icon" />의 높이입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" />이 <see langword="null" />이거나 이미지 데이터를 포함하지 않는 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>지정된 어셈블리의 리소스에서 <see cref="T:System.Drawing.Icon" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">리소스를 검색할 어셈블리를 지정하는 <see cref="T:System.Type" />입니다.</param>
      <param name="resource">로드할 리소스 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="resource" />에서 지정한 아이콘을 지정한 <paramref name="type" />을 포함하는 어셈블리에서 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>
        <see cref="T:System.Drawing.Icon" />을 복제하여 중복 이미지를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" />으로 캐스팅할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>이 <see cref="T:System.Drawing.Icon" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)">
      <summary>지정된 파일에 들어 있는 이미지의 아이콘 표현을 반환합니다.</summary>
      <param name="filePath">이미지가 들어 있는 파일에 대한 경로입니다.</param>
      <returns>지정된 파일에 들어 있는 이미지의 <see cref="T:System.Drawing.Icon" /> 표현입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="filePath" />가 유효한 파일을 나타내지 않는 경우
또는
<paramref name="filePath" />가 UNC(Universal Naming Convention) 경로를 나타내는 경우</exception>
    </member>
    <member name="M:System.Drawing.Icon.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>지정한 창 핸들에서 아이콘(<see langword="HICON" />)까지 GDI+ <see cref="T:System.Drawing.Icon" />을 만듭니다.</summary>
      <param name="handle">아이콘의 창 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Icon" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>이 <see cref="T:System.Drawing.Icon" />의 창 핸들을 가져옵니다. 이것은 핸들의 복사본이 아니므로 해제하지 마세요.</summary>
      <returns>아이콘에 대한 창 핸들입니다.</returns>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>이 <see cref="T:System.Drawing.Icon" />의 높이를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Icon" />의 높이입니다.</returns>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>이 <see cref="T:System.Drawing.Icon" />을 지정한 출력 <see cref="T:System.IO.Stream" />에 저장합니다.</summary>
      <param name="outputStream">저장할 곳인 <see cref="T:System.IO.Stream" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>이 <see cref="T:System.Drawing.Icon" />의 크기를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Size" />의 너비와 높이를 지정하는 <see cref="T:System.Drawing.Icon" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>
        <see cref="T:System.Drawing.Icon" />을 GDI+ <see cref="T:System.Drawing.Bitmap" />으로 변환합니다.</summary>
      <returns>변환된 <see cref="T:System.Drawing.Icon" />을 나타내는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>
        <see cref="T:System.Drawing.Icon" />을 설명하는, 사람이 인식할 수 있는 문자열을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" />을 설명하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>이 <see cref="T:System.Drawing.Icon" />의 너비를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" />의 너비입니다.</returns>
    </member>
    <member name="T:System.Drawing.IDeviceContext">
      <summary>Windows 디바이스 컨텍스트의 기존 핸들을 가져오고 해제하는 데 사용되는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Drawing.IDeviceContext.GetHdc">
      <summary>Windows 디바이스 컨텍스트의 핸들을 반환합니다.</summary>
      <returns>디바이스 컨텍스트의 핸들을 나타내는 <see cref="T:System.IntPtr" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.IDeviceContext.ReleaseHdc">
      <summary>Windows 디바이스 컨텍스트의 핸들을 해제합니다.</summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 및 <see cref="T:System.Drawing.Imaging.Metafile" /> 서브클래스에 기능을 제공하는 추상 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>이 <see cref="T:System.Drawing.Image" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Image" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>이 <see cref="T:System.Drawing.Image" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Image.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Image" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Drawing.Image.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>이 <see cref="T:System.Drawing.Image" />의 픽셀 데이터에 대한 특성 플래그를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.ImageFlags" />에 대한 <see cref="T:System.Drawing.Image" />의 비트 조합을 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>이 <see cref="T:System.Drawing.Image" />에 있는 프레임의 크기를 나타내는 GUID의 배열을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Image" />에 있는 프레임의 크기를 최상위에서 최하위까지 지정하는 GUID의 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>지정된 파일에서 <see cref="T:System.Drawing.Image" />를 만듭니다.</summary>
      <param name="filename">
        <see cref="T:System.Drawing.Image" />를 만들 파일의 이름을 포함하는 문자열입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Image" />입니다.</returns>
      <exception cref="T:System.OutOfMemoryException">파일의 이미지 형식이 잘못된 경우
또는
GDI+에서 파일의 픽셀 형식을 지원하지 않는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 파일이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" />이 <see cref="T:System.Uri" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>해당 파일에 포함된 색 관리 정보를 사용하여 지정된 파일에서 <see cref="T:System.Drawing.Image" />를 만듭니다.</summary>
      <param name="filename">
        <see cref="T:System.Drawing.Image" />를 만들 파일의 이름을 포함하는 문자열입니다.</param>
      <param name="useEmbeddedColorManagement">이미지 파일에 포함된 색 관리 정보를 사용하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Image" />입니다.</returns>
      <exception cref="T:System.OutOfMemoryException">파일의 이미지 형식이 잘못된 경우
또는
GDI+에서 파일의 픽셀 형식을 지원하지 않는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 파일이 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" />이 <see cref="T:System.Uri" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>GDI 비트맵 핸들에서 <see cref="T:System.Drawing.Bitmap" />을 만듭니다.</summary>
      <param name="hbitmap">
        <see cref="T:System.Drawing.Bitmap" />을 만들 GDI 비트맵 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>GDI 비트맵 핸들과 GDI 색상표 핸들에서 <see cref="T:System.Drawing.Bitmap" />을 만듭니다.</summary>
      <param name="hbitmap">
        <see cref="T:System.Drawing.Bitmap" />을 만들 GDI 비트맵 핸들입니다.</param>
      <param name="hpalette">
        <paramref name="hbitmap" /> 매개 변수에 지정된 비트맵이 DIB(디바이스 독립적 비트맵)가 아닌 경우 비트맵 색을 정의하는 데 사용되는 GDI 색상표 핸들입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>지정된 데이터 스트림에서 <see cref="T:System.Drawing.Image" />를 만듭니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Image" />입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Image" />입니다.</returns>
      <exception cref="T:System.ArgumentException">스트림의 이미지 형식이 잘못된 경우
또는
<paramref name="stream" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>해당 스트림에 포함된 색 관리 정보를 선택적으로 사용하여 지정된 데이터 스트림에서 <see cref="T:System.Drawing.Image" />를 만듭니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="useEmbeddedColorManagement">데이터 스트림에 포함된 색 관리 정보를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Image" />입니다.</returns>
      <exception cref="T:System.ArgumentException">스트림의 이미지 형식이 잘못된 경우
또는
<paramref name="stream" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>포함된 색 관리 정보를 선택적으로 사용하고 이미지 데이터의 유효성을 검사하여 지정된 데이터 스트림에서 <see cref="T:System.Drawing.Image" />를 만듭니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="useEmbeddedColorManagement">데이터 스트림에 포함된 색 관리 정보를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="validateImageData">이미지 데이터의 유효성을 검사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Image" />입니다.</returns>
      <exception cref="T:System.ArgumentException">스트림의 이미지 형식이 잘못된 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>지정된 단위로 이미지의 범위를 가져옵니다.</summary>
      <param name="pageUnit">경계 사각형의 단위를 나타내는 <see cref="T:System.Drawing.GraphicsUnit" /> 값 중 하나입니다.</param>
      <returns>지정된 단위로 이미지의 범위를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>지정된 이미지 인코더가 지원하는 매개 변수에 대한 정보를 반환합니다.</summary>
      <param name="encoder">이미지 인코더를 지정하는 GUID입니다.</param>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체의 배열을 포함하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" />입니다. 각각의 <see cref="T:System.Drawing.Imaging.EncoderParameter" />에는 지정된 이미지 인코더가 지원하는 매개 변수 중 하나에 대한 정보가 포함되어 있습니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>지정된 크기의 프레임 수를 반환합니다.</summary>
      <param name="dimension">크기 형식의 ID를 지정하는 <see cref="T:System.Drawing.Imaging.FrameDimension" />입니다.</param>
      <returns>지정된 크기의 프레임 수를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>지정된 픽셀 형식의 색 농도(픽셀 당 비트 수)를 반환합니다.</summary>
      <param name="pixfmt">크기를 찾을 형식을 지정하는 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 멤버입니다.</param>
      <returns>지정된 픽셀 형식의 색 농도를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>지정된 속성 항목을 이 <see cref="T:System.Drawing.Image" />에서 가져옵니다.</summary>
      <param name="propid">가져올 속성 항목의 ID입니다.</param>
      <returns>이 메서드가 가져오는 <see cref="T:System.Drawing.Imaging.PropertyItem" />입니다.</returns>
      <exception cref="T:System.ArgumentException">이 이미지의 이미지 형식이 속성 항목을 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>이 <see cref="T:System.Drawing.Image" />의 축소판 그림을 반환합니다.</summary>
      <param name="thumbWidth">요청한 축소판 그림 이미지의 너비(픽셀 단위)입니다.</param>
      <param name="thumbHeight">요청한 축소판 그림 이미지의 높이(픽셀 단위)입니다.</param>
      <param name="callback">
        <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> 대리자입니다.
참고 대리자를 만들고 이 대리자에 대한 참조를 <paramref name="callback" /> 매개 변수로 전달해야 하지만 대리자는 사용되지 않습니다.</param>
      <param name="callbackData">
        <see cref="F:System.IntPtr.Zero" />여야 합니다.</param>
      <returns>축소판 그림을 나타내는 <see cref="T:System.Drawing.Image" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Image.GetThumbnailImageAbort">
      <summary>
        <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 메서드가 실행을 미리 취소해야 하는 시점을 결정할 수 있도록 콜백 메서드를 제공합니다.</summary>
      <returns>
        <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 메서드가 중간에 실행을 중지해야 한다고 결정하면 이 메서드는  <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>이 <see cref="T:System.Drawing.Image" />의 높이(픽셀)를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Image" />의 높이(픽셀)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>이 <see cref="T:System.Drawing.Image" />의 가로 해상도(인치 당 픽셀 수)를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Image" />의 가로 해상도(인치 당 픽셀 수)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>이 <see cref="T:System.Drawing.Image" />에 대한 픽셀 형식에 알파 정보가 포함되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="pixfmt">테스트할 <see cref="T:System.Drawing.Imaging.PixelFormat" />입니다.</param>
      <returns>
        <paramref name="pixfmt" />에 알파 정보가 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>픽셀 형식이 32비트/픽셀인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="pixfmt">테스트할 <see cref="T:System.Drawing.Imaging.PixelFormat" />입니다.</param>
      <returns>
        <paramref name="pixfmt" />가 정규 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>픽셀 형식이 64비트/픽셀인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="pixfmt">테스트할 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 열거입니다.</param>
      <returns>
        <paramref name="pixfmt" />가 확장 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>이 <see cref="T:System.Drawing.Image" />에 사용되는 색상표를 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.ColorPalette" />에 사용되는 색상표를 나타내는 <see cref="T:System.Drawing.Image" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>이 이미지의 너비와 높이를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.SizeF" />의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Image" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>이 <see cref="T:System.Drawing.Image" />의 픽셀 형식을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.PixelFormat" />의 픽셀 형식을 나타내는 <see cref="T:System.Drawing.Image" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>이 <see cref="T:System.Drawing.Image" />에 저장된 속성 항목의 ID를 가져옵니다.</summary>
      <returns>이 이미지에 저장된 각 속성 항목에 대한 속성 ID의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>이 <see cref="T:System.Drawing.Image" />에 저장된 모든 속성 항목(메타데이터)을 가져옵니다.</summary>
      <returns>이미지에 저장된 각 속성 항목에 대한 각 <see cref="T:System.Drawing.Imaging.PropertyItem" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>이 <see cref="T:System.Drawing.Image" />의 파일 형식을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.ImageFormat" />의 파일 형식을 나타내는 <see cref="T:System.Drawing.Image" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>지정된 속성 항목을 이 <see cref="T:System.Drawing.Image" />에서 제거합니다.</summary>
      <param name="propid">제거할 속성 항목의 ID입니다.</param>
      <exception cref="T:System.ArgumentException">이미지에 요청된 속성 항목이 포함되지 않은 경우
또는
이 이미지의 이미지 형식이 속성 항목을 지원하지 않는 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>
        <see cref="T:System.Drawing.Image" />를 회전하거나, 대칭 이동하거나, 회전하여 대칭 이동합니다.</summary>
      <param name="rotateFlipType">이미지에 적용할 회전 및 대칭 이동의 형식을 지정하는 <see cref="T:System.Drawing.RotateFlipType" /> 멤버입니다.</param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>지정된 인코더 및 이미지 인코더 매개 변수를 사용하여 이 이미지를 지정된 스트림에 저장합니다.</summary>
      <param name="stream">이미지가 저장될 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoder">이 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" />에 대한 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="encoderParams">이미지 인코더에서 사용하는 매개 변수를 지정하는 <see cref="T:System.Drawing.Imaging.EncoderParameters" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">이미지가 잘못된 이미지 형식으로 저장된 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>이 이미지를 지정된 형식의 지정된 스트림에 저장합니다.</summary>
      <param name="stream">이미지가 저장될 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="format">저장된 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ImageFormat" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 또는 <paramref name="format" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">이미지가 잘못된 이미지 형식으로 저장된 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>이 <see cref="T:System.Drawing.Image" />를 지정된 파일이나 스트림에 저장합니다.</summary>
      <param name="filename">이 <see cref="T:System.Drawing.Image" />를 저장할 파일의 이름을 포함하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" />가 <see langword="null." />인 경우</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">이미지가 잘못된 이미지 형식으로 저장된 경우
또는
이미지를 만드는 데 사용된 동일한 파일에 이미지가 저장된 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>지정된 인코더 및 이미지 인코더 매개 변수를 사용하여 이 <see cref="T:System.Drawing.Image" />를 지정된 파일에 저장합니다.</summary>
      <param name="filename">이 <see cref="T:System.Drawing.Image" />를 저장할 파일의 이름을 포함하는 문자열입니다.</param>
      <param name="encoder">이 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" />에 대한 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="encoderParams">이 <see cref="T:System.Drawing.Imaging.EncoderParameters" />에 사용할 <see cref="T:System.Drawing.Image" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 또는 <paramref name="encoder" />가 <see langword="null." />인 경우</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">이미지가 잘못된 이미지 형식으로 저장된 경우
또는
이미지를 만드는 데 사용된 동일한 파일에 이미지가 저장된 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>이 <see cref="T:System.Drawing.Image" />를 지정된 형식으로 지정된 파일에 저장합니다.</summary>
      <param name="filename">이 <see cref="T:System.Drawing.Image" />를 저장할 파일의 이름을 포함하는 문자열입니다.</param>
      <param name="format">이 <see cref="T:System.Drawing.Imaging.ImageFormat" />에 대한 <see cref="T:System.Drawing.Image" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 또는 <paramref name="format" />가 <see langword="null." />인 경우</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">이미지가 잘못된 이미지 형식으로 저장된 경우
또는
이미지를 만드는 데 사용된 동일한 파일에 이미지가 저장된 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <see cref="Overload:System.Drawing.Image.Save" /> 메서드에 대한 이전 호출에 지정된 파일이나 스트림에 프레임을 추가합니다.</summary>
      <param name="image">추가할 프레임을 포함하는 <see cref="T:System.Drawing.Image" />입니다.</param>
      <param name="encoderParams">저장-추가 작업에 사용되는 이미지 인코더에 필요한 매개 변수를 보유한 <see cref="T:System.Drawing.Imaging.EncoderParameters" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <see cref="Overload:System.Drawing.Image.Save" /> 메서드에 대한 이전 호출에 지정된 파일이나 스트림에 프레임을 추가합니다. 이 메서드를 사용하여 다중 프레임 이미지에서 선택한 프레임을 다른 다중 프레임 이미지에 저장합니다.</summary>
      <param name="encoderParams">저장-추가 작업에 사용되는 이미지 인코더에 필요한 매개 변수를 보유한 <see cref="T:System.Drawing.Imaging.EncoderParameters" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>크기와 인덱스로 지정한 프레임을 선택합니다.</summary>
      <param name="dimension">크기 형식의 ID를 지정하는 <see cref="T:System.Drawing.Imaging.FrameDimension" />입니다.</param>
      <param name="frameIndex">활성 프레임의 인덱스입니다.</param>
      <returns>항상 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>이 <see cref="T:System.Drawing.Image" />에 속성 항목(메타데이터)을 저장합니다.</summary>
      <param name="propitem">저장할 <see cref="T:System.Drawing.Imaging.PropertyItem" />입니다.</param>
      <exception cref="T:System.ArgumentException">이 이미지의 이미지 형식이 속성 항목을 지원하지 않는 경우</exception>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>이 이미지의 너비와 높이를 픽셀로 가져옵니다.</summary>
      <returns>이 이미지의 너비와 높이(픽셀)를 나타내는 <see cref="T:System.Drawing.Size" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="P:System.Drawing.Image.Tag">
      <summary>이미지에 대한 추가 데이터를 제공하는 개체를 가져오거나 설정합니다.</summary>
      <returns>이미지에 대한 추가 데이터를 제공하는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>이 <see cref="T:System.Drawing.Image" />의 세로 해상도(인치 당 픽셀 수)를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Image" />의 세로 해상도(인치 당 픽셀 수)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>이 <see cref="T:System.Drawing.Image" />의 너비(픽셀)를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Image" />의 너비(픽셀)입니다.</returns>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>시간 기반 프레임을 가진 이미지에 애니메이션 효과를 줍니다.</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>프레임이 여러 개인 이미지를 애니메이션으로 표시합니다.</summary>
      <param name="image">애니메이션 효과를 줄 <see cref="T:System.Drawing.Image" /> 개체입니다.</param>
      <param name="onFrameChangedHandler">애니메이션 프레임이 변경될 때 호출하는 방법을 지정하는 <see langword="EventHandler" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>지정된 이미지가 시간 기반 프레임을 가지고 있는지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <param name="image">테스트할 <see cref="T:System.Drawing.Image" /> 개체입니다.</param>
      <returns>지정된 이미지가 시간 기반 프레임을 가지고 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>실행 중인 애니메이션을 종료합니다.</summary>
      <param name="image">애니메이션 효과를 중지할 <see cref="T:System.Drawing.Image" /> 개체입니다.</param>
      <param name="onFrameChangedHandler">애니메이션 프레임이 변경될 때 호출하는 방법을 지정하는 <see langword="EventHandler" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>현재 애니메이션 효과가 있는 모든 이미지로 프레임을 이동합니다. 새 프레임은 이미지가 렌더링된 다음에 나타납니다.</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>지정된 이미지로 프레임을 이동합니다. 새 프레임은 이미지가 렌더링된 다음에 나타납니다. 이 메서드는 시간 기반 프레임이 있는 이미지에만 적용됩니다.</summary>
      <param name="image">프레임을 업데이트할 <see cref="T:System.Drawing.Image" /> 개체입니다.</param>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>비트맵 이미지의 특성을 지정합니다. <see cref="T:System.Drawing.Imaging.BitmapData" /> 클래스는 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 클래스의 <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> 및 <see cref="T:System.Drawing.Bitmap" /> 메서드에서 사용됩니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.BitmapData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 개체의 픽셀 높이를 가져오거나 설정합니다. 스캐닝선의 개수로 참조되기도 합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 개체의 픽셀 높이입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>이 <see cref="T:System.Drawing.Bitmap" /> 개체를 반환한 <see cref="T:System.Drawing.Imaging.BitmapData" /> 개체의 픽셀 정보 형식을 가져오거나 설정합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 개체의 픽셀 정보 형식을 지정하는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>예약됨. 사용하지 마십시오.</summary>
      <returns>예약됨. 사용하지 마십시오.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>비트맵의 첫째 픽셀 데이터 주소를 가져오거나 설정합니다. 이 주소는 비트맵의 첫째 스캐닝선으로 간주될 수도 있습니다.</summary>
      <returns>비트맵의 첫째 픽셀 데이터 주소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 개체의 스트라이드 너비(스캔 너비라고도 함)를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 개체의 스트라이드 너비(바이트)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 개체의 픽셀 너비를 가져오거나 설정합니다. 이 너비는 한 스캐닝선의 픽셀 개수로 간주될 수도 있습니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 개체의 픽셀 너비입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>색 조정 정보를 사용하는 GDI+ 개체를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>지정된 형식의 개수입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 개체에 대한 색 조정 정보입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" /> 개체에 대한 색 조정 정보입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>지정된 형식의 개수입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>자신의 색 조정 정보를 포함하지 않는 모든 GDI+ 개체가 사용하는 색 조정 정보입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 개체에 대한 색 조정 정보입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>텍스트에 대한 색 조정 정보입니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>개별 채널을 CMYK(녹청, 자홍, 노랑, 검정) 색 공간에 지정합니다. 이 열거형은 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> 메서드에서 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>녹청 색 채널입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>검정 색 채널입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>마지막으로 선택한 채널을 사용합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>자홍 색 채널입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>노랑 색 채널입니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>색을 변환하기 위한 맵을 정의합니다. <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 클래스의 여러 메서드는 <see cref="T:System.Drawing.Imaging.ColorMap" /> 구조체의 배열인 색 매핑 변경 테이블을 사용하여 이미지 색을 조정합니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>변환 결과가 될 새 <see cref="T:System.Drawing.Color" /> 구조체를 가져오거나 설정합니다.</summary>
      <returns>변환 결과가 될 새 <see cref="T:System.Drawing.Color" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>변환될 기존 <see cref="T:System.Drawing.Color" /> 구조체를 가져오거나 설정합니다.</summary>
      <returns>변환될 기존 <see cref="T:System.Drawing.Color" /> 구조체입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>색상 맵의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" />의 색상 맵을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>기본 색상 맵입니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>RGBAW 공간의 좌표를 포함하는 5x5 매트릭스를 정의합니다. <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 클래스의 여러 메서드는 색 매트릭스를 사용하여 이미지 색을 조정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>지정된 <paramref name="newColorMatrix" /> 매트릭스의 요소를 사용하여 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="newColorMatrix">새 <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 요소 값입니다.</param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 지정된 행과 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="row">요소의 행입니다.</param>
      <param name="column">요소의 열입니다.</param>
      <returns>지정된 행과 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 0열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 0열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 첫째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 첫째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 둘째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 둘째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 셋째 열에 있는 요소를 가져오거나 설정합니다. 알파 구성 요소를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 셋째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 넷째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 0행과 넷째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 0열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 0열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 첫째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 첫째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 둘째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 둘째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 셋째 열에 있는 요소를 가져오거나 설정합니다. 알파 구성 요소를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 셋째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 넷째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 첫째 행과 넷째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 0열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 0열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 첫째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 첫째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 둘째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 둘째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 셋째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 셋째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 넷째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 둘째 행과 넷째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 0열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 0열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 첫째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 첫째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 둘째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 둘째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 셋째 열에 있는 요소를 가져오거나 설정합니다. 알파 구성 요소를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 셋째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 넷째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 셋째 행과 넷째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 0열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 0열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 첫째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 첫째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 둘째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 둘째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 셋째 열에 있는 요소를 가져오거나 설정합니다. 알파 구성 요소를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 셋째 열에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 넷째 열에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" />의 넷째 행과 넷째 열에 있는 요소입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />의 색 및 회색조 조정 설정의 영향을 받을 색 및 이미지의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>회색조만 조정됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>회색조를 포함한 모든 색상 값이 동일한 색 조정 매트릭스에 의해 조정됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>모든 색은 조정되지만 회색조는 조정되지 않습니다. 회색조는 빨강, 녹색 및 파랑 구성 요소와 동일한 값을 가지는 임의의 색입니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>색 구성 요소 값에 대해 두 가지 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>32비트 정수 값이 제공되었습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>64비트 정수 값이 제공되었습니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>색상표를 구성하는 색 배열을 정의합니다. 해당 색들은 32비트 ARGB 색입니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>
        <see cref="T:System.Drawing.Color" /> 구조체의 배열을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Color" />를 구성하는 <see cref="T:System.Drawing.Imaging.ColorPalette" /> 구조체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>색 배열의 색 정보를 해석하는 방법을 지정하는 값을 가져옵니다.</summary>
      <returns>다음 플래그 값을 사용할 수 있습니다.
0x00000001
배열의 색상 값에 알파 정보가 포함됩니다.
0x00000002
배열의 색이 회색조 값입니다.
0x00000004
배열의 색이 하프톤 값입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>그래픽 명령을 읽고 쓰기 위해 메타파일에 사용할 수 있는 메서드를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>
        <see cref="M:System.Drawing.Graphics.BeginContainer" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>
        <see cref="M:System.Drawing.Graphics.BeginContainer" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>
        <see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>
        <see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawArc" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>문자열, 위치 및 형식 정보를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawLines" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>
        <see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawPie" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawString" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Enhanced-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>
        <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>메타파일의 마지막 EMF+ 레코드를 표시하는 레코드를 식별합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>
        <see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.FillPie" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>
        <see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>
        <see cref="M:System.Drawing.Graphics.GetHdc" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>EMF+ 헤더인 레코드를 식별합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>잘못된 데이터를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>이 열거형의 최대값입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>이 열거형의 최소값입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>여러 형식 섹션의 끝을 표시합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>여러 형식 섹션을 표시합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>여러 형식 섹션의 시작을 표시합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>개체를 표시합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>
        <see cref="M:System.Drawing.Graphics.ResetClip" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>
        <see cref="M:System.Drawing.Graphics.ResetTransform" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>
        <see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>
        <see cref="M:System.Drawing.Graphics.Save" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>
        <see cref="P:System.Drawing.Graphics.SmoothingMode" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.SetClip" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.SetClip" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.SetClip" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>
        <see cref="P:System.Drawing.Graphics.CompositingMode" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>
        <see cref="P:System.Drawing.Graphics.CompositingQuality" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>
        <see cref="P:System.Drawing.Graphics.InterpolationMode" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>
        <see cref="P:System.Drawing.Graphics.PixelOffsetMode" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>
        <see cref="P:System.Drawing.Graphics.RenderingOrigin" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>
        <see cref="P:System.Drawing.Graphics.TextContrast" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>
        <see cref="P:System.Drawing.Graphics.TextRenderingHint" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>내부적으로 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 메서드를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>지정된 값을 기준으로 논리 색상표의 크기를 늘리거나 줄입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>DIB의 픽셀 영역에 대한 색 데이터를 지정된 대상 영역으로 복사합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>MSDN 라이브러리의 GDI 단원에 있는 "Windows-Format Metafiles"를 참조하십시오.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>확장 메타파일(EMF) 파일에 배치되는 레코드의 속성을 지정합니다. 이 열거형은 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 여러 생성자가 사용합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>메타파일에 있는 모든 레코드를 GDI 또는 GDI+가 표시할 수 있는 EMF 레코드로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>메타파일에 있는 모든 EMF+ 레코드가 대체 EMF 레코드와 연관되도록 지정합니다. <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> 형식의 메타파일은 GDI 또는 GDI+가 표시할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>메타파일에 있는 모든 레코드를 GDI+는 표시할 수 있지만 GDI는 표시할 수 없는 EMF+ 레코드로 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 개체는 이미지 인코더 매개 변수의 범주를 식별하는 GUID(Globally Unique Identifier)를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>지정된 GUID(Globally Unique Identifier)에서 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. GUID는 이미지 인코더 매개 변수 범주를 지정합니다.</summary>
      <param name="guid">이미지 인코더 매개 변수 범주를 식별하는 GUID입니다.</param>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>ChrominanceTable 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>ColorDepth 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>Compression 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>이미지 인코더 매개 변수 범주를 식별하는 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>이미지 인코더 매개 변수 범주를 식별하는 GUID입니다.</returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>LuminanceTable 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>Quality 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>RenderMethod 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>SaveFlag 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>ScanMethod 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>Transformation 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>Version 매개 변수 범주의 GUID를 사용하여 초기화된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>값 또는 값 배열을 이미지 인코더에 전달하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 부호 없는 8비트 정수 하나를 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 부호 없는 8비트 정수입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 8비트 값 하나를 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />나 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 바이트입니다.</param>
      <param name="undefined">
        <see langword="true" />이면 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />로 설정되고, 그렇지 않으면 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 부호 없는 8비트 정수의 배열을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 배열에 있는 요소의 개수로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 부호 없는 8비트 정수의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 바이트의 배열을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />나 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 배열에 있는 요소의 개수로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 바이트의 배열입니다.</param>
      <param name="undefined">
        <see langword="true" />이면 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />로 설정되고, 그렇지 않으면 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성이 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />로 설정됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 16비트 정수 하나를 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 16비트 정수로, 음수는 사용할 수 없습니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 16비트 정수의 배열을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 배열에 있는 요소의 개수로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 16비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체, 값의 개수, 값의 데이터 형식 및 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체에 저장된 값에 대한 포인터를 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="numberValues">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값의 개수를 지정하는 정수입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 개체에 저장된 값의 데이터 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 열거형의 멤버입니다. <see cref="T:System.Type" /> 및 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="value">
        <paramref name="Type" /> 매개 변수가 지정하는 형식의 값 배열에 대한 포인터입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 32비트 정수 쌍을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. 정수 쌍은 분수를 나타냅니다. 첫째 정수는 분자이고 둘째 정수는 분모입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="numerator">분수의 분자를 나타내는 32비트 정수로, 음수는 사용할 수 없습니다.</param>
      <param name="denominator">분수의 분모를 나타내는 32비트 정수로, 음수는 사용할 수 없습니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체와 값의 개수, 값의 데이터 형식 및 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체에 저장된 값에 대한 포인터를 지정하는 세 개의 정수를 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="NumberOfValues">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값의 개수를 지정하는 정수입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="Type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 개체에 저장된 값의 데이터 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 열거형의 멤버입니다. <see cref="T:System.Type" /> 및 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="Value">
        <paramref name="Type" /> 매개 변수가 지정하는 형식의 값 배열에 대한 포인터입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />이 유효한 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 32비트 정수 네 개를 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. 네 개의 정수는 분수의 범위를 나타냅니다. 처음 두 정수는 범위의 최소 분수값을 나타내며 나머지 두 정수는 최대 분수값을 나타냅니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="numerator1">범위의 최소 분수값의 분자를 나타내는 32비트 정수로, 음수는 사용할 수 없습니다.</param>
      <param name="demoninator1">범위의 최소 분수값의 분모를 나타내는 32비트 정수로, 음수는 사용할 수 없습니다.</param>
      <param name="numerator2">범위의 최소 분수값의 분모를 나타내는 32비트 정수로, 음수는 사용할 수 없습니다.</param>
      <param name="demoninator2">범위의 최대 분수값의 분자를 나타내는 32비트 정수로, 음수는 사용할 수 없습니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 32비트 정수의 두 배열을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. 두 배열은 분수의 배열을 나타냅니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 <paramref name="numerator" /> 배열에 있는 요소의 개수로 설정합니다. 이 개수는 <paramref name="denominator" /> 배열에 있는 요소의 개수와 같아야 합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="numerator">분수의 분자를 지정하는 32비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다.</param>
      <param name="denominator">분수의 분모를 지정하는 32비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다. 제공된 인덱스의 분모는 동일한 인덱스의 분자와 쌍을 이룹니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 32비트 정수의 네 배열을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. 네 배열은 배열의 유리수 범위를 나타냅니다. 유리수 범위는 최소 분수값에서 최대 분수값에 이르는 모든 분수 집합입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 <paramref name="numerator1" /> 배열에 있는 요소의 개수로 설정합니다. 이 개수는 다른 세 개의 배열에 있는 요소의 개수와 같아야 합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="numerator1">범위의 최소값에 대한 분자를 지정하는 32비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다.</param>
      <param name="denominator1">범위의 최소값에 대한 분모를 지정하는 32비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다.</param>
      <param name="numerator2">범위의 최대값에 대한 분자를 지정하는 32비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다.</param>
      <param name="denominator2">범위의 최대값에 대한 분모를 지정하는 32비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 64비트 정수 하나를 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" />(32비트)으로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 64비트 정수로, 음수는 사용할 수 없습니다. 이 매개 변수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장되기 전에 32비트 정수로 변환됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64비트 정수 쌍을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. 정수 쌍은 정수의 범위를 나타냅니다. 첫째 정수는 범위의 최소값이며 둘째 정수는 최대값입니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 1로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="rangebegin">정수 범위의 최소값을 나타내는 64비트 정수로, 음수는 사용할 수 없습니다. 이 매개 변수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장되기 전에 32비트 정수로 변환됩니다.</param>
      <param name="rangeend">정수 범위의 최대값을 나타내는 64비트 정수로, 음수는 사용할 수 없습니다. 이 매개 변수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장되기 전에 32비트 정수로 변환됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64비트 정수의 배열을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" />(32비트)으로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 배열에 있는 요소의 개수로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값을 지정하는 64비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다. 64비트 정수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장되기 전에 32비트 정수로 변환됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체 및 64비트 정수의 두 배열을 사용하여 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다. 두 배열은 배열의 정수 범위를 나타냅니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 <paramref name="rangebegin" /> 배열에 있는 요소의 개수로 설정합니다. 이 개수는 <paramref name="rangeend" /> 배열에 있는 요소의 개수와 같아야 합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="rangebegin">정수 범위의 최소값을 지정하는 64비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다. 64비트 정수는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장되기 전에 32비트 정수로 변환됩니다.</param>
      <param name="rangeend">정수 범위의 최대값을 지정하는 64비트 정수의 배열입니다. 배열에는 음수를 사용할 수 없습니다. 64비트 정수는 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체에 저장되기 전에 32비트 정수로 변환됩니다. 제공된 인덱스의 최대값은 동일한 인덱스의 최소값과 쌍을 이룹니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 및 문자열을 사용하여 <see cref="T:System.Drawing.Imaging.Encoder" /> 클래스의 새 인스턴스를 초기화합니다. 이 문자열은 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장되기 전에 null로 종료되는 ASCII 문자열로 변환됩니다. <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 속성은 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />로 설정하고, <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 속성은 NULL 종결자를 포함하는 ASCII 문자열의 길이로 설정합니다.</summary>
      <param name="encoder">매개 변수 범주의 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체입니다.</param>
      <param name="value">
        <see cref="T:System.String" /> 개체에 저장된 값을 지정하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>이 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>이 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체와 관련된 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체를 가져오거나 설정합니다. <see cref="T:System.Drawing.Imaging.Encoder" /> 개체는 이 <see cref="F:System.Drawing.Imaging.Encoder.Quality" /> 개체에 저장된 매개 변수의 범주(예: <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />, <see cref="F:System.Drawing.Imaging.Encoder.Compression" /> 또는 <see cref="T:System.Drawing.Imaging.EncoderParameter" />)를 지정하는 GUID(Globally Unique Identifier)를 캡슐화합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.Encoder" /> 개체에 저장된 매개 변수의 범주를 지정하는 GUID를 캡슐화하는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Finalize">
      <summary>가비지 수집기에서 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체 회수하기 전에 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에서 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>이 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값의 배열에 있는 요소의 개수를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값의 배열에 있는 요소의 개수를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>이 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값의 데이터 형식을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 개체에 저장된 값의 데이터 형식을 나타내는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 열거형의 멤버입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>이 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체에 저장된 값의 데이터 형식을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 개체에 저장된 값의 데이터 형식을 나타내는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 열거형의 멤버입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체의 배열을 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>하나의 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체를 포함할 수 있는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>지정된 개수의 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체를 포함할 수 있는 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="count">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체가 포함할 수 있는 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체의 개수를 지정하는 정수입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>이 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체의 배열을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체의 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>이미지의 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 또는 <see cref="Overload:System.Drawing.Image.Save" /> 메서드와 함께 사용되는 <see cref="Overload:System.Drawing.Image.SaveAdd" />의 데이터 형식을 지정하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>값 배열을 null로 종료되는 ASCII 문자열로 지정합니다. <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 개체의 <see langword="NumberOfValues" /> 데이터 멤버는 NULL 종결자를 포함한 문자열의 길이를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>배열의 각 값을 부호 없는 8비트 정수로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>배열의 각 값을 부호 없는 32비트 정수로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>배열의 각 값을 부호 없는 32비트 정수 쌍으로 지정합니다. 각 쌍은 숫자의 범위를 나타냅니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>배열의 각 값을 부호 없는 32비트 정수 쌍으로 지정합니다. 각 쌍은 분수를 나타냅니다. 첫째 정수는 분자이고 둘째 정수는 분모입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>배열의 각 값을 네 개의 부호 없는 32비트 정수 집합으로 지정합니다. 첫 두 정수는 첫째 분수를 나타내고 다음에 오는 두 정수는 둘째 분수를 나타냅니다. 두 분수는 유리수 범위를 나타내는데, 첫째 분수는 유리수 범위에 대한 최소값이며 둘째 분수는 최대값입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>배열의 각 값을 부호 없는 16비트 정수로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>값의 배열을 데이터 형식이 정의되지 않은 바이트 배열로 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>
        <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> 또는 <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> 메서드를 사용할 때 JPEG 또는 TIFF 이미지 인코더에 전달되는 매개 변수 값을 지정하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>CCITT3 압축 스키마를 지정합니다. TIFF 인코더를 Compression 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>CCITT4 압축 스키마를 지정합니다. TIFF 인코더를 Compression 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>LZW 압축 스키마를 지정합니다. TIFF 인코더를 Compression 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>압축을 지정하지 않습니다. TIFF 인코더를 Compression 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>RLE 압축 스키마를 지정합니다. TIFF 인코더를 Compression 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>여러 프레임 파일 또는 스트림이 닫히도록 지정합니다. TIFF 인코더를 SaveFlag 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>프레임이 이미지의 페이지 크기에 추가되도록 지정합니다. TIFF 인코더를 SaveFlag 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>여러 프레임 이미지의 마지막 프레임을 지정합니다. TIFF 인코더를 SaveFlag 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>이미지가 둘 이상의 프레임(페이지)으로 구성되도록 지정합니다. TIFF 인코더를 SaveFlag 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>이미지가 세로 축에 대해 좌우 대칭되도록 지정합니다. JPEG 인코더를 Transformation 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>이미지가 가로 축에 대해 상하 대칭되도록 지정합니다. JPEG 인코더를 Transformation 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>이미지를 중심에 대해 180도 회전하도록 지정합니다. JPEG 인코더를 Transformation 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>이미지가 중심에 대해 시계 방향으로 270도 회전하도록 지정합니다. JPEG 인코더를 Transformation 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>이미지가 중심에 대해 시계 방향으로 90도 회전하도록 지정합니다. JPEG 인코더를 Transformation 범주에 속하는 매개 변수로 전달할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>GDI+ 버전 1.0에서는 사용되지 않습니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>이미지의 프레임 크기를 가져오는 속성을 제공합니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>지정된 <see langword="Guid" /> 구조체를 사용하여 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="guid">이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체에 대한 GUID가 포함된 <see langword="Guid" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>지정된 개체가 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체와 동일한 <see cref="T:System.Drawing.Imaging.FrameDimension" />인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="o">테스트할 개체입니다.</param>
      <returns>
        <paramref name="o" />의 <see cref="T:System.Drawing.Imaging.FrameDimension" />이 이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체의 해시 코드를 반환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체를 나타내는 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체를 나타내는 GUID가 포함된 <see langword="Guid" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>페이지 크기를 가져옵니다.</summary>
      <returns>페이지 크기입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>해상도 수치를 가져옵니다.</summary>
      <returns>해상도 수치입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>시간 차원을 가져옵니다.</summary>
      <returns>시간 차원입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체를 사람이 인식할 수 있는 문자열로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>렌더링하는 동안 비트맵과 메타파일 색을 조작하는 방법에 대한 정보가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체의 브러시 색 다시 매핑 테이블을 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>기본 범주에 대한 색상 키(투명도 범위)를 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색상 키(투명도 범위)를 지웁니다.</summary>
      <param name="type">색상 키가 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>기본 범주에 대한 색 조정 매트릭스를 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색 조정 매트릭스를 지웁니다.</summary>
      <param name="type">색 조정 매트릭스가 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>기본 범주에 대한 감마 보정을 사용하지 않도록 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 감마 보정을 사용하지 않도록 설정합니다.</summary>
      <param name="type">감마 보정이 사용하지 않도록 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>기본 범주에 대한 <see langword="NoOp" /> 설정을 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 <see langword="NoOp" /> 설정을 지웁니다.</summary>
      <param name="type">
        <see langword="NoOp" /> 설정이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>기본 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널 설정을 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널 설정을 지웁니다.</summary>
      <param name="type">출력 채널 설정이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>기본 범주에 대한 출력 채널 색 프로필 설정을 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 출력 채널 색 프로필 설정을 지웁니다.</summary>
      <param name="type">출력 채널 프로필 설정이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>기본 범주에 대한 색 다시 매핑 테이블을 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색 다시 매핑 테이블을 지웁니다.</summary>
      <param name="type">다시 매핑 테이블이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>기본 범주에 대한 임계값을 지웁니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 임계값을 지웁니다.</summary>
      <param name="type">임계값이 지워지는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>이 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체의 정확한 복사본을 만듭니다.</summary>
      <returns>이 클래스가 만드는 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체는 임의의 개체로 캐스팅됩니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>이 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주의 조정 설정에 따라 색상표에서 색을 조정합니다.</summary>
      <param name="palette">입력할 때 조정될 색상표를 포함하고 출력할 때 조정된 색상표를 포함하는 <see cref="T:System.Drawing.Imaging.ColorPalette" />입니다.</param>
      <param name="type">해당 조정 설정이 색상표에 적용되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>브러시 범주에 대한 색 다시 매핑 테이블을 설정합니다.</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 개체의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>기본 범주에 대한 색상 키를 설정합니다.</summary>
      <param name="colorLow">로우 컬러 키 값입니다.</param>
      <param name="colorHigh">하이 컬러 키 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색상 키(투명도 범위)를 설정합니다.</summary>
      <param name="colorLow">로우 컬러 키 값입니다.</param>
      <param name="colorHigh">하이 컬러 키 값입니다.</param>
      <param name="type">색상 키가 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>기본 범주에 대한 색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
      <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
      <param name="grayMatrix">회색조 조정 매트릭스입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>기본 범주에 대한 색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
      <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
      <param name="grayMatrix">회색조 조정 매트릭스입니다.</param>
      <param name="flags">색 조정 및 회색조 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색 조정 매트릭스와 회색조 조정 매트릭스를 설정합니다.</summary>
      <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
      <param name="grayMatrix">회색조 조정 매트릭스입니다.</param>
      <param name="mode">색 조정 및 회색조 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
      <param name="type">색 조정 및 회색조 조정 매트릭스가 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>기본 범주에 대한 색 조정 매트릭스를 설정합니다.</summary>
      <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>기본 범주에 대한 색 조정 매트릭스를 설정합니다.</summary>
      <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
      <param name="flags">색 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색 조정 매트릭스를 설정합니다.</summary>
      <param name="newColorMatrix">색 조정 매트릭스입니다.</param>
      <param name="mode">색 조정 매트릭스의 영향을 받을 색과 이미지의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />의 요소입니다.</param>
      <param name="type">색 조정 매트릭스가 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>기본 범주에 대한 감마 값을 설정합니다.</summary>
      <param name="gamma">감마 보정 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 감마 값을 설정합니다.</summary>
      <param name="gamma">감마 보정 값입니다.</param>
      <param name="type">감마 값이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 열거형의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>기본 범주에 대한 색 조정을 해제합니다. <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 메서드를 호출하기 전의 상태로 색 조정 설정을 복구하려면 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 메서드를 호출합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색 조정을 해제합니다. <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 메서드를 호출하기 전의 상태로 색 조정 설정을 복구하려면 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 메서드를 호출합니다.</summary>
      <param name="type">색 보정 기능이 해제되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>기본 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널을 설정합니다.</summary>
      <param name="flags">출력 채널을 지정하는 <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 CMYK(녹청, 자홍, 노랑, 검정) 출력 채널을 설정합니다.</summary>
      <param name="flags">출력 채널을 지정하는 <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />의 요소입니다.</param>
      <param name="type">출력 채널이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>기본 범주에 대한 출력 채널 색 프로필 파일을 설정합니다.</summary>
      <param name="colorProfileFilename">색 프로필 파일의 경로 이름입니다. 색 프로필 파일이 %SystemRoot%\System32\Spool\Drivers\Color 디렉터리에 있으면 이 매개 변수는 파일 이름이 될 수 있습니다. 그렇지 않으면 이 매개 변수는 정규화된 경로 이름이어야 합니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 출력 채널 색 프로필 파일을 설정합니다.</summary>
      <param name="colorProfileFilename">색 프로필 파일의 경로 이름입니다. 색 프로필 파일이 %SystemRoot%\System32\Spool\Drivers\Color 디렉터리에 있으면 이 매개 변수는 파일 이름이 될 수 있습니다. 그렇지 않으면 이 매개 변수는 정규화된 경로 이름이어야 합니다.</param>
      <param name="type">출력 채널 색 프로필 파일이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>기본 범주에 대한 색 다시 매핑 테이블을 설정합니다.</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 형식의 색 쌍 배열입니다. 각 색 쌍은 기존 색(첫째 값)과 매핑될 색(둘째 값)으로 구성됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 색 매핑 변경 테이블을 설정합니다.</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 형식의 색 쌍 배열입니다. 각 색 쌍은 기존 색(첫째 값)과 매핑될 색(둘째 값)으로 구성됩니다.</param>
      <param name="type">색 매핑 변경 테이블이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>기본 범주에 대한 임계값(투명도 범위)을 설정합니다.</summary>
      <param name="threshold">임계값을 지정하는 실수입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>지정된 범주에 대한 임계값(투명도 범위)을 설정합니다.</summary>
      <param name="threshold">최대값 또는 최소값으로 매핑될 색을 정렬하기 위해 중단점으로 사용되는 0.0~1.0 사이의 임계값입니다.</param>
      <param name="type">색 임계값이 설정되는 범주를 지정하는 <see cref="T:System.Drawing.Imaging.ColorAdjustType" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>질감을 도형 전체에 또는 도형 경계에 바둑판식으로 배열하는 방법을 결정하는 데 사용되는 랩 모드를 설정합니다. 질감이 채우려는 도형보다 작은 경우에는 채울 도형 전체에 질감이 바둑판식으로 배열됩니다.</summary>
      <param name="mode">이미지의 반복 복사본을 사용하여 영역을 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>질감을 도형 전체에 또는 도형 경계에 바둑판식으로 배열하는 방법을 결정하는 데 사용되는 래핑 모드 및 색을 설정합니다. 질감이 채우려는 도형보다 작은 경우에는 채울 도형 전체에 질감이 바둑판식으로 배열됩니다.</summary>
      <param name="mode">이미지의 반복 복사본을 사용하여 영역을 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 요소입니다.</param>
      <param name="color">렌더링된 이미지 외부의 픽셀 색을 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체입니다. 이 색은 모드 매개 변수가 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" />로 설정되어 있고, <see cref="Overload:System.Drawing.Graphics.DrawImage" />에 전달된 원본 사각형이 이미지 자체보다 큰 경우 표시됩니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>질감을 도형 전체에 또는 도형 경계에 바둑판식으로 배열하는 방법을 결정하는 데 사용되는 래핑 모드 및 색을 설정합니다. 질감이 채우려는 도형보다 작은 경우에는 채울 도형 전체에 질감이 바둑판식으로 배열됩니다.</summary>
      <param name="mode">이미지의 반복 복사본을 사용하여 영역을 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 요소입니다.</param>
      <param name="color">렌더링된 이미지 외부의 픽셀 색을 지정하는 색 개체입니다. 이 색은 모드 매개 변수가 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" />로 설정되어 있고, <see cref="Overload:System.Drawing.Graphics.DrawImage" />에 전달된 원본 사각형이 이미지 자체보다 큰 경우 표시됩니다.</param>
      <param name="clamp">이 매개 변수는 아무런 영향을 주지 않습니다. <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>이미지 코덱(인코더/디코더)의 특성을 제공합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>디코딩 프로세스 중 디코더에 차단 동작이 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>코덱이 GDI+에 빌드됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>코덱이 디코딩(읽기)을 지원합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>코덱이 인코딩(저장)을 지원합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>인코더에 찾을 수 있는 출력 스트림이 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>코덱이 래스터 이미지(비트맵)를 지원합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>코덱이 벡터 이미지(메타파일)를 지원합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>사용되지 않습니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 클래스는 설치된 이미지 인코더 및 디코더(코덱이라고 함)의 관련 정보를 모두 검색하는 데 필요한 스토리지 멤버 및 메서드를 제공합니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>특정 코덱을 식별하는 GUID가 포함된 <see cref="T:System.Guid" /> 구조체를 가져오거나 설정합니다.</summary>
      <returns>특정 코덱을 식별하는 GUID가 포함된 <see cref="T:System.Guid" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>코덱의 이름이 포함된 문자열을 가져오거나 설정합니다.</summary>
      <returns>코덱의 이름이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>코덱을 보유하는 DLL의 경로 이름이 포함된 문자열을 가져오거나 설정합니다. DLL에 코덱이 없으면 이 포인터는 <see langword="null" />입니다.</summary>
      <returns>코덱을 보유하는 DLL의 경로 이름이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>코덱에 사용되는 확장명이 포함된 문자열을 가져오거나 설정합니다. 확장명은 세미콜론으로 구분합니다.</summary>
      <returns>코덱에 사용되는 확장명이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>코덱에 대한 추가 정보를 저장하는 데 사용되는 32비트 값을 가져오거나 설정합니다. 이 속성은 <see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> 열거형에서 플래그의 조합을 반환합니다.</summary>
      <returns>코덱에 대한 추가 정보를 저장하는 데 사용되는 32비트 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>코덱의 파일 형식을 설명하는 문자열을 가져오거나 설정합니다.</summary>
      <returns>코덱의 파일 형식을 설명하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>코덱의 형식을 식별하는 GUID가 포함된 <see cref="T:System.Guid" /> 구조체를 가져오거나 설정합니다.</summary>
      <returns>코덱의 형식을 식별하는 GUID가 포함된 <see cref="T:System.Guid" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>GDI+에 빌드되는 이미지 디코더에 대한 정보가 포함된 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 개체의 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 개체의 배열입니다. 배열에 있는 각 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 개체에는 내장 이미지 디코더 중 하나에 대한 정보가 들어 있습니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>GDI+에 빌드되는 이미지 인코더에 대한 정보가 포함된 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 개체의 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 개체의 배열입니다. 배열에 있는 각 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 개체에는 내장 이미지 인코더 중 하나에 대한 정보가 들어 있습니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>코덱의 MIME(Multipurpose Internet Mail Extensions) 형식이 포함된 문자열을 가져오거나 설정합니다.</summary>
      <returns>코덱의 MIME(Multipurpose Internet Mail Extensions) 형식이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>필터로 사용될 수 있는 2차원 바이트 배열을 가져오거나 설정합니다.</summary>
      <returns>필터로 사용될 수 있는 2차원 바이트 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>코덱의 시그니처를 나타내는 2차원 바이트 배열을 가져오거나 설정합니다.</summary>
      <returns>코덱의 시그니처를 나타내는 2차원 바이트 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>코덱의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns>코덱의 버전 번호입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>
        <see cref="T:System.Drawing.Image" /> 개체에 포함된 픽셀 데이터의 특성을 지정합니다. <see cref="P:System.Drawing.Image.Flags" /> 속성은 이 열거형의 멤버를 반환합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>좀 더 빠른 액세스를 위해 픽셀 데이터를 캐시할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>픽셀 데이터가 CMYK 색 공간을 사용합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>픽셀 데이터가 회색조입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>픽셀 데이터가 RGB 색 공간을 사용합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>이미지가 YCBCR 색 공간을 사용하여 저장되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>이미지가 YCCK 색 공간을 사용하여 저장되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>픽셀 데이터에는 알파 정보가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>dpi 정보가 이미지에 저장되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>픽셀 크기가 이미지에 저장되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>픽셀 데이터가 0(투명)~255(불투명) 이외의 알파 값을 가지도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>형식 정보가 없습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>픽셀 데이터는 부분적으로 확장할 수 있지만 몇 가지 제한 사항이 존재합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>픽셀 데이터가 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>픽셀 데이터를 확장할 수 있습니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>이미지의 파일 형식을 지정합니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>지정한 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 구조체를 사용하여 <see cref="T:System.Guid" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="guid">특정 이미지 형식을 지정하는 <see cref="T:System.Guid" /> 구조체입니다.</param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>비트맵(BMP) 이미지 형식을 가져옵니다.</summary>
      <returns>비트맵 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>확장 메타파일(EMF) 이미지 형식을 가져옵니다.</summary>
      <returns>확장 메타파일 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>지정된 개체가 이 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체와 동일한 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="o">테스트할 개체입니다.</param>
      <returns>
        <paramref name="o" />의 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체가 이 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체와 동일하면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>Exchangeable Image File(Exif) 형식을 가져옵니다.</summary>
      <returns>Exif 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>이 개체를 나타내는 해시 코드 값을 반환합니다.</summary>
      <returns>이 개체를 나타내는 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>GIF(Graphics Interchange Format) 이미지 형식을 가져옵니다.</summary>
      <returns>GIF 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>이 <see cref="T:System.Guid" /> 개체를 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 구조체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Guid" /> 개체를 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 구조체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>Windows 아이콘 이미지 형식을 가져옵니다.</summary>
      <returns>Windows 아이콘 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>JPEG(Joint Photographic Experts Group) 이미지 형식을 가져옵니다.</summary>
      <returns>JPEG 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>메모리의 비트맵 형식을 가져옵니다.</summary>
      <returns>메모리의 비트맵 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>W3C PNG(Portable Network Graphics) 이미지 형식을 가져옵니다.</summary>
      <returns>PNG 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>TIFF(Tagged Image File Format) 이미지 형식을 가져옵니다.</summary>
      <returns>TIFF 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>해당 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체를 사람이 인식할 수 있는 문자열로 변환합니다.</summary>
      <returns>해당 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체를 나타내는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>Windows 메타파일(WMF) 이미지 형식을 가져옵니다.</summary>
      <returns>Windows 메타파일 이미지 형식을 나타내는 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>
        <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 메서드의 플래그 매개 변수에 전달되는 플래그를 지정합니다. <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 메서드는 픽셀 데이터를 읽거나 쓸 수 있도록 이미지 부분을 잠급니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>읽기를 위해 잠글 이미지 부분을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>읽기 또는 쓰기를 위해 잠글 이미지 부분을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>픽셀 데이터를 읽거나 쓰는 데 사용되는 버퍼가 사용자에 의해 할당되도록 지정합니다. 이 플래그가 설정된 경우 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 메서드의 <paramref name="flags" /> 매개 변수는 입력 매개 변수 및 출력 매개 변수(가능한 경우)로 제공됩니다. 이 플래그가 해제되면 <paramref name="flags" /> 매개 변수는 출력 매개 변수로만 제공됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>쓰기를 위해 잠글 이미지 부분을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>그래픽 메타파일을 정의합니다. 메타파일에는 기록(생성) 및 재생(표시)할 수 있는 그래픽 작업 시퀀스를 설명하는 레코드가 들어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>지정된 핸들을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="henhmetafile">향상된 메타파일에 대한 핸들입니다.</param>
      <param name="deleteEmf">
        <see cref="T:System.Drawing.Imaging.Metafile" />이 삭제될 때 확장 메타파일 핸들을 삭제하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>디바이스 컨텍스트에 대한 지정된 핸들 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="emfType">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>디바이스 컨텍스트에 대한 지정된 핸들 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 파일의 이름을 지정하기 위해 문자열을 제공할 수 있습니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="emfType">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 설명이 포함된 이름입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>지정된 핸들과 <see cref="T:System.Drawing.Imaging.Metafile" />를 사용하여 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 창 핸들입니다.</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>지정된 핸들과 <see cref="T:System.Drawing.Imaging.Metafile" />를 사용하여 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> 클래스의 새 인스턴스를 초기화합니다. 메타파일이 삭제될 때 <paramref name="deleteWmf" /> 매개 변수를 사용하여 핸들을 삭제할 수도 있습니다.</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 창 핸들입니다.</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />
      </param>
      <param name="deleteWmf">
        <see cref="T:System.Drawing.Imaging.Metafile" />이 삭제될 때 새 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 핸들을 삭제하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>제공된 단위를 사용하는 지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>제공된 단위를 사용하는 지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트와 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>제공된 단위를 사용하는 지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트와 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 파일의 이름을 지정하기 위해 문자열을 제공할 수 있습니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="desc">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>제공된 단위를 사용하는 지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>제공된 단위를 사용하는 지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트와 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>제공된 단위를 사용하는 지정된 사각형을 경계로 하고 지정된 디바이스 컨텍스트와 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 파일의 이름을 지정하기 위해 문자열을 제공할 수 있습니다.</summary>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>지정된 데이터 스트림에서 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">새 <see cref="T:System.IO.Stream" />을 만들 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>지정된 데이터 스트림에서 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 새 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 설명이 포함된 이름이 들어 있는 문자열을 추가할 수도 있습니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들 및 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체 및 제공된 단위를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 새 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 설명이 포함된 이름이 들어 있는 문자열을 추가할 수 있습니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들 및 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체 및 제공된 단위를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>지정된 데이터 스트림, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 새 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 설명이 포함된 이름이 들어 있는 문자열을 추가할 수 있습니다.</summary>
      <param name="stream">이 <see cref="T:System.IO.Stream" />에 대한 데이터가 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>지정된 파일 이름을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filename">만들 새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>지정된 파일 이름을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 설명이 포함된 문자열을 추가할 수도 있습니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들 및 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체 및 제공된 단위를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" /> 구조체입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 설명이 포함된 문자열을 추가할 수도 있습니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체 및 제공된 단위를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 설명이 포함된 문자열을 추가할 수도 있습니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.Rectangle" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들 및 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체 및 제공된 단위를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체, 제공된 단위 및 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfType" /> 열거형을 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 설명이 포함된 문자열을 추가할 수도 있습니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="description">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>지정된 파일 이름, 디바이스 컨텍스트에 대한 창 핸들, 새 <see cref="T:System.Drawing.Imaging.Metafile" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체 및 제공된 단위를 사용하여 <see cref="T:System.Drawing.Imaging.Metafile" /> 클래스의 새 인스턴스를 초기화합니다. 설명이 포함된 문자열을 추가할 수도 있습니다.</summary>
      <param name="fileName">새 <see cref="T:System.String" />의 파일 이름을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="referenceHdc">디바이스 컨텍스트에 대한 창 핸들입니다.</param>
      <param name="frameRect">새 <see cref="T:System.Drawing.RectangleF" />을 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <param name="frameUnit">
        <paramref name="frameRect" />의 단위를 지정하는 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />입니다.</param>
      <param name="desc">새 <see cref="T:System.String" />에 대한 설명이 포함된 이름이 들어 있는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>확장 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 창 핸들을 반환합니다.</summary>
      <returns>이 확장 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 창 핸들입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>이 <see cref="T:System.Drawing.Imaging.MetafileHeader" />과 연결된 <see cref="T:System.Drawing.Imaging.Metafile" />를 반환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 연결된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 관련된 <see cref="T:System.Drawing.Imaging.Metafile" />를 반환합니다.</summary>
      <param name="henhmetafile">헤더가 반환되는 확장 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 핸들입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 연결된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 관련된 <see cref="T:System.Drawing.Imaging.Metafile" />를 반환합니다.</summary>
      <param name="hmetafile">헤더를 반환할 <see cref="T:System.Drawing.Imaging.Metafile" />에 대한 핸들입니다.</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />
      </param>
      <returns>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 연결된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 관련된 <see cref="T:System.Drawing.Imaging.Metafile" />를 반환합니다.</summary>
      <param name="stream">헤더가 검색되는 <see cref="T:System.IO.Stream" />을 포함하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 연결된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 관련된 <see cref="T:System.Drawing.Imaging.Metafile" />를 반환합니다.</summary>
      <param name="fileName">헤더가 검색되는 <see cref="T:System.String" />의 이름을 포함하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</param>
      <returns>지정된 <see cref="T:System.Drawing.Imaging.MetafileHeader" />와 연결된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>개별 메타파일 레코드를 재생합니다.</summary>
      <param name="recordType">재생할 메타파일 레코드의 형식을 지정하는 <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" />의 요소입니다.</param>
      <param name="flags">레코드의 특성을 지정하는 플래그 집합입니다.</param>
      <param name="dataSize">레코드 데이터의 바이트 수입니다.</param>
      <param name="data">레코드 데이터가 포함된 바이트 배열입니다.</param>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>메타파일의 크기 및 위치를 지정하는 데 사용되는 영역 단위를 지정합니다. 단위는 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체를 만드는 동안에 지정됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>단위는 1인치의 1/300입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>단위는 0.01mm이며, GDI와 호환할 수 있도록 하기 위해 제공됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>단위는 1인치입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>단위는 1mm입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>단위는 1픽셀입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>단위는 1포인트(프린터 포인트)입니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 특성을 포함합니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>관련된 <see cref="T:System.Drawing.Rectangle" />을 제한하는 <see cref="T:System.Drawing.Imaging.Metafile" />을 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Rectangle" />을 제한하는 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 가로 해상도(dpi)를 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 가로 해상도(dpi)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 세로 해상도(dpi)를 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 세로 해상도(dpi)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>확장 메타파일 플러스 헤더 파일의 크기(바이트)를 가져옵니다.</summary>
      <returns>확장 메타파일 플러스 헤더 파일의 크기(바이트)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 디바이스 종속적인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 디바이스 종속적이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 형식인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 형식이거나 Windows 확장 메타파일 플러스 형식인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 형식이거나 Windows 확장 메타파일 플러스 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 플러스 형식인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 플러스 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 복합 확장 메타파일 형식인지 여부를 나타내는 값을 반환합니다. 이 형식은 확장 형식과 확장 플러스 형식을 모두 지원합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 복합 확장 메타파일 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 플러스 형식만 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 확장 메타파일 플러스 형식만 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 메타파일 형식인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 메타파일 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 배치 가능 메타파일 형식인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />이 Windows 배치 가능 메타파일 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 논리 가로 해상도(dpi)를 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 논리 가로 해상도(dpi)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 논리 세로 해상도(dpi)를 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 논리 세로 해상도(dpi)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 크기(바이트)를 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 형식을 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.MetafileType" />의 형식을 나타내는 <see cref="T:System.Drawing.Imaging.Metafile" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 버전 번호를 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 버전 번호입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" />의 WMF(Windows 메타파일) 헤더 파일을 가져옵니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.MetaHeader" />의 WMF 헤더 파일이 포함된 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>메타파일의 형식을 지정합니다. <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> 속성은 이 열거형의 멤버를 반환합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>확장 메타파일(EMF) 파일을 지정합니다. 이러한 파일에는 GDI 레코드만 포함됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>EMF+ 복합 파일을 지정합니다. EMF+ 복합 파일에는 GDI+ 레코드 및 다른 GDI 레코드가 모두 포함되므로 둘 중 하나를 사용하여 표시할 수 있습니다. GDI를 사용하여 레코드를 표시하면 품질이 약간 저하될 수도 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>EMF+ 파일을 지정합니다. EMF+ 파일에는 GDI+ 레코드만 포함되므로 GDI+를 사용하여 표시해야 합니다. GDI를 사용하여 레코드를 표시하면 예기치 않은 결과가 발생할 수도 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>GDI+에서는 인식되지 않는 메타파일 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>Windows 메타파일(WMF) 파일을 지정합니다. 이러한 파일에는 GDI 레코드만 포함됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>배치 가능한 메타파일 헤더를 앞에 배치하는 Windows 메타파일(WMF) 파일을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>Windows 메타파일(WMF)에 대한 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>
        <see langword="MetaHeader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>헤더 파일의 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>헤더 파일의 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체의 최대 레코드 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체의 최대 레코드 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> 개체에 동시에 존재하는 최대 개체 수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.Metafile" /> 개체에 동시에 존재하는 최대 개체 수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>사용되지 않습니다. 항상 0을 반환합니다.</summary>
      <returns>항상 0입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체의 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체의 크기(바이트)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>관련된 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체의 형식을 가져오거나 설정합니다.</summary>
      <returns>관련된 <see cref="T:System.Drawing.Imaging.Metafile" /> 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>헤더 형식의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns>헤더 형식의 버전 번호입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>시스템 색상표에 있는 색 데이터의 형식을 지정합니다. 알파 데이터, 회색조 데이터만 또는 하프톤 데이터를 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>회색조 데이터입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>하프톤 데이터입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>알파 데이터입니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>이미지의 각 픽셀에 대한 색 데이터의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>픽셀 데이터에 미리 증가되지 않은 알파 값이 포함됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>기본 픽셀 형식이 픽셀당 32비트로, 이 형식은 24비트 색 농도와 8비트 알파 채널을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>픽셀 형식이 지정되지 않았습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>예약됨.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>픽셀 형식이 픽셀당 16비트로, 이 색 정보는 5비트의 빨강, 5비트의 녹색, 5비트의 파랑 및 1비트의 알파로 구성된 32,768개 색을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>픽셀 형식이 픽셀당 16비트로, 이 색 정보는 65536개의 회색조를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>픽셀당 16비트 형식으로 지정합니다. 빨강, 녹색 및 파랑 구성 요소에 대해 각각 5비트가 사용됩니다. 나머지 1비트는 사용하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>픽셀당 16비트 형식으로 지정합니다. 빨강 구성 요소에 5비트, 녹색 구성 요소에 6비트, 파랑 구성 요소에 대해 5비트가 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>픽셀 형식을 픽셀당 1비트로 지정하고 인덱싱된 색이 사용되도록 지정합니다. 따라서 색상표에 두 가지 색이 포함됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>픽셀당 24비트 형식으로 지정합니다. 빨강, 녹색 및 파랑 구성 요소에 대해 각각 8비트가 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>픽셀당 32비트 형식으로 지정합니다. 알파, 빨강, 녹색 및 파랑 구성 요소에 대해 각각 8비트가 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>픽셀당 32비트 형식으로 지정합니다. 알파, 빨강, 녹색 및 파랑 구성 요소에 대해 각각 8비트가 사용됩니다. 빨강, 녹색 및 파랑 구성 요소는 알파 구성 요소에 따라 미리 증가됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>픽셀당 32비트 형식으로 지정합니다. 빨강, 녹색 및 파랑 구성 요소에 대해 각각 8비트가 사용됩니다. 나머지 8비트는 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>픽셀당 48비트 형식으로 지정합니다. 빨강, 녹색 및 파랑 구성 요소에 대해 각각 16비트가 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>인덱싱된, 픽셀당 4비트 형식으로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>픽셀당 64비트 형식으로 지정합니다. 알파, 빨강, 녹색 및 파랑 구성 요소에 대해 각각 16비트가 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>픽셀당 64비트 형식으로 지정합니다. 알파, 빨강, 녹색 및 파랑 구성 요소에 대해 각각 16비트가 사용됩니다. 빨강, 녹색 및 파랑 구성 요소는 알파 구성 요소에 따라 미리 증가됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>인덱싱된, 픽셀당 8비트 형식으로 지정합니다. 따라서 색상표에 256 색이 포함됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>픽셀 데이터에는 GDI 색상이 들어 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>픽셀 데이터에는 인덱싱된 색상 값이 포함됩니다. 즉, 해당 값은 시스템 색상표에 있는 색에 대한 인덱스로서 개별 색상 값과 대조됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>이 열거형의 최대값입니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>픽셀 형식에 미리 증가된 알파 값이 포함됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>픽셀 형식이 정의되지 않았습니다.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>이 대리자는 사용되지 않습니다. 메타파일의 레코드를 열거하는 예제는 <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />을 참조하십시오.</summary>
      <param name="recordType">사용되지 않습니다.</param>
      <param name="flags">사용되지 않습니다.</param>
      <param name="dataSize">사용되지 않습니다.</param>
      <param name="recordData">사용되지 않습니다.</param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>메타데이터 속성을 캡슐화하여 이미지 파일에 포함시킵니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>속성의 ID를 가져오거나 설정합니다.</summary>
      <returns>속성의 ID를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 속성의 길이(바이트)를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 바이트 배열의 길이(바이트)를 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 속성에 포함된 데이터의 형식을 정의하는 정수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" />에 포함된 데이터의 형식을 정의하는 정수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>속성 항목의 값을 가져오거나 설정합니다.</summary>
      <returns>속성 항목의 값을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>배치 가능한 메타파일을 정의합니다. 상속할 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>
        <see langword="WmfPlaceableFileHeader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 오른쪽 아래 모퉁이의 Y 좌표를 가져오거나 설정합니다.</summary>
      <returns>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 오른쪽 아래 모퉁이의 Y 좌표입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 왼쪽 위 모퉁이의 X 좌표를 가져오거나 설정합니다.</summary>
      <returns>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 왼쪽 위 모퉁이의 X 좌표입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 오른쪽 아래 모퉁이의 X 좌표를 가져오거나 설정합니다.</summary>
      <returns>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 오른쪽 아래 모퉁이의 X 좌표입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 왼쪽 위 모퉁이의 Y 좌표를 가져오거나 설정합니다.</summary>
      <returns>출력 디바이스에서 메타파일 이미지의 경계 사각형에 대한 왼쪽 위 모퉁이의 Y 좌표입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>헤더에 있는 10개의 이전 <see langword="WORD" />에 대한 체크섬을 가져오거나 설정합니다.</summary>
      <returns>헤더에 있는 10개의 이전 <see langword="WORD" />에 대한 체크섬입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>메모리의 메타파일 핸들을 가져오거나 설정합니다.</summary>
      <returns>메모리의 메타파일 핸들입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>인치 당 트윕의 수를 가져오거나 설정합니다.</summary>
      <returns>인치 당 트윕의 수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>배치 가능한 메타파일 헤더의 유무를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>배치 가능한 메타파일 헤더의 유무를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>예약됨. 사용하지 마십시오.</summary>
      <returns>예약됨. 사용하지 마십시오.</returns>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>선과 곡선을 그리는 데 사용되는 개체를 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 <see cref="T:System.Drawing.Brush" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />의 채우기 속성을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>지정된 <see cref="T:System.Drawing.Pen" /> 및 <see cref="T:System.Drawing.Brush" />를 사용하여 <see cref="P:System.Drawing.Pen.Width" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />의 특성을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="width">새 <see cref="T:System.Drawing.Pen" />의 너비입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>지정된 색을 사용하여 <see cref="T:System.Drawing.Pen" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" />의 색을 나타내는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>지정된 <see cref="T:System.Drawing.Pen" /> 및 <see cref="T:System.Drawing.Color" />속성을 사용하여 <see cref="P:System.Drawing.Pen.Width" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" />의 색을 나타내는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</param>
      <param name="width">
        <see cref="T:System.Drawing.Pen" />의 너비를 나타내는 값입니다.</param>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>
        <see cref="T:System.Drawing.Pen" />의 맞춤을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.PenAlignment" />의 맞춤을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">지정된 값이 <see cref="T:System.Drawing.Drawing2D.PenAlignment" />의 멤버가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Alignment" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" />의 특성을 결정하는 <see cref="T:System.Drawing.Pen" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" />의 특성을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Brush" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>이 <see cref="T:System.Drawing.Pen" />의 정확한 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />으로 캐스팅될 수 있는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>이 <see cref="T:System.Drawing.Pen" />의 색을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />의 색을 나타내는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Color" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>복합 펜을 지정하는 값 배열을 가져오거나 설정합니다. 복합 펜은 평행선과 공백으로 이루어진 복합 선을 그립니다.</summary>
      <returns>복합 배열을 지정하는 실수의 배열입니다. 배열의 요소는 0보다 작지 않고 1보다 크지 않아야 하며 오름차순이어야 합니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CompoundArray" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 끝에 사용할 사용자 지정 캡을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />을 사용하여 그리는 선의 끝에 사용되는 캡을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CustomEndCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 시작 부분에 사용할 사용자 지정 캡을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />을 사용하여 그리는 선의 시작 부분에 사용되는 캡을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CustomStartCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 파선을 구성하는 대시의 끝에 사용되는 캡 스타일을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.DashCap" />을 사용하여 그리는 파선을 구성하는 대시의 시작과 끝에 사용되는 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">지정된 값이 <see cref="T:System.Drawing.Drawing2D.DashCap" />의 멤버가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>선의 시작에서 대시 패턴의 시작까지의 거리를 가져오거나 설정합니다.</summary>
      <returns>선의 시작에서 대시 패턴의 시작까지의 거리입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashOffset" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>사용자 정의 대시와 공백의 배열을 가져오거나 설정합니다.</summary>
      <returns>파선의 반복 대시와 공백의 길이를 지정하는 실수의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashPattern" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 파선에 사용될 스타일을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.DashStyle" />을 사용하여 그리는 파선에 사용되는 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashStyle" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>이 <see cref="T:System.Drawing.Pen" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 끝에 사용되는 캡 스타일을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 끝에 사용되는 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">지정된 값이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 멤버가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.EndCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="M:System.Drawing.Pen.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 개체를 사용하여 그리는 두 개의 연속선 끝에 사용되는 결합 스타일을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 개체를 사용하여 그리는 두 개의 연속선에 사용되는 결합 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.LineJoin" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>모퉁이 마이터의 연결 부분 두께의 한계를 가져오거나 설정합니다.</summary>
      <returns>모퉁이 마이터의 연결 부분 두께의 한계입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.MiterLimit" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <see cref="T:System.Drawing.Pen" />에 대한 변환 매트릭스와 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 곱합니다.</summary>
      <param name="matrix">변환 매트릭스를 곱하는 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <see cref="T:System.Drawing.Pen" />에 대한 변환 매트릭스와 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 지정된 순서로 곱합니다.</summary>
      <param name="matrix">변환 매트릭스를 곱하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <param name="order">곱셈 연산을 수행하는 순서입니다.</param>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 스타일을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.PenType" />을 사용하여 그리는 파선의 스타일을 지정하는 <see cref="T:System.Drawing.Pen" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>이 <see cref="T:System.Drawing.Pen" />에 대한 기하학적 변환 매트릭스를 항등으로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>로컬 기하학적 변환을 지정된 각도만큼 회전합니다. 이 메서드는 회전을 변형 앞에 추가합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>로컬 기하학적 변환을 지정된 각도만큼 지정된 순서로 회전합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
      <param name="order">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>로컬 기하학적 변환을 지정된 인수만큼 크기를 조정합니다. 이 메서드는 변환에 크기 조정 매트릭스를 추가합니다.</summary>
      <param name="sx">변환의 크기를 X 방향으로 조정하는 인수입니다.</param>
      <param name="sy">변환의 크기를 Y 방향으로 조정하는 인수입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>로컬 기하학적 변환을 지정된 인수만큼 지정된 순서로 크기를 조정합니다.</summary>
      <param name="sx">변환의 크기를 X 방향으로 조정하는 인수입니다.</param>
      <param name="sy">변환의 크기를 Y 방향으로 조정하는 인수입니다.</param>
      <param name="order">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 개체로 그리는 선을 끝내는 데 사용하는 캡 스타일을 결정하는 값을 설정합니다.</summary>
      <param name="startCap">
        <see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 시작 부분에 사용할 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="endCap">
        <see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 끝에 사용할 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <param name="dashCap">
        <see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 파선의 시작과 끝에 사용할 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>
        <see cref="T:System.Drawing.Pen" />을 사용하여 그리는 선의 시작 부분에 사용되는 캡 스타일을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineCap" />을 사용하여 그리는 선의 시작 부분에 사용되는 캡 스타일을 나타내는 <see cref="T:System.Drawing.Pen" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">지정된 값이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 멤버가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.StartCap" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>이 <see cref="T:System.Drawing.Pen" />에 대한 기하학적 변환의 복사본을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 대한 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Pen" />의 복사본입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Transform" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>로컬 기하학적 변환을 지정된 크기만큼 변환합니다. 이 메서드는 이동을 변형 앞에 추가합니다.</summary>
      <param name="dx">X축으로의 이동 값입니다.</param>
      <param name="dy">Y축으로의 이동 값입니다.</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>로컬 기하학적 변환을 지정된 크기만큼 지정된 순서로 변환합니다.</summary>
      <param name="dx">X축으로의 이동 값입니다.</param>
      <param name="dy">Y축으로의 이동 값입니다.</param>
      <param name="order">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</param>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>그리는 데 사용된 <see cref="T:System.Drawing.Pen" /> 개체의 단위로 이 <see cref="T:System.Drawing.Graphics" />의 너비를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />의 너비입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Width" /> 클래스에서 반환된 것과 같은 변경 불가능한 <see cref="T:System.Drawing.Pen" />에 <see cref="T:System.Drawing.Pens" /> 속성을 설정한 경우</exception>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>모든 표준 색에 사용되는 펜입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>너비가 1인 시스템에 정의된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</summary>
      <returns>시스템에 정의된 색에 설정된 <see cref="T:System.Drawing.Pen" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>프린터의 양면 인쇄 설정을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>프린터의 기본 양면 인쇄 설정입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>양면 가로 인쇄입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>한면 인쇄입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>양면 세로 인쇄입니다.</summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>잘못된 프린터 설정을 사용하여 프린터에 액세스하려고 할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
        <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="settings">프린터 설정을 지정하는 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">클래스 이름이 <see langword="null" />이거나 <see cref="P:System.Exception.HResult" />가 0인 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>재정의됩니다. 예외에 대한 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 설정합니다.</summary>
      <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>인쇄 페이지의 여백 크기를 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>1인치의 여백을 사용하여 <see cref="T:System.Drawing.Printing.Margins" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 왼쪽, 오른쪽, 위쪽 및 아래쪽 여백을 사용하여 <see cref="T:System.Drawing.Printing.Margins" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="left">왼쪽 여백(1/100인치)입니다.</param>
      <param name="right">오른쪽 여백(1/100인치)입니다.</param>
      <param name="top">위쪽 여백(1/100인치)입니다.</param>
      <param name="bottom">아래쪽 여백(1/100인치)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> 매개 변수 값이 0 미만인 경우
또는
<paramref name="right" /> 매개 변수 값이 0 미만인 경우
또는
<paramref name="top" /> 매개 변수 값이 0 미만인 경우
또는
<paramref name="bottom" /> 매개 변수 값이 0 미만인 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>아래쪽 여백(1/100인치)을 가져오거나 설정합니다.</summary>
      <returns>아래쪽 여백(1/100인치)입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 속성이 0보다 작은 값으로 설정된 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>이 개체의 복제본을 멤버별로 검색합니다.</summary>
      <returns>이 개체의 복제본입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>이 <see cref="T:System.Drawing.Printing.Margins" />를 지정된 <see cref="T:System.Object" />와 비교하여 크기가 같은지 여부를 확인합니다.</summary>
      <param name="obj">이 <see cref="T:System.Drawing.Printing.Margins" />와 비교할 개체입니다.</param>
      <returns>지정된 개체가 <see cref="T:System.Drawing.Printing.Margins" />이고 이 <see cref="P:System.Drawing.Printing.Margins.Top" />와 <see cref="P:System.Drawing.Printing.Margins.Bottom" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Left" /> 및 <see cref="T:System.Drawing.Printing.Margins" /> 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>왼쪽, 오른쪽, 위쪽 및 아래쪽 여백의 너비를 기준으로 해시 코드를 계신하고 검색합니다.</summary>
      <returns>왼쪽, 오른쪽, 위쪽 및 아래쪽 여백의 너비를 기준으로 하는 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>왼쪽 여백 너비(1/100인치)를 가져오거나 설정합니다.</summary>
      <returns>왼쪽 여백 너비(1/100인치)입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Left" /> 속성이 0보다 작은 값으로 설정된 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>두 <see cref="T:System.Drawing.Printing.Margins" />를 비교하여 크기가 같은지 여부를 확인합니다.</summary>
      <param name="m1">같은지 비교할 첫 번째 <see cref="T:System.Drawing.Printing.Margins" />입니다.</param>
      <param name="m2">같은지 비교할 두 번째 <see cref="T:System.Drawing.Printing.Margins" />입니다.</param>
      <returns>두 여백의 <see cref="P:System.Drawing.Printing.Margins.Left" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Top" /> 및 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 속성 값이 같음을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>두 <see cref="T:System.Drawing.Printing.Margins" />를 비교하여 너비가 같지 않은지 여부를 확인합니다.</summary>
      <param name="m1">같지 않은지 비교할 첫 번째 <see cref="T:System.Drawing.Printing.Margins" />입니다.</param>
      <param name="m2">같지 않은지 비교할 두 번째 <see cref="T:System.Drawing.Printing.Margins" />입니다.</param>
      <returns>두 여백의 <see cref="P:System.Drawing.Printing.Margins.Left" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Top" /> 또는 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 속성이 같지 않음을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>오른쪽 여백 너비(1/100인치)를 가져오거나 설정합니다.</summary>
      <returns>오른쪽 여백 너비(1/100인치)입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Right" /> 속성이 0보다 작은 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>위쪽 여백 너비(1/100인치)를 가져오거나 설정합니다.</summary>
      <returns>위쪽 여백 너비(1/100인치)입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Top" /> 속성이 0보다 작은 값으로 설정된 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.Margins" />를 문자열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.String" />의 <see cref="T:System.Drawing.Printing.Margins" /> 표현입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>한면 인쇄 페이지에 적용할 설정을 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>기본 프린터를 사용하여 <see cref="T:System.Drawing.Printing.PageSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>지정된 프린터를 사용하여 <see cref="T:System.Drawing.Printing.PageSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="printerSettings">사용할 프린터를 설명하는 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 클래스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>
        <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> 속성으로 지정한 페이지 방향을 고려하여 페이지의 크기를 가져옵니다.</summary>
      <returns>페이지의 길이와 너비(1/100인치)를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>이 <see cref="T:System.Drawing.Printing.PageSettings" />의 복사본을 만듭니다.</summary>
      <returns>이 개체의 복사본입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>페이지를 컬러로 인쇄할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>페이지를 컬러로 인쇄해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. 기본값은 프린터에 따라 다릅니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Printing.PageSettings" />에서 지정된 <see langword="DEVMODE" /> 구조체로 관련 정보를 복사합니다.</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>페이지 왼쪽에 있는 하드 여백의 X 좌표(1/100인치)를 가져옵니다.</summary>
      <returns>왼쪽 하드 여백의 X 좌표(1/100인치)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>페이지 위쪽에 있는 하드 여백의 Y 좌표(1/100인치)를 가져옵니다.</summary>
      <returns>페이지 위쪽에 있는 하드 여백의 Y 좌표(1/100인치)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>페이지를 가로 또는 세로 방향으로 인쇄할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>페이지를 가로 방향으로 인쇄해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. 기본값은 프린터에 따라 다릅니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>이 페이지에 대한 여백을 가져오거나 설정합니다.</summary>
      <returns>페이지의 여백(1/100인치)을 나타내는 <see cref="T:System.Drawing.Printing.Margins" />입니다. 여백 기본값은 네 곳 모두 1인치입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>페이지에 대한 용지 크기를 가져오거나 설정합니다.</summary>
      <returns>용지 크기를 나타내는 <see cref="T:System.Drawing.Printing.PaperSize" />입니다. 기본값은 프린터의 기본 용지 크기입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>페이지의 용지 공급을 가져오거나 설정합니다(예: 프린터의 상단 용지함).</summary>
      <returns>용지 공급을 지정하는 <see cref="T:System.Drawing.Printing.PaperSource" />입니다. 기본값은 프린터의 기본 용지 공급입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>프린터에서 인쇄할 수 있는 페이지 영역의 경계를 가져옵니다.</summary>
      <returns>프린터에서 인쇄할 수 있는 영역의 길이와 너비(1/100인치)를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>페이지에 대한 프린터 해상도를 가져오거나 설정합니다.</summary>
      <returns>페이지의 프린터 해상도를 지정하는 <see cref="T:System.Drawing.Printing.PrinterResolution" />입니다. 기본값은 프린터의 기본 해상도입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>해당 페이지와 관련된 프린터 설정을 가져오거나 설정합니다.</summary>
      <returns>해당 페이지와 관련된 프린터 설정을 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>지정된 <see langword="DEVMODE" /> 구조체에서 <see cref="T:System.Drawing.Printing.PageSettings" />로 관련 정보를 복사합니다.</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</param>
      <exception cref="T:System.ArgumentException">프린터 핸들이 잘못된 경우</exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PageSettings" />를 문자열 형식으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PageSettings" />의 다양한 속성 설정을 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>표준 용지 크기를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>A2 용지(420mm x 594mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>A3 용지(297mm x 420mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>A3 대형 용지(322mm x 445mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>A3 큰 가로 용지(322mm x 445mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>A3 회전 용지(420mm x 297mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>A3 가로 용지(297mm x 420mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>A4 용지(210mm x 297mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>A4 대형 용지(236mm x 322mm). 이 값은 PostScript 드라이버에 국한되며 용지를 절약하기 위해 Linotronic 프린터에만 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>A4 플러스 용지(210mm x 330mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>A4 회전 용지(297mm x 210mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>A4 작은 용지(210mm x 297mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>A4 가로 용지(210mm x 297mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>A5 용지(148mm x 210mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>A5 대형 용지(174mm x 235mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>A5 회전 용지(210mm x 148mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>A5 가로 용지(148mm x 210mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>A6 용지(105mm x 148mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>A6 회전 용지(148mm x 105mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>SuperA/SuperA/A4 용지(227mm x 356mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>B4 용지(250mm x 353mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>B4 봉투(250mm x 353mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>JIS B4 회전 용지(364mm x 257mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>B5 용지(176mm x 250mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>B5 봉투(176mm x 250mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>ISO B5 대형 용지(201mm x 276mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>JIS B5 회전 용지(257mm x 182mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>JIS B5 가로 용지(182mm x 257mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>B6 봉투(176mm x 125mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>JIS B6 용지(128mm x 182mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>JIS B6 회전 용지(182mm x 128mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>SuperB/SuperB/A3 용지(305mm x 487mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>C3 봉투(324mm x 458mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>C4 봉투(229mm x 324mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>C5 봉투(162mm x 229mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>C65 봉투(114mm x 229mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>C6 봉투(114mm x 162mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>C 용지(17인치 x 22인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>용지 크기는 사용자가 정의합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>DL 봉투(110mm x 220mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>D 용지(22인치 x 34인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>E 용지(34인치 x 44인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>Executive 용지(7.25인치 x 10.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>Folio 용지(8.5인치 x 13인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>German Legal Fanfold(8.5인치 x 13인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>German Standard Fanfold(8.5인치 x 12인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>초대 봉투(220mm x 220mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>ISO B4(250mm x 353mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>이탈리아 봉투(110mm x 230mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>일본 이중 엽서(200mm x 148mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>일본 회전 이중 엽서(148mm x 200mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>일본 Chou #3 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>Japanese 회전 Chou #3 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>일본 Chou #4 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>일본 회전 Chou #4 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>일본 Kaku #2 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>일본 회전 Kaku #2 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>일본 Kaku #3 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>일본 회전 Kaku #3 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>일본 You #4 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>일본 You #4 회전 봉투. Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>일본 엽서(100mm x 148mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>Japanese 회전 용지(148mm x 100mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>Ledger 용지(17인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>Ledger 용지(8.5인치 x 14인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>Legal 대형 용지(9.275인치 x 15인치). 이 값은 PostScript 드라이버에 국한되며 용지를 절약하기 위해 Linotronic 프린터에만 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>Letter 용지(8.5인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>Letter 대형 용지(9.275인치 x 12인치). 이 값은 PostScript 드라이버에 국한되며 용지를 절약하기 위해 Linotronic 프린터에만 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>Letter 대형 가로 용지(9.275인치 x 12인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>Letter 플러스 용지(8.5인치 x 12.69인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>Letter 회전 용지(11인치 x 8.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>Letter 작은 용지(8.5인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>Letter 가로 용지(8.275인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>모나크 봉투(3.875인치 x 7.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>편지지(8.5인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>#10 봉투(4.125인치 x 9.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>#11 봉투(4.5인치 x 10.375인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>#12 봉투(4.75인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>#14 봉투(5인치 x 11.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>#9 봉투(3.875인치 x 8.875인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>6 3/4 봉투(3.625인치 6.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>16K 용지(146mm x 215mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>16K 회전 용지(146mm x 215mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>32K 용지(97mm x 151mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>32K 큰 용지(97mm x 151mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>32K 큰 회전 용지(97mm x 151mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>32K 회전 용지(97mm x 151mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>#1 봉투(102mm x 165mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>#10 봉투(324mm x 458mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>#10 회전 봉투(458mm x 324mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>#1 회전 봉투(165mm x 102mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>#2 봉투(102mm x 176mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>#2 회전 봉투(176mm x 102mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>#3 봉투(125mm x 176mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>#3 회전 봉투(176mm x 125mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>#4 봉투(110mm x 208mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>#4 회전 봉투(208mm x 110mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>#5 봉투(110mm x 220mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>봉투 #5 회전 봉투(220mm x 110mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>#6 봉투(120mm x 230mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>#6 회전 봉투(230mm x 120mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>#7 봉투(160mm x 230mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>#7 회전 봉투(230mm x 160mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>#8 봉투(120mm x 309mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>#8 회전 봉투(309mm x 120mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>#9 봉투(229mm x 324mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>#9 회전 봉투(324mm x 229mm). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>Quarto 용지(215mm x 275mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>표준 용지(10인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>표준 용지(10인치 x 14인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>표준 용지(11인치 x 17인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>표준 용지(12인치 x 11인치). Windows 98, Windows NT 4.0 이상 필요합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>표준 용지(15인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>표준 용지(9인치 x 11인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>Statement 용지(5.5인치 x 8.5인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>Tabloid 용지(11인치 x 17인치).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>Tabloid 대형 용지(11.69인치 x 18인치). 이 값은 PostScript 드라이버에 국한되며 용지를 절약하기 위해 Linotronic 프린터에만 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>미국 표준 Fanfold(14.875인치 x 11인치).</summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>용지 크기를 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">용지 이름입니다.</param>
      <param name="width">용지 너비(1/100인치)입니다.</param>
      <param name="height">용지 높이(1/100인치)입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>용지 높이(1/100인치)를 가져오거나 설정합니다.</summary>
      <returns>용지 높이(1/100인치)입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 속성이 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>용지 종류를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperKind" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 속성이 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>용지 종류의 이름을 가져오거나 설정합니다.</summary>
      <returns>용지 종류의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 속성이 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 값 중 하나나 사용자 지정 값을 나타내는 정수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 값 중 하나나 사용자 지정 값을 나타내는 정수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" />에 대한 정보를 문자열 형식으로 제공합니다.</summary>
      <returns>문자열</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>용지 너비(1/100인치)를 가져오거나 설정합니다.</summary>
      <returns>용지 너비(1/100인치)입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 속성이 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>프린터에 용지를 공급할 용지함을 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>용지 공급을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 값 중 하나나 사용자 지정 값을 나타내는 정수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 값 중 하나나 사용자 지정 값을 나타내는 정수 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>용지 공급의 이름을 가져오거나 설정합니다.</summary>
      <returns>용지 공급의 이름입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSource" />에 대한 정보를 문자열 형식으로 제공합니다.</summary>
      <returns>문자열</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>표준 용지 공급입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>용지가 자동으로 공급됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>용지 카세트입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>프린터 지정 용지 공급입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>봉투입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>프린터의 기본 입력 저장소입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>프린터의 대용량 저장소입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>대형 서식 용지입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>프린터의 하단 저장소입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>용지가 수동으로 공급됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>봉투가 수동으로 공급됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>프린터의 중간 저장소입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>소형 서식 용지입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>트랙터 공급입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>프린터의 상단 저장소입니다(또는 프린터에 저장소가 하나만 있는 경우에는 기본 저장소).</summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>단일 페이지의 인쇄 미리 보기 정보를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="image">인쇄된 페이지의 이미지입니다.</param>
      <param name="physicalSize">인쇄된 페이지의 크기(1/100인치)입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>인쇄된 페이지의 이미지를 가져옵니다.</summary>
      <returns>인쇄된 페이지를 나타내는 <see cref="T:System.Drawing.Image" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>인쇄된 페이지의 크기(1/100인치)를 가져옵니다.</summary>
      <returns>인쇄된 페이지의 크기(1/100인치)를 지정하는 <see cref="T:System.Drawing.Size" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>화면에 문서를 일련의 이미지로 표시하는 인쇄 컨트롤러를 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PreviewPrintController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>문서 페이지를 일련의 이미지로 캡처합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PreviewPageInfo" />의 페이지를 일련의 이미지로 포함하는 <see cref="T:System.Drawing.Printing.PrintDocument" /> 형식의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>이 컨트롤러가 인쇄 미리 보기에 사용되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>모든 경우에 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>인쇄 문서 페이지를 미리 보는 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
      <param name="document">미리 보기 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">인쇄 문서 페이지를 미리 보는 방법에 대한 데이터가 들어 있는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>인쇄 문서를 미리 보는 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
      <param name="document">미리 보기 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">인쇄 문서를 미리 보는 방법에 대한 데이터가 들어 있는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>인쇄 문서 페이지를 미리 보는 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
      <param name="document">미리 보기 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">인쇄 문서 페이지를 미리 보는 방법에 대한 데이터가 들어 있는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다. 처음에는 이 매개 변수의 <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 속성은 <see langword="null" />입니다. 이 메서드에서 반환된 값은 이 속성을 설정하는 데 사용됩니다.</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />의 페이지를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>인쇄 문서를 미리 보는 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
      <param name="document">미리 보기 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">문서 인쇄 방법에 대한 데이터가 들어 있는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>인쇄 미리 보기를 표시할 때 앤티 앨리어스를 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인쇄 미리 보기에서 앤티 앨리어스를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>수행되는 인쇄 작업의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>인쇄 작업에서 파일에 인쇄하고 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>인쇄 작업이 인쇄 미리 보기입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>인쇄 작업에서 프린터에 인쇄하고 있습니다.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>Windows Forms 애플리케이션에서 인쇄하는 문서의 인쇄 방식을 제어합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintController" />가 인쇄 미리 보기에 사용되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>파생된 클래스에서 재정의하는 경우 문서 페이지의 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
      <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>파생된 클래스에서 재정의하는 경우 문서 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
      <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>파생된 클래스에서 재정의하는 경우 문서 페이지의 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
      <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />의 페이지를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>파생된 클래스에서 재정의하는 경우 문서 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
      <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>Windows Forms 애플리케이션에서 인쇄할 때 프린터로 출력을 보내는 재사용 가능한 개체를 정의합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>
        <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 메서드가 호출될 때 문서의 첫 페이지가 인쇄되기 전에 발생합니다.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>인쇄할 모든 페이지에 대해 기본값으로 사용되는 페이지 설정을 가져오거나 설정합니다.</summary>
      <returns>문서의 기본 페이지 설정을 지정하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>문서를 인쇄하는 동안 표시(예: [인쇄 상태] 대화상자 또는 프린터 큐에 표시)할 문서 이름을 가져오거나 설정합니다.</summary>
      <returns>문서 인쇄 중에 표시할 문서 이름입니다. 기본값은 "문서"입니다.</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>문서의 마지막 페이지가 인쇄되면 발생합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 이벤트를 발생시킵니다. <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 메서드가 호출된 후, 문서의 첫 페이지가 인쇄되기 전에 호출됩니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 이벤트를 발생시킵니다. 문서의 마지막 페이지가 인쇄되면 호출됩니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트를 발생시킵니다. 페이지가 인쇄되기 전에 호출됩니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 이벤트를 발생시킵니다. 각 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트 직전에 호출됩니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>페이지와 관련된 그래픽 개체의 위치가 사용자가 지정한 여백 내에 있는지 아니면 페이지 인쇄 가능 영역의 왼쪽 위 구석에 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>그래픽 원점이 페이지 여백에서 시작하면 <see langword="true" />이고, 그래픽 원점이 인쇄 가능 페이지의 왼쪽 위 구석에 있으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>문서의 인쇄를 시작합니다.</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>인쇄를 하도록 도와줄 인쇄 컨트롤러를 가져오거나 설정합니다.</summary>
      <returns>인쇄를 하도록 도와줄 <see cref="T:System.Drawing.Printing.PrintController" />입니다. 기본값은 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>문서를 인쇄할 프린터를 가져오거나 설정합니다.</summary>
      <returns>문서 인쇄 위치 및 방법을 지정하는 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다. 기본값은 해당 속성이 기본값으로 설정된 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다.</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>현재 페이지에 대해 인쇄할 출력이 필요할 때 발생합니다.</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>각 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트 바로 전에 발생합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>인쇄 문서에 대한 정보를 문자열 형식으로 제공합니다.</summary>
      <returns>문자열</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>프린터에서 지원하는 해상도를 나타냅니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>프린터 해상도를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 열거형의 멤버가 아닌 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>이 메서드는 <see cref="M:System.Object.ToString" /> 메서드를 재정의합니다.</summary>
      <returns>
        <see cref="T:System.String" />에 대한 정보가 포함된 <see cref="T:System.Drawing.Printing.PrinterResolution" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>가로 프린터 해상도(dpi)를 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" />가 <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" />으로 설정되어 있으면 가로 프린터 해상도(dpi)를 반환하고, 그렇지 않으면 <see langword="dmPrintQuality" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>세로 프린터 해상도(dpi)를 가져옵니다.</summary>
      <returns>세로 프린터 해상도(dpi)입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>프린터 해상도를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>사용자 지정 해상도입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>간단하게 인쇄 해상도입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>고품질 해상도입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>저품질 해상도입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>보통 해상도입니다.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>Windows Forms 애플리케이션에서 인쇄할 때 인쇄할 프린터 등 문서 인쇄 방법에 대한 정보를 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>프린터에서 양면 인쇄를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>프린터에서 양면 인쇄를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>이 <see cref="T:System.Drawing.Printing.PrinterSettings" />의 복사본을 만듭니다.</summary>
      <returns>이 개체의 복사본입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>문서가 한 부씩 인쇄되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>문서가 한 부씩 인쇄되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>인쇄할 문서의 매수를 가져오거나 설정합니다.</summary>
      <returns>인쇄할 복사본의 수입니다. 기본값은 1입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> 속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>
        <see cref="T:System.Drawing.Graphics" />를 만들 때 유용한 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PrintDocument" />를 반환합니다.</summary>
      <returns>프린터의 정보를 포함하는 <see cref="T:System.Drawing.Graphics" />입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>여백의 원점을 선택적으로 지정하여 프린터 정보를 포함하는 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</summary>
      <param name="honorOriginAtMargins">여백의 원점을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />의 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>지정된 <see cref="T:System.Drawing.Graphics" />와 연결된 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />를 반환합니다.</summary>
      <param name="pageSettings">그래픽 개체를 검색할 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />의 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>지정된 페이지 설정과 연결된 <see cref="T:System.Drawing.Graphics" />를 만들고 여백의 원점을 선택적으로 지정합니다.</summary>
      <param name="pageSettings">
        <see cref="T:System.Drawing.Printing.PageSettings" /> 개체를 검색할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <param name="honorOriginAtMargins">여백의 원점을 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />의 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>이 프린터의 기본 페이지 설정을 가져옵니다.</summary>
      <returns>이 프린터의 기본 페이지 설정을 나타내는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>양면 인쇄에 대한 프린터 설정을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.Duplex" /> 값 중 하나입니다. 기본값은 프린터에 따라 다릅니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> 속성 값이 <see cref="T:System.Drawing.Printing.Duplex" /> 값이 아닌 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>인쇄할 첫 페이지의 페이지 번호를 가져오거나 설정합니다.</summary>
      <returns>인쇄할 첫 페이지의 페이지 번호입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>프린터 설정에 해당하는 <see langword="DEVMODE" /> 구조체에 대한 핸들을 만듭니다.</summary>
      <returns>
        <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">프린터의 초기화 정보를 검색할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>
        <paramref name="pageSettings" /> 매개 변수를 통해 지정된 프린터 및 페이지 설정에 해당하는 <see langword="DEVMODE" /> 구조체에 대한 핸들을 만듭니다.</summary>
      <param name="pageSettings">
        <see langword="DEVMODE" /> 구조체의 핸들에 해당하는 <see cref="T:System.Drawing.Printing.PageSettings" /> 개체입니다.</param>
      <returns>
        <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">프린터의 초기화 정보를 검색할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>프린터 설정에 해당하는 <see langword="DEVNAMES" /> 구조체에 대한 핸들을 만듭니다.</summary>
      <returns>
        <see langword="DEVNAMES" /> 구조체에 대한 핸들입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>컴퓨터에 설치된 모든 프린터의 이름을 가져옵니다.</summary>
      <returns>컴퓨터에 설치된 모든 프린터의 이름을 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">사용할 수 있는 프린터를 열거할 수 없는 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>사용자가 명시적으로 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />을 설정할 때를 제외하고 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성이 기본 프린터를 지정하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />이 기본 프린터를 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>프린터에서 지정된 이미지 파일 인쇄를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="image">인쇄할 이미지입니다.</param>
      <returns>프린터에서 지정된 이미지 인쇄를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>프린터에서 지정된 이미지 형식 인쇄를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="imageFormat">인쇄할 <see cref="T:System.Drawing.Imaging.ImageFormat" />입니다.</param>
      <returns>프린터에서 지정된 이미지 형식 인쇄를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>프린터가 플로터인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>프린터가 플로터이면 <see langword="true" />이고 프린터가 래스터이면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성이 올바른 프린터를 지정할지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성이 올바른 프린터를 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>세로 방향이 가로 방향으로 회전되는 각도를 가져옵니다.</summary>
      <returns>세로 방향이 가로 방향으로 회전되는 각도입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>프린터에서 한 번에 인쇄할 수 있는 최대 매수를 가져옵니다.</summary>
      <returns>프린터에서 한 번에 인쇄할 수 있는 최대 매수입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최대 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최대 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> 속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최소 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최소 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> 속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PaperSize" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" />을 컬렉션 끝에 추가합니다.</summary>
      <param name="paperSize">컬렉션에 추가할 <see cref="T:System.Drawing.Printing.PaperSize" />입니다.</param>
      <returns>새로 추가한 항목의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 현재 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />의 내용을 지정된 배열에 복사합니다.</summary>
      <param name="paperSizes">
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />에서 복사한 항목을 받는 배열(0부터 시작)입니다.</param>
      <param name="index">항목 복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>컬렉션에 있는 다른 용지 크기의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 다른 용지 크기의 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>지정된 인덱스에 해당하는 <see cref="T:System.Drawing.Printing.PaperSize" />을 가져옵니다.</summary>
      <param name="index">가져올 <see cref="T:System.Drawing.Printing.PaperSize" />의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Drawing.Printing.PaperSize" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하세요.</summary>
      <param name="array">컬렉션에서 복사한 항목을 받는 배열(0부터 시작)입니다.</param>
      <param name="index">항목 복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.Count" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하십시오.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
      <returns>컬렉션과 연결된 열거자입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>이 프린터에서 지원하는 용지 크기를 가져옵니다.</summary>
      <returns>이 프린터에서 지원하는 용지 크기를 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSource" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PaperSource" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>지정된 <see cref="T:System.Drawing.Printing.PaperSource" />를 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />의 끝에 추가합니다.</summary>
      <param name="paperSource">컬렉션에 추가할 <see cref="T:System.Drawing.Printing.PaperSource" />입니다.</param>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSource" />가 추가된 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 현재 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />의 내용을 지정된 배열에 복사합니다.</summary>
      <param name="paperSources">
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />에서 복사한 항목을 받는 배열(0부터 시작)입니다.</param>
      <param name="index">항목 복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>컬렉션에 있는 다른 용지 공급의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 다른 용지 공급의 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>지정된 인덱스에 해당하는 <see cref="T:System.Drawing.Printing.PaperSource" />을 가져옵니다.</summary>
      <param name="index">가져올 <see cref="T:System.Drawing.Printing.PaperSource" />의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Drawing.Printing.PaperSource" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하세요.</summary>
      <param name="array">컬렉션의 내용에 대한 대상 배열입니다.</param>
      <param name="index">복사 작업을 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.Count" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>프린터에서 사용할 수 있는 용지 공급함을 가져옵니다.</summary>
      <returns>이 프린터에서 사용할 수 있는 용지 공급함을 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>사용할 프린터 이름을 가져오거나 설정합니다.</summary>
      <returns>사용할 프린터 이름입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" />을 컬렉션 끝에 추가합니다.</summary>
      <param name="printerResolution">컬렉션에 추가할 <see cref="T:System.Drawing.Printing.PrinterResolution" />입니다.</param>
      <returns>새로 추가한 항목의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 현재 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />의 내용을 지정된 배열에 복사합니다.</summary>
      <param name="printerResolutions">
        <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />에서 복사한 항목을 받는 배열(0부터 시작)입니다.</param>
      <param name="index">항목 복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>컬렉션에서 사용할 수 있는 프린터 해상도의 수를 가져옵니다.</summary>
      <returns>컬렉션에서 사용할 수 있는 프린터 해상도의 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>지정된 인덱스에 해당하는 <see cref="T:System.Drawing.Printing.PrinterResolution" />을 가져옵니다.</summary>
      <param name="index">가져올 <see cref="T:System.Drawing.Printing.PrinterResolution" />의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Drawing.Printing.PrinterResolution" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하십시오.</summary>
      <param name="array">대상 배열입니다.</param>
      <param name="index">복사 작업을 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.Count" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하십시오.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>이 프린터에서 지원하는 모든 해상도를 가져옵니다.</summary>
      <returns>이 프린터에서 지원하는 해상도를 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>파일로 인쇄하는 경우 파일 이름을 가져오거나 설정합니다.</summary>
      <returns>파일로 인쇄하는 경우의 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>인쇄되도록 지정한 페이지 번호를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintRange" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> 속성 값이 <see cref="T:System.Drawing.Printing.PrintRange" /> 값이 아닌 경우</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>인쇄 출력이 포트 대신 파일에 전달되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인쇄 출력을 파일로 보내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>지정된 핸들에 있는 관련 정보를 <see cref="T:System.Drawing.Printing.PrinterSettings" />에 복사합니다.</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</param>
      <exception cref="T:System.ArgumentException">프린터 핸들이 잘못된 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>지정된 핸들에 있는 관련 정보를 <see cref="T:System.Drawing.Printing.PrinterSettings" />에 복사합니다.</summary>
      <param name="hdevnames">Win32 <see langword="DEVNAMES" /> 구조체에 대한 핸들입니다.</param>
      <exception cref="T:System.ArgumentException">프린터 핸들이 잘못된 경우</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>
        <see cref="T:System.String" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="array">
        <see cref="T:System.String" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>컬렉션의 끝에 문자열을 추가합니다.</summary>
      <param name="value">컬렉션에 추가할 문자열입니다.</param>
      <returns>새로 추가한 항목의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 현재 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />의 내용을 지정된 배열에 복사합니다.</summary>
      <param name="strings">
        <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />에서 복사한 항목을 받는 배열(0부터 시작)입니다.</param>
      <param name="index">항목 복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>컬렉션의 문자열 수를 가져옵니다.</summary>
      <returns>컬렉션의 문자열 수입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>컬렉션을 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>지정된 인덱스에 해당하는 <see cref="T:System.String" />을 가져옵니다.</summary>
      <param name="index">가져올 <see cref="T:System.String" />의 인덱스입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하세요.</summary>
      <param name="array">복사할 대상 항목의 배열입니다.</param>
      <param name="index">시작 인덱스입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.Count" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>이 프린터에서 컬러 인쇄를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 프린터에서 컬러를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>인쇄할 마지막 페이지 번호를 가져오거나 설정합니다.</summary>
      <returns>인쇄할 마지막 페이지의 번호입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 속성 값이 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings" />에 대한 정보를 문자열 형식으로 제공합니다.</summary>
      <returns>문자열</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>인쇄에 사용하는 여러 측정 단위를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>기본 단위(0.01in.)입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>100분의 1밀리미터(0.01mm)입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>10분의 1밀리미터(0.1mm)입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>1000분의 1인치(0.001in.)입니다.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>Win32 인쇄 API와 상호 운용할 경우에 사용할 수 있는 일련의 변환 방법을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>배정밀도 부동 소수점 숫자를 한 형식 <see cref="T:System.Drawing.Printing.PrinterUnit" />에서 다른 형식 <see cref="T:System.Drawing.Printing.PrinterUnit" />로 변환합니다.</summary>
      <param name="value">변환 중인 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="fromUnit">변환할 원본 단위입니다.</param>
      <param name="toUnit">변환의 대상 단위입니다.</param>
      <returns>변환된 <see cref="T:System.Drawing.Printing.PrinterUnit" />을 나타내는 배정밀도 부동 소수점 숫자입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>한 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식에서 다른 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식으로 <see cref="T:System.Drawing.Point" />를 변환합니다.</summary>
      <param name="value">변환 중인 <see cref="T:System.Drawing.Point" />입니다.</param>
      <param name="fromUnit">변환할 원본 단위입니다.</param>
      <param name="toUnit">변환의 대상 단위입니다.</param>
      <returns>변환된 <see cref="T:System.Drawing.Printing.PrinterUnit" />을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>한 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식에서 다른 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식으로 <see cref="T:System.Drawing.Printing.Margins" />를 변환합니다.</summary>
      <param name="value">변환 중인 <see cref="T:System.Drawing.Printing.Margins" />입니다.</param>
      <param name="fromUnit">변환할 원본 단위입니다.</param>
      <param name="toUnit">변환의 대상 단위입니다.</param>
      <returns>변환된 <see cref="T:System.Drawing.Printing.PrinterUnit" />을 나타내는 <see cref="T:System.Drawing.Printing.Margins" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>한 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식에서 다른 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식으로 <see cref="T:System.Drawing.Rectangle" />를 변환합니다.</summary>
      <param name="value">변환 중인 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <param name="fromUnit">변환할 원본 단위입니다.</param>
      <param name="toUnit">변환의 대상 단위입니다.</param>
      <returns>변환된 <see cref="T:System.Drawing.Printing.PrinterUnit" />을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>한 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식에서 다른 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식으로 <see cref="T:System.Drawing.Size" />를 변환합니다.</summary>
      <param name="value">변환 중인 <see cref="T:System.Drawing.Size" />입니다.</param>
      <param name="fromUnit">변환할 원본 단위입니다.</param>
      <param name="toUnit">변환의 대상 단위입니다.</param>
      <returns>변환된 <see cref="T:System.Drawing.Printing.PrinterUnit" />을 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>부호 있는 32비트 정수를 하나의 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식에서 다른 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 형식으로 변환합니다.</summary>
      <param name="value">변환 중인 값입니다.</param>
      <param name="fromUnit">변환할 원본 단위입니다.</param>
      <param name="toUnit">변환의 대상 단위입니다.</param>
      <returns>변환된 <see cref="T:System.Drawing.Printing.PrinterUnit" />을 나타내는 32비트 부호 있는 정수입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 및 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>모든 경우에 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> 를 반환합니다.</summary>
      <returns>모든 경우에 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />의 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 또는 <see cref="T:System.Drawing.Printing.PrintDocument" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="graphics">항목을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <param name="marginBounds">여백 간 영역입니다.</param>
      <param name="pageBounds">용지의 전체 영역입니다.</param>
      <param name="pageSettings">해당 페이지에 대한 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>인쇄 작업을 취소해야 할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인쇄 작업을 취소해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>페이지를 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />를 가져옵니다.</summary>
      <returns>페이지를 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>추가 페이지를 인쇄해야 할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>추가 페이지를 인쇄해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>여백 내의 페이지 부분을 나타내는 사각형 영역을 가져옵니다.</summary>
      <returns>여백 내의 페이지 부분을 나타내는 사각형 영역(1/100인치)입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>페이지의 전체 영역을 나타내는 사각형 영역을 가져옵니다.</summary>
      <returns>페이지의 전체 영역을 나타내는 사각형 영역입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>현재 페이지에 대한 페이지 설정을 가져옵니다.</summary>
      <returns>현재 페이지에 대한 페이지 설정입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />의 <see cref="T:System.Drawing.Printing.PrintDocument" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>인쇄할 문서 부분을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>모든 페이지를 인쇄합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>현재 표시된 페이지가 인쇄됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>선택한 페이지를 인쇄합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />와 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 사이에 있는 페이지를 인쇄합니다.</summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>
        <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pageSettings">인쇄할 페이지에 대한 페이지 설정입니다.</param>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>인쇄할 페이지에 대한 페이지 설정을 가져오거나 설정합니다.</summary>
      <returns>인쇄할 페이지에 대한 페이지 설정입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintDocument" />의 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>프린터로 정보를 보내는 인쇄 컨트롤러를 지정합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.StandardPrintController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>문서 페이지를 인쇄할 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
      <param name="document">인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">문서 페이지 인쇄 방법에 대한 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">네이티브 Win32 API(애플리케이션 프로그래밍 인터페이스)에서 페이지 쓰기 작업을 마칠 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>문서를 인쇄할 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
      <param name="document">인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">문서 인쇄 방법에 대한 데이터가 들어 있는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">네이티브 Win32 API(애플리케이션 프로그래밍 인터페이스)에서 인쇄 작업을 마칠 수 없는 경우
또는
네이티브 Windows API에서 지정된 DC(디바이스 컨텍스트)를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>문서 페이지를 인쇄할 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
      <param name="document">인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">문서 페이지 인쇄 방법에 대한 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다. 처음에는 이 매개 변수의 <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 속성은 <see langword="null" />입니다. <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> 메서드에서 반환된 값은 이 속성을 설정하는 데 사용됩니다.</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />의 페이지를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" /> 개체입니다.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">네이티브 Win32 API(애플리케이션 프로그래밍 인터페이스)에서 프린터 드라이버가 데이터를 받아들일 준비가 되어 있지 않은 경우
또는
네이티브 Windows API에서 지정된 정보를 사용하여 지정 프린터 또는 플로터 DC(디바이스 컨텍스트)를 업데이트할 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>문서를 인쇄할 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
      <param name="document">인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
      <param name="e">문서 인쇄 방법에 대한 데이터가 들어 있는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">프린터 설정이 잘못된 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">네이티브 Win32 API(애플리케이션 프로그래밍 인터페이스)에서 인쇄 작업을 시작할 수 없는 경우</exception>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>사각형과 경로로 구성된 그래픽 모양의 내부를 설명합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>새 <see cref="T:System.Drawing.Region" />를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 새 <see cref="T:System.Drawing.Region" />를 초기화합니다.</summary>
      <param name="path">새 <see cref="T:System.Drawing.Region" />을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>지정된 데이터에서 새 <see cref="T:System.Drawing.Region" />을 초기화합니다.</summary>
      <param name="rgnData">새 <see cref="T:System.Drawing.Region" />의 내부를 정의하는 <see cref="T:System.Drawing.Drawing2D.RegionData" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgnData" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체에서 새 <see cref="T:System.Drawing.Rectangle" />을 초기화합니다.</summary>
      <param name="rect">새 <see cref="T:System.Drawing.Rectangle" />의 내부를 정의하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체에서 새 <see cref="T:System.Drawing.RectangleF" />을 초기화합니다.</summary>
      <param name="rect">새 <see cref="T:System.Drawing.RectangleF" />의 내부를 정의하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>이 <see cref="T:System.Drawing.Region" />의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Region" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>이 <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 일부를 포함하도록 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="path">이 <see cref="T:System.Drawing.Region" />을 보완할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 일부가 들어 있는 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />을 보충하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 일부가 들어 있는 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />을 보충하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>이 <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.Region" />의 일부를 포함하도록 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="region">이 <see cref="T:System.Drawing.Region" /> 개체를 보완할 <see cref="T:System.Drawing.Region" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>이 <see cref="T:System.Drawing.Region" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />이 지정된 그리기 화면에 있는 이 <see cref="T:System.Drawing.Region" />과 같은지 여부를 테스트합니다.</summary>
      <param name="region">테스트할 <see cref="T:System.Drawing.Region" />입니다.</param>
      <param name="g">그리기 화면을 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="g" /> 매개 변수와 연관된 변환이 적용될 때 영역의 내부가 이 영역의 내부와 같은 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 또는 <paramref name="region" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에서 제외할 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />에서 제외할 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.RectangleF" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />에서 제외할 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" />에서 제외할 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>핸들에서 지정된 기존 GDI 영역으로 새 <see cref="T:System.Drawing.Region" />을 초기화합니다.</summary>
      <param name="hrgn">기존 <see cref="T:System.Drawing.Region" />에 대한 핸들입니다.</param>
      <returns>새 <see cref="T:System.Drawing.Region" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 개체의 그리기 화면에서 이 <see cref="T:System.Drawing.Region" />의 경계가 되는 사각형을 나타내는 <see cref="T:System.Drawing.Graphics" /> 구조체를 가져옵니다.</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />이 그려질 <see cref="T:System.Drawing.Region" />입니다.</param>
      <returns>지정된 그리기 화면에서 이 <see cref="T:System.Drawing.RectangleF" />의 경계 사각형을 나타내는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>지정된 그래픽 컨텍스트에서 <see cref="T:System.Drawing.Region" />에 대한 창 핸들을 반환합니다.</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />이 그려질 <see cref="T:System.Drawing.Region" />입니다.</param>
      <returns>이 <see cref="T:System.Drawing.Region" />에 대한 창 핸들입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.RegionData" />을 설명하는 정보를 나타내는 <see cref="T:System.Drawing.Region" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.RegionData" />을 설명하는 정보를 나타내는 <see cref="T:System.Drawing.Region" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>지정된 매트릭스 변환을 적용한 후 이 <see cref="T:System.Drawing.RectangleF" />과 유사한 <see cref="T:System.Drawing.Region" /> 구조체 배열을 반환합니다.</summary>
      <param name="matrix">영역에 적용되는 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
      <returns>지정된 매트릭스 변환을 적용한 후 이 <see cref="T:System.Drawing.RectangleF" />과 유사한 <see cref="T:System.Drawing.Region" /> 구조체 배열입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 교차 부분으로 업데이트합니다.</summary>
      <param name="path">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조의 교차 부분으로 업데이트합니다.</summary>
      <param name="rect">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.Rectangle" /> 구조입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조의 교차 부분으로 업데이트합니다.</summary>
      <param name="rect">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.RectangleF" /> 구조입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Region" />의 교차 부분으로 업데이트합니다.</summary>
      <param name="region">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.Region" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>지정된 그리기 화면에서 이 <see cref="T:System.Drawing.Region" />의 내부가 비었는지 여부를 테스트합니다.</summary>
      <param name="g">그리기 화면을 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="g" />와 연관된 변환이 적용될 때 이 <see cref="T:System.Drawing.Region" />의 내부가 비어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>지정된 그리기 화면에서 이 <see cref="T:System.Drawing.Region" />의 내부 제한이 없는지 여부를 테스트합니다.</summary>
      <param name="g">그리기 화면을 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="g" />와 연관된 변환이 적용될 때 이 <see cref="T:System.Drawing.Region" />의 내부 제한이 없는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>지정된 <see cref="T:System.Drawing.Point" /> 구조체가 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="point">테스트할 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <returns>
        <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Point" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="point">테스트할 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>지정된 <see cref="T:System.Drawing.PointF" /> 구조체가 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="point">테스트할 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <returns>
        <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.PointF" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="point">테스트할 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="rect">테스트할 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <returns>
        <paramref name="rect" />의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 이 메서드에서는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Rectangle" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="rect">테스트할 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="rect" />의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="rect">테스트할 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <returns>
        <paramref name="rect" />의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.RectangleF" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="rect">테스트할 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>
        <paramref name="rect" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 개체를 사용하여 그릴 때 지정된 점이 이 <see cref="T:System.Drawing.Graphics" /> 개체에 들어 있는지 여부를 검사합니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>지정된 점이 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
      <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
      <param name="width">테스트할 사각형의 너비입니다.</param>
      <param name="height">테스트할 사각형의 높이입니다.</param>
      <returns>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />를 사용하여 그릴 때 지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
      <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
      <param name="width">테스트할 사각형의 너비입니다.</param>
      <param name="height">테스트할 사각형의 높이입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>지정된 점이 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <returns>지정된 점이 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />를 사용하여 그릴 때 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="x">테스트할 점의 x좌표입니다.</param>
      <param name="y">테스트할 점의 y좌표입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>지정된 점이 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
      <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
      <param name="width">테스트할 사각형의 너비입니다.</param>
      <param name="height">테스트할 사각형의 높이입니다.</param>
      <returns>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" /> 개체에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />를 사용하여 그릴 때 지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
      <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
      <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
      <param name="width">테스트할 사각형의 너비입니다.</param>
      <param name="height">테스트할 사각형의 높이입니다.</param>
      <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
      <returns>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>
        <see cref="T:System.Drawing.Region" />을 빈 내부로 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>이 <see cref="T:System.Drawing.Region" /> 개체를 제한이 없는 내부로 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Region" />의 핸들을 해제합니다.</summary>
      <param name="regionHandle">
        <see cref="T:System.Drawing.Region" />에 대한 핸들입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regionHandle" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />을 변환합니다.</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환하는 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>지정된 크기로 이 <see cref="T:System.Drawing.Region" />의 좌표를 오프셋합니다.</summary>
      <param name="dx">
        <see cref="T:System.Drawing.Region" />을 가로 방향으로 오프셋할 크기입니다.</param>
      <param name="dy">
        <see cref="T:System.Drawing.Region" />을 세로 방향으로 오프셋할 크기입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>지정된 크기로 이 <see cref="T:System.Drawing.Region" />의 좌표를 오프셋합니다.</summary>
      <param name="dx">
        <see cref="T:System.Drawing.Region" />을 가로 방향으로 오프셋할 크기입니다.</param>
      <param name="dy">
        <see cref="T:System.Drawing.Region" />을 세로 방향으로 오프셋할 크기입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 통합하는 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />과 통합하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.RectangleF" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />과 통합하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" />과 통합하는 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 <see cref="Overload:System.Drawing.Region.Xor" />하는 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />과 <see cref="Overload:System.Drawing.Region.Xor" />하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.RectangleF" />을 업데이트합니다.</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />과 <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" />하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" />과 <see cref="Overload:System.Drawing.Region.Xor" />하는 <see cref="T:System.Drawing.Region" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>이미지가 회전되는 양과 이미지를 대칭 이동하는 데 사용할 축을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>대칭 이동 없는 180도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>수평 대칭 이동 후 180도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>수평 및 수직 이동 후 180도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>수직 대칭 이동 후 180도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>대칭 이동 없는 270도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>수평 대칭 이동 후 270도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>수평 및 수직 이동 후 270도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>수직 대칭 이동 후 270도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>대칭 이동 없는 90도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>수평 대칭 이동 후 90도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>수평 및 수직 이동 후 90도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>수직 대칭 이동 후 90도 시계 방향 회전을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>시계 방향 회전 안 함과 대칭 이동 안 함을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>수평 대칭 이동 후 시계 방향 회전 안 함을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>수평 및 수직 대칭 이동 후 시계 방향 회전 안 함을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>수직 대칭 이동 후 시계 방향 회전 안 함을 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>단일 색의 브러시를 정의합니다. 브러시는 사각형, 타원, 원형, 다각형 및 경로와 같은 그래픽 도형을 채우는 데 사용됩니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>지정된 색이 있는 새 <see cref="T:System.Drawing.SolidBrush" /> 개체를 초기화합니다.</summary>
      <param name="color">이 브러시의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>이 <see cref="T:System.Drawing.SolidBrush" /> 개체의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.SolidBrush" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>
        <see cref="T:System.Drawing.SolidBrush" /> 개체의 색을 가져오거나 설정합니다.</summary>
      <returns>이 브러시의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</returns>
      <exception cref="T:System.ArgumentException">변경할 수 없는 <see cref="P:System.Drawing.SolidBrush.Color" />에 <see cref="T:System.Drawing.SolidBrush" /> 속성을 설정한 경우</exception>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>레이 아웃 영역과 비교하여 텍스트 문자열의 맞춤을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>레이아웃 영역의 가운데에 텍스트를 맞추도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>레이아웃 영역의 원래 위치에서 가장 먼 곳에 텍스트를 맞추도록 지정합니다. 레이아웃이 왼쪽에서 오른쪽인 경우 가장 먼 위치는 오른쪽입니다. 레이아웃이 오른쪽에서 왼쪽인 경우 가장 먼 위치는 왼쪽입니다.</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>레이아웃 가까운 곳에 텍스트를 맞추도록 지정합니다. 레이아웃이 왼쪽에서 오른쪽인 경우 가장 가까운 위치는 왼쪽입니다. 레이아웃이 오른쪽에서 왼쪽인 경우 가장 가까운 위치는 오른쪽입니다.</summary>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 열거형은 사용자의 로캘이나 언어에 따라 문자열의 숫자를 대체하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>사용자 로캘의 공식 언어와 일치하는 대체 숫자를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>대체를 비활성화하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>사용자 로캘의 공식 언어와 다를 수 있는 사용자의 기본 스크립트나 언어와 일치하는 대체 숫자를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>사용자 정의 대체 구성표를 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>맞춤, 방향 및 탭 정지와 같은 텍스트 레이아웃 정보를 캡슐화하고, 줄임표(...) 삽입 및 국가별 숫자 대체와 같은 조작과 OpenType 기능을 표시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>새 <see cref="T:System.Drawing.StringFormat" /> 개체를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>지정된 기존의 <see cref="T:System.Drawing.StringFormat" /> 개체에서 새 <see cref="T:System.Drawing.StringFormat" /> 개체를 초기화합니다.</summary>
      <param name="format">새 <see cref="T:System.Drawing.StringFormat" /> 개체를 초기화할 <see cref="T:System.Drawing.StringFormat" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>지정된 <see cref="T:System.Drawing.StringFormat" /> 열거형의 새 <see cref="T:System.Drawing.StringFormatFlags" /> 개체를 초기화합니다.</summary>
      <param name="options">새 <see cref="T:System.Drawing.StringFormatFlags" /> 개체의 <see cref="T:System.Drawing.StringFormat" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>지정된 <see cref="T:System.Drawing.StringFormat" /> 열거형 및 언어로 새 <see cref="T:System.Drawing.StringFormatFlags" /> 개체를 초기화합니다.</summary>
      <param name="options">새 <see cref="T:System.Drawing.StringFormatFlags" /> 개체의 <see cref="T:System.Drawing.StringFormat" /> 열거형입니다.</param>
      <param name="language">텍스트의 언어를 나타내는 값입니다.</param>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>문자열의 가로 맞춤을 가져오거나 설정합니다.</summary>
      <returns>문자열의 수평 맞춤을 지정하는 <see cref="T:System.Drawing.StringAlignment" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>이 <see cref="T:System.Drawing.StringFormat" /> 개체의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.StringFormat" /> 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>로컬 소수가 서양식 소수로 바뀔 때 사용할 언어를 가져옵니다.</summary>
      <returns>로컬 소수가 서양식 소수로 바뀔 때 사용할 언어를 식별하는 NLS(National Language Support) 언어 식별자입니다. <see cref="P:System.Globalization.CultureInfo.LCID" /> 개체의 <see cref="T:System.Globalization.CultureInfo" /> 속성을 NLS 언어 식별자로 전달할 수 있습니다. 예를 들어 "ar-EG" 문자열을 <see cref="T:System.Globalization.CultureInfo" /> 생성자에게 전달하여 <see cref="T:System.Globalization.CultureInfo" /> 개체를 만든다고 가정합니다. <see cref="P:System.Globalization.CultureInfo.LCID" /> 개체의 <see cref="T:System.Globalization.CultureInfo" /> 속성과 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" />을 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> 메서드로 전달하면 아랍-인도어식 숫자가 서양식 숫자로 대체되어 표시됩니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>숫자 대체에 사용할 메서드를 가져옵니다.</summary>
      <returns>현재 글꼴이 지원하지 못하기 때문에 표시되지 않는 문자열의 문자를 대체하는 방법을 지정하는 <see cref="T:System.Drawing.StringDigitSubstitute" /> 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>이 <see cref="T:System.Drawing.StringFormat" /> 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>서식 지정 정보를 포함하는 <see cref="T:System.Drawing.StringFormatFlags" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>서식 지정 정보를 포함하는 <see cref="T:System.Drawing.StringFormatFlags" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>일반 기본 <see cref="T:System.Drawing.StringFormat" /> 개체를 가져옵니다.</summary>
      <returns>일반 기본 <see cref="T:System.Drawing.StringFormat" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>일반 인쇄 <see cref="T:System.Drawing.StringFormat" /> 개체를 가져옵니다.</summary>
      <returns>일반 인쇄 <see cref="T:System.Drawing.StringFormat" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>이 <see cref="T:System.Drawing.StringFormat" /> 개체의 탭 정지를 가져옵니다.</summary>
      <param name="firstTabOffset">텍스트 줄의 시작과 첫 번째 탭 정지 사이의 공백 수입니다.</param>
      <returns>탭 정지 사이의 거리(공백 수) 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>이 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 개체의 <see cref="T:System.Drawing.StringFormat" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 개체의 <see cref="T:System.Drawing.StringFormat" /> 개체입니다. 기본값은 <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>문자열의 세로 맞춤을 가져오거나 설정합니다.</summary>
      <returns>수직 줄 맞춤을 나타내는 <see cref="T:System.Drawing.StringAlignment" /> 열거형입니다.</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>로컬 소수가 서양식 소수로 바뀔 때 사용할 언어와 메서드를 지정합니다.</summary>
      <param name="language">로컬 소수가 서양식 소수로 바뀔 때 사용할 언어를 식별하는 NLS(National Language Support) 언어 식별자입니다. <see cref="P:System.Globalization.CultureInfo.LCID" /> 개체의 <see cref="T:System.Globalization.CultureInfo" /> 속성을 NLS 언어 식별자로 전달할 수 있습니다. 예를 들어 "ar-EG" 문자열을 <see cref="T:System.Globalization.CultureInfo" /> 생성자에게 전달하여 <see cref="T:System.Globalization.CultureInfo" /> 개체를 만든다고 가정합니다. <see cref="P:System.Globalization.CultureInfo.LCID" /> 개체의 <see cref="T:System.Globalization.CultureInfo" /> 속성과 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" />을 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> 메서드로 전달하면 아랍-인도어식 숫자가 서양식 숫자로 대체되어 표시됩니다.</param>
      <param name="substitute">숫자가 표시되는 방법을 지정하는 <see cref="T:System.Drawing.StringDigitSubstitute" /> 열거형의 요소입니다.</param>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>
        <see cref="T:System.Drawing.CharacterRange" /> 메서드를 호출하여 측정한 문자 범위를 나타내는 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 구조체의 배열을 지정합니다.</summary>
      <param name="ranges">
        <see cref="T:System.Drawing.CharacterRange" /> 메서드를 호출하여 측정한 문자 범위를 지정하는 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 구조체의 배열입니다.</param>
      <exception cref="T:System.OverflowException">32개 보다 많은 문자 범위가 설정된 경우</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>이 <see cref="T:System.Drawing.StringFormat" /> 개체의 탭 정지를 설정합니다.</summary>
      <param name="firstTabOffset">텍스트 줄의 시작과 첫 번째 탭 정지 사이의 공백 수입니다.</param>
      <param name="tabStops">탭 정지 사이의 거리가 <see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위로 들어 있는 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>이 <see cref="T:System.Drawing.StringFormat" /> 개체를 사람이 인식할 수 있는 문자열로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.StringFormat" /> 개체의 문자열 표시입니다.</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>이 <see cref="T:System.Drawing.StringTrimming" /> 개체의 <see cref="T:System.Drawing.StringFormat" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.StringTrimming" /> 개체로 그려진 텍스트가 레이아웃 사각형의 가장자리를 벗어날 때 잘라내는 방법을 나타내는 <see cref="T:System.Drawing.StringFormat" /> 열거형입니다.</returns>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>텍스트 문자열의 표시 및 레이아웃 정보를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>텍스트가 오른쪽에서 왼쪽으로 표시됩니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>텍스트가 세로로 맞춰집니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>왼쪽에서 오른쪽으로 쓰기 표시와 같은 제어 문자가 해당 문자 모양으로 출력에 표시됩니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>문자 일부가 문자열의 레이아웃 사각형에 걸칠 수 있습니다. 기본적으로는 문자가 걸치지 않게 위치가 조정됩니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>서식 지정 영역에서 전체 줄만 레이아웃됩니다. 기본적으로 다음 중 어느 경우가 먼저 발생하든 레이아웃은 텍스트 끝이나 클리핑의 결과로서 줄이 더 이상 보이지 않을 때까지 계속합니다. 기본 설정을 하면 서식 지정 영역이 줄 높이의 배수가 아니기 때문에 서식 지정 영역으로 마지막 줄이 부분적으로 불명확하게 됩니다. 전체 줄을 보려면, 이 값을 지정하고 높이가 최소한 한 줄만큼 되는 서식 지정 사각형을 제공하십시오.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>각 줄의 끝에 후행 공백을 포함합니다. 기본적으로 <see cref="Overload:System.Drawing.Graphics.MeasureString" /> 메서드가 반환한 경계 사각형은 각 줄 끝의 공간을 제외합니다. 해당 공간을 포함할 이 플래그를 단위에 설정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>문자 모양의 걸친 부분과 서식 지정 영역 밖에 도달하는 줄 바꿈되지 않은 텍스트를 볼 수 있습니다. 기본적으로 서식 지정 영역 밖에 도달하는 모든 텍스트와 문자 모양 부분은 클리핑됩니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>요청된 글꼴에서 지원되지 않는 문자를 대체 글꼴로 대체(fallback)하지 않습니다. 문자가 없는 경우 글꼴이 없다는 의미의 문자 모양(예: 대괄호([]))으로 표시됩니다.</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>사각형 내에서 서식을 지정할 때 텍스트 줄 바꿈을 사용하지 않습니다. 사각형이 아니라 점이 전달되거나 지정된 사각형의 선 길이가 0일 때, 이 플래그가 적용됩니다.</summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>레이아웃 모양에 완전히 맞지 않는 문자열에서 문자를 트리밍하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>텍스트가 가장 가까운 문자에 트리밍되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>텍스트가 가장 가까운 문자에 트리밍되고 줄임표(...)가 잘라낸 줄의 끝에 삽입되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>잘라낸 줄에서 중앙이 제거되고 줄임표(...)로 바뀝니다. 알고리즘은 줄에서 슬래시로 구분된 최종 세그먼트를 최대한 크게 유지합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>텍스트가 가장 가까운 단어에 트리밍되고 줄임표(...)가 잘라낸 줄의 끝에 삽입되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>트리밍을 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>텍스트가 가장 가까운 단어에 트리밍되도록 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>텍스트 문자열의 단위를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>디바이스 단위를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>1/300인치를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>프린터 32em 크기를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>1인치를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>1밀리미터를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>1픽셀을 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>프린터의 점(1/72인치)을 측정 단위로 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>world 단위를 측정 단위로 지정합니다.</summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
        <see cref="T:System.Drawing.SystemBrushes" /> 클래스의 각 속성은 Windows 표시 요소의 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>활성 창의 테두리 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>활성 창의 테두리 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>활성 창의 제목 표시줄에 있는 텍스트의 색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>애플리케이션 작업 공간의 색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>애플리케이션 작업 영역의 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonFace">
      <summary>3차원 요소의 표면 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 표면 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonHighlight">
      <summary>3차원 요소의 강조 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 강조 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonShadow">
      <summary>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>3차원 요소의 표면 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 표면 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>3차원 요소의 짙은 그림자 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 짙은 그림자 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>3차원 요소의 옅은 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 옅은 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>3차원 요소의 강조 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 강조 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>3차원 요소의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>3차원 요소의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>바탕 화면의 색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>바탕 화면의 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Brush" /> 구조체에서 <see cref="T:System.Drawing.Color" />를 만듭니다.</summary>
      <param name="c">
        <see cref="T:System.Drawing.Color" />를 만들 <see cref="T:System.Drawing.Brush" /> 구조체입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Brush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientActiveCaption">
      <summary>활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientInactiveCaption">
      <summary>비활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GrayText">
      <summary>흐리게 표시되는 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>흐리게 표시되는 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>선택한 항목의 배경색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>선택한 항목의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>선택된 항목의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>선택한 항목의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>핫 트랙 항목을 지정하는 데 사용하는 색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>핫 트랙 항목을 지정하는 데 사용되는 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>비활성 창의 테두리 색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>비활성 창의 테두리 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>비활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.SolidBrush" />를 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaptionText">
      <summary>비활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>도구 설명의 배경색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>도구 설명의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InfoText">
      <summary>도구 설명의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>도구 설명의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>메뉴의 배경색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>메뉴의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuBar">
      <summary>메뉴 모음의 배경색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>메뉴 모음의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuHighlight">
      <summary>메뉴가 기본 메뉴로 표시될 때 메뉴 항목을 강조 표시하는 데 사용되는 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>메뉴가 기본 메뉴로 표시될 때 메뉴 항목을 강조 표시하는 데 사용되는 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuText">
      <summary>메뉴의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>메뉴의 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>스크롤 막대의 배경색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>스크롤 막대의 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>창의 클라이언트 영역 배경색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>창의 클라이언트 영역 배경색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowFrame">
      <summary>창 프레임의 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>창 프레임의 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>창의 클라이언트 영역에 있는 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />을 가져옵니다.</summary>
      <returns>창의 클라이언트 영역에 있는 텍스트 색인 <see cref="T:System.Drawing.SolidBrush" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.SystemColors">
      <summary>
        <see cref="T:System.Drawing.SystemColors" /> 클래스의 각 속성은 Windows 표시 요소의 색인 <see cref="T:System.Drawing.Color" /> 구조체입니다.</summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveBorder">
      <summary>활성 창의 테두리 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>활성 창의 테두리 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaption">
      <summary>활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaptionText">
      <summary>활성 창의 제목 표시줄에 있는 텍스트의 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.AppWorkspace">
      <summary>애플리케이션 작업 영역의 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>애플리케이션 작업 영역의 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonFace">
      <summary>표면 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 표면 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonHighlight">
      <summary>강조 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 강조 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonShadow">
      <summary>그림자 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Control">
      <summary>표면 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 표면 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDark">
      <summary>그림자 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDarkDark">
      <summary>짙은 그림자 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 짙은 그림자 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLight">
      <summary>옅은 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 옅은 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLightLight">
      <summary>강조 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 강조 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlText">
      <summary>텍스트 색의 3차원 요소인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>3차원 요소의 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Desktop">
      <summary>바탕 화면의 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>바탕 화면의 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientActiveCaption">
      <summary>활성 창 제목 표시줄의 색 그라이데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientInactiveCaption">
      <summary>비활성 창 제목 표시줄의 색 그라이데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GrayText">
      <summary>흐리게 표시되는 텍스트 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>흐리게 표시되는 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Highlight">
      <summary>선택한 항목의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>선택한 항목의 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HighlightText">
      <summary>선택한 항목의 텍스트 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>선택한 항목의 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HotTrack">
      <summary>핫 트랙 항목을 지정하는 데 사용된 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>핫 트랙 항목을 지정하는 데 사용되는 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveBorder">
      <summary>비활성 창 테두리의 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>비활성 창의 테두리 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaption">
      <summary>비활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaptionText">
      <summary>비활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Info">
      <summary>도구 설명의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>도구 설명의 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InfoText">
      <summary>도구 설명의 텍스트 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>도구 설명의 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Menu">
      <summary>메뉴의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>메뉴의 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuBar">
      <summary>메뉴 모음의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>메뉴 모음의 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuHighlight">
      <summary>메뉴가 기본 메뉴로 표시될 때 메뉴 항목을 강조 표시하는 데 사용되는 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>메뉴가 기본 메뉴로 표시될 때 메뉴 항목을 강조 표시하는 데 사용되는 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuText">
      <summary>메뉴의 텍스트 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>메뉴의 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ScrollBar">
      <summary>스크롤 막대의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>스크롤 막대의 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Window">
      <summary>창의 클라이언트 영역의 배경색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>창의 클라이언트 영역 배경색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowFrame">
      <summary>창 프레임의 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>창 프레임의 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowText">
      <summary>창의 클라이언트 영역의 텍스트 색인 <see cref="T:System.Drawing.Color" /> 구조체를 가져옵니다.</summary>
      <returns>창의 클라이언트 영역에 있는 텍스트 색인 <see cref="T:System.Drawing.Color" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.SystemFonts">
      <summary>Windows 표시 요소에 텍스트를 표시하는 데 사용할 글꼴을 지정합니다.</summary>
    </member>
    <member name="P:System.Drawing.SystemFonts.CaptionFont">
      <summary>창의 제목 표시줄에 텍스트를 표시하는 데 사용되는 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>창의 제목 표시줄에 텍스트를 표시하는 데 사용되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DefaultFont">
      <summary>애플리케이션에서 대화 상자와 폼에 사용할 수 있는 기본 글꼴을 가져옵니다.</summary>
      <returns>시스템의 기본 <see cref="T:System.Drawing.Font" />입니다. 반환 값은 사용자의 운영 체제와 시스템의 로컬 culture 설정에 따라 달라질 수 있습니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DialogFont">
      <summary>애플리케이션에서 대화 상자와 폼에 사용할 수 있는 글꼴을 가져옵니다.</summary>
      <returns>운영 체제와 시스템의 로컬 culture 설정에 따라 대화 상자와 폼에 사용할 수 있는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.SystemFonts.GetFontByName(System.String)">
      <summary>지정된 시스템 글꼴 이름에 해당하는 글꼴 개체를 반환합니다.</summary>
      <param name="systemFontName">글꼴 개체가 필요한 시스템 글꼴 이름입니다.</param>
      <returns>지정된 이름과 일치하는 값이 <see cref="T:System.Drawing.Font" />에 있으면 <see cref="T:System.Drawing.SystemFonts" />를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.IconTitleFont">
      <summary>아이콘 제목에 사용되는 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>아이콘 제목에 사용되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MenuFont">
      <summary>메뉴에 사용되는 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>메뉴에 사용되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MessageBoxFont">
      <summary>메시지 상자에 사용되는 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>메시지 상자에 사용되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.SmallCaptionFont">
      <summary>도구 창과 같은 작은 창의 제목 표시줄에 텍스트를 표시하는 데 사용되는 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>도구 창과 같은 작은 창의 제목 표시줄에 텍스트를 표시하는 데 사용되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.StatusFont">
      <summary>상태 표시줄에 텍스트를 표시하는 데 사용되는 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
      <returns>상태 표시줄에 텍스트를 표시하는 데 사용되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
        <see cref="T:System.Drawing.SystemIcons" /> 클래스의 각 속성은 Windows 시스템 아이콘의 <see cref="T:System.Drawing.Icon" /> 개체입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>기본 애플리케이션 아이콘(WIN32: IDI_APPLICATION)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>기본 애플리케이션 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>시스템 별표 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다(WIN32: IDI_ASTERISK).</summary>
      <returns>시스템 별표 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>시스템 오류 아이콘(WIN32: IDI_ERROR)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>시스템 오류 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>시스템 느낌표 아이콘(WIN32: IDI_EXCLAMATION)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>시스템 느낌표 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>시스템 손 모양 아이콘(WIN32: IDI_HAND)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>시스템 손 모양 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>시스템 정보 아이콘(WIN32: IDI_INFORMATION)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>시스템 정보 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>시스템 질문 아이콘(WIN32: IDI_QUESTION)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>시스템 질문 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Shield">
      <summary>방패 아이콘이 들어 있는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>방패 아이콘이 들어 있는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>시스템 경고 아이콘(WIN32: IDI_WARNING)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>시스템 경고 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>Windows 로고 아이콘(WIN32: IDI_WINLOGO)을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체를 가져옵니다.</summary>
      <returns>Windows 로고 아이콘을 포함하는 <see cref="T:System.Drawing.Icon" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>
        <see cref="T:System.Drawing.SystemPens" /> 클래스의 각 속성은 Windows 표시 요소의 색인 1픽셀 너비의 <see cref="T:System.Drawing.Pen" />입니다.</summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveBorder">
      <summary>활성 창의 테두리 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>활성 창의 테두리 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaption">
      <summary>활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.Pen" />를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>활성 창의 제목 표시줄에 있는 텍스트의 색인 <see cref="T:System.Drawing.Pen" />를 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.AppWorkspace">
      <summary>애플리케이션 작업 공간의 색인 <see cref="T:System.Drawing.Pen" />를 가져옵니다.</summary>
      <returns>애플리케이션 작업 영역의 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonFace">
      <summary>3차원 요소의 표면 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 표면 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonHighlight">
      <summary>3차원 요소의 강조 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 강조 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonShadow">
      <summary>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>3차원 요소의 표면 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 표면 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 그림자 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>3차원 요소의 짙은 그림자 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 짙은 그림자 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>3차원 요소의 옅은 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 옅은 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>3차원 요소의 강조 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 강조 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>3차원 요소의 텍스트 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>3차원 요소의 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Desktop">
      <summary>Windows 바탕 화면의 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>Windows 바탕 화면의 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>지정된 <see cref="T:System.Drawing.Pen" />에서 <see cref="T:System.Drawing.Color" />을 만듭니다.</summary>
      <param name="c">새 <see cref="T:System.Drawing.Color" />의 <see cref="T:System.Drawing.Pen" />입니다.</param>
      <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientActiveCaption">
      <summary>활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientInactiveCaption">
      <summary>비활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 색 그라데이션에서 가장 옅은 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>흐리게 표시되는 텍스트 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>흐리게 표시되는 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>선택한 항목의 배경색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>선택한 항목의 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>선택된 항목의 텍스트 색인 <see cref="T:System.Drawing.Pen" />를 가져옵니다.</summary>
      <returns>선택한 항목의 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HotTrack">
      <summary>핫 트랙 항목을 지정하는 데 사용하는 색인 <see cref="T:System.Drawing.Pen" />를 가져옵니다.</summary>
      <returns>핫 트랙 항목을 지정하는 데 사용되는 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveBorder">
      <summary>비활성 창의 테두리 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>비활성 창의 테두리 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaption">
      <summary>비활성 창의 제목 표시줄 캡션 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>비활성 창의 제목 표시줄 캡션 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>비활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>비활성 창 제목 표시줄의 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Info">
      <summary>도구 설명의 배경색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>도구 설명의 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>도구 설명의 텍스트 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>도구 설명의 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Menu">
      <summary>메뉴의 배경색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>메뉴의 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuBar">
      <summary>메뉴 모음의 배경색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>메뉴 모음의 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuHighlight">
      <summary>메뉴가 기본 메뉴로 표시될 때 메뉴 항목을 강조 표시하는 데 사용되는 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>메뉴가 기본 메뉴로 표시될 때 메뉴 항목을 강조 표시하는 데 사용되는 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>메뉴의 텍스트 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>메뉴의 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ScrollBar">
      <summary>스크롤 막대의 배경색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>스크롤 막대의 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Window">
      <summary>창의 클라이언트 영역 배경색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>창의 클라이언트 영역 배경색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>창 프레임의 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>창 프레임의 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>창의 클라이언트 영역에 있는 텍스트 색인 <see cref="T:System.Drawing.Pen" />을 가져옵니다.</summary>
      <returns>창의 클라이언트 영역에 있는 텍스트 색인 <see cref="T:System.Drawing.Pen" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>설치된 글꼴 컬렉션과 프라이빗 글꼴 컬렉션의 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>이 <see cref="T:System.Drawing.Text.FontCollection" />에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Text.FontCollection" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>
        <see cref="T:System.Drawing.FontFamily" />과 관련된 <see cref="T:System.Drawing.Text.FontCollection" /> 개체 배열을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Drawing.FontFamily" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>일반 <see cref="T:System.Drawing.FontFamily" /> 개체를 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>일반 고정 폭 <see cref="T:System.Drawing.FontFamily" /> 개체입니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>일반 Sans Serif <see cref="T:System.Drawing.FontFamily" /> 개체입니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>일반 Serif <see cref="T:System.Drawing.FontFamily" /> 개체입니다.</summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>텍스트와 관련된 바로 가기 키 접두사의 표시 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>바로 가기 키 접두사를 표시하지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>바로 가기 키 접두사가 없습니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>바로 가기 키 접두사를 표시합니다.</summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>시스템에 설치된 글꼴을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>
        <see cref="T:System.Drawing.Text.InstalledFontCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>클라이언트 애플리케이션에서 제공하는 글꼴 파일로부터 만들어진 글꼴 패밀리의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>
        <see cref="T:System.Drawing.Text.PrivateFontCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>지정된 파일의 글꼴을 이 <see cref="T:System.Drawing.Text.PrivateFontCollection" />에 추가합니다.</summary>
      <param name="filename">추가할 글꼴의 파일 이름이 포함된 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">지정한 글꼴이 지원되지 않거나 글꼴 파일을 찾을 수 없는 경우</exception>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>시스템 메모리에 포함된 글꼴을 이 <see cref="T:System.Drawing.Text.PrivateFontCollection" />에 추가합니다.</summary>
      <param name="memory">추가할 글꼴의 메모리 주소입니다.</param>
      <param name="length">추가할 글꼴의 메모리 길이입니다.</param>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>텍스트 렌더링 품질을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>각 문자가 힌팅 없이 해당 앤티 앨리어싱된 문자 모양 비트맵을 사용하여 그려집니다. 앤티 앨리어싱으로 인해 품질은 더 낫지만 힌팅을 사용하지 않기 때문에 세로 획 너비에서 차이가 생길 수 있습니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>각 문자가 힌팅을 사용한 상태에서 해당 앤티 앨리어싱된 문자 모양 비트맵을 사용하여 그려집니다. 앤티 앨리어싱으로 인해 품질은 더 낫지만 성능은 떨어집니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>각 문자가 힌팅을 사용한 상태에서 해당 문자 모양 ClearType 비트맵을 사용하여 그려집니다. 최고 품질 설정으로, ClearType 글꼴 기능을 활용하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>각 문자가 해당 문자 모양 비트맵을 사용하여 그려집니다. 힌팅은 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>각 문자가 해당 문자 모양 비트맵을 사용하여 그려집니다. 힌팅을 사용하여 세로 획과 곡선에서의 문자 모양이 향상됩니다.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>각 문자가 시스템 기본 렌더링 힌팅과 함께 해당 문자 모양 비트맵을 사용하여 그려집니다. 텍스트가 해당 시스템에 대해 사용자가 선택한 글꼴 다듬기 설정을 사용하여 그려집니다.</summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
        <see cref="T:System.Drawing.TextureBrush" /> 클래스의 각 속성은 이미지를 사용하여 도형 내부를 채우는 <see cref="T:System.Drawing.Brush" /> 개체입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>지정된 이미지를 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="bitmap">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>지정된 이미지 및 랩 모드를 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="wrapMode">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 개체가 바둑판식으로 배열되는 방법을 지정하는 <see cref="T:System.Drawing.TextureBrush" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>지정된 이미지, 랩 모드 및 경계 사각형을 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="wrapMode">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 개체가 바둑판식으로 배열되는 방법을 지정하는 <see cref="T:System.Drawing.TextureBrush" /> 열거형입니다.</param>
      <param name="dstRect">해당 <see cref="T:System.Drawing.Rectangle" /> 개체의 경계 사각형을 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>지정된 이미지, 랩 모드 및 경계 사각형을 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="wrapMode">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 개체가 바둑판식으로 배열되는 방법을 지정하는 <see cref="T:System.Drawing.TextureBrush" /> 열거형입니다.</param>
      <param name="dstRect">해당 <see cref="T:System.Drawing.RectangleF" /> 개체의 경계 사각형을 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>지정된 이미지 및 경계 사각형을 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="dstRect">해당 <see cref="T:System.Drawing.Rectangle" /> 개체의 경계 사각형을 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 이미지, 경계 사각형 및 이미지 특성을 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="dstRect">해당 <see cref="T:System.Drawing.Rectangle" /> 개체의 경계 사각형을 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 구조체입니다.</param>
      <param name="imageAttr">이 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체가 사용한 이미지에 대한 추가 정보가 들어 있는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>지정된 이미지 및 경계 사각형을 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="dstRect">해당 <see cref="T:System.Drawing.RectangleF" /> 개체의 경계 사각형을 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>지정된 이미지, 경계 사각형 및 이미지 특성을 사용하는 새 <see cref="T:System.Drawing.TextureBrush" /> 개체를 초기화합니다.</summary>
      <param name="image">이 <see cref="T:System.Drawing.Image" /> 개체가 내부를 채우는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
      <param name="dstRect">해당 <see cref="T:System.Drawing.RectangleF" /> 개체의 경계 사각형을 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 구조체입니다.</param>
      <param name="imageAttr">이 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 개체가 사용한 이미지에 대한 추가 정보가 들어 있는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 정확한 복사본을 만듭니다.</summary>
      <returns>이 메서드가 만들고, <see cref="T:System.Drawing.TextureBrush" /> 개체로 변환하는 <see cref="T:System.Object" /> 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 <see cref="T:System.Drawing.TextureBrush" /> 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Image" /> 개체가 모양을 채울 이미지를 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체에 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체를 앞에 추가하여 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체를 곱합니다.</summary>
      <param name="matrix">기하학 변환을 곱하는 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체에 지정된 순서로 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체를 곱합니다.</summary>
      <param name="matrix">기하학 변환을 곱하는 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체입니다.</param>
      <param name="order">두 매트릭스를 곱하는 하는 순서를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>식별할 이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 <see langword="Transform" /> 속성을 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 지정된 크기만큼 회전합니다. 이 메서드는 회전을 변형 앞에 추가합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 지정된 순서로 지정된 크기만큼 회전합니다.</summary>
      <param name="angle">회전 각도입니다.</param>
      <param name="order">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>지정된 크기로 이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변환을 조정합니다. 이 메서드는 변환에 크기 조정 매트릭스를 추가합니다.</summary>
      <param name="sx">x 방향으로 변형을 조정할 크기입니다.</param>
      <param name="sy">y 방향으로 변형을 조정할 크기입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 지정된 순서로 지정된 크기만큼 조정합니다.</summary>
      <param name="sx">x 방향으로 변형을 조정할 크기입니다.</param>
      <param name="sy">y 방향으로 변형을 조정할 크기입니다.</param>
      <param name="order">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형입니다.</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체와 관련된 이미지의 로컬 기하학적 변환을 정의하는 <see cref="T:System.Drawing.TextureBrush" /> 개체의 복사본을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 개체를 사용하여 그린 채우기에만 적용되는 기하학적 변환을 정의하는 <see cref="T:System.Drawing.TextureBrush" /> 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 지정된 크기만큼 이동합니다. 이 메서드는 이동을 변형 앞에 추가합니다.</summary>
      <param name="dx">x 방향으로 변형할 크기입니다.</param>
      <param name="dy">y 방향으로 변형할 크기입니다.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>지정된 순서로 지정된 크기만큼 이 <see cref="T:System.Drawing.TextureBrush" /> 개체의 로컬 기하학적 변형을 이동합니다.</summary>
      <param name="dx">x 방향으로 변형할 크기입니다.</param>
      <param name="dy">y 방향으로 변형할 크기입니다.</param>
      <param name="order">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>이 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 개체의 랩 모드를 나타내는 <see cref="T:System.Drawing.TextureBrush" /> 열거형을 가져오거나 설정합니다.</summary>
      <returns>이 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 개체를 사용하여 그린 채우기가 바둑판식으로 배열되는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 열거형입니다.</returns>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>Microsoft Visual Studio Form Designer와 같은 컨테이너의 컨트롤을 나타낼 아이콘을 지정할 수 있도록 합니다.</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>지정된 파일에서 이미지가 있는 새 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체를 초기화합니다.</summary>
      <param name="imageFile">16 x 16 비트맵이 있는 파일 이름입니다.</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>지정된 어셈블리에 리소스로 포함된 16 x 16 비트맵을 기준으로 새 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체를 초기화합니다.</summary>
      <param name="t">
        <see cref="T:System.Type" />입니다. 이것을 정의하는 어셈블리에서 비트맵 리소스를 검색합니다.</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>지정된 어셈블리에 리소스로 포함된 16 x 16 비트맵을 기준으로 새 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체를 초기화합니다.</summary>
      <param name="t">
        <see cref="T:System.Type" />입니다. 이것을 정의하는 어셈블리에서 비트맵 리소스를 검색합니다.</param>
      <param name="name">포함된 비트맵 리소스의 이름입니다.</param>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>
        <see langword="null" />로 설정된 큰 이미지와 작은 이미지가 있는 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체입니다.</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>지정된 개체가 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체이고 해당 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체와 동일한지 여부를 나타냅니다.</summary>
      <param name="value">테스트할 <see cref="T:System.Object" />입니다.</param>
      <returns>
        <paramref name="value" />가 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체이고 해당 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체와 동일하면 이 메서드는 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>해당 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체의 해시 코드를 가져옵니다.</summary>
      <returns>해당 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체의 해시 코드를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작은 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />를 가져옵니다.</summary>
      <param name="component">이 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체에 작은 이미지가 없으면 이 메서드는 구성 요소 매개 변수에서 지정한 개체의 형식을 정의하는 어셈블리에서 비트맵 리소스를 검색합니다. 예를 들어, ControlA 형식의 개체를 구성 요소 매개 변수에 전달하는 경우 이 메서드는 ControlA를 정의하는 어셈블리를 검색합니다.</param>
      <returns>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작은 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작거나 큰 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />를 가져옵니다.</summary>
      <param name="component">이 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체에 작은 이미지가 없으면 이 메서드는 구성 요소 매개 변수에서 지정한 개체의 형식을 정의하는 어셈블리에서 비트맵 리소스를 검색합니다. 예를 들어, ControlA 형식의 개체를 구성 요소 매개 변수에 전달하는 경우 이 메서드는 ControlA를 정의하는 어셈블리를 검색합니다.</param>
      <param name="large">이 메서드에 의해 큰 이미지(<see langword="true" />) 또는 작은 이미지(<see langword="false" />)가 반환될지 여부를 지정합니다. 작은 이미지는 16x16이고, 큰 이미지는 32x32입니다.</param>
      <returns>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작은 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />를 가져옵니다.</summary>
      <param name="type">이 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체에 작은 이미지가 없으면 이 메서드는 형식 매개 변수에서 지정한 형식을 정의하는 어셈블리에서 비트맵 리소스를 검색합니다. 예를 들어, typeof(ControlA)를 형식 매개 변수에 전달하는 경우 이 메서드는 ControlA를 정의하는 어셈블리를 검색합니다.</param>
      <returns>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작은 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작거나 큰 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />를 가져옵니다.</summary>
      <param name="type">이 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체에 작은 이미지가 없으면 이 메서드는 구성 요소 형식에서 지정한 형식을 정의하는 어셈블리에서 비트맵 리소스를 검색합니다. 예를 들어, typeof(ControlA)를 형식 매개 변수에 전달하는 경우 이 메서드는 ControlA를 정의하는 어셈블리를 검색합니다.</param>
      <param name="large">이 메서드에 의해 큰 이미지(<see langword="true" />) 또는 작은 이미지(<see langword="false" />)가 반환될지 여부를 지정합니다. 작은 이미지는 16x16이고, 큰 이미지는 32x32입니다.</param>
      <returns>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 작거나 큰 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />를 가져옵니다.</summary>
      <param name="type">이 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 개체에 작은 이미지가 없으면 이 메서드는 구성 요소 형식에서 지정한 형식을 정의하는 어셈블리에 포함된 비트맵 리소스를 검색합니다. 예를 들어, typeof(ControlA)를 형식 매개 변수에 전달하는 경우 이 메서드는 ControlA를 정의하는 어셈블리를 검색합니다.</param>
      <param name="imgName">포함된 비트맵 리소스의 이름입니다.</param>
      <param name="large">이 메서드에 의해 큰 이미지(<see langword="true" />) 또는 작은 이미지(<see langword="false" />)가 반환될지 여부를 지정합니다. 작은 이미지는 16x16이고, 큰 이미지는 32x32입니다.</param>
      <returns>이 <see cref="T:System.Drawing.Image" /> 개체와 관련된 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>어셈블리에 포함된 비트맵 리소스를 기초로 하는 <see cref="T:System.Drawing.Image" /> 개체를 반환합니다.</summary>
      <param name="t">이 메서드는 t 매개 변수에서 지정한 형식을 정의하는 어셈블리에 포함된 비트맵 리소스를 검색합니다. 예를 들어, typeof(ControlA)를 t 매개 변수에 전달하는 경우 이 메서드는 ControlA를 정의하는 어셈블리를 검색합니다.</param>
      <param name="imageName">포함된 비트맵 리소스의 이름입니다.</param>
      <param name="large">이 메서드에서 큰 이미지(true) 또는 작은 이미지(false)를 반환할지 여부를 지정합니다. 작은 이미지는 16 x 16이고, 큰 이미지는 32 x 32입니다.</param>
      <returns>검색된 비트맵을 기초로 하는 <see cref="T:System.Drawing.Image" /> 개체입니다.</returns>
    </member>
  </members>
</doc>