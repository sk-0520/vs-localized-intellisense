<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary vsli:raw="Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.">애플리케이션 설정 속성이 애플리케이션의 모든 사용자에 대해 같은 값을 갖도록 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationScopedSettingAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary vsli:raw="Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.">Window Forms 애플리케이션에서 애플리케이션 설정 기능을 구현하기 위해 구체적인 파생 래퍼 클래스의 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class to its default state.">
        <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 기본 상태로 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied owner component.">제공된 소유자 구성 요소를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="owner" vsli:raw="The component that will act as the owner of the application settings object.">애플리케이션 설정 개체의 소유자 역할을 할 구성 요소입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied owner component and settings key.">제공된 소유자 구성 요소와 설정 키를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="owner" vsli:raw="The component that will act as the owner of the application settings object.">애플리케이션 설정 개체의 소유자 역할을 할 구성 요소입니다.</param>
      <param name="settingsKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that uniquely identifies separate instances of the wrapper class.">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied settings key.">제공된 설정 키를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="settingsKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that uniquely identifies separate instances of the wrapper class.">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary vsli:raw="Gets the application settings context associated with the settings group.">설정 그룹과 연결된 애플리케이션 설정 컨텍스트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; associated with the settings group.">설정 그룹과 연결된 <see cref="T:System.Configuration.SettingsContext" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary vsli:raw="Returns the value of the named settings property for the previous version of the same application.">이전 버전의 동일한 애플리케이션에 대한 명명된 설정 속성의 값을 반환합니다.</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings property whose value is to be returned.">값이 반환될 설정 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the specified &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">지정된 <see cref="T:System.Object" />의 값이 있으면 해당 값을 포함하는 <see cref="T:System.Configuration.SettingsProperty" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="The property does not exist. The property count is zero or the property cannot be found in the data store.">속성이 없는 경우. 속성 개수가 0이거나 데이터 저장소에서 속성을 찾을 수 없습니다.</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary vsli:raw="Gets or sets the value of the specified application settings property.">지정된 애플리케이션 설정 속성의 값을 가져오거나 설정합니다.</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the property to access.">액세스할 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="If found, the value of the named settings property; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">명명된 설정 속성의 값이 있으면 해당 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="There are no properties associated with the current wrapper or the specified property could not be found.">현재 래퍼와 연결된 속성이 없거나 지정된 속성을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" vsli:raw="An attempt was made to set a read-only property.">읽기 전용 속성을 설정하려고 한 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException" vsli:raw="The value supplied is of a type incompatible with the settings property, during a set operation.">set 작업 중 제공된 값이 설정 속성과 호환되지 않는 형식인 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">구성 파일을 구문 분석할 수 없습니다.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingChangingEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingsLoadedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsSaving&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 이벤트를 발생시킵니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CancelEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary vsli:raw="Gets the collection of settings properties in the wrapper.">래퍼에 있는 설정 속성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects used in the current wrapper.">현재 래퍼에서 사용되는 모든 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProperty" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The associated settings provider could not be found or its instantiation failed.">연결된 설정 공급자를 찾을 수 없거나 인스턴스화하지 못한 경우</exception>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary vsli:raw="Occurs after the value of an application settings property is changed.">애플리케이션 설정 속성의 값이 변경된 후 발생합니다.</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary vsli:raw="Gets a collection of property values.">속성 값의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; of property values.">속성 값의 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary vsli:raw="Gets the collection of application settings providers used by the wrapper.">래퍼에서 사용하는 애플리케이션 설정 공급자의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; objects used by the settings properties of the current settings wrapper.">현재 설정 래퍼의 설정 속성에서 사용하는 모든 <see cref="T:System.Configuration.SettingsProviderCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProvider" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary vsli:raw="Refreshes the application settings property values from persistent storage.">영구 스토리지에서 애플리케이션 설정 속성 값을 새로 고칩니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary vsli:raw="Restores the persisted application settings values to their corresponding default properties.">영구 애플리케이션 설정 값을 해당 기본 속성으로 복원합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">구성 파일을 구문 분석할 수 없습니다.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary vsli:raw="Stores the current values of the application settings properties.">애플리케이션 설정 속성의 현재 값을 저장합니다.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary vsli:raw="Occurs before the value of an application settings property is changed.">애플리케이션 설정 속성의 값이 변경되기 전에 발생합니다.</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary vsli:raw="Gets or sets the settings key for the application settings group.">애플리케이션 설정 그룹의 설정 키를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the settings key for the current settings group.">현재 설정 그룹의 설정 키를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary vsli:raw="Occurs after the application settings are retrieved from storage.">애플리케이션 설정이 스토리지에서 검색된 후 발생합니다.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary vsli:raw="Occurs before values are saved to the data store.">값이 데이터 저장소에 저장되기 전에 발생합니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary vsli:raw="Updates application settings to reflect a more recent installation of the application.">애플리케이션의 최신 설치를 반영하기 위해 애플리케이션 설정을 업데이트합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">구성 파일을 구문 분석할 수 없습니다.</exception>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary vsli:raw="Represents a grouping of related application settings sections within a configuration file. This class cannot be inherited.">구성 파일에 있는 관련된 애플리케이션 설정 섹션의 그룹을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsGroup&quot; /&gt; class.">
        <see cref="T:System.Configuration.ApplicationSettingsGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary vsli:raw="Provides a method for reading values of a particular type from the configuration.">구성에서 특정 형식의 값을 읽는 데 사용할 수 있는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.AppSettingsReader&quot; /&gt; class.">
        <see cref="T:System.Configuration.AppSettingsReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary vsli:raw="Gets the value for a specified key from the &lt;see cref=&quot;P:System.Configuration.ConfigurationSettings.AppSettings&quot; /&gt; property and returns an object of the specified type containing the value from the configuration.">
        <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> 속성에서 지정된 키의 값을 가져오고 구성에서 해당 값을 포함하는 지정된 형식의 개체를 반환합니다.</summary>
      <param name="key" vsli:raw="The key for which to get the value.">값을 가져올 키입니다.</param>
      <param name="type" vsli:raw="The type of the object to return.">반환할 개체의 형식입니다.</param>
      <returns vsli:raw="The value of the specified key.">지정된 키의 값입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" />가 <see langword="null" />입니다.
또는
<paramref name="type" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; does not exist in the &lt;see langword=&quot;&amp;lt;appSettings&amp;gt;&quot; /&gt; configuration section.  &#xA;  &#xA;-or-&#xA;  &#xA; The value in the &lt;see langword=&quot;&amp;lt;appSettings&amp;gt;&quot; /&gt; configuration section for &lt;paramref name=&quot;key&quot; /&gt; is not of type &lt;paramref name=&quot;type&quot; /&gt;.">
        <see langword="&lt;appSettings&gt;" /> 구성 섹션에 <paramref name="key" />가 없는 경우
또는
<paramref name="key" />에 대한 <see langword="&lt;appSettings&gt;" /> 구성 섹션의 값이 <paramref name="type" /> 형식이 아닌 경우</exception>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary vsli:raw="Provides configuration system support for the &lt;see langword=&quot;appSettings&quot; /&gt; configuration section. This class cannot be inherited.">
        <see langword="appSettings" /> 구성 섹션에 대한 구성 시스템 지원 기능을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.AppSettingsSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary vsli:raw="Gets or sets a configuration file that provides additional settings or overrides the settings specified in the &lt;see langword=&quot;appSettings&quot; /&gt; element.">추가 설정을 제공하거나 <see langword="appSettings" /> 요소에 지정된 설정을 재정의하는 구성 파일을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A configuration file that provides additional settings or overrides the settings specified in the &lt;see langword=&quot;appSettings&quot; /&gt; element.">추가 설정을 제공하거나 <see langword="appSettings" /> 요소에 지정된 설정을 재정의하는 구성 파일입니다.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary vsli:raw="Gets a collection of key/value pairs that contains application settings.">애플리케이션 설정이 들어 있는 키/값 쌍 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of key/value pairs that contains the application settings from the configuration file.">구성 파일에서 애플리케이션 설정을 포함하는 키/값 쌍의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary vsli:raw="Provides dynamic validation of an object.">개체의 동적 유효성 검사를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.CallbackValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of object that will be validated.">유효성을 검사할 개체의 형식입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ValidatorCallback&quot; /&gt; used as the delegate.">대리자로 사용되는 <see cref="T:System.Configuration.ValidatorCallback" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The type of object.">개체의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;type&quot; /&gt; parameter matches the type used as the first parameter when creating an instance of &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 매개 변수가 <see cref="T:System.Configuration.CallbackValidator" />의 인스턴스를 만들 때 첫 번째 매개 변수로 사용되는 형식과 일치하면 <see langword="type" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value of an object.">개체의 값입니다.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary vsli:raw="Specifies a &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt; object to use for code validation. This class cannot be inherited.">코드 유효성 검사에 사용할 <see cref="T:System.Configuration.CallbackValidator" /> 개체를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CallbackValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.CallbackValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary vsli:raw="Gets or sets the name of the callback method.">콜백 메서드의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the method to call.">호출할 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the validator.">유효성 검사기의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current validator attribute instance.">현재 유효성 검사기 특성 인스턴스의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator instance.">유효성 검사기 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; instance.">현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Configuration.CallbackValidatorAttribute.Type&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> 속성의 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName&quot; /&gt; property is not set to a public static void method with one object parameter.">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> 속성이 하나의 개체 매개 변수가 있는 public static void 메서드로 설정되지 않은 경우</exception>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary vsli:raw="Represents a group of user-scoped application settings in a configuration file.">구성 파일에 있는 사용자 범위 애플리케이션 설정의 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ClientSettingsSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ClientSettingsSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary vsli:raw="Gets the collection of client settings for the section.">섹션에 대한 클라이언트 설정의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElementCollection&quot; /&gt; containing all the client settings found in the current configuration section.">현재 구성 섹션에 있는 모든 클라이언트 설정을 포함하는 <see cref="T:System.Configuration.SettingElementCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary vsli:raw="Represents a collection of string elements separated by commas. This class cannot be inherited.">쉼표로 구분된 문자열 요소의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary vsli:raw="Adds a string to the comma-delimited collection.">쉼표로 구분된 컬렉션에 문자열을 추가합니다.</summary>
      <param name="value" vsli:raw="A string value.">문자열 값입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary vsli:raw="Adds all the strings in a string array to the collection.">문자열 배열의 모든 문자열을 컬렉션에 추가합니다.</summary>
      <param name="range" vsli:raw="An array of strings to add to the collection.">컬렉션에 추가할 문자열 배열입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary vsli:raw="Clears the collection.">컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary vsli:raw="Creates a copy of the collection.">컬렉션의 복사본을 만듭니다.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary vsli:raw="Adds a string element to the collection at the specified index.">컬렉션의 지정된 인덱스에 문자열 요소를 추가합니다.</summary>
      <param name="index" vsli:raw="The index in the collection at which the new element will be added.">새 요소가 추가될 컬렉션의 인덱스입니다.</param>
      <param name="value" vsli:raw="The value of the new element to add to the collection.">컬렉션에 추가할 새 요소의 값입니다.</param>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary vsli:raw="Gets a value that specifies whether the collection has been modified.">컬렉션이 수정되었는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" />이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection object is read-only.">컬렉션 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified string element in the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" />의 지정된 문자열 요소가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a string element in the collection based on the index.">인덱스를 기반으로 컬렉션의 문자열 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The index of the string element in the collection.">컬렉션에 있는 문자열 요소의 인덱스입니다.</param>
      <returns vsli:raw="A string element in the collection.">컬렉션의 문자열 요소입니다.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary vsli:raw="Removes a string element from the collection.">컬렉션에서 문자열 요소를 제거합니다.</summary>
      <param name="value" vsli:raw="The string to remove.">제거할 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection object to read-only.">컬렉션 개체를 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary vsli:raw="Returns a string representation of the object.">개체의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A string representation of the object.">개체의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary vsli:raw="Converts a comma-delimited string value to and from a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object. This class cannot be inherited.">쉼표로 구분된 문자열 값과 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 개체 간의 변환을 수행합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollectionConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; object to a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object.">
        <see cref="T:System.String" /> 개체를 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 개체로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during conversion.">변환하는 동안 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="data" vsli:raw="The comma-separated &lt;see cref=&quot;T:System.String&quot; /&gt; to convert.">쉼표로 구분된 변환할 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; containing the converted value.">변환된 값을 포함하는 <see cref="T:System.Configuration.CommaDelimitedStringCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 개체를 <see cref="T:System.String" /> 개체로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during conversion.">변환하는 동안 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <param name="type" vsli:raw="The conversion type.">변환 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representing the converted &lt;paramref name=&quot;value&quot; /&gt; parameter, which is a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt;.">변환된 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다. 이 매개 변수는 <see cref="T:System.Configuration.CommaDelimitedStringCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary vsli:raw="Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.">특정 컴퓨터, 애플리케이션 또는 리소스에 적용할 수 있는 구성 파일을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.AppSettingsSection" /> 개체에 적용되는 <see cref="T:System.Configuration.Configuration" /> 개체 구성 섹션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object representing the &lt;see langword=&quot;appSettings&quot; /&gt; configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.AppSettingsSection" /> 개체에 적용되는 <see langword="appSettings" /> 구성 섹션을 나타내는 <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary vsli:raw="Specifies a function delegate that is used to transform assembly strings in configuration files.">구성 파일의 어셈블리 문자열을 변환하는 데 사용되는 함수 대리자를 지정합니다.</summary>
      <returns vsli:raw="A delegate that transforms type strings. The default value is &lt;see langword=&quot;null&quot; /&gt;.">서식 문자열을 변환하는 대리자입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; configuration-section object that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConnectionStringsSection" /> 개체에 적용되는 <see cref="T:System.Configuration.Configuration" /> 구성 섹션 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; configuration-section object representing the &lt;see langword=&quot;connectionStrings&quot; /&gt; configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConnectionStringsSection" /> 개체에 적용되는 <see langword="connectionStrings" /> 구성 섹션을 나타내는 <see cref="T:System.Configuration.Configuration" /> 구성 섹션 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.ContextInformation" /> 개체의 <see cref="T:System.Configuration.Configuration" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.ContextInformation" /> 개체의 <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary vsli:raw="Gets the physical path to the configuration file represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체가 나타내는 구성 파일에 대한 실제 경로를 가져옵니다.</summary>
      <returns vsli:raw="The physical path to the configuration file represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체가 나타내는 구성 파일에 대한 실제 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary vsli:raw="Returns the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 반환합니다.</summary>
      <param name="sectionName" vsli:raw="The path to the section to be returned.">반환될 섹션의 경로입니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt; if the requested section does not exist.">지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다. 또는 요청된 섹션이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="sectionGroupName" vsli:raw="The path name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; to return.">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" />의 경로 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; specified, or &lt;see langword=&quot;null&quot; /&gt; if the requested section group does not exist.">지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" />입니다. 또는 요청된 섹션 그룹이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary vsli:raw="Gets a value that indicates whether a file exists for the resource represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체가 나타내는 리소스에 대한 파일이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 파일이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary vsli:raw="Gets the locations defined within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 정의된 위치를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; containing the locations defined within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 개체에 정의된 위치를 포함하는 <see cref="T:System.Configuration.Configuration" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary vsli:raw="Gets or sets a value indicating whether the configuration file has an XML namespace.">구성 파일에 XML 네임스페이스가 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration file has an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 파일에 XML 네임스페이스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary vsli:raw="Gets the root &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 루트 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
      <returns vsli:raw="The root section group for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체의 루트 섹션 그룹입니다.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 현재 XML 구성 파일에 씁니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">구성 파일에 쓸 수 없는 경우
또는
구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 현재 XML 구성 파일에 씁니다.</summary>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">구성 파일에 쓸 수 없는 경우
또는
구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 현재 XML 구성 파일에 씁니다.</summary>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <param name="forceSaveAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to save even if the configuration was not modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성이 수정되지 않은 경우에도 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">구성 파일에 쓸 수 없는 경우
또는
구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 지정된 XML 구성 파일에 씁니다.</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">구성 파일을 저장할 경로와 파일 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">구성 파일에 쓸 수 없는 경우
또는
구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 지정된 XML 구성 파일에 씁니다.</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">구성 파일을 저장할 경로와 파일 이름입니다.</param>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">구성 파일에 쓸 수 없는 경우
또는
구성 파일이 변경된 경우</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">이 <see cref="T:System.Configuration.Configuration" /> 개체에 포함된 구성 설정을 지정된 XML 구성 파일에 씁니다.</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">구성 파일을 저장할 경로와 파일 이름입니다.</param>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">저장할 속성 값을 결정하는 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 값입니다.</param>
      <param name="forceSaveAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to save even if the configuration was not modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성이 수정되지 않은 경우에도 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="filename" />가 null이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary vsli:raw="Gets a collection of the section groups defined by this configuration.">이 구성에서 정의하는 섹션 그룹의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; collection representing the collection of section groups for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체에 대한 섹션 그룹의 컬렉션을 나타내는 <see cref="T:System.Configuration.Configuration" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary vsli:raw="Gets a collection of the sections defined by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체에서 정의하는 섹션의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of the sections defined by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">이 <see cref="T:System.Configuration.Configuration" /> 개체에서 정의하는 섹션의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary vsli:raw="Gets or sets the targeted version of .NET when a version earlier than the current one is targeted.">현재 버전보다 이전 버전을 대상으로 하는 경우 .NET Framework의 대상 버전을 지정합니다.</summary>
      <returns vsli:raw="The name of the targeted version of .NET. The default value is &lt;see langword=&quot;null&quot; /&gt;, which indicates that the current version is targeted.">.NET Framework의 대상 버전 이름입니다. 기본값은 <see langword="null" />로, 현재 버전이 대상으로 지정됨을 나타냅니다.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary vsli:raw="Specifies a function delegate that is used to transform type strings in configuration files.">구성 파일의 서식 문자열을 변환하는 데 사용되는 함수 대리자를 지정합니다.</summary>
      <returns vsli:raw="A delegate that transforms type strings. The default value is &lt;see langword=&quot;null&quot; /&gt;.">서식 문자열을 변환하는 대리자입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary vsli:raw="Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 포함된 속성을 설정하거나 재정의할 수 있는 구성 파일 계층 구조의 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined anywhere.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 어느 위치에든 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined only in the Machine.config file.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일에만 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in either the Machine.config file, the machine-level Web.config file found in the same directory as Machine.config, or the top-level application Web.config file found in the virtual-directory root, but not in subdirectories of a virtual root.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일, Machine.config와 같은 디렉터리에 있는 컴퓨터 수준 Web.config 파일 또는 가상 디렉터리 루트에 있는 최상위 수준 애플리케이션 Web.config 파일에 정의할 수 있지만 가상 루트의 하위 디렉터리에는 정의할 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in either the Machine.config file or the machine-level Web.config file found in the same directory as Machine.config, but not in application Web.config files.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일이나 Machine.config와 같은 디렉터리에 있는 컴퓨터 수준 Web.config 파일에 정의할 수 있지만 애플리케이션 Web.config 파일에는 정의할 수 없습니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary vsli:raw="Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 포함된 속성을 설정하거나 재정의할 수 있는 구성 파일 계층 구조의 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined only in the Machine.config file.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일에만 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined either in the Machine.config file or in the Exe.config file in the client application directory. This is the default value.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일이나 클라이언트 애플리케이션 디렉터리의 Exe.config 파일에 정의할 수 있습니다. 기본값입니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in the Machine.config file, in the Exe.config file in the client application directory, in the User.config file in the roaming user directory, or in the User.config file in the local user directory.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일, 클라이언트 애플리케이션 디렉터리의 Exe.config 파일, 로밍 사용자 디렉터리의 User.config 파일 또는 로컬 사용자 디렉터리의 User.config 파일에 정의할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in the Machine.config file, in the Exe.config file in the client application directory, or in the User.config file in the roaming user directory.">
        <see cref="T:System.Configuration.ConfigurationSection" />을 Machine.config 파일, 클라이언트 애플리케이션 디렉터리의 Exe.config 파일 또는 로밍 사용자 디렉터리의 User.config 파일에 정의할 수 있습니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary vsli:raw="Declaratively instructs .NET to create an instance of a configuration element collection. This class cannot be inherited.">구성 요소 컬렉션의 인스턴스를 만들도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="itemType" vsli:raw="The type of the property collection to create.">만들 속성 컬렉션의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;itemType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="itemType" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary vsli:raw="Gets or sets the name of the &lt;see langword=&quot;&amp;lt;add&amp;gt;&quot; /&gt; configuration element.">
        <see langword="&lt;add&gt;" /> 구성 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name that substitutes the standard name &quot;add&quot; for the configuration item.">구성 항목의 표준 이름 "add"를 대체하는 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary vsli:raw="Gets or sets the name for the &lt;see langword=&quot;&amp;lt;clear&amp;gt;&quot; /&gt; configuration element.">
        <see langword="&lt;clear&gt;" /> 구성 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name that replaces the standard name &quot;clear&quot; for the configuration item.">구성 항목의 표준 이름 "clear"를 대체하는 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary vsli:raw="Gets or sets the type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 특성의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />의 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary vsli:raw="Gets the type of the collection element.">컬렉션 요소의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the collection element.">컬렉션 요소의 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary vsli:raw="Gets or sets the name for the &lt;see langword=&quot;&amp;lt;remove&amp;gt;&quot; /&gt; configuration element.">
        <see langword="&lt;remove&gt;" /> 구성 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name that replaces the standard name &quot;remove&quot; for the configuration element.">구성 요소의 표준 이름 "remove"를 대체하는 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary vsli:raw="The base class for the configuration converter types.">구성 변환기 형식의 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationConverterBase&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationConverterBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether the conversion is allowed.">변환이 허용되는지 여부를 확인합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to convert from.">변환할 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the conversion is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">변환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether the conversion is allowed.">변환이 허용되는지 여부를 확인합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversion.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the conversion is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">변환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary vsli:raw="Represents a configuration element within a configuration file.">구성 파일의 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary vsli:raw="Gets a reference to the top-level &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; instance that represents the configuration hierarchy that the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance belongs to.">현재 <see cref="T:System.Configuration.Configuration" /> 인스턴스가 속해 있는 구성 계층 구조를 나타내는 최상위 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스에 대한 참조를 가져옵니다.</summary>
      <returns vsli:raw="The top-level &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; instance that the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance belongs to.">현재 <see cref="T:System.Configuration.Configuration" /> 인스턴스가 속해 있는 최상위 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads XML from the configuration file.">구성 파일에서 XML을 읽습니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that reads from the configuration file.">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize only the collection key properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 키 속성만 serialize하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element to read is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; An attribute of the current node is not recognized.  &#xA;  &#xA;-or-&#xA;  &#xA; The lock status of the current node cannot be determined.">읽을 요소가 잠겨 있는 경우
또는
현재 노드의 특성이 인식되지 않는 경우
또는
현재 노드의 잠금 상태를 확인할 수 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.ElementInformation&quot; /&gt; object that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.ElementInformation" /> 개체의 사용자 지정할 수 없는 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.ElementInformation&quot; /&gt; that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ElementInformation" />의 사용자 지정할 수 없는 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; object that represents the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object itself.">
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> 개체 자체를 나타내는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; that represents the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; itself.">
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> 자체를 나타내는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance to the specified object.">현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스를 지정된 개체와 비교합니다.</summary>
      <param name="compareTo" vsli:raw="The object to compare with.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object to compare with is equal to the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">비교할 개체가 현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.ContextInformation" /> 개체의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ContextInformation" />에 대한 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The current element is not associated with a context.">현재 요소가 컨텍스트와 연관이 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance.">현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns vsli:raw="A unique value representing the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance.">현재 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary vsli:raw="Returns the transformed version of the specified assembly name.">지정된 어셈블리 이름의 변환된 버전을 반환합니다.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly.">어셈블리의 이름입니다.</param>
      <returns vsli:raw="The transformed version of the assembly name. If no transformer is available, the &lt;paramref name=&quot;assemblyName&quot; /&gt; parameter value is returned unchanged. The &lt;see cref=&quot;P:System.Configuration.Configuration.TypeStringTransformer&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; if no transformer is available.">어셈블리 이름의 변환된 버전입니다. 변환기를 사용할 수 없으면 <paramref name="assemblyName" /> 매개 변수 값이 변경되지 않은 상태로 반환됩니다. 변환기를 사용할 수 없는 경우 <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> 속성은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary vsli:raw="Returns the transformed version of the specified type name.">지정된 형식 이름의 변환된 버전을 반환합니다.</summary>
      <param name="typeName" vsli:raw="The name of the type.">형식의 이름입니다.</param>
      <returns vsli:raw="The transformed version of the specified type name. If no transformer is available, the &lt;paramref name=&quot;typeName&quot; /&gt; parameter value is returned unchanged. The &lt;see cref=&quot;P:System.Configuration.Configuration.TypeStringTransformer&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; if no transformer is available.">지정된 형식 이름의 변환된 버전입니다. 변환기를 사용할 수 없으면 <paramref name="typeName" /> 매개 변수 값이 변경되지 않은 상태로 반환됩니다. 변환기를 사용할 수 없는 경우 <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> 속성은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Configuration.ConfigurationElement.CurrentConfiguration&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> 속성이 <see langword="null" />인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="false if the &lt;see cref=&quot;P:System.Configuration.ConfigurationElement.CurrentConfiguration&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> 속성이 <see langword="null" />이면 false이고, 그렇지 않으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object to its initial state.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 초기 상태로 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary vsli:raw="Used to initialize a default set of values for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체 값의 기본 집합을 초기화하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary vsli:raw="Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.">파생 클래스에서 구현될 때 이 구성 요소가 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is read-only.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary vsli:raw="Gets or sets a property or attribute of this configuration element.">이 구성 요소의 속성이나 특성을 가져오거나 설정합니다.</summary>
      <param name="prop" vsli:raw="The property to access.">액세스할 속성입니다.</param>
      <returns vsli:raw="The specified property, attribute, or child element.">지정된 속성, 특성 또는 자식 요소입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or does not exist within the element.">
        <paramref name="prop" />가 <see langword="null" />이거나 요소 내에 없는 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is read only or locked.">
        <paramref name="prop" />가 읽기 전용이거나 잠겨 있는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary vsli:raw="Gets or sets a property, attribute, or child element of this configuration element.">이 구성 요소의 속성, 특성 또는 자식 요소를 가져오거나 설정합니다.</summary>
      <param name="propertyName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to access.">액세스할 <see cref="T:System.Configuration.ConfigurationProperty" />의 이름입니다.</param>
      <returns vsli:raw="The specified property, attribute, or child element.">지정된 속성, 특성 또는 자식 요소입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is read-only or locked.">
        <paramref name="prop" />가 읽기 전용이거나 잠겨 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary vsli:raw="Adds the invalid-property errors in this &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object, and in all subelements, to the passed list.">이 <see cref="T:System.Configuration.ConfigurationElement" /> 개체와 모든 하위 요소의 잘못된 속성 오류를 전달된 목록에 추가합니다.</summary>
      <param name="errorList" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; interface.">
        <see cref="T:System.Collections.IList" /> 인터페이스를 구현하는 개체</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary vsli:raw="Gets the collection of locked attributes.">잠긴 특성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked attributes (properties) for the element.">요소에 대한 잠긴 특성(속성)의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary vsli:raw="Gets the collection of locked elements.">잠긴 요소의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked elements.">잠긴 요소의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary vsli:raw="Gets the collection of locked attributes.">잠긴 특성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked attributes (properties) for the element.">요소에 대한 잠긴 특성(속성)의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary vsli:raw="Gets the collection of locked elements.">잠긴 요소의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked elements.">잠긴 요소의 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary vsli:raw="Gets or sets a value indicating whether the element is locked.">요소가 잠겨 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">요소가 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element has already been locked at a higher configuration level.">요소가 더 높은 구성 수준에서 이미 잠겨 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary vsli:raw="Gets a value indicating whether an unknown attribute is encountered during deserialization.">deserialize하는 동안 알 수 없는 특성을 발견했는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the unrecognized attribute.">인식할 수 없는 특성의 이름입니다.</param>
      <param name="value" vsli:raw="The value of the unrecognized attribute.">인식할 수 없는 특성의 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when an unknown attribute is encountered while deserializing; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">deserialize하는 동안 알 수 없는 특성을 발견하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value indicating whether an unknown element is encountered during deserialization.">deserialize하는 동안 알 수 없는 요소를 발견했는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="elementName" vsli:raw="The name of the unknown subelement.">알 수 없는 하위 요소의 이름입니다.</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; being used for deserialization.">deserialization에 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when an unknown element is encountered while deserializing; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">deserialize하는 동안 알 수 없는 요소를 발견하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element identified by &lt;paramref name=&quot;elementName&quot; /&gt; is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; One or more of the element's attributes is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;elementName&quot; /&gt; is unrecognized, or the element has an unrecognized attribute.  &#xA;  &#xA;-or-&#xA;  &#xA; The element has a Boolean attribute with an invalid value.  &#xA;  &#xA;-or-&#xA;  &#xA; An attempt was made to deserialize a property more than once.  &#xA;  &#xA;-or-&#xA;  &#xA; An attempt was made to deserialize a property that is not a valid member of the element.  &#xA;  &#xA;-or-&#xA;  &#xA; The element cannot contain a CDATA or text element.">
        <paramref name="elementName" />에 의해 식별된 요소가 잠겨 있는 경우
또는
요소의 특성이 하나 이상 잠겨 있는 경우
또는
<paramref name="elementName" />이 인식되지 않거나 요소에 인식되지 않는 특성이 있는 경우
또는
요소에 잘못된 값을 가진 부울 특성이 있는 경우
또는
속성을 여러 번 deserialize하려고 한 경우
또는
올바른 요소 멤버가 아닌 속성을 deserialize하려고 한 경우
또는
요소에 CDATA 또는 텍스트 요소가 포함될 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary vsli:raw="Throws an exception when a required property is not found.">필수 속성이 없으면 예외를 throw합니다.</summary>
      <param name="name" vsli:raw="The name of the required attribute that was not found.">찾을 수 없는 필요한 특성의 이름입니다.</param>
      <returns>없음</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="In all cases.">모든 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary vsli:raw="Called after deserialization.">deserialization 후에 호출됩니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary vsli:raw="Called before serialization.">serialization 전에 호출됩니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that will be used to serialize the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />를 serialize하는 데 사용할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary vsli:raw="Gets the collection of properties.">속성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; of properties for the element.">요소에 대한 속성의 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Resets the internal state of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object, including the locks and the properties collections.">잠금 및 속성 컬렉션을 비롯하여 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 내부 상태를 다시 설정합니다.</summary>
      <param name="parentElement" vsli:raw="The parent node of the configuration element.">구성 요소의 부모 노드입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsModified&quot; /&gt; method to &lt;see langword=&quot;false&quot; /&gt; when implemented in a derived class.">파생 클래스에서 구현되는 경우 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 메서드의 값을 <see langword="false" />로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the contents of this configuration element to the configuration file when implemented in a derived class.">파생 클래스에서 구현될 때 구성 요소의 내용을 구성 파일에 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes to the configuration file.">구성 파일에 작성하는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize only the collection key properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 키 속성만 serialize하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any data was actually serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">데이터가 실제로 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The current attribute is locked at a higher configuration level.">현재 특성이 더 높은 구성 수준에서 잠겨 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary vsli:raw="Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.">파생 클래스에서 구현될 때 구성 요소의 외부 태그를 구성 파일에 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes to the configuration file.">구성 파일에 작성하는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to be written.">쓸 <see cref="T:System.Configuration.ConfigurationElement" />의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writing was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">쓰기에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The element has multiple child elements.">요소에 자식 요소가 여러 개인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary vsli:raw="Sets a property to the specified value.">속성을 지정된 값으로 설정합니다.</summary>
      <param name="prop" vsli:raw="The element property to set.">설정할 요소 속성입니다.</param>
      <param name="value" vsli:raw="The value to assign to the property.">속성에 할당할 값입니다.</param>
      <param name="ignoreLocks" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the locks on the property should be ignored; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성에 대한 잠금이 무시되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs if the element is read-only or &lt;paramref name=&quot;ignoreLocks&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; but the locks cannot be ignored.">요소가 읽기 전용이거나 <paramref name="ignoreLocks" />가 <see langword="true" />이지만 잠금을 무시할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary vsli:raw="Sets the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsReadOnly&quot; /&gt; property for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object and all subelements.">
        <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> 개체와 모든 하위 요소에 대한 <see cref="T:System.Configuration.ConfigurationElement" /> 속성을 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Modifies the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object to remove all values that should not be saved.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 수정하여 저장되지 않아야 하는 값을 모두 제거합니다.</summary>
      <param name="sourceElement" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the current level containing a merged view of the properties.">속성의 병합된 뷰를 포함하는 현재 수준의 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <param name="parentElement" vsli:raw="The parent &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if this is the top level.">부모 <see cref="T:System.Configuration.ConfigurationElement" />이거나, 최상위 수준인 경우 <see langword="null" />입니다.</param>
      <param name="saveMode" vsli:raw="One of the enumeration values that determines which property values to include.">포함할 속성 값을 결정하는 열거형 값 중 하나입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary vsli:raw="Represents a configuration element containing a collection of child elements.">자식 요소의 컬렉션을 포함하는 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; comparer to use.">사용할 <see cref="T:System.Collections.IComparer" /> 비교자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparer" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the add operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElement" />의 추가 작업과 연결할 <see cref="T:System.Configuration.ConfigurationElementCollection" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the element.">요소의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">선택한 값이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Adds a configuration element to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">구성 요소를 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 추가합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">추가할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary vsli:raw="Adds a configuration element to the configuration element collection.">구성 요소를 구성 요소 컬렉션에 추가합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">추가할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <param name="throwIfExists" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; specified is already contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 포함되어 있는 경우 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add already exists in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; and the &lt;paramref name=&quot;throwIfExists&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">추가할 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 이미 있고 <paramref name="throwIfExists" /> 매개 변수가 <see langword="true" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Adds a configuration element to the configuration element collection.">구성 요소를 구성 요소 컬렉션에 추가합니다.</summary>
      <param name="index" vsli:raw="The index location at which to add the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />를 추가할 인덱스 위치입니다.</param>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">추가할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary vsli:raw="Removes all configuration element objects from the collection.">컬렉션에서 구성 요소 개체를 모두 제거합니다.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.  &#xA;  &#xA;-or-&#xA;  &#xA; A collection item has been locked in a higher-level configuration.">구성이 읽기 전용인 경우
또는
컬렉션 항목이 상위 수준 구성에서 잠긴 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary vsli:raw="Gets the configuration element at the specified index location.">지정된 인덱스 위치에 있는 구성 요소를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to return.">반환할 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스 위치입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; There is no &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" />가 <see langword="0" />보다 작은 경우
또는
지정된 <paramref name="index" />에 <see cref="T:System.Configuration.ConfigurationElement" />가 없습니다.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary vsli:raw="Returns the configuration element with the specified key.">지정된 키가 있는 구성 요소를 반환합니다.</summary>
      <param name="key" vsli:raw="The key of the element to return.">반환할 요소의 키입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 있으면 해당 요소이거나, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary vsli:raw="Returns an array of the keys for all of the configuration elements contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 포함된 모든 구성 요소의 키 배열을 반환합니다.</summary>
      <returns vsli:raw="An array that contains the keys for all of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; objects contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" />에 포함된 모든 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 개체의 키를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary vsli:raw="Gets the key for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index location.">지정된 인덱스 위치에 있는 <see cref="T:System.Configuration.ConfigurationElement" />의 키를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index location for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스 위치입니다.</param>
      <returns vsli:raw="The key for the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />의 키입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; There is no &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" />가 <see langword="0" />보다 작은 경우
또는
지정된 <paramref name="index" />에 <see cref="T:System.Configuration.ConfigurationElement" />가 없습니다.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates the index of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스를 나타냅니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; for the specified index location.">지정된 인덱스 위치에 대한 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;; otherwise, -1.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스이거나, -1입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key has been removed from the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에서 제거되었는지 여부를 나타냅니다.</summary>
      <param name="key" vsli:raw="The key of the element to check.">확인할 요소의 키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key has been removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; from the collection.">컬렉션에서 <see cref="T:System.Configuration.ConfigurationElement" />를 제거합니다.</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to remove.">제거할 <see cref="T:System.Configuration.ConfigurationElement" />의 키입니다.</param>
      <exception cref="T:System.Exception" vsli:raw="No &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; is not &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt;.">지정된 키가 있는 <see cref="T:System.Configuration.ConfigurationElement" />가 컬렉션에 없거나, 요소가 이미 제거되었거나, 요소의 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 값이 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />이 아니기 때문에 요소를 제거할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index location.">지정된 인덱스 위치에서 <see cref="T:System.Configuration.ConfigurationElement" />를 제거합니다.</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to remove.">제거할 <see cref="T:System.Configuration.ConfigurationElement" />의 인덱스 위치입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt; or greater than the number of &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; objects in the collection.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object has already been removed.  &#xA;  &#xA;-or-&#xA;  &#xA; The value of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object has been locked at a higher level.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object was inherited.  &#xA;  &#xA;-or-&#xA;  &#xA; The value of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object's &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; is not &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt; or &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate&quot; /&gt;.">구성이 읽기 전용인 경우
또는
<paramref name="index" />가 <see langword="0" />보다 작거나 컬렉션의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체 수보다 큰 경우
또는
<see cref="T:System.Configuration.ConfigurationElement" /> 개체가 이미 제거된 경우
또는
<see cref="T:System.Configuration.ConfigurationElement" /> 개체의 값이 더 높은 수준에서 잠긴 경우
또는
<see cref="T:System.Configuration.ConfigurationElement" /> 개체가 상속된 경우
또는
<see cref="T:System.Configuration.ConfigurationElement" /> 개체의 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 값이 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 또는 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />가 아닌 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the clear operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElement" />의 지우기 작업과 연결할 <see cref="T:System.Configuration.ConfigurationElementCollection" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the element.">요소의 이름을 나타내며</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">선택한 값이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary vsli:raw="Gets the type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; of this collection.">이 컬렉션의 <see cref="T:System.Configuration.ConfigurationElementCollectionType" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary vsli:raw="Copies the contents of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to an array.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 내용을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="Array to which to copy the contents of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 내용을 복사할 배열입니다.</param>
      <param name="index" vsli:raw="Index location at which to begin copying.">복사를 시작할 인덱스 위치입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary vsli:raw="Gets the number of elements in the collection.">컬렉션의 요소 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of elements in the collection.">컬렉션의 요소 수입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary vsli:raw="When overridden in a derived class, creates a new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">파생 클래스에서 재정의할 때 새 <see cref="T:System.Configuration.ConfigurationElement" />를 만듭니다.</summary>
      <returns vsli:raw="A newly created &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">새로 만든 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; when overridden in a derived class.">파생 클래스에서 재정의될 때 새 <see cref="T:System.Configuration.ConfigurationElement" />를 만듭니다.</summary>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to create.">만들 <see cref="T:System.Configuration.ConfigurationElement" />의 이름입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with a specified name.">지정된 이름을 가진 새 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary vsli:raw="Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.">파생 클래스에서 재정의될 때 구성 파일에서 이 요소 컬렉션을 식별하는 데 사용되는 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the collection; otherwise, an empty string. The default is an empty string.">컬렉션의 이름이거나, 빈 문자열입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary vsli:raw="Gets or sets a value that specifies whether the collection has been cleared.">컬렉션이 지워졌는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection has been cleared; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">컬렉션이 지워졌으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.">구성이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary vsli:raw="Compares the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to the specified object.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />을 지정된 개체와 비교합니다.</summary>
      <param name="compareTo" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object to compare with is equal to the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">비교할 개체가 현재 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Gets the element key for a specified configuration element when overridden in a derived class.">파생 클래스에서 재정의될 때 지정된 구성 요소의 요소 키를 가져옵니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to return the key for.">키를 반환할 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that acts as the key for the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">지정된 <see cref="T:System.Object" />의 키로 사용되는 <see cref="T:System.Configuration.ConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; which is used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />을 반복하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationElementCollection" />를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; which is used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />을 반복하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationElementCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; current instance.">현재 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; exists in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />가 <see cref="T:System.Configuration.ConfigurationElementCollection" />에 있는지 여부를 나타냅니다.</summary>
      <param name="elementName" vsli:raw="The name of the element to verify.">확인할 요소의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">요소가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; can be removed from the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">지정한 <see cref="T:System.Configuration.ConfigurationElement" />를 <see cref="T:System.Configuration.ConfigurationElementCollection" />에서 제거할 수 있는지 여부를 나타냅니다.</summary>
      <param name="element" vsli:raw="The element to check.">확인할 요소입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; can be removed from this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationElement" />를 이 <see cref="T:System.Configuration.ConfigurationElementCollection" />에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; has been modified since it was last saved or loaded when overridden in a derived class.">파생 클래스에서 재정의될 때 이 <see cref="T:System.Configuration.ConfigurationElementCollection" />이 마지막으로 저장되거나 로드된 후 수정되었는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any contained element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">포함된 요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object is read only.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 개체가 읽기 전용인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized.">컬렉션에 대한 액세스가 동기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Causes the configuration system to throw an exception.">구성 시스템에서 예외를 throw하도록 합니다.</summary>
      <param name="elementName" vsli:raw="The name of the unrecognized element.">인식할 수 없는 요소의 이름입니다.</param>
      <param name="reader" vsli:raw="An input stream that reads XML from the configuration file.">구성 파일에서 XML을 읽는 입력 스트림입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the unrecognized element was deserialized successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">인식할 수 없는 요소가 성공적으로 deserialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element specified in &lt;paramref name=&quot;elementName&quot; /&gt; is the &lt;see langword=&quot;&amp;lt;clear&amp;gt;&quot; /&gt; element.">
        <paramref name="elementName" />에 지정된 요소가 <see langword="&lt;clear&gt;" /> 요소인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;elementName&quot; /&gt; starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">
        <paramref name="elementName" />이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the remove operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElement" />의 제거 작업과 연결할 <see cref="T:System.Configuration.ConfigurationElementCollection" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the element.">요소의 이름을 나타내며</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">선택한 값이 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to its unmodified state when overridden in a derived class.">파생 클래스에서 재정의될 때 <see cref="T:System.Configuration.ConfigurationElementCollection" />을 수정되지 않은 상태로 다시 설정합니다.</summary>
      <param name="parentElement" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; representing the collection parent element, if any; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">컬렉션 부모 요소를 나타내는 <see cref="T:System.Configuration.ConfigurationElement" />가 있으면 해당 요소이고, 그렇지 않으면 <see langword="null" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElementCollection.IsModified&quot; /&gt; property to &lt;see langword=&quot;false&quot; /&gt; when overridden in a derived class.">파생 클래스에서 재정의될 때 <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> 속성의 값을 <see langword="false" />로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the configuration data to an XML element in the configuration file when overridden in a derived class.">파생 클래스에서 재정의될 때 구성 파일의 XML 요소에 구성 데이터를 씁니다.</summary>
      <param name="writer" vsli:raw="Output stream that writes XML to the configuration file.">구성 파일에 XML을 기록하는 출력 스트림입니다.</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the collection key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 키를 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; was written to the configuration file successfully.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />이 구성 파일에 성공적으로 쓰여졌으면 <see langword="true" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the elements in the collection was added or replaced and starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">컬렉션에 있는 요소 중 하나가 추가 또는 대체되었고 예약된 접두사 "config" 또는 "lock"으로 시작하는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary vsli:raw="Sets the &lt;see cref=&quot;M:System.Configuration.ConfigurationElementCollection.IsReadOnly&quot; /&gt; property for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object and for all sub-elements.">
        <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> 개체와 모든 하위 요소에 대해 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 속성을 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary vsli:raw="Gets an object used to synchronize access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 대한 액세스를 동기화하는 데 사용되는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object used to synchronize access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to an array.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />을 배열에 복사합니다.</summary>
      <param name="arr" vsli:raw="Array to which to copy this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationElementCollection" />을 복사할 배열입니다.</param>
      <param name="index" vsli:raw="Index location at which to begin copying.">복사를 시작할 인덱스 위치입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary vsli:raw="Gets a value indicating whether an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; will cause an exception to be thrown.">
        <see cref="T:System.Configuration.ConfigurationElement" />에 중복 <see cref="T:System.Configuration.ConfigurationElementCollection" />를 추가하려고 하면 예외가 throw되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; will cause an exception to be thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationElement" />에 중복 <see cref="T:System.Configuration.ConfigurationElementCollection" />를 추가하려고 할 때 예외가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Reverses the effect of merging configuration information from different levels of the configuration hierarchy.">구성 계층 구조의 여러 수준에서 구성 정보를 병합한 결과를 되돌립니다.</summary>
      <param name="sourceElement" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object at the current level containing a merged view of the properties.">속성의 병합된 뷰를 포함하는 현재 수준의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체입니다.</param>
      <param name="parentElement" vsli:raw="The parent &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object of the current element, or &lt;see langword=&quot;null&quot; /&gt; if this is the top level.">현재 요소의 부모 <see cref="T:System.Configuration.ConfigurationElement" /> 개체이거나, 현재 요소가 최상위이면 <see langword="null" />입니다.</param>
      <param name="saveMode" vsli:raw="One of the enumeration value that determines which property values to include.">포함할 속성 값을 결정하는 열거형 값 중 하나입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary vsli:raw="Specifies the type of a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> 개체의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary vsli:raw="The default type of &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;. Collections of this type contain elements that can be merged across a hierarchy of configuration files. At any particular level within such a hierarchy, &lt;see langword=&quot;add&quot; /&gt;, &lt;see langword=&quot;remove&quot; /&gt;, and &lt;see langword=&quot;clear&quot; /&gt; directives are used to modify any inherited properties and specify new ones.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" />의 기본 형식입니다. 이 형식의 컬렉션에는 구성 파일의 계층 구조 전체에서 병합할 수 있는 요소가 포함되어 있습니다. 이러한 계층 구조의 특정 수준에서 <see langword="add" />, <see langword="remove" /> 및 <see langword="clear" /> 지시문을 사용하여 상속된 속성을 수정하고 새 속성을 지정할 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary vsli:raw="Same as &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt;, except that this type causes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object to sort its contents such that inherited elements are listed last.">상속된 요소가 마지막에 나열되도록 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 개체의 내용이 정렬되는 점을 제외하고 <see cref="T:System.Configuration.ConfigurationElementCollection" />과 같습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary vsli:raw="Collections of this type contain elements that apply to the level at which they are specified, and to all child levels. A child level cannot modify the properties specified by a parent element of this type.">이 형식의 컬렉션에는 지정된 수준과 모든 자식 수준에 적용되는 요소가 포함되어 있습니다. 자식 수준에서는 이 형식의 부모 요소에서 지정하는 속성을 수정할 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary vsli:raw="Same as &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.BasicMap&quot; /&gt;, except that this type causes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object to sort its contents such that inherited elements are listed last.">상속된 요소가 마지막에 나열되도록 <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" /> 개체의 내용이 정렬되는 점을 제외하고 <see cref="T:System.Configuration.ConfigurationElementCollection" />과 같습니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary vsli:raw="Specifies the property of a configuration element. This class cannot be inherited.">구성 요소의 속성을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; class, based on a supplied parameter.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validator" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validator" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object used to validate the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체의 유효성을 검사하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary vsli:raw="The exception that is thrown when a configuration error has occurred.">구성 오류가 발생한 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">deserialize할 정보를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current type is not a &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; or a &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt;.">현재 형식이 <see cref="T:System.Configuration.ConfigurationException" /> 또는 <see cref="T:System.Configuration.ConfigurationErrorsException" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 예외입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 내부 예외입니다.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 내부 예외입니다.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 내부 예외입니다.</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외를 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationErrorsException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>이 구성 예외가 throw된 이유에 대한 설명을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Configuration.ConfigurationErrorsException" />이 throw된 이유에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary vsli:raw="Gets a collection of errors that detail the reasons this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유를 설명하는 오류 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object that contains errors that identify the reasons this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Collections.ICollection" /> 예외가 throw된 이유를 식별하는 오류가 포함된 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary vsli:raw="Gets the path to the configuration file that caused this configuration exception to be thrown.">이 구성 예외를 throw시킨 구성 파일에 대한 경로를 가져옵니다.</summary>
      <returns vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; to be thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" />을 throw시킨 구성 파일에 대한 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체를 로드한 구성 파일에 대한 경로를 가져옵니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns vsli:raw="The path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체를 로드한 구성 파일에 대한 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary vsli:raw="Gets the path to the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; was reading when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlReader" />가 읽고 있던 구성 파일에 대한 경로를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns vsli:raw="The path of the configuration file the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was accessing when the exception occurred.">예외가 발생했을 때 내부 <see cref="T:System.Xml.XmlReader" /> 개체가 액세스하고 있던 구성 파일의 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object represented when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체가 나타낸 구성 파일의 줄 번호를 가져옵니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns vsli:raw="The line number within the configuration file that contains the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object being parsed when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 구문 분석되고 있던 <see cref="T:System.Xml.XmlNode" /> 개체를 포함하는 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was processing when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlReader" /> 개체가 처리하고 있던 구성 파일의 줄 번호를 가져옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlReader" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 개체입니다.</param>
      <returns vsli:raw="The line number within the configuration file that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was accessing when the exception occurred.">예외가 발생했을 때 <see cref="T:System.Xml.XmlReader" /> 개체가 액세스하고 있던 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and line number at which this configuration exception occurred.">이 구성 예외가 발생한 파일 이름과 줄 번호를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info" vsli:raw="The object that holds the information to be serialized.">serialize할 정보를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary vsli:raw="Gets the line number within the configuration file at which this configuration exception was thrown.">이 구성 예외가 throw된 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary vsli:raw="Gets an extended description of why this configuration exception was thrown.">이 구성 예외가 throw된 이유에 대한 자세한 설명을 가져옵니다.</summary>
      <returns vsli:raw="An extended description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 예외가 throw된 이유에 대한 자세한 설명입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary vsli:raw="The exception that is thrown when a configuration system error has occurred.">구성 시스템 오류가 발생한 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">deserialize할 정보를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 내부 예외가 있으면 해당 예외입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 내부 예외가 있으면 해당 예외입니다.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" />이 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 내부 예외가 있으면 해당 예외입니다.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">이 <see cref="T:System.Xml.XmlNode" />이 throw되도록 만든 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">이 <see cref="T:System.Configuration.ConfigurationException" />을 throw시킨 구성 파일에 대한 경로입니다.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" />이 throw된 구성 파일의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">이 <see cref="T:System.Xml.XmlNode" />이 throw되도록 만든 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary vsli:raw="Gets a description of why this configuration exception was thrown.">이 구성 예외가 throw된 이유에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="A description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary vsli:raw="Gets the path to the configuration file that caused this configuration exception to be thrown.">이 구성 예외를 throw시킨 구성 파일에 대한 경로를 가져옵니다.</summary>
      <returns vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외를 throw시킨 구성 파일에 대한 경로입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and line number at which this configuration exception occurred.">이 구성 예외가 발생한 파일 이름과 줄 번호를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info" vsli:raw="The object that holds the information to be serialized.">serialize할 정보를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체를 로드한 구성 파일에 대한 경로를 가져옵니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; representing the node file name.">노드 파일 이름을 나타내는 <see langword="string" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object represented when this configuration exception was thrown.">이 구성 예외가 throw되었을 때 내부 <see cref="T:System.Xml.XmlNode" /> 개체가 나타낸 구성 파일의 줄 번호를 가져옵니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">이 <see cref="T:System.Xml.XmlNode" /> 예외를 throw시킨 <see cref="T:System.Configuration.ConfigurationException" />입니다.</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; representing the node line number.">노드 줄 번호를 나타내는 <see langword="int" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary vsli:raw="Gets the line number within the configuration file at which this configuration exception was thrown.">이 구성 예외가 throw된 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary vsli:raw="Gets an extended description of why this configuration exception was thrown.">이 구성 예외가 throw된 이유에 대한 자세한 설명을 가져옵니다.</summary>
      <returns vsli:raw="An extended description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">이 <see cref="T:System.Configuration.ConfigurationException" /> 예외가 throw된 이유에 대한 자세한 설명입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary vsli:raw="Defines the configuration file mapping for the machine configuration file.">컴퓨터 구성 파일의 구성 파일 매핑을 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; class based on the supplied parameter.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.ConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="machineConfigFilename" vsli:raw="The name of the machine configuration file.">컴퓨터 구성 파일의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary vsli:raw="Creates a copy of the existing &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; object.">기존 <see cref="T:System.Configuration.ConfigurationFileMap" /> 개체의 복사본을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationFileMap" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary vsli:raw="Gets or sets the name of the machine configuration file name.">컴퓨터 구성 파일의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The machine configuration file name.">컴퓨터 구성 파일의 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary vsli:raw="Represents a &lt;see langword=&quot;location&quot; /&gt; element within a configuration file.">구성 파일에 있는 <see langword="location" /> 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary vsli:raw="Creates an instance of a Configuration object.">Configuration 개체의 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="A Configuration object.">Configuration 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary vsli:raw="Gets the relative path to the resource whose configuration settings are represented by this &lt;see cref=&quot;T:System.Configuration.ConfigurationLocation&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationLocation" /> 개체가 나타내는 구성 설정이 있는 리소스에 대한 상대 경로를 가져옵니다.</summary>
      <returns vsli:raw="The relative path to the resource whose configuration settings are represented by this &lt;see cref=&quot;T:System.Configuration.ConfigurationLocation&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationLocation" />이 나타내는 구성 설정이 있는 리소스에 대한 상대 경로입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; to return.">반환할 <see cref="T:System.Configuration.ConfigurationLocationCollection" />의 인덱스 위치입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationLocationCollection" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary vsli:raw="Contains a collection of locked configuration objects. This class cannot be inherited.">잠긴 구성 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary vsli:raw="Locks a configuration object by adding it to the collection.">구성 개체를 컬렉션에 추가하여 잠급니다.</summary>
      <param name="name" vsli:raw="The name of the configuration object.">구성 개체의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when the &lt;paramref name=&quot;name&quot; /&gt; does not match an existing configuration object within the collection.">
        <paramref name="name" />이 컬렉션의 기존 구성 개체와 일치하지 않는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary vsli:raw="Gets a list of configuration objects contained in the collection.">컬렉션에 포함된 구성 개체의 목록을 가져옵니다.</summary>
      <returns vsli:raw="A comma-delimited string that lists the lock configuration objects in the collection.">컬렉션에 있는 잠긴 구성 개체의 목록을 포함하는 쉼표로 구분된 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary vsli:raw="Clears all configuration objects from the collection.">컬렉션에서 구성 개체를 모두 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a specific configuration object is locked.">특정 구성 개체가 잠겨 있는지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration object to verify.">확인할 구성 개체의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; contains the specified configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" />에 지정된 구성 개체가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary vsli:raw="Gets the number of locked configuration objects contained in the collection.">컬렉션에 포함된 잠긴 구성 개체의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of locked configuration objects contained in the collection.">컬렉션에 포함된 잠긴 구성 개체의 수입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">이 <see cref="T:System.Collections.IEnumerator" /> 컬렉션을 반복하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> 개체</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary vsli:raw="Gets a value specifying whether the collection of locked objects has parent elements.">잠긴 개체의 컬렉션에 부모 요소가 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection has parent elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션에 부모 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary vsli:raw="Gets a value specifying whether the collection has been modified.">컬렉션이 수정되었는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary vsli:raw="Verifies whether a specific configuration object is read-only.">특정 구성 개체가 읽기 전용인지 여부를 확인합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration object to verify.">확인할 구성 개체의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified configuration object in the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션의 지정된 구성 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The specified configuration object is not in the collection.">컬렉션에 지정된 구성 개체가 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary vsli:raw="Gets a value specifying whether the collection is synchronized.">컬렉션이 동기화되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션이 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary vsli:raw="Removes a configuration object from the collection.">컬렉션에서 구성 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration object.">구성 개체의 이름입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when the &lt;paramref name=&quot;name&quot; /&gt; does not match an existing configuration object within the collection.">
        <paramref name="name" />이 컬렉션의 기존 구성 개체와 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary vsli:raw="Locks a set of configuration objects based on the supplied list.">제공된 목록에 따라 구성 개체의 집합을 잠급니다.</summary>
      <param name="attributeList" vsli:raw="A comma-delimited string.">쉼표로 구분된 문자열입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when an item in the &lt;paramref name=&quot;attributeList&quot; /&gt; parameter is not a valid lockable configuration attribute.">
        <paramref name="attributeList" /> 매개 변수의 항목이 잠글 수 있는 유효한 구성 특성이 아닌 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary vsli:raw="Gets an object used to synchronize access to this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">이 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object used to synchronize access to this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">이 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 컬렉션을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Configuration.ConfigurationLockCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary vsli:raw="Provides access to configuration files for client applications. This class cannot be inherited.">클라이언트 애플리케이션의 구성 파일에 액세스할 수 있도록 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; data for the current application's default configuration.">현재 애플리케이션의 기본 구성에 대한 <see cref="T:System.Configuration.AppSettingsSection" /> 데이터를 가져옵니다.</summary>
      <returns vsli:raw="The contents of the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object for the current application's default configuration.">현재 응용 프로그램의 기본 구성에 대 한 <see cref="T:System.Configuration.AppSettingsSection" /> 개체의 내용을 포함 하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Could not retrieve a &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; object with the application settings data.">애플리케이션 설정 데이터가 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체를 검색할 수 없습니다.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; data for the current application's default configuration.">현재 애플리케이션의 기본 구성에 대한 <see cref="T:System.Configuration.ConnectionStringsSection" /> 데이터를 가져옵니다.</summary>
      <returns vsli:raw="The contents of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; object for the current application's default configuration.">현재 응용 프로그램의 기본 구성에 대 한 <see cref="T:System.Configuration.ConnectionStringsSection" /> 개체의 내용을 포함 하는 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Could not retrieve a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체를 검색할 수 없습니다.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary vsli:raw="Retrieves a specified configuration section for the current application's default configuration.">현재 애플리케이션의 기본 구성에 대한 지정된 구성 섹션을 검색합니다.</summary>
      <param name="sectionName" vsli:raw="The configuration section path and name. Node names are separated by forward slashes, for example &quot;system.net/mailSettings/smtp&quot;.">구성 섹션 경로와 이름입니다. 노드 이름은 슬래시(예: "system.net/mailSettings/smtp")로 구분됩니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt; if the section does not exist.">지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체이거나, 섹션이 없으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary vsli:raw="Opens the configuration file for the current application as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">현재 애플리케이션의 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">구성을 열고 있는 <see cref="T:System.Configuration.ConfigurationUserLevel" />입니다.</param>
      <returns vsli:raw="The configuration file for the current application.">
        <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="exePath" vsli:raw="The path of the executable (exe) file.">실행(exe) 파일의 경로입니다.</param>
      <returns vsli:raw="The specified configuration file.">
        <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary vsli:raw="Opens the machine configuration file on the current computer as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">현재 컨퓨터의 컴퓨터 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <returns vsli:raw="The machine configuration file.">
        <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping and user level.">지정된 파일 매핑 및 사용자 수준을 사용하여 지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the application default configuration file.">애플리케이션 기본 구성 파일 대신 사용할 구성 파일을 참조하는 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</param>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">구성을 열고 있는 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 개체입니다.</param>
      <returns vsli:raw="The configuration object.">구성 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping, user level, and preload option.">지정된 파일 매핑, 사용자 수준 및 미리 로드 옵션을 사용하여 지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the default application configuration file.">애플리케이션 기본 구성 파일 대신 사용할 구성 파일을 참조하는 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</param>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">열려고 하는 구성의 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 개체입니다.</param>
      <param name="preLoad" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preload all section groups and sections; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">모든 섹션 그룹 및 섹션을 미리 로드하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The configuration object.">구성 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary vsli:raw="Opens the machine configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping.">컴퓨터 구성 파일을 지정된 파일 매핑을 사용하는 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the application default configuration file.">애플리케이션 기본 구성 파일 대신 사용할 구성 파일을 참조하는 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</param>
      <returns vsli:raw="The machine configuration file.">
        <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">구성 파일을 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary vsli:raw="Refreshes the named section so the next time that it is retrieved it will be re-read from disk.">명명된 섹션을 새로 고쳐서 다음에 검색할 때 디스크에서 다시 읽도록 합니다.</summary>
      <param name="sectionName" vsli:raw="The configuration section name or the configuration path and section name of the section to refresh.">구성 섹션 이름이거나 새로 고칠 섹션의 구성 경로 및 섹션 이름입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary vsli:raw="Represents an attribute or a child of a configuration element. This class cannot be inherited.">특성 또는 구성 요소의 자식을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">구성 엔터티의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">구성 엔터티의 형식입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">구성 엔터티의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">구성 엔터티의 기본값입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">구성 엔터티의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">구성 엔터티의 기본값입니다.</param>
      <param name="typeConverter" vsli:raw="The type of the converter to apply.">적용할 변환기의 형식입니다.</param>
      <param name="validator" vsli:raw="The validator to use.">사용할 유효성 검사기입니다.</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">구성 엔터티의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">구성 엔터티의 기본값입니다.</param>
      <param name="typeConverter" vsli:raw="The type of the converter to apply.">적용할 변환기의 형식입니다.</param>
      <param name="validator" vsli:raw="The validator to use.">사용할 유효성 검사기입니다.</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</param>
      <param name="description" vsli:raw="The description of the configuration entity.">구성 엔터티에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">구성 엔터티의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">구성 엔터티의 형식입니다.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">구성 엔터티의 기본값입니다.</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; used to convert this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; into an XML representation for writing to the configuration file.">이 <see cref="T:System.ComponentModel.TypeConverter" />를 구성 파일에 쓰기 위한 XML 표현으로 변환하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" />를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; used to convert this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; into an XML representation for writing to the configuration file.">이 <see cref="T:System.ComponentModel.TypeConverter" />를 구성 파일에 쓰기 위한 XML 표현으로 변환하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="This &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; cannot be converted.">이 <see cref="T:System.Configuration.ConfigurationProperty" />를 변환할 수 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary vsli:raw="Gets the default value for this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; property.">이 <see cref="T:System.Configuration.ConfigurationProperty" /> 속성의 기본값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be cast to the type specified by the &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; property.">
        <see cref="T:System.Object" /> 속성에서 지정하는 형식으로 캐스팅될 수 있는 <see cref="P:System.Configuration.ConfigurationProperty.Type" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary vsli:raw="Gets the description associated with the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationProperty" />와 연결된 설명을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that describes the property.">속성을 설명하는 <see langword="string" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary vsli:raw="Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.">이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 어셈블리 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property requires assembly name transformation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성의 어셈블리 이름을 변환해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary vsli:raw="Gets a value that indicates whether the property is the default collection of an element.">속성이 요소의 기본 컬렉션인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is the default collection of an element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 요소의 기본 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary vsli:raw="Gets a value indicating whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is the key for the containing &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationProperty" />가 포함하는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 키인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object is the key for the containing element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체가 포함하는 요소의 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary vsli:raw="Gets a value indicating whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is required.">이 <see cref="T:System.Configuration.ConfigurationProperty" />가 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationProperty" />가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary vsli:raw="Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.">이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 형식 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property requires type-name transformation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성의 형식 이름을 변환해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary vsli:raw="Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.">구성 속성을 XML로 serialize해야 하는지 확인하기 위해 serialization 시 구성 속성의 부모 구성 섹션을 쿼리할지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent configuration section should be queried; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">부모 구성 섹션을 쿼리해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationProperty" />의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationProperty" />의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary vsli:raw="Gets the type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">이 <see cref="T:System.Type" /> 개체의 형식을 나타내는 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt;, which is used to validate this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 개체의 유효성을 검사하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator, which is used to validate this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationValidatorBase" />의 유효성을 검사하는 데 사용되는 <see cref="T:System.Configuration.ConfigurationProperty" /> 유효성 검사기입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary vsli:raw="Declaratively instructs .NET to instantiate a configuration property. This class cannot be inherited.">구성 속성을 인스턴스화하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="Name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object defined.">정의된 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the decorated property.">데코레이팅된 속성의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The object representing the default value of the decorated configuration-element property.">데코레이팅된 구성 요소 속성의 기본값을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary vsli:raw="Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.">속성이 데코레이팅된 구성 속성의 기본 속성 컬렉션인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents the default collection of an element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">속성이 요소의 기본 컬렉션을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary vsli:raw="Gets or sets a value indicating whether this is a key property for the decorated element property.">속성이 데코레이팅된 요소 속성의 키 속성인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is a key property for an element of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">속성이 컬렉션의 요소에 대한 키 속성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary vsli:raw="Gets or sets a value indicating whether the decorated element property is required.">데코레이팅된 요소 속성이 필요한지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">속성이 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the decorated configuration-element property.">데코레이팅된 구성 요소 속성의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the decorated configuration-element property.">데코레이팅된 구성 요소 속성의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; for the decorated configuration-element property.">데코레이팅된 구성 요소 속성의 <see cref="T:System.Configuration.ConfigurationPropertyOptions" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values associated with the property.">속성과 연결된 <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary vsli:raw="Represents a collection of configuration-element properties.">구성 요소 속성의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary vsli:raw="Adds a configuration property to the collection.">컬렉션에 구성 속성을 추가합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to add.">추가할 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary vsli:raw="Removes all configuration property objects from the collection.">컬렉션에서 구성 속성 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Specifies whether the configuration property is contained in this collection.">구성 속성이 이 컬렉션에 포함되어 있는지 여부를 지정합니다.</summary>
      <param name="name" vsli:raw="An identifier for the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to verify.">확인할 <see cref="T:System.Configuration.ConfigurationProperty" />의 식별자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 <see cref="T:System.Configuration.ConfigurationProperty" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary vsli:raw="Copies this ConfigurationPropertyCollection to an array.">이 ConfigurationPropertyCollection을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="Array to which to copy.">복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="Index at which to begin copying.">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary vsli:raw="Gets the number of properties in the collection.">컬렉션의 속성 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of properties in the collection.">컬렉션의 속성 수입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets the collection item with the specified name.">지정된 이름을 갖는 컬렉션 항목을 가져옵니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to return.">반환할 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; with the specified &lt;paramref name=&quot;name&quot; /&gt;.">지정된 <paramref name="name" />의 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary vsli:raw="Removes a configuration property from the collection.">컬렉션에서 구성 속성을 제거합니다.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to remove.">제거할 <see cref="T:System.Configuration.ConfigurationProperty" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; was removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ConfigurationProperty" />가 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화할 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화할 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this collection to an array.">이 컬렉션을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array to which to copy.">복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">복사를 시작할 인덱스 위치입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary vsli:raw="Specifies the options to apply to a property.">속성에 적용할 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary vsli:raw="Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of .NET.">이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 어셈블리 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary vsli:raw="Indicates that the property is a default collection.">속성이 기본 컬렉션임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary vsli:raw="Indicates that the property is a collection key.">속성이 컬렉션 키임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary vsli:raw="Indicates that the property is required.">속성이 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary vsli:raw="Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of .NET.">이전 버전의 .NET Framework에 대해 serialize된 경우 구성 속성의 형식 이름을 변환해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary vsli:raw="Indicates whether the configuration property's parent configuration section should be queried at serialization time to determine whether the configuration property should be serialized into XML.">구성 속성을 XML로 serialize해야 하는지 확인하기 위해 serialization 시 구성 속성의 부모 구성 섹션을 쿼리할지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary vsli:raw="Indicates that no option applies to the property.">속성에 옵션이 적용되지 않음을 나타냅니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary vsli:raw="Determines which properties are written out to a configuration file.">구성 파일에 기록되는 속성을 결정합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary vsli:raw="Causes all properties to be written to the configuration file. This is useful mostly for creating information configuration files or moving configuration values from one machine to another.">모든 속성이 구성 파일에 기록되도록 합니다. 이것은 주로 구성 파일에 대한 정보를 만들거나 한 컴퓨터에서 다른 컴퓨터로 구성 값을 옮기는 데 유용합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary vsli:raw="Causes only properties that differ from inherited values to be written to the configuration file.">상속된 값과 다른 속성만 구성 파일에 기록되도록 합니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary vsli:raw="Causes only modified properties to be written to the configuration file, even when the value is the same as the inherited value.">속성 값이 상속된 값과 같은 경우에도 수정된 속성만 구성 파일에 기록되도록 합니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary vsli:raw="Represents a section within a configuration file.">구성 파일 내의 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML from the configuration file.">구성 파일에서 XML을 읽습니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object, which reads from the configuration file.">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; found no elements in the configuration file.">
        <paramref name="reader" />가 구성 파일에서 요소를 찾지 못한 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary vsli:raw="Returns a custom object when overridden in a derived class.">파생 클래스에서 재정의될 때 사용자 지정 개체를 반환합니다.</summary>
      <returns vsli:raw="The object representing the section.">섹션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary vsli:raw="Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.">이 구성 요소가 파생 클래스에서 구현되었을 때 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsModified&quot; /&gt; method to &lt;see langword=&quot;false&quot; /&gt; when implemented in a derived class.">파생 클래스에서 구현되는 경우 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 메서드의 값을 <see langword="false" />로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; object that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 개체의 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt;.">사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Creates an XML string containing an unmerged view of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object as a single section to write to a file.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열을 파일에 쓸 단일 섹션으로 만듭니다.</summary>
      <param name="parentElement" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance to use as the parent when performing the un-merge.">병합 취소를 수행할 때 부모로 사용할 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스입니다.</param>
      <param name="name" vsli:raw="The name of the section to create.">만들 섹션의 이름입니다.</param>
      <param name="saveMode" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; instance to use when writing to a string.">문자열에 쓸 때 사용할 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 인스턴스입니다.</param>
      <returns vsli:raw="An XML string containing an unmerged view of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 요소를 serialize할지 여부를 나타냅니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object that is a candidate for serialization.">serialization 후보인 <see cref="T:System.Configuration.ConfigurationElement" /> 개체입니다.</param>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object as it occurs in XML.">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 이름입니다.</param>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework의 대상 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;element&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="element" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 속성을 serialize할지 여부를 나타냅니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object that is a candidate for serialization.">serialization 후보인 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체입니다.</param>
      <param name="propertyName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object as it occurs in XML.">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 이름입니다.</param>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework의 대상 버전입니다.</param>
      <param name="parentConfigurationElement" vsli:raw="The parent element of the property.">속성의 부모 요소입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;property&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="property" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <see cref="T:System.Configuration.ConfigurationSection" /> 인스턴스를 serialize할지 여부를 나타냅니다.</summary>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework의 대상 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current section should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 섹션을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary vsli:raw="Represents a collection of related sections within a configuration file.">구성 파일 내 관련 섹션의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체에 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the section to be added.">추가할 섹션의 이름입니다.</param>
      <param name="section" vsli:raw="The section to be added.">추가할 섹션입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary vsli:raw="Clears this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object to an array.">이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object to.">
        <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 복사할 배열입니다.</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">복사를 시작할 인덱스 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; is less than the value of &lt;see cref=&quot;P:System.Configuration.ConfigurationSectionCollection.Count&quot; /&gt; plus &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="array" />의 길이가 <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" />와 <paramref name="index" />의 합보다 작은 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체에 있는 섹션의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 섹션의 수를 나타내는 정수입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object with the specified name.">지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="name" />가 null이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Collections.IEnumerator" /> 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Configuration.ConfigurationSectionCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체의 키를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object whose key is to be returned.">반환될 키가 있는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 인덱스입니다.</param>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 키입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialization 중 시스템에서 사용됩니다.</summary>
      <param name="info">적용할 수 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">적용할 수 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object with the specified name.">지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSection" />에개체에 있는 모든 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체에 대한 키를 가져옵니다.</summary>
      <returns>이 컬렉션에 있는 모든 섹션의 키를 포함하는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에서 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the section to be removed.">제거할 섹션의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에서 지정된 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the section to be removed.">제거할 섹션의 인덱스입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary vsli:raw="Represents a group of related sections within a configuration file.">구성 파일에 있는 관련된 섹션의 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary vsli:raw="Forces the declaration for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 강제로 선언합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary vsli:raw="Forces the declaration for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 강제로 선언합니다.</summary>
      <param name="force" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object must be written to the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 파일에 쓰여져야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is the root section group.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object has a location.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 루트 섹션 그룹인 경우
또는
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 위치를 가지고 있는 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object declaration is required.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체 선언이 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; declaration is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 선언이 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is declared.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 선언되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; is declared; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" />이 선언되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary vsli:raw="Gets the name property of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름 속성을 가져옵니다.</summary>
      <returns vsli:raw="The name property of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름 속성입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary vsli:raw="Gets the section group name associated with this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" />과 연결된 섹션 그룹 이름을 가져옵니다.</summary>
      <returns vsli:raw="The section group name of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 섹션 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects that are children of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체의 자식인 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 모두 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects that are children of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체의 자식인 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 모두 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object that contains all of &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체 내에 모든 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 개체 내에 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 모두 포함하는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">지정된 대상 버전의 .NET Framework에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 인스턴스를 serialize할지 여부를 나타냅니다.</summary>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework의 대상 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current section group should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 섹션 그룹을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary vsli:raw="Gets or sets the type for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 형식입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is the root section group.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object has a location.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 루트 섹션 그룹인 경우
또는
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체가 위치를 가지고 있는 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The section or group is already defined at another level.">섹션 또는 그룹이 이미 다른 수준에 정의되어 있는 경우</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 추가합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be added.">추가할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름입니다.</param>
      <param name="sectionGroup" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be added.">추가할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary vsli:raw="Clears the collection.">컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object to an array.">이 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the object to.">개체를 복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">복사를 시작할 인덱스 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; is less than the value of &lt;see cref=&quot;P:System.Configuration.ConfigurationSectionGroupCollection.Count&quot; /&gt; plus &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="array" />의 길이가 <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" />와 <paramref name="index" />의 합보다 작은 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>컬렉션의 섹션 그룹 수를 가져옵니다.</summary>
      <returns>컬렉션의 섹션 그룹 수를 나타내는 정수입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object contained in the collection.">컬렉션에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object with the specified name.">지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="name" />가 null이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에 있는 지정된 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체의 키를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the section group whose key is to be returned.">반환될 키가 있는 섹션 그룹의 인덱스입니다.</param>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 키입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialization 중 시스템에서 사용됩니다.</summary>
      <param name="info">적용할 수 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">적용할 수 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose index is specified from the collection.">컬렉션에서 지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.  &#xA;  &#xA; In C#, this property is the indexer for the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; class.">지정된 인덱스의 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.
C#에서 이 속성은 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 클래스의 인덱서입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose name is specified from the collection.">컬렉션에서 지정된 이름의 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">반환할 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object with the specified name.  &#xA;  &#xA; In C#, this property is the indexer for the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; class.">지정된 이름을 가진 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체입니다.
C#에서 이 속성은 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 클래스의 인덱서입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>이 <see cref="T:System.Configuration.ConfigurationSectionGroup" />에개체에 있는 모든 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체에 대한 키를 가져옵니다.</summary>
      <returns>이 컬렉션에 있는 모든 섹션 그룹의 이름을 포함하는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose name is specified from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에서 지정된 이름의 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the section group to be removed.">제거할 섹션 그룹의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose index is specified from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 개체에서 지정된 인덱스에 있는 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The index of the section group to be removed.">제거할 섹션 그룹의 인덱스입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary vsli:raw="Provides runtime versions 1.0 and 1.1 support for reading configuration sections and common configuration settings.">구성 섹션과 일반 구성 설정을 읽을 수 있도록 런타임 버전 1.0 및 1.1 지원을 제공합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary vsli:raw="Gets a read-only collection of the application settings from the configuration file.">구성 파일에 있는 애플리케이션 설정 섹션의 읽기 전용 <see cref="T:System.Collections.Specialized.NameValueCollection" />을 가져옵니다.</summary>
      <returns vsli:raw="A read-only collection of the application settings from the configuration file.">구성 파일에 있는 애플리케이션 설정 섹션의 읽기 전용 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object for the passed configuration section name and path.">전달된 구성 섹션 이름과 경로에 대한 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 반환합니다.</summary>
      <param name="sectionName" vsli:raw="A configuration name and path, such as &quot;system.net/settings&quot;.">"system.net/settings"와 같은 구성 이름과 경로입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object for the passed configuration section name and path.">전달된 구성 섹션 이름과 경로에 대한 <see cref="T:System.Configuration.ConfigurationSection" /> 개체입니다.

<see cref="T:System.Configuration.ConfigurationSettings" /> 클래스는 이전 버전과의 호환성만 제공합니다. 대신 <see cref="T:System.Configuration.ConfigurationManager" /> 클래스나 <see cref="T:System.Web.Configuration.WebConfigurationManager" /> 클래스를 사용해야 합니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="Unable to retrieve the requested section.">요청된 섹션을 검색할 수 없습니다.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary vsli:raw="Used to specify which configuration file is to be represented by the Configuration object.">Configuration 개체가 나타낼 구성 파일을 지정하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to all users.">모든 사용자에게 적용되는 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary vsli:raw="Gets the roaming &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to the current user.">현재 사용자에게 적용되는 로밍 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary vsli:raw="Gets the local &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to the current user.">현재 사용자에게 적용되는 로컬 <see cref="T:System.Configuration.Configuration" />을 가져옵니다.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary vsli:raw="Serves as the base class for the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; validator attribute types.">
        <see cref="N:System.Configuration" /> 유효성 검사기 특성 형식의 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt; class using the specified validator type.">지정된 유효성 검사기 형식을 사용하여 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validator" vsli:raw="The validator type to use when creating an instance of &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />의 인스턴스를 만들 때 사용할 유효성 검사기 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validator" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is not derived from &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt;.">
        <paramref name="validator" />이 <see cref="T:System.Configuration.ConfigurationValidatorBase" />에서 파생되지 않은 경우</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator attribute instance.">유효성 검사기 특성 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt;.">현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary vsli:raw="Gets the type of the validator attribute.">유효성 검사기 특성의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current validator attribute instance.">현재 유효성 검사기 특성 인스턴스의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary vsli:raw="Acts as a base class for deriving a validation class so that a value of an object can be verified.">개체 값이 확인될 수 있도록 유효성 검사 클래스를 파생시키기 위한 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The object type.">개체 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter value matches the expected &lt;see langword=&quot;type&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수 값이 예상되는 <see langword="true" />과 일치하면 <see langword="type" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object value.">개체 값입니다.</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary vsli:raw="Wraps the corresponding &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; type and also carries the necessary information for reporting file-name and line numbers.">해당 <see cref="T:System.Xml.XmlDocument" /> 형식을 래핑하고 파일 이름과 줄 번호를 보고하는 데 필요한 정보도 전달합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigXmlDocument&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConfigXmlDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a configuration element attribute.">구성 요소 특성을 만듭니다.</summary>
      <param name="prefix" vsli:raw="The prefix definition.">접두사 정의입니다.</param>
      <param name="localName" vsli:raw="The name that is used locally.">로컬로 사용되는 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The URL that is assigned to the namespace.">네임스페이스에 할당된 URL입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributes.XmlAttribute&quot; /&gt; attribute.">
        <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" /> 특성입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary vsli:raw="Creates an XML CData section.">XML CData 섹션을 만듭니다.</summary>
      <param name="data" vsli:raw="The data to use.">사용할 데이터입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlCDataSection" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary vsli:raw="Create an XML comment.">XML 주석을 만듭니다.</summary>
      <param name="data" vsli:raw="The comment data.">주석 데이터입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlComment" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a configuration element.">구성 요소를 만듭니다.</summary>
      <param name="prefix" vsli:raw="The prefix definition.">접두사 정의입니다.</param>
      <param name="localName" vsli:raw="The name used locally.">로컬로 사용되는 이름입니다.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the URL.">URL의 네임스페이스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlElement" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary vsli:raw="Creates white spaces.">공백을 만듭니다.</summary>
      <param name="data" vsli:raw="The data to use.">사용할 데이터입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlSignificantWhitespace" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary vsli:raw="Create a text node.">텍스트 노드를 만듭니다.</summary>
      <param name="text" vsli:raw="The text to use.">사용할 텍스트입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlText" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary vsli:raw="Creates white space.">공백을 만듭니다.</summary>
      <param name="data" vsli:raw="The data to use.">사용할 데이터입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlWhitespace" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary vsli:raw="Gets the configuration file name.">구성 파일 이름을 가져옵니다.</summary>
      <returns vsli:raw="The configuration file name.">구성 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary vsli:raw="Gets the current node line number.">현재 노드 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number for the current node.">현재 노드의 줄 번호입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary vsli:raw="Loads the configuration file.">구성 파일을 로드합니다.</summary>
      <param name="filename" vsli:raw="The name of the file.">파일의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary vsli:raw="Loads a single configuration element.">단일 구성 요소를 로드합니다.</summary>
      <param name="filename" vsli:raw="The name of the file.">파일의 이름입니다.</param>
      <param name="sourceReader" vsli:raw="The source for the reader.">판독기의 소스입니다.</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary vsli:raw="Gets the configuration file name.">구성 파일 이름을 가져옵니다.</summary>
      <returns vsli:raw="The file name.">파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary vsli:raw="Gets the configuration line number.">구성 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number.">줄 번호입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary vsli:raw="Represents a single, named connection string in the connection strings configuration file section.">연결 문자열 구성 파일 섹션의 명명된 단일 연결 문자열을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the connection string.">연결 문자열의 이름으로,</param>
      <param name="connectionString" vsli:raw="The connection string.">연결 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the connection string.">연결 문자열의 이름으로,</param>
      <param name="connectionString" vsli:raw="The connection string.">연결 문자열입니다.</param>
      <param name="providerName" vsli:raw="The name of the provider to use with the connection string.">연결 문자열에서 사용할 공급자의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string.">연결 문자열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string value assigned to the &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.ConnectionString&quot; /&gt; property.">
        <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> 속성에 할당된 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; name.">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string value assigned to the &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.Name&quot; /&gt; property.">
        <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> 속성에 할당된 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary vsli:raw="Gets or sets the provider name property.">공급자 이름 속성을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.ProviderName&quot; /&gt; property.">
        <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /> 속성</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary vsli:raw="Returns a string representation of the object.">개체의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A string representation of the object.">개체의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 추가합니다.</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary vsli:raw="Removes all the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects from the collection.">컬렉션에서 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Returns the collection index of the passed &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object.">전달된 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 컬렉션 인덱스를 반환합니다.</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">컬렉션의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</param>
      <returns vsli:raw="The collection index of the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; object.">지정된 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체의 컬렉션 인덱스입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the connection string at the specified index in the collection.">컬렉션의 지정된 인덱스에 있는 연결 문자열을 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The index of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object with the specified name in the collection.">컬렉션에서 지정된 이름을 가진 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object with the specified name; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">지정된 이름의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체 또는 <see langword="null" />(개체가 없는 경우)입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 제거합니다.</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">컬렉션의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object at the specified index in the collection.">컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체를 제거합니다.</summary>
      <param name="index" vsli:raw="The index of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.ConnectionStringSettings" /> 개체의 인덱스입니다.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary vsli:raw="Provides programmatic access to the connection strings configuration-file section.">연결 문자열 구성 파일 섹션에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ConnectionStringsSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ConnectionStringSettings" /> 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary vsli:raw="Encapsulates the context information that is associated with a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object. This class cannot be inherited.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 개체와 연결된 컨텍스트 정보를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary vsli:raw="Provides an object containing configuration-section information based on the specified section name.">지정된 섹션 이름에 따라 구성 섹션 정보를 포함하는 개체를 제공합니다.</summary>
      <param name="sectionName" vsli:raw="The name of the configuration section.">구성 섹션의 이름입니다.</param>
      <returns vsli:raw="An object containing the specified section within the configuration.">구성에 있는 지정된 섹션을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary vsli:raw="Gets the context of the environment where the configuration property is being evaluated.">구성 속성이 확인되는 환경의 컨텍스트를 가져옵니다.</summary>
      <returns vsli:raw="An object specifying the environment where the configuration property is being evaluated.">구성 속성이 확인되는 환경을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary vsli:raw="Gets a value specifying whether the configuration property is being evaluated at the machine configuration level.">구성 속성이 컴퓨터 구성 수준에서 확인되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration property is being evaluated at the machine configuration level; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 속성이 컴퓨터 구성 수준에서 확인되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary vsli:raw="Represents a basic configuration-section handler that exposes the configuration section's XML for both read and write access.">읽기 및 쓰기 액세스를 위해 구성 섹션의 XML을 노출하는 기본 구성 섹션 처리기를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DefaultSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.DefaultSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary vsli:raw="Specifies the default value for an application settings property.">애플리케이션 설정 속성의 기본값을 지정합니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.DefaultSettingValueAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.DefaultSettingValueAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the default value for the property.">속성의 기본값을 나타내는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary vsli:raw="Gets the default value for the application settings property.">애플리케이션 설정 속성의 기본값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the default value for the property.">속성의 기본값을 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary vsli:raw="Provides validation of an object. This class cannot be inherited.">개체의 유효성을 검사합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DefaultValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.DefaultValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated, based on type.">형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The object type.">개체 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for all types being validated.">유효성이 검사되는 모든 형식에 대해 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object value.">개체 값입니다.</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary vsli:raw="Provides key/value pair configuration information from a configuration section.">구성 섹션의 키/값 쌍 구성 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DictionarySectionHandler&quot; /&gt; class.">
        <see cref="T:System.Configuration.DictionarySectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">새 구성 처리기를 만들고 지정된 매개 변수에 따라 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent" vsli:raw="Parent object.">부모 개체입니다.</param>
      <param name="context" vsli:raw="Configuration context object.">구성 컨텍스트 개체입니다.</param>
      <param name="section" vsli:raw="Section XML node.">섹션 XML 노드입니다.</param>
      <returns vsli:raw="A configuration object.">구성 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the key in a key/value pair.">키/값 쌍에서 키로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string value containing the name of the key attribute.">키 특성의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the value in a key/value pair.">키/값 쌍에서 값으로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string value containing the name of the value attribute.">값 특성의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object that uses the Windows data protection API (DPAPI) to encrypt and decrypt configuration data.">Windows DPAPI(데이터 보호 API)를 사용하여 구성 데이터를 암호화하고 해독하는 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; class using default settings.">기본 설정을 사용하여 <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 해독합니다.</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to decrypt.">해독할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns vsli:raw="A decrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">해독된 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;encryptedNode&quot; /&gt; does not have &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; set to &quot;EncryptedData&quot; and &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; set to &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;encryptedNode&quot; /&gt; does not have a child node named &quot;CipherData&quot; with a child node named &quot;CipherValue&quot;.  &#xA;  &#xA;-or-&#xA;  &#xA; The child node named &quot;CipherData&quot; is an empty node.">
        <paramref name="encryptedNode" />가 "EncryptedData"로 설정된 <see cref="P:System.Xml.XmlNode.Name" /> 및 <see cref="T:System.Xml.XmlNodeType" />로 설정된 <see cref="F:System.Xml.XmlNodeType.Element" />이 없는 경우
또는
<paramref name="encryptedNode" />가 자식 노드 이름이 "CipherValue"인 "CipherData"라는 자식 노드가 없는 경우
또는
"CipherData"라는 자식 노드가 빈 노드인 경우</exception>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 암호화합니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to encrypt.">암호화할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns vsli:raw="An encrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">암호화된 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the provider with default settings.">기본 설정을 사용하여 공급자를 초기화합니다.</summary>
      <param name="name" vsli:raw="The provider name to use for the object.">개체에 사용할 공급자 이름입니다.</param>
      <param name="configurationValues" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; collection of values to use when initializing the object.">개체를 초기화할 때 사용할 값의 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 컬렉션입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;configurationValues&quot; /&gt; contains an unrecognized configuration setting.">
        <paramref name="configurationValues" />에는 인식할 수 없는 구성 설정이 포함된 경우</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; object is using machine-specific or user-account-specific protection.">
        <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 개체가 컴퓨터별 보호 기능을 사용하는지 아니면 사용자 계정별 보호 기능을 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; is using machine-specific protection; &lt;see langword=&quot;false&quot; /&gt; if it is using user-account-specific protection.">
        <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />가 컴퓨터별 보호 기능을 사용하면 <see langword="true" />이고, 사용자 계정별 보호 기능을 사용하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary vsli:raw="Contains meta-information about an individual element within the configuration. This class cannot be inherited.">구성의 개별 요소에 대한 메타 정보를 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary vsli:raw="Gets the errors for the associated element and subelements.">연결된 요소와 하위 요소에 대한 오류를 가져옵니다.</summary>
      <returns vsli:raw="The collection containing the errors for the associated element and subelements.">연결된 요소와 하위 요소에 대한 오류가 포함된 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary vsli:raw="Gets a value indicating whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; collection.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 컬렉션인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary vsli:raw="Gets a value that indicates whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object cannot be modified.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 수정할 수 없는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object cannot be modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 수정할 수 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary vsli:raw="Gets a value indicating whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is in the configuration file.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 구성 파일에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 구성 파일에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary vsli:raw="Gets the line number in the configuration file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is defined.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 정의되어 있는 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="The line number in the configuration file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is defined.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체가 정의되어 있는 구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection of the properties in the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체에 있는 속성의 <see cref="T:System.Configuration.ConfigurationElement" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection of the properties in the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체에 있는 속성의 <see cref="T:System.Configuration.ConfigurationElement" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary vsli:raw="Gets the source file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object originated.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 처음으로 제공한 소스 파일을 가져옵니다.</summary>
      <returns vsli:raw="The source file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object originated.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체를 처음으로 제공한 소스 파일입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary vsli:raw="Gets the type of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">관련된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">관련된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary vsli:raw="Gets the object used to validate the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 유효성을 검사하는 데 사용되는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object used to validate the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 유효성을 검사하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary vsli:raw="Defines the configuration file mapping for an .exe application. This class cannot be inherited.">.exe 애플리케이션의 구성 파일 매핑을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; class.">
        <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; class by using the specified machine configuration file name.">지정된 컴퓨터 구성 파일 이름을 사용하여 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="machineConfigFileName" vsli:raw="The name of the machine configuration file that includes the complete physical path (for example, &lt;c&gt;c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config&lt;/c&gt;).">전체 물리적 경로를 포함하는 컴퓨터 구성 파일 이름입니다(예: <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary vsli:raw="Creates a copy of the existing &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; object.">기존 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체의 복사본을 만듭니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; object.">
        <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file.">구성 파일의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The configuration file name.">구성 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file for the local user.">로컬 사용자의 구성 파일 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The configuration file name.">구성 파일 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file for the roaming user.">로밍 사용자의 구성 파일 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The configuration file name.">구성 파일 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary vsli:raw="Manages the path context for the current application. This class cannot be inherited.">현재 애플리케이션의 경로 컨텍스트를 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary vsli:raw="Gets the current path for the application.">애플리케이션에 대한 현재 경로를 가져옵니다.</summary>
      <returns vsli:raw="A string value containing the current path.">현재 경로를 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary vsli:raw="Gets an object representing the path level of the current application.">현재 애플리케이션의 경로 수준을 나타내는 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationUserLevel&quot; /&gt; object representing the path level of the current application.">현재 애플리케이션의 경로 수준을 나타내는 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary vsli:raw="Converts between a string and an enumeration type.">문자열과 열거형 형식 간에 변환을 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.GenericEnumConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.GenericEnumConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="typeEnum" vsli:raw="The enumeration type to convert.">변환할 열거형 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeEnum&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeEnum" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an &lt;see cref=&quot;T:System.Enum&quot; /&gt; type.">
        <see cref="T:System.String" />을 <see cref="T:System.Enum" /> 형식으로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Enum&quot; /&gt; type that represents the &lt;paramref name=&quot;data&quot; /&gt; parameter.">
        <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.Enum" /> 형식입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; is null or an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;data&quot; /&gt; starts with a numeric character.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;data&quot; /&gt; includes white space.">
        <paramref name="data" />가 null이거나 빈 문자열("")인 경우
또는
<paramref name="data" />가 숫자 문자로 시작하는 경우
또는
<paramref name="data" />에 공백이 포함된 경우</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Enum&quot; /&gt; type to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">
        <see cref="T:System.Enum" /> 형식을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert to.">변환할 대상 값입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary vsli:raw="Defines extended capabilities for client-based application settings providers.">클라이언트 기반 애플리케이션 설정 공급자의 확장 기능을 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the value of the specified settings property for the previous version of the same application.">이전 버전의 동일한 애플리케이션에 대한 지정된 설정 속성의 값을 반환합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; whose value is to be returned.">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; containing the value of the specified property setting as it was last set in the previous version of the application; or &lt;see langword=&quot;null&quot; /&gt; if the setting cannot be found.">이전 버전의 애플리케이션에서 마지막으로 설정된 지정된 속성 설정의 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValue" />이거나, 설정을 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary vsli:raw="Resets the application settings associated with the specified application to their default values.">지정된 애플리케이션과 연결된 애플리케이션 설정을 기본값으로 다시 설정합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Indicates to the provider that the application has been upgraded. This offers the provider an opportunity to upgrade its stored settings as appropriate.">애플리케이션이 업그레이드되었음을 공급자에게 알립니다. 이를 통해 공급자는 저장된 설정을 적절하게 업그레이드할 수 있습니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary vsli:raw="Handles the access to certain configuration sections.">특정 구성 섹션에 대한 액세스를 처리합니다.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a configuration section handler.">구성 섹션 처리기를 만듭니다.</summary>
      <param name="parent" vsli:raw="Parent object.">부모 개체입니다.</param>
      <param name="configContext" vsli:raw="Configuration context object.">구성 컨텍스트 개체입니다.</param>
      <param name="section" vsli:raw="Section XML node.">섹션 XML 노드입니다.</param>
      <returns vsli:raw="The created section handler object.">만들어진 섹션 처리기 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary vsli:raw="Provides standard configuration methods.">표준 구성 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary vsli:raw="Gets the specified configuration.">지정된 구성을 가져옵니다.</summary>
      <param name="configKey" vsli:raw="The configuration key.">구성 키입니다.</param>
      <returns vsli:raw="The object representing the configuration.">구성을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary vsli:raw="Used for initialization.">초기화에 사용됩니다.</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary vsli:raw="Provides the configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Domain Name) 처리에 대한 구성 설정을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; class.">
        <see cref="T:System.Configuration.IdnElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; configuration setting.">
        <see cref="T:System.Configuration.IdnElement" /> 구성 설정의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UriIdnScope&quot; /&gt; that contains the current configuration setting for IDN processing.">IDN 처리에 대한 현재 구성 설정을 포함하는 <see cref="T:System.UriIdnScope" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary vsli:raw="Provides a wrapper type definition for configuration sections that are not handled by the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; types.">
        <see cref="N:System.Configuration" /> 형식으로 처리되지 않는 구성 섹션에 대한 래퍼 형식 정의를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IgnoreSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.IgnoreSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary vsli:raw="Provides a legacy section-handler definition for configuration sections that are not handled by the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; types.">
        <see cref="N:System.Configuration" /> 형식으로 처리되지 않는 구성 섹션에 대한 레거시 섹션 처리기 정의를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IgnoreSectionHandler&quot; /&gt; class.">
        <see cref="T:System.Configuration.IgnoreSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds the specified configuration object to the section-handler collection.">새 구성 처리기를 만들고 지정된 구성 개체를 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent" vsli:raw="The configuration settings in a corresponding parent configuration section.">해당 상위 구성 섹션의 구성 설정입니다.</param>
      <param name="configContext" vsli:raw="The virtual path for which the configuration section handler computes configuration values. Normally this parameter is reserved and is &lt;see langword=&quot;null&quot; /&gt;.">구성 섹션 처리기가 해당 구성 값을 계산하는 가상 경로입니다. 보통 이 매개 변수는 예약되며 <see langword="null" />입니다.</param>
      <param name="section" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that contains the configuration information to be handled. Provides direct access to the XML contents of the configuration section.">처리할 구성 정보를 포함하는 <see cref="T:System.Xml.XmlNode" />입니다. 구성 섹션의 XML 내용에 직접 액세스할 수 있도록 합니다.</param>
      <returns vsli:raw="The created configuration handler object.">만들어진 구성 처리기 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary vsli:raw="Converts between a string and the standard infinite or integer value.">문자열과 표준 무한 값 또는 정수 값 간에 변환을 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.InfiniteIntConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.InfiniteIntConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.String" />를 <see cref="T:System.Int32" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.Int32&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter integer value.">
        <paramref name="data" /> 매개 변수가 <see cref="F:System.Int32.MaxValue" /> "infinite"이면 <see cref="T:System.String" />이고, 그렇지 않으면 <paramref name="data" /> 매개 변수 정수 값을 나타내는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Int32" />를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert to.">변환할 대상 값입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot; if the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" />가 <see cref="T:System.String" />이면 <see cref="F:System.Int32.MaxValue" /> "infinite"이고, 그렇지 않으면 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary vsli:raw="Converts between a string and the standard infinite &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">문자열과 표준 무한 <see cref="T:System.TimeSpan" /> 값 간에 변환을 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.InfiniteTimeSpanConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.InfiniteTimeSpanConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; infinite; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">
        <see cref="F:System.TimeSpan.MaxValue" /> 매개 변수가 <paramref name="data" /> infinite이면 <see cref="T:System.String" />이고, 그렇지 않으면 분 단위로 <see cref="T:System.TimeSpan" /> 매개 변수를 나타내는 <paramref name="data" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during object conversion.">개체 변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <param name="type" vsli:raw="The conversion type.">변환 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">
        <see cref="T:System.String" /> 매개 변수가 <paramref name="value" />이면 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이고, 그렇지 않으면 분 단위로 <see cref="T:System.String" /> 매개 변수를 나타내는 <paramref name="value" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary vsli:raw="Provides validation of an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 값의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum value.">최소값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum value.">최대값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum value.">최소값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum value.">최대값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="rangeIsExclusive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.">유효성 검사 범위를 제외로 지정하려면 <see langword="true" />입니다. 포함은 유효성을 검사할 값이 지정된 범위 내에 있어야 함을 나타냅니다. 제외는 값이 최소값보다 작거나 최대값보다 커야 함을 나타냅니다.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum length of the integer value.">정수 값의 최소 길이를 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum length of the integer value.">정수 값의 최대 길이를 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <param name="resolution" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies a value that must be matched.">일치되어야 하는 값을 지정하는 <see cref="T:System.Int32" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolution&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;minValue&quot; /&gt; is greater than &lt;paramref name=&quot;maxValue&quot; /&gt;.">
        <paramref name="resolution" />가 <see langword="0" />보다 작은 경우
또는
<paramref name="minValue" />가 <paramref name="maxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The type of the object.">개체의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see cref="T:System.Int32" />와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value to be validated.">유효성을 검사할 값입니다.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform integer validation on a configuration property. This class cannot be inherited.">구성 속성에 대한 정수의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.IntegerValidatorAttribute" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MinValue&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MaxValue&quot; /&gt; property values.">
        <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> 및 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> 속성 값으로 정의된 범위에 정수를 포함시킬지 아니면 제외시킬지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">값을 제외해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets or sets the maximum value allowed for the property.">속성에 허용되는 최대값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An integer that indicates the allowed maximum value.">허용되는 최대값을 나타내는 정수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MinValue&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />보다 작은 경우</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary vsli:raw="Gets or sets the minimum value allowed for the property.">속성에 허용되는 최소값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An integer that indicates the allowed minimum value.">허용되는 최소값을 나타내는 정수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MaxValue&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.IntegerValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary vsli:raw="Delegates all members of the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; interface to another instance of a host.">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 인터페이스의 모든 멤버를 호스트의 다른 인스턴스에 위임합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Internal.DelegatingConfigHost&quot; /&gt; class.">
        <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary vsli:raw="Creates a new configuration context.">새 구성 컨텍스트를 만듭니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath.">위치 하위 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; representing a new configuration context.">새 구성 컨텍스트를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary vsli:raw="Creates a deprecated configuration context.">사용되지 않는 구성 컨텍스트를 만듭니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; representing a deprecated configuration context.">사용되지 않는 구성 컨텍스트를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Decrypts an encrypted configuration section.">암호화된 구성 섹션을 해독합니다.</summary>
      <param name="encryptedXml" vsli:raw="An encrypted section of a configuration file.">구성 파일의 암호화된 섹션입니다.</param>
      <param name="protectionProvider" vsli:raw="An object containing the providers that encrypt and decrypt protected configuration data.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체입니다.</param>
      <param name="protectedConfigSection" vsli:raw="An object that provides programatic access to the &lt;c&gt;configProtectedData&lt;/c&gt; configuration section.">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 개체입니다.</param>
      <returns vsli:raw="A string representing a decrypted configuration section.">해독된 구성 섹션을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체를 삭제합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Encrypts a section of a configuration object.">구성 개체의 섹션을 암호화합니다.</summary>
      <param name="clearTextXml" vsli:raw="A section of the configuration that is not encrypted.">암호화되지 않은 구성 섹션입니다.</param>
      <param name="protectionProvider" vsli:raw="An object containing the providers that encrypt and decrypt protected configuration data.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체입니다.</param>
      <param name="protectedConfigSection" vsli:raw="An object that provides programatic access to the &lt;c&gt;configProtectedData&lt;/c&gt; configuration section.">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 개체입니다.</param>
      <returns vsli:raw="A string representing an encrypted section of the configuration object.">구성 개체의 암호화된 섹션을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary vsli:raw="Returns a configuration path based on a location subpath.">위치 하위 경로를 기반으로 구성 경로를 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath.">위치 하위 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A string representing a configuration path.">구성 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of the configuration.">구성의 형식을 나타내는 <see cref="T:System.Type" />을 반환합니다.</summary>
      <param name="typeName" vsli:raw="A string representing the configuration type.">구성 형식을 나타내는 문자열입니다.</param>
      <param name="throwOnError" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an exception should be thrown if an error is encountered; &lt;see langword=&quot;false&quot; /&gt; if an exception should not be thrown if an error is encountered.">오류가 발생하는 경우 예외가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of the configuration.">구성의 형식을 나타내는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary vsli:raw="Returns a string representing the type name of the configuration object.">구성 개체의 형식 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">
        <see cref="T:System.Type" /> 개체입니다.</param>
      <returns vsli:raw="A string representing the type name of the configuration object.">구성 개체의 형식 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary vsli:raw="Sets the specified permission set if available within the host object.">호스트 개체에서 사용할 수 있는 경우 지정된 권한 집합을 설정합니다.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <param name="permissionSet" vsli:raw="A &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object.">
        <see cref="T:System.Security.PermissionSet" /> 개체입니다.</param>
      <param name="isHostReady" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host has finished initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호스트에서 초기화를 마쳤으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration source.">구성 소스에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 반환합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="configSource" vsli:raw="A string representing the configuration source.">구성 소스를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration source.">구성 소스에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;P:System.Diagnostics.FileVersionInfo.FileVersion&quot; /&gt; object representing the version of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 개체의 버전을 나타내는 <see cref="T:System.IO.Stream" /> 개체를 반환합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;P:System.Diagnostics.FileVersionInfo.FileVersion&quot; /&gt; object representing the version of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 개체의 버전을 나타내는 <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary vsli:raw="Instructs the host to impersonate and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object required internally by .NET.">가장하도록 호스트에 지시하고 .NET Framework에서 내부적으로 필요한 <see cref="T:System.IDisposable" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; value.">
        <see cref="T:System.IDisposable" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes the configuration host.">구성 호스트를 초기화합니다.</summary>
      <param name="configRoot" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 개체</param>
      <param name="hostInitParams" vsli:raw="A parameter object containing the values used for initializing the configuration host.">구성 호스트 초기화에 사용되는 값을 포함하는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes the host for configuration.">구성을 위해 호스트를 초기화합니다.</summary>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath (passed by reference).">위치 하위 경로를 나타내는 문자열이며 참조로 전달됩니다.</param>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationConfigPath" vsli:raw="The location configuration path.">위치 구성 경로입니다.</param>
      <param name="configRoot" vsli:raw="The configuration root element.">구성 루트 요소입니다.</param>
      <param name="hostInitConfigurationParams" vsli:raw="A parameter object representing the parameters used to initialize the host.">호스트를 초기화하는 데 사용되는 매개 변수를 나타내는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.">구성이 구성 계층 구조에서 애플리케이션 구성 위에 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is above the application configuration in the configuration hierarchy; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성이 구성 계층 구조에서 애플리케이션 구성 위에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration record is required for the host configuration initialization.">구성 레코드가 호스트 구성 초기화에 필요한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a configuration record is required for the host configuration initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 레코드가 호스트 구성 초기화에 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary vsli:raw="Restricts or allows definitions in the host configuration.">호스트 구성에서 정의를 제한하거나 허용합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 개체</param>
      <param name="allowExeDefinition" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grant or restriction of definitions in the host configuration was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호스트 구성에서 정의의 허용 또는 제한에 성공했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary vsli:raw="Returns a value indicating whether the file path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path.">
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 파일 경로가 올바른 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 경로가 올바른 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands.">구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether the initialization of a configuration object is considered delayed.">구성 개체의 초기화가 지연되는 것으로 간주되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization of a configuration object is considered delayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 개체의 초기화가 지연되는 것으로 간주되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration object supports a location tag.">구성 개체에서 위치 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration object supports a location tag; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 개체에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary vsli:raw="Gets a value indicating whether the configuration is remote.">구성이 원격 구성인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is remote; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성이 원격 구성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.">구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration path is trusted.">구성 경로가 신뢰되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is trusted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 경로가 신뢰되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">구성 파일에 쓰거나 구성 파일을 만드는 데 사용되는 임시 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object (passed by reference).">
        <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트이며 참조로 전달됩니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">구성 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file (passed by reference).">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트이며 참조로 전달됩니다.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The object specified by the &lt;paramref name=&quot;streamName&quot; /&gt; parameter.">
        <paramref name="streamName" /> 매개 변수에서 지정한 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary vsli:raw="Returns a value indicating whether the entire configuration file could be read by a designated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">전체 구성 파일을 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entire configuration file could be read by the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object designated by &lt;paramref name=&quot;streamName&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전체 구성 파일을 <paramref name="streamName" />으로 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to read a designated section of its associated configuration file.">연결된 구성 파일의 지정된 섹션을 읽도록 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에 지시합니다.</summary>
      <param name="sectionGroupName" vsli:raw="A string representing the name of a section group in the configuration file.">구성 파일에 있는 섹션 그룹의 이름을 나타내는 문자열입니다.</param>
      <param name="sectionName" vsli:raw="A string representing the name of a section in the configuration file.">구성 파일에 있는 섹션의 이름을 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a section of the configuration file designated by the &lt;paramref name=&quot;sectionGroupName&quot; /&gt; and &lt;paramref name=&quot;sectionName&quot; /&gt; parameters can be read by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="sectionGroupName" /> 및 <paramref name="sectionName" /> 매개 변수로 지정된 구성 파일의 섹션을 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Indicates that a new configuration record requires a complete initialization.">새 구성 레코드에 완전한 초기화가 필요함을 나타냅니다.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the host to monitor an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">연결된 <see cref="T:System.IO.Stream" /> 개체에서 구성 파일의 변경 사항을 모니터링하도록 호스트에 지시합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object to receive the returned data representing the changes in the configuration file.">구성 파일의 변경 사항을 나타내는 반환된 데이터를 받을 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance containing changed configuration settings.">변경된 구성 설정을 포함하는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the host object to stop monitoring an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">연결된 <see cref="T:System.IO.Stream" /> 개체에서 구성 파일의 변경 사항을 모니터링하는 작업을 중지하도록 호스트에 지시합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports change notifications.">호스트 구성에서 변경 알림을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host supports change notifications; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호스트에서 변경 알림을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports location tags.">호스트 구성에서 위치 태그를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host supports location tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호스트에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary vsli:raw="Gets a value indicating whether the host configuration has path support.">호스트 구성에 경로 지원이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host configuration has path support; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호스트 구성에 경로 지원이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports refresh.">호스트 구성에서 새로 고침을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host configuration supports refresh; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">호스트 구성에서 새로 고침을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Verifies that a configuration definition is allowed for a configuration record.">구성 정의가 구성 레코드에 허용되는지 확인합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition" vsli:raw="An &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowDefinition&quot; /&gt; object.">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 개체</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체입니다.</param>
      <param name="errorInfo" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 개체</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed.">구성 파일에 대한 쓰기가 모두 완료되었음을 나타냅니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writing to the configuration file completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 파일에 대한 쓰기가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.">구성 파일에 대한 쓰기가 모두 완료되었음을 나타내고 권한이 어설션되는지 여부를 지정합니다.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that writing was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">쓰기가 성공적으로 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary vsli:raw="Defines an interface used by .NET to support creating error configuration records.">.NET Framework에서 오류 구성 레코드 생성 작업을 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary vsli:raw="Gets a string specifying the file name related to the configuration details.">구성 세부 정보와 관련된 파일 이름을 지정하는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A string specifying a filename.">파일 이름을 지정하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary vsli:raw="Gets an integer specifying the line number related to the configuration details.">구성 세부 정보와 관련된 줄 번호를 지정하는 정수를 가져옵니다.</summary>
      <returns vsli:raw="An integer specifying a line number.">줄 번호를 지정하는 정수입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary vsli:raw="Defines an interface used by .NET to support the initialization of configuration properties.">.NET Framework에서 구성 속성의 초기화를 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary vsli:raw="Gets the configuration host.">구성 호스트를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object that is used by .NET to initialize application configuration properties.">.NET Framework에서 애플리케이션 구성 속성을 초기화하는 데 사용되는 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary vsli:raw="Initializes a configuration object.">구성 개체를 초기화합니다.</summary>
      <param name="typeConfigHost" vsli:raw="The type of configuration host.">구성 호스트의 형식입니다.</param>
      <param name="hostInitParams" vsli:raw="An array of configuration host parameters.">구성 호스트 매개 변수의 배열입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary vsli:raw="Gets the root of the configuration hierarchy.">구성 계층 구조의 루트를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary vsli:raw="Defines an interface used by .NET to support configuration management.">.NET Framework에서 구성 관리를 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary vsli:raw="Ensures that the networking configuration is loaded.">네트워킹 구성이 로드되었는지 확인합니다.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary vsli:raw="Defines an interface used by .NET to initialize configuration properties.">.NET Framework에서 구성 속성을 초기화하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary vsli:raw="Gets the configuration file name related to the application path.">애플리케이션 경로와 관련된 구성 파일 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string value representing a configuration file name.">구성 파일 이름을 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary vsli:raw="Gets the local configuration directory of the application based on the entry assembly.">진입 어셈블리를 기준으로 애플리케이션의 로컬 구성 디렉터리를 가져옵니다.</summary>
      <returns vsli:raw="A string representing the local configuration directory.">로컬 구성 디렉터리를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary vsli:raw="Gets the local configuration path of the application based on the entry assembly.">진입 어셈블리를 기준으로 애플리케이션의 로컬 구성 경로를 가져옵니다.</summary>
      <returns vsli:raw="A string value representing the local configuration path of the application.">애플리케이션의 로컬 구성 경로를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary vsli:raw="Gets the product name of the application based on the entry assembly.">진입 어셈블리를 기준으로 애플리케이션의 제품 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string value representing the product name of the application.">애플리케이션의 제품 이름을 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary vsli:raw="Gets the product version of the application based on the entry assembly.">진입 어셈블리를 기준으로 애플리케이션의 제품 버전을 가져옵니다.</summary>
      <returns vsli:raw="A string value representing the product version of the application.">애플리케이션의 제품 버전을 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary vsli:raw="Gets the roaming configuration directory of the application based on the entry assembly.">진입 어셈블리를 기준으로 애플리케이션의 로밍 구성 디렉터리를 가져옵니다.</summary>
      <returns vsli:raw="A string value representing the roaming configuration directory of the application.">애플리케이션의 로밍 구성 디렉터리를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary vsli:raw="Gets the roaming user's configuration path based on the application's entry assembly.">애플리케이션의 진입 어셈블리를 기준으로 로밍 사용자의 구성 경로를 가져옵니다.</summary>
      <returns vsli:raw="A string value representing the roaming user's configuration path.">로밍 사용자의 구성 경로를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary vsli:raw="Gets the configuration path for the Machine.config file.">Machine.config 파일의 구성 경로를 가져옵니다.</summary>
      <returns vsli:raw="A string value representing the path of the Machine.config file.">Machine.config 파일의 경로를 나타내는 문자열 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary vsli:raw="Gets a value representing the configuration system's status.">구성 시스템의 상태를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration system is in the process of being initialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 시스템이 초기화되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary vsli:raw="Gets a value that specifies whether user configuration settings are supported.">사용자 구성 설정이 지원되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration system supports user configuration settings; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 시스템에서 사용자 구성 설정을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary vsli:raw="Gets the name of the file used to store user configuration settings.">사용자 구성 설정을 저장하는 데 사용되는 파일의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string specifying the name of the file used to store user configuration.">사용자 구성을 저장하는 데 사용되는 파일의 이름을 지정하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary vsli:raw="Defines interfaces that allow the internal .NET infrastructure to customize configuration.">내부 .NET Framework 인프라에서 구성을 사용자 지정하는 데 사용할 수 있는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary vsli:raw="Returns the path to the application configuration file.">애플리케이션 구성 파일의 경로를 반환합니다.</summary>
      <returns vsli:raw="A string representing the path to the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary vsli:raw="Returns a string representing the path to the known local user configuration file.">알려진 로컬 사용자 구성 파일의 경로를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string representing the path to the known local user configuration file.">알려진 로컬 사용자 구성 파일의 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary vsli:raw="Returns a string representing the path to the known roaming user configuration file.">알려진 로밍 사용자 구성 파일의 경로를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string representing the path to the known roaming user configuration file.">알려진 로밍 사용자 구성 파일의 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.">구성 파일 경로가 현재 알려진 애플리케이션 구성 파일 경로와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to the application configuration file; &lt;see langword=&quot;false&quot; /&gt; if a string representing a configuration path is not the same as a path to the application configuration file.">구성 경로를 나타내는 문자열이 애플리케이션 구성 파일의 경로와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.">구성 파일 경로가 현재 알려진 로컬 사용자의 구성 파일 경로와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 경로를 나타내는 문자열이 알려진 로컬 사용자 구성 파일의 경로와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.">구성 파일 경로가 현재 알려진 로밍 사용자의 구성 파일 경로와 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to an application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 경로를 나타내는 문자열이 알려진 로밍 사용자 구성 파일의 경로와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary vsli:raw="Defines the interfaces used by the internal design time API to create a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">내부 디자인 타임 API에서 <see cref="T:System.Configuration.Configuration" /> 개체를 만드는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary vsli:raw="Creates and initializes a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.Configuration" /> 개체를 만들어 초기화합니다.</summary>
      <param name="typeConfigHost" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to be created.">만들 개체의 <see cref="T:System.Type" /> 개체의 <see cref="T:System.Configuration.Configuration" />입니다.</param>
      <param name="hostInitConfigurationParams" vsli:raw="A parameter array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the parameters to be applied to the created &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">만들어진 <see cref="T:System.Object" /> 개체에 적용할 매개 변수를 포함하는 <see cref="T:System.Configuration.Configuration" />의 매개 변수 배열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.Configuration" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Normalizes a location subpath of a path to a configuration file.">구성 파일 경로의 위치 하위 경로를 정규화합니다.</summary>
      <param name="subPath" vsli:raw="A string representing the path to the configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="errorInfo" vsli:raw="An instance of &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />의 인스턴스이거나 <see langword="null" />입니다.</param>
      <returns vsli:raw="A normalized subpath string.">정규화된 하위 경로 문자열입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to initialize application configuration properties.">내부 .NET 구조체에서 애플리케이션 구성 속성을 초기화하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary vsli:raw="Creates and returns a context object for a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; of an application configuration.">애플리케이션 구성의 <see cref="T:System.Configuration.ConfigurationElement" />에 대한 컨텍스트 개체를 만들어 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath" vsli:raw="A string representing a subpath location of the configuration element.">구성 요소의 하위 경로 위치를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A context object for a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object of an application configuration.">애플리케이션 구성의 <see cref="T:System.Configuration.ConfigurationElement" /> 개체에 대한 컨텍스트 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary vsli:raw="Creates and returns a deprecated context object of the application configuration.">애플리케이션 구성의 사용되지 않는 컨텍스트 개체를 만들어 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing a path to an application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A deprecated context object of the application configuration.">애플리케이션 구성의 사용되지 않는 컨텍스트 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Decrypts an encrypted configuration section and returns it as a string.">암호화된 구성 섹션을 해독하고 문자열로 반환합니다.</summary>
      <param name="encryptedXml" vsli:raw="An encrypted XML string representing a configuration section.">구성 섹션을 나타내는 암호화된 XML 문자열입니다.</param>
      <param name="protectionProvider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체</param>
      <param name="protectedConfigSection" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 개체</param>
      <returns vsli:raw="A decrypted configuration section as a string.">문자열로 나타낸 해독된 구성 섹션입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the application configuration file.">애플리케이션 구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체를 삭제합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Encrypts a configuration section and returns it as a string.">구성 섹션을 암호화하고 문자열로 반환합니다.</summary>
      <param name="clearTextXml" vsli:raw="An XML string representing a configuration section to encrypt.">암호화할 구성 섹션을 나타내는 XML 문자열입니다.</param>
      <param name="protectionProvider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체</param>
      <param name="protectedConfigSection" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 개체</param>
      <returns vsli:raw="An encrypted configuration section represented as a string.">문자열로 나타낸 암호화된 구성 섹션입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary vsli:raw="Returns the complete path to an application configuration file based on the location subpath.">위치 하위 경로를 기반으로 애플리케이션 구성 파일의 전체 경로를 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationSubPath" vsli:raw="The subpath location of the configuration file.">구성 파일의 하위 경로 위치입니다.</param>
      <returns vsli:raw="A string representing the complete path to an application configuration file.">애플리케이션 구성 파일의 전체 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration object.">구성 개체의 형식을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <param name="typeName" vsli:raw="The type name.">형식 이름입니다.</param>
      <param name="throwOnError" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception if an error occurs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">오류 발생 시 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration object.">구성 개체의 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary vsli:raw="Returns a string representing a type name from the &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration.">구성의 형식을 나타내는 <see cref="T:System.Type" /> 개체의 형식 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">
        <see cref="T:System.Type" /> 개체입니다.</param>
      <returns vsli:raw="A string representing the type name from a &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration.">구성의 형식을 나타내는 <see cref="T:System.Type" /> 개체의 형식 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary vsli:raw="Associates the configuration with a &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object.">구성을 <see cref="T:System.Security.PermissionSet" /> 개체와 연결합니다.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <param name="permissionSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object to associate with the configuration.">구성과 연결할 <see cref="T:System.Security.PermissionSet" /> 개체입니다.</param>
      <param name="isHostReady" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the configuration host is has completed building associated permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 호스트에서 연결된 권한을 만드는 작업을 완료했음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary vsli:raw="Returns a string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" />과 연결된 구성 파일 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary vsli:raw="Returns a string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a remote configuration file.">원격 구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열을 반환합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열입니다.</param>
      <param name="configSource" vsli:raw="A string representing a path to a remote configuration file.">원격 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체와 연결된 구성 파일 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary vsli:raw="Returns the version of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object associated with configuration file.">구성 파일과 연결된 <see cref="T:System.IO.Stream" /> 개체의 버전을 반환합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns vsli:raw="The version of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object associated with configuration file.">구성 파일과 연결된 <see cref="T:System.IO.Stream" /> 개체의 버전입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary vsli:raw="Instructs the host to impersonate and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object required by the internal .NET structure.">가장하도록 호스트에 지시하고 내부 .NET 구조체에 필요한 <see cref="T:System.IDisposable" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; value.">
        <see cref="T:System.IDisposable" /> 값입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes a configuration host.">구성 호스트를 초기화합니다.</summary>
      <param name="configRoot" vsli:raw="The configuration root object.">구성 루트 개체입니다.</param>
      <param name="hostInitParams" vsli:raw="The parameter object containing the values used for initializing the configuration host.">구성 호스트 초기화에 사용되는 값을 포함하는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes a configuration object.">구성 개체를 초기화합니다.</summary>
      <param name="locationSubPath" vsli:raw="The subpath location of the configuration file.">구성 파일의 하위 경로 위치입니다.</param>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="locationConfigPath" vsli:raw="A string representing the location of a configuration path.">구성 경로의 위치를 나타내는 문자열입니다.</param>
      <param name="configRoot" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 개체</param>
      <param name="hostInitConfigurationParams" vsli:raw="The parameter object containing the values used for initializing the configuration host.">구성 호스트 초기화에 사용되는 값을 포함하는 매개 변수 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration.">구성 파일이 구성 계층 구조에서 애플리케이션 구성보다 높은 수준에 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 파일이 구성 계층 구조에서 애플리케이션 구성보다 높은 수준에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary vsli:raw="Returns a value indicating whether a child record is required for a child configuration path.">자식 레코드가 자식 구성 경로에 필요한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if child record is required for a child configuration path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">자식 레코드가 자식 구성 경로에 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary vsli:raw="Determines if a different &lt;see cref=&quot;T:System.Type&quot; /&gt; definition is allowable for an application configuration object.">애플리케이션 구성 개체에 다른 <see cref="T:System.Type" /> 정의가 허용되는지 여부를 결정합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 개체입니다.</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a different &lt;see cref=&quot;T:System.Type&quot; /&gt; definition is allowable for an application configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">애플리케이션 구성 개체에 다른 <see cref="T:System.Type" /> 정의가 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary vsli:raw="Returns a value indicating whether the file path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path.">
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 파일 경로가 올바른 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Stream" /> 개체에서 구성 파일을 읽는 데 사용하는 경로가 올바른 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands.">구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 섹션에서 완전히 신뢰된 코드 액세스 보안 수준이 필요하고 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 특성을 통해 암시적 링크 요청을 사용하지 않는 것을 허용하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether the initialization of a configuration object is considered delayed.">구성 개체의 초기화가 지연되는 것으로 간주되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization of a configuration object is considered delayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 개체의 초기화가 지연되는 것으로 간주되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration object supports a location tag.">구성 개체에서 위치 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration object supports a location tag; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 개체에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary vsli:raw="Returns a value indicating whether the configuration is remote.">구성이 원격 구성인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is remote; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성이 원격 구성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.">구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 경로가 루트로 내용을 처리해야 하는 구성 노드의 경로이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration path is trusted.">구성 경로가 신뢰되는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is trusted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 경로가 신뢰되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to read a configuration file.">구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" />을 엽니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">구성 파일을 읽기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">구성 파일에 쓰거나 구성 파일을 만드는 데 사용되는 임시 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">구성 파일에 쓰기 위해 <see cref="T:System.IO.Stream" /> 개체를 엽니다. <see cref="T:System.IO.Stream" /> 개체가 파일 특성을 복사하는 데 사용할 템플릿으로 지정될 수 있도록 합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which file attributes are to be copied as a template.">파일 특성을 복사할 템플릿인 <see cref="T:System.IO.Stream" />의 이름입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" />에서 지정된 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the entire configuration file could be read by a designated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">전체 구성 파일을 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entire configuration file could be read by the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object designated by &lt;paramref name=&quot;streamName&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전체 구성 파일을 <paramref name="streamName" />으로 지정된 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to read a designated section of its associated configuration file.">연결된 구성 파일의 지정된 섹션을 읽도록 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에 지시합니다.</summary>
      <param name="sectionGroupName" vsli:raw="A string representing the identifying name of a configuration file section group.">구성 파일 섹션 그룹을 식별하는 이름을 나타내는 문자열입니다.</param>
      <param name="sectionName" vsli:raw="A string representing the identifying name of a configuration file section.">구성 파일 섹션을 식별하는 이름을 나타내는 문자열입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a section of the configuration file designated by &lt;paramref name=&quot;sectionGroupName&quot; /&gt; and &lt;paramref name=&quot;sectionName&quot; /&gt; could be read by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="sectionGroupName" /> 및 <paramref name="sectionName" />으로 지정된 구성 파일의 섹션을 <see cref="T:System.IO.Stream" /> 개체에서 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Indicates a new configuration record requires a complete initialization.">새 구성 레코드에 완전한 초기화가 필요함을 나타냅니다.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to monitor an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">연결된 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에서 구성 파일의 변경 사항을 모니터링하도록 <see cref="T:System.IO.Stream" /> 개체에 지시합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object to receive the returned data representing the changes in the configuration file.">구성 파일의 변경 사항을 나타내는 반환된 데이터를 받을 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing changed configuration settings.">변경된 구성 설정을 포함하는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the  &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to stop monitoring an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">연결된 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체에서 구성 파일의 변경 사항을 모니터링하는 작업을 중지하도록 <see cref="T:System.IO.Stream" /> 개체에 지시합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports change notification.">호스트 구성에서 변경 알림을 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports change notification; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성에서 변경 알림을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports location tags.">호스트 구성에서 위치 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports location tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성에서 위치 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports path tags.">호스트 구성에서 경로 태그를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports path tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성에서 경로 태그를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports configuration refresh.">호스트 구성에서 구성 새로 고침을 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports configuration refresh; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성에서 구성 새로 고침을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Verifies that a configuration definition is allowed for a configuration record.">구성 정의가 구성 레코드에 허용되는지 확인합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">애플리케이션 구성 파일의 경로를 나타내는 문자열입니다.</param>
      <param name="allowDefinition" vsli:raw="A &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowDefinition&quot; /&gt; object.">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 개체입니다.</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 개체입니다.</param>
      <param name="errorInfo" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 개체</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed.">구성 파일에 대한 쓰기가 모두 완료되었음을 나타냅니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the write to the configuration file was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 파일에 대한 쓰기가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.">구성 파일에 대한 쓰기가 모두 완료되었음을 나타내고 권한이 어설션되는지 여부를 지정합니다.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the write was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">쓰기가 성공적으로 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 쓰기 컨텍스트입니다.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용 권한을 어설션하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to support creation of new configuration records.">내부 .NET 구조체에서 새 구성 레코드를 만드는 작업을 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary vsli:raw="Gets a string representing a configuration file path.">구성 파일 경로를 나타내는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A string representing a configuration file path.">구성 파일 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary vsli:raw="Returns an object representing a section of a configuration from the last-known-good (LKG) configuration.">LKG(마지막으로 사용한 올바른) 구성의 구성 섹션을 나타내는 개체를 반환합니다.</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section.">구성 섹션의 키를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing the section of the last-known-good configuration specified by &lt;paramref name=&quot;configKey&quot; /&gt;.">
        <paramref name="configKey" />로 지정된 마지막으로 사용한 올바른 구성의 섹션을 나타내는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing a section of a configuration file.">구성 파일의 섹션을 나타내는 <see cref="T:System.Object" /> 인스턴스를 반환합니다.</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section.">구성 섹션의 키를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing a section of a configuration file.">구성 파일의 섹션을 나타내는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary vsli:raw="Returns a value indicating whether an error occurred during initialization of a configuration object.">구성 개체를 초기화하는 동안 오류가 발생했는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an error occurred during initialization of a configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 개체를 초기화하는 동안 오류가 발생했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary vsli:raw="Causes a specified section of the configuration object to be reinitialized.">구성 개체의 지정된 섹션이 다시 초기화되도록 합니다.</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section that is to be refreshed.">새로 고칠 구성 섹션의 키를 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary vsli:raw="Removes a configuration record.">구성 레코드를 제거합니다.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 반환합니다.</summary>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary vsli:raw="Grants the configuration object the permission to throw an exception if an error occurs during initialization.">초기화하는 동안 오류가 발생하면 예외를 throw할 권한을 구성 개체에 부여합니다.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to support a configuration root object.">내부 .NET 구조체에서 구성 루트 개체를 지원하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged&quot; /&gt; event of an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">
        <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> 개체의 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved&quot; /&gt; event of a &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">
        <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> 개체의 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a configuration specified by a configuration path.">구성 경로로 지정된 구성을 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체를 반환합니다.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a configuration specified by &lt;paramref name=&quot;configPath&quot; /&gt;.">
        <paramref name="configPath" />로 지정된 구성을 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the data in a section of a configuration file.">구성 파일의 섹션에 있는 데이터를 나타내는 <see cref="T:System.Object" />를 반환합니다.</summary>
      <param name="section" vsli:raw="A string representing a section of a configuration file.">구성 파일의 섹션을 나타내는 문자열입니다.</param>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">구성 파일의 경로를 나타내는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the data in a section of a configuration file.">구성 파일의 섹션에 있는 데이터를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary vsli:raw="Returns a value representing the file path of the nearest configuration ancestor that has configuration data.">구성 데이터가 있는 가장 가까운 구성 부모의 파일 경로를 나타내는 값을 반환합니다.</summary>
      <param name="configPath" vsli:raw="The path of configuration file.">구성 파일의 경로입니다.</param>
      <returns vsli:raw="A string representing the file path of the nearest configuration ancestor that has configuration data.">구성 데이터가 있는 가장 가까운 구성 부모의 파일 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a unique configuration record for given configuration path.">지정된 구성 경로에 대한 고유 구성 레코드를 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체를 반환합니다.</summary>
      <param name="configPath" vsli:raw="The path of the configuration file.">구성 파일의 경로입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a unique configuration record for a given configuration path.">지정된 구성 경로에 대한 고유 구성 레코드를 나타내는 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary vsli:raw="Initializes a configuration object.">구성 개체를 초기화합니다.</summary>
      <param name="host" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 개체</param>
      <param name="isDesignTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if design time; &lt;see langword=&quot;false&quot; /&gt; if run time.">디자인 타임이면 <see langword="true" />이고, 런타임이면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary vsli:raw="Returns a value indicating whether the configuration is a design-time configuration.">구성이 디자인 타임 구성인지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is a design-time configuration; &lt;see langword=&quot;false&quot; /&gt; if the configuration is not a design-time configuration.">구성이 디자인 타임 구성이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary vsli:raw="Finds and removes a configuration record and all its children for a given configuration path.">지정된 구성 경로의 모든 자식과 구성 레코드를 찾아 제거합니다.</summary>
      <param name="configPath" vsli:raw="The path of the configuration file.">구성 파일의 경로입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary vsli:raw="Defines an interface used by the configuration system to set the &lt;see cref=&quot;T:System.Configuration.ConfigurationSettings&quot; /&gt; class.">구성 시스템에서 <see cref="T:System.Configuration.ConfigurationSettings" /> 클래스를 설정하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary vsli:raw="Indicates that initialization of the configuration system has completed.">구성 시스템의 초기화가 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary vsli:raw="Provides hierarchical configuration settings and extensions specific to ASP.NET to the configuration system.">ASP.NET에 관련된 계층적 구성 설정 및 확장을 구성 시스템에 제공합니다.</summary>
      <param name="internalConfigSystem" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigSystem&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Configuration.ConfigurationSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> 클래스에서 사용하는 <see cref="T:System.Configuration.ConfigurationSettings" /> 개체입니다.</param>
      <param name="initComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization process of the configuration system is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 시스템의 초기화 프로세스가 완료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary vsli:raw="Defines an interface used by .NET to initialize application configuration properties.">.NET Framework에서 애플리케이션 구성 속성을 초기화하는 데 사용되는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary vsli:raw="Returns the configuration object based on the specified key.">지정된 키를 기준으로 구성 개체를 반환합니다.</summary>
      <param name="configKey" vsli:raw="The configuration key value.">구성 키 값입니다.</param>
      <returns vsli:raw="A configuration object.">구성 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary vsli:raw="Refreshes the configuration system based on the specified section name.">지정된 섹션 이름을 기준으로 구성 시스템을 새로 고칩니다.</summary>
      <param name="sectionName" vsli:raw="The name of the configuration section.">구성 섹션의 이름입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary vsli:raw="Gets a value indicating whether the user configuration is supported.">사용자 구성이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user configuration is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">사용자 구성이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary vsli:raw="Defines a class that allows the .NET infrastructure to specify event arguments for configuration events.">.NET Framework 인프라에서 구성 이벤트에 대한 이벤트 인수를 지정할 수 있게 해주는 클래스를 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Internal.InternalConfigEventArgs&quot; /&gt; class.">
        <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="configPath" vsli:raw="A configuration path.">구성 경로입니다.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary vsli:raw="Gets or sets the configuration path related to the &lt;see cref=&quot;T:System.Configuration.Internal.InternalConfigEventArgs&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> 개체와 관련된 구성 경로를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string value specifying the configuration path.">구성 경로를 지정하는 문자열 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary vsli:raw="Defines a class used by the .NET infrastructure to support configuration events.">.NET Framework 인프라에서 구성 이벤트를 지원하는 데 사용되는 클래스를 정의합니다.</summary>
      <param name="sender" vsli:raw="The source object of the event.">이벤트 소스 개체입니다.</param>
      <param name="e" vsli:raw="A configuration event argument.">구성 이벤트 인수입니다.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary vsli:raw="Represents a method for hosts to call when a monitored stream has changed.">모니터링되는 스트림이 변경되었을 때 호스트에서 호출할 메서드를 나타냅니다.</summary>
      <param name="streamName" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">구성 파일에서 I/O 작업을 수행하는 <see cref="T:System.IO.Stream" /> 개체의 이름입니다.</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary vsli:raw="Defines standard functionality for controls or libraries that store and retrieve application settings.">애플리케이션 설정을 저장하고 검색하는 컨트롤이나 라이브러리의 표준 기능을 정의합니다.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary vsli:raw="Reads the control's application settings into their corresponding properties and updates the control's state.">컨트롤의 애플리케이션 설정을 해당 속성으로 읽어 들이고 컨트롤의 상태를 업데이트합니다.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary vsli:raw="Resets the control's application settings properties to their default values.">컨트롤의 애플리케이션 설정 속성을 기본값으로 다시 설정합니다.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary vsli:raw="Persists the control's application settings properties.">컨트롤의 애플리케이션 설정 속성을 유지합니다.</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary vsli:raw="Gets or sets a value indicating whether the control should automatically persist its application settings properties.">컨트롤이 애플리케이션 설정 속성을 자동으로 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control should automatically persist its state; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컨트롤이 상태를 자동으로 유지하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary vsli:raw="Gets or sets the value of the application settings key for the current instance of the control.">컨트롤의 현재 인스턴스에 대한 애플리케이션 설정 키의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the settings key for the current instance of the control.">컨트롤의 현재 인스턴스에 대한 설정 키를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary vsli:raw="Provides the configuration setting for International Resource Identifier (IRI) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Resource Identifier) 처리에 대한 구성 설정을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; class.">
        <see cref="T:System.Configuration.IriParsingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; configuration setting.">
        <see cref="T:System.Configuration.IriParsingElement" /> 구성 설정의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.">IRI(International Resource Identifier) 처리를 사용하고 있는지 여부를 나타내는 부울입니다.</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary vsli:raw="Provides an interface for defining an alternate application settings provider.">대체 애플리케이션 설정 공급자를 정의하기 위한 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the settings provider compatible with the specified settings property.">지정된 설정 속성과 호환되는 설정 공급자를 반환합니다.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; that requires serialization.">serialization이 필요한 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
      <returns vsli:raw="If found, the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; that can persist the specified settings property; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">지정된 설정 속성을 유지할 수 있는 <see cref="T:System.Configuration.SettingsProvider" />가 있으면 해당 설정 공급자이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; objects.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the collection based on the supplied parameters.">제공된 매개 변수를 기반으로 컬렉션에 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 추가합니다.</summary>
      <param name="keyValue" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />
      </param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the collection based on the supplied parameters.">제공된 매개 변수를 기반으로 컬렉션에 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 추가합니다.</summary>
      <param name="key" vsli:raw="A string specifying the key.">키를 지정하는 문자열입니다.</param>
      <param name="value" vsli:raw="A string specifying the value.">값을 지정하는 문자열입니다.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary vsli:raw="Gets the keys to all items contained in the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection.">
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 컬렉션에 포함된 모든 항목에 대한 키를 가져옵니다.</summary>
      <returns vsli:raw="A string array.">문자열 배열입니다.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection.">
        <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 컬렉션을 지웁니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary vsli:raw="When overridden in a derived class, the &lt;see cref=&quot;M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement&quot; /&gt; method creates a new &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">
        <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> 메서드는 파생 클래스에서 재정의되는 경우 새 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 만듭니다.</summary>
      <returns vsli:raw="A newly created &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">새로 만든 <see cref="T:System.Configuration.KeyValueConfigurationElement" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Gets the element key for a specified configuration element when overridden in a derived class.">파생 클래스에서 재정의될 때 지정된 구성 요소의 요소 키를 가져옵니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; to which the key should be returned.">키가 반환될 <see cref="T:System.Configuration.KeyValueConfigurationElement" />입니다.</param>
      <returns vsli:raw="An object that acts as the key for the specified &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">지정된 <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키로 사용되는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object based on the supplied parameter.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 가져옵니다.</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; contained in the collection.">컬렉션에 포함된 <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키입니다.</param>
      <returns vsli:raw="A configuration element, or &lt;see langword=&quot;null&quot; /&gt; if the key does not exist in the collection.">구성 요소 또는 키가 컬렉션에 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary vsli:raw="Gets a collection of configuration properties.">구성 속성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of configuration properties.">구성 속성의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object from the collection.">컬렉션에서 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 제거합니다.</summary>
      <param name="key" vsli:raw="A string specifying the &lt;paramref name=&quot;key&quot; /&gt;.">
        <paramref name="key" />를 지정하는 문자열입니다.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary vsli:raw="Gets a value indicating whether an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection will cause an exception to be thrown.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 컬렉션에 중복되는 <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 개체를 추가하려고 하면 예외가 throw되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; to the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; will cause an exception to be thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 중복되는 <see cref="T:System.Configuration.KeyValueConfigurationElement" />를 추가하려고 할 때 예외가 throw되면 <see cref="T:System.Configuration.KeyValueConfigurationCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary vsli:raw="Represents a configuration element that contains a key/value pair.">키/값 쌍을 포함하는 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; class based on the supplied parameters.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키입니다.</param>
      <param name="value" vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 값입니다.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to its initial state.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체를 초기 상태로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary vsli:raw="Gets the key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체의 키를 가져옵니다.</summary>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 키입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary vsli:raw="Gets the collection of properties.">속성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; of properties for the element.">요소에 대한 속성의 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />의 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary vsli:raw="Provides persistence for application settings classes.">애플리케이션 설정 클래스를 유지합니다.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LocalFileSettingsProvider&quot; /&gt; class.">
        <see cref="T:System.Configuration.LocalFileSettingsProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary vsli:raw="Gets or sets the name of the currently running application.">현재 실행되는 애플리케이션의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string that contains the application's display name.">애플리케이션의 표시 이름을 포함하는 문자열입니다.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the value of the named settings property for the previous version of the same application.">이전 버전의 동일한 애플리케이션에 대한 명명된 설정 속성의 값을 반환합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; that describes where the application settings property is used.">애플리케이션 설정 속성이 사용되는 곳에 대해 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; whose value is to be returned.">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; representing the application setting if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">애플리케이션 설정을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValue" />가 있으면 해당 설정 속성 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Returns the collection of setting property values for the specified application instance and settings property group.">지정된 애플리케이션 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; containing the values for the specified settings property group.">지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the provider.">공급자를 초기화합니다.</summary>
      <param name="name" vsli:raw="The friendly name of the provider.">공급자의 이름입니다.</param>
      <param name="values" vsli:raw="A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.">이 공급자에 대한 구성에서 지정된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary vsli:raw="Resets all application settings properties associated with the specified application to their default values.">지정된 애플리케이션과 연결된 모든 애플리케이션 설정 속성을 기본값으로 다시 설정합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary vsli:raw="Sets the values of the specified group of property settings.">지정된 속성 설정 그룹의 값을 설정합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="values" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; representing the group of property settings to set.">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a general failure saving the settings to the configuration file.">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우
또는
구성 파일에 설정을 저장하는 동안 일반 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Attempts to migrate previous user-scoped settings from a previous version of the same application.">이전 버전의 동일한 애플리케이션에서 이전 사용자 범위 설정을 마이그레이션합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  &#xA;  &#xA; -or-  &#xA;  &#xA; The previous version of the configuration file could not be accessed.">사용자 범위 설정이 발견되었지만 현재 구성이 애플리케이션 범위 설정만 지원하는 경우
또는
이전 버전의 구성 파일에 액세스할 수 없는 경우</exception>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary vsli:raw="Provides validation of an &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 값의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">
        <see langword="long" /> 값의 최소 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">
        <see langword="long" /> 값의 최대 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">
        <see langword="long" /> 값의 최소 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">
        <see langword="long" /> 값의 최대 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">
        <see langword="long" /> 값의 최소 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">
        <see langword="long" /> 값의 최대 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <param name="resolution" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies a specific value that must be matched.">일치되어야 하는 특정 값을 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolution&quot; /&gt; is equal to or less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;maxValue&quot; /&gt; is less than &lt;paramref name=&quot;minValue&quot; /&gt;.">
        <paramref name="resolution" />이 <see langword="0" />보다 작거나 같습니다.
또는
<paramref name="maxValue" />가 <paramref name="minValue" />보다 작은 경우</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The type of object.">개체의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches an &lt;see cref=&quot;T:System.Int64&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see cref="T:System.Int64" />와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value of an object.">개체의 값입니다.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform long-integer validation on a configuration property. This class cannot be inherited.">구성 속성에 대한 정수(Long)의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.LongValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MinValue&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MaxValue&quot; /&gt; property values.">
        <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> 및 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> 속성 값으로 정의된 범위에 정수를 포함시킬지 아니면 제외시킬지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">값을 제외해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets or sets the maximum value allowed for the property.">속성에 허용되는 최대값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A long integer that indicates the allowed maximum value.">허용되는 최대값을 나타내는 정수(Long)입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MinValue&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />보다 작은 경우</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary vsli:raw="Gets or sets the minimum value allowed for the property.">속성에 허용되는 최소값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An integer that indicates the allowed minimum value.">허용되는 최소값을 나타내는 정수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MaxValue&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />보다 큰 경우</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.LongValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.NameValueConfigurationCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 추가합니다.</summary>
      <param name="nameValue" vsli:raw="A  &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary vsli:raw="Gets the keys to all items contained in the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.NameValueConfigurationCollection" />에 포함된 모든 항목에 대한 키를 가져옵니다.</summary>
      <returns vsli:raw="A string array.">문자열 배열입니다.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.NameValueConfigurationCollection" />을 지웁니다.</summary>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object based on the supplied parameter.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; contained in the collection.">컬렉션에 포함된 <see cref="T:System.Configuration.NameValueConfigurationElement" />의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object from the collection based on the provided parameter.">제공된 매개 변수에 따라 컬렉션에서 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 제거합니다.</summary>
      <param name="nameValue" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object from the collection based on the provided parameter.">제공된 매개 변수에 따라 컬렉션에서 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름입니다.</param>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary vsli:raw="A configuration element that contains a &lt;see cref=&quot;T:System.String&quot; /&gt; name and &lt;see cref=&quot;T:System.String&quot; /&gt; value. This class cannot be inherited.">
        <see cref="T:System.String" /> 이름 및 <see cref="T:System.String" /> 값을 포함하는 구성 요소입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; class based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름입니다.</param>
      <param name="value" vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 값입니다.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 개체의 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary vsli:raw="Provides access to a configuration file. This type supports the .NET configuration infrastructure and is not intended to be used directly from your code.">구성 파일에 액세스할 수 있도록 합니다. 이 형식은 .NET Framework 구성 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueFileSectionHandler&quot; /&gt; class.">
        <see cref="T:System.Configuration.NameValueFileSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">새 구성 처리기를 만들고 지정된 매개 변수에 따라 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent" vsli:raw="The parent object.">부모 개체입니다.</param>
      <param name="configContext" vsli:raw="The configuration context object.">구성 컨텍스트 개체입니다.</param>
      <param name="section" vsli:raw="The section XML node.">섹션 XML 노드입니다.</param>
      <returns vsli:raw="A configuration object.">구성 개체입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The file specified in the &lt;see langword=&quot;file&quot; /&gt; attribute of &lt;paramref name=&quot;section&quot; /&gt; exists but cannot be loaded.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see langword=&quot;name&quot; /&gt; attribute of &lt;paramref name=&quot;section&quot; /&gt; does not match the root element of the file specified in the &lt;see langword=&quot;file&quot; /&gt; attribute.">
        <paramref name="section" />의 <see langword="file" /> 특성에 지정된 파일이 있지만 이 파일을 로드할 수 없습니다.
또는
<paramref name="section" />의 <see langword="name" /> 특성이 <see langword="file" /> 특성에 지정된 파일의 루트 요소와 일치하지 않습니다.</exception>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary vsli:raw="Provides name/value-pair configuration information from a configuration section.">구성 섹션의 이름/값 쌍 구성 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueSectionHandler&quot; /&gt; class.">
        <see cref="T:System.Configuration.NameValueSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">새 구성 처리기를 만들고 지정된 매개 변수에 따라 섹션 처리기 컬렉션에 추가합니다.</summary>
      <param name="parent" vsli:raw="Parent object.">부모 개체입니다.</param>
      <param name="context" vsli:raw="Configuration context object.">구성 컨텍스트 개체입니다.</param>
      <param name="section" vsli:raw="Section XML node.">섹션 XML 노드입니다.</param>
      <returns vsli:raw="A configuration object.">구성 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the key in a key/value pair.">키/값 쌍에서 키로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value containing the name of the key attribute.">키 특성의 이름이 포함된 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the value in a key/value pair.">키/값 쌍에서 값으로 사용할 XML 특성 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value containing the name of the value attribute.">값 특성의 이름이 포함된 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary vsli:raw="Specifies that a settings provider should disable any logic that gets invoked when an application upgrade is detected. This class cannot be inherited.">설정 공급자가 애플리케이션 업그레이드가 검색될 때 호출되는 논리를 사용하지 않도록 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NoSettingsVersionUpgradeAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary vsli:raw="Specifies the override behavior of a configuration element for configuration elements in child directories.">자식 디렉터리의 구성 요소에 대한 구성 요소의 재정의 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary vsli:raw="The configuration setting of the element or group can be overridden by configuration settings that are in child directories.">요소 또는 그룹의 구성 설정이 자식 디렉터리의 구성 설정으로 재정의될 수 있습니다.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary vsli:raw="The configuration setting of the element or group cannot be overridden by configuration settings that are in child directories.">요소 또는 그룹의 구성 설정이 자식 디렉터리의 구성 설정으로 재정의될 수 없습니다.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary vsli:raw="The configuration setting of the element or group will be overridden by configuration settings that are in child directories if explicitly allowed by a parent element of the current configuration element or group. Permission to override is specified by using the &lt;see langword=&quot;OverrideMode&quot; /&gt; attribute.">현재 구성 요소 또는 그룹의 부모 요소가 명시적으로 허용하는 경우 요소 또는 그룹의 구성 설정이 자식 디렉터리의 구성 설정으로 재정의됩니다. 재정의 허용 여부는 <see langword="OverrideMode" /> 특성으로 지정됩니다.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary vsli:raw="Provides validation of a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object. This class cannot be inherited.">
        <see cref="T:System.TimeSpan" /> 개체의 유효성을 검사합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the object type can be validated.">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The object type.">개체 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see cref="T:System.TimeSpan" /> 개체와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value of an object.">개체의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be resolved as a positive &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">
        <paramref name="value" />를 양수 <see cref="T:System.TimeSpan" /> 값으로 확인할 수 없는 경우</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform time validation on a configuration property. This class cannot be inherited.">구성 속성에 대한 시간 유효성 검사를 수행하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary vsli:raw="Contains meta-information on an individual property within the configuration. This type cannot be inherited.">구성의 개별 속성에 대한 메타 정보를 포함합니다. 이 형식은 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; object related to the configuration attribute.">구성 특성과 관련된 <see cref="T:System.ComponentModel.TypeConverter" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.TypeConverter" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary vsli:raw="Gets an object containing the default value related to a configuration attribute.">구성 특성과 관련된 기본값을 포함하는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object containing the default value of the configuration attribute.">구성 특성의 기본값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary vsli:raw="Gets the description of the object that corresponds to a configuration attribute.">구성 특성에 해당하는 개체에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description of the configuration attribute.">구성 특성에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is a key.">구성 특성이 키인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration attribute is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 특성이 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is locked.">구성 특성이 잠겨 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체가 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute has been modified.">구성 특성이 수정되었는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is required.">구성 특성이 필요한지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary vsli:raw="Gets the line number in the configuration file related to the configuration attribute.">구성 특성과 관련된 구성 파일의 줄 번호를 가져옵니다.</summary>
      <returns vsli:raw="A line number of the configuration file.">구성 파일의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary vsli:raw="Gets the name of the object that corresponds to a configuration attribute.">구성 특성에 해당하는 개체의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary vsli:raw="Gets the source file that corresponds to a configuration attribute.">구성 특성에 해당하는 소스 파일을 가져옵니다.</summary>
      <returns vsli:raw="The source file of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 소스 파일입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that corresponds to a configuration attribute.">구성 특성에 해당하는 개체의 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Type" /> 개체의 <see cref="T:System.Configuration.PropertyInformation" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object related to the configuration attribute.">구성 특성과 관련된 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary vsli:raw="Gets or sets an object containing the value related to a configuration attribute.">구성 특성과 관련된 값을 포함하는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object containing the value for the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.PropertyValueOrigin&quot; /&gt; object related to the configuration attribute.">구성 특성과 관련된 <see cref="T:System.Configuration.PropertyValueOrigin" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyValueOrigin&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyValueOrigin" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Configuration.PropertyInformationCollection" /> 컬렉션을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Configuration.PropertyInformationCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;see cref=&quot;P:System.Array.Length&quot; /&gt; property of &lt;paramref name=&quot;array&quot; /&gt; is less than &lt;see cref=&quot;P:System.Collections.Specialized.NameObjectCollectionBase.Count&quot; /&gt; + &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="array" />의 <see cref="P:System.Array.Length" /> 속성이 <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />보다 작습니다.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection.">이 <see cref="T:System.Collections.IEnumerator" /> 컬렉션을 반복하는 데 사용되는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt;.">이 <see cref="T:System.Collections.IEnumerator" />을 반복하는 데 사용되는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 데이터로 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체를 채웁니다.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체입니다.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련되어 있는 serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object in the collection, based on the specified property name.">지정된 속성 이름에 따라 컬렉션에서 <see cref="T:System.Configuration.PropertyInformation" /> 개체를 가져옵니다.</summary>
      <param name="propertyName" vsli:raw="The name of the configuration attribute contained in the &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformationCollection" /> 개체에 포함된 구성 특성의 이름입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary vsli:raw="Specifies the level in the configuration hierarchy where a configuration property value originated.">구성 속성 값을 처음 제공한 구성 계층 구조의 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary vsli:raw="The configuration property value originates from the &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.DefaultValue&quot; /&gt; property.">구성 속성 값이 <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" /> 속성에서 제공됩니다.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary vsli:raw="The configuration property value is inherited from a parent level in the configuration.">구성 속성 값이 구성의 부모 수준에서 상속됩니다.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary vsli:raw="The configuration property value is defined at the current level of the hierarchy.">구성 속성 값이 계층 구조의 현재 수준에 정의되어 있습니다.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary vsli:raw="Provides access to the protected-configuration providers for the current application's configuration file.">현재 애플리케이션의 구성 파일에 대한 보호되는 구성 공급자에 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary vsli:raw="The name of the data protection provider.">데이터 보호 공급자의 이름입니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary vsli:raw="Gets the name of the default protected-configuration provider.">보호된 기본 구성 공급자의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the default protected-configuration provider.">보호된 기본 구성 공급자의 이름입니다.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary vsli:raw="The name of the protected data section.">보호되는 데이터 섹션의 이름입니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary vsli:raw="Gets a collection of the installed protected-configuration providers.">설치한 보호되는 구성 공급자의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProviderCollection&quot; /&gt; collection of installed &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects.">설치한 <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> 개체의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션입니다.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary vsli:raw="The name of the RSA provider.">RSA 공급자의 이름입니다.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary vsli:raw="The base class to create providers for encrypting and decrypting protected configuration data.">보호된 구성 데이터를 암호화하고 해독하는 데 사용되는 공급자를 만들기 위한 기본 클래스입니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; class using default settings.">기본 설정을 사용하여 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object from a configuration file.">구성 파일에서 전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 해독합니다.</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to decrypt.">해독할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing decrypted data.">해독된 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object from a configuration file.">구성 파일에서 전달된 <see cref="T:System.Xml.XmlNode" /> 개체를 암호화합니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to encrypt.">암호화할 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing encrypted data.">암호화된 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProviderCollection&quot; /&gt; class using default settings.">기본 설정을 사용하여 <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체를 추가합니다.</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is not a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <paramref name="provider" />이 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체가 아닙니다.</exception>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to add already exists in the collection.  &#xA;  &#xA;-or-&#xA;  &#xA; The collection is read-only.">추가할 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체가 이미 컬렉션에 있는 경우
또는
컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the collection with the specified name.">컬렉션에서 지정된 이름을 가진 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object with the specified name, or &lt;see langword=&quot;null&quot; /&gt; if there is no object with that name.">지정된 이름의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 개체이거나, 해당 이름의 개체가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary vsli:raw="Provides programmatic access to the &lt;see langword=&quot;configProtectedData&quot; /&gt; configuration section. This class cannot be inherited.">
        <see langword="configProtectedData" /> 구성 섹션에 프로그래밍 방식으로 액세스합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; class using default settings.">기본 설정을 사용하여 <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary vsli:raw="Gets or sets the name of the default &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the &lt;see cref=&quot;P:System.Configuration.ProtectedConfigurationSection.Providers&quot; /&gt; collection property.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션 속성에 있는 기본 <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> 개체의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the default &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the &lt;see cref=&quot;P:System.Configuration.ProtectedConfigurationSection.Providers&quot; /&gt; collection property.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션 속성에 있는 기본 <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection of all the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects in all participating configuration files.">참여하는 모든 구성 파일에 있는 모든 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection of all the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects in all participating configuration files.">참여하는 모든 구성 파일에 있는 모든 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 개체의 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary vsli:raw="Represents a group of configuration elements that configure the providers for the &lt;see langword=&quot;&amp;lt;configProtectedData&amp;gt;&quot; /&gt; configuration section.">
        <see langword="&lt;configProtectedData&gt;" /> 구성 섹션에 대한 공급자를 구성하는 구성 요소 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedProviderSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.ProtectedProviderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; collection that represents the properties of the providers for the protected configuration data.">보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; that represents the properties of the providers for the protected configuration data.">보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects that represent the properties of the providers for the protected configuration data.">보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ProviderSettings" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects that represent the properties of the providers for the protected configuration data.">보호되는 구성 데이터에 대한 공급자 속성을 나타내는 <see cref="T:System.Configuration.ProviderSettings" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary vsli:raw="Provides a base implementation for the extensible provider model.">확장 가능한 공급자 모델에 대한 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt; class.">
        <see cref="T:System.Configuration.Provider.ProviderBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary vsli:raw="Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).">관리 도구나 다른 UI(사용자 인터페이스)에 표시하기에 적합한 간단하고 이해하기 쉬운 설명을 가져옵니다.</summary>
      <returns vsli:raw="A brief, friendly description suitable for display in administrative tools or other UIs.">관리 도구나 다른 UI에 표시하기에 적합한 간단하고 이해하기 쉬운 설명입니다.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the configuration builder.">구성 작성기를 초기화합니다.</summary>
      <param name="name" vsli:raw="The friendly name of the provider.">공급자의 이름입니다.</param>
      <param name="config" vsli:raw="A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.">이 공급자에 대한 구성에서 지정된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The name of the provider is &lt;see langword=&quot;null&quot; /&gt;.">공급자 이름은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the provider has a length of zero.">공급자 이름의 길이가 0입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt is made to call &lt;see cref=&quot;M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)&quot; /&gt; on a provider after the provider has already been initialized.">공급자가 이미 초기화된 후 공급자에서 <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />를 호출하려고 합니다.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary vsli:raw="Gets the friendly name used to refer to the provider during configuration.">구성 중 공급자를 참조하는 데 사용되는 이름을 가져옵니다.</summary>
      <returns vsli:raw="The friendly name used to refer to the provider during configuration.">구성 중 공급자를 참조하는 데 사용되는 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary vsli:raw="Represents a collection of provider objects that inherit from &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt;.">
        <see cref="T:System.Configuration.Provider.ProviderBase" />에서 상속하는 공급자 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.Provider.ProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a provider to the collection.">컬렉션에 공급자를 추가합니다.</summary>
      <param name="provider" vsli:raw="The provider to be added.">추가할 공급자입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; of &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The length of the &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; of &lt;paramref name=&quot;provider&quot; /&gt; is less than 1.">
        <paramref name="provider" />의 <see cref="P:System.Configuration.Provider.ProviderBase.Name" />이 <see langword="null" />인 경우
또는
<paramref name="provider" />의 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 길이가 1보다 작은 경우</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary vsli:raw="Removes all items from the collection.">컬렉션에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is set to read-only.">컬렉션이 읽기 전용으로 설정된 경우</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary vsli:raw="Copies the contents of the collection to the given array starting at the specified index.">지정된 인덱스에서 시작하여 지정된 배열에 컬렉션의 내용을 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the elements of the collection to.">컬렉션의 요소를 복사할 배열입니다.</param>
      <param name="index" vsli:raw="The index of the collection item at which to start the copying process.">복사 프로세스를 시작할 컬렉션 항목의 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary vsli:raw="Gets the number of providers in the collection.">컬렉션의 공급자 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of providers in the collection.">컬렉션의 공급자 수입니다.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface to iterate through the collection.">컬렉션을 반복할 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하는 개체를 반환합니다.</summary>
      <returns vsli:raw="An object that implements &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; to iterate through the collection.">컬렉션을 반복할 <see cref="T:System.Collections.IEnumerator" />를 구현하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets the provider with the specified name.">지정된 이름의 공급자를 가져옵니다.</summary>
      <param name="name" vsli:raw="The key by which the provider is identified.">공급자를 식별하는 키입니다.</param>
      <returns vsli:raw="The provider with the specified name.">지정된 이름의 공급자입니다.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary vsli:raw="Removes a provider from the collection.">컬렉션에서 공급자를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the provider to be removed.">제거할 공급자의 이름입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection has been set to read-only.">컬렉션이 읽기 전용으로 설정된 경우</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">컬렉션을 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary vsli:raw="Gets the current object.">현재 개체를 가져옵니다.</summary>
      <returns vsli:raw="The current object.">현재 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderCollection&quot; /&gt; to an array, starting at a particular array index.">
        <see cref="T:System.Configuration.Provider.ProviderCollection" />의 요소를 특정 배열 인덱스에서 시작하여 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the elements of the collection to.">컬렉션의 요소를 복사할 배열입니다.</param>
      <param name="index" vsli:raw="The index of the array at which to start copying provider instances from the collection.">컬렉션의 공급자 인스턴스를 복사하기 시작할 배열의 인덱스입니다.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary vsli:raw="The exception that is thrown when a configuration provider error has occurred. This exception class is also used by providers to throw exceptions when internal errors occur within the provider that do not map to other pre-existing exception classes.">구성 공급자 오류가 발생할 때 throw되는 예외입니다. 이 예외 클래스는 공급자에서 기존의 다른 예외 클래스에 매핑되지 않는 내부 오류가 발생하는 경우 공급자가 예외를 throw하는 데도 사용됩니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">deserialize할 정보를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; was thrown.">이 <see cref="T:System.Configuration.Provider.ProviderException" />이 throw된 이유를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">
        <see cref="T:System.Configuration.Provider.ProviderException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; was thrown.">이 <see cref="T:System.Configuration.Provider.ProviderException" />이 throw된 이유를 설명하는 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that caused this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; to be thrown.">이 <see cref="T:System.Configuration.Provider.ProviderException" />이 throw되도록 한 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary vsli:raw="Represents the configuration elements associated with a provider.">공급자와 연결된 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.ProviderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.ProviderSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the provider to configure settings for.">설정을 구성할 공급자의 이름입니다.</param>
      <param name="type" vsli:raw="The type of the provider to configure settings for.">설정을 구성할 공급자의 형식입니다.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary vsli:raw="Gets or sets the name of the provider configured by this class.">이 클래스에서 구성하는 공급자의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the provider.">공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary vsli:raw="Gets a collection of user-defined parameters for the provider.">공급자에 대한 사용자 정의 매개 변수의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; of parameters for the provider.">공급자에 대한 매개 변수의 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary vsli:raw="Gets or sets the type of the provider configured by this class.">이 클래스에서 구성하는 공급자의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The fully qualified namespace and class name for the type of provider configured by this &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; instance.">이 <see cref="T:System.Configuration.ProviderSettings" /> 인스턴스에서 구성하는 공급자의 형식에 대한 정규화된 네임스페이스 및 클래스 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ProviderSettings" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.ProviderSettingsCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.ProviderSettings" /> 개체를 추가합니다.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to add.">추가할 <see cref="T:System.Configuration.ProviderSettings" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary vsli:raw="Clears the collection.">컬렉션을 지웁니다.</summary>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value at the specified index in the &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection.">
        <see cref="T:System.Configuration.ProviderSettingsCollection" /> 컬렉션의 지정된 인덱스에 있는 값을 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; to return.">반환할 <see cref="T:System.Configuration.ProviderSettings" />의 인덱스입니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt;.">지정된 <see cref="T:System.Configuration.ProviderSettings" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the collection.">컬렉션에서 항목을 가져옵니다.</summary>
      <param name="key" vsli:raw="A string reference to the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object within the collection.">컬렉션 내의 <see cref="T:System.Configuration.ProviderSettings" /> 개체에 대한 문자열 참조입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object contained in the collection.">컬렉션에 포함된 <see cref="T:System.Configuration.ProviderSettings" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary vsli:raw="Removes an element from the collection.">컬렉션에서 요소를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to remove.">제거할 <see cref="T:System.Configuration.ProviderSettings" /> 개체의 이름입니다.</param>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary vsli:raw="Provides validation of a string based on the rules provided by a regular expression.">정규식으로 제공되는 규칙에 따라 문자열의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.RegexStringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="regex" vsli:raw="A string that specifies a regular expression.">정규식을 지정하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;regex&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="regex" />가 null이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The type of object.">개체의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 문자열과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value of an object.">개체의 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not conform to the parameters of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">
        <paramref name="value" />가 <see cref="T:System.Text.RegularExpressions.Regex" /> 클래스의 매개 변수와 일치하지 않는 경우</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform string validation on a configuration property using a regular expression. This class cannot be inherited.">정규식을 사용하여 구성 속성에 대한 문자열의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidatorAttribute&quot; /&gt; object.">
        <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> 개체의 새 인스턴스를 초기화합니다.</summary>
      <param name="regex" vsli:raw="The string to use for regular expression validation.">정규식 유효성 검사에 사용할 문자열입니다.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary vsli:raw="Gets the string used to perform regular-expression validation.">정규식 유효성 검사를 수행하는 데 사용되는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.">데코레이팅된 구성 요소 속성에 할당된 문자열을 필터링하는 데 사용되는 정규식이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.RegexStringValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; instance that uses RSA encryption to encrypt and decrypt configuration data.">RSA 암호화를 사용하여 구성 데이터를 암호화하고 해독하는 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 인스턴스를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; class.">
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary vsli:raw="Adds a key to the RSA key container.">RSA 키 컨테이너에 키를 추가합니다.</summary>
      <param name="keySize" vsli:raw="The size of the key to add.">추가할 키의 크기입니다.</param>
      <param name="exportable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the key is exportable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">키를 내보낼 수 있음을 나타내려면 <see langword="true" />이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary vsli:raw="Gets the name of the Windows cryptography API (crypto API) cryptographic service provider (CSP).">Windows crypto API(cryptography API) CSP(암호화 서비스 공급자)의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the CryptoAPI cryptographic service provider.">CryptoAPI 암호화 서비스 공급자의 이름입니다.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the XML node passed to it.">전달된 XML 노드의 암호를 해독합니다.</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to decrypt.">암호를 해독할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="The decrypted XML node.">암호 해독된 XML 노드입니다.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary vsli:raw="Removes a key from the RSA key container.">RSA 키 컨테이너에서 키를 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the XML node passed to it.">전달된 XML 노드를 암호화합니다.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to encrypt.">암호화할 <see cref="T:System.Xml.XmlNode" />입니다.</param>
      <returns vsli:raw="An encrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">암호화된 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary vsli:raw="Exports an RSA key from the key container.">키 컨테이너에서 RSA 키를 내보냅니다.</summary>
      <param name="xmlFileName" vsli:raw="The file name and path to export the key to.">키를 내보낼 파일 이름과 경로입니다.</param>
      <param name="includePrivateParameters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that private parameters are exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">프라이빗 매개 변수를 내보냈음을 나타내려면 <see langword="true" />이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred while opening the file.">파일을 여는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; specified a file that is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="path" />에 읽기 전용인 파일이 지정되었습니다.
또는
현재 플랫폼이 해당 작업을 지원하지 않는 경우
또는
<paramref name="path" />에 디렉터리가 지정되었습니다.
또는
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;path&quot; /&gt; was not found.">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is in an invalid format.">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">호출자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary vsli:raw="Imports an RSA key into the key container.">RSA 키를 키 컨테이너로 가져옵니다.</summary>
      <param name="xmlFileName" vsli:raw="The file name and path to import the key from.">키를 가져올 파일 이름과 경로입니다.</param>
      <param name="exportable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the key is exportable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">키를 내보낼 수 있음을 나타내려면 <see langword="true" />이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred while opening the file.">파일을 여는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; specified a file that is write-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="path" />가 쓰기 전용 파일을 지정한 경우
또는
현재 플랫폼이 해당 작업을 지원하지 않는 경우
또는
<paramref name="path" />에 디렉터리가 지정되었습니다.
또는
호출자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;path&quot; /&gt; was not found.">
        <paramref name="path" />에 지정된 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is in an invalid format.">
        <paramref name="path" />의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>기본 설정을 사용하여 공급자를 초기화합니다.</summary>
      <param name="name">개체에 사용할 공급자 이름입니다.</param>
      <param name="configurationValues">개체를 초기화할 때 사용할 값의 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 컬렉션입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" />에 하나 이상의 인식할 수 없는 값이 포함된 경우</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary vsli:raw="Gets the name of the key container.">키 컨테이너의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the key container.">키 컨테이너의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary vsli:raw="Gets the public key used by the provider.">공급자가 사용하는 공개 키를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.RSAParameters&quot; /&gt; object that contains the public key used by the provider.">공급자가 사용하는 공개 키가 포함된 <see cref="T:System.Security.Cryptography.RSAParameters" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary vsli:raw="Gets a value indicating whether the provider uses FIPS.">공급자가 FIPS를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provider uses FIPS; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">공급자가 FIPS를 사용하면 <see langword="true" />이고, 사용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using the machine key container.">
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 개체가 컴퓨터 키 컨테이너를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using the machine key container; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 개체가 컴퓨터 키 컨테이너를 사용하면 <see langword="true" />이고,  사용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary vsli:raw="Gets a value that indicates whether the provider is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data.">공급자가 OAEP(Optimal Asymmetric Encryption Padding) 키 교환 데이터를 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 개체가 OAEP(Optimal Asymmetric Encryption Padding) 키 교환 데이터를 사용하면 <see langword="true" />이고, 사용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary vsli:raw="Represents an element in a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; class.">
        <see cref="T:System.Configuration.SchemeSettingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary vsli:raw="Gets the value of the GenericUriParserOptions entry from a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SchemeSettingElement" /> 인스턴스에서 GenericUriParserOptions 항목의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of GenericUriParserOptions entry.">GenericUriParserOptions 항목의 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary vsli:raw="Gets the value of the Name entry from a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SchemeSettingElement" /> 인스턴스에서 Name 항목의 값을 가져옵니다.</summary>
      <returns vsli:raw="The protocol used by this schema setting.">이 스키마 설정에서 사용되는 프로토콜입니다.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; objects.">
        <see cref="T:System.Configuration.SchemeSettingElement" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary vsli:raw="Gets the default collection type of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" />의 기본 컬렉션 형식을 가져옵니다.</summary>
      <returns vsli:raw="The default collection type of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" />의 기본 컬렉션 형식입니다.</returns>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;.">지정된 <see cref="T:System.Configuration.SchemeSettingElement" />의 인덱스입니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; for the specified index location.">지정된 인덱스 위치에 대한 <see cref="T:System.Configuration.SchemeSettingElement" />입니다.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;; otherwise, -1.">지정된 <see cref="T:System.Configuration.SchemeSettingElement" />의 인덱스이거나, -1입니다.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an item at the specified index in the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; collection.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 컬렉션에서 지정된 인덱스의 항목을 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; to return.">반환할 <see cref="T:System.Configuration.SchemeSettingElement" />의 인덱스입니다.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;.">지정된 <see cref="T:System.Configuration.SchemeSettingElement" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The item specified by the parameter is &lt;see langword=&quot;null&quot; /&gt; or has been removed.">
        <paramref name="index" /> 매개 변수가 0보다 작습니다.
또는
매개 변수로 지정된 항목이 <see langword="null" />이거나 제거되었습니다.</exception>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; collection.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 컬렉션에서 항목을 가져옵니다.</summary>
      <param name="name" vsli:raw="A string reference to the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; object within the collection.">컬렉션 내의 <see cref="T:System.Configuration.SchemeSettingElement" /> 개체에 대한 문자열 참조입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; object contained in the collection.">컬렉션에 포함된 <see cref="T:System.Configuration.SchemeSettingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary vsli:raw="Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.">구성 계층 구조 내의 개별 섹션에 대한 메타데이터가 들어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary vsli:raw="Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.">구성 파일 계층 구조에서 연결된 구성 섹션을 정의할 수 있는 위치를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that indicates where in the configuration file hierarchy the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object can be declared.">구성 파일 계층 구조에서 연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 선언할 수 있는 위치를 나타내는 값입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary vsli:raw="Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.">구성 파일 계층 구조에서 연결된 구성 섹션을 선언할 수 있는 위치를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that indicates where in the configuration file hierarchy the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object can be declared for .exe files.">구성 파일 계층 구조에서 연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 .exe 파일에 대해 선언할 수 있는 위치를 나타내는 값입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary vsli:raw="Gets or sets a value that indicates whether the configuration section allows the &lt;see langword=&quot;location&quot; /&gt; attribute.">구성 섹션에서 <see langword="location" /> 특성을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;location&quot; /&gt; attribute is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 특성이 허용되면 <see langword="location" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary vsli:raw="Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.">연결된 구성 섹션을 하위 수준 구성 파일로 재정의할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the section can be overridden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">섹션을 재정의할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary vsli:raw="Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.">연결된 구성 섹션이 정의되어 있는 포함 파일이 있으면 해당 파일의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the include file in which the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is defined, if such a file exists; otherwise, an empty string (&quot;&quot;).">연결된 <see cref="T:System.Configuration.ConfigurationSection" />이 정의되어 있는 포함 파일이 있으면 해당 파일의 이름이고, 그렇지 않으면 빈 문자열("")입니다.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary vsli:raw="Forces the associated configuration section to appear in the configuration file.">연결된 구성 섹션이 구성 파일에 나타나도록 합니다.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary vsli:raw="Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.">연결된 구성 섹션을 구성 파일에 표시하거나 구성 파일에서 기존 섹션을 제거합니다.</summary>
      <param name="force" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated section should be written in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 섹션을 구성 파일에 기록하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;force&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the associated section cannot be exported to the child configuration file, or it is undeclared.">
        <paramref name="force" />가 <see langword="true" />이고 연결된 섹션을 자식 구성 파일에 내보낼 수 없거나 섹션이 선언되지 않은 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary vsli:raw="Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.">연결된 구성 섹션이 수정되지 않은 경우에도 저장되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object will be saved even if it has not been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA;Note: If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application1.exe.config.">연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체가 수정되지 않은 경우에도 저장되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.

수정된 내용이 없더라도 구성 파일이 저장되면 ASP.NET이 애플리케이션을 다시 시작합니다.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary vsli:raw="Gets the configuration section that contains the configuration section associated with this object.">이 개체와 연결된 구성 섹션이 포함된 구성 섹션을 가져옵니다.</summary>
      <returns vsli:raw="The configuration section that contains the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 연결된 <see cref="T:System.Configuration.SectionInformation" />이 들어 있는 구성 섹션입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method is invoked from a parent section.">메서드가 부모 섹션에서 호출된 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary vsli:raw="Returns an XML node object that represents the associated configuration-section object.">연결된 구성 섹션 개체를 나타내는 XML 노드 개체를 반환합니다.</summary>
      <returns vsli:raw="The XML representation for this configuration section.">이 구성 섹션의 XML 표현입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This configuration object is locked and cannot be edited.">이 구성 개체가 잠겨 있어 편집할 수 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary vsli:raw="Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.">연결된 구성 섹션에 지정된 설정이 관련 애플리케이션의 하위 디렉터리에 있는 애플리케이션에서 상속되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the settings specified in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object are inherited by child applications; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">하위 애플리케이션이 이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 지정된 설정을 상속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary vsli:raw="Gets a value that indicates whether the configuration section must be declared in the configuration file.">구성 섹션을 구성 파일에 선언해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object must be declared in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 구성 파일에 선언해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is declared in the configuration file.">연결된 구성 섹션이 구성 파일에 선언되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is declared in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationSection" />이 구성 파일에 선언되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is locked.">연결된 구성 섹션이 잠겨 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the section is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">섹션이 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is protected.">연결된 구성 섹션이 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is protected; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">이 <see cref="T:System.Configuration.ConfigurationSection" />이 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary vsli:raw="Gets the name of the associated configuration section.">연결된 구성 섹션의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The complete name of the configuration section.">구성 섹션의 전체 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.">연결된 구성 섹션을 자식 구성 파일에서 재정의할 수 있는지 여부를 지정하는 <see cref="T:System.Configuration.OverrideMode" /> 열거형 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.OverrideMode" /> 열거형 값 중 하나입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="An attempt was made to change both the &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowOverride&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.SectionInformation.OverrideMode&quot; /&gt; properties, which is not supported for compatibility reasons.">
        <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> 및 <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> 속성을 모두 변경하려고 한 경우. 호환성을 위해 이러한 동작은 지원되지 않습니다.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary vsli:raw="Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.">자식 구성 파일에 의한 구성 섹션의 기본 재정의 동작을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.OverrideMode" /> 열거형 값 중 하나입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The override behavior is specified in a parent configuration section.">부모 구성 섹션에 재정의 동작이 지정된 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary vsli:raw="Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.">자식 구성 파일에서 구성 섹션을 잠글 수 있는지 여부에 따른 구성 섹션의 재정의 동작을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.OverrideMode" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary vsli:raw="Gets the protected configuration provider for the associated configuration section.">연결된 구성 섹션의 보호되는 구성 공급자를 가져옵니다.</summary>
      <returns vsli:raw="The protected configuration provider for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 개체에 대한 보호된 구성 공급자입니다.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary vsli:raw="Marks a configuration section for protection.">보호를 위해 구성 섹션에 표시합니다.</summary>
      <param name="protectionProvider" vsli:raw="The name of the protection provider to use.">사용할 보호 공급자의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowLocation&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The target section is already a protected data section.">
        <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> 속성은 <see langword="false" />로 설정됩니다.
또는
대상 섹션이 이미 보호된 데이터 섹션인 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section requires access permissions.">연결된 구성 섹션에 액세스 권한이 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;requirePermission&quot; /&gt; attribute is set to &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 특성이 <see langword="requirePermission" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary vsli:raw="Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.">외부 구성 포함 파일을 변경할 때 애플리케이션을 다시 시작해야 하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a change in an external configuration include file requires an application restart; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">외부 구성 포함 파일을 변경할 때 애플리케이션을 다시 시작해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary vsli:raw="Causes the associated configuration section to inherit all its values from the parent section.">연결된 구성 섹션이 부모 섹션에서 모든 값을 상속하도록 합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method cannot be called outside editing mode.">편집 모드가 아니므로 이 메서드를 호출할 수 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary vsli:raw="Gets the name of the associated configuration section.">연결된 구성 섹션의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 이름입니다.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary vsli:raw="Sets the object to an XML representation of the associated configuration section within the configuration file.">구성 파일에 있는 연결된 구성 섹션의 XML 표현으로 개체를 설정합니다.</summary>
      <param name="rawXml" vsli:raw="The XML to use.">사용할 XML입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rawXml&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rawXml" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary vsli:raw="Gets or sets the section class name.">섹션 클래스의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the class that is associated with this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; section.">이 <see cref="T:System.Configuration.ConfigurationSection" /> 섹션에 연결된 클래스의 이름입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">선택한 값이 <see langword="null" /> 또는 빈 문자열("")인 경우</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">선택한 값이 이미 정의된 값과 충돌하는 경우</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary vsli:raw="Removes the protected configuration encryption from the associated configuration section.">연결된 구성 섹션에서 보호되는 구성 암호화를 제거합니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary vsli:raw="Represents a custom settings attribute used to associate settings information with a settings property.">설정 정보와 설정 속성을 연결하는 데 사용되는 사용자 지정 설정 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="settingName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application setting.">애플리케이션 설정의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <param name="settingClass" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing a category description of the setting. Often this parameter is set to the application settings group name.">설정의 범주 설명을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 애플리케이션 설정 그룹 이름으로 설정되는 경우가 많습니다.</param>
      <param name="settingKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the application settings key.">애플리케이션 설정 키를 포함하는 <see cref="T:System.String" />입니다.</param>
      <param name="newValue" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the new value to be assigned to the application settings property.">애플리케이션 설정 속성에 할당될 새 값을 포함하는 <see cref="T:System.Object" />입니다.</param>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이벤트를 취소하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary vsli:raw="Gets the new value being assigned to the application settings property.">애플리케이션 설정 속성에 할당되는 새 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the new value to be assigned to the application settings property.">애플리케이션 설정 속성에 할당될 새 값을 포함하는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary vsli:raw="Gets the application settings property category.">애플리케이션 설정 속성 범주를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing a category description of the setting. Typically, this parameter is set to the application settings group name.">설정의 범주 설명을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 대개 애플리케이션 설정 그룹 이름으로 설정됩니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary vsli:raw="Gets the application settings key associated with the property.">속성과 연결된 애플리케이션 설정 키를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the application settings key.">애플리케이션 설정 키를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary vsli:raw="Gets the name of the application setting associated with the application settings property.">애플리케이션 설정 속성과 연결된 애플리케이션 설정의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application setting.">애플리케이션 설정의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event, typically an application settings wrapper class derived from the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class.">이벤트의 소스로, 대개 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스에서 파생되는 애플리케이션 설정 래퍼 클래스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; containing the data for the event.">이벤트에 대한 데이터를 포함하는 <see cref="T:System.Configuration.SettingChangingEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary vsli:raw="Represents a simplified configuration element used for updating elements in the configuration. This class cannot be inherited.">구성의 요소를 업데이트하는 데 사용되는 간단한 구성 요소를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; class based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체의 이름입니다.</param>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object. This object is an enumeration used as the serialization scheme to store configuration settings.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다. 이 개체는 구성 설정을 저장할 serialization 체계로 사용되는 열거형입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; instance to the specified object.">현재 <see cref="T:System.Configuration.SettingElement" /> 인스턴스를 지정된 개체와 비교합니다.</summary>
      <param name="settings" vsli:raw="The object to compare with.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; instance is equal to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingElement" /> 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; current instance.">현재 <see cref="T:System.Configuration.SettingElement" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; current instance.">현재 <see cref="T:System.Configuration.SettingElement" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary vsli:raw="Gets or sets the serialization mechanism used to persist the values of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체의 값을 유지하는 데 사용되는 serialization 메커니즘을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary vsli:raw="Gets or sets the value of a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object by using a &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체를 사용하여 <see cref="T:System.Configuration.SettingValueElement" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object containing the value of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingValueElement" /> 개체의 값을 포함하는 <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Configuration.SettingElement" /> 개체의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElementCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingElementCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.SettingElement" /> 개체를 추가합니다.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; objects from the collection.">컬렉션에서 모든 <see cref="T:System.Configuration.SettingElement" /> 개체를 제거합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary vsli:raw="Gets the type of the configuration collection.">구성 컬렉션의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; object of the collection.">컬렉션의 <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object from the collection.">컬렉션에서 <see cref="T:System.Configuration.SettingElement" /> 개체를 가져옵니다.</summary>
      <param name="elementKey" vsli:raw="A string value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object in the collection.">컬렉션의 <see cref="T:System.Configuration.SettingElement" /> 개체를 나타내는 문자열 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object from the collection.">컬렉션에서 <see cref="T:System.Configuration.SettingElement" /> 개체를 제거합니다.</summary>
      <param name="element" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary vsli:raw="Represents a collection of key/value pairs used to describe a configuration object as well as a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">구성 개체와 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 설명하는 데 사용되는 키/값 쌍의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributes" vsli:raw="A collection of key/value pairs that are related to configuration settings.">구성 설정과 관련된 키/값 쌍의 컬렉션입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary vsli:raw="Provides the base class used to support user property settings.">사용자 속성 설정을 지원하는 데 사용되는 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary vsli:raw="Gets the associated settings context.">연결된 설정 컨텍스트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; associated with the settings instance.">설정 인스턴스와 연결된 <see cref="T:System.Configuration.SettingsContext" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary vsli:raw="Initializes internal properties used by &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsBase" /> 개체가 사용하는 내부 속성을 초기화합니다.</summary>
      <param name="context" vsli:raw="The settings context related to the settings properties.">설정 속성과 관련된 설정 컨텍스트입니다.</param>
      <param name="properties" vsli:raw="The settings properties that will be accessible from the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsBase" /> 인스턴스에서 액세스할 수 있는 설정 속성입니다.</param>
      <param name="providers" vsli:raw="The initialized providers that should be used when loading and saving property values.">속성 값을 로드하고 저장할 때 사용할 초기화된 공급자입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the object is synchronized (thread safe).">개체에 대한 액세스가 동기화되어 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsBase" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary vsli:raw="Gets or sets the value of the specified settings property.">지정된 설정 속성의 값을 가져오거나 설정합니다.</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the property to access.">액세스할 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="If found, the value of the named settings property.">명명된 설정 속성의 값입니다(있는 경우).</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="There are no properties associated with the current object, or the specified property could not be found.">현재 개체와 연결된 속성이 없거나 지정된 속성을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" vsli:raw="An attempt was made to set a read-only property.">읽기 전용 속성을 설정하려고 한 경우</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException" vsli:raw="The value supplied is of a type incompatible with the settings property, during a set operation.">set 작업 중 제공된 값이 설정 속성과 호환되지 않는 형식인 경우</exception>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary vsli:raw="Gets the collection of settings properties.">설정 속성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; collection containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">모든 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체가 포함된 <see cref="T:System.Configuration.SettingsProperty" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary vsli:raw="Gets a collection of settings property values.">설정 속성 값의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects representing the actual data values for the properties managed by the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 인스턴스가 관리하는 속성의 실제 데이터 값을 나타내는 <see cref="T:System.Configuration.SettingsBase" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary vsli:raw="Gets a collection of settings providers.">설정 공급자의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; containing &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; objects.">
        <see cref="T:System.Configuration.SettingsProviderCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProvider" /></returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary vsli:raw="Stores the current values of the settings properties.">설정 속성의 현재 값을 저장합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class that is synchronized (thread safe).">동기화되어 스레드로부터 안전한 <see cref="T:System.Configuration.SettingsBase" /> 클래스를 제공합니다.</summary>
      <param name="settingsBase" vsli:raw="The class used to support user property settings.">사용자 속성 설정을 지원하는 데 사용되는 클래스입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class that is synchronized.">동기화된 <see cref="T:System.Configuration.SettingsBase" /> 클래스입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary vsli:raw="Provides contextual information that the provider can use when persisting settings.">공급자가 설정을 유지할 때 사용할 수 있는 컨텍스트 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary vsli:raw="Provides a string that describes an individual configuration property. This class cannot be inherited.">개별 구성 속성을 설명하는 문자열을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsDescriptionAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsDescriptionAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="description" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; used as descriptive text.">설명 텍스트로 사용되는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary vsli:raw="Gets the descriptive text for the associated configuration property.">연결된 구성 속성에 대한 설명 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the associated configuration property.">연결된 구성 속성에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary vsli:raw="Provides a string that describes an application settings property group. This class cannot be inherited.">애플리케이션 설정 속성 그룹을 설명하는 문자열을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsGroupDescriptionAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="description" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the application settings group.">애플리케이션 설정 그룹에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary vsli:raw="The descriptive text for the application settings properties group.">애플리케이션 설정 속성 그룹에 대한 설명 텍스트입니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the application settings group.">애플리케이션 설정 그룹에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary vsli:raw="Specifies a name for application settings property group. This class cannot be inherited.">애플리케이션 설정 속성 그룹의 이름을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsGroupNameAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsGroupNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="groupName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application settings property group.">애플리케이션 설정 속성 그룹의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary vsli:raw="Gets the name of the application settings property group.">애플리케이션 설정 속성 그룹의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application settings property group.">애플리케이션 설정 속성 그룹의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object from which settings are loaded.">설정이 로드되는 <see cref="T:System.Configuration.SettingsProvider" /> 개체입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary vsli:raw="Gets the settings provider used to store configuration settings.">구성 설정을 저장하는 데 사용되는 설정 공급자를 가져옵니다.</summary>
      <returns vsli:raw="A settings provider.">설정 공급자입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event, typically the settings class.">대개 설정 클래스인 이벤트의 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; object that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> 개체입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary vsli:raw="Provides values to indicate which services should be made available to application settings.">애플리케이션 설정에 사용할 수 있는 서비스를 나타내는 값을 제공합니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary vsli:raw="Enables application settings to be stored in roaming user profiles. For more information about roaming user profiles, see Isolated Storage and Roaming.">애플리케이션 설정이 로밍 사용자 프로필에 저장될 수 있도록 합니다. 로밍 사용자 프로필에 대한 자세한 내용은 격리된 스토리지 및 로밍을 참조하세요.</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary vsli:raw="Specifies special services for application settings properties. This class cannot be inherited.">애플리케이션 설정 속성에 대한 특수 서비스를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsManageabilityAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsManageabilityAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="manageability" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsManageability&quot; /&gt; value that enumerates the services being requested.">요청되는 서비스를 열거하는 <see cref="T:System.Configuration.SettingsManageability" /> 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary vsli:raw="Gets the set of special services that have been requested.">요청된 특수 서비스 집합을 가져옵니다.</summary>
      <returns vsli:raw="A value that results from using the logical &lt;see langword=&quot;OR&quot; /&gt; operator to combine all the &lt;see cref=&quot;T:System.Configuration.SettingsManageability&quot; /&gt; enumeration values corresponding to the requested services.">요청된 서비스에 해당하는 모든 <see cref="T:System.Configuration.SettingsManageability" /> 열거형 값을 논리 <see langword="OR" /> 연산자로 결합하여 구한 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary vsli:raw="Used internally as the class that represents metadata about an individual configuration property.">개별 구성 속성에 대한 메타데이터를 나타내는 클래스로 내부에서 사용됩니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class, based on the supplied parameter.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyToCopy" vsli:raw="Specifies a copy of an existing &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">기존 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 복사본을 지정합니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class. based on the supplied parameter.">
        <see cref="T:System.Configuration.SettingsProperty" /> 클래스의 새 인스턴스를 초기화합니다. 제공된 매개 변수를 기반으로 합니다.</summary>
      <param name="name" vsli:raw="Specifies the name of an existing &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">기존 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름을 지정합니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class based on the supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsProperty" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</param>
      <param name="propertyType" vsli:raw="The type of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 형식입니다.</param>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object to use for persistence.">유지하는 데 사용할 <see cref="T:System.Configuration.SettingsProvider" /> 개체입니다.</param>
      <param name="isReadOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value specifying whether the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is read-only.">
        <see cref="T:System.Boolean" /> 개체가 읽기 전용인지 여부를 지정하는 <see cref="T:System.Configuration.SettingsProperty" /> 값입니다.</param>
      <param name="defaultValue" vsli:raw="The default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 기본값입니다.</param>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object. This object is an enumeration used to set the serialization scheme for storing application settings.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다. 이 개체는 애플리케이션 설정을 저장할 serialization 체계를 설정하는 데 사용되는 열거형입니다.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 개체입니다.</param>
      <param name="throwOnErrorDeserializing" vsli:raw="A Boolean value specifying whether an error will be thrown when the property is unsuccessfully deserialized.">속성이 deserialize되지 못한 경우 오류가 throw되는지 여부를 지정하는 부울 값입니다.</param>
      <param name="throwOnErrorSerializing" vsli:raw="A Boolean value specifying whether an error will be thrown when the property is unsuccessfully serialized.">속성이 serialize되지 못한 경우 오류가 throw되는지 여부를 지정하는 부울 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object containing the attributes of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 개체의 특성을 포함하는 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 기본값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object containing the default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 기본값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary vsli:raw="Gets or sets a value specifying whether a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is read-only.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체가 읽기 전용인지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 읽기 전용이면 <see cref="T:System.Configuration.SettingsProperty" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" />의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary vsli:raw="Gets or sets the type for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" />의 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" /> 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary vsli:raw="Gets or sets the provider for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" />의 공급자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProvider" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsSerializeAs" />의 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary vsli:raw="Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully deserialized.">속성이 deserialize되지 못한 경우 오류가 throw되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error will be thrown when the property is unsuccessfully deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 deserialize되지 못한 경우 오류가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary vsli:raw="Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully serialized.">속성이 serialize되지 못한 경우 오류가 throw되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error will be thrown when the property is unsuccessfully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 serialize되지 못한 경우 오류가 throw되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 추가합니다.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects from the collection.">컬렉션에서 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 모두 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary vsli:raw="Creates a copy of the existing collection.">기존 컬렉션의 복사본을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 클래스입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; object to an array.">이 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체를 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the object to.">개체를 복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index at which to begin copying.">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary vsli:raw="Gets a value that specifies the number of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 수를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.SettingsProperty" /> 개체 수입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread safe).">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" />에 대한 액세스가 동기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets the collection item with the specified name.">지정된 이름을 갖는 컬렉션 항목을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object with the specified &lt;paramref name=&quot;name&quot; /&gt;.">지정된 <paramref name="name" />의 <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing when adding to the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 추가할 때 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing after adding to the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 추가한 후 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary vsli:raw="Performs additional, custom processing when clearing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 지울 때 사용자 지정 처리를 추가로 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary vsli:raw="Performs additional, custom processing after clearing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 지운 후 사용자 지정 처리를 추가로 수행합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing when removing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 제거할 때 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing after removing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 인스턴스의 내용을 제거한 후 사용자 지정 처리를 추가로 수행합니다.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object from the collection.">컬렉션에서 <see cref="T:System.Configuration.SettingsProperty" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">컬렉션을 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화할 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화할 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary vsli:raw="Provides an exception for read-only &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">읽기 전용 <see cref="T:System.Configuration.SettingsProperty" /> 개체에 대한 예외를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on the supplied parameters.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination of the serialized stream.">serialize된 스트림의 소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on a supplied parameter.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">예외 메시지를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">예외 메시지를 포함하는 문자열입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary vsli:raw="Provides an exception for &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects that are not found.">찾을 수 없는 <see cref="T:System.Configuration.SettingsProperty" /> 개체에 대한 예외를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination of the serialized stream.">serialize된 스트림의 소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on a supplied parameter.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">예외 메시지를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">예외 메시지를 포함하는 문자열입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary vsli:raw="Contains the value of a settings property that can be loaded and stored by an instance of &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsBase" /> 인스턴스에서 로드하고 저장할 수 있는 설정 속성의 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.SettingsPropertyValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="property" vsli:raw="Specifies a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 지정합니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary vsli:raw="Gets or sets whether the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has been deserialized.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 deserialize되었는지 여부를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has been deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 deserialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary vsli:raw="Gets or sets whether the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has changed.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 변경되었는지 여부를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has changed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary vsli:raw="Gets the name of the property from the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.SettingsProperty" /> 개체에서 속성의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object that describes the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 설명하는 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object. When this value is set, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.IsDirty&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.UsingDefaultValue&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; When a value is first accessed from the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property, and if the value was initially stored into the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object as a serialized representation using the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.SerializedValue&quot; /&gt; property, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property will trigger deserialization of the underlying value.  As a side effect, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.Deserialized&quot; /&gt; property will be set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; If this chain of events occurs in ASP.NET, and if an error occurs during the deserialization process, the error is logged using the health-monitoring feature of ASP.NET. By default, this means that deserialization errors will show up in the Application Event Log when running under ASP.NET. If this process occurs outside of ASP.NET, and if an error occurs during deserialization, the error is suppressed, and the remainder of the logic during deserialization occurs. If there is no serialized value to deserialize when the deserialization is attempted, then &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object will instead attempt to return a default value if one was configured as defined on the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; instance. In this case, if the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property was set to either &lt;see langword=&quot;null&quot; /&gt;, or to the string &quot;[null]&quot;, then the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object will initialize the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property to either &lt;see langword=&quot;null&quot; /&gt; for reference types, or to the default value for the associated value type.  On the other hand, if &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property holds a valid object reference or string value (other than &quot;[null]&quot;), then the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property is returned instead.  &#xA;  &#xA; If there is no serialized value to deserialize when the deserialization is attempted, and no default value was specified, then an empty string will be returned for string types. For all other types, a default instance will be returned by calling &lt;see cref=&quot;M:System.Activator.CreateInstance(System.Type)&quot; /&gt; - for reference types this means an attempt will be made to create an object instance using the parameterless constructor.  If this attempt fails, then &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값입니다. 이 값이 설정되면 <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> 속성이 <see langword="true" />로 설정되고 <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" />가 <see langword="false" />로 설정됩니다.
값이 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 속성에서 처음으로 액세스되는 경우 값이 처음에 <see cref="T:System.Configuration.SettingsPropertyValue" /> 속성을 사용하여 serialize된 표현으로 <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" /> 개체에 저장되었으면 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 속성은 내부 값의 deserialization을 발생시킵니다.  파생 작업으로 <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> 속성이 <see langword="true" />로 설정됩니다.
이 이벤트 체인이 ASP.NET에서 발생하고 deserialization 프로세스 중에 오류가 발생하면 ASP.NET의 상태 모니터링 기능을 사용하여 오류가 기록됩니다. 즉, 기본적으로 ASP.NET에서 실행할 경우 deserialization 오류가 애플리케이션 이벤트 로그에 표시됩니다. 이 프로세스가 ASP.NET 외부에서 발생하고 deserialization 중에 오류가 발생하면 오류가 표시되지 않으며 deserialization 중에 논리의 나머지 부분이 수행됩니다. deserialize하려고 할 때 deserialize할 serialize된 값이 없는 경우 연결된 <see cref="T:System.Configuration.SettingsPropertyValue" /> 인스턴스에 정의된 것처럼 기본값이 구성되어 있으면 <see cref="T:System.Configuration.SettingsProperty" /> 개체가 기본값을 대신 반환하려고 합니다. 이 경우 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성이 <see langword="null" />이나 "[null]" 문자열로 설정되어 있으면 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체가 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 속성을 참조 형식의 경우 <see langword="null" />로 초기화하고 연결된 값 형식의 경우 기본값으로 초기화합니다.  번면에 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성이 유효한 개체 참조나 "[null]"이 아닌 문자열 값을 보유하고 있으면 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성이 대신 반환됩니다.
deserialize하려고 할 때 deserialize할 serialize된 값이 없는 경우 기본값이 지정되어 있지 않으면 문자열 형식에 대해 빈 문자열이 반환됩니다. 다른 모든 형식의 경우에는를 호출 <see cref="M:System.Activator.CreateInstance(System.Type)" /> 하 여 기본 인스턴스가 반환 됩니다. 즉, 참조 형식에 대해 매개 변수가 없는 생성자를 사용 하 여 개체 인스턴스를 만들려고 시도 합니다.  기본 인스턴스 반환에 실패하면 <see langword="null" />이 반환됩니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="While attempting to use the default value from the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property, an error occurred.  Either the attempt to convert &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property to a valid type failed, or the resulting value was not compatible with the type defined by &lt;see cref=&quot;P:System.Configuration.SettingsProperty.PropertyType&quot; /&gt;.">
        <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성에서 기본값을 사용하려고 하는 동안 오류가 발생한 경우.  <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성을 유효한 형식으로 변환하지 못했거나 결과 값이 <see cref="P:System.Configuration.SettingsProperty.PropertyType" />에서 정의하는 형식과 호환되지 않습니다.</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary vsli:raw="Gets or sets the serialized value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 serialize된 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The serialized value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 serialize된 값입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The serialization options for the property indicated the use of a string type converter, but a type converter was not available.">속성의 serialization 옵션이 문자열 형식 변환기를 사용하도록 나타내지만 형식 변환기를 사용할 수 없는 경우</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary vsli:raw="Gets a Boolean value specifying whether the value of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object is the default value as defined by the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property value on the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">연결된 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체의 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 속성 값에서 정의하는 것과 같은 기본값이 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값인지 여부를 지정하는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체의 값이 기본값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary vsli:raw="Contains a collection of settings property values that map &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects to &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects.">
        <see cref="T:System.Configuration.SettingsProperty" /> 개체를 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체로 매핑하여 설정 속성 값의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object to the collection.">컬렉션에 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체를 추가합니다.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="An attempt was made to add an item to the collection, but the collection was marked as read-only.">컬렉션에 항목을 추가하려고 했지만 컬렉션이 읽기 전용으로 표시되어 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects from the collection.">컬렉션에서 모든 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체를 제거합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary vsli:raw="Creates a copy of the existing collection.">기존 컬렉션의 복사본을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 클래스입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; collection to an array.">이 <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy the collection to.">컬렉션을 복사할 대상인 배열입니다.</param>
      <param name="index" vsli:raw="The index at which to begin copying.">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary vsli:raw="Gets a value that specifies the number of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체의 수를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects in the collection.">컬렉션에 있는 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체 수입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">컬렉션에 적용되는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread safe).">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 컬렉션에 대한 액세스가 동기화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the collection.">컬렉션에서 항목을 가져옵니다.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object with the specified &lt;paramref name=&quot;name&quot; /&gt;.">지정된 <paramref name="name" />의 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object from the collection.">컬렉션에서 <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체를 제거합니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 개체의 이름입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="An attempt was made to remove an item from the collection, but the collection was marked as read-only.">컬렉션에서 항목을 제거하려고 했지만 컬렉션이 읽기 전용으로 표시되어 있는 경우</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">컬렉션을 읽기 전용으로 설정합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화할 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화할 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary vsli:raw="Provides an exception that is thrown when an invalid type is used with a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">잘못된 형식을 <see cref="T:System.Configuration.SettingsProperty" /> 개체와 함께 사용하는 경우 throw되는 예외를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameters.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination of the serialized stream.">serialize된 스트림의 소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameter.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">예외 메시지를 포함하는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameters.">제공된 매개 변수를 기반으로 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">예외 메시지를 포함하는 문자열입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary vsli:raw="Acts as a base class for deriving custom settings providers in the application settings architecture.">애플리케이션 설정 아키텍처에서 사용자 지정 설정 공급자를 파생시키기 위한 기본 클래스 역할을 합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsProvider" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary vsli:raw="Gets or sets the name of the currently running application.">현재 실행되는 애플리케이션의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the application's shortened name, which does not contain a full path or extension, for example, &lt;c&gt;SimpleAppSettings&lt;/c&gt;.">A <see cref="T:System.String" /> 를 포함 하지 않는 전체 경로 또는 확장명을 예를 들어, 애플리케이션의 약식된 이름을 포함 하는 <c>SimpleAppSettings</c>합니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Returns the collection of settings property values for the specified application instance and settings property group.">지정된 애플리케이션 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application use.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="collection" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; containing the values for the specified settings property group.">지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary vsli:raw="Sets the values of the specified group of property settings.">지정된 속성 설정 그룹의 값을 설정합니다.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
      <param name="collection" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; representing the group of property settings to set.">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary vsli:raw="Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.">현재 애플리케이션 설정 클래스나 속성에 대한 스토리지를 제공하는 데 사용되는 설정 공급자를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsProviderAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="providerTypeName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings provider.">설정 공급자의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsProviderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the settings provider type.">설정 공급자 형식을 포함하는 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary vsli:raw="Gets the type name of the settings provider.">설정 공급자의 형식 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings provider.">설정 공급자의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary vsli:raw="Represents a collection of application settings providers.">애플리케이션 설정 공급자의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a new settings provider to the collection.">새 설정 공급자를 컬렉션에 추가합니다.</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt; to add to the collection.">컬렉션에 추가할 <see cref="T:System.Configuration.Provider.ProviderBase" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;provider&quot; /&gt; parameter is not of type &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; property of the provider parameter is null or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; A settings provider with the same &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; already exists in the collection.">
        <paramref name="provider" /> 매개 변수가 <see cref="T:System.Configuration.SettingsProvider" /> 형식이 아닌 경우
또는
공급자 매개 변수의 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 속성이 null이거나 빈 문자열인 경우
또는
<see cref="P:System.Configuration.Provider.ProviderBase.Name" />이 같은 설정 공급자가 컬렉션에 이미 있는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;provider&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets the settings provider in the collection that matches the specified name.">지정된 이름과 일치하는 컬렉션의 설정 공급자를 가져옵니다.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the friendly name of the settings provider.">설정 공급자의 이름을 포함하는 <see cref="T:System.String" />입니다.</param>
      <returns vsli:raw="If found, the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; whose name matches that specified by the name parameter; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">이름 매개 변수에서 지정하는 이름과 일치하는 이름의 <see cref="T:System.Configuration.SettingsProvider" />가 있으면 해당 설정 공급자이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only when setting this value.">이 값을 설정할 때 컬렉션이 읽기 전용인 경우</exception>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsSaving&quot; /&gt; event.">
        <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event, typically a data container or data-bound collection.">이벤트의 소스로, 대개 데이터 컨테이너나 데이터 바인딩된 컬렉션입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CancelEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary vsli:raw="Determines the serialization scheme used to store application settings.">애플리케이션 설정을 저장하는 데 사용되는 serialization 체계를 결정합니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary vsli:raw="The settings property is serialized using binary object serialization.">설정 속성이 이진 개체 serialization을 사용하여 serialize됩니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary vsli:raw="The settings provider has implicit knowledge of the property or its type and picks an appropriate serialization mechanism. Often used for custom serialization.">설정 공급자가 속성이나 속성 형식을 암시적으로 인식하고 적절한 serialization 메커니즘을 선택합니다. 사용자 지정 serialization에 사용되는 경우가 많습니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary vsli:raw="The settings property is serialized as plain text.">설정 속성이 일반 텍스트로 serialize됩니다.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary vsli:raw="The settings property is serialized as XML using XML serialization.">설정 속성이 XML serialization을 사용하여 XML로 serialize됩니다.</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary vsli:raw="Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.">설정 공급자가 사용해야 하는 serialization 메커니즘을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAsAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsSerializeAsAttribute" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumerated value that specifies the serialization scheme.">serialization 체계를 지정하는 <see cref="T:System.Configuration.SettingsSerializeAs" /> 열거형 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumeration value that specifies the serialization scheme.">serialization 체계를 지정하는 <see cref="T:System.Configuration.SettingsSerializeAs" /> 열거형 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumerated value that specifies the serialization scheme.">serialization 체계를 지정하는 <see cref="T:System.Configuration.SettingsSerializeAs" /> 열거형 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary vsli:raw="Contains the XML representing the serialized value of the setting. This class cannot be inherited.">설정의 serialize된 값을 나타내는 XML을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingValueElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; instance to the specified object.">현재 <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스를 지정된 개체와 비교합니다.</summary>
      <param name="settingValue" vsli:raw="The object to compare.">비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; instance is equal to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; current instance.">현재 <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스를 나타내는 고유 값을 가져옵니다.</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; current instance.">현재 <see cref="T:System.Configuration.SettingValueElement" /> 인스턴스를 나타내는 고유 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary vsli:raw="Gets or sets the value of a &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object by using an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingValueElement" /> 개체를 사용하여 <see cref="T:System.Xml.XmlNode" /> 개체의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing the value of a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" />의 값이 포함된 <see cref="T:System.Configuration.SettingElement" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary vsli:raw="Handles configuration sections that are represented by a single XML tag in the .config file.">.config 파일의 단일 XML 태그가 나타내는 구성 섹션을 처리합니다.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SingleTagSectionHandler&quot; /&gt; class.">
        <see cref="T:System.Configuration.SingleTagSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Used internally to create a new instance of this object.">이 개체의 새 인스턴스를 만들기 위해 내부적으로 사용됩니다.</summary>
      <param name="parent" vsli:raw="The parent of this object.">이 개체의 부모입니다.</param>
      <param name="context" vsli:raw="The context of this object.">이 개체의 컨텍스트입니다.</param>
      <param name="section" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object in the configuration.">구성 파일의 <see cref="T:System.Xml.XmlNode" /> 개체입니다.</param>
      <returns vsli:raw="The created object handler.">만든 개체 처리기입니다.</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary vsli:raw="Specifies the special setting category of a application settings property.">애플리케이션 설정 속성의 특수 설정 범주를 지정합니다.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary vsli:raw="The configuration property represents a connection string, typically for a data store or network resource.">구성 속성이 주로 데이터 저장소나 네트워크 리소스에 대한 연결 문자열을 나타냅니다.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary vsli:raw="The configuration property represents a Uniform Resource Locator (URL) to a Web service.">구성 속성이 웹 서비스에 대한 URL(Uniform Resource Locator)을 나타냅니다.</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary vsli:raw="Indicates that an application settings property has a special significance. This class cannot be inherited.">애플리케이션 설정 속성에 특수한 의미가 있음을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SpecialSettingAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SpecialSettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="specialSetting" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SpecialSetting&quot; /&gt; enumeration value defining the category of the application settings property.">애플리케이션 설정 속성의 범주를 정의하는 <see cref="T:System.Configuration.SpecialSetting" /> 열거형 값입니다.</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary vsli:raw="Gets the value describing the special setting category of the application settings property.">애플리케이션 설정 속성의 특수 설정 범주를 설명하는 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SpecialSetting&quot; /&gt; enumeration value defining the category of the application settings property.">애플리케이션 설정 속성의 범주를 정의하는 <see cref="T:System.Configuration.SpecialSetting" /> 열거형 값입니다.</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary vsli:raw="Provides validation of a string.">문자열의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on a supplied parameter.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.StringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">문자열 값의 최소 길이를 지정하는 정수입니다.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.StringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">문자열 값의 최소 길이를 지정하는 정수입니다.</param>
      <param name="maxLength" vsli:raw="An integer that specifies the maximum length of the string value.">문자열 값의 최대 길이를 지정하는 정수입니다.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.StringValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">문자열 값의 최소 길이를 지정하는 정수입니다.</param>
      <param name="maxLength" vsli:raw="An integer that specifies the maximum length of the string value.">문자열 값의 최대 길이를 지정하는 정수입니다.</param>
      <param name="invalidCharacters" vsli:raw="A string that represents invalid characters.">잘못된 문자를 나타내는 문자열입니다.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The object type.">개체 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 문자열과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object value.">개체 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;paramref name=&quot;minValue&quot; /&gt; or greater than &lt;paramref name=&quot;maxValue&quot; /&gt; as defined in the constructor.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; contains invalid characters.">
        <paramref name="value" />가 생성자에 정의된 <paramref name="minValue" />보다 작거나 <paramref name="maxValue" /> 보다 큽니다.
또는
<paramref name="value" />에 잘못된 문자가 들어 있는 경우</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform string validation on a configuration property. This class cannot be inherited.">구성 속성에 대한 문자열의 유효성을 검사하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.StringValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary vsli:raw="Gets or sets the invalid characters for the property.">속성에 사용할 수 없는 문자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The string that contains the set of characters that are not allowed for the property.">속성에 사용할 수 없는 문자 집합이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length allowed for the string to assign to the property.">속성에 할당할 문자열의 허용되는 최대 길이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An integer that indicates the maximum allowed length for the string to assign to the property.">속성에 할당할 문자열에 허용되는 최대 길이를 나타내는 정수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.StringValidatorAttribute.MinLength&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />보다 작은 경우</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary vsli:raw="Gets or sets the minimum allowed value for the string to assign to the property.">속성에 할당할 문자열의 허용되는 최소값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An integer that indicates the allowed minimum length for the string to assign to the property.">속성에 할당할 문자열에 허용되는 최소 길이를 나타내는 정수입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.StringValidatorAttribute.MaxLength&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />보다 큰 경우</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.StringValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="A current &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; settings in a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.StringValidator" /> 유효성 검사기 인스턴스에 있는 현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 설정입니다.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary vsli:raw="Validates that an object is a derived class of a specified type.">개체가 지정된 형식의 파생 클래스인지 확인합니다.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SubclassTypeValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.SubclassTypeValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="baseClass" vsli:raw="The base class to validate against.">유효성 검사의 기준으로 사용할 기본 클래스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;baseClass&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="baseClass" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">형식에 따라 개체의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The object type.">개체 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a type that can be validated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 유효성을 검사할 수 있는 형식과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object value.">개체 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not of a &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be derived from &lt;paramref name=&quot;baseClass&quot; /&gt; as defined in the constructor.">
        <paramref name="value" />가 생성자에 정의된 대로 <paramref name="baseClass" />에서 파생될 수 있는 <see cref="T:System.Type" />이 아닌 경우</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform validation on a configuration property. This class cannot be inherited.">구성 속성에 대한 유효성 검사를 수행하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SubclassTypeValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="baseClass" vsli:raw="The base class type.">기본 클래스 형식입니다.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary vsli:raw="Gets the base type of the object being validated.">유효성이 검사되는 개체의 기본 형식을 가져옵니다.</summary>
      <returns vsli:raw="The base type of the object being validated.">유효성이 검사되는 개체의 기본 형식입니다.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator attribute instance.">유효성 검사기 특성 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; instance.">현재 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary vsli:raw="Converts a time span expressed in minutes.">분 단위로 표현된 시간 범위를 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanMinutesConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.TimeSpanMinutesConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">분 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert to.">변환할 대상 값입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; expressed in minutes or as a standard infinite time span.">분 단위나 표준 무한 시간 범위로 표현된 <see cref="T:System.TimeSpan" />을 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanMinutesOrInfiniteConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">
        <paramref name="data" /> 매개 변수가 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이면 <see cref="T:System.String" />이고, 그렇지 않으면 분 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <param name="type" vsli:raw="The conversion type.">변환 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">
        <paramref name="value" /> 매개 변수가 <see cref="T:System.String" />이면 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이고, 그렇지 않으면 분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary vsli:raw="Converts a time span expressed in seconds.">초 단위로 표현된 시간 범위를 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanSecondsConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in seconds.">초 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; cannot be parsed as an integer value.">
        <paramref name="data" />를 정수 값으로 구문 분석할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert to.">변환할 대상 값입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">분 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; expressed in seconds or as a standard infinite time span.">초 단위나 표준 무한 시간 범위로 표현된 <see cref="T:System.TimeSpan" />을 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanSecondsOrInfiniteConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.String" /> 를 <see cref="T:System.TimeSpan" />로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in seconds.">
        <paramref name="data" /> 매개 변수가 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이면 <see cref="T:System.String" />이고, 그렇지 않으면 초 단위로 <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a. &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.TimeSpan" />을 변환합니다. <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert.">변환할 값입니다.</param>
      <param name="type" vsli:raw="The conversion type.">변환 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in seconds.">
        <paramref name="value" /> 매개 변수가 <see cref="T:System.String" />이면 <see cref="F:System.TimeSpan.MaxValue" /> "infinite"이고, 그렇지 않으면 초 단위로 <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary vsli:raw="Provides validation of a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object.">
        <see cref="T:System.TimeSpan" /> 개체의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">유효성 검사를 통과할 수 있는 최소 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">유효성 검사를 통과할 수 있는 최대 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">유효성 검사를 통과할 수 있는 최소 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">유효성 검사를 통과할 수 있는 최대 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">제공된 매개 변수에 따라 <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">유효성 검사를 통과할 수 있는 최소 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">유효성 검사를 통과할 수 있는 최대 시간을 지정하는 <see cref="T:System.TimeSpan" /> 개체입니다.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">유효성 검사 범위가 독점적인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <param name="resolutionInSeconds" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies a number of seconds.">시간(초)을 지정하는 <see cref="T:System.Int64" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolutionInSeconds&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;minValue&quot; /&gt; is greater than &lt;paramref name=&quot;maxValue&quot; /&gt;.">
        <paramref name="resolutionInSeconds" />가 <see langword="0" />보다 작은 경우
또는
<paramref name="minValue" />가 <paramref name="maxValue" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
      <param name="type" vsli:raw="The type of the object.">개체의 형식입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="type" /> 매개 변수가 <see cref="T:System.TimeSpan" /> 값과 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">개체의 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value of an object.">개체의 값입니다.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform time validation on a configuration property. This class cannot be inherited.">구성 속성에 대한 시간 유효성 검사를 수행하도록 .NET Framework에 선언적으로 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidatorAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range as defined by &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MinValueString&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString&quot; /&gt;.">
        <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> 및 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />으로 정의된 범위에 정수를 포함할지 아니면 제외할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">값을 제외해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets the absolute maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">절대 최대 <see cref="T:System.TimeSpan" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The allowed maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">허용되는 최대 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary vsli:raw="Gets or sets the relative maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">상대 최대 <see cref="T:System.TimeSpan" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The allowed maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">허용되는 최대 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value represents less than &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MinValue&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />보다 작은 값을 나타내는 경우</exception>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary vsli:raw="Gets the absolute minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">절대 최소 <see cref="T:System.TimeSpan" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="The allowed minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">허용되는 최소 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary vsli:raw="Gets or sets the relative minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">상대 최소 <see cref="T:System.TimeSpan" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The minimum allowed &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">허용되는 최소 <see cref="T:System.TimeSpan" /> 값입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value represents more than &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MaxValue&quot; /&gt;.">선택한 값이 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />보다 큰 값을 나타내는 경우</exception>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary vsli:raw="Gets the absolute maximum value allowed.">허용되는 절대 최대값을 가져옵니다.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary vsli:raw="Gets the absolute minimum value allowed.">허용되는 절대 최소값을 가져옵니다.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class.">
        <see cref="T:System.Configuration.TimeSpanValidator" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 유효성 검사기 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary vsli:raw="Converts between type and string values. This class cannot be inherited.">형식과 문자열 값 간에 변환을 수행합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TypeNameConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.TypeNameConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; object to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">
        <see cref="T:System.String" /> 개체를 <see cref="T:System.Type" /> 개체로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the &lt;paramref name=&quot;data&quot; /&gt; parameter.">
        <paramref name="data" /> 매개 변수를 나타내는 <see cref="T:System.Type" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; value cannot be resolved.">
        <see cref="T:System.Type" /> 값을 확인할 수 없는 경우</exception>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Type&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">
        <see cref="T:System.Type" /> 개체를 <see cref="T:System.String" /> 개체로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert to.">변환할 대상 값입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수를 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary vsli:raw="Represents the Uri section within a configuration file.">구성 파일에 있는 Uri 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UriSection&quot; /&gt; class.">
        <see cref="T:System.Configuration.UriSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; object that contains the configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Configuration.IdnElement" /> 클래스에 IDN(International Domain Name) 처리에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Domain Name) 처리에 대한 구성 설정입니다.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Configuration.IriParsingElement" /> 클래스에 IRI(International Resource Identifiers) 구문 분석에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The configuration setting for International Resource Identifiers (IRI) parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 클래스에서 IRI(International Resource Identifiers) 구문 분석에 대한 구성 설정입니다.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; object that contains the configuration settings for scheme parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 스키마 구문 분석에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The configuration settings for scheme parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 클래스의 스키마 구문 분석에 대한 구성 설정입니다.</returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary vsli:raw="Specifies that an application settings group or property contains distinct values for each user of an application. This class cannot be inherited.">애플리케이션 설정 그룹이나 속성에 애플리케이션의 각 사용자에 대한 고유 값이 포함되어 있음을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UserScopedSettingAttribute&quot; /&gt; class.">
        <see cref="T:System.Configuration.UserScopedSettingAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary vsli:raw="Represents a grouping of related user settings sections within a configuration file. This class cannot be inherited.">구성 파일에 있는 관련된 사용자 설정 섹션의 그룹을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UserSettingsGroup&quot; /&gt; class.">
        <see cref="T:System.Configuration.UserSettingsGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary vsli:raw="Represents a method to be called after the validation of an object.">개체의 유효성 검사 후 호출할 메서드를 나타냅니다.</summary>
      <param name="value" vsli:raw="The callback method.">콜백 메서드입니다.</param>
      <param name="o">콜백 메서드입니다.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary vsli:raw="Converts a string to its canonical format.">문자열을 정규 형식으로 변환합니다.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.WhiteSpaceTrimStringConverter&quot; /&gt; class.">
        <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to canonical form.">
        <see cref="T:System.String" />을 정규 형식으로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">변환할 <see cref="T:System.String" /> 개체입니다.</param>
      <returns vsli:raw="An object representing the converted value.">변환된 값을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to canonical form.">
        <see cref="T:System.String" />을 정규 형식으로 변환합니다.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">변환 중 사용되는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <param name="value" vsli:raw="The value to convert to.">변환할 대상 값입니다.</param>
      <param name="type" vsli:raw="The type to convert to.">변환할 대상 형식입니다.</param>
      <returns vsli:raw="An object representing the converted value.">변환된 값을 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary vsli:raw="Represents the configuration section used by classes in the &lt;see cref=&quot;N:System.Drawing&quot; /&gt; namespace.">
        <see cref="N:System.Drawing" /> 네임스페이스에서 클래스에 의해 사용되는 구성 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Configuration.SystemDrawingSection&quot; /&gt; class.">
        <see cref="T:System.Drawing.Configuration.SystemDrawingSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary vsli:raw="Gets or sets the suffix to append to a file name indicated by a &lt;see cref=&quot;T:System.Drawing.ToolboxBitmapAttribute&quot; /&gt; when an assembly is declared with a &lt;see cref=&quot;T:System.Drawing.BitmapSuffixInSameAssemblyAttribute&quot; /&gt; or a &lt;see cref=&quot;T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&quot; /&gt;.">
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 또는 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" />를 사용하여 어셈블리를 선언할 때 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />로 나타내는 파일 이름에 추가할 접미사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The bitmap suffix.">비트맵 접미사입니다.</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary vsli:raw="Provides the possible values for the configuration setting of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; in the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; namespace.">
        <see cref="T:System.Configuration.IdnElement" /> 네임스페이스의 <see cref="N:System.Configuration" /> 구성 설정에 사용할 수 있는 값을 제공합니다.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary vsli:raw="This value will convert any Unicode domain names to their Punycode equivalents (IDN names).">이 값은 모든 유니코드 도메인 이름을 해당하는 Punycode 항목(IDN 이름)으로 변환합니다.</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary vsli:raw="This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.">이 값은 해당하는 Punycode 항목(IDN 이름)을 사용하도록 모든 외부 유니코드 도메인 이름을 변환합니다. 이 경우 로컬 인트라넷에 있는 국가별 이름을 처리하기 위해 인트라넷에 사용되는 DNS 서버가 유니코드 이름 확인을 지원해야 합니다.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary vsli:raw="Don't convert any Unicode domain names to use Punycode.">이 값은 Punycode를 사용하도록 어떠한 유니코드 도메인 이름도 변환하지 않습니다. 이 값은 .NET Framework 2.0 동작과 일치하는 기본값입니다.</summary>
    </member>
  </members>
</doc>