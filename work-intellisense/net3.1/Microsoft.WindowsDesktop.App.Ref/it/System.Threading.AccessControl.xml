<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary>Rappresenta un insieme di diritti di accesso concessi o negati per un utente o gruppo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> specificando l'utente o il gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</summary>
      <param name="identity">Utente o gruppo a cui viene applicata la regola. Deve essere di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che specificano i diritti concessi o negati.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> specificando il nome dell'utente o del gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</summary>
      <param name="identity">Nome dell'utente o del gruppo a cui la regola viene applicata.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che specificano i diritti concessi o negati.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
In alternativa
<paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="identity" /> è una stringa di lunghezza zero.
-oppure-
La lunghezza di <paramref name="identity" /> supera i 512 caratteri.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary>Ottiene i diritti concessi o negati dalla regola di accesso.</summary>
      <returns>Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che indicano i diritti concessi o negati dalla regola di accesso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary>Rappresenta un insieme di diritti di accesso da controllare per un utente o gruppo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />, che specifica l'utente o il gruppo da controllare, i diritti da controllare, e se controllare gli accessi riusciti, gli accessi non riusciti o entrambi i tipi di accesso.</summary>
      <param name="identity">Utente o gruppo a cui viene applicata la regola. Deve essere di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che specificano i tipi di accesso da controllare.</param>
      <param name="flags">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica se controllare gli accessi riusciti, gli accessi non riusciti o entrambi i tipi di accesso.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
In alternativa
<paramref name="flags" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary>Ottiene i diritti di accesso interessati dalla regola di controllo.</summary>
      <returns>Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che indica i diritti influenzati dalla regola di controllo.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary>Specifica i diritti per il controllo di accesso che possono essere applicati agli oggetti eventi di sistema denominati.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary>Diritto per modificare le regole di sicurezza e controllo associate a un evento denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary>Diritto per eliminare un evento denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary>Diritto per esercitare il controllo completo su un evento denominato e modificarne le regole di accesso e di controllo.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary>Diritto per impostare o ripristinare lo stato segnalato di un evento denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary>Diritto per aprire e copiare le regole di accesso e di controllo di un evento denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary>Diritto per restare in attesa di un evento denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary>Diritto per modificare il proprietario di un evento denominato.</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary>Rappresenta la sicurezza del controllo di accesso di Windows applicata a un handle di attesa del sistema denominato. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> con i valori predefiniti.</summary>
      <exception cref="T:System.NotSupportedException">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary>Ottiene il tipo di enumerazione utilizzato dalla classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> per rappresentare i diritti di accesso.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta l'enumerazione <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Crea una nuova regola di controllo di accesso per l'utente specificato, con i diritti di accesso, il controllo di accesso e i flag specificati.</summary>
      <param name="identityReference">Classe <see cref="T:System.Security.Principal.IdentityReference" /> che identifica l'utente o il gruppo a cui viene applicata la regola.</param>
      <param name="accessMask">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che specificano i diritti di accesso da concedere o negare, per effettuare il cast in un intero.</param>
      <param name="isInherited">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="inheritanceFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="propagationFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <returns>Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> che rappresenta i diritti specificati per l'utente specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> è <see langword="null" />.
In alternativa
<paramref name="accessMask" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> per rappresentare le regole di accesso.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Cerca una regola di controllo di accesso corrispondente a cui è possibile unire la nuova regola. Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</summary>
      <param name="rule">Regola di controllo di accesso da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Cerca una regola di controllo a cui è possibile unire la nuova regola. Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</summary>
      <param name="rule">Regola di controllo da aggiungere. L'utente specificato dalla regola determina la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Crea una nuova regola di controllo che specifica l'utente a cui viene applicata la regola, i diritti di accesso da controllare e il risultato che attiva la regola di controllo.</summary>
      <param name="identityReference">Classe <see cref="T:System.Security.Principal.IdentityReference" /> che identifica l'utente o il gruppo a cui viene applicata la regola.</param>
      <param name="accessMask">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> che specificano i diritti di accesso da controllare, per effettuare il cast in un intero.</param>
      <param name="isInherited">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="inheritanceFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="propagationFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="flags">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specificano se controllare l'accesso riuscito, l'accesso non riuscito o entrambi.</param>
      <returns>Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> che rappresenta la regola di controllo specificata per l'utente specificato. Il tipo restituito del metodo è la classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, ma è possibile effettuare in maniera sicura il cast del valore restituito nella classe derivata.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> è <see langword="null" />.
-oppure-
<paramref name="accessMask" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> per rappresentare le regole di controllo.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Cerca una regola di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola di accesso specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola di accesso specificata vengono rimossi da essa.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> che specifica l'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> da ricercare, nonché un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata. Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</param>
      <returns>
        <see langword="true" /> se viene trovata una regola compatibile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Cerca tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata e, se trovate, le rimuove.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> che specifica l'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> da ricercare. Qualsiasi diritto specificato da questa regola viene ignorato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Cerca una regola di controllo di accesso che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Cerca una regola di controllo con lo stesso utente della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola specificata vengono rimossi da essa.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> che specifica l'utente da ricercare e un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata. Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</param>
      <returns>
        <see langword="true" /> se viene trovata una regola compatibile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Cerca tutte le regole di controllo in cui l'utente sia identico a quello della regola specificata e rimuove le regole trovate.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> che specifica l'utente da ricercare. Qualsiasi diritto specificato da questa regola viene ignorato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Cerca una regola di controllo che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Rimuove tutte le regole di controllo di accesso con lo stesso utente della regola specificata, a prescindere dalla classe <see cref="T:System.Security.AccessControl.AccessControlType" />, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> da aggiungere. L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Rimuove tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> da aggiungere. L'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> della regola determinano le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Rimuove tutte le regole di controllo con lo stesso utente della regola specificata, a prescindere dal valore di <see cref="T:System.Security.AccessControl.AuditFlags" />, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> da aggiungere. L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary>Rappresenta un insieme di diritti di accesso concessi o negati per un utente o gruppo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.MutexAccessRule" /> specificando l'utente o il gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</summary>
      <param name="identity">Utente o gruppo a cui viene applicata la regola. Deve essere di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che specificano i diritti concessi o negati.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> è <see langword="null" />.
In alternativa
<paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.MutexAccessRule" /> specificando il nome dell'utente o del gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</summary>
      <param name="identity">Nome dell'utente o del gruppo a cui la regola viene applicata.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che specificano i diritti concessi o negati.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="identity" /> è una stringa di lunghezza zero.
-oppure-
La lunghezza di <paramref name="identity" /> supera i 512 caratteri.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary>Ottiene i diritti concessi o negati dalla regola di accesso.</summary>
      <returns>Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che indicano i diritti concessi o negati dalla regola di accesso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary>Rappresenta un insieme di diritti di accesso da controllare per un utente o gruppo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.MutexAuditRule" />, che specifica l'utente o il gruppo da controllare, i diritti da controllare, e se controllare gli accessi riusciti, gli accessi non riusciti o entrambi i tipi di accesso.</summary>
      <param name="identity">Utente o gruppo a cui viene applicata la regola. Deve essere di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che specificano i tipi di accesso da controllare.</param>
      <param name="flags">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica se controllare gli accessi riusciti, gli accessi non riusciti o entrambi i tipi di accesso.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="flags" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary>Ottiene i diritti di accesso interessati dalla regola di controllo.</summary>
      <returns>Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che indica i diritti influenzati dalla regola di controllo.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary>Specifica i diritti di controllo di accesso che possono essere applicati a oggetti mutex di sistema denominati.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary>Diritto di modificare le regole di sicurezza e di controllo associate a un mutex denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary>Diritto di eliminare un mutex denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary>Diritto di esercitare il controllo completo su un mutex denominato e di modificarne le regole di accesso e le regole di controllo.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary>Diritto di rilasciare un mutex denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary>Diritto di aprire e copiare le regole di accesso e le regole di controllo per un mutex denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary>Diritto di restare in attesa di un mutex denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary>Diritto di modificare il proprietario di un mutex denominato.</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary>Rappresenta la sicurezza del controllo di accesso di Windows per un mutex denominato. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> con i valori predefiniti.</summary>
      <exception cref="T:System.NotSupportedException">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> con le sezioni specificate delle regole di sicurezza del controllo di accesso relative al mutex di sistema con il nome specificato.</summary>
      <param name="name">Nome del mutex di sistema di cui verranno recuperate le regole di sicurezza del controllo di accesso.</param>
      <param name="includeSections">Combinazione di flag <see cref="T:System.Security.AccessControl.AccessControlSections" /> che specificano le sezioni da recuperare.</param>
      <exception cref="T:System.IO.FileNotFoundException">Non è presente alcun oggetto di sistema con il nome specificato.</exception>
      <exception cref="T:System.NotSupportedException">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary>Ottiene l'enumerazione utilizzata dalla classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> per rappresentare i diritti di accesso.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta l'enumerazione <see cref="T:System.Security.AccessControl.MutexRights" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Crea una nuova regola di controllo di accesso per l'utente specificato, con i diritti di accesso, il controllo di accesso e i flag specificati.</summary>
      <param name="identityReference">Classe <see cref="T:System.Security.Principal.IdentityReference" /> che identifica l'utente o il gruppo a cui viene applicata la regola.</param>
      <param name="accessMask">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che specificano i diritti di accesso da concedere o negare, per effettuare il cast in un intero.</param>
      <param name="isInherited">Non significativo per i mutex denominati, perché non hanno gerarchia.</param>
      <param name="inheritanceFlags">Non significativo per i mutex denominati, perché non hanno gerarchia.</param>
      <param name="propagationFlags">Non significativo per i mutex denominati, perché non hanno gerarchia.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <returns>Oggetto <see cref="T:System.Security.AccessControl.MutexAccessRule" /> che rappresenta i diritti specificati per l'utente specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> è <see langword="null" />.
-oppure-
<paramref name="accessMask" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> per rappresentare le regole di accesso.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Cerca una regola di controllo di accesso corrispondente a cui è possibile unire la nuova regola. Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</summary>
      <param name="rule">Regola di controllo di accesso da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException">Non è possibile eseguire il mapping di <paramref name="rule" /> a un'identità nota.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Cerca una regola di controllo a cui è possibile unire la nuova regola. Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</summary>
      <param name="rule">Regola di controllo da aggiungere. L'utente specificato dalla regola determina la ricerca.</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Crea una nuova regola di controllo che specifica l'utente a cui viene applicata la regola, i diritti di accesso da controllare e il risultato che attiva la regola di controllo.</summary>
      <param name="identityReference">Classe <see cref="T:System.Security.Principal.IdentityReference" /> che identifica l'utente o il gruppo a cui viene applicata la regola.</param>
      <param name="accessMask">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.MutexRights" /> che specificano i diritti di accesso da controllare, per effettuare il cast in un intero.</param>
      <param name="isInherited">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="inheritanceFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="propagationFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="flags">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specificano se controllare l'accesso riuscito, l'accesso non riuscito o entrambi.</param>
      <returns>Oggetto <see cref="T:System.Security.AccessControl.MutexAuditRule" /> che rappresenta la regola di controllo specificata per l'utente specificato. Il tipo restituito del metodo è la classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, ma è possibile effettuare in maniera sicura il cast del valore restituito nella classe derivata.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> è <see langword="null" />.
-oppure-
<paramref name="accessMask" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.MutexSecurity" /> per rappresentare le regole di controllo.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Cerca una regola di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola di accesso specificata vengono rimossi da essa.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.MutexAccessRule" /> che specifica l'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> da ricercare, nonché un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata. Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</param>
      <returns>
        <see langword="true" /> se viene trovata una regola compatibile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary>Cerca tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata e, se trovate, le rimuove.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.MutexAccessRule" /> che specifica l'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> da ricercare. Qualsiasi diritto specificato da questa regola viene ignorato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary>Cerca una regola di controllo di accesso che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.MutexAccessRule" /> da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Cerca una regola di controllo con lo stesso utente della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola specificata vengono rimossi da essa.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.MutexAuditRule" /> che specifica l'utente da ricercare e un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata. Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</param>
      <returns>
        <see langword="true" /> se viene trovata una regola compatibile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary>Cerca tutte le regole di controllo in cui l'utente sia identico a quello della regola specificata e rimuove le regole trovate.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.MutexAuditRule" /> che specifica l'utente da ricercare. Qualsiasi diritto specificato da questa regola viene ignorato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary>Cerca una regola di controllo che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.MutexAuditRule" /> da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Rimuove tutte le regole di controllo di accesso con lo stesso utente della regola specificata, a prescindere dalla classe <see cref="T:System.Security.AccessControl.AccessControlType" />, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.MutexAccessRule" /> da aggiungere. L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Rimuove tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.MutexAccessRule" /> da aggiungere. L'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> della regola determinano le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Rimuove tutte le regole di controllo con lo stesso utente della regola specificata, a prescindere dal valore di <see cref="T:System.Security.AccessControl.AuditFlags" />, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.MutexAuditRule" /> da aggiungere. L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>Rappresenta un insieme di diritti di accesso concessi o negati per un utente o gruppo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> specificando l'utente o il gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</summary>
      <param name="identity">Utente o gruppo a cui viene applicata la regola. Deve essere di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che specificano i diritti concessi o negati.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> specificando il nome dell'utente o del gruppo a cui la regola viene applicata, i diritti di accesso e se i diritti di accesso specificati sono concessi o negati.</summary>
      <param name="identity">Nome dell'utente o del gruppo a cui la regola viene applicata.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che specificano i diritti concessi o negati.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="identity" /> è una stringa di lunghezza zero.
-oppure-
La lunghezza di <paramref name="identity" /> supera i 512 caratteri.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>Ottiene i diritti concessi o negati dalla regola di accesso.</summary>
      <returns>Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che indicano i diritti concessi o negati dalla regola di accesso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>Rappresenta un insieme di diritti di accesso da controllare per un utente o gruppo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, che specifica l'utente o il gruppo da controllare, i diritti da controllare, e se controllare gli accessi riusciti, gli accessi non riusciti o entrambi i tipi di accesso.</summary>
      <param name="identity">Utente o gruppo a cui viene applicata la regola. Deve essere di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che specificano i tipi di accesso da controllare.</param>
      <param name="flags">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica se controllare gli accessi riusciti, gli accessi non riusciti o entrambi i tipi di accesso.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifica un valore non valido.
-oppure-
<paramref name="flags" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> è <see langword="null" />.
-oppure-
<paramref name="eventRights" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>Ottiene i diritti di accesso interessati dalla regola di controllo.</summary>
      <returns>Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che indica i diritti influenzati dalla regola di controllo.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>Specifica i diritti di controllo di accesso che possono essere applicati a oggetti semaforo di sistema denominati.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>Diritto di modificare le regole di sicurezza e di controllo associate a un semaforo denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>Diritto di eliminare un semaforo denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>Diritto di esercitare il controllo completo su un semaforo denominato e di modificarne le regole di accesso e le regole di controllo.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>Diritto di rilasciare un semaforo denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>Diritto di aprire e copiare le regole di accesso e le regole di controllo per un semaforo denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>Diritto di restare in attesa di un semaforo denominato.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>Diritto di modificare il proprietario di un semaforo denominato.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>Rappresenta la sicurezza del controllo di accesso di Windows per un semaforo denominato. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> con i valori predefiniti.</summary>
      <exception cref="T:System.NotSupportedException">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> con le sezioni specificate delle regole di sicurezza del controllo di accesso relative al semaforo di sistema con il nome specificato.</summary>
      <param name="name">Nome del semaforo di sistema di cui verranno recuperate le regole di sicurezza del controllo di accesso.</param>
      <param name="includeSections">Combinazione di flag <see cref="T:System.Security.AccessControl.AccessControlSections" /> che specificano le sezioni da recuperare.</param>
      <exception cref="T:System.NotSupportedException">Questa classe non è supportata in Windows 98 o Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>Ottiene l'enumerazione utilizzata dalla classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> per rappresentare i diritti di accesso.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta l'enumerazione <see cref="T:System.Security.AccessControl.SemaphoreRights" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Crea una nuova regola di controllo di accesso per l'utente specificato, con i diritti di accesso, il controllo di accesso e i flag specificati.</summary>
      <param name="identityReference">Classe <see cref="T:System.Security.Principal.IdentityReference" /> che identifica l'utente o il gruppo a cui viene applicata la regola.</param>
      <param name="accessMask">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che specificano i diritti di accesso da concedere o negare, per effettuare il cast in un intero.</param>
      <param name="isInherited">Non significativo per i semafori denominati, perché non hanno gerarchia.</param>
      <param name="inheritanceFlags">Non significativo per i semafori denominati, perché non hanno gerarchia.</param>
      <param name="propagationFlags">Non significativo per i semafori denominati, perché non hanno gerarchia.</param>
      <param name="type">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlType" /> che specificano se i diritti sono concessi o negati.</param>
      <returns>Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> che rappresenta i diritti specificati per l'utente specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> è <see langword="null" />.
-oppure-
<paramref name="accessMask" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> per rappresentare le regole di accesso.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Cerca una regola corrispondente a cui è possibile unire la nuova regola. Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</summary>
      <param name="rule">Regola di controllo di accesso da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Cerca una regola di controllo a cui è possibile unire la nuova regola. Se non viene trovata alcuna regola, viene aggiunta la nuova regola.</summary>
      <param name="rule">Regola di controllo da aggiungere. L'utente specificato dalla regola determina la ricerca.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Crea una nuova regola di controllo che specifica l'utente a cui viene applicata la regola, i diritti di accesso da controllare e il risultato che attiva la regola di controllo.</summary>
      <param name="identityReference">Classe <see cref="T:System.Security.Principal.IdentityReference" /> che identifica l'utente o il gruppo a cui viene applicata la regola.</param>
      <param name="accessMask">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.SemaphoreRights" /> che specificano i diritti di accesso da controllare, per effettuare il cast in un intero.</param>
      <param name="isInherited">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="inheritanceFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="propagationFlags">Non significativo per gli handle di attesa denominati, perché non hanno gerarchia.</param>
      <param name="flags">Combinazione bit per bit di valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specificano se controllare l'accesso riuscito, l'accesso non riuscito o entrambi.</param>
      <returns>Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> che rappresenta la regola di controllo specificata per l'utente specificato. Il tipo restituito del metodo è la classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, ma è possibile effettuare in maniera sicura il cast del valore restituito nella classe derivata.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> specifica un valore non valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> è <see langword="null" />.
-oppure-
<paramref name="accessMask" /> è zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>Ottiene il tipo utilizzato dalla classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> per rappresentare le regole di controllo.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta la classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Cerca una regola di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola di accesso specificata vengono rimossi da essa.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> che specifica l'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> da ricercare, nonché un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata. Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</param>
      <returns>
        <see langword="true" /> se viene trovata una regola compatibile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Cerca tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata e, se trovate, le rimuove.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> che specifica l'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> da ricercare. Qualsiasi diritto specificato da questa regola viene ignorato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Cerca una regola di controllo di accesso che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Cerca una regola di controllo con lo stesso utente della regola specificata e con i flag di ereditarietà e propagazione compatibili. Se viene trovata una regola simile, i diritti contenuti nella regola specificata vengono rimossi da essa.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> che specifica l'utente da ricercare e un insieme di flag di ereditarietà e propagazione con cui deve essere compatibile una regola corrispondente, se trovata. Specifica i diritti da rimuovere dalla regola compatibile, se trovati.</param>
      <returns>
        <see langword="true" /> se viene trovata una regola compatibile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Cerca tutte le regole di controllo in cui l'utente sia identico a quello della regola specificata e rimuove le regole trovate.</summary>
      <param name="rule">Classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> che specifica l'utente da ricercare. Qualsiasi diritto specificato da questa regola viene ignorato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Cerca una regola di controllo che corrisponde esattamente alla regola specificata e, se trovata, la rimuove.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Rimuove tutte le regole di controllo di accesso con lo stesso utente della regola specificata, a prescindere dalla classe <see cref="T:System.Security.AccessControl.AccessControlType" />, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> da aggiungere. L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Rimuove tutte le regole di controllo di accesso con lo stesso utente e la stessa classe <see cref="T:System.Security.AccessControl.AccessControlType" /> (consenso o negazione) della regola specificata, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> da aggiungere. L'utente e la classe <see cref="T:System.Security.AccessControl.AccessControlType" /> della regola determinano le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Rimuove tutte le regole di controllo con lo stesso utente della regola specificata, a prescindere dal valore di <see cref="T:System.Security.AccessControl.AuditFlags" />, quindi aggiunge la regola specificata.</summary>
      <param name="rule">Oggetto <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> da aggiungere. L'utente specificato dalla regola determina le regole da rimuovere prima di aggiungere questa regola.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions" />
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <param name="handle" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <param name="mutex" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <param name="semaphore" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <param name="handle" />
      <param name="eventSecurity" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <param name="mutex" />
      <param name="mutexSecurity" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <param name="semaphore" />
      <param name="semaphoreSecurity" />
    </member>
  </members>
</doc>