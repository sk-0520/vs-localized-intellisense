<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Aggiunge il listener specificato all'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> dell'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Oggetto da aggiungere come listener.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Rimuove il listener specificato dall'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> dell'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">Il listener da rimuovere.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Avvia l'ascolto dell'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Interrompe l'ascolto dell'evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Aggiunge il listener specificato all'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> dell'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Oggetto da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Rimuove il listener specificato dall'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> dell'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">Il listener da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fornisce informazioni per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> con il valore <paramref name="isCancelable" /> specificato.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">Valore che indica se l'evento è annullabile.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">Ottiene o imposta un valore che indica se annullare l'evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'evento deve essere annullato. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Se il valore di <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">Ottiene un valore che indica se l'evento è annullabile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se l'evento è annullabile, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">Rappresenta il metodo che gestisce l'evento <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Oggetto che ha generato l'evento.</param>
      <param name="e" vsli:raw="Information about the event.">Informazioni sull'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Aggiunge il listener specificato all'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> dell'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Oggetto da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Rimuove il listener specificato dall'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> dell'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">Il listener da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">Fornisce un'estensione di <see cref="T:System.ComponentModel.PropertyDescriptor" /> che tiene conto delle caratteristiche delle proprietà aggiuntive di una proprietà di dipendenza.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Componente per il quale aggiungere il gestore.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Delegato da aggiungere come listener.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">Ottiene l'insieme di attributi per questo membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> di attributi.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">Restituisce un valore che indica se la reimpostazione di un oggetto ne modifica il valore.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">Componente di cui eseguire il test di reimpostazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se reimpostando il componente varia il relativo valore, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Ottiene il nome della categoria alla quale appartiene il membro, come specificato in <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">Nome della categoria alla quale appartiene il membro. Se non esiste alcun attributo <see cref="T:System.ComponentModel.CategoryAttribute" />, il nome della categoria verrà impostato sulla categoria predefinita <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">Ottiene il tipo di componente a cui è associata la proprietà in questione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui questa proprietà è associata. Quando vengono richiamati <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> o <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, l'oggetto specificato potrebbe essere un'istanza di questo tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">Ottiene il convertitore di tipi di questa proprietà.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che viene utilizzato per convertire l'oggetto <see cref="T:System.Type" /> della proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">Restituisce l'identificatore di una proprietà di dipendenza.</summary>
      <returns vsli:raw="The dependency property identifier.">Identificatore della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Ottiene la descrizione del membro, come specificato in <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">Descrizione del membro. Se non esiste alcun attributo <see cref="T:System.ComponentModel.DescriptionAttribute" />, il valore della proprietà viene impostato su quello predefinito, ovvero una stringa vuota ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Ottiene o imposta un callback utilizzato nelle finestre di progettazione per modificare il valore effettivo di una proprietà di dipendenza, prima che tale valore venga memorizzato nel motore della proprietà.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Callback utilizzato nelle finestre di progettazione per modificare il valore effettivo di una proprietà di dipendenza, prima che tale valore venga memorizzato nel motore della proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Indica se questo membro deve essere impostato soltanto in fase di progettazione, come specificato in <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il membro deve essere impostato soltanto in fase di progettazione, <see langword="false" /> se il membro può essere impostato in fase di esecuzione. Se non esiste alcun attributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, il valore restituito sarà quello predefinito, ovvero <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">Ottiene il nome che può essere visualizzato in una finestra, quale una finestra delle proprietà.</summary>
      <returns vsli:raw="The name to display for the property.">Nome da visualizzare per la proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">Verifica l'uguaglianza tra due istanze di <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i valori sono equivalenti, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Nome registrato di una proprietà di dipendenza o di una proprietà associata.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">
        <see cref="T:System.Type" /> dell'oggetto proprietario della definizione di proprietà.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">
        <see cref="T:System.Type" /> dell'oggetto per cui si desidera impostare la proprietà.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> richiesto.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un nome di proprietà specificato.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">Nome registrato di una proprietà di dipendenza o di una proprietà associata.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">
        <see cref="T:System.Type" /> dell'oggetto proprietario della definizione di proprietà.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">
        <see cref="T:System.Type" /> dell'oggetto per cui si desidera impostare la proprietà.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">Indica di ignorare il tipo della proprietà.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> richiesto.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Restituisce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da verificare.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Se la proprietà descritta da <paramref name="property" /> è una proprietà di dipendenza, restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> valido. In caso contrario, restituisce <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">Restituisce un oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per una proprietà di dipendenza e un tipo di destinazione specificati.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">Identificatore di una proprietà di dipendenza.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">Tipo dell'oggetto su cui è impostata la proprietà.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">Oggetto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> per la proprietà di dipendenza specificata.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">Restituisce un valore <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">Componente per il quale ottenere le proprietà.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati per lo specifico componente.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">Ottiene un editor del tipo specificato.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">Il tipo base di editor, utilizzato per distinguere i numerosi editor supportati da una proprietà.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">Istanza del tipo di editor richiesto oppure <see langword="null" /> se non viene trovato un editor.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Restituisce il codice hash per questo <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">Restituisce il valore corrente della proprietà per un componente.</summary>
      <param name="component" vsli:raw="The component instance.">Istanza del componente.</param>
      <returns vsli:raw="The requested value.">Valore richiesto.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">Ottiene un valore che indica se la proprietà è registrata come una proprietà associata e viene usata tramite un utilizzo associato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà è una proprietà associata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">Ottiene un valore che indica il valore di <see cref="T:System.ComponentModel.BrowsableAttribute" /> sulla proprietà.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.ComponentModel.BrowsableAttribute" /> è stato specificato sulla proprietà; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Ottiene un valore che indica se la proprietà deve essere localizzata, come specificato in <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il membro è contrassegnato con il costruttore <see cref="T:System.ComponentModel.LocalizableAttribute" /> del valore true; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">Ottiene un valore che indica se questa proprietà è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà è di sola lettura, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">Ottiene i metadati associati alla proprietà di dipendenza.</summary>
      <returns vsli:raw="The dependency property metadata.">Metadati della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Ottiene l'oggetto <see cref="T:System.Type" /> rappresentato della proprietà di dipendenza.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">
        <see cref="T:System.Type" /> della proprietà di dipendenza.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Componente per il quale aggiungere il gestore.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Delegato da aggiungere come listener.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">Reimposta il valore predefinito per questa proprietà del componente.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">Componente con il valore di proprietà da reimpostare sul valore predefinito.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">Imposta un valore diverso del componente.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">Componente con il valore di proprietà da impostare.</param>
      <param name="value" vsli:raw="The new value.">Nuovo valore.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">Indica se il valore della proprietà deve essere conservato dai processi di serializzazione.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">Componente con la proprietà di cui verificare la persistenza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà deve essere conservata, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Indica se le notifiche delle modifiche dei valori per questa proprietà possono avere origine all'esterno del descrittore della proprietà, ad esempio nel componente stesso, oppure se le notifiche avranno origine solo da chiamate dirette a <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">
        <see langword="true" /> se le notifiche per questa proprietà possono avere origine all'esterno del descrittore della proprietà, ad esempio nel componente stesso. <see langword="false" /> se le notifiche avranno origine solo da chiamate dirette a <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">Converte il valore dell'istanza corrente nell'equivalente rappresentazione di stringa.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">Restituisce il valore <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello listener di eventi deboli per allegare listener per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sull'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">Fornisce una classe base astratta per i tipi che descrivono come dividere gli elementi di una raccolta in gruppi.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Ottiene o imposta un operatore di confronto personalizzato che ordina i gruppi usando un oggetto che implementa <see cref="T:System.Collections.IComparer" />.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Operatore di confronto personalizzato che ordina i gruppi usando un oggetto che implementa <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">Restituisce i nomi del gruppo per l'elemento specificato.</summary>
      <param name="item" vsli:raw="The item to return group names for.">Elemento per cui restituire i nomi del gruppo.</param>
      <param name="level" vsli:raw="The level of grouping.">Livello di raggruppamento.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da fornire al convertitore.</param>
      <returns vsli:raw="The group name(s) for the given item.">Nomi del gruppo per l'elemento specificato.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">Ottiene la raccolta di nomi che vengono usati per inizializzare un gruppo con un set di sottogruppi con i nomi specificati.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">Raccolta di nomi che vengono usati per inizializzare un gruppo con un set di sottogruppi con i nomi specificati.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">Restituisce un valore che indica se il nome del gruppo e il nome dell'elemento corrispondono e quindi l'elemento appartiene al gruppo.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">Nome del gruppo da controllare.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">Nome dell'elemento da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i nomi corrispondono e l'elemento appartiene al gruppo. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argomenti dell'evento da generare.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore effettivo della proprietà <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> in istanze di questa classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore della proprietà <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore effettivo della proprietà <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> in istanze di questa classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore della proprietà <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">Ottiene la raccolta dei criteri di ordinamento in base ai quali ordinare i gruppi.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">Raccolta dei criteri di ordinamento in base ai quali ordinare i gruppi.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">Consente alle raccolte di disporre delle funzionalità di gestione, ordinamento personalizzato, filtro e raggruppamento dei record correnti.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">Ottiene un valore che indica se questa visualizzazione supporta l'applicazione di filtri tramite la proprietà <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione supporta l'applicazione di filtri. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">Ottiene un valore che indica se questa visualizzazione supporta il raggruppamento tramite la proprietà <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione supporta il raggruppamento. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">Ottiene un valore che indica se questa visualizzazione supporta l'ordinamento tramite la proprietà <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione supporta l'ordinamento. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">Restituisce un valore che indica se un elemento specificato appartiene a questa visualizzazione della raccolta.</summary>
      <param name="item" vsli:raw="The object to check.">Oggetto da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento appartiene a questa visualizzazione della raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">Ottiene o imposta info culturali per qualsiasi operazione della visualizzazione che può differire dalle impostazioni cultura, ad esempio l'ordinamento.</summary>
      <returns vsli:raw="The culture to use during sorting.">Impostazioni cultura da usare durante l'ordinamento.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">Nell'implementazione di questa interfaccia, generare l'evento dopo la modifica dell'elemento corrente.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">Nell'implementazione di questa interfaccia, generare l'evento prima della modifica dell'elemento corrente. Il gestore eventi può annullare questo evento.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">Ottiene l'elemento corrente della visualizzazione.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">Elemento corrente della visualizzazione o <see langword="null" /> se non sono presenti elementi correnti.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Ottiene la posizione ordinale di <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Posizione ordinale di <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">Immette un ciclo di rinvio che è possibile utilizzare per unire le modifiche alla visualizzazione e ritardare l'aggiornamento automatico.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Oggetto <see cref="T:System.IDisposable" /> che è possibile usare per l'eliminazione dell'oggetto chiamante.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">Ottiene o imposta un callback utilizzato da determinare se un elemento è adatto per essere incluso nella visualizzazione.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">Metodo usato per stabilire se un elemento è appropriato per l'inclusione nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Ottiene una raccolta di oggetti <see cref="T:System.ComponentModel.GroupDescription" /> che descrive la modalità di raggruppamento degli elementi nella visualizzazione.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Raccolta di oggetti <see cref="T:System.ComponentModel.GroupDescription" /> che descrivono la modalità di raggruppamento degli elementi della raccolta nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">Ottiene i gruppi di livello superiore.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">Raccolta di sola lettura dei gruppi di livello superiore o <see langword="null" /> se non sono presenti gruppi.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">Ottiene un valore che indica se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre la fine della raccolta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre la fine della raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">Ottiene un valore che indica se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> della visualizzazione è oltre l'inizio della raccolta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se l' <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> oggetto della visualizzazione è oltre l'inizio della raccolta; in caso contrario <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">Restituisce un valore che indica se la visualizzazione risultante è vuota.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione risultante è vuota. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Imposta l'elemento specificato in modo che diventi l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Elemento da impostare come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Imposta il primo elemento nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è all'interno della visualizzazione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Imposta l’ultimo elemento nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è un elemento all'interno della visualizzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Imposta l'elemento successivo a <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è all'interno della visualizzazione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Imposta l'elemento in corrispondenza dell'indice specificato come primo oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">Indice in corrispondenza del quale impostare l'oggetto <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è all'interno della visualizzazione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Imposta l’elemento precedente a <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> nella visualizzazione come <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> risultante è all'interno della visualizzazione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">Ricrea la visualizzazione.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Ottiene una raccolta di oggetti <see cref="T:System.ComponentModel.SortDescription" /> che descrivono la modalità di ordinamento degli elementi della raccolta nella visualizzazione.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Raccolta di oggetti <see cref="T:System.ComponentModel.SortDescription" /> che descrivono la modalità di ordinamento degli elementi nella raccolta nella visualizzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">Restituisce la raccolta sottostante.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">Oggetto <see cref="T:System.Collections.IEnumerable" /> che è la raccolta sottostante.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">Interfaccia che consente l'implementazione di insiemi per creare una visualizzazione dei relativi dati. In genere, il codice utente non chiama metodi su questa interfaccia.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">Crea una nuova visualizzazione sull'insieme che implementa questa interfaccia. In genere, il codice utente non chiama questo metodo.</summary>
      <returns vsli:raw="The newly created view.">Visualizzazione appena creata.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">Definisce le proprietà che consentono l'ordinamento, il raggruppamento e l'applicazione di filtri su <see cref="T:System.Windows.Data.CollectionView" /> in tempo reale.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">Ottiene un valore che indica se la visualizzazione della raccolta supporta l'attivazione o disattivazione del filtraggio dei dati in tempo reale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione della raccolta supporta l'attivazione o la disattivazione del filtraggio in tempo reale. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">Ottiene un valore che indica se la visualizzazione della raccolta supporta l'attivazione o la disattivazione del raggruppamento dei dati in tempo reale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione di raccolta supporta l'attivazione o la disattivazione del raggruppamento in tempo reale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">Ottiene un valore che indica se la visualizzazione della raccolta supporta l'attivazione o la disattivazione dell'ordinamento dei dati in tempo reale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione di raccolta supporta l'attivazione o la disattivazione dell'ordinamento in tempo reale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">Ottiene o imposta un valore che indica se il filtraggio di dati in tempo reale è attivato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">
        <see langword="true" /> se è abilitato il filtraggio dei dati in tempo reale; <see langword="false" /> se il filtraggio non è abilitato; <see langword="null" /> se non è possibile determinare se la visualizzazione di raccolta implementa il filtraggio in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">Ottiene o imposta un valore che indica se il raggruppamento di dati in tempo reale è attivato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">
        <see langword="true" /> se è abilitato il raggruppamento dei dati in tempo reale; <see langword="false" /> se il raggruppamento in tempo reale non è abilitato; <see langword="null" /> se non è possibile determinare se la visualizzazione di raccolta implementa il raggruppamento in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">Ottiene o imposta un valore che indica se l'ordinamento in tempo reale è attivato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">
        <see langword="true" /> se è abilitato l'ordinamento dei dati in tempo reale; <see langword="false" /> se l'ordinamento in tempo reale non è abilitato; <see langword="null" /> se non è possibile determinare se la visualizzazione di raccolta implementa l'ordinamento in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">Ottiene una raccolta di stringhe che specificano le proprietà che fanno parte del filtraggio di dati in tempo reale.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">Una raccolta di stringhe che specificano le proprietà che fanno parte del filtraggio di dati in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">Ottiene una raccolta di stringhe che specificano le proprietà che fanno parte del raggruppamento dei dati in tempo reale.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">Una raccolta di stringhe che specificano le proprietà che fanno parte del raggruppamento di dati in tempo reale.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">Ottiene una raccolta di stringhe che specificano le proprietà che fanno parte dell'ordinamento di dati in tempo reale.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">Una raccolta di stringhe che specificano le proprietà che fanno parte dell'ordinamento di dati in tempo reale.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">Definisce i metodi e le proprietà implementati da <see cref="T:System.Windows.Data.CollectionView" /> per fornire funzionalità di modifica a un insieme.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">Aggiunge un nuovo elemento alla raccolta.</summary>
      <returns vsli:raw="The new item that is added to the collection.">Nuovo elemento aggiunto alla raccolta.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">Ottiene un valore che indica se è possibile aggiungere un nuovo elemento alla raccolta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile aggiungere un nuovo elemento alla raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">Ottiene un valore che indica se la visualizzazione raccolta può annullare le modifiche in sospeso e ripristinare i valori originali di un oggetto modificato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la visualizzazione raccolta può annullare le modifiche in sospeso e ripristinare i valori originali di un oggetto modificato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">Termina la transazione di modifica e, se possibile, ripristina il valore originale dell'elemento.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">Termina la transazione di aggiunta ed elimina il nuovo elemento in sospeso.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">Ottiene un valore che indica se è possibile rimuovere un elemento dalla raccolta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile rimuovere un elemento dalla raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">Termina la transazione di modifica e salva le modifiche in sospeso.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">Termina la transazione di aggiunta e salva il nuovo elemento in sospeso.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">Ottiene l'elemento che viene aggiunto durante la transazione di aggiunta corrente.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Elemento aggiunto se <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> è <see langword="true" />. In caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">Ottiene l'elemento della raccolta che viene modificato.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Elemento della raccolta che viene modificato se <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> è <see langword="true" />. In caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">Avvia una transazione di modifica dell'elemento specificato.</summary>
      <param name="item" vsli:raw="The item to edit.">Elemento da modificare.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">Ottiene un valore che indica se è in corso una transazione di aggiunta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è in corso una transazione di aggiunta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">Ottiene un valore che indica se è in corso una transazione di modifica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è in corso una transazione di modifica. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">Ottiene o imposta la posizione del segnaposto del nuovo elemento nella visualizzazione della raccolta.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">Uno dei valori di enumerazione che specifica la posizione del segnaposto del nuovo elemento nella visualizzazione dell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">Rimuove l'elemento specificato dalla raccolta.</summary>
      <param name="item" vsli:raw="The item to remove.">Elemento da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">Rimuove dalla raccolta l'elemento nella posizione specificata.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">Posizione dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" /> è minore di 0 o maggiore del numero di elementi nella visualizzazione dell'insieme.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">Definisce metodi e proprietà implementati da un oggetto <see cref="T:System.Windows.Data.CollectionView" /> per consentire di specificare l'aggiunta di elementi di un tipo specifico.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">Aggiunge alla raccolta l'oggetto specificato.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">Oggetto da aggiungere alla raccolta.</param>
      <returns vsli:raw="The object that is added to the collection.">Oggetto aggiunto all'insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">Ottiene un valore che indica se è possibile aggiungere un oggetto specificato all'insieme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile aggiungere un oggetto specificato all'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">Definisce una proprietà che fornisce informazioni sulle proprietà di un oggetto.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">Ottiene un insieme contenente informazioni sulle proprietà disponibili per gli elementi di un insieme.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">Insieme contenente informazioni sulle proprietà disponibili per gli elementi di un insieme.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">Contiene informazioni su una proprietà.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name" vsli:raw="The name of the property.">Nome della proprietà.</param>
      <param name="type" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">Oggetto contenente informazioni aggiuntive sulla proprietà.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">Ottiene un oggetto contenente informazioni aggiuntive sulla proprietà.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">Oggetto contenente informazioni aggiuntive sulla proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">Ottiene il nome della proprietà.</summary>
      <returns vsli:raw="The name of the property.">Nome della proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">Ottiene il tipo della proprietà.</summary>
      <returns vsli:raw="The type of the property.">Tipo della proprietà.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">Specifica il punto della raccolta in cui compare il segnaposto di un nuovo elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">Il segnaposto di un nuovo elemento viene visualizzato all'inizio della raccolta.  I nuovi elementi si trovano all'inizio della raccolta, dopo il rispettivo segnaposto.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">Il segnaposto di un nuovo elemento viene visualizzato alla fine della raccolta. I nuovi elementi vengono aggiunti alla fine della raccolta, prima del rispettivo segnaposto.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">La raccolta non usa un segnaposto per i nuovi elementi. La posizione degli elementi aggiunti dipende dalla raccolta sottostante.  Normalmente vengono aggiunti alla fine della raccolta.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Fornisce un'implementazione <see cref="T:System.Windows.WeakEventManager" /> per consentire di utilizzare il modello "listener di eventi deboli" per allegare listener per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">Aggiunge il gestore eventi specificato, che viene chiamato quando l'origine specificata genera l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> per la proprietà specificata.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nome della proprietà che esiste in <paramref name="source" /> su cui ascoltare le modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Più di un metodo è associato a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">Aggiunge il listener specificato all'elenco dei listener sull'origine specificata.</summary>
      <param name="source" vsli:raw="The object with the event.">Oggetto con l'evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Oggetto da aggiungere come listener.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nome della proprietà che esiste in <paramref name="source" /> su cui ascoltare le modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Restituisce un nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Nuovo oggetto per contenere i listener per l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">Rimuove i listener che non sono più attivi dai dati per l'origine fornita.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">Oggetto di origine dal quale rimuovere tutti i listener.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">Dati da cancellare. È previsto che sia un oggetto <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">Impostare su <see langword="true" /> per interrompere l'ascolto e rimuovere completamente tutti i dati.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se alcune voci sono state rimosse, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Rimuove il gestore eventi specificato dall'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Oggetto di sorgente che genera l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Delegato che gestisce l'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nome della proprietà che esiste in <paramref name="source" /> su cui interrompere l'ascolto delle modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Più di un metodo è associato a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">Rimuove il listener specificato dall'elenco di listener sull'origine fornita.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">Oggetto da cui rimuovere il listener.</param>
      <param name="listener" vsli:raw="The listener to remove.">Il listener da rimuovere.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nome della proprietà che esiste in <paramref name="source" /> su cui interrompere l'ascolto delle modifiche. Impostare su <see cref="F:System.String.Empty" /> per indicare "qualsiasi proprietà".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Avvia l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sull'origine fornita.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Oggetto sul quale avviare l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Interrompe l'ascolto dell'evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sull'origine fornita.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Oggetto di origine sul quale interrompere l'ascolto di <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">Specifica le proprietà che devono essere riportate dai descrittori di tipo, in particolare il metodo <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">Opzioni che descrivono questo filtro di proprietà.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Questo membro supporta l'infrastruttura .NET Framework e non è possibile usarlo direttamente dal codice.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Restituisce un valore che indica se l'attributo .NET Framework <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> corrente è uguale a un oggetto specificato.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Oggetto da confrontare con la classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Ottiene le opzioni di filtro per questo attributo .NET Framework <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <returns vsli:raw="The property filter options.">Opzioni di filtro delle proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Restituisce il codice hash per l'oggetto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attributo .NET Framework corrente.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Valore intero a 32 bit con segno.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">Restituisce un valore che indica se le opzioni del filtro di proprietà dell'attributo .NET Framework <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> corrente sono uguali alle opzioni del filtro di proprietà dell'oggetto specificato.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Oggetto da confrontare. È previsto che l'oggetto sia <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se esiste una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">Specifica le proprietà che devono essere riportate dai descrittori di tipo, in particolare il metodo <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Questa enumerazione viene usata per specificare il valore della proprietà <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">Restituire tutte le proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">Restituire solo le proprietà che non sono valide in base al contesto corrente dell'oggetto.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">Non restituire alcuna proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">Restituire solo le proprietà con valori locali impostati.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">Restituire solo le proprietà con valori locali non impostati o senza proprietà impostate in un archivio di espressioni esterno (ad esempio, binding o risorsa posticipata).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">Restituire qualsiasi proprietà valida per l'oggetto nell'ambito corrente.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">Definisce la direzione e il nome della proprietà da utilizzare come criteri per l'ordinamento di un insieme.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">Inizializza una nuova istanza della struttura <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">Nome della proprietà in base alla quale ordinare l'elenco.</param>
      <param name="direction" vsli:raw="The sort order.">Ordinamento.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">Il parametro <paramref name="direction" /> non specifica un valore valido.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">Ottiene o imposta un valore che indica se applicare un ordinamento crescente o decrescente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">Valore <see cref="T:System.ComponentModel.ListSortDirection" /> che indica se applicare un ordinamento crescente o decrescente.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">Confronta l'istanza specificata e l'istanza corrente dell'oggetto <see cref="T:System.ComponentModel.SortDescription" /> per verificare l'uguaglianza dei valori.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">Istanza di <see cref="T:System.ComponentModel.SortDescription" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <see langword="true" /> se <paramref name="obj" /> e l'istanza di <see cref="T:System.ComponentModel.SortDescription" /> hanno gli stessi valori.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Restituisce il codice hash per l'istanza di <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Codice hash per l'istanza di <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">Ottiene un valore che indica se questo oggetto è in uno stato immutabile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo oggetto è in uso, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">Confronta due oggetti <see cref="T:System.ComponentModel.SortDescription" /> per verificare l'uguaglianza dei valori.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Prima istanza da confrontare.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Seconda istanza da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i due oggetti sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">Confronta due oggetti <see cref="T:System.ComponentModel.SortDescription" /> per verificare la disuguaglianza dei valori.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Prima istanza da confrontare.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Seconda istanza da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i valori non sono uguali, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">Ottiene o imposta il nome della proprietà utilizzato come criterio di ordinamento.</summary>
      <returns vsli:raw="The default value is null.">Il valore predefinito è null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">Rimuove tutti gli elementi dalla raccolta.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Si verifica in seguito all'aggiunta o alla rimozione di un elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">Ottiene un'istanza vuota e non modificabile di <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">Inserisce un elemento nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">Indice in base zero in corrispondenza del quale viene inserito <paramref name="item" />.</param>
      <param name="item" vsli:raw="The object to insert.">Oggetto da inserire.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">Rimuove l'elemento in corrispondenza dell'indice specificato della raccolta.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Indice in base zero dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">Sostituisce l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">Nuovo valore dell'elemento in corrispondenza dell'indice specificato.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Si verifica in seguito all'aggiunta o alla rimozione di un elemento.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">Descrive il livello di dettaglio per tracciare un particolare oggetto.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">Traccia tutte le informazioni aggiuntive.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">Traccia alcune informazioni aggiuntive.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">Traccia un quantità media di informazioni aggiuntive.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">Non traccia alcuna informazione aggiuntiva disponibile.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">Fornisce supporto per la traccia di debug destinato specificamente alle applicazioni Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">Ottiene un'origine di traccia dell'animazione.</summary>
      <returns vsli:raw="An animation trace source.">Un'origine di traccia dell'animazione.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">Ottiene un'origine di traccia dell'associazione dati.</summary>
      <returns vsli:raw="A data-binding trace source.">Un'origine di traccia dell'associazione dati.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">Ottiene un'origine di traccia della proprietà di dipendenza.</summary>
      <returns vsli:raw="A dependency property trace source.">Origine di traccia della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">Ottiene un'origine di traccia del documento.</summary>
      <returns vsli:raw="A document trace source.">Un'origine di traccia del documento.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Ottiene un'origine di traccia Freezable.</summary>
      <returns vsli:raw="A Freezable trace source.">Un'origine di traccia Freezable.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">Ottiene il valore della proprietà associata <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> per un elemento specificato.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">Elemento da cui viene letto il valore della proprietà.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">Valore della proprietà <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> dell'elemento.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">Ottiene un'origine di traccia dell'host hwnd.</summary>
      <returns vsli:raw="An hwnd host trace source.">Origine di traccia dell'host hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">Ottiene un'origine di traccia di markup.</summary>
      <returns vsli:raw="A markup trace source.">Un'origine di traccia di markup.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">Ottiene un'origine di traccia dell'ambito del nome.</summary>
      <returns vsli:raw="A name scope trace source.">Un'origine di traccia dell'ambito del nome.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">Aggiorna le origini di traccia, imponendo che il file app.config sia riletto.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">Ottiene un'origine di traccia del dizionario risorse.</summary>
      <returns vsli:raw="A resource dictionary trace source.">Un'origine di traccia del dizionario risorse.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">Ottiene un'origine di traccia dell'evento indirizzato.</summary>
      <returns vsli:raw="A routed event trace source.">Origine di traccia dell'evento indirizzato.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">Imposta il valore della proprietà associata <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" /> su un elemento specificato.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">Elemento in cui viene scritta la proprietà associata.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">Valore <see cref="T:System.Diagnostics.PresentationTraceLevel" /> necessario.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">Ottiene un'origine di traccia della shell.</summary>
      <returns vsli:raw="A shell trace source.">Origine di traccia della shell.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">Identifica la proprietà associata <see cref="System.Diagnostics.PresentationTraceSources.TraceLevel" />.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Eccezione che viene generata quando un file di input o un flusso di dati che dovrebbe essere conforme a una certa specifica di formato di file non è corretto.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" />.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> e la inizializza con dati serializzati. Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Valore <see cref="T:System.String" /> che rappresenta il messaggio di errore.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> con un messaggio di errore specificato e un tipo di eccezione.</summary>
      <param name="message">Valore <see cref="T:System.String" /> che rappresenta il messaggio di errore.</param>
      <param name="innerException">Valore della proprietà <see cref="P:System.Exception.InnerException" /> che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> con un valore URI di origine.</summary>
      <param name="sourceUri">Valore <see cref="T:System.Uri" /> del file che ha causato l'errore.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> con un valore URI di origine e un tipo di eccezione.</summary>
      <param name="sourceUri">Valore <see cref="T:System.Uri" /> del file che ha causato l'errore.</param>
      <param name="innerException">Valore della proprietà <see cref="P:System.Exception.InnerException" /> che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> con un valore URI di origine e un messaggio di errore specificato.</summary>
      <param name="sourceUri">Valore <see cref="T:System.Uri" /> del file che ha causato l'errore.</param>
      <param name="message">Valore <see cref="T:System.String" /> che rappresenta il messaggio di errore.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.IO.FileFormatException" /> con un valore URI di origine, un messaggio di errore specificato e un tipo di eccezione.</summary>
      <param name="sourceUri">Valore <see cref="T:System.Uri" /> del file che ha causato l'errore.</param>
      <param name="message">Valore <see cref="T:System.String" /> che rappresenta il messaggio di errore.</param>
      <param name="innerException">Valore della proprietà <see cref="P:System.Exception.InnerException" /> che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del file e le informazioni aggiuntive sull'eccezione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Ottiene il nome di un file che ha generato l'oggetto <see cref="T:System.IO.FileFormatException" />.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> che rappresenta il nome del file che ha generato l’eccezione.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">Specifica la posizione in cui è archiviato il certificato X.509 usato nella firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">Il certificato è incorporato nel relativo oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">Il certificato è incorporato nell'oggetto <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> creato per la firma aggiunta.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">Il certificato non è incorporato nel pacchetto.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Specifica il livello di compressione per il contenuto archiviato in <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>La compressione è ottimizzata per le prestazioni.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>La compressione è ottimizzata per le dimensioni.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>La compressione è ottimizzata per un bilanciamento tra dimensioni e prestazioni.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>La compressione è disattivata.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>La compressione è ottimizzata per le prestazioni elevate.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">Rappresenta un file composto OLE che contiene un package crittografato.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">Chiude il package crittografato e il file composto OLE che lo contiene.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">Creare e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> sul flusso specificato.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Flusso su cui creare il file.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> non fornisce accesso in lettura/scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e gli fornisce il nome file specificato.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Nome del file composto OLE.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (sul flusso specificato) che utilizza il package non crittografato specificato come proprio contenuto.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Flusso su cui creare il file.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Il flusso che rappresenta il package non crittografato esistente.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> o <paramref name="packageStream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> non fornisce accesso in lettura/scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">Crea e restituisce un oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che utilizza il package non crittografato specificato come proprio contenuto e gli attribuisce il nome file specificato.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Nome del file composto OLE.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Il flusso che rappresenta il package non crittografato esistente.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licenza di pubblicazione incorporata nel file composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Oggetto che determina le operazioni che l'utente corrente è autorizzato a eseguire sul contenuto crittografato.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> appena creato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> o <paramref name="packageStream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">Ottiene un valore che specifica se il file è stato aperto con accesso in lettura, scrittura o entrambe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">Il valore <see cref="T:System.IO.FileAccess" /> utilizzato per aprire il file.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">Cancellare il flusso sia per l'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> che per il contenuto del relativo package.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Ottiene il package crittografato all'interno dell'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">
        <see cref="T:System.IO.Packaging.Package" /> all'interno della busta.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">Ottiene un valore che specifica se il flusso specificato è un file composto OLE con un flusso del package crittografato</summary>
      <param name="stream" vsli:raw="The stream that is tested.">Flusso sottoposto a test.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il flusso specificato è un file composto OLE con un flusso del package crittografato; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">Ottiene un valore che specifica se il file specificato è un file composto OLE con un flusso del package crittografato</summary>
      <param name="fileName" vsli:raw="The file that is tested.">File sottoposto a test.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il file specificato è un file composto OLE con un flusso del package crittografato; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">Apre il package crittografato nel flusso specificato.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">Flusso che contiene il package crittografato.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">Apre il package crittografato nel file specificato come in sola lettura e non condiviso.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">File che contiene il package crittografato.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">Apre il package crittografato nel file specificato come in sola lettura e con l'accesso specificato.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">File che contiene il package crittografato.</param>
      <param name="access" vsli:raw="The type of access.">Tipo di accesso.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">Apre il package crittografato nel file specificato e gli fornisce l'accesso e la condivisione specificati.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">File che contiene il package crittografato.</param>
      <param name="access" vsli:raw="The type of access.">Tipo di accesso.</param>
      <param name="sharing" vsli:raw="The type of sharing.">Tipo di condivisione.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">Oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> aperto.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">Ottiene le proprietà principali del package (ad esempio Titolo e Oggetto) del documento di Rights Management.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">Ottiene le informazioni di Rights Management archiviate nell'oggetto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />. Nello specifico, l'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> e l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> archiviati nel file composto OLE che rappresenta il pacchetto protetto da Rights Management.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">Ottiene un oggetto che fornisce accesso ai flussi del file composto all'esterno del package crittografato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">
        <see cref="T:System.IO.Packaging.StorageInfo" /> che rappresenta flussi nel file composto OLE che sono all'esterno del package crittografato.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Specifica le opzioni di crittografia per le parti in un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Nessuna crittografia.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Crittografia supportata tramite Rights Management.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">Rappresenta il metodo che gestisce <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> generato quando <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rileva una firma non valida.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">L'origine non valida <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> dell'evento.</param>
      <param name="e" vsli:raw="The event data.">Dati dell'evento.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Rappresenta un contenitore che può archiviare più oggetti dati.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Packaging.Package" /> tramite <see cref="T:System.IO.FileAccess" /> specificato.</summary>
      <param name="openFileAccess">Il file l'autorizzazioni IO per il pacchetto.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="openFileAccess" /> non è valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Salva e chiude il pacchetto più tutti i flussi della parte sottostanti.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Crea una parte non compressa nuova con un URI specificato e un tipo di contenuto.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) della nuova parte.</param>
      <param name="contentType">Il tipo di contenuto del flusso di dati.</param>
      <returns>La nuova parte creata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> o <paramref name="contentType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException">Una parte con <paramref name="partUri" /> specificato è già presente nel pacchetto.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola lettura (impossibile aggiungere una parte nuova).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Crea una parte nuova con un URI specificato, un tipo di contenuto e un'opzione di compressione.</summary>
      <param name="partUri">URI della nuova parte.</param>
      <param name="contentType">Il tipo di contenuto del flusso di dati.</param>
      <param name="compressionOption">L'opzione di compressione per il flusso di dati, compressione <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> o <see cref="F:System.IO.Packaging.CompressionOption.Normal" />.</param>
      <returns>La nuova parte creata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> o <paramref name="contentType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI (Uniform Resource Identifier) <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException">Una parte con <paramref name="partUri" /> specificato è già presente nel pacchetto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="compressionOption" /> non è valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola lettura (impossibile aggiungere una parte nuova).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Quando è sottoposto a override in una classe derivata, crea una parte nuova nel pacchetto.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) della parte creata.</param>
      <param name="contentType">Il tipo di contenuto del flusso di dati.</param>
      <param name="compressionOption">L'opzione di compressione per il flusso di dati.</param>
      <returns>Parte creata.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Crea una relazione a livello di pacchetto con una parte con un URI specificato, un modalità di destinazione e un tipo di relazione.</summary>
      <param name="targetUri">URI (Uniform Resource Identifier) della parte di destinazione.</param>
      <param name="targetMode">Indica se la parte di destinazione è <see cref="F:System.IO.Packaging.TargetMode.Internal" /> o <see cref="F:System.IO.Packaging.TargetMode.External" /> al pacchetto.</param>
      <param name="relationshipType">Un URI che definisce in modo univoco il ruolo della relazione.</param>
      <returns>La relazione a livello di pacchetto con la parte specificata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> o <paramref name="relationshipType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La parte <paramref name="targetUri" /> è <see cref="T:System.IO.Packaging.PackageRelationship" />, o <paramref name="targetMode" /> è <see cref="F:System.IO.Packaging.TargetMode.Internal" /> e <paramref name="targetUri" /> è un URI assoluto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="targetMode" /> non è valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola lettura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Crea una relazione a livello di pacchetto con una parte con un URI specificato, un modalità di destinazione, un tipo di relazione e identificatore (ID).</summary>
      <param name="targetUri">URI (Uniform Resource Identifier) della parte di destinazione.</param>
      <param name="targetMode">Indica se la parte di destinazione è <see cref="F:System.IO.Packaging.TargetMode.Internal" /> o <see cref="F:System.IO.Packaging.TargetMode.External" /> al pacchetto.</param>
      <param name="relationshipType">Un URI che definisce in modo univoco il ruolo della relazione.</param>
      <param name="id">Identificatore XML univoco.</param>
      <returns>La relazione a livello di pacchetto con la parte specificata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> o <paramref name="relationshipType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La parte <paramref name="targetUri" /> è <see cref="T:System.IO.Packaging.PackageRelationship" />, o <paramref name="targetMode" /> è <see cref="F:System.IO.Packaging.TargetMode.Internal" /> e <paramref name="targetUri" /> è un URI assoluto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="targetMode" /> non è valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola lettura.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido; o è gia presente nel pacchetto una parte con <paramref name="id" /> specificato.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Elimina una parte con un URI specificato dal pacchetto.</summary>
      <param name="partUri">URI della parte da eliminare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola lettura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>Quando è sottoposto a override in una classe derivata, elimina una parte con un URI specificato.</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> di <see cref="T:System.IO.Packaging.PackagePart" /> da eliminare.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Elimina una relazione a livello di pacchetto.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> di <see cref="T:System.IO.Packaging.PackageRelationship" /> da eliminare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola lettura.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Svuota e salva il contenuto di tutte le parti e le relazioni, chiude il pacchetto e rilascia tutte le risorse.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Ottiene l'impostazione di accesso ai file per il pacchetto.</summary>
      <returns>Uno dei valori dell'oggetto <see cref="T:System.IO.FileAccess" />: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> o <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Salva il contenuto di tutte le parti e le relazioni contenute nel pacchetto.</summary>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola lettura e non è possibile modificarlo.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>Quando è sottoposto a override in una classe derivata, salva il contenuto di tutte le parti e le relazioni nell'archivio della classe derivata.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Restituisce la parte con un URI specificato.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) della parte da restituire.</param>
      <returns>La parte con <paramref name="partUri" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI (Uniform Resource Identifier) <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException">Una parte con <paramref name="partUri" /> specificato non è nel pacchetto.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>Quando è sottoposto a override in una classe derivata, restituisce la parte alla quale fa riferimento un URI specificato.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) della parte da recuperare.</param>
      <returns>La parte richiesta; o <see langword="null" />, se una parte con <paramref name="partUri" /> specificato non è nel pacchetto.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Restituisce un insieme di tutte le parti nel pacchetto.</summary>
      <returns>Un insieme di tutti gli elementi <see cref="T:System.IO.Packaging.PackagePart" /> contenuti nel pacchetto.</returns>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>Quando è sottoposto a override in una classe derivata, restituisce una matrice di tutte le parti nel pacchetto.</summary>
      <returns>Una matrice di tutte le parti contenute nel pacchetto.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Restituisce la relazione a livello di pacchetto con un identificatore specificato.</summary>
      <param name="id">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> della relazione da restituire.</param>
      <returns>La relazione a livello di pacchetto con <paramref name="id" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.</exception>
      <exception cref="T:System.InvalidOperationException">Una relazione con <paramref name="id" /> specificato non è nel pacchetto.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Restituisce un insieme di tutte le relazioni a livello di pacchetto.</summary>
      <returns>Un insieme di tutte le relazioni a livello di pacchetto contenute nel pacchetto.</returns>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Restituisce un insieme di tutte le relazioni a livello di pacchetto che corrispondono a <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> specificato.</summary>
      <param name="relationshipType">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> al quale corrispondere e da restituire nella raccolta.</param>
      <returns>Un insieme di relazioni a livello di pacchetto che corrispondono a <paramref name="relationshipType" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="relationshipType" /> è una stringa vuota.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Apre un pacchetto su un flusso di IO specificato.</summary>
      <param name="stream">Il flusso di IO sul quale aprire il pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto da aprire richiede autorizzazione di lettura o di lettura e scrittura e l'oggetto <paramref name="stream" /> specificato è di sola scrittura; oppure il pacchetto da aprire richiede autorizzazione di scrittura o di lettura e scrittura e l'oggetto <paramref name="stream" /> specificato è di sola lettura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Apre un pacchetto con un flusso di IO e modalità file specificati.</summary>
      <param name="stream">Il flusso di IO sul quale aprire il pacchetto.</param>
      <param name="packageMode">La modalità file nella quale aprire il pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="packageMode" /> non è valido.</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto da aprire richiede autorizzazione di lettura o di lettura e scrittura e l'oggetto <paramref name="stream" /> specificato è di sola scrittura; oppure il pacchetto da aprire richiede autorizzazione di scrittura o di lettura e scrittura e l'oggetto <paramref name="stream" /> specificato è di sola lettura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Apre un pacchetto con un'impostazione specificata di flusso di IO, modalità file e accesso ai file.</summary>
      <param name="stream">Il flusso di IO sul quale aprire il pacchetto.</param>
      <param name="packageMode">La modalità file nella quale aprire il pacchetto.</param>
      <param name="packageAccess">L'accesso ai file con il quale aprire il pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="packageMode" /> o <paramref name="packageAccess" />  non è valido.</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto da aprire richiede autorizzazione di lettura o di lettura e scrittura e l'oggetto <paramref name="stream" /> specificato è di sola scrittura; oppure il pacchetto da aprire richiede autorizzazione di scrittura o di lettura e scrittura e l'oggetto <paramref name="stream" /> specificato è di sola lettura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Apre un pacchetto in un percorso e con nome file specificati.</summary>
      <param name="path">Il nome e il percorso del file del pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Apre un pacchetto in un percorso specificato utilizzando una modalità di file specificata.</summary>
      <param name="path">Il nome e il percorso del file del pacchetto.</param>
      <param name="packageMode">La modalità file nella quale aprire il pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="packageMode" /> non è valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Apre un pacchetto in un percorso specificato utilizzando un'impostazione specificato di modalità file e accesso ai file.</summary>
      <param name="path">Il nome e il percorso del file del pacchetto.</param>
      <param name="packageMode">La modalità file nella quale aprire il pacchetto.</param>
      <param name="packageAccess">L'accesso ai file con il quale aprire il pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="packageMode" /> o <paramref name="packageAccess" /> non è valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Apre un pacchetto in un percorso specificato utilizzando un'impostazione specificata di modalità file, accesso ai file e condivisione file.</summary>
      <param name="path">Il nome e il percorso del file del pacchetto.</param>
      <param name="packageMode">La modalità file nella quale aprire il pacchetto.</param>
      <param name="packageAccess">L'accesso ai file con il quale aprire il pacchetto.</param>
      <param name="packageShare">La modalità di condivisione file nella quale aprire il pacchetto.</param>
      <returns>Il pacchetto aperto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="packageMode" />, <paramref name="packageAccess" />, o <paramref name="packageShare" /> non è valido.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Ottiene le proprietà principali del pacchetto.</summary>
      <returns>Le proprietà principali del pacchetto.</returns>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Indica se una parte con un URI specificato è nel pacchetto.</summary>
      <param name="partUri">L'oggetto <see cref="T:System.Uri" /> della parte da verificare.</param>
      <returns>
        <see langword="true" /> se una parte con <paramref name="partUri" /> specificato è nel pacchetto; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI (Uniform Resource Identifier) <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura (impossibile leggere le informazioni).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Indica se una relazione a livello di pacchetto con un ID specificato è contenuta nel pacchetto.</summary>
      <param name="id">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> della relazione da verificare.</param>
      <returns>
        <see langword="true" /> se una relazione a livello di pacchetto con  <paramref name="id" /> specificato è nel pacchetto; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il pacchetto non è aperto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" /> è stato chiamato).</exception>
      <exception cref="T:System.IO.IOException">Il pacchetto è di sola scrittura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Questo membro supporta l'infrastruttura Windows Presentation Foundation (WPF) e non è destinato all'utilizzo nell'applicazione.  Usare invece il metodo <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> indipendente dai tipi.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">Rappresenta una firma digitale applicata a un set di parti e relazioni di un pacchetto.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">Ottiene l'opzione per l'incorporamento del certificato X.509.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">Uno dei valori <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> che specifica l'opzione per la firma digitale.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">Restituisce un elenco ordinato delle operazioni <see cref="T:System.Security.Cryptography.Xml.Transform" /> applicato a una parte specificata.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">L'<see cref="T:System.Uri" /> di <see cref="T:System.IO.Packaging.PackagePart" /> per il quale restituire l'elenco di trasformazioni.</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">Un elenco ordinato di stringhe URI, ad esempio <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> o <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, che rappresenta le trasformazioni XML tipiche applicate alla parte con l'URI <paramref name="partName" /> specificato.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">Ottiene o imposta la firma digitale XML.</summary>
      <returns vsli:raw="The XML digital signature.">La firma digitale XML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">Ottiene la <see cref="T:System.IO.Packaging.PackagePart" /> che contiene la firma.</summary>
      <returns vsli:raw="The package part that contains the signature.">La parte del pacchetto che contiene la firma.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">Ottiene la stringa URI che identifica il tipo di firma.</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">Stringa URI che identifica il tipo di firma. Il valore predefinito è <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Ottiene il valore hash crittografato della <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Una matrice di byte che contiene il valore hash crittografato della <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">Ottiene un insieme di tutti gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> firmati con questa firma.</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">Un insieme che contiene tutte le parti del pacchetto firmate con questa firma.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Ottiene l'elenco delle parti <see cref="T:System.IO.Packaging.PackageRelationship" /> firmate.</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">L'elenco delle parti <see cref="T:System.IO.Packaging.PackageRelationship" /> firmate.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">Ottiene il certificato X.509 del firmatario.</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Certificato digitale del firmatario oppure <see langword="null" /> se il certificato non è archiviato in <see cref="T:System.IO.Packaging.Package" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">Ottiene la data e l'ora di creazione della firma.</summary>
      <returns vsli:raw="The date and time that the signature was created.">La data e l'ora di creazione della firma.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Ottiene il formato della data e dell'ora restituito dalla proprietà <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Ottiene il formato della data e dell'ora restituito dalla proprietà <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">Verifica la firma digitale in base a un certificato X.509.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> se la verifica ha esito positivo. In caso contrario, uno dei valori <see cref="T:System.IO.Packaging.VerifyResult" /> che identifica un problema.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">Verifica la firma digitale rispetto a un certificato X.509.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">Certificato X.509 del firmatario rispetto cui verificare la firma digitale.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> se la verifica ha esito positivo. In caso contrario, uno dei valori <see cref="T:System.IO.Packaging.VerifyResult" /> che identifica un problema.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La firma digitale <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> è stata eliminata.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fornisce una classe di utilità per la creazione e la verifica di firme digitali in <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Initializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> per l'utilizzo con un oggetto <see cref="T:System.IO.Packaging.Package" /> specificato.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">Il package associato a questo amministratore della firma.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">Ottiene o imposta l'opzione per l'incorporamento del certificato X.509 usata dal metodo <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> per la firma digitale di parti del pacchetto.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">Uno dei valori di <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">Controfirma tutte le firme nel pacchetto con il certificato X.509 selezionato dall'utente.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">La firma aggiunta come controfirma o <see langword="null" /> se non è stato individuato alcun certificato o l'utente ha annullato la finestra di dialogo per la selezione del certificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">Controfirma tutte le firme nel pacchetto con un certificato X.509 specificato.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">Certificato X.509 da aggiungere come controfirma.</param>
      <returns vsli:raw="The signature that was added as a countersign.">Firma aggiunta come controfirma.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> è <see langword="null" /></exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">Controfirma un elenco di firme con un certificato X.509 specificato.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">Certificato X.509 da usare per controfirmare ogni oggetto <paramref name="signatures" /> specificato.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">Elenco di firme da controfirmare.</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">Firma digitale usata per controfirmare ogni oggetto <paramref name="signatures" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="certificate" /> o <paramref name="signatures" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">Il pacchetto non contiene oggetti <see cref="T:System.IO.Packaging.PackagePart" /> firmati.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">Il pacchetto non contiene parti <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">Ottiene una stringa URI che identifica l'algoritmo hash predefinito usato per creare e verificare le firme.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">Stringa URI che identifica l'algoritmo hash predefinito utilizzato per creare e verificare le firme.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">Restituisce la firma digitale per un URI (Uniform Resource Identifier) della firma specificato.</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">URI della firma digitale da restituire.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">La firma digitale per l'<paramref name="signatureUri" /> specificato o <see langword="null" /> se non è possibile trovare una firma per l'<paramref name="signatureUri" /> specificato.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Ottiene o imposta l'identificatore URI per l'istanza di <see cref="T:System.Security.Cryptography.HashAlgorithm" /> usata per creare e verificare le firme.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Identificatore URI <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> per l'istanza di <see cref="T:System.Security.Cryptography.HashAlgorithm" /> utilizzata per creare e verificare le firme.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">La stringa per l'URI da impostare è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">La stringa per l'URI da impostare è vuota.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">Si verifica quando <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rileva una firma non valida.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">Ottiene un valore che indica se il controllo del package contiene eventuali firme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nel package sono presenti firme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">Ottiene o imposta un handle sulla finestra padre per la visualizzazione di una finestra di dialogo per la selezione del certificato.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">L'handle della finestra padre da utilizzare per visualizzare la finestra di dialogo per la selezione del certificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">Rimuove tutte le firme digitali dal pacchetto.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">Rimuove la firma digitale con un URI (Uniform Resource Identifier) della firma specificato.</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">URI dell'oggetto <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> da rimuovere.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">Chiede all'utente un certificato X.509, che viene quindi usato per firmare digitalmente un elenco specificato di parti di pacchetto.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Elenco di URI (Uniform Resource Identifier) per gli elementi <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">Firma digitale usata per firmare l'elenco di <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">Firma un elenco di parti di pacchetto con un certificato X.509 specificato.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Elenco di URI (Uniform Resource Identifier) per gli elementi <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">Certificato X.509 da usare per firmare digitalmente ogni oggetto <paramref name="parts" /> specificato.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">Firma digitale usata per firmare l'elenco specificato di <paramref name="parts" /> o <see langword="null" /> se è non stato trovato alcun certificato o se l'utente ha fatto clic su "Annulla" nella finestra di dialogo di selezione del certificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">Firma un elenco di parti e di relazioni di pacchetto con un certificato X.509 specificato.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Elenco di URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificato X.509 da usare per firmare digitalmente ognuna delle parti e delle relazioni specificate.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> da firmare.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Firma digitale usata per firmare gli elementi specificati negli elenchi <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">
        <paramref name="parts" /> e <paramref name="relationshipSelectors" /> non specificano oggetti da firmare.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">Firma un elenco di parti e di relazioni del pacchetto con un certificato X.509 e un elemento identificatore (ID) specificati.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Elenco di URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificato X.509 da usare per firmare digitalmente ognuna delle parti e delle relazioni specificate.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> da firmare.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Stringa di identificazione da associare alla firma.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Firma digitale usata per firmare gli elementi specificati negli elenchi <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" /> e <paramref name="relationshipSelectors" /> non specificano elementi da firmare.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">Firma un elenco di parti del pacchetto, relazioni del pacchetto o oggetti personalizzati con un certificato X.509 specificato e l'elemento identificatore (ID) della firma.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Elenco di URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.IO.Packaging.PackagePart" /> da firmare.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificato X.509 da usare per firmare digitalmente ognuna delle parti e delle relazioni specificate.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> da firmare.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Stringa di identificazione da associare alla firma.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">Elenco di oggetti dati personalizzati da firmare.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">Elenco di riferimenti agli oggetti personalizzati da firmare.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Firma digitale usata per firmare gli elementi specificati negli elenchi <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> e <paramref name="objectReferences" /> non specificano elementi da firmare.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">Un oggetto <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> di una parte a cui viene apposta una firma fa riferimento a un oggetto <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vuoto, <see langword="null" /> o non definito.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" /> non è <see langword="null" /> e non è un ID dello schema XML valido (ad esempio, inizia con una cifra numerica).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">Ottiene l'URI (Uniform Resource Identifier) della parte dell'origine della firma.</summary>
      <returns vsli:raw="The URI of the signature origin part.">URI della parte di origine della firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">Ottiene il tipo di relazione di origine della firma predefinita.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">Il tipo di relazione di origine della firma predefinita.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">Ottiene un insieme di tutte le firme contenute nel package.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">Un insieme di tutti gli oggetti di <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Ottiene o imposta il formato di data/ora utilizzato per creare un firma di <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Il formato data/ora utilizzato per creare una firma di <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Ottiene un dizionario che contiene ogni elemento <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definito e l'elemento XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> associato.</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Dizionario che contiene ogni <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definito e il <see cref="T:System.Security.Cryptography.Xml.Transform" />di XML associato.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> associato.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">Verifica un certificato X.509 specificato.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">Certificato X.509 da verificare.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valore 0) se la verifica del certificato ha avuto esito positivo, In caso contrario, un'enumerazione bit per bit di flag dell'errore</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">Verifica le firme su tutte le parti firmate all'interno del pacchetto.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">
        <see langword="true" /> per uscire al primo errore. In caso contrario, <see langword="false" /> per continuare e controllare tutte le firme.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valore 0) se tutte le firme sono state verificate correttamente. In caso contrario, un'enumerazione che identifica l'errore.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Fornisce una classe di base per le parti archiviate in un oggetto <see cref="T:System.IO.Packaging.Package" />.  Questa classe è astratta.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackagePart" /> con un oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> padre e un URI della parte specificati.</summary>
      <param name="package">Oggetto <see cref="T:System.IO.Packaging.Package" /> padre della parte.</param>
      <param name="partUri">URI della parte, relativo alla radice <see cref="T:System.IO.Packaging.Package" /> padre.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> o <paramref name="partUri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackagePart" /> con un oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> padre, un URI della parte e un tipo di contenuto MIME specificati.</summary>
      <param name="package">Oggetto <see cref="T:System.IO.Packaging.Package" /> padre della parte.</param>
      <param name="partUri">URI della parte, relativo alla radice <see cref="T:System.IO.Packaging.Package" /> padre.</param>
      <param name="contentType">Tipo di contenuto MIME del flusso di dati della parte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> o <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackagePart" /> con un oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> padre, un URI della parte, un tipo di contenuto MIME e un oggetto <see cref="T:System.IO.Packaging.CompressionOption" /> specificati.</summary>
      <param name="package">Oggetto <see cref="T:System.IO.Packaging.Package" /> padre della parte.</param>
      <param name="partUri">URI della parte, relativo alla radice <see cref="T:System.IO.Packaging.Package" /> padre.</param>
      <param name="contentType">Tipo di contenuto MIME del flusso di dati della parte.</param>
      <param name="compressionOption">Opzione di compressione del flusso di dati della parte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> o <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un URI <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="compressionOption" /> non è valido.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Ottiene l'opzione di compressione del flusso di contenuto della parte.</summary>
      <returns>Opzione di compressione del flusso di contenuto della parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Ottiene il tipo MIME del flusso di contenuto.</summary>
      <returns>Tipo MIME del flusso dei dati di contenuto per la parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).
-oppure-
La stringa restituita dal metodo <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> della classe derivata è vuota.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Crea una relazione a livello di parte tra l'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> e un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> o una risorsa esterna di destinazione specificati.</summary>
      <param name="targetUri">URI della parte di destinazione.</param>
      <param name="targetMode">Uno dei valori di enumerazione. Ad esempio, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> se la parte di destinazione è all'interno dell'oggetto <see cref="T:System.IO.Packaging.Package" />; oppure <see cref="F:System.IO.Packaging.TargetMode.External" /> se la destinazione è rappresentata da una risorsa all'esterno dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Ruolo della relazione.</param>
      <returns>Relazione a livello di parte tra l'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> e l'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> o la risorsa esterna di destinazione.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> o <paramref name="relationshipType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="targetMode" /> non è un valore di enumerazione <see cref="T:System.IO.Packaging.TargetMode" /> valido.</exception>
      <exception cref="T:System.ArgumentException">La parte identificata da <paramref name="targetUri" /> rappresenta una relazione (la destinazione di una relazione non può essere un'altra relazione).
-oppure-
<paramref name="targetMode" /> viene specificato come <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ma <paramref name="targetUri" /> è un URI esterno assoluto.</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola lettura (non è possibile aggiungere una nuova relazione).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Crea una relazione a livello di parte tra l'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> e un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> o una risorsa esterna di destinazione specificati.</summary>
      <param name="targetUri">URI della parte di destinazione.</param>
      <param name="targetMode">Uno dei valori di enumerazione. Ad esempio, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> se la parte di destinazione è all'interno dell'oggetto <see cref="T:System.IO.Packaging.Package" />; oppure <see cref="F:System.IO.Packaging.TargetMode.External" /> se la destinazione è rappresentata da una risorsa all'esterno dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Ruolo della relazione.</param>
      <param name="id">ID univoco per la relazione.</param>
      <returns>Relazione a livello di parte tra l'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> e l'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> o la risorsa esterna di destinazione.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> o <paramref name="relationshipType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="targetMode" /> non è un valore di enumerazione <see cref="T:System.IO.Packaging.TargetMode" /> valido.</exception>
      <exception cref="T:System.ArgumentException">La parte identificata da <paramref name="targetUri" /> rappresenta una relazione (la destinazione di una relazione non può essere un'altra relazione).
-oppure-
<paramref name="targetMode" /> viene specificato come <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ma <paramref name="targetUri" /> è un URI esterno assoluto.</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola lettura (non è possibile aggiungere una nuova relazione).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.
-oppure-
Una parte con il parametro <paramref name="id" /> specificato esiste già.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Elimina un oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> a livello di parte specificato.</summary>
      <param name="id">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> della relazione da eliminare.</param>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola lettura (non è possibile eliminare le relazioni).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>Quando se ne esegue l'override in una classe derivata, restituisce il tipo MIME del contenuto della parte.</summary>
      <returns>Tipo MIME del contenuto della parte.</returns>
      <exception cref="T:System.NotSupportedException">La classe derivata non fornisce un'implementazione di override necessaria per il metodo <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Restituisce la relazione che presenta un oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> specificato.</summary>
      <param name="id">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> della relazione da restituire.</param>
      <returns>Relazione che corrisponde al parametro <paramref name="id" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="relationshipType" /> è una stringa vuota.</exception>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).
-oppure-
Una relazione con il parametro <paramref name="id" /> specificato non esiste nel package.</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola scrittura (non è possibile leggere le informazioni sulle relazioni).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Restituisce un insieme di tutte le relazioni di proprietà di questa parte.</summary>
      <returns>Insieme di tutte le relazioni di proprietà della parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola scrittura (non è possibile leggere le informazioni sulle relazioni).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Restituisce un insieme delle relazioni che corrispondono a un oggetto <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> specificato.</summary>
      <param name="relationshipType">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> delle relazioni da individuare e restituire nell'insieme.</param>
      <returns>Insieme di relazioni che corrispondono al parametro <paramref name="relationshipType" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="relationshipType" /> è una stringa vuota.</exception>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola scrittura (non è possibile leggere le informazioni sulle relazioni).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Restituisce il flusso dei dati di contenuto della parte.</summary>
      <returns>Flusso dei dati di contenuto per la parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">L'oggetto flusso restituito dal metodo <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> della sottoclasse derivata è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Restituisce il flusso di contenuto aperto in un oggetto <see cref="T:System.IO.FileMode" /> di I/O specificato.</summary>
      <param name="mode">Modalità di I/O in cui aprire il flusso di contenuto.</param>
      <returns>Flusso di contenuto della parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="mode" /> non è un valore di enumerazione <see cref="T:System.IO.FileMode" /> valido.</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="mode" /> non è compatibile con il flusso della parte e del package.
-oppure-
L'oggetto flusso restituito dal metodo <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> della sottoclasse derivata è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Restituisce il flusso di contenuto della parte aperto con un oggetto <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> specificato.</summary>
      <param name="mode">Modalità di I/O in cui aprire il flusso di contenuto.</param>
      <param name="access">Autorizzazioni di accesso da utilizzare nell'apertura del flusso di contenuto.</param>
      <returns>Flusso di contenuto per la parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="mode" /> non è un valore di enumerazione <see cref="T:System.IO.FileMode" /> valido.
-oppure-
Il parametro <paramref name="access" /> non è un valore di enumerazione <see cref="T:System.IO.FileAccess" /> valido.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> o <paramref name="access" /> non è compatibile con il flusso della parte e del package.
-oppure-
Il parametro <paramref name="access" /> viene specificato come <see cref="F:System.IO.FileAccess.Read" />, ma il parametro <paramref name="mode" /> richiede l'accesso in scrittura.  I valori <see cref="T:System.IO.FileMode" /> di <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> e <see cref="F:System.IO.FileMode.Append" /> richiedono accesso <see cref="F:System.IO.FileAccess.Write" /> o <see cref="F:System.IO.FileAccess.ReadWrite" />.
-oppure-
L'oggetto flusso restituito dal metodo <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> della sottoclasse derivata è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Quando se ne esegue l'override in una classe derivata, restituisce il flusso di contenuto della parte aperto con un oggetto <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> specificato.</summary>
      <param name="mode">Modalità di I/O in cui aprire il flusso di contenuto.</param>
      <param name="access">Autorizzazioni di accesso da utilizzare nell'apertura del flusso di contenuto.</param>
      <returns>Flusso dei dati di contenuto della parte.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Ottiene l'oggetto <see cref="T:System.IO.Packaging.Package" /> padre della parte.</summary>
      <returns>Package padre della parte.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Restituisce un valore che indica se questa parte è proprietaria di una relazione con un oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> specificato.</summary>
      <param name="id">Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> della relazione da verificare.</param>
      <returns>
        <see langword="true" /> se questa parte è proprietaria di una relazione con il parametro <paramref name="id" /> specificato; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> non è un identificatore XML valido.</exception>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Il package è di sola scrittura (non è possibile leggere le informazioni sulle relazioni).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Ottiene l'URI della parte.</summary>
      <returns>URI della parte relativa alla radice del pacchetto.</returns>
      <exception cref="T:System.InvalidOperationException">La parte è stata eliminata.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackagePart.Package" /> non è aperto (è stato chiamato l'oggetto <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> o <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Restituisce un enumeratore per scorrere le parti nell'insieme.</summary>
      <returns>Enumeratore per scorrere gli elementi <see cref="T:System.IO.Packaging.PackagePart" /> nell'insieme.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Rappresenta le proprietà principali di un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>Se sottoposto a override in una classe derivata, ottiene o imposta la categoria dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Categoria del contenuto contenuta in <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta un valore che rappresenta lo stato dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Stato del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta un valore che rappresenta il tipo di contenuto incluso nell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Tipo di contenuto incluso nell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta data e ora di creazione dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Data e ora della creazione iniziale dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta un valore che identifica il soggetto o l'entità che hanno creato l'oggetto <see cref="T:System.IO.Packaging.Package" /> e il relativo contenuto</summary>
      <returns>Soggetto o entità che hanno creato <see cref="T:System.IO.Packaging.Package" /> e il relativo contenuto.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>Quando viene sottoposto a override in una classe derivata, recupera o imposta una descrizione del contenuto incluso nell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Descrizione del contenuto incluso nell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Rilascia tutte le risorse utilizzate dall'istanza <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'istanza <see cref="T:System.IO.Packaging.PackageProperties" /> e facoltativamente rilascia anche le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta un valore che identifica in modo univoco l'oggetto <see cref="T:System.IO.Packaging.Package" /> e il relativo contenuto</summary>
      <returns>Valore che identifica in modo univoco l'oggetto <see cref="T:System.IO.Packaging.Package" /> e il relativo contenuto.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>Quando ignorando in una classe derivata, ottiene o imposta un valore che definisce un insieme delimitato di parole chiave per supportare ricerca e indicizzazione dell'oggetto <see cref="T:System.IO.Packaging.Package" /> e del relativo contenuto.</summary>
      <returns>Un insieme delimitato di parole chiave per supportare ricerca e indicizzazione dell'oggetto <see cref="T:System.IO.Packaging.Package" /> e del relativo contenuto.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta un valore che identifica la lingua dell'oggetto <see cref="T:System.IO.Packaging.Package" /> e del relativo contenuto.</summary>
      <returns>Valore che identifica la lingua del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta un valore che identifica l'utente che ha eseguito l'ultima modifica al contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>L'utente che eseguito l'ultima modifica del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta data e ora in cui è stata eseguita l'ultima stampa del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Data e ora in cui è stata eseguita l'ultima stampa del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta data e ora dell'ultima modifica dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Data e ora dell'ultima modifica dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>Quando viene sottoposto a override in una classe derivata, ottiene o imposta il numero di revisione dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Numero di revisione dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>Quando sottoposto a override in una classe derivata, ottiene o imposta l'argomento del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Argomento del contenuto dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>Quando viene sottoposto a override in una classe derivata, recupera o imposta il nome predefinito dell'oggetto <see cref="T:System.IO.Packaging.Package" /> e del relativo contenuto</summary>
      <returns>Il nome predefinito dell'oggetto <see cref="T:System.IO.Packaging.Package" /> e del relativo contenuto.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>Se sottoposto a override in una classe derivata, ottiene o imposta il numero di versione dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Numero di versione dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Rappresenta un'associazione tra un oggetto di origine, <see cref="T:System.IO.Packaging.Package" /> o <see cref="T:System.IO.Packaging.PackagePart" /> e un oggetto target, che può essere un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> o una risorsa esterna.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Ottiene una stringa mediante cui si identifica la relazione.</summary>
      <returns>Stringa mediante cui si identifica la relazione.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Ottiene l'oggetto <see cref="T:System.IO.Packaging.Package" /> che contiene questa relazione.</summary>
      <returns>Package che contiene questa relazione.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Ottiene o imposta il nome del tipo qualificato della relazione.</summary>
      <returns>Nome del tipo qualificato della relazione.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Ottiene l'URI del pacchetto o della parte proprietari della relazione.</summary>
      <returns>URI del <see cref="T:System.IO.Packaging.Package" /> o <see cref="T:System.IO.Packaging.PackagePart" /> a cui appartiene la relazione.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Ottiene un valore che indica se la destinazione della relazione è <see cref="F:System.IO.Packaging.TargetMode.Internal" /> o <see cref="F:System.IO.Packaging.TargetMode.External" /> per l'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Valore di enumerazione che indica se <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> fa riferimento a un oggetto <see cref="F:System.IO.Packaging.TargetMode.Internal" /> o <see cref="F:System.IO.Packaging.TargetMode.External" /> della risorsa per l'oggetto <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Ottiene l'URI della risorsa di destinazione della relazione.</summary>
      <returns>URI della risorsa di destinazione.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Rappresenta un insieme di elementi dell'oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> che sono di proprietà di un oggetto predefinito <see cref="T:System.IO.Packaging.PackagePart" /> o dell'oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Restituisce un enumeratore per scorrere le relazioni nell'insieme.</summary>
      <returns>Enumeratore per scorrere gli elementi <see cref="T:System.IO.Packaging.PackageRelationship" /> nell'insieme.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Questo tipo o membro supporta l'infrastruttura Windows Presentation Foundation e non deve essere usato direttamente dal codice.</summary>
      <returns>Non usare. Usare <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Definisce i criteri <see cref="T:System.IO.Packaging.PackageRelationship" /> per selezionare tra relazioni a livello di parte o a livello di package.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
      <param name="sourceUri">URI (Uniform Resource Identifier) dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> o <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") proprietario della relazione.</param>
      <param name="selectorType">Tipo dell'oggetto <paramref name="selectionCriteria" />, tramite relazione <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> o tramite relazione <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.</param>
      <param name="selectionCriteria">La stringa di qualificazione utilizzata per selezionare le relazioni basate sull'oggetto <paramref name="selectorType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> o <paramref name="selectionCriteria" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="selectorType" /> non è valido.</exception>
      <exception cref="T:System.Xml.XmlException">Il parametro <paramref name="selectorType" /> è <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ma <paramref name="selectionCriteria" /> non è un oggetto XML Schema Definition (XSD) identificatore (ID) valido.</exception>
      <exception cref="T:System.ArgumentException">L'oggetto <paramref name="selectionCriteria" /> non è valido per l'oggetto <paramref name="selectorType" /> Specificato.
-oppure-
<paramref name="sourceUri" /> non è la radice di <see cref="T:System.IO.Packaging.Package" /> ("/") e non è un URI <see cref="T:System.IO.Packaging.PackagePart" /> valido.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Restituisce un elenco di oggetti <see cref="T:System.IO.Packaging.PackageRelationship" /> che corrispondono agli oggetti <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" />e <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> definiti.</summary>
      <param name="package">Il package dal quale selezionare le relazioni basate sui criteri di selezione.</param>
      <returns>Un elenco di relazioni che corrispondono ai parametri di selezione specificati al costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Ottiene i criteri di selezione specificati al costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>I criteri di selezione basati sull'oggetto <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> dell'oggetto <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> o dell'oggetto <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> specificati al costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Ottiene l'oggetto <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> specificato al costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Il tipo di selettore dell'oggetto <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> o dell'oggetto <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> specificati per il costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Ottiene l' URI ("/") del package radice o la parte <see cref="P:System.IO.Packaging.PackagePart.Uri" /> specificati al costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> come proprietario della relazione.</summary>
      <returns>URI ("/") del package radice o la parte <see cref="P:System.IO.Packaging.PackagePart.Uri" /> specificati al costruttore <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> come proprietario della relazione.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Specifica il tipo di criteri di selezione utilizzati per confrontare e restituire le selezioni <see cref="T:System.IO.Packaging.PackageRelationship" /> tramite un <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Le selezioni <see cref="T:System.IO.Packaging.PackageRelationship" /> sono da <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>Le selezioni <see cref="T:System.IO.Packaging.PackageRelationship" /> sono da <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Fornisce metodi di utilità per comporre e analizzare gli oggetti URI di tipo pack.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Restituisce un valore che indica se due URI di tipo pack sono uguali.</summary>
      <param name="firstPackUri">Il primo URI di tipo pack.</param>
      <param name="secondPackUri">Il secondo URI di tipo pack.</param>
      <returns>Intero con segno che indica la relazione tra <paramref name="firstPackUri" /> e <paramref name="secondPackUri" />.
  Value 
  Significato 
  Minore di 0 
 <paramref name="firstPackUri" /> è minore di <paramref name="secondPackUri" />.  
  
  0 
 <paramref name="firstPackUri" /> è equivalente a <paramref name="secondPackUri" />.  
  
  Maggiore di 0 
 <paramref name="firstPackUri" /> è maggiore di <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> o <paramref name="secondPackUri" /> non è un URI assoluto.
-oppure-
<paramref name="firstPackUri" /> o <paramref name="secondPackUri" /> non inizia con uno schema "pack://".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Restituisce un valore che indica se due URI di parti del pacchetto sono equivalenti.</summary>
      <param name="firstPartUri">URI del primo oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">URI del secondo oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Valore che indica la relazione tra <paramref name="firstPartUri" /> e <paramref name="secondPartUri" />.
  Value 
  Significato 
  Minore di 0 
 <paramref name="firstPartUri" /> è minore di <paramref name="secondPartUri" />.  
  
  0 
 <paramref name="firstPartUri" /> è equivalente a <paramref name="secondPartUri" />.  
  
  Maggiore di 0 
 <paramref name="firstPartUri" /> è maggiore di <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> o <paramref name="secondPartUri" /> non è una sintassi dell'URI della parte valida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Crea un nuovo URI di tipo pack che punta a un pacchetto.</summary>
      <param name="packageUri">URI dell'oggetto <see cref="T:System.IO.Packaging.Package" /> a cui si fa riferimento.</param>
      <returns>URI di tipo pack per l'oggetto <see cref="T:System.IO.Packaging.Package" /> a cui fa riferimento l'oggetto <paramref name="packageUri" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> non è un URI assoluto.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Crea un URI di tipo pack, dato un URI di <see cref="T:System.IO.Packaging.Package" /> e l'URI di una parte nel pacchetto.</summary>
      <param name="packageUri">URI di <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> nel pacchetto.</param>
      <returns>URI di tipo pack dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> non è un URI assoluto.
-oppure-
<paramref name="partUri" /> non è una sintassi URI valida per la parte.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Crea un URI di tipo pack dato un URI di <see cref="T:System.IO.Packaging.Package" />, l'URI di una parte nel pacchetto e un frammento "#" da accodare.</summary>
      <param name="packageUri">URI di <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> nel pacchetto.</param>
      <param name="fragment">Riferimento "#" che identifica un elemento all'interno della parte del pacchetto.</param>
      <returns>URI di tipo pack che identifica il pacchetto, la parte del pacchetto e il frammento specificati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> non è un URI assoluto.
-oppure-
<paramref name="partUri" /> non è una sintassi URI valida per la parte.
-oppure-
<paramref name="fragment" /> è vuoto o inizia con "#".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Crea un URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> formattato.</summary>
      <param name="partUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> all'interno del package.</param>
      <returns>URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> formattato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non è un oggetto <see cref="T:System.Uri" /> assoluto.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Restituisce la forma normalizzata dell'URI di un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> specificato.</summary>
      <param name="partUri">URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> da normalizzare.</param>
      <returns>Forma normalizzata del parametro <paramref name="partUri" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> non presenta una sintassi <see cref="T:System.Uri" /> valida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Restituisce l'URI interno che punta all'intero pacchetto di un URI di tipo pack specificato.</summary>
      <param name="packUri">URI di tipo pack da cui restituire l'URI di <see cref="T:System.IO.Packaging.Package" />.</param>
      <returns>URI dell'oggetto <see cref="T:System.IO.Packaging.Package" /> dal parametro <paramref name="packUri" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> non è un oggetto <see cref="T:System.Uri" /> assoluto.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Restituisce l'URI di un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> all'interno di un URI di tipo pack specificato.</summary>
      <param name="packUri">URI di tipo pack da cui restituire l'URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>L'URI dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> nel parametro <paramref name="packUri" /> specificato o <see langword="null" /> se <paramref name="packUri" /> punta a un pacchetto anziché un oggetto <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">Se <paramref name="packUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Se <paramref name="packUri" /> non è un <see cref="T:System.Uri" /> assoluto.
-oppure-
<paramref name="packUri" /> non ha lo schema "pack://".
-oppure-
Il valore partUri estratto da <paramref name="packUri" /> non è conforme alla sintassi partUri valida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Restituisce l'URI della parte di relazione associata a un oggetto <see cref="T:System.IO.Packaging.PackagePart" /> specificato.</summary>
      <param name="partUri">Oggetto <see cref="P:System.IO.Packaging.PackagePart.Uri" /> dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> per restituire l'URI per l'oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> associato.</param>
      <returns>URI della parte <see cref="T:System.IO.Packaging.PackageRelationship" /> associata all'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> identificato da <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La sintassi <paramref name="partUri" /> non è valida per un URI della PackagePart.
-oppure-
<paramref name="partUri" /> è un URI assoluto.
-oppure-
<paramref name="partUri" /> fa riferimento a una parte di relazione.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Restituisce l'URI relativo tra due URI di <see cref="T:System.IO.Packaging.PackagePart" /> specificati.</summary>
      <param name="sourcePartUri">URI della parte di origine.</param>
      <param name="targetPartUri">URI della parte di destinazione.</param>
      <returns>URI relativo da <paramref name="sourcePartUri" /> a <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> o <paramref name="targetPartUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> o <paramref name="targetPartUri" /> non ha una sintassi <see cref="T:System.Uri" /> valida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Restituisce l'oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> dall'oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> con un URI specificato.</summary>
      <param name="relationshipPartUri">URI della parte di relazione da cui restituire l'oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
      <returns>Oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> dell'oggetto <see cref="T:System.IO.Packaging.PackagePart" /> della relazione con il parametro <paramref name="relationshipPartUri" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> è un URI assoluto.
-oppure-
La sintassi <paramref name="relationshipPartUri" /> non è valida per un oggetto <see cref="T:System.IO.Packaging.PackagePart" />.
-oppure-
<paramref name="relationshipPartUri" /> non fa riferimento a una parte di relazione.
-oppure-
L'oggetto <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> della parte di relazione fa riferimento a un'altra parte di relazione (non valida).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Restituisce un valore che indica se un URI specificato è l'URI di una parte <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
      <param name="partUri">URI per cui verificare la presenza di una parte <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="partUri" /> identifica una parte <see cref="T:System.IO.Packaging.PackageRelationship" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> è un URI assoluto.
-oppure-
<paramref name="partUri" /> rappresenta una sintassi <see cref="T:System.IO.Packaging.PackagePart" /> non valida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Restituisce l'URI di una parte, dato un URI della parte di origine e un URI con un percorso relativo di una parte di destinazione.</summary>
      <param name="sourcePartUri">URI della parte di origine o "/" per definire la radice di <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="targetUri">URI relativo della parte di destinazione.</param>
      <returns>URI della parte di destinazione risolto tra i parametri <paramref name="SourcePartUri" /> e <paramref name="targetUri" /> specificati.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> o <paramref name="targetUri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> non è un URI della parte valido.
-oppure-
<paramref name="targetUri" /> non è un URI relativo valido.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Definisce il nome di schema URI di tipo pack "pack".</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Rappresenta le informazioni Digital Rights Management (DRM) archiviate in <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">Ottiene o imposta l'oggetto <see cref="T:System.Security.RightsManagement.CryptoProvider" /> per accedere al flusso di dati crittografati di Rights Management del package.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">
        <see cref="T:System.Security.RightsManagement.CryptoProvider" /> per accedere all'informazioni di Rights Management.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">Elimina l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente specificato dal flusso di dati crittografati di Rights Management.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">Utente dell'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> da eliminare.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">Restituisce un insieme di dizionari di utenti e coppie chiave/valore di <see cref="T:System.Security.RightsManagement.UseLicense" /> dal flusso di dati crittografati di Rights Management.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">Un insieme di utente e coppie chiave/valore di <see cref="T:System.Security.RightsManagement.UseLicense" /> contenuto nel package protetto da Rights Management.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">Restituisce l'oggetto incorporato <see cref="T:System.Security.RightsManagement.PublishLicense" /> dal flusso di dati crittografati di Rights Management.</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">L'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> incorporato; oppure <see langword="null" />, se il package non contiene un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">Restituisce un oggetto incorporato <see cref="T:System.Security.RightsManagement.UseLicense" /> di un utente specificato dal flusso di dati crittografati di Rights Management.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">L'utente o il gruppo di utenti per cui restituire l'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> per l'utente specificato; o <see langword="null" />, se il package non contiene un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> che corrisponde all'oggetto <paramref name="userKey" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="userKey" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">Salva un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> predefinito nel flusso di dati crittografati di Rights Management.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">La licenza di pubblicazione per archiviare e incorporare nel package.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="publishLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">Salva un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> predefinito per un utente specificato sul flusso di dati crittografati di Rights Management.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Utente dell'oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">La licenza per archiviare e incorporare nel package.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="userKey" /> o <paramref name="useLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La versione corrente della classe non è in grado di leggere le informazioni di Rights Management contenute nel package.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">Specifica gli argomenti dell'evento fornito a <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">Ottiene la firma digitale da verificare.</summary>
      <returns vsli:raw="The digital signature being verified.">Firma digitale da verificare.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">Ottiene l'errore di verifica della firma.</summary>
      <returns vsli:raw="The signature verification error.">Errore di verifica della firma.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fornisce accesso e le informazioni per modificare archivi dati in un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">Crea un nuovo flusso con un nome specificato.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Nome del nuovo flusso.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Nuovo flusso con il <paramref name="name" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">Crea un nuovo flusso con un nome specificato, <see cref="T:System.IO.Packaging.CompressionOption" />e <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Nome del nuovo flusso.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">L'opzione di compressione per il flusso di dati.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">Le opzioni di crittografia per il nuovo flusso di dati.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">Nuovo flusso con il <paramref name="name" /> specificato, <paramref name="compressionOption" /> e <paramref name="encryptionOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">Crea un nuovo <see cref="T:System.IO.Packaging.StorageInfo" /> figlio con questo <see cref="T:System.IO.Packaging.StorageInfo" /> come elemento padre.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">Nome del nuovo archivio dati figlio.</param>
      <returns vsli:raw="The new child data store.">Nuovo archivio dati figlio.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">Elimina il flusso con un nome specificato.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">Nome <see cref="T:System.IO.Packaging.StreamInfo" /> del flusso da eliminare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">Elimina un archivio secondario specificato.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">Nome dell'archivio secondario da eliminare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">Restituisce l'istanza <see cref="T:System.IO.Packaging.StreamInfo" /> con il nome specificato.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">Nome dell'istanza <see cref="T:System.IO.Packaging.StreamInfo" /> da restituire.</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Flusso con <paramref name="name" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">Restituisce una matrice delle istanze <see cref="T:System.IO.Packaging.StreamInfo" /> che sono attualmente contenute in questo archivio.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">Matrice degli oggetti <see cref="T:System.IO.Packaging.StreamInfo" />, ognuno dei quali fa riferimento a un flusso I/O definito all'interno di questo archivio.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">Restituisce l'archivio secondario figlio con un nome specificato.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">Nome dell'archivio secondario da restituire.</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Archivio secondario figlio con l'oggetto <paramref name="name" /> specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">Restituisce una matrice degli archivi secondari figlio attualmente contenuti in questo archivio.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">Matrice degli oggetti <see cref="T:System.IO.Packaging.StorageInfo" />, ognuno dei quali fa riferimento a un archivio secondario definito all'interno di questo archivio.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">Ottiene il nome dell'archivio.</summary>
      <returns vsli:raw="The name of this store.">Nome di questo archivio.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">Restituisce un valore che indica se un flusso specificato esiste.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">Nome <see cref="T:System.IO.Packaging.StreamInfo" /> di cui verificare la presenza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un flusso con <paramref name="name" /> specificato è presente nell'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">Restituisce un valore che indica se un archivio secondario figlio specifico esiste.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">Nome dell'elemento figlio <see cref="T:System.IO.Packaging.StorageInfo" /> di cui verificare la presenza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un archivio secondario figlio con <paramref name="name" /> specificato è presente nell'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fornisce l'accesso e le informazioni per modificare i flussi I/O in un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">Ottiene l'impostazione dell'oggetto <see cref="T:System.IO.Packaging.CompressionOption" /> per il flusso.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">Impostazione dell'opzione di compressione per il flusso del package.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">Ottiene l'impostazione dell'oggetto <see cref="T:System.IO.Packaging.EncryptionOption" /> per il flusso.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">Impostazione delle opzioni di crittografia per il flusso del package.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Restituisce un flusso aperto in un predefinito <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" />.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Flusso I/O aperto nella radice predefinita <see cref="T:System.IO.Packaging.Package" /><see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">Restituisce un flusso I/O aperto in un oggetto <see cref="T:System.IO.FileMode" /> specificato.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">La modalità file nella quale aprire il flusso.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">Il flusso aperto nel file <paramref name="mode" /> specificato.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Restituisce un flusso I/O aperto in un oggetto <see cref="T:System.IO.FileMode" /> specificato e con <see cref="T:System.IO.FileAccess" /> specificato.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">La modalità file nella quale aprire il flusso.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">Modalità accesso file nella quale leggere o scrivere nel flusso.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Flusso I/O aperto nell'oggetto <see cref="T:System.IO.FileMode" /> specificato e con <see cref="T:System.IO.FileAccess" /> specificato.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">Ottiene il nome del flusso.</summary>
      <returns vsli:raw="The name of this stream.">Nome di questo flusso.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Specifica se la destinazione di un oggetto <see cref="T:System.IO.Packaging.PackageRelationship" /> è all’interno o all’esterno di un oggetto <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>La relazione fa riferimento a una risorsa esterna al pacchetto.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>La relazione fa riferimento a una parte che si trova all’interno del pacchetto.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">Specifica il risultato della verifica di un certificato o di una firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">Il certificato X.509 non è disponibile per verificare la firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">Il certificato X.509 non è valido.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">La firma non è valida.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">Il pacchetto o la parte specificati non hanno firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">Una relazione del riferimento alla firma non è stata trovata.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">La verifica ha avuto esito positivo.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Implementa una sottoclasse derivata della classe di base <see cref="T:System.IO.Packaging.Package" /> astratta. La classe <see cref="T:System.IO.Packaging.ZipPackage" /> usa un archivio ZIP come archivio del contenitore. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Rappresenta una parte archiviata in un oggetto <see cref="T:System.IO.Packaging.ZipPackage" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>L'oggetto <see cref="T:System.Security.Permissions.MediaPermission" /> descrive un set di autorizzazioni di sicurezza che consente di controllare se è possibile usare supporti video, audio e immagine in un'applicazione WPF (Windows Presentation Foundation) parzialmente attendibile.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.MediaPermission" /> specificando il livello di autorizzazione audio.</summary>
      <param name="permissionAudio">Valore enumerato di <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.MediaPermission" /> specificando i livelli di autorizzazione audio, video e immagine.</summary>
      <param name="permissionAudio">Valore enumerato di <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Valore enumerato di <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Valore enumerato di <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.MediaPermission" /> specificando il livello di autorizzazione immagine.</summary>
      <param name="permissionImage">Valore enumerato di <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.MediaPermission" /> specificando il livello di autorizzazione video.</summary>
      <param name="permissionVideo">Valore enumerato di <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.MediaPermission" /> specificando uno stato di autorizzazione.</summary>
      <param name="state">Valore enumerato di <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Ottiene il valore corrente del livello di autorizzazione audio.</summary>
      <returns>Livello di autorizzazione audio.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Crea e restituisce una copia identica dell'autorizzazione corrente.</summary>
      <returns>Copia dell'autorizzazione corrente.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Ricostruisce un'autorizzazione con uno stato specificato da una codifica XML.</summary>
      <param name="securityElement">Codifica XML da usare per ricostruire l'autorizzazione.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Ottiene il valore corrente del livello di autorizzazione immagine.</summary>
      <returns>Livello di autorizzazione immagine.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'autorizzazione corrente e quella specificata.</summary>
      <param name="target">Autorizzazione da intersecare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
      <returns>Il risultato dell’intersezione delle due autorizzazioni è un’autorizzazione che descrive lo stato comune a entrambe. Per l'autorizzazione intersecata è valida solo una richiesta che supera entrambe le autorizzazioni originali.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se l'autorizzazione corrente è un subset di quella specificata.</summary>
      <param name="target">Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo di quella corrente.</param>
      <returns>
        <see langword="true" /> se l'autorizzazione corrente è un subset di quella specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Restituisce un valore che indica se l'autorizzazione corrente è senza restrizioni.</summary>
      <returns>
        <see langword="true" /> se le autorizzazioni audio, immagine e video sono tutte senza restrizioni; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Crea una codifica XML dell'autorizzazione e del relativo stato corrente.</summary>
      <returns>Codifica XML dell'autorizzazione, che include le eventuali informazioni sullo stato.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Crea un'autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</summary>
      <param name="target">Autorizzazione da combinare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
      <returns>Nuova autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Ottiene il valore corrente del livello di autorizzazione video.</summary>
      <returns>Livello di autorizzazione dei supporti.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Consente di applicare azioni di sicurezza per <see cref="T:System.Security.Permissions.MediaPermission" /> al codice usando la sicurezza dichiarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Ottiene o imposta il livello di autorizzazione audio per <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Stato di <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Crea e restituisce un nuovo oggetto <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>Oggetto <see cref="T:System.Security.Permissions.MediaPermission" /> che corrisponde a questo attributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Ottiene o imposta il livello di autorizzazione immagine per <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Stato di <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Ottiene o imposta il livello di autorizzazione video per <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Stato di <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Specifica il livello di autorizzazione per l'audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Autorizzazione che consente la riproduzione audio senza restrizioni.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Autorizzazione che nega qualsiasi riproduzione audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Autorizzazione che consente una riproduzione audio sicura e limitata, negando l'accesso tramite flusso al file di immagine.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Autorizzazione che consente soltanto la riproduzione audio di file situati nel sito di origine dell'applicazione.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Specifica il livello di autorizzazione per le immagini.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Autorizzazione che consente la visualizzazione di immagini senza restrizioni.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Autorizzazione che nega la visualizzazione di tutte le immagini.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Autorizzazione che consente una visualizzazione sicura e limitata delle immagini, negando l'accesso tramite flusso al file di immagine.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Autorizzazione che consente soltanto la visualizzazione di immagini situate nel sito di origine dell'applicazione.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Specifica il livello di autorizzazione per i video.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Autorizzazione che consente la riproduzione video senza restrizioni.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Autorizzazione che nega qualsiasi riproduzione video.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Autorizzazione che consente una riproduzione video sicura e limitata, negando l'accesso tramite flusso al file di immagine.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Autorizzazione che consente soltanto la riproduzione video di file situati nel sito di origine dell'applicazione.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>L'oggetto <see cref="T:System.Security.Permissions.WebBrowserPermission" /> controlla la possibilità di creare il controllo WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.WebBrowserPermission" /> specificando uno stato di autorizzazione.</summary>
      <param name="state">Valore enumerato di <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.WebBrowserPermission" /> specificando il livello di autorizzazione del Web browser.</summary>
      <param name="webBrowserPermissionLevel">Valore enumerato di <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Crea e restituisce una copia identica dell'autorizzazione corrente.</summary>
      <returns>Copia dell'autorizzazione corrente.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Ricostruisce un'autorizzazione con uno stato specificato da una codifica XML.</summary>
      <param name="securityElement">Codifica XML da usare per ricostruire l'autorizzazione.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'autorizzazione corrente e quella specificata.</summary>
      <param name="target">Autorizzazione da intersecare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
      <returns>Il risultato dell’intersezione delle due autorizzazioni è un’autorizzazione che descrive lo stato comune a entrambe. Per l'autorizzazione intersecata è valida solo una richiesta che supera entrambe le autorizzazioni originali.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se l'autorizzazione corrente è un subset di quella specificata.</summary>
      <param name="target">Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo di quella corrente.</param>
      <returns>
        <see langword="true" /> se l'autorizzazione corrente è un subset di quella specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Restituisce un valore che indica se l'autorizzazione corrente è senza restrizioni.</summary>
      <returns>
        <see langword="true" /> se la proprietà <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> è impostata su <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Ottiene o imposta il valore corrente del livello di autorizzazione del Web browser.</summary>
      <returns>Valore corrente del livello di autorizzazione del Web browser.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Crea una codifica XML dell'autorizzazione e del relativo stato corrente.</summary>
      <returns>Codifica XML dell'autorizzazione, che include le eventuali informazioni sullo stato.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Crea un'autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</summary>
      <param name="target">Autorizzazione da combinare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
      <returns>Nuova autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Consente di applicare azioni di sicurezza per <see cref="T:System.Security.Permissions.WebBrowserPermission" /> al codice usando la sicurezza dichiarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> con l'oggetto <see cref="T:System.Security.Permissions.SecurityAction" /> specificato.</summary>
      <param name="action">Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Crea e restituisce una nuova istanza della classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>Oggetto <see cref="T:System.Security.Permissions.WebBrowserPermission" /> corrispondente alla dichiarazione di sicurezza.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Ottiene o imposta il livello di autorizzazione del Web browser corrente per l'oggetto <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>Stato del livello di autorizzazione del Web browser corrente.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Specifica il livello di autorizzazione per un browser Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Browser Web impossibilitato a esplorare i frame in HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Browser Web in grado di esplorare in modo sicuro i frame in HTML ma con diverse restrizioni.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Browser Web in grado di esplorare senza restrizioni.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">Specifica il metodo di autenticazione Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">Autenticazione implicita per qualsiasi utente richiedente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Autenticazione Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">Autenticazione WINDOWS in un ambiente di dominio aziendale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Autenticazione di Windows o Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">Rappresenta un diritto concesso a un utente per accedere alle informazioni in un documento protetto da Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> che concede un oggetto <see cref="T:System.Security.RightsManagement.ContentUser" /> specificato a un oggetto <see cref="T:System.Security.RightsManagement.ContentRight" /> specificato.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Utente a cui viene concessa l'autorizzazione di accesso.</param>
      <param name="right" vsli:raw="The access right that is granted.">Autorizzazione di accesso concessa.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> che concede un oggetto <see cref="T:System.Security.RightsManagement.ContentUser" /> specificato a un oggetto <see cref="T:System.Security.RightsManagement.ContentRight" /> specificato per un intervallo di tempo <see cref="T:System.DateTime" /> specificato.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Utente a cui viene concessa l'autorizzazione di accesso.</param>
      <param name="right" vsli:raw="The access right that is granted.">Autorizzazione di accesso concessa.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">Data e ora di inizio validità dell'autorizzazione.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">Data e ora di fine validità dell'autorizzazione.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">Ottiene l'oggetto <see cref="T:System.Security.RightsManagement.ContentRight" /> concesso.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Autorizzazione di accesso concessa all'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, come specificato al costruttore <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">Ottiene l'utente a cui viene concesso l'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> di accesso.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Utente a cui viene concesso l'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> di accesso, come specificato al costruttore <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">Ottiene data e ora di inizio validità dell'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concesso.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">Data e ora di inizio dell'oggetto concesso <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> o. <see cref="T:System.DateTime" /><see cref="F:System.DateTime.MinValue" /> Se non è presente alcuna limitazione iniziale.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">Ottiene data e ora di fine validità dell'oggetto <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concesso.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">Data e ora di scadenza dell'oggetto concesso <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> o. <see cref="T:System.DateTime" /><see cref="F:System.DateTime.MaxValue" /> Se non esiste alcuna limitazione finale.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">Specifica i diritti che è possibile concedere agli utenti per accedere al contenuto di un documento protetto da Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">L'utente può modificare il documento che contiene il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">L'utente può modificare e crittografare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">L'utente può esportare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">L'utente può estrarre (copiare e incollare) il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">L'utente può inoltrare il contenuto protetto a un altro utente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">L'utente può controllare l'accesso programmato al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">L'utente è proprietario del contenuto.  Il proprietario può modificare e crittografare i contenuti protetti e decrittografare la classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">L'utente può stampare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">L'utente può rispondere al mittente del contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">L'utente può rispondere a tutti i destinatari del contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">L'utente può firmare digitalmente il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">L'utente può visualizzare il contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">L'utente può decrittografare e visualizzare i diritti specificati nella classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmata.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">Rappresenta un utente o gruppo di utenti a cui concedere l'accesso al contenuto protetto da Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name" vsli:raw="The user or group name.">Nome utente o del gruppo.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">Metodo di autenticazione.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Ottiene un'istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Tutti".</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Tutti".</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Ottiene l'oggetto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specificato al costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Oggetto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specificato per il costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> .</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">Restituisce un valore che indica se questo oggetto <see cref="T:System.Security.RightsManagement.ContentUser" /> è equivalente a un'altra istanza specificata.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">Istanza utente da confrontare per l'uguaglianza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> sono identici per questo utente e l'utente specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Restituisce un codice hash calcolato in base ai parametri <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> dell'utente.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Codice hash calcolato in base ai parametri <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> dell'utente.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">Restituisce un valore che indica se l'utente è attualmente autenticato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">
        <see langword="true" /> se l'utente è attualmente autenticato; in caso contrario, <see langword="false" />.  L'impostazione predefinita è <see langword="false" /> fino all'avvenuta autenticazione.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Ottiene il nome utente o del gruppo specificato per il costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Nome utente o del gruppo specificato per il costruttore <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Ottiene un'istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Proprietario".</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Istanza dell'utente tipo <see cref="T:System.Security.RightsManagement.ContentUser" /> "Proprietario".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">Fornisce servizi di gestione dei diritti digitali per crittografare e decrittografare il contenuto protetto.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">Ottiene la dimensione del blocco crittografato, in byte.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">Dimensione del blocco crittografato, in byte.  La dimensione predefinita del blocco per Advanced Encryption Standard (AES) è 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">Ottiene un insieme che elenca i diritti sottoposti a verifica e concessi all'utente.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">Insieme che enumera i diritti sottoposti a verifica e concessi all'utente.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">Ottiene un valore che indica se l'utente possiede i diritti per decrittografare.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se l' <see cref="T:System.Security.RightsManagement.UseLicense" /> oggetto concede i diritti utente per la decrittografia <see langword="false" />; in caso contrario,.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">Ottiene un valore che indica se l'utente possiede i diritti per crittografare.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se concede i diritti utente per la crittografia; in caso <see langword="false" />contrario,. <see cref="T:System.Security.RightsManagement.UseLicense" /></returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">Ottiene un valore che indica se <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> e <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> possono accettare buffer con una lunghezza dei blocchi diversa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se il buffer passato a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> può avere una lunghezza diversa dal buffer passato a <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; in caso contrario <see langword="false" /> , se i buffer passati a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> e <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> devono avere esattamente la stessa lunghezza.  Per AES il valore predefinito <see langword="true" />è.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">Consente di decrittografare un testo crittografato.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">Testo crittografato da decrittografare.</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">Testo decrittografato di <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" /> è null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">Diritto di decrittografia non concesso.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Security.RightsManagement.CryptoProvider" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">Crittografa testo non crittografato creando testo crittografato.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">Contenuto in testo non crittografato da crittografare.</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">Testo crittografato dell'oggetto <paramref name="clearText" /> specifico.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" /> è null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">La crittografia non è consentita.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">Rilascia risorse ed esegue operazioni di pulizia interna prima che l'istanza venga recuperata tramite Garbage Collection.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">Rappresenta una coppia non modificabile (di sola lettura) di stringhe "Nome" e "Descrizione".</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">Valore della proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> delle impostazioni locali.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">Valore della proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> delle impostazioni locali.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il parametro <paramref name="name" /> o <paramref name="description" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">Ottiene la descrizione delle impostazioni locali.</summary>
      <returns vsli:raw="The locale description.">Descrizione delle impostazioni locali.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Indica se le proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> di un oggetto specificato corrispondono a quelle di questo oggetto <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">Oggetto del quale confrontare le proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> dell'oggetto specificato corrispondono a quelle di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">Ottiene un codice hash calcolato in base alle proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Codice hash calcolato in base alle proprietà <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> di <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">Ottiene il nome delle impostazioni locali.</summary>
      <returns vsli:raw="The locale name.">Nome delle impostazioni locali.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">Rappresenta una licenza di pubblicazione protetta da Rights Management.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> da un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> specifico, serializzato e firmato.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">Oggetto licenza di pubblicazione firmato e serializzato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">La licenza non è valida.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Tenta di acquisire un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti in un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti nell'oggetto <paramref name="secureEnvironment" />specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">L'autenticazione non è riuscita.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Tenta di acquisire un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti in un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti nell'oggetto <paramref name="secureEnvironment" />specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">L'autenticazione non è riuscita.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">Ottiene l'identificatore di contenuto creato dall'autore.</summary>
      <returns vsli:raw="The publisher-created content identifier.">Identificatore di contenuto creato dall'autore.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Restituisce una versione <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> decrittografata dell'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" />firmato.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">Servizio Rights Management da utilizzare per decrittografare la licenza.</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">Versione decrittografata non firmata della licenza.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">Ottiene il nome di contatto del creatore o autore del contenuto.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Nome di contatto del creatore o autore del contenuto.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">Ottiene l'URI di contatto del creatore o autore del contenuto.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">URI (Uniform Resource Identifier) del contatto per l'autore o il server di pubblicazione del contenuto.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">Restituisce la stringa XrML serializzata usata per creare questa licenza.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">Stringa Extensible Rights Markup Language (XrML) serializzata usata per creare questa licenza.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Ottiene l'URI da usare per l'acquisizione di un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">URI da utilizzare per l'acquisizione di un <see cref="T:System.Security.RightsManagement.UseLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">Rappresenta una condizione di errore nel caso in cui un'operazione Rights Management non può essere completata correttamente.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> e imposta l'archivio <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con le informazioni sull'eccezione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Oggetto contenente i dati serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> specificato.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Codice di errore per l'errore.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> e un oggetto <see cref="P:System.Exception.InnerException" /> specificati.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Codice di errore per l'errore.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Istanza di eccezione che ha causato l'errore.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> e un oggetto <see cref="P:System.Exception.Message" /> specificati.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Codice di errore per l'errore.</param>
      <param name="message" vsli:raw="A message that describes the error.">Messaggio in cui viene descritto l'errore,</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, un oggetto <see cref="P:System.Exception.Message" /> e un oggetto <see cref="P:System.Exception.InnerException" /> specificati.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Codice di errore per l'errore.</param>
      <param name="message" vsli:raw="A message that describes the error.">Messaggio in cui viene descritto l'errore,</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Istanza di eccezione che ha causato l'errore.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un messaggio specificato.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Messaggio in cui viene descritto l'errore,</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un oggetto <see cref="P:System.Exception.Message" /> e un oggetto <see cref="P:System.Exception.InnerException" /> specificati.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Messaggio in cui viene descritto l'errore,</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">Istanza di eccezione che ha causato questa eccezione.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">Ottiene <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> per l'errore.</summary>
      <returns vsli:raw="The failure code for the error.">Codice di errore per l'errore.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">Imposta l'archivio <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del parametro e le informazioni sull'eccezione.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Oggetto contenente i dati serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">Specifica le condizioni di errore che possono verificarsi quando si esegue un'operazione Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">L'operazione asincrona è stata annullata o si è verificato un errore irreversibile.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">La licenza non è stata attivata. Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">L'utente corrente non è stato trovato in Active Directory (AD) per la certificazione nell'autenticazione di Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">L'operazione richiesta è già in corso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">È stato restituito un possibile errore di autenticazione (errore HTTP 401) da una richiesta Internet. In alternativa, l'utente corrente non dispone di credenziali di dominio valide in un tentativo di attivazione invisibile all'utente. In alternativa, il server di certificazione nell'attivazione invisibile all'utente non si trova nell'intranet locale o nell'area siti attendibili.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">È stata passata una costante non valida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">La condizione di accesso non ha corrispondenza con l'entità di abilitazione passata nell'associazione.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">L'utente corrente non soddisfa le condizioni definite nel contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">La risorsa specificata non è inclusa in alcun nodo WORK della licenza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">L'entità di abilitazione non corrisponde all'entità rilasciata del contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Il periodo di tempo definito per il contenuto protetto è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">Il computer corrente non è definito all'interno dell'identità di gruppo protetta da Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">Il gruppo di diritti specificato non è incluso nel contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">La licenza richiede l'acquisizione di un nuovo elenco di revoche.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">Il contratto di licenza con l'utente finale non contiene alcun nodo WORK.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Il periodo di tempo definito per il contenuto protetto è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">La catena di certificati di Rights Management è interrotta.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">È stato rilevato il rollback dell'orologio. Non è possibile accedere al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">Un'operazione di crittografia richiesta non è supportata. Un esempio è l'operazione per passare un oggetto di crittografia RMS per scopi di decrittografia.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">Non è possibile aprire o pubblicare contenuto con autorizzazioni limitate perché è stato rilevato un debugger.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">Non è possibile verificare l'indirizzo di posta elettronica dell'utente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">L'entità di sicurezza specificata non può essere abilitata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">La crittografia non è consentita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Non è possibile caricare l'oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Non è possibile caricare l'oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">Il periodo di autorizzazione definito nel modello di licenza di pubblicazione è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">L'opzione specificata è già stata impostata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">Non è stato specificato un nome utente per la sessione client.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">Il formato dell'ID hardware usato in un tentativo di attivazione di computer non è corretto. Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">L'ID hardware usato in un tentativo di attivazione di computer non è valido. Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">L'ID contenuto della licenza non corrisponde all'ID contenuto della sessione di archiviazione della licenza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">Un tipo di oggetto passato è incompatibile con questa operazione.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">Durante la creazione di una licenza associata è stata specificata una licenza di pubblicazione, non un contratto di licenza con l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">Alcune informazioni non sono presenti.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">Un'operazione di installazione non è riuscita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">Il tipo di algoritmo specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">La verifica dell'indirizzo di posta elettronica del server RMS non è riuscita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">Il tipo di codifica specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">L'handle dell'ambiente o quello dell'entità di abilitazione non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">Il modello di Rights Management Services contiene uno o più errori.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">La lunghezza della chiave specificata in una coppia chiave/valore non è valida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">La struttura della licenza in uno dei certificati non è valida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">Non è possibile convalidare un certificato digitale firmato mediante Rights Management. Il certificato firmato può essere stato manomesso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">Il valore numerico specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">Il percorso del Registro di sistema specificato non è valido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">Le informazioni di tempo specificate non sono valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">La versione di Rights Management non è corretta.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">Il tipo di chiave specificato in una coppia chiave/valore non è supportato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">Un'operazione su libreria non è riuscita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">Il plug-in di libreria specificato non è supportato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">Non è stato possibile acquisire un contratto di licenza con l'utente finale dal server Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">Le credenziali dell'utente corrente non sono valide per l'acquisizione di una licenza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">Un'operazione viola i criteri del manifesto di Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">Non è stato possibile impostare i metadati specificati.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">L'utente non è attivato oppure non è stato inviato alcun certificato per account con diritti e nell'archivio licenze non è stato trovato alcun certificato corrispondente alla licenza associata a questa sessione.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">Il computer deve essere attivato prima di poter attivare l'utente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">Rights Management non è in grado di collegarsi all'URI specificato per il server licenze.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">Il contenuto protetto è danneggiato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">Non è disponibile una licenza necessaria.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">In corrispondenza dell'indice specificato non esistono né licenze né certificati.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">Il contenuto protetto da Rights Management è danneggiato.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">L'elemento di cui è stata richiesta l'eliminazione non esiste.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">Nel server licenze è stata raggiunta la quota massima di contratti di licenza per l'utente finale.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">Il documento non contiene una licenza come proprietario.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">Non esiste alcuna istanza dell'attributo richiesto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">La licenza specificata non è stata trovata.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">Il server Rights Management non consente la certificazione temporanea dell'utente corrente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">Le informazioni di revoca del certificato o della licenza non sono state impostate.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">L'utente corrente non dispone dei diritti di accesso al contenuto protetto.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">Il diritto richiesto non è stato specificato al momento della pubblicazione del contenuto con Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Rights Management Services non è configurato correttamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">L'operazione è stata eseguita.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">Il numero di certificati ha superato il valore massimo consentito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">Sono state create troppe istanze di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">Si è verificato un errore non specificato.  Viene generato anche quando un'applicazione viene eseguita in modalità debug.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">Se viene effettuata una richiesta per l'attivazione di computer o per un certificato per account con diritti, la ricezione della funzione <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> indica che l'applicazione deve passare <see langword="null" /> nel parametro ActServInfo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Il periodo di tempo definito per il contenuto protetto è scaduto. L'accesso non è più consentito.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">Rappresenta una sessione client sicura per l'attivazione utente, l'associazione delle licenze e altre operazioni Rights Management.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Ottiene l'oggetto <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> specificato al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">Manifesto dell'applicazione specificato nel metodo <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">Crea una sessione client sicura dati un manifesto di diritti dell'applicazione, un oggetto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> e un oggetto <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Manifesto di diritti dell'applicazione.</param>
      <param name="authentication" vsli:raw="The method of authentication.">Metodo di autenticazione.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">Tipo di certificato dell'account con diritti utente.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Sessione client sicura per l'attivazione, l'associazione delle licenze e altre operazioni Rights Management.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">Crea una sessione client protetta per un utente specificato con un manifesto di diritti specificato.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Manifesto di diritti dell'applicazione.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Utente o gruppo di utenti a cui concedere l'accesso a contenuto protetto da Rights Management.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Sessione client sicura per l'attivazione, l'associazione delle licenze e altre operazioni Rights Management.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">Restituisce un elenco degli utenti attivati.</summary>
      <returns vsli:raw="A list of the currently activated users.">Elenco degli utenti attualmente attivati.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">Indica se un determinato utente è stato attivato per l'accesso a contenuto protetto da Rights Management.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Utente o gruppo di utenti a cui concedere l'accesso a contenuto protetto da Rights Management.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento <paramref name="user" /> specifico è stato attivato per l'accesso a contenuto protetto da Rights Management; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">Rimuove l'attivazione delle licenze per un utente specificato.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">Utente per il quale rimuovere l'attivazione delle licenze.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="user" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">Il valore del parametro <paramref name="user" /> specificato non viene autenticato mediante l'autenticazione di Windows o l'autenticazione Passport.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Ottiene l'utente o il gruppo di utenti specificato al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Utente o gruppo di utenti specificato nel metodo <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> al momento della creazione di <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">Rappresenta un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> protetto da Rights Management non firmato o un modello <see cref="T:System.Security.RightsManagement.PublishLicense" /> non firmato.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> da un modello di licenza di pubblicazione XrML specificato.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">Modello di licenza di pubblicazione Extensible Rights Markup Language (XrML) da usare per creare questa licenza.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">Ottiene o imposta l'identificatore di contenuto protetto creato dall'editore.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">Identificatore di contenuto protetto creato dall'editore.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">Ottiene un insieme di diritti utente assegnati.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">Insieme di diritti utente assegnati forniti dalla licenza.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">Ottiene un insieme di coppie di nomi e descrizioni.</summary>
      <returns vsli:raw="A collection of name and description pairs.">Insieme di coppie di nomi e descrizioni.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">Ottiene o imposta il proprietario del contenuto.</summary>
      <returns vsli:raw="The user who owns the published content.">Utente proprietario del contenuto pubblicato.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">Ottiene o imposta il nome di contatto del creatore o autore del contenuto.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Nome di contatto del creatore o autore del contenuto.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">Ottiene o imposta l'URI di contatto del creatore o autore del contenuto.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">URI (Uniform Resource Identifier) del contatto per l'autore o il server di pubblicazione del contenuto.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Crea un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmato e restituisce un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per l'autore del documento.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> restituito per l'autore del documento.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmato creato tramite la firma di <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Restituisce un modello serializzato creato dall'oggetto XrML di <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Modello serializzato creato dall'oggetto XrML di <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">Rappresenta una licenza che consente l'accesso a contenuto protetto.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">Contratto di licenza con l'utente finale nel modulo Extensible Rights Markup Language (XrML) serializzato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> non è valido.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Ottiene il dizionario dei dati dell'applicazione contenente le coppie chiave/valore passate dall'applicazione di pubblicazione all'applicazione di utilizzo.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Dizionario dei dati dell'applicazione contenente le coppie chiave/valore passate dall'applicazione di pubblicazione all'applicazione di utilizzo.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Associa la licenza a un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">Ambiente a cui associare la licenza.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Istanza di <see cref="T:System.Security.RightsManagement.CryptoProvider" /> se l'associazione della licenza riesce. In caso contrario, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">Ottiene l'identificatore di contenuto creato dal server di pubblicazione.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">Identificatore di contenuto creato dal server di pubblicazione.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">Indica se questa licenza è equivalente a un'altra licenza specificata.</summary>
      <param name="x" vsli:raw="The license to compare.">Licenza da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due licenze sono equivalenti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">Restituisce il codice hash associato a questa licenza.</summary>
      <returns vsli:raw="A hash code for this license.">Codice hash per la licenza.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">Ottiene il proprietario della licenza.</summary>
      <returns vsli:raw="The owner of the license.">Proprietario della licenza.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">Restituisce la stringa XrML serializzata utilizzata per creare questa licenza.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">Stringa Extensible Rights Markup Language (XrML) serializzata originariamente passata al costruttore <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">Specifica il tipo di certificato per account con diritti (RAC, Rights Account Certificate) utente da richiedere per l'attivazione di Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">Certificato per account con diritti permanente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">Certificato per account con diritti temporaneo.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">Fornisce una classe base per gli attributi di .NET Framework che indicano l'ambito d'uso delle proprietà associate.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">Specifica che una proprietà associata è esplorabile solo per gli elementi che derivano da un tipo specificato.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> utilizzando le classi fornite <paramref name="targetType" />.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">Tipo desiderato che definisce l'ambito dell'uso della proprietà associata a cui si applica attributo .NET Framework.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Determina se il <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attributo .NET Framework corrente è uguale ad un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">L'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> da confrontare con l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> specificato è uguale all'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Restituisce il codice hash per questo attributo .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Valore intero senza segno a 32 bit.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">Ottiene il tipo di base che definisce l'ambito dell'uso della proprietà associata in cui si applica questo attributo .NET Framework.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Oggetto <see cref="T:System.Type" /> richiesto.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Ottiene un identificatore di tipo univoco per <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attributo .NET Framework.</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Un oggetto che rappresenta l'identificatore univoco di <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">Specifica che una proprietà associata è esplorabile solo per un elemento che ha anche un altro attributo di .NET Framework specifico applicato alla definizione della classe corrispondente.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">
        <see cref="T:System.Type" /> dell'attributo .NET Framework che deve essere applicato anche in una classe perché la proprietà associata sia esplorabile nella classe in cui <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> viene applicato.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">Ottiene il tipo di attributo .NET Framework che deve anche essere applicato in una classe.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">attributo .NET Framework Tipo.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Determina se il <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> attributo .NET Framework corrente è uguale ad un oggetto specificato.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">L'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> da confrontare con l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> specificato è uguale all'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">Restituisce il codice hash per questo attributo .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Valore intero senza segno a 32 bit.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">Contiene proprietà che specificano come un'applicazione deve comportarsi in relazione alle nuove funzionalità WPF presenti nell'assembly WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Ottiene o imposta un valore che indica le informazioni su <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> vengono salvate in <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le informazioni su <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> vengono salvate in <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">Definisce le reazioni del dispatcher agli errori riscontrati quando richiede l'elaborazione.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">Valore che definisce come il dispatcher reagisce agli errori.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">Specifica un insieme di valori che descrive come il dispatcher risponde agli errori che si verificano durante l'elaborazione delle richieste.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">Continuare dopo l'errore.
Rappresenta il valore predefinito. Definisce il comportamento del dispatcher di Windows Presentation Foundation precedente a .NET Framework 4.7.1. Quando questa opzione è selezionata, il dispatcher potrebbe non rispondere.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">Reimpostare lo stato del dispatcher per una nuova richiesta, quando sarà necessaria.
Anche se questa opzione può risolvere il problema della mancata risposta, non consente di rispettare i tempi di elaborazione consueti, aspetto che può rivelarsi cruciale. Se si seleziona questa opzione potrebbero verificarsi comportamenti imprevisti.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">Generazione di un'eccezione.
Questa opzione porta immediatamente il problema all'attenzione dello sviluppatore dell'applicazione.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">Ottiene o imposta un valore che indica se il metodo <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> inserisce i delegati nella coda del dispatcher o se il delegato viene richiamato direttamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> inserisce i delegati nella coda del dispatcher o se il delegato viene richiamato direttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">Ottiene o imposta un valore che indica se un'unico oggetto <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> viene utilizzato per più operazioni del dispatcher.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">true se viene utilizzato un oggetto <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> singolo per più operazioni del dispatcher; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">Fornisce un modello per un metodo chiamato ogni volta che un valore della proprietà di dipendenza viene rivalutato o se è specificamente richiesta la coercizione.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">Oggetto nel quale esiste la proprietà. Quando viene richiamato il callback, il sistema di proprietà passa questo valore.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">Nuovo valore della proprietà prima dei tentativi di coercizione.</param>
      <returns vsli:raw="The coerced value (with appropriate type).">Valore assegnato tramite coercizione (del tipo appropriato).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Int32Rect" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Stringa da convertire.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Int32Rect" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Int32Rect" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Int32Rect" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Point" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Stringa da convertire.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Point" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Point" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Point" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Rect" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Stringa da convertire.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Rect" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Rect" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Rect" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Size" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Stringa da convertire.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Size" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Size" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Size" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Vector" /> specificato può essere convertito in un <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Stringa da convertire.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Vector" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Vector" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Rappresentazione di stringa dell'elemento <see cref="T:System.Windows.Vector" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">Classe base comune e contratto per gli oggetti <see cref="T:System.Windows.Data.DataSourceProvider" />, ovvero factory che eseguono alcune query per produrre un singolo oggetto o un elenco di oggetti che è possibile usare come oggetti di associazione di origine.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Data.DataSourceProvider" />. Rappresenta un costruttore protetto.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">Indica che sta per essere avviata l’inizializzazione dell'oggetto. L'oggetto <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> implicito si verifica solo se viene chiamato il metodo <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> corrispondente.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">Se ignorato in una classe derivata, la classe di base chiama questo metodo dopo la chiamata di <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> o <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />. La classe di base rimanda la chiamata se l'aggiornamento viene rinviato o il caricamento iniziale viene disabilitato.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">Ottiene l'oggetto dati sottostante.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">Valore di tipo <see cref="T:System.Object" /> che corrisponde all'oggetto dati sottostante.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">Si verifica quando la proprietà <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> dispone di un nuovo valore.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">Immette un ciclo di rinvio che è possibile utilizzare per modificare le proprietà del provider e rinviare l'aggiornamento automatico.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Oggetto <see cref="T:System.IDisposable" /> che è possibile usare per l'eliminazione dell'oggetto chiamante.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">Ottiene o imposta l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> corrente sul thread Interfaccia utente da utilizzare.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">Oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> corrente al thread Interfaccia utente da utilizzare. Per impostazione predefinita, questo è l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato al thread nel quale è stata creata questa istanza.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">Indica che l'inizializzazione di questo elemento è stata completata e provoca <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> se nessun altro oggetto <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> è in sospeso.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">Ottiene l'errore dell'ultima operazione di query.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">Valore di tipo <see cref="T:System.Exception" /> che corrisponde all'errore dell'ultima operazione della query, o <see langword="null" /> in caso di nessun errore.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Avvia la query iniziale nel modello di dati sottostante. Il risultato viene restituito nella proprietà <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">Ottiene o imposta un valore che indica se impedire o ritardare il caricamento automatico dei dati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" /> per impedire o rimandare il caricamento automatico di dati; in caso contrario <see langword="true" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">Ottiene un valore che indica se è in uso l'oggetto <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> in sospeso.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è in uso l'oggetto <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> in sospeso; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">Genera l'evento <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> con gli argomenti specificati.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argomenti dell'evento da generare.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Le classi derivate chiamano questo metodo per indicare che una query è completata.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Dati che rappresentano il risultato della query.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Le classi derivate chiamano questo metodo per indicare che una query è completata.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Dati che rappresentano il risultato della query.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">Errore che si verifica durante l'esecuzione della query. Questo valore è <see langword="null" /> in assenza di errori.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">Delegato facoltativo utilizzato per eseguire l’operazione di completamento sul thread Interfaccia utente, ad esempio per impostare proprietà aggiuntive.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">Argomenti facoltativi da inviare come un parametro con il delegato <paramref name="completionWork" />.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Avvia un'operazione di aggiornamento nel modello dati sottostante. Il risultato viene restituito nella proprietà <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Generato quando il valore di una proprietà cambia.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">Rappresenta un oggetto che fa parte del sistema di proprietà di dipendenza.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">Cancella il valore locale di una proprietà. La proprietà da cancellare è specificata da un identificatore <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">Proprietà di dipendenza da cancellare, identificata da un riferimento a un oggetto <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Si è tentato di chiamare <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">Cancella il valore locale di una proprietà di sola lettura. La proprietà da cancellare è specificata da un oggetto <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">Chiave per la proprietà di dipendenza da cancellare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Si è tentato di chiamare <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Assegna forzatamente il valore della proprietà di dipendenza specificata. Questa operazione viene eseguita richiamando qualsiasi funzione <see cref="T:System.Windows.CoerceValueCallback" /> specificata nei metadati della proprietà di dipendenza esistente nell'oggetto <see cref="T:System.Windows.DependencyObject" /> chiamante.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">Identificatore della proprietà di dipendenza da assegnare forzatamente.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">Il parametro <paramref name="dp" /> specificato o il relativo valore non è valido o non esiste.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Ottiene la classe <see cref="T:System.Windows.DependencyObjectType" /> che include il tipo CLR di questa istanza.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Classe <see cref="T:System.Windows.DependencyObjectType" /> che include il tipo CLR di questa istanza.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.DependencyObject" /> specificato equivale all'oggetto <see cref="T:System.Windows.DependencyObject" /> corrente.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">Oggetto <see cref="T:System.Windows.DependencyObject" /> da confrontare con l'istanza corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due istanze sono uguali. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Ottiene un codice hash per l'oggetto <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Codice hash di valori interi a 32 bit con segno.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Crea un enumeratore specializzato per determinare le proprietà di dipendenza che presentano valori impostati localmente nell'oggetto <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A specialized local value enumerator.">Enumeratore specializzato dei valori locali.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Restituisce il valore effettivo corrente di una proprietà di dipendenza in questa istanza di <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Identificatore <see cref="T:System.Windows.DependencyProperty" /> della proprietà di cui recuperare il valore.</param>
      <returns vsli:raw="Returns the current effective value.">Restituisce il valore effettivo corrente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">L'oggetto <paramref name="dp" /> specificato o il relativo valore non è valido oppure l'oggetto <paramref name="dp" /> specificato non esiste.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">Valuta di nuovo il valore effettivo della proprietà di dipendenza specificata.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">L’identificatore <see cref="T:System.Windows.DependencyProperty" /> della proprietà di dipendenza da invalidare.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">Ottiene un valore che indica se l'istanza è attualmente sealed (di sola lettura).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza è sealed. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">Richiamato ogni volta che viene aggiornato il valore effettivo di qualsiasi proprietà di dipendenza in <see cref="T:System.Windows.DependencyObject" />. La proprietà di dipendenza specifica modificata viene indicata nei dati dell'evento.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">Dati dell'evento che conterranno l'identificatore della proprietà di dipendenza di interesse, i metadati della proprietà per il tipo e i valori precedenti e nuovi.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">Restituisce il valore locale di una proprietà di dipendenza, se esistente.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Identificatore <see cref="T:System.Windows.DependencyProperty" /> della proprietà di cui recuperare il valore.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">Restituisce il valore locale oppure il valore sentinel <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> se non è impostato alcun valore locale.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">Imposta il valore di una proprietà di dipendenza senza modificare l'origine del valore.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Identificatore della proprietà di dipendenza da impostare.</param>
      <param name="value" vsli:raw="The new local value.">Nuovo valore locale.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Si è tentato di modificare una proprietà di dipendenza di sola lettura o una proprietà in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> non è il tipo corretto registrato per la proprietà <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">Imposta il valore locale di una proprietà di dipendenza, specificato dal relativo identificatore della proprietà di dipendenza.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Identificatore della proprietà di dipendenza da impostare.</param>
      <param name="value" vsli:raw="The new local value.">Nuovo valore locale.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Si è tentato di modificare una proprietà di dipendenza di sola lettura o una proprietà in un oggetto <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> non è il tipo corretto registrato per la proprietà <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">Imposta il valore locale di una proprietà di dipendenza di sola lettura, specificato dall'identificatore <see cref="T:System.Windows.DependencyPropertyKey" /> della proprietà di dipendenza.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">Identificatore <see cref="T:System.Windows.DependencyPropertyKey" /> della proprietà da impostare.</param>
      <param name="value" vsli:raw="The new local value.">Nuovo valore locale.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore della proprietà di dipendenza specificata.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">Identificatore della proprietà di dipendenza da serializzare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se per la proprietà di dipendenza fornita deve essere eseguita la serializzazione del valore. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">Implementa una cache del tipo sottostante per tutti i tipi derivati <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> della classe di base immediata dell'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente.</summary>
      <returns vsli:raw="The type of the base class.">Tipo della classe di base.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">Restituisce un oggetto <see cref="T:System.Windows.DependencyObjectType" /> che rappresenta un tipo (CLR) di sistema specifico.</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">Tipo (CLR) di sistema da convertire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">Oggetto <see cref="T:System.Windows.DependencyObjectType" /> che rappresenta il tipo (CLR) di sistema.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Restituisce il codice hash per questo <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">Ottiene un identificatore univoco in base zero per le operazioni di ricerca nella matrice di tempo costante.</summary>
      <returns vsli:raw="An internal identifier.">Identificatore interno.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Determina se l'oggetto specificato è un'istanza dell'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Oggetto da confrontare con l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la classe rappresentata dall'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente è nella gerarchia di ereditarietà di <see cref="T:System.Windows.DependencyObject" /> passata come <paramref name="d" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente deriva dall'oggetto <see cref="T:System.Windows.DependencyObjectType" /> specificato.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">Oggetto <see cref="T:System.Windows.DependencyObjectType" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">
        <see langword="true" /> se il parametro <paramref name="dependencyObjectType" /> e l'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente rappresentano tipi di classi e la classe rappresentata dall'oggetto <see cref="T:System.Windows.DependencyObjectType" /> corrente deriva da quella rappresentata da <paramref name="dependencyObjectType" />. In caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="dependencyObjectType" /> e il <see cref="T:System.Windows.DependencyObjectType" /> corrente rappresentano la stessa classe.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">Ottiene il nome del tipo di sistema Common Language Runtime (CLR) rappresentato.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">Nome del tipo di sistema CLR rappresentato.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Ottiene il tipo di sistema Common Language Runtime (CLR) rappresentato dall'oggetto <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Tipo di sistema CLR rappresentato dall'oggetto <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">Rappresenta una proprietà che può essere impostata tramite metodi, ad esempio stile, data binding, animazione ed ereditarietà.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">Aggiunge un altro tipo come proprietario di una proprietà di dipendenza che è già stata registrata.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">Tipo da aggiungere come proprietario della proprietà di dipendenza.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Riferimento all'identificatore <see cref="T:System.Windows.DependencyProperty" /> originale che identifica la proprietà di dipendenza. Questo identificatore deve essere esposto dalla classe di aggiunta come campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">Aggiunge un altro tipo come proprietario di una proprietà di dipendenza già registrata, fornendo i metadati della proprietà di dipendenza nello stato attuale per il tipo di proprietario specificato.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">Tipo da aggiungere come proprietario della proprietà di dipendenza.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">Metadati che qualificano la proprietà di dipendenza nello stato attuale per il tipo specificato.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Riferimento all'identificatore <see cref="T:System.Windows.DependencyProperty" /> originale che identifica la proprietà di dipendenza. Questo identificatore deve essere esposto dalla classe di aggiunta come campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">Ottiene i metadati predefiniti della proprietà di dipendenza.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">Metadati predefiniti della proprietà di dipendenza.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Ottiene un codice hash per l'oggetto <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Codice hash per <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">Restituisce i metadati per questa proprietà di dipendenza nello stato attuale per un tipo esistente specificato.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">Tipo specifico da cui recuperare i metadati della proprietà di dipendenza.</param>
      <returns vsli:raw="A property metadata object.">Oggetto metadati della proprietà.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">Restituisce i metadati per questa proprietà di dipendenza nello stato attuale per l'istanza dell'oggetto specificato.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">Oggetto dipendenza di cui viene verificato il tipo, per determinare da quale versione specifica del tipo della proprietà di dipendenza devono provenire i metadati.</param>
      <returns vsli:raw="A property metadata object.">Oggetto metadati della proprietà.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">Restituisce i metadati per questa proprietà di dipendenza nello stato attuale per un tipo specificato.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">n oggetto specifico che registra il tipo di oggetto dipendenza dal quale sono desiderati i metadati della proprietà di dipendenza.</param>
      <returns vsli:raw="A property metadata object.">Oggetto metadati della proprietà.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">Ottiene un valore generato internamente che identifica in modo univoco la proprietà di dipendenza.</summary>
      <returns vsli:raw="A unique numeric identifier.">Identificatore numerico univoco.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">Determina se un valore specificato è accettabile per questo tipo di proprietà di dipendenza, come controllato per il tipo di proprietà fornito nella registrazione originale della proprietà di dipendenza.</summary>
      <param name="value" vsli:raw="The value to check.">Valore da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore specificato è il tipo di proprietà registrato o un tipo derivato accettabile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">Determina se il valore fornito è accettato per il tipo di proprietà tramite il controllo del tipo di base e anche, potenzialmente, se è all'interno dell'intervallo consentito dei valori per quel tipo.</summary>
      <param name="value" vsli:raw="The value to check.">Valore da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore è accettabile ed è del tipo corretto o di un tipo derivato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">Ottiene il nome della proprietà di dipendenza.</summary>
      <returns vsli:raw="The name of the property.">Nome della proprietà.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">Specifica i metadati alternativi per questa proprietà di dipendenza quando è presente nelle istanze di un tipo specificato, eseguendo l'override dei metadati esistenti per la proprietà di dipendenza quando è stata ereditata dai tipi di base.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Tipo in cui questa proprietà di dipendenza viene ereditata e in cui verranno applicati i metadati alternativi.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Metadati da applicare alla proprietà di dipendenza nel tipo che esegue l'override.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">Si è tentato di eseguire l'override dei metadati in una proprietà di dipendenza di sola lettura. Tale operazione non può essere eseguita usando questa firma.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">I metadati sono già stati stabiliti per la proprietà di dipendenza nello stato attuale per il tipo specificato.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">Specifica i metadati alternativi per una proprietà di dipendenza di sola lettura quando è presente nelle istanze di un tipo specificato, in sostituzione dei metadati specificati nella registrazione della proprietà di dipendenza iniziale. È necessario passare <see cref="T:System.Windows.DependencyPropertyKey" /> per la proprietà di dipendenza di sola lettura per evitare la generazione di un'eccezione.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Tipo in cui questa proprietà di dipendenza viene ereditata e in cui verranno applicati i metadati alternativi.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Metadati da applicare alla proprietà di dipendenza nel tipo che esegue l'override.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">Chiave di accesso per una proprietà di dipendenza di sola lettura.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">Ottiene il tipo dell'oggetto che ha registrato la proprietà di dipendenza nel sistema di proprietà o che si è aggiunto come proprietario della proprietà.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">Tipo dell'oggetto che ha registrato la proprietà o che si è aggiunto come proprietario della proprietà.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">Ottiene il tipo che la proprietà di dipendenza utilizza per il valore.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">
        <see cref="T:System.Type" /> del valore della proprietà.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">Ottiene un valore che indica se la proprietà di dipendenza identificata da questa istanza <see cref="T:System.Windows.DependencyProperty" /> è una proprietà di dipendenza di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà di dipendenza è di sola lettura, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">Registra una proprietà di dipendenza con il nome di proprietà, il tipo di proprietà e il tipo di proprietario specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">Nome della proprietà di dipendenza da registrare. Il nome deve essere univoco all'interno dello spazio dei nomi di registrazione del tipo di proprietario.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">Registra una proprietà di dipendenza con il nome, il tipo e i metadati della proprietà e il tipo di proprietario specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadati della proprietà per la proprietà di dipendenza.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">Registra una proprietà di dipendenza con il nome di proprietà, il tipo di proprietà, il tipo di proprietario, i metadati della proprietà e un callback di convalida del valore della proprietà specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadati della proprietà per la proprietà di dipendenza.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Riferimento a un callback che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">Registra una proprietà associata con il nome di proprietà, il tipo di proprietà e il tipo di proprietario specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">Registra una proprietà associata al nome, al tipo e ai metadati della proprietà e al tipo di proprietario specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Metadati della proprietà per la proprietà di dipendenza. Può essere incluso il valore predefinito così come altre caratteristiche.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">Registra una proprietà associata con il tipo della proprietà, il tipo del proprietario, i metadati della proprietà e un callback di convalida del valore per la proprietà specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Metadati della proprietà per la proprietà di dipendenza. Può essere incluso il valore predefinito così come altre caratteristiche.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Riferimento a un callback che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificatore della proprietà di dipendenza da usare per impostare il valore di un campo <see langword="public static readonly" /> nella classe. Tale identificatore viene quindi usato per fare riferimento in un secondo momento alla proprietà di dipendenza, per operazioni come l'impostazione del valore a livello di codice o per ottenere i metadati.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">Registra una proprietà associata di sola lettura con il tipo e i metadati della proprietà e il tipo di proprietario specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Metadati della proprietà per la proprietà di dipendenza.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza in un secondo momento.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">Registra una proprietà associata di sola lettura, con il tipo della proprietà, il tipo del proprietario, i metadati della proprietà e un callback di convalida specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Metadati della proprietà per la proprietà di dipendenza.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Riferimento a un callback creato dall'utente che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">Registra una proprietà di dipendenza di sola lettura con il tipo e i metadati della proprietà e il tipo di proprietario specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadati della proprietà per la proprietà di dipendenza.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">Registra una proprietà di dipendenza di sola lettura, con il tipo di proprietà, il tipo di proprietario, i metadati della proprietà e un callback di convalida specificati.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nome della proprietà di dipendenza da registrare.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo della proprietà.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo di proprietario che registra la proprietà di dipendenza.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadati della proprietà per la proprietà di dipendenza.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Riferimento a un callback creato dall'utente che deve eseguire qualsiasi convalida personalizzata del valore della proprietà di dipendenza oltre la normale convalida del tipo.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Chiave della proprietà di dipendenza che deve essere usata per impostare il valore di un campo statico di sola lettura nella classe, che viene quindi usata per fare riferimento alla proprietà di dipendenza in un secondo momento.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">Restituisce la rappresentazione di stringa della proprietà di dipendenza.</summary>
      <returns vsli:raw="The string representation of the dependency property.">Rappresentazione di stringa della proprietà di dipendenza.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">Specifica un valore statico utilizzato dal sistema della proprietà WPF piuttosto che <see langword="null" /> per indicare che la proprietà esiste, ma non ha il valore impostato dal sistema della proprietà.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">Ottiene il callback di convalida del valore per la proprietà di dipendenza.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">Callback di convalida del valore per questa proprietà di dipendenza, come fornito per il parametro <paramref name="validateValueCallback" /> nella registrazione della proprietà di dipendenza originale.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">Fornisce i dati per diversi eventi di modifica delle proprietà. Questi eventi segnalano in genere effettive modifiche del valore di una proprietà di dipendenza di sola lettura. Un altro utilizzo è come parte di un'implementazione <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">Identificatore per la proprietà di dipendenza modificata.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">Valore della proprietà prima della modifica segnalata dall'evento o dalla modifica di stato pertinente.</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">Valore della proprietà prima della modifica segnalata dall'evento o dalla modifica di stato pertinente.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Determina se l'oggetto specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Oggetto da confrontare con l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare con l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificato equivale all'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Ottiene un codice hash per l'oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Codice hash di numeri interi con segno a 32 bit.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">Ottiene il valore della proprietà dopo la modifica.</summary>
      <returns vsli:raw="The property value after the change.">Valore della proprietà dopo la modifica.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">Ottiene il valore della proprietà prima della modifica.</summary>
      <returns vsli:raw="The property value before the change.">Valore della proprietà prima della modifica.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">Determina se due oggetti <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificati hanno lo stesso valore.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due istanze di <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sono equivalenti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">Determina se due oggetti <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> specificati sono diversi.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Primo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Secondo oggetto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due istanze di <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sono diverse; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">Ottiene l'identificatore per la proprietà di dipendenza in cui si è verificata la modifica del valore.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">Campo dell'identificatore della proprietà di dipendenza in cui si è verificata la modifica del valore.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">Rappresenta il metodo che gestirà gli eventi generati quando in caso di modifica di <see cref="T:System.Windows.DependencyProperty" /> in una particolare implementazione di <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="The event data.">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">Fornisce l'identificatore di una proprietà di dipendenza per accesso in scrittura limitato a una proprietà di dipendenza di sola lettura.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">Ottiene l'identificatore della proprietà di dipendenza associato all'identificatore della proprietà di dipendenza di sola lettura specializzato.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">Identificatore della proprietà di dipendenza pertinente.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">Esegue l'override dei metadati di una proprietà di dipendenza di sola lettura rappresentata da questo identificatore di proprietà.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">Tipo della proprietà di dipendenza e in cui deve essere eseguito l'override dei metadati.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">Metadati forniti per il tipo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">Tentativo di override dei metadati in una proprietà di dipendenza di sola lettura, che non può essere eseguito utilizzando questa firma.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">I metadati sono già stati definiti per la proprietà, in quanto la proprietà è disponibile nel tipo specificato.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Questo tipo supporta l'infrastruttura Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">Converte istanze di <see cref="T:System.Windows.Expression" /> in e da altri tipi.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">Comunica se questo convertitore può convertire da un oggetto di origine in un oggetto <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">Comunica se questo convertitore è in grado di convertire un oggetto <see cref="T:System.Windows.Expression" /> in un tipo di destinazione specificato.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">Converte il valore fornito nel tipo <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Genera sempre un'eccezione e ritorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">Converte l'oggetto <see cref="T:System.Windows.Expression" /> fornito nel tipo specificato.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Genera sempre un'eccezione e ritorna <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">Definisce un oggetto che ha uno stato modificabile e uno stato di sola lettura (bloccato). Le classi che derivano da <see cref="T:System.Windows.Freezable" /> forniscono una notifica dettagliata delle modifiche, possono essere rese non modificabili e possono clonare se stesse.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Inizializza una nuova istanza di una classe derivata <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">Ottiene un valore che indica se l'oggetto può essere impostato come non modificabile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto corrente può essere impostato come non modificabile o è già non modificabile. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">Si verifica quando <see cref="T:System.Windows.Freezable" /> o un oggetto che contiene è modificato.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.Freezable" />, eseguendo copie complete dei valori dell'oggetto. Durante la copia delle proprietà di dipendenza di questo oggetto, questo metodo copia le espressioni (che potrebbero non essere più risolte), ma non le animazioni né i relativi valori correnti.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato è <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Rende l'istanza un clone (copia completa) dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato usando i valori di proprietà di base (non animati).</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">Oggetto da clonare.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">Crea un clone modificabile (copia completa) di <see cref="T:System.Windows.Freezable" /> utilizzando i valori correnti.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato è <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">Rende l'istanza un clone (copia completa) modificabile dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato usando i valori di proprietà correnti.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">Costruttore <see cref="T:System.Windows.Freezable" /> da duplicare.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">Nuova istanza.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Quando è implementato in una classe derivata, crea una nuova istanza della classe derivata <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">Nuova istanza.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">Rende non modificabile l'oggetto corrente e ne imposta la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> su <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">L'oggetto <see cref="T:System.Windows.Freezable" /> non può essere reso non modificabile.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">Se il parametro <paramref name="isChecking" /> è <see langword="true" />, questo metodo indica se è possibile rendere immodificabile <see cref="T:System.Windows.Freezable" /> specificato. Se il parametro <paramref name="isChecking" /> è <see langword="false" />, questo metodo tenta di rendere immodificabile il <see cref="T:System.Windows.Freezable" /> specificato e indica se l'operazione è riuscita.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">Oggetto da controllare o da rendere immodificabile. Se <paramref name="isChecking" /> è <see langword="true" />, l'oggetto è controllato per determinare se può essere reso immodificabile. Se <paramref name="isChecking" /> è <see langword="false" />, l'oggetto è reso immodificabile, se possibile.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> da cui restituire un'indicazione che dichiari se l'oggetto può essere bloccato (senza bloccarlo davvero); <see langword="false" /> per bloccare davvero l'oggetto.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Se <paramref name="isChecking" /> è <see langword="true" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> specificato può essere reso immodificabile, o <see langword="false" /> se non può essere reso immodificabile. Se <paramref name="isChecking" /> è <see langword="false" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> specificato è ora immodificabile, oppure <see langword="false" /> se non può essere reso immodificabile.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">Quando <paramref name="isChecking" /> è <see langword="false" />, il tentativo di rendere immodificabile <paramref name="freezable" /> non è stato completato correttamente; l'oggetto ora è in uno stato sconosciuto (potrebbe essere parzialmente bloccato).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">Rende immodificabile l'oggetto <see cref="T:System.Windows.Freezable" /> o verifica se può essere reso immodificabile.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> da cui restituire un'indicazione che dichiari se l'oggetto può essere bloccato (senza bloccarlo davvero); <see langword="false" /> per bloccare davvero l'oggetto.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Se <paramref name="isChecking" /> è <see langword="true" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> può essere reso immodificabile, o <see langword="false" /> se non può essere reso immodificabile. Se <paramref name="isChecking" /> è <see langword="false" />, questo metodo restituisce <see langword="true" /> se <see cref="T:System.Windows.Freezable" /> specificato è ora immodificabile, oppure <see langword="false" /> se non può essere reso immodificabile.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Crea una copia bloccata di <see cref="T:System.Windows.Freezable" />, utilizzando valori delle proprietà di base (non-animati). Dato che la copia è bloccata, gli oggetti secondari bloccati sono copiati dal riferimento.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Una copia bloccata di <see cref="T:System.Windows.Freezable" />. La proprietà della copia <see cref="P:System.Windows.Freezable.IsFrozen" /> è impostata su <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">
        <see cref="T:System.Windows.Freezable" /> non può essere bloccato perché contiene espressioni o proprietà animate.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Rende l'istanza un clone bloccato dell'oggetto <see cref="T:System.Windows.Freezable" /> specificato usando i valori di proprietà di base (non animati).</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">Istanza da copiare.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Crea una copia bloccata di <see cref="T:System.Windows.Freezable" /> utilizzando valori della proprietà correnti. Dato che la copia è bloccata, gli oggetti secondari bloccati sono copiati dal riferimento.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Una copia bloccata di <see cref="T:System.Windows.Freezable" />. La proprietà della copia <see cref="P:System.Windows.Freezable.IsFrozen" /> è impostata su <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">Rende l’istanza corrente una copia bloccata di <see cref="T:System.Windows.Freezable" />specificato. Se l'oggetto ha proprietà di dipendenza animate, i valori animati correnti vengono copiati.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">Oggetto <see cref="T:System.Windows.Freezable" /> da copiare e bloccare.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">Ottiene un valore che indica se l'oggetto è attualmente modificabile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">
        <see langword="true" /> se l'oggetto è bloccato e non può essere modificato. <see langword="false" /> se l'oggetto può essere modificato.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">Chiamato quando viene modificato l'oggetto <see cref="T:System.Windows.Freezable" /> corrente.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">Assicura che adatti puntatori del contesto siano stabiliti per un membro dati <see cref="T:System.Windows.DependencyObjectType" /> che è appena stato impostato.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Precedente valore del membro dati.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Valore corrente del membro dati.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Precedente valore del membro dati.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Valore corrente del membro dati.</param>
      <param name="property" vsli:raw="The property that changed.">Proprietà modificata.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">Esegue l'override dell'implementazione di <see cref="T:System.Windows.DependencyObject" /> di <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> per richiamare anche eventuali gestori <see cref="E:System.Windows.Freezable.Changed" /> in risposta alla modifica di una proprietà di dipendenza di tipo <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">Dati dell'evento con le informazioni sulla proprietà modificata e i valori precedente e corrente corrispondenti.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">Assicura che l’accesso di <see cref="T:System.Windows.Freezable" /> sia stato eseguito da un thread valido. Gli eredi di <see cref="T:System.Windows.Freezable" /> devono chiamare questo metodo all'inizio di qualsiasi API che legge i membri dei dati che non sono proprietà della dipendenza.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">Genera l'evento <see cref="E:System.Windows.Freezable.Changed" /> per <see cref="T:System.Windows.Freezable" /> e richiama il metodo <see cref="M:System.Windows.Freezable.OnChanged" />. Le classi che derivano da <see cref="T:System.Windows.Freezable" /> devono chiamare questo metodo alla fine di qualsiasi API che modifica i membri di classe che non sono archiviati come proprietà di dipendenza.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">Verifica che l'oggetto <see cref="T:System.Windows.Freezable" /> non sia bloccato e che l'accesso sia eseguito da un contesto di threading valido. Gli eredi di <see cref="T:System.Windows.Freezable" /> devono chiamare questo metodo all'inizio di qualsiasi API che scrive sui membri dei dati che non sono proprietà della dipendenza.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">L'istanza <see cref="T:System.Windows.Freezable" /> è bloccata e non è possibile scrivere nei suoi membri.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">Specifica la direzione nell'interfaccia utente nella quale viene tentata la richiesta di modifica di stato attivo. La direzione viene stabilita in base all’ordine di tabulazione o alla direzione relativa nel layout.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">Sposta lo stato attivo a un altro elemento attivabile e verso il basso rispetto all’elemento correntemente attivo.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Sposta lo stato attivo al primo elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Sposta lo stato attivo all’ultimo elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">Sposta lo stato attivo a un altro elemento attivabile e a sinistra dell’elemento correntemente attivo.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Sposta lo stato attivo al successivo elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Sposta lo stato attivo al precedente elemento attivabile in ordine di tabulazione. Non supportato per la classe <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">Sposta lo stato attivo a un altro elemento attivabile e a destra dell’elemento correntemente attivo.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">Sposta lo stato attivo a un altro elemento attivabile e verso l’alto rispetto all’elemento correntemente attivo.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">Specifica i possibili valori dei tasti su una tastiera.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">Tasto A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">Tasto ABNT_C1 (brasiliano).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">Tasto ABNT_C2 (brasiliano).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">Tasto di somma.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">Tasto dell'applicazione (Microsoft Natural Keyboard). Noto anche come tasto Menu perché visualizza un menu di scelta rapida specifico dell'applicazione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">Tasto ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">Tasto B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">Tasto BACKSPACE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">Tasto Indietro del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">Tasto Preferiti del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">Tasto Avanti del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">Tasto Home del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">Tasto di aggiornamento del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">Tasto di ricerca nel browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">Tasto di arresto del browser.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">Tasto C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">Tasto ANNULLA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">Tasto BLOC MAIUSC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">Tasto BLOC MAIUSC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">Tasto CANCELLA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">Tasto CRSEL (SELEZIONE CURSORE).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">Tasto D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">Tasto 0 (zero).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">Tasto 1 (uno).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">Tasto 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">Tasto 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">Tasto 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">Tasto 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">Tasto 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">Tasto 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">Tasto 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">Tasto 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">Tasto DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">Tasto DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">Tasto DBE_DBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">Tasto DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">Tasto DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">Tasto DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">Tasto DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">Tasto DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">Tasto DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">Tasto DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">Tasto DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">Tasto DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">Tasto DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">Tasto DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">Il tasto viene usato con un altro tasto per creare un unico carattere combinato.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">Tasto separatore decimale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">Tasto CANC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">Tasto di divisione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">Tasto freccia GIÙ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">Tasto E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">Tasto FINE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">Tasto INVIO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">Tasto di cancellazione EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">Tasto ESC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">Tasto EXECUTE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">Tasto EXSEL (estensione selezione).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">Tasto F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">Tasto F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">Tasto F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">Tasto F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">Tasto F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">Tasto F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">Tasto F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">Tasto F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">Tasto F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">Tasto F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">Tasto F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">Tasto F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">Tasto F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">Tasto F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">Tasto F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">Tasto F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">Tasto F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">Tasto F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">Tasto F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">Tasto F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">Tasto F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">Tasto F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">Tasto F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">Tasto F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">Tasto F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">Tasto modalità Final IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">Tasto G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">Tasto H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">Tasto modalità Hangul IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">Tasto modalità Hanja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">Tasto HELP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">Tasto HOME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">Tasto I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">Tasto di conferma IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">Tasto di conversione IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">Richiesta di modifica della modalità IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">Tasto di annullamento conversione IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">Tasto speciale che maschera il tasto effettivo elaborato da uno strumento IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">Tasto INS.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">Tasto J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">Tasto modalità Junja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">Tasto K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">Tasto modalità Kana IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">Tasto modalità Kanji IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">Tasto L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">Tasto di avvio applicazione 1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">Tasto di avvio applicazione 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">Tasto di avvio della posta.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">Tasto freccia SINISTRA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">Tasto ALT sinistro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">Tasto CTRL sinistro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">Tasto MAIUSC sinistro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">Tasto di avanzamento riga.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">Tasto WINDOWS sinistro (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">Tasto M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">Tasto del brano successivo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">Tasto di sospensione della riproduzione di contenuti multimediali.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">Tasto del brano precedente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">Tasto di arresto della riproduzione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">Tasto di moltiplicazione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">Tasto N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">Tasto PGGIÙ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">Costante riservata per l'uso futuro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">Nessun tasto premuto.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">Tasto BLOC NUM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">Tasto 0 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">Tasto 1 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">Tasto 2 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">Tasto 3 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">Tasto 4 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">Tasto 5 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">Tasto 6 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">Tasto 7 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">Tasto 8 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">Tasto 9 del tastierino numerico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">Tasto O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">Tasto 1 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">Tasto 102 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">Tasto 2 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">Tasto 3 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">Tasto 4 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">Tasto 5 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">Tasto 6 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">Tasto 7 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">Tasto 8 OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">Tasto ATTN OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">Tasto AUTO OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">Tasto barra rovesciata OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">Tasto BACKTAB OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">Tasto CANCELLA OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">Tasto parentesi chiusa OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">Tasto virgola OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">Tasto di copia OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">Tasto ENLW OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">Tasto di fine OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">Tasto meno OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">Tasto parentesi aperta OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">Tasto punto OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">Tasto barra verticale OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">Tasto di somma OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">Tasto ? OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">Tasto virgolette OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">Tasto punto e virgola OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">Tasto tilde OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">Tasto P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">Tasto PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">Tasto PGGIÙ.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">Tasto PGSU.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">Tasto PAUSA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">Tasto PLAY.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">Tasto STAMPA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">Tasto STAMP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">Tasto PGSU.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Tasto Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">Tasto R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">Tasto INVIO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">Tasto freccia DESTRA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">Tasto ALT destro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">Tasto CTRL destro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">Tasto MAIUSC destro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">Tasto WINDOWS destro (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">Tasto S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">Tasto BLOC SCORR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">Tasto SELECT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">Tasto di selezione supporto multimediale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">Tasto separatore.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">Tasto di sospensione del computer.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">Tasto STAMP.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">Tasto BARRA SPAZIATRICE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">Tasto di sottrazione.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">Tasto speciale che maschera il tasto effettivo elaborato da un tasto di sistema.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">Tasto T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">Tasto TAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">Tasto U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">Tasto freccia SU.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">Tasto V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">Tasto di riduzione del volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">Tasto di disattivazione del volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">Tasto di aumento del volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">Tasto W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">Tasto X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Tasto Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Tasto Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">Tasto ZOOM.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">Converte un oggetto <see cref="T:System.Windows.Input.Key" /> in e da altri tipi.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Determina se per un oggetto del tipo specificato è possibile o meno eseguire la conversione in un'istanza di <see cref="T:System.Windows.Input.Key" /> utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Tipo di cui viene valutata la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="sourceType" /> è di tipo <see cref="T:System.String" /> ; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">Determina se un'istanza di <see cref="T:System.Windows.Input.Key" /> può essere convertita nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Tipo di cui viene valutata la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="destinationType" /> è di tipo <see cref="T:System.String" /> ; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Input.Key" /> utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="source" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <returns vsli:raw="The converted object.">Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">L'oggetto <paramref name="source" /> non può essere convertito.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">Tenta di convertire <see cref="T:System.Windows.Input.Key" /> nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="value" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Tipo in cui convertire l'oggetto.</param>
      <returns vsli:raw="The converted object.">Oggetto convertito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" /> non può essere convertito in <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Offre metodi statici per la conversione tra tasti virtuali Win32 e l'enumerazione <see cref="T:System.Windows.Input.Key" /> di WPF.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Converte un tasto virtuale di Win32in <see cref="T:System.Windows.Input.Key" /> di WPF.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">La chiave virtuale da convertire.</param>
      <returns vsli:raw="The WPF key.">Tasto di WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">Converte <see cref="T:System.Windows.Input.Key" /> di WPF in un tasto virtuale di Win32.</summary>
      <param name="key" vsli:raw="The WPF to convert.">Oggetto WPF da convertire.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">Tasto virtuale di Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Input.Key" /> specificato può essere convertito in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">Chiave di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Stringa da convertire in <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Input.Key" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Input.Key" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Chiave da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Rappresentazione di stringa invariante dell'oggetto <see cref="T:System.Windows.Input.Key" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">Specifica l'insieme di tasti di modifica.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">Rappresenta il tasto ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">Rappresenta il tasto CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">Non viene premuto alcun modificatore.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">Rappresenta il tasto MAIUSC.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">Tasto logo Windows.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">Converte un oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> in e da altri tipi.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Determina se per un oggetto del tipo specificato è possibile o meno eseguire la conversione in un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Tipo di cui viene valutata la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="sourceType" /> è di tipo <see cref="T:System.String" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">Determina se un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> può essere convertita nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Tipo di cui viene valutata la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="destinationType" /> è di tipo <see cref="T:System.String" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Input.ModifierKeys" /> utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="source" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <returns vsli:raw="The converted object.">Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">L'oggetto <paramref name="source" /> non può essere convertito.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">Tenta di convertire <see cref="T:System.Windows.Input.ModifierKeys" /> nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="value" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Tipo in cui convertire l'oggetto.</param>
      <returns vsli:raw="The converted object.">Oggetto convertito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" /> non esegue il mapping a un valido <see cref="T:System.Windows.Input.ModifierKeys" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">L'oggetto <paramref name="value" /> non può essere convertito.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Indica se il valore specificato è un valore <see cref="T:System.Windows.Input.ModifierKeys" /> valido.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">Valore di cui controllare la validità.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'input è un valore <see cref="T:System.Windows.Input.ModifierKeys" /> valido. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Input.ModifierKeys" /> specificato può essere convertito in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">I tasti di modifica da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Converte un oggetto <see cref="T:System.String" /> in un valore <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Stringa da convertire in <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Input.ModifierKeys" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Chiave da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Rappresentazione di stringa invariante del valore <see cref="T:System.Windows.Input.ModifierKeys" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">Rappresenta una richiesta per spostare lo stato attivo a un altro controllo.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">Direzione desiderata dell'attraversamento dello stato attivo, come un valore dell'enumerazione.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">Ottiene la direzione di attraversamento.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">Uno dei valori di enumerazione della direzione di attraversamento.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">Ottiene o imposta un valore che indica se l'attraversamento dello stato attivo è o meno arrivato alla fine degli elementi figlio che possono avere lo stato attivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo attraversamento è arrivato alla fine degli elementi figlio che possono avere lo stato attivo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">Descrive larghezza, altezza e posizione di un rettangolo Integer.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">Inizializza una nuova istanza di <see cref="T:System.Windows.Int32Rect" /> con le coordinate <see cref="P:System.Windows.Int32Rect.X" /> e <see cref="P:System.Windows.Int32Rect.Y" /> specificate, nonché <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> specificati.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">
        <see cref="P:System.Windows.Int32Rect.X" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica la coordinata x dell'angolo superiore sinistro del rettangolo.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">
        <see cref="P:System.Windows.Int32Rect.Y" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica la coordinata y dell'angolo superiore sinistro del rettangolo.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">
        <see cref="P:System.Windows.Int32Rect.Width" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica la larghezza del rettangolo.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">
        <see cref="P:System.Windows.Int32Rect.Height" /> della nuova istanza di <see cref="T:System.Windows.Int32Rect" /> che specifica l'altezza del rettangolo.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">Ottiene il rettangolo vuoto, un valore speciale che rappresenta un rettangolo senza posizione o area.</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">Rettangolo vuoto senza posizione o area.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Determina se il rettangolo specificato è uguale a questo.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Oggetto da confrontare con il rettangolo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> è <see cref="T:System.Windows.Int32Rect" /> e ha gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questo rettangolo. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Determina se il rettangolo specificato è uguale a questo.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Rettangolo da confrontare con il rettangolo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> ha gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questo rettangolo. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">Determina se i rettangoli specificati sono uguali.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> hanno gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">Crea un codice hash dai valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questo rettangolo.</summary>
      <returns vsli:raw="This rectangle's hash code.">Codice hash di questo rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">Ottiene un valore che indica se le proprietà <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di <see cref="T:System.Windows.Int32Rect" /> sono maggiori di 0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se le <see cref="P:System.Windows.Int32Rect.Width" /> proprietà <see cref="P:System.Windows.Int32Rect.Height" /> e di <see cref="T:System.Windows.Int32Rect" /> sono maggiori di 0; in caso contrario <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Ottiene o imposta l'altezza del rettangolo.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Altezza del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">Ottiene un valore che indica se il rettangolo è vuoto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se il rettangolo è vuoto; in caso <see langword="false" />contrario,. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Confronta due rettangoli per verificarne l’esatta uguaglianza.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> hanno gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Confronta due rettangoli per verificarne la disuguaglianza.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" /> se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> hanno gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />,e <see cref="P:System.Windows.Int32Rect.Height" />. In caso contrario, se tutti questi valori sono uguali, <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">Crea una struttura <see cref="T:System.Windows.Int32Rect" /> dalla rappresentazione di <see cref="T:System.String" /> specificata.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Rappresentazione in forma di stringa di <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Struttura <see cref="T:System.Windows.Int32Rect" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formatta il valore dell'istanza corrente utilizzando il formato specificato.</summary>
      <param name="format" vsli:raw="The format to use.">Formato da utilizzare</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Provider da utilizzare per formattare il valore.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Crea una rappresentazione in forma di stringa di <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Stringa contenente gli stessi valori <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> di questa struttura <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">Crea una rappresentazione di <see cref="T:System.Windows.Int32Rect" /> in base all'oggetto <see cref="T:System.IFormatProvider" /> fornito.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">Provider di formato da utilizzare. Se il provider è <see langword="null" />, vengono utilizzate le impostazioni cultura correnti.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Rappresentazione in forma di stringa di questa istanza di <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Ottiene o imposta la larghezza del rettangolo.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Larghezza del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">Ottiene o imposta la coordinata x dell'angolo superiore sinistro del rettangolo.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Coordinata x dell'angolo superiore sinistro del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">Ottiene o imposta la coordinata Y dell'angolo superiore sinistro del rettangolo.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Coordinata Y dell'angolo superiore sinistro del rettangolo. Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Determina se un oggetto può essere convertito da un tipo specifico in un'istanza di un oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo può essere convertito in un oggetto <see cref="T:System.Windows.Int32Rect" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">Determina se un'istanza di un oggetto <see cref="T:System.Windows.Int32Rect" /> può essere convertita in un tipo diverso.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Int32Rect" /> viene valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Windows.Int32Rect" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Tenta di convertire il tipo specificato in un oggetto <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value" vsli:raw="The object being converted.">Oggetto da convertire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Int32Rect" /> creato tramite la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Eccezione generata se l'oggetto specificato è NULL o un tipo che non può essere convertito in <see cref="T:System.Windows.Int32Rect" />.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">Tenta di convertire un oggetto <see cref="T:System.Windows.Int32Rect" /> in un tipo specificato.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">Oggetto <see cref="T:System.Windows.Int32Rect" /> da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Int32Rect" /> corrente.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Oggetto creato tramite la conversione di <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Eccezione generata se <paramref name="value" /> è <see langword="null" /> o non è un oggetto <see cref="T:System.Windows.Int32Rect" /> oppure se <paramref name="destinationType" /> non è uno dei tipi validi per la conversione.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">Abilita il controllo condiviso del message pump tra Win32 e WPF negli scenari di interoperatività.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">Ottiene l'ultimo messaggio generato.</summary>
      <returns vsli:raw="The last message.">Ultimo messaggio.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">Si verifica quando un thread diventa modale.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">Ottiene un valore che indica se il thread è modale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il thread è modale; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">Si verifica quando un thread modale diventa non modale.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">Viene chiamato per indicare che un thread modale non è più modale.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">Viene chiamato per indicare che il thread è modale.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">Viene chiamato per indicare che un thread è inattivo.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">Indica che un messaggio nuovo è disponibile per la possibile gestione.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">Messaggio e dati ad esso associati.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">
        <see langword="true" />, se uno dei moduli che ascoltano il ciclo di messaggi ha elaborato il messaggio. Il proprietario del ciclo di messaggi dovrebbe ignorare il messaggio. <see langword="false" /> se il messaggio non è stato elaborato. In questo caso, il proprietario del message pump deve chiamare la funzione Win32 TranslateMessage seguita da DispatchMessage.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Si verifica quando il message pump riceve un messaggio della tastiera.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">Si verifica quando il thread è inattivo.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Si verifica quando il message pump riceve un messaggio della tastiera.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Fornisce un sink della tastiera per i componenti che gestisce la tabulazione, gli acceleratori e i tasti di scelta rapida attraverso limiti di interoperatività e tra oggetti HWND. L'interfaccia implementa la gestione dei messaggi dalla tastiera negli scenari di interoperatività WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">Ottiene un valore che indica se il sink o uno dei componenti contenuti ha lo stato attivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il sink o uno dei componenti contenuti ha lo stato attivo; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Ottiene o imposta un riferimento all'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenitore del componente.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Riferimento all'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenitore.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">Chiamato quando viene richiamato uno dei tasti di scelta rapida (tasti di scelta) per questo sink.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">Il messaggio per i tasti di scelta rapida e i dati associati. Non modificare questa struttura del messaggio. Viene passata in base al riferimento per soli motivi di prestazione.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Tasti di modifica.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">Registra l'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> di un componente contenuto.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">Sink <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del componente contenuto.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">Il sito <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del componente contenuto.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">Imposta lo stato attivo sulla prima tabulazione o l'ultima tabulazione del sink.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Specifica se lo stato attivo deve essere impostato sulla prima o l'ultima tabulazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">
        <see langword="true" /> se lo stato attivo è stato impostato come richiesto; <see langword="false" />, se non ci sono tabulazioni.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">Elabora input dalla tastiera al livello del messaggio Keydown.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Messaggio e dati associati. Non modificare questa struttura. Viene passata in base al riferimento per soli motivi di prestazione.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Tasti di modifica.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito dall'implementazione del metodo; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">Elabora i messaggi di input WM_CHAR, WM_SYSCHAR, WM_DEADCHAR e WM_SYSDEADCHAR prima che <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> venga chiamato.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">Messaggio e dati associati. Non modificare questa struttura. Viene passata in base al riferimento per soli motivi di prestazione.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Tasti di modifica.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato elaborato e <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> non deve essere chiamato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Gestisce lo stato attivo all'interno del contenitore.  L'interfaccia implementa la gestione dei messaggi dalla tastiera negli scenari di interoperatività WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">Chiamato da un componente contenuto quando ha raggiunto l'ultima tabulazione e non dispone di ulteriori elementi a cui accedere.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Specifica se lo stato attivo deve essere impostato sulla prima o l'ultima tabulazione.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">Se questo metodo restituisce <see langword="true" />, il sito ha spostato lo stato attivo su un altro componente. Se il metodo restituisce <see langword="false" />, lo stato attivo è ancora presente nel componente chiamante. Il componente deve "eseguire il wrapping" e impostare lo stato attivo alla prima tabulazione contenuta.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">Ottiene il sink della tastiera associato a questo sito.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">L'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del sito corrente.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">Annulla la registrazione un sink dell'input da tastiera figlio da questo sito.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">Contiene informazioni sul messaggio dalla coda di messaggi di un thread.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">Ottiene o imposta l'handle della finestra (HWND) per la finestra la cui routine riceve il messaggio.</summary>
      <returns vsli:raw="The window handle (HWND).">Handle della finestra (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">Ottiene o imposta il valore <paramref name="lParam" /> che specifica informazioni aggiuntive sul messaggio. Il significato esatto dipende dal valore del membro <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">Valore <paramref name="lParam" /> per il messaggio.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">Ottiene o imposta l'identificatore del messaggio.</summary>
      <returns vsli:raw="The message identifier.">Identificatore del messaggio.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">Ottiene o imposta la coordinata x della posizione del cursore sullo schermo, quando il messaggio è stato inserito.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">Coordinata x della posizione del cursore.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">Ottiene o imposta la coordinata y della posizione del cursore sullo schermo, quando il messaggio è stato inserito.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">Coordinata y della posizione del cursore.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">Ottiene o imposta l'ora in cui è stato inserito il messaggio.</summary>
      <returns vsli:raw="The time that the message was posted.">L'ora in cui il messaggio è stato inserito.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">Ottiene o imposta il valore <paramref name="wParam" /> per il messaggio, che specifica informazioni aggiuntive sul messaggio. Il significato esatto dipende dal valore del messaggio.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">Valore <paramref name="wParam" /> per il messaggio.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">Rappresenta il metodo che gestisce gli eventi <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> e <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">Struttura con i dati del messaggio.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Fornisce supporto per l'ascolto di eventi alle classi in attesa di ricevere eventi tramite il modello WeakEvent e <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">Riceve gli eventi dal gestore degli eventi centralizzato.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">Il tipo di <see cref="T:System.Windows.WeakEventManager" /> che chiama questo metodo.</param>
      <param name="sender" vsli:raw="Object that originated the event.">Oggetto che ha originato l'evento.</param>
      <param name="e" vsli:raw="Event data.">Dati dell'evento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">
        <see langword="true" /> se il listener ha gestito l'evento. È considerato errore se l'oggetto <see cref="T:System.Windows.WeakEventManager" /> responsabile della gestione in WPF registra un listener per un evento che non viene gestito dal listener stesso. In ogni caso, il metodo deve restituire <see langword="false" /> se riceve un evento che non riconosce o gestisce.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">Rappresenta un identificatore di proprietà e il valore della proprietà per una proprietà di dipendenza impostata in locale.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">Determina se due istanze di <see cref="T:System.Windows.LocalValueEntry" /> sono uguali.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Oggetto <see cref="T:System.Windows.LocalValueEntry" /> da confrontare con l'oggetto <see cref="T:System.Windows.LocalValueEntry" /> corrente.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">Questa implementazione <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> confronta i valori di <see cref="P:System.Windows.LocalValueEntry.Property" /> ed eventualmente i valori di <see cref="P:System.Windows.LocalValueEntry.Value" />. Poiché il componente <see cref="P:System.Windows.LocalValueEntry.Property" /> di un oggetto <see cref="T:System.Windows.LocalValueEntry" /> è un tipo di valore, il confronto sarà sempre di tipo bit per bit. Per il componente <see cref="P:System.Windows.LocalValueEntry.Value" />, questa implementazione utilizza un confronto bit per bit se il componente è un tipo di valore. Per proprietà impostate localmente che hanno tipi di riferimento, il comportamento viene rinviato ai meccanismi di determinazione di uguaglianza del tipo, in quanto utilizza internamente l'operatore == sui due valori. Per impostazione predefinita, si tratterebbe di un'uguaglianza di riferimenti dei valori e pertanto l'uguaglianza dell'intero oggetto <see cref="T:System.Windows.LocalValueEntry" /> diverrebbe un'uguaglianza di riferimenti.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Restituisce il codice hash per questo <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Valore intero a 32 bit con segno.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">Confronta le istanze di <see cref="T:System.Windows.LocalValueEntry" /> specificate per determinare se sono identiche.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Prima istanza da confrontare.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Seconda istanza da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> è uguale a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">Confronta le istanze di <see cref="T:System.Windows.LocalValueEnumerator" /> specificate per determinare se sono diverse.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Prima istanza da confrontare.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Seconda istanza da confrontare.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">Questa implementazione confronta i valori dei componenti <see cref="P:System.Windows.LocalValueEntry.Property" /> e <see cref="P:System.Windows.LocalValueEntry.Value" /> di  un oggetto <see cref="T:System.Windows.LocalValueEntry" />. Poiché il componente <see cref="P:System.Windows.LocalValueEntry.Property" /> di un oggetto <see cref="T:System.Windows.LocalValueEntry" /> è sempre un tipo di valore, il confronto dei valori sarà sempre di tipo bit per bit. Per il componente <see cref="P:System.Windows.LocalValueEntry.Value" />, questa implementazione utilizza un confronto bit per bit se il componente è un tipo di valore.
Per le proprietà impostate localmente che hanno tipi di riferimento, il comportamento viene rinviato ai meccanismi di determinazione di uguaglianza del tipo, in quanto utilizza internamente l'operatore <see langword="==" /> sui due valori. Per impostazione predefinita, si tratta di un'uguaglianza di riferimento dei valori.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">Ottiene l'identificatore per la proprietà di dipendenza impostata localmente rappresentata da questa voce.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">Identificatore della proprietà di dipendenza impostata localmente.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">Ottiene il valore della proprietà di dipendenza impostata localmente.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">Valore della proprietà di dipendenza impostata localmente come oggetto.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Fornisce il supporto di enumerazione per i valori locali di qualsiasi proprietà di dipendenza presente in un oggetto <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">Ottiene il numero di elementi rappresentati nell'insieme.</summary>
      <returns vsli:raw="The number of items in the collection.">Numero di elementi nella raccolta.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Ottiene l'elemento corrente della raccolta.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">
        <see cref="T:System.Windows.LocalValueEntry" /> corrente presente nell'insieme.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> fornito equivale a questo oggetto <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> da confrontare con l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> specificato è uguale all'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Restituisce un codice hash per l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">Codice hash di valori interi a 32 bit.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Sposta l'enumeratore all'elemento successivo della raccolta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">Confronta due oggetti <see cref="T:System.Windows.LocalValueEnumerator" /> specificati per verificare se sono uguali.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> è uguale a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">Confronta due oggetti <see cref="T:System.Windows.LocalValueEnumerator" /> specificati per determinare se sono diversi.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le istanze non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current element in the collection.">Elemento corrente nella raccolta.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">Specifica come una proprietà deve essere serializzata.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">La proprietà deve essere serializzata come un attributo.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">Specifica i flag della serializzazione per una proprietà.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">Specifica come deve essere serializzata la proprietà.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> non è un valore valido di <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">Ottiene <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> impostato sull'attributo.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">Opzione di serializzazione, come un valore dell'enumerazione.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">Classe astratta utilizzata internamente dal compilatore XAML WPF per supportare l'utilizzo di tipi interni.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">Quando è sottoposto a override in una classe derivata (generata), viene associato un delegato del gestore eventi a un evento interno.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">Informazioni sull'evento per l'evento (informazioni sulla reflection CLR).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Destinazione a cui è associato il gestore.</param>
      <param name="handler" vsli:raw="The event handler.">Gestore eventi.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">Quando è sottoposto a override in una classe derivata (generata), viene creato un delegato di evento che fa riferimento a un metodo del gestore non pubblico.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">
        <see cref="T:System.Type" /> del delegato.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Destinazione a cui è associato il gestore.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">Nome dell'implementazione del gestore.</param>
      <returns vsli:raw="The delegate reference.">Riferimento del delegato.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">Quando è sottoposto a override in una classe derivata (generata), crea un'istanza di un tipo interno.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">Oggetto <see cref="T:System.Type" /> da creare.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The created instance.">Istanza creata.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">Quando è sottoposto a override in una classe derivata (generata), ottiene il valore di una proprietà interna dell'oggetto di destinazione.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">Informazioni sulla proprietà per la proprietà da ottenere.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Oggetto che contiene il valore della proprietà desiderato.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="The value of the property.">Valore della proprietà.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">Quando è sottoposto a override in una classe derivata (generata), imposta il valore su una proprietà interna dell'oggetto di destinazione.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">Informazioni sulla proprietà per la proprietà da impostare.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Oggetto che contiene il valore della proprietà desiderato.</param>
      <param name="value" vsli:raw="The value to set.">Il valore da impostare.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">Fornisce un meccanismo in base al quale i tipi possono dichiarare di poter ricevere un'espressione (o un'altra classe) da un'estensione di markup, in cui l'output è un tipo di proprietà diverso dalla proprietà di destinazione. Non usare per le implementazioni di .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">Rende disponibile la gestione per le estensioni di markup che forniscono i valori delle proprietà. Non usare per le implementazioni di .NET Framework 4; vedere <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property" vsli:raw="The name of the target property.">Nome della proprietà di destinazione.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">Istanza dell'estensione di markup dei dati in ingresso.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">Può fornire servizi aggiuntivi che devono essere eseguiti durante l'elaborazione dei dati dell'estensione di markup per il valore di una proprietà.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">Classe astratta che rappresenta un oggetto che può essere utilizzato per spostarsi nella struttura ad albero di oggetti.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">Se sottoposto a override in una classe derivata, attribuisce un contesto di primo livello per le classi <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" /> per il quale attribuire un contesto di primo livello.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Quando viene sottoposto a override in una classe derivata, ottiene gli attributi associati a questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The collection of attributes.">Raccolta di attributi.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Se sottoposta a override in una classe derivata, ottiene l'istanza dell'oggetto rappresentato da questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The instance of the object.">Istanza dell'oggetto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">Se sottoposta a override in una classe derivata, ottiene il tipo dell'istanza di <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The type of the object.">Tipo dell'oggetto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">Se sottoposta a override in una classe derivata, ottiene le proprietà dell'istanza di <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> che deve essere scritta in XAML.</summary>
      <returns vsli:raw="The properties.">Proprietà.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">Classe astratta che fornisce una descrizione della proprietà da utilizzare durante la scrittura in un markup che incapsula l'accesso a proprietà e i valori.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Quando viene sottoposto a override in una classe derivata, ottiene gli attributi associati a questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The collection of attributes.">Raccolta di attributi.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">Quando viene sottoposto a override in una classe derivata, ottiene l'identificatore <see cref="T:System.Windows.DependencyProperty" /> per la proprietà del markup se la proprietà è implementata come proprietà di dipendenza.</summary>
      <returns vsli:raw="The dependency property identifier.">Identificatore della proprietà di dipendenza.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è un <see cref="T:System.Windows.DependencyProperty" /> associato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà è un oggetto <see cref="T:System.Windows.DependencyProperty" /> associato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è una proprietà composta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questa proprietà è una proprietà composta, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta un argomento del costruttore.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà rappresenta un argomento del costruttore. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta il contenuto diretto di un insieme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà rappresenta il contenuto diretto, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta la chiave utilizzata da <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> per archiviare l'elemento in un dizionario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà rappresenta una chiave; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta testo passato a un convertitore di tipi per creare un'istanza della proprietà o se deve essere utilizzato un costruttore.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta una stringa; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">Se sottoposta a override in una classe derivata, ottiene gli elementi che compongono il valore di questa proprietà.</summary>
      <returns vsli:raw="The items that make up the value of this property.">Gli elementi che compongono il valore di questa proprietà.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">Quando viene sottoposto a override in una classe derivata, ottiene un nome utilizzato per la diagnostica e la segnalazione errori.</summary>
      <returns vsli:raw="The identifier property name.">Nome della proprietà dell'identificatore.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">Quando viene sottoposta a override in una classe derivata, ottiene <see cref="T:System.ComponentModel.PropertyDescriptor" /> per la proprietà del markup.</summary>
      <returns vsli:raw="The property descriptor.">Descrittore della proprietà.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">Quando è sottoposto a override in una classe derivata, ottiene il tipo CLR della proprietà.</summary>
      <returns vsli:raw="The CLR type.">Tipo CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Quando viene sottoposto a override in una classe derivata, ottiene il valore stringa dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The string value.">Valore stringa.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">Se sottoposto a override in una classe derivata, ottiene il set di tipi a cui <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> farà riferimento quando serializza il valore come stringa.</summary>
      <returns vsli:raw="The set of types.">Set di tipi.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Quando viene sottoposto a override in una classe derivata ottiene il valore corrente dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The current value.">Valore corrente.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">Fornisce un'implementazione per l'interfaccia <see cref="T:System.IServiceProvider" /> con metodi che consentono l’aggiunta di servizi.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">Consente di aggiungere un servizio all'elenco.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">Tipo del nuovo servizio.</param>
      <param name="service" vsli:raw="The service implementation class.">Classe di implementazione del servizio.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> o <paramref name="service" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">Si è tentato di aggiungere un servizio già presente nel dizionario.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">Ottiene l'oggetto Service del tipo specificato.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">Tipo di servizio da ottenere.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Implementazione del servizio per il tipo <paramref name="serviceType" />. Può essere <see langword="null" /> se non è stato memorizzato alcun servizio per il tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">Determina se la conversione da un oggetto <see cref="T:System.String" /> specificato a un'istanza di <see cref="T:System.Windows.Media.Matrix" /> sia possibile.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore può essere convertito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se un'istanza di <see cref="T:System.Windows.Media.Matrix" /> può essere convertita in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Istanza di <see cref="T:System.Windows.Media.Matrix" /> da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">Si verifica quando <paramref name="value" /> non è un oggetto <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Valore <see cref="T:System.String" /> da convertire in <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.Windows.Media.Matrix" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.Windows.Media.Matrix" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Istanza di <see cref="T:System.Windows.Media.Matrix" /> da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">Rappresentazione <see cref="T:System.String" /> dell'oggetto <see cref="T:System.Windows.Media.Matrix" /> specificato.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">Consente alle applicazioni WPF di disabilitare la compatibilità con i valori DPI (dots per inch, punti per pollice) per tutti gli elementi dell'interfaccia utente.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">Inizializza una nuova istanza di <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">Rappresenta una matrice di trasformazione affine 3x3 usata per le trasformazioni nello spazio 2D.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">Coefficiente <see cref="P:System.Windows.Media.Matrix.M11" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">Coefficiente <see cref="P:System.Windows.Media.Matrix.M12" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">Coefficiente <see cref="P:System.Windows.Media.Matrix.M21" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">Coefficiente <see cref="P:System.Windows.Media.Matrix.M22" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">Coefficiente <see cref="P:System.Windows.Media.Matrix.OffsetX" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">Coefficiente <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della nuova struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Accoda la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Struttura <see cref="T:System.Windows.Media.Matrix" /> da accodare alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene il determinante della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determinante della struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Object" /> specificato è o meno una struttura <see cref="T:System.Windows.Media.Matrix" /> identica alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="o" /> è una struttura <see cref="T:System.Windows.Media.Matrix" /> identica a questa struttura <see cref="T:System.Windows.Media.Matrix" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">Determina se la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata è uguale o meno a questa istanza.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">Istanza della struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le istanze sono uguali, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate sono identiche.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> sono identiche, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Restituisce il codice hash di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The hash code for this instance.">Codice hash per l'istanza.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">Ottiene un valore che indica se questa struttura <see cref="T:System.Windows.Media.Matrix" /> è invertibile o meno.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se la struttura <see cref="T:System.Windows.Media.Matrix" /> dispone di un inverso, altrimenti <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Ottiene una struttura <see cref="T:System.Windows.Media.Matrix" /> di identità.</summary>
      <returns vsli:raw="An identity matrix.">Matrice di identità.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Inverte la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">La struttura <see cref="T:System.Windows.Media.Matrix" /> non è invertibile.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">Ottiene un valore che indica se la struttura <see cref="T:System.Windows.Media.Matrix" /> è una matrice di identità o meno.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se la struttura <see cref="T:System.Windows.Media.Matrix" /> è una matrice di identità, altrimenti <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene o imposta il valore della prima riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">Valore della prima riga e della prima colonna di questa struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene o imposta il valore della prima riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Valore della prima riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene o imposta il valore della seconda riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Valore della prima seconda riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene o imposta il valore della seconda riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">Valore della seconda riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Moltiplica una struttura <see cref="T:System.Windows.Media.Matrix" /> per un'altra struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Risultato della moltiplicazione di <paramref name="trans1" /> per <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene o imposta il valore della terza riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Valore della terza riga e della prima colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Ottiene o imposta il valore della terza riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Valore della terza riga e della seconda colonna della struttura <see cref="T:System.Windows.Media.Matrix" />. Il valore predefinito è 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate sono identiche.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> sono identiche, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">Determina se le due strutture <see cref="T:System.Windows.Media.Matrix" /> specificate non sono identiche.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le matrici <paramref name="matrix1" /> e <paramref name="matrix2" /> non sono identiche, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Moltiplica una struttura <see cref="T:System.Windows.Media.Matrix" /> per un'altra struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Prima struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Seconda struttura <see cref="T:System.Windows.Media.Matrix" /> da moltiplicare.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Risultato della moltiplicazione di <paramref name="trans1" /> per <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Converte una rappresentazione <see cref="T:System.String" /> di una matrice nella struttura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">Rappresentazione <see cref="T:System.String" /> della matrice.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Struttura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone la struttura <see cref="T:System.Windows.Media.Matrix" /> specificata alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Struttura <see cref="T:System.Windows.Media.Matrix" /> da anteporre alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Applica una rotazione dell'angolo specificato intorno all'origine della struttura <see cref="T:System.Windows.Media.Matrix" /> .</summary>
      <param name="angle" vsli:raw="The angle of rotation.">Angolo di rotazione.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">Ruota la matrice intorno al punto specificato.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">Angolo, espresso in gradi, in base al quale ruotare la matrice.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">Coordinata x del punto intorno al quale ruotare la matrice.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">Coordinata y del punto intorno al quale ruotare la matrice.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una rotazione dell'angolo specificato intorno al punto definito.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">Angolo di rotazione espresso in gradi.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">Coordinata x del centro di rotazione.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">Coordinata y del centro di rotazione.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una rotazione dell'angolo specificato.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">Angolo di rotazione da anteporre.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Accoda il vettore di ridimensionamento specificato alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">Ridimensiona la struttura <see cref="T:System.Windows.Media.Matrix" /> rispetto al punto specificato in base al valore definito.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">Coordinata x del punto centrale dell'operazione di ridimensionamento.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">Coordinata y del punto centrale dell'operazione di ridimensionamento.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Antepone il ridimensionamento specificato rispetto al punto definito di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">Fattore di scala dell'asse x.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Fattore di scala dell'asse y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">Coordinata x del punto rispetto al quale viene eseguita l'operazione di ridimensionamento.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">Coordinata y del punto rispetto al quale viene eseguita l'operazione di ridimensionamento.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone il vettore di ridimensionamento specificato alla struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">Valore in base al quale ridimensionare la struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">Cambia la struttura <see cref="T:System.Windows.Media.Matrix" /> in una matrice di identità.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Accoda alla struttura <see cref="T:System.Windows.Media.Matrix" /> un'inclinazione di gradi specificati nelle dimensioni x e y.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Angolo nella dimensione x in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Angolo nella dimensione y in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> un'inclinazione di gradi specificati nelle dimensioni x e y.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Angolo nella dimensione x in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Angolo nella dimensione y in base al quale inclinare la struttura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formatta il valore dell'istanza corrente utilizzando il formato specificato.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Formato da utilizzare
-oppure-
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per utilizzare il formato definito per il tipo di implementazione di <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Provider da utilizzare per formattare il valore.
In alternativa
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Crea una rappresentazione <see cref="T:System.String" /> di questa struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Oggetto <see cref="T:System.String" /> contenente i membri <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" /> e <see cref="P:System.Windows.Media.Matrix.OffsetX" /> nonché i valori <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">Crea una rappresentazione <see cref="T:System.String" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> con le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Oggetto <see cref="T:System.String" /> contenente i membri <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" /> e <see cref="P:System.Windows.Media.Matrix.OffsetX" /> nonché i valori <see cref="P:System.Windows.Media.Matrix.OffsetY" /> della struttura <see cref="T:System.Windows.Media.Matrix" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">Trasforma il punto specificato mediante la struttura <see cref="T:System.Windows.Media.Matrix" /> e restituisce il risultato.</summary>
      <param name="point" vsli:raw="The point to transform.">Il punto da trasformare.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Risultato della trasformazione di <paramref name="point" /> mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Trasforma i punti specificati mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">Punti da trasformare. I punti originali nella matrice vengono sostituiti dai valori trasformati.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Trasforma il vettore specificato mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Risultato della trasformazione di <paramref name="vector" /> mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Trasforma i vettori specificati mediante la struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">Vettori da trasformare. I vettori originali nella matrice vengono sostituiti dai valori trasformati.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Accoda alla struttura <see cref="T:System.Windows.Media.Matrix" /> una traslazione degli offset specificati.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone alla struttura <see cref="T:System.Windows.Media.Matrix" /> una traslazione degli offset specificati.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse x.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Valore di offset della struttura <see cref="T:System.Windows.Media.Matrix" /> lungo l'asse y.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">Inizializza una nuova istanza di <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determina se per un oggetto è possibile o meno eseguire la conversione da un tipo specifico a un'istanza di una struttura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informazioni di contesto relative a un tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo specificato può essere convertito in un oggetto <see cref="T:System.Windows.Media.Matrix" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">Determina se un'istanza di un oggetto <see cref="T:System.Windows.Media.Matrix" /> può essere convertita in un tipo diverso.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informazioni di contesto relative a un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Media.Matrix" /> viene valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Windows.Media.Matrix" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informazioni di contesto relative a un tipo.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">
        <see cref="T:System.Globalization.CultureInfo" /> del tipo da convertire.</param>
      <param name="value" vsli:raw="The object being converted.">Oggetto da convertire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Media.Matrix" /> creato tramite la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">L'oggetto specificato presenta valore null oppure rappresenta un tipo che non può essere convertito in una struttura <see cref="T:System.Windows.Media.Matrix" />.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">Tenta di convertire un oggetto <see cref="T:System.Windows.Media.Matrix" /> in un tipo specificato.</summary>
      <param name="context" vsli:raw="The context information of a type.">Informazioni di contesto relative a un tipo.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">
        <see cref="T:System.Globalization.CultureInfo" /> del tipo da convertire.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">Oggetto <see cref="T:System.Windows.Media.Matrix" /> da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Media.Matrix" /> corrente.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Oggetto creato tramite la conversione di <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">Il parametro <paramref name="value" /> è impostato su null, non indica una struttura <see cref="T:System.Windows.Media.Matrix" /> oppure il parametro <paramref name="destinationType" /> non rappresenta un tipo di conversione valido.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">Definisce i metodi di formattazione supportati dalla classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">Indica che l'oggetto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> dispone il testo utilizzando le metriche dei tipi di carattere compatibili con GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">Indica che l'oggetto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> dispone il testo utilizzando le metriche dei tipi di carattere ideali.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">Implementa il supporto WPF di base dei metodi <see cref="T:System.Windows.Markup.INameScope" /> che memorizzano o recuperano i mapping nome-oggetto in un particolare ambito dei nomi XAML. Aggiunge il supporto della proprietà associata per rendere più semplice ottenere o impostare in modo dinamico i nomi degli ambiti dei nomi XAML a livello di elemento.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">Aggiunge un elemento alla raccolta.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la chiave è <see cref="T:System.String" />, il valore è <see cref="T:System.Object" />) che rappresenta il mapping del nome da aggiungere al NameScope XAML.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i componenti di <paramref name="item" /> sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">Aggiunge un elemento alla raccolta.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">Stringa chiave che rappresenta il nome del mapping NameScope XAML da aggiungere.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">Valore dell'oggetto, che è il riferimento dell'oggetto del mapping NameScope XAML da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> o <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">Rimuove tutti gli elementi dalla raccolta.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">Determina se l'insieme contiene un elemento specificato.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Elemento da trovare nella raccolta, specificato come un oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la chiave è <see cref="T:System.String" />, il valore è <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> specificato identifica un mapping esistente all'interno di <see cref="T:System.Windows.NameScope" />. <see langword="false" /> se l'oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> specificato non esiste nell'oggetto <see cref="T:System.Windows.NameScope" /> corrente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Comunica se un nome fornito sia già esistente all'interno della struttura <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key" vsli:raw="The string key to find.">Stringa chiave da trovare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="key" /> specificato identifica un nome per un mapping esistente all'interno di <see cref="T:System.Windows.NameScope" />. <see langword="false" /> se l'oggetto <paramref name="key" /> specificato non esiste nell'oggetto <see cref="T:System.Windows.NameScope" /> corrente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">Copia gli elementi della raccolta in una matrice, a partire da un indice della matrice specifico.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme; la matrice deve avere un indice in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Restituisce il numero di oggetti nell'insieme di nomi mappati  in <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="The number of items in the collection.">Numero di elementi nella raccolta.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">Restituisce l'oggetto corrispondente nell'ambito dei nomi XAML mantenuto da <see cref="T:System.Windows.NameScope" />, in base a un nome di stringa fornito.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">Parte del nome di un mapping esistente per cui recuperare la parte dell'oggetto.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">Oggetto richiesto mappato mediante <paramref name="name" />. Può restituire <see langword="null" /> se <paramref name="name" /> è stato specificato come <see langword="null" /> o una stringa vuota o se non è stato trovato alcun oggetto corrispondente.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Fornisce la funzione di accesso get per la proprietà associata <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">Oggetto da cui ottenere l'ambito dei nomi XAML.</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">Ambito dei nomi XAML, come istanza di <see cref="T:System.Windows.Markup.INameScope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">Il nome della stringa per il mapping XAML da ottenere o impostare.</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">Il valore dell'oggetto mappato dal XAML fornito come <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" /> viene fornito come <see langword="null" />.
-oppure-
<paramref name="value" /> viene fornito come <see langword="null" /> per un'operazione di impostazione.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Ottiene un insieme di tutte le chiavi nel dizionario <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Insieme di tutte le chiavi nel dizionario <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">Ottiene o imposta dinamicamente istanze <see cref="T:System.Windows.NameScope" /> collegate.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Identifica la proprietà associata <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">Registra una nuova coppia nome-oggetto nell'ambito dei nomi XAML corrente.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">Nome da usare per il mapping dell'oggetto specificato.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">Oggetto di cui eseguire il mapping con il nome fornito.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> o <paramref name="scopedElement" /> specificato come <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">
        <paramref name="name" /> specificato come stringa vuota
-oppure-
Il parametro <paramref name="name" /> specificato è stato rifiutato dal parser, perché contiene caratteri non validi per un nome XAML
-oppure-
Il parametro <paramref name="name" /> specificato comporterebbe la registrazione di un nome duplicato.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">Rimuove l'oggetto specifico dall'insieme.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Oggetto da rimuovere dalla raccolta, specificato come <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la chiave è <see cref="T:System.String" />, il valore è <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" /> se l'elemento è stato rimosso correttamente dall'insieme, in caso contrario, <see langword="false" />. Restituisce anche <see langword="false" /> se l'oggetto  non è stato trovato nell'insieme.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">Rimuove un mapping dall'insieme per un nome specificato.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">Stringa chiave che rappresenta il nome del mapping NameScope XAML da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" /> se l'elemento è stato rimosso correttamente dall'insieme, in caso contrario, <see langword="false" />. Restituisce anche <see langword="false" /> se l'oggetto  non è stato trovato nell'insieme.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Fornisce la funzione di accesso set per la proprietà associata <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">Oggetto per cui modificare l'ambito dei nomi XAML.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">Nuovo ambito dei nomi XAML, usando un cast di interfaccia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Enumeratore che scorre una raccolta.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Enumeratore che scorre una raccolta.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Chiave del valore da ottenere.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">Quando termina, questo metodo contiene il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, oggetto null. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.NameScope" /> contiene un mapping per il nome fornito come <paramref name="key" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">Rimuove un mapping nome-oggetto dall'ambito dei nomi XAML.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">Nome del mapping da rimuovere.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">
        <paramref name="name" /> specificato come stringa vuota.
-oppure-
<paramref name="name" /> specificato non registrato.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Ottiene un insieme di tutti i valori nel dizionario <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Insieme di tutti i valori nel dizionario <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">Rappresenta una coppia di coordinate x e y nello spazio bidimensionale.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">Crea una nuova struttura <see cref="T:System.Windows.Point" /> contenente le coordinate specificate.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Coordinata x della nuova struttura <see cref="T:System.Windows.Point" />.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Coordinata y della nuova struttura <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Somma una struttura <see cref="T:System.Windows.Vector" /> e una struttura <see cref="T:System.Windows.Point" /> e restituisce il risultato come struttura <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">Struttura <see cref="T:System.Windows.Point" /> da sommare.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">Struttura <see cref="T:System.Windows.Vector" /> da sommare.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Restituisce la somma di <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Object" /> specificato è una struttura <see cref="T:System.Windows.Point" /> e se include le stesse coordinate dell'oggetto <see cref="T:System.Windows.Point" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> è una struttura <see cref="T:System.Windows.Point" /> e contiene gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> della struttura <see cref="T:System.Windows.Point" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">Punto da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se entrambe le strutture <see cref="T:System.Windows.Point" /> contengono gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Primo punto da confrontare.</param>
      <param name="point2" vsli:raw="The second point to compare.">Secondo punto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> contengono gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Restituisce il codice hash per questo <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Codice hash per la struttura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Trasforma la struttura <see cref="T:System.Windows.Point" /> specificata in base alla struttura <see cref="T:System.Windows.Media.Matrix" /> definita.</summary>
      <param name="point" vsli:raw="The point to transform.">Il punto da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The transformed point.">Punto trasformato.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">Sottopone a offset le coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di un punto in base ai valori specificati.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">Valore di offset della coordinata <see cref="P:System.Windows.Point.X" /> del punto.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">Valore di offset della coordinata <see cref="P:System.Windows.Point.Y" /> del punto.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">Trasla la struttura <see cref="T:System.Windows.Point" /> in base alla struttura specificata <see cref="T:System.Windows.Vector" /> e restituisce il risultato.</summary>
      <param name="point" vsli:raw="The point to translate.">Punto da convertire.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">Valore in base al quale traslare <paramref name="point" />.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">Risultato della traslazione del punto specificato in base al vettore specificato.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Prima struttura <see cref="T:System.Windows.Point" /> da confrontare.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Seconda struttura <see cref="T:System.Windows.Point" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di <paramref name="point1" /> e <paramref name="point2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Crea una struttura <see cref="T:System.Windows.Size" /> con un valore <see cref="P:System.Windows.Size.Width" /> uguale al valore <see cref="P:System.Windows.Point.X" /> di questo punto e con un valore <see cref="P:System.Windows.Size.Height" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> di questo punto.</summary>
      <param name="point" vsli:raw="The point to convert.">Punto da convertire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Struttura <see cref="T:System.Windows.Size" /> con un valore <see cref="P:System.Windows.Size.Width" /> uguale al valore <see cref="P:System.Windows.Point.X" /> di questo punto e con un valore <see cref="P:System.Windows.Size.Height" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> di questo punto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Crea una struttura <see cref="T:System.Windows.Vector" /> con un valore <see cref="P:System.Windows.Vector.X" /> uguale al valore <see cref="P:System.Windows.Point.X" /> del punto e con un valore <see cref="P:System.Windows.Vector.Y" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> del punto.</summary>
      <param name="point" vsli:raw="The point to convert.">Punto da convertire.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Vettore con un valore <see cref="P:System.Windows.Vector.X" /> uguale al valore <see cref="P:System.Windows.Point.X" /> del punto e con un valore <see cref="P:System.Windows.Vector.Y" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> del punto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">Confronta le due strutture <see cref="T:System.Windows.Point" /> per stabilirne la disuguaglianza.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Primo punto da confrontare.</param>
      <param name="point2" vsli:raw="The second point to compare.">Secondo punto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">
        <see langword="true" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> presentano coordinate <see cref="P:System.Windows.Point.X" /> o <see cref="P:System.Windows.Point.Y" /> diverse. <see langword="false" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> presentano le stesse coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Trasforma l'oggetto <see cref="T:System.Windows.Point" /> specificato in base all'oggetto <see cref="T:System.Windows.Media.Matrix" /> indicato.</summary>
      <param name="point" vsli:raw="The point to transform.">Il punto da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matrice di trasformazione.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">Risultato della trasformazione del punto specificato utilizzando la matrice specificata.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Sottrae l'oggetto <see cref="T:System.Windows.Point" /> specificato da un altro oggetto <see cref="T:System.Windows.Point" /> specificato e restituisce la differenza come oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Punto dal quale viene sottratto l'oggetto <paramref name="point2" />.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Punto da cui sottrarre l'oggetto <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Differenza tra <paramref name="point1" /> e <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato e restituisce l'oggetto <see cref="T:System.Windows.Point" /> che ne risulta.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Punto dal quale viene sottratto l'oggetto <paramref name="vector" />.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Vettore da cui sottrarre l'oggetto <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Differenza tra <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Costruisce un oggetto <see cref="T:System.Windows.Point" /> dall'oggetto <see cref="T:System.String" /> specificato.</summary>
      <param name="source" vsli:raw="A string representation of a point.">Rappresentazione in forma di stringa di un punto.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Struttura <see cref="T:System.Windows.Point" /> equivalente.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">Il parametro <paramref name="source" /> non è composto da due valori double separati da virgola o da spazio.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">Il parametro <paramref name="source" /> non contiene due numeri.
-oppure-
Il parametro <paramref name="source" /> contiene troppi delimitatori.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Sottrae l'oggetto <see cref="T:System.Windows.Point" /> specificato da un altro oggetto <see cref="T:System.Windows.Point" /> specificato e restituisce la differenza come oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Punto dal quale viene sottratto l'oggetto <paramref name="point2" />.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Punto da cui sottrarre l'oggetto <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Differenza tra <paramref name="point1" /> e <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato e restituisce l'oggetto <see cref="T:System.Windows.Point" /> che ne risulta.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Punto dal quale viene sottratto l'oggetto <paramref name="vector" />.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">Oggetto <paramref name="vector" /> da sottrarre dall'oggetto <paramref name="point" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Differenza tra <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice. Per una descrizione di questo membro, vedere <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Stringa che specifica il formato da utilizzare.
-oppure-
<see langword="null" /> per utilizzare il formato predefinito per il tipo di implementazione dell'interfaccia <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">Interfaccia <see langword="IFormatProvider" /> da utilizzare per formattare il valore.
In alternativa
<see langword="null" /> per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Stringa contenente il valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Oggetto <see cref="T:System.String" /> contenente i valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Oggetto <see cref="T:System.String" /> contenente i valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Ottiene o imposta il valore della coordinata <see cref="P:System.Windows.Point.X" /> di questa struttura <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Valore della coordinata <see cref="P:System.Windows.Point.X" /> di questa struttura <see cref="T:System.Windows.Point" />.  Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Ottiene o imposta il valore della coordinata <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Valore della coordinata <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.  Il valore predefinito è <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina se un oggetto può essere convertito da un tipo specificato in un'istanza di un oggetto <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo specificato può essere convertito in un oggetto <see cref="T:System.Windows.Point" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">Determina se un'istanza di un oggetto <see cref="T:System.Windows.Point" /> può essere convertita in un tipo diverso.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Point" /> viene valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Windows.Point" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value" vsli:raw="The object being converted.">Oggetto da convertire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Point" /> creato tramite la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Eccezione generata se l'oggetto specificato è NULL o un tipo che non può essere convertito in <see cref="T:System.Windows.Point" />.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">Tenta di convertire un oggetto <see cref="T:System.Windows.Point" /> in un tipo specificato.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informazioni relative alle impostazioni cultura da rispettare durante la conversione.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">Oggetto <see cref="T:System.Windows.Point" /> da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Point" /> corrente.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Oggetto creato tramite la conversione di <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Eccezione generata se <paramref name="value" /> è <see langword="null" /> o non è un oggetto <see cref="T:System.Windows.Point" /> oppure se <paramref name="destinationType" /> non è uno dei tipi validi per la conversione.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">Rappresenta il callback che viene richiamato quando cambia il valore effettivo di una proprietà di dipendenza.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">Oggetto <see cref="T:System.Windows.DependencyObject" /> per la cui proprietà è stato modificato il valore.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">Dati dell'evento emessi da qualsiasi evento che tiene traccia delle modifiche al valore effettivo di questa proprietà.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">Definisce determinati aspetti del comportamento di una proprietà di dipendenza applicata a un tipo specifico, incluse le condizioni con cui è stata registrata.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" /> con un valore predefinito specificato per la proprietà di dipendenza a cui verranno applicati i metadati.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">Valore predefinito da specificare per una proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Inizializza una nuova istanza della classe  <see cref="T:System.Windows.PropertyMetadata" /> con il valore predefinito e il riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificati.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />, con il valore predefinito e i callback specificati.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">Riferimento a un'implementazione del gestore che verrà chiamata ogni volta che il sistema di proprietà chiama <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> per la proprietà.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Inizializza una nuova istanza della classe  <see cref="T:System.Windows.PropertyMetadata" /> con il riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificato.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">Ottiene o imposta un riferimento a un'implementazione di <see cref="T:System.Windows.CoerceValueCallback" /> specificata nei metadati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">Riferimento all'implementazione di <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">Ottiene o imposta il valore predefinito della proprietà di dipendenza.</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">Valore predefinito della proprietà. Il valore predefinito in un' <see cref="T:System.Windows.PropertyMetadata" /> istanza di creata con il costruttore senza parametri <see cref="F:System.Windows.DependencyProperty.UnsetValue" />sarà.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">Non possono essere impostati sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> successivamente alla creazione.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">Ottiene un valore che determina se i metadati sono stati applicati a una proprietà in qualche modo e di conseguenza lo stato dell'istanza di metadati è diventato non modificabile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'istanza di metadati non è modificabile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">Unisce i metadati con i metadati di base.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">Metadati di base da unire con i valori dell'istanza.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">Proprietà di dipendenza alla quale vengono applicati i metadati.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">Chiamata effettuata quando questi metadati sono stati applicati ad una proprietà che indica che i metadati sono sealed.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">Proprietà di dipendenza alla quale sono stati applicati i metadati.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">Il tipo associato a questi metadati se questi sono metadati di tipo specifico. Se si tratta di metadati predefiniti, il valore è un riferimento null.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">Ottiene o imposta un riferimento a un'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificata nei metadati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">Descrive larghezza, altezza e posizione di un rettangolo.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che ha le coordinate x e y, la larghezza e l’altezza specificate.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">Coordinata x dell'angolo superiore sinistro del rettangolo.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">Coordinata Y dell'angolo superiore sinistro del rettangolo.</param>
      <param name="width" vsli:raw="The width of the rectangle.">Larghezza del rettangolo.</param>
      <param name="height" vsli:raw="The height of the rectangle.">Altezza del rettangolo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> è un valore negativo.
-oppure-
<paramref name="height" /> è un valore negativo.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che è abbastanza grande per contenere i due punti specificati.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">Il primo punto che il nuovo rettangolo deve contenere.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">Il secondo punto che il nuovo rettangolo deve contenere.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che possiede il percorso specificato dell'angolo superiore sinistro e la larghezza e l’altezza specificate.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">Un punto che specifica il percorso dell'angolo superiore sinistro del rettangolo.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Struttura <see cref="T:System.Windows.Size" /> che specifica la larghezza e l'altezza del rettangolo.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che è abbastanza grande per contenere il punto specificato e la somma del punto specificato e del vettore specificato.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">Il primo punto che il rettangolo deve contenere.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">Quantità di cui eseguire l’offset del punto specificato. Il rettangolo risultante sarà abbastanza grande per contenere entrambi i punti.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Rect" /> che è della dimensione specificata ed è individuata a (0,0).</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Struttura <see cref="T:System.Windows.Size" /> che specifica la larghezza e l'altezza del rettangolo.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">Ottiene il valore dell'asse y del lato inferiore del rettangolo.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">Valore dell'asse y del lato inferiore del rettangolo. Se il rettangolo è vuoto, il valore è <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">Ottiene la posizione dell'angolo sinistro inferiore del rettangolo.</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">Posizione dell'angolo sinistro inferiore del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">Ottiene la posizione dell'angolo destro inferiore del rettangolo.</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">Posizione dell'angolo destro inferiore del rettangolo.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">Indica se il rettangolo contiene le coordinate specificate x e y.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">Coordinata x del punto da controllare.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">Coordinata y del punto da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se (<paramref name="x" />, <paramref name="y" />) è contenuto dal rettangolo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">Indica se il rettangolo contiene il punto specificato.</summary>
      <param name="point" vsli:raw="The point to check.">Punto da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il rettangolo contiene il punto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">Indica se il rettangolo contiene il rettangolo specificato.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Rettangolo da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="rect" /> è completamente contenuto dal rettangolo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">Ottiene un valore speciale che rappresenta un rettangolo senza posizione o area.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">Il rettangolo vuoto che ha i valori della proprietà <see cref="P:System.Windows.Rect.X" /> e  <see cref="P:System.Windows.Rect.Y" /> di <see cref="F:System.Double.PositiveInfinity" />e ha i valori della proprietà <see cref="P:System.Windows.Rect.Width" /> e  <see cref="P:System.Windows.Rect.Height" /> di <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">Indica se l’oggetto specificato è uguale al rettangolo corrente.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Oggetto da confrontare con il rettangolo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> è un oggetto <see cref="T:System.Windows.Rect" /> e ha gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> del rettangolo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">Indica se il rettangolo specificato è uguale al rettangolo corrente.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Rettangolo da confrontare con il rettangolo corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il rettangolo specificato ha gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> del rettangolo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">Indica se i rettangoli specificati sono uguali.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i rettangoli hanno gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">Crea un codice hash per il rettangolo.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">Codice hash per la struttura <see cref="T:System.Windows.Rect" /> corrente.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Ottiene o imposta l'altezza del rettangolo.</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">Numero positivo che rappresenta l'altezza del rettangolo. Il valore predefinito è 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">Il controllo <see cref="P:System.Windows.Rect.Height" /> è impostato su un valore negativo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">Espande o riduce il rettangolo utilizzando i valori della larghezza e dell’altezza specificati, in tutte le direzioni.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Valore del quale espandere o ridurre il lato sinistro e destro del rettangolo.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Valore del quale espandere o ridurre il lato inferiore e superiore del rettangolo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">Crea un rettangolo risultante dell'espansione o dalla riduzione del rettangolo specificato rispetto al valore della larghezza e dell’altezza specificato, in tutte le direzioni.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Struttura <see cref="T:System.Windows.Rect" /> da modificare.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Valore del quale espandere o ridurre il lato sinistro e destro del rettangolo.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Valore del quale espandere o ridurre il lato inferiore e superiore del rettangolo.</param>
      <returns vsli:raw="The resulting rectangle.">Rettangolo risultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> è un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Restituisce il rettangolo risultante dell'espansione del rettangolo specificato da <see cref="T:System.Windows.Size" />specificato, in tutte le direzioni.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Struttura <see cref="T:System.Windows.Rect" /> da modificare.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Specifica di quanto il rettangolo deve essere espanso. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Width" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Left" /> e <see cref="P:System.Windows.Rect.Right" /> devono essere aumentate. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Height" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Top" /> e <see cref="P:System.Windows.Rect.Bottom" /> devono essere aumentate.</param>
      <returns vsli:raw="The resulting rectangle.">Rettangolo risultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> è un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Espande il rettangolo utilizzando <see cref="T:System.Windows.Size" />specificato, in tutte le direzioni.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Specifica di quanto il rettangolo deve essere espanso. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Width" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Left" /> e <see cref="P:System.Windows.Rect.Right" /> devono essere aumentate. La proprietà <see cref="T:System.Windows.Size" /> della struttura <see cref="P:System.Windows.Size.Height" /> specifica di quanto le proprietà del rettangolo <see cref="P:System.Windows.Rect.Top" /> e <see cref="P:System.Windows.Rect.Bottom" /> devono essere aumentate.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">Trova l'intersezione del rettangolo corrente e del rettangolo specificato e archivia il risultato come rettangolo corrente.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">Il rettangolo con cui intersecare il corrente rettangolo.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">Restituisce l'intersezione dei rettangoli specificati.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">L'intersezione dei due rettangoli, oppure <see cref="P:System.Windows.Rect.Empty" /> se non esiste alcuna intersezione.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">Indica se il rettangolo specificato si interseca con il rettangolo corrente.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Rettangolo da controllare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il rettangolo specificato si interseca con il rettangolo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Ottiene un valore che indica se il rettangolo è <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il rettangolo corrisponde a <see cref="P:System.Windows.Rect.Empty" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">Ottiene il valore dell'asse x del lato sinistro del rettangolo.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Valore dell'asse x del lato sinistro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">Ottiene o imposta la posizione dell'angolo superiore sinistro del rettangolo.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">Posizione dell'angolo superiore sinistro del rettangolo. Il valore predefinito è (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">Sposta il rettangolo dei valori orizzontale e verticale specificati.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">Il valore di cui spostare orizzontalmente il rettangolo.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">Il valore di cui spostare verticalmente il rettangolo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">Restituisce un rettangolo offset dal rettangolo specificato utilizzando i valori orizzontali e verticali specificati.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">Rettangolo da spostare.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">Offset orizzontale per il nuovo rettangolo.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">Offset verticale per il nuovo rettangolo.</param>
      <returns vsli:raw="The resulting rectangle.">Rettangolo risultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> è <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">Restituisce un rettangolo offset dal rettangolo specificato utilizzando il vettore specificato.</summary>
      <param name="rect" vsli:raw="The original rectangle.">Il rettangolo originale.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">Un vettore che specifica gli offset orizzontali e verticali per il nuovo rettangolo.</param>
      <returns vsli:raw="The resulting rectangle.">Rettangolo risultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> è <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">Sposta il rettangolo dal vettore specificato.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">Un vettore che specifica i valori orizzontali e verticali per spostare il rettangolo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Questo metodo viene chiamato sul rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Confronta due rettangoli per verificarne l’esatta uguaglianza.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i rettangoli hanno gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Confronta due rettangoli per verificarne la disuguaglianza.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primo rettangolo da confrontare.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Secondo rettangolo da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i rettangoli non hanno gli stessi valori <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">Crea un nuovo rettangolo dalla rappresentazione della stringa specificata.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">Rappresentazione della stringa del rettangolo, nel modulo "x, y, larghezza, altezza."</param>
      <returns vsli:raw="The resulting rectangle.">Rettangolo risultante.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">Ottiene il valore dell'asse x del lato destro del rettangolo.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">Valore dell'asse x del lato destro del rettangolo.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">Moltiplica la dimensione del rettangolo corrente per i valori x e y specificati.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">Fattore di scala nella direzione x.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">Fattore di scala nella direzione y.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">Ottiene o imposta la larghezza e l'altezza del rettangolo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Struttura <see cref="T:System.Windows.Size" /> che specifica la larghezza e l'altezza del rettangolo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formatta il valore dell'istanza corrente usando il formato specificato.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Formato da usare.
-oppure-
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per utilizzare il formato definito per il tipo di implementazione di <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Provider da utilizzare per formattare il valore.
-oppure-
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns vsli:raw="A string representation of the rectangle.">Rappresentazione in forma di stringa del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">Ottiene la posizione dell'asse y del lato superiore del rettangolo.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">Posizione dell'asse y del lato superiore del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">Ottiene la posizione dell'angolo superiore sinistro del rettangolo.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">Posizione dell'angolo superiore sinistro del rettangolo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">Ottiene la posizione dell'angolo superiore destro del rettangolo.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">Posizione dell'angolo superiore destro del rettangolo.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">Restituisce una rappresentazione in forma di stringa del rettangolo corrente.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">Rappresentazione in forma di stringa del rettangolo  corrente. La stringa presenta il formato seguente: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">Restituisce una rappresentazione in forma di stringa del rettangolo utilizzando il provider del formato specificato.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">Una rappresentazione in forma di stringa del rettangolo corrente determinata dal provider del formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">Trasforma il rettangolo applicando la matrice specificata.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Matrice che specifica la trasformazione da applicare.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">Restituisce il rettangolo risultante dall'applicazione della matrice specificata al rettangolo specificato.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">Rettangolo che è la base per la trasformazione.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Matrice che specifica la trasformazione da applicare.</param>
      <returns vsli:raw="The rectangle that results from the operation.">Rettangolo risultante dall'operazione.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">Espande il rettangolo corrente abbastanza da poter contenere il punto specificato.</summary>
      <param name="point" vsli:raw="The point to include.">Punto da includere.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">Espande il rettangolo corrente abbastanza per contenere il rettangolo specificato.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Rettangolo da includere.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">Crea un rettangolo grande abbastanza da poter includere il rettangolo specificato ed il punto specificato.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Rettangolo da includere.</param>
      <param name="point" vsli:raw="The point to include.">Punto da includere.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">Rettangolo grande abbastanza da poter contenere il rettangolo specificato ed il punto specificato.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">Crea un rettangolo grande abbastanza da poter contenere i due rettangoli specificati.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">Il primo rettangolo da includere.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">Secondo rettangolo da includere.</param>
      <returns vsli:raw="The resulting rectangle.">Rettangolo risultante.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Ottiene o imposta la larghezza del rettangolo.</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">Numero positivo che rappresenta la larghezza del rettangolo. Il valore predefinito è 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">Il controllo <see cref="P:System.Windows.Rect.Width" /> è impostato su un valore negativo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">Ottiene o imposta il valore dell'asse x del lato sinistro del rettangolo.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Valore dell'asse x del lato sinistro del rettangolo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">Ottiene o imposta il valore dell'asse y del lato superiore del rettangolo.</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">Valore dell'asse y del lato superiore del rettangolo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" /> viene impostato su un rettangolo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Converte istanze di altri tipi verso e da istanze di <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Determina se un oggetto può essere convertito da un tipo specifico in un'istanza di <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo dell'oggetto di origine valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo specificato può essere convertito in un oggetto <see cref="T:System.Windows.Rect" />, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">Determina se un oggetto <see cref="T:System.Windows.Rect" /> può essere convertito nel tipo specificato.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Rect" /> viene valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se un oggetto <see cref="T:System.Windows.Rect" /> può essere convertito in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Tenta di convertire l'oggetto specificato in <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">Informazioni relative alle impostazioni cultura rispettate durante la conversione.</param>
      <param name="value" vsli:raw="The object being converted.">Oggetto da convertire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Rect" /> creato tramite la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Eccezione generata se l'oggetto specificato è NULL o un tipo che non può essere convertito in <see cref="T:System.Windows.Rect" />.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">Tenta di convertire un oggetto <see cref="T:System.Windows.Rect" /> nel tipo specificato.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornisce informazioni sul contesto necessarie per la conversione.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">Informazioni relative alle impostazioni cultura rispettate durante la conversione.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">Oggetto <see cref="T:System.Windows.Rect" /> da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Rect" /> corrente.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Oggetto creato tramite la conversione di <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" /> è <see langword="null" />.
-oppure-
<paramref name="value" /> non è un oggetto <see cref="T:System.Windows.Rect" />.
-oppure-
<paramref name="destinationType" /> non è uno dei tipi validi per la conversione.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">Implementa una struttura che viene usata per descrivere il valore <see cref="T:System.Windows.Size" /> di un oggetto.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Size" /> e le assegna <paramref name="width" /> e <paramref name="height" /> iniziali.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Larghezza iniziale dell'istanza di <see cref="T:System.Windows.Size" /> .</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Altezza iniziale dell'istanza di <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ottiene un valore che rappresenta un oggetto <see cref="T:System.Windows.Size" /> vuoto statico.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Istanza vuota di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Confronta un oggetto con un'istanza dell'oggetto <see cref="T:System.Windows.Size" /> per determinarne l'uguaglianza.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">Oggetto <see cref="T:System.Object" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le dimensioni sono uguali, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Confronta un valore con un'istanza di <see cref="T:System.Windows.Size" /> per determinare se siano uguali.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Dimensione con cui confrontare l'istanza corrente di <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Size" /> sono uguali; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Confronta due istanze di <see cref="T:System.Windows.Size" /> per determinare se siano uguali.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Prima istanza di <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Seconda istanza di <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Size" /> sono uguali; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ottiene il codice hash per l'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Codice hash per l'istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ottiene o imposta <see cref="P:System.Windows.Size.Height" /> di questa istanza di <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">Oggetto <see cref="P:System.Windows.Size.Height" /> di questa istanza di <see cref="T:System.Windows.Size" />. Il valore predefinito è 0. Il valore non può essere negativo.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">Ottiene un valore che indica se questa istanza di <see cref="T:System.Windows.Size" /> è <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questa istanza della dimensione è <see cref="P:System.Windows.Size.Empty" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Confronta due istanze di <see cref="T:System.Windows.Size" /> per determinare se siano uguali.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Prima istanza di <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Seconda istanza di <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le due istanze di <see cref="T:System.Windows.Size" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte esplicitamente un'istanza di <see cref="T:System.Windows.Size" /> in un'istanza di <see cref="T:System.Windows.Point" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Valore <see cref="T:System.Windows.Size" /> da convertire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Point" /> uguale per valore a questa istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte esplicitamente un'istanza di <see cref="T:System.Windows.Size" /> in un'istanza di <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Valore <see cref="T:System.Windows.Size" /> da convertire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Vector" /> uguale per valore a questa istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">Confronta due istanze di <see cref="T:System.Windows.Size" /> per determinarne la disuguaglianza.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Prima istanza di <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Seconda istanza di <see cref="T:System.Windows.Size" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Size" /> non sono uguali, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">Restituisce un'istanza di <see cref="T:System.Windows.Size" /> da un oggetto <see cref="T:System.String" /> convertito.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">Valore <see cref="T:System.String" /> da analizzare in relazione a un valore <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Istanza di <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Questo tipo o membro supporta l'infrastruttura Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice.</summary>
      <param name="format" vsli:raw="The format to use.">Formato da usare.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Provider da usare per formattare il valore.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Restituisce <see cref="T:System.String" /> che rappresenta questo oggetto <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">Oggetto <see cref="T:System.String" /> che specifica la larghezza seguita dall'altezza.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.String" /> che rappresenta questa istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">Oggetto che fornisce una modalità per controllare la formattazione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">
        <see cref="T:System.String" /> che rappresenta questo oggetto <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ottiene o imposta <see cref="P:System.Windows.Size.Width" /> di questa istanza di <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">Oggetto <see cref="P:System.Windows.Size.Width" /> di questa istanza di <see cref="T:System.Windows.Size" />. Il valore predefinito è <c>0</c>. Il valore non può essere negativo.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">Converte istanze di altri tipi verso e da istanze della classe <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Determina se una classe può essere convertita da un tipo specificato in un'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornisce informazioni contestuali su un componente.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifica il tipo di dati da valutare per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i <paramref name="sourceType" /> possono essere convertiti in un'istanza di <see cref="T:System.Windows.Size" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">Determina se un'istanza di <see cref="T:System.Windows.Size" /> può essere convertita in un tipo diverso.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornisce informazioni contestuali su un componente.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifica il tipo di dati da valutare per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questa istanza di <see cref="T:System.Windows.Size" /> può essere convertita in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Tenta di convertire un oggetto specificato in un'istanza di <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornisce informazioni contestuali su un componente.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Informazioni specifiche di impostazioni cultura che devono essere rispettate durante la conversione.</param>
      <param name="value" vsli:raw="The source object that is being converted.">Oggetto di origine che si sta convertendo.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">Istanza di <see cref="T:System.Windows.Size" /> creata dall'oggetto <paramref name="source" /> convertito.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">Tenta di convertire un'istanza di <see cref="T:System.Windows.Size" /> in un tipo specificato.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornisce informazioni contestuali su un componente.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Informazioni specifiche di impostazioni cultura che devono essere rispettate durante la conversione.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">L'istanza di <see cref="T:System.Windows.Size" /> da convertire.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">Tipo in cui viene convertita questa istanza di <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Oggetto che viene creato dall'istanza convertita di <see cref="T:System.Windows.Size" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> è <see langword="null" /> oppure non è un'istanza di <see cref="T:System.Windows.Size" />, oppure se <paramref name="destinationType" /> non è uno dei  tipi validi di destinazione.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">Fornisce una schermata iniziale per un'applicazione Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.SplashScreen" /> con l'assembly di risorse specificato.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">Assembly che contiene la risorsa incorporata.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Nome della risorsa incorporata.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.SplashScreen" /> con la risorsa specificata.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Nome della risorsa incorporata.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">Chiude la schermata iniziale.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">Oggetto <see cref="T:System.TimeSpan" /> che specifica il tempo richiesto per la dissolvenza della schermata iniziale dopo l'avvio dell'operazione di chiusura.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Visualizza la schermata iniziale.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> per chiudere automaticamente la schermata iniziale; <see langword="false" /> per chiuderla manualmente.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">La risorsa specificata nel costruttore non è stata trovata.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Visualizza la schermata iniziale.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> per chiudere automaticamente la schermata iniziale; <see langword="false" /> per chiuderla manualmente.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la finestra della schermata iniziale deve utilizzare lo stile WS_EX_TOPMOST; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">Fornisce i servizi per la gestione della coda di elementi di lavoro per un thread.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Esegue in modo asincrono il delegato specificato con gli argomenti specificati sul thread in cui è stato creato l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Esegue in modo asincrono il delegato specificato con gli argomenti specificati, con la priorità specificata, sul thread in cui è stato creato l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il delegato specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta un argomento, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Oggetto da passare come argomento al metodo specificato.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il delegato specificato con la priorità e la matrice di argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Oggetto da passare come argomento al metodo specificato.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Matrice di oggetti da passare come argomenti al metodo specificato.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> non è una priorità valida.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">Inizia in modo asincrono l'arresto di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">Priorità con la quale iniziare ad arrestare il dispatcher.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Determina se il thread chiamante è il thread associato a questo oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il thread chiamante è il thread associato a <see cref="T:System.Windows.Threading.Dispatcher" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> per il thread attualmente in esecuzione e crea un nuovo <see cref="T:System.Windows.Threading.Dispatcher" /> se al thread non ne è già associato uno.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">Dispatcher associato al thread corrente.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Disabilita l'elaborazione della coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Struttura utilizzata per attivare nuovamente l'elaborazione del dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">Richiede l'uscita di tutti i frame, inclusi i frame annidati.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> per il thread specificato.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">Thread dal quale ottenere <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">Dispatcher per <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">Determina se <see cref="T:System.Windows.Threading.Dispatcher" /> ha terminato l'arresto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il dispatcher ha concluso l'arresto, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">Determina se <see cref="T:System.Windows.Threading.Dispatcher" /> si stia arrestando.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Windows.Threading.Dispatcher" /> ha iniziato l'arresto, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Ottiene l'insieme di hook che forniscono informazioni aggiuntive sull'evento relativamente a <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Hook associato a <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Oggetto che indica se annullare l'azione.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Oggetto che indica se annullare l'azione.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Periodo di tempo minimo di attesa dell'avvio dell'operazione.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il delegato specificato con gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato entro l'intervallo di tempo designato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Periodo di tempo massimo di attesa del completamento dell'operazione.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato entro l'intervallo di tempo designato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Periodo di tempo massimo di attesa del completamento dell'operazione.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta i parametri specificati in <paramref name="args" />, inserito nella coda di eventi <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matrice di oggetti da passare come argomenti al metodo specificato. Può essere <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta un argomento, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Oggetto da passare come argomento al metodo specificato.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Oggetto da passare come argomento al metodo specificato.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">Matrice di oggetti da passare come argomenti al metodo specificato.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">Esegue in modo sincrono il delegato specificato con la priorità e il valore di timeout specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Tempo massimo di attesa del termine dell'operazione.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che non accetta argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato con la priorità e l'argomento specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Tempo massimo di attesa del termine dell'operazione.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Oggetto da passare come argomento al metodo specificato. Se non sono richiesti argomenti, può corrispondere a <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> non è una priorità valida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il delegato specificato con la priorità e gli argomenti specificati sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Priorità, rispetto alle altre operazioni in sospeso nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />, con la quale viene richiamato il metodo specificato.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Tempo massimo di attesa del termine dell'operazione.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegato a un metodo che accetta più argomenti, inserito nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">Oggetto da passare come argomento al metodo specificato.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Matrice di oggetti da passare come argomenti al metodo specificato.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Valore restituito dal delegato richiamato oppure <see langword="null" /> se il delegato non restituisce alcun valore.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Oggetto che indica se annullare l'operazione.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo sincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Oggetto che indica se annullare l'operazione.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Periodo di tempo minimo di attesa dell'avvio dell'operazione.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il <see cref="T:System.Action" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il <see cref="T:System.Action" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Oggetto che indica se annullare l'azione.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Esegue in modo asincrono il <see cref="T:System.Func`1" /> specificato con la priorità specificata sul thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Un delegato da richiamare tramite il dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">La priorità che determina l'ordine con cui il callback specificato viene richiamato rispetto alle altre operazioni in sospeso in <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Oggetto che indica se annullare l'operazione.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Il tipo del valore restituito del delegato specificato.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Oggetto, restituito immediatamente dopo la chiamata a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, utilizzabile per l'interazione con il delegato mentre è in attesa di esecuzione nella coda degli eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">Inizia il processo di arresto di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">Immette un ciclo di esecuzione.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">Frame per il dispatcher da elaborare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> è <see langword="true" />
-oppure-
<paramref name="frame" /> è in esecuzione su un oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> diverso.
-oppure-
L'elaborazione del dispatcher è stata disabilitata.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inserisce il frame di esecuzione principale nella coda degli eventi di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">Si verifica quando <see cref="T:System.Windows.Threading.Dispatcher" /> termina l'arresto.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">Si verifica quando <see cref="T:System.Windows.Threading.Dispatcher" /> inizia l'arresto.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ottiene il thread al quale <see cref="T:System.Windows.Threading.Dispatcher" /> è associato.</summary>
      <returns vsli:raw="The thread.">Thread.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">Si verifica quando viene generata un'eccezione del thread non intercettata durante l'esecuzione di un delegato mediante <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">Si verifica quando viene generata un'eccezione del thread non intercettata durante l'esecuzione di un delegato mediante <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> in fase di filtro.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">Determina se la priorità stabilita dall'oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> specificato sia valida.</summary>
      <param name="priority" vsli:raw="The priority to check.">Priorità da controllare.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">Stringa che verrà restituita dall'eccezione che si verifica se la priorità non è valida.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> non è un oggetto <see cref="T:System.Windows.Threading.DispatcherPriority" /> valido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Determina se il thread chiamante ha accesso a <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Il thread chiamante non ha accesso a <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e consente a quest'ultimo di elaborare altri eventi.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">Crea un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.  Il lavoro che si verifica quando il controllo ritorna al codice in attesa del risultato di questo metodo viene pianificato in base alla priorità specificata.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">Priorità con cui pianificare la continuazione.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e consente a quest'ultimo di elaborare altri eventi.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">Fornisce i dati per gli eventi <see cref="T:System.Windows.Threading.Dispatcher" /> correlati.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato all'evento corrente.</summary>
      <returns vsli:raw="The dispatcher.">Dispatcher.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Rappresenta un ciclo di esecuzione nell'oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherFrame" /> utilizzando il flag di richiesta di uscita specificata.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">Indica se questo frame terminerà quando a tutti i frame viene richiesto di uscire.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">Ottiene o imposta un valore che indica se <see cref="T:System.Windows.Threading.DispatcherFrame" /> deve continuare.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se il frame deve continuare; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">Fornisce i dati per gli eventi <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">Operazione associata all'evento.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Ottiene <see cref="T:System.Windows.Threading.Dispatcher" /> associato all'evento.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato all'evento corrente.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">Ottiene <see cref="T:System.Windows.Threading.DispatcherOperation" /> associato all'evento.</summary>
      <returns vsli:raw="The operation.">Operazione.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">Rappresenta il metodo in base al quale verranno gestiti gli eventi <see cref="T:System.Windows.Threading.DispatcherHooks" /> correlati.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="The event data.">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">Fornisce informazioni aggiuntive sugli eventi per l'elaborazione di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">Si verifica quando il dispatcher non include più operazioni da elaborare.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">Si verifica quando un'operazione viene interrotta.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">Si verifica quando un'operazione viene completata.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">Si verifica quando un'operazione viene inviata al dispatcher.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">Si verifica quando la priorità di un'operazione viene modificata.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">Si verifica quando viene richiamata un'operazione.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Rappresenta un oggetto associato a un oggetto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Determina se il thread chiamante ha accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il thread chiamate ha accesso a questo oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="The dispatcher.">Dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Impone che il thread chiamante abbia accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Il thread chiamante non ha accesso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Rappresenta un oggetto utilizzato per interagire con un'operazione inviata alla coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">Interrompe l'operazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'operazione è stata interrotta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">Si verifica quando l'operazione viene interrotta.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">Si verifica al termine dell'operazione.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> a cui è stata inviata l'operazione.</summary>
      <returns vsli:raw="The dispatcher.">Dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">Restituisce un oggetto che riceve una notifica al termine dell'operazione asincrona.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">Oggetto che riceve una notifica al termine dell'operazione asincrona.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Avvia l'operazione associata a <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">
        <see langword="null" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Ottiene o imposta la priorità dell'operazione nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">Priorità del delegato nella coda.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Ottiene il risultato dell'operazione dopo il completamento.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">Risultato dell'operazione oppure <see langword="null" /> se l'operazione non è stata completata.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">Ottiene lo stato corrente dell'operazione.</summary>
      <returns vsli:raw="The status of the operation.">Stato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Ottiene un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione corrente.</summary>
      <returns vsli:raw="An object that represents the current operation.">Oggetto che rappresenta l'operazione corrente.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">Attende il completamento dell'operazione.</summary>
      <returns vsli:raw="The status of the operation.">Stato dell'operazione.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Può verificarsi durante l'attesa di un'operazione già in esecuzione sullo stesso thread.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">Attende il completamento dell'operazione nel periodo di tempo specificato.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">Periodo massimo di tempo di attesa.</param>
      <returns vsli:raw="The status of the operation.">Stato dell'operazione.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> è uguale a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Può verificarsi durante l'attesa di un'operazione già in esecuzione sullo stesso thread.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Rappresenta un oggetto utilizzato per interagire con un'operazione inviata alla coda di <see cref="T:System.Windows.Threading.Dispatcher" /> e che contiene un <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Tipo restituito dalla funzione <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">Restituisce un oggetto che attende un'operazione asincrona che restituisce un risultato.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">Oggetto che attende il risultato di un'operazione asincrona che restituisce un risultato.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Avvia l'operazione associata a <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="The result of the operation.">Risultato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Ottiene il risultato dell'operazione dopo il completamento.</summary>
      <returns vsli:raw="The result of the operation.">Risultato dell'operazione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Ottiene un oggetto <see cref="T:System.Threading.Tasks.Task`1" /> che rappresenta l'operazione corrente.</summary>
      <returns vsli:raw="An object that represents the current operation.">Oggetto che rappresenta l'operazione corrente.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">Rappresenta un delegato da usare per le operazioni del dispatcher.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">Argomento passato al callback.</param>
      <returns vsli:raw="The object returned by the callback.">Oggetto restituito dal callback.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Descrive i valori possibili per lo stato di <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">L'operazione è stata interrotta.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">L'operazione è stata completata.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">L'esecuzione dell'operazione è stata avviata ma non è stata completata.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">L'operazione è in sospeso ed è ancora nella coda di <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Descrive le priorità in base alle quali è possibile richiamare le operazioni tramite <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">Il valore di enumerazione è 2. Le operazioni vengono elaborate quando l'applicazione è inattiva.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">Il valore di enumerazione è 4. Le operazioni vengono elaborate dopo il completamento di tutte le altre operazioni non inattive.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">Il valore di enumerazione è 3. Le operazioni vengono elaborate dopo il completamento delle operazioni in background.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">Il valore di enumerazione è 8. Le operazioni vengono elaborate con lo stesso livello di priorità dell'associazione dati.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">Il valore di enumerazione è 0. Le operazioni non vengono elaborate.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">Il valore di enumerazione è 5. Le operazioni vengono elaborate con lo stesso livello di priorità dell'input.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">Il valore di enumerazione è -1. Si tratta di una priorità non valida.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">Il valore di enumerazione è 6. Le operazioni vengono elaborate al termine delle attività di layout e rendering ma immediatamente prima della gestione degli elementi con priorità di input. In particolare, questo valore viene utilizzato quando viene generato l'evento Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">Il valore di enumerazione è 9. Le operazioni vengono elaborate con priorità normale. Si tratta della priorità tipica dell'applicazione.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">Il valore di enumerazione è 7. Le operazioni vengono elaborate con lo stesso livello di priorità del rendering.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">Il valore di enumerazione è 10. Le operazioni vengono elaborate prima di altre operazioni asincrone. Si tratta della priorità più elevata.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">Il valore di enumerazione è 1. Le operazioni vengono elaborate quando il sistema è inattivo.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Rappresenta un oggetto awaitable che restituisce in modo asincrono il controllo al dispatcher corrente e offre al dispatcher la possibilità di elaborare altri eventi.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">Restituisce un oggetto che attende il completamento di un'attività asincrona.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">Oggetto che attende il completamento di un'attività asincrona.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">Rappresenta un oggetto che attende il completamento di un'attività asincrona.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">Termina l'attesa del completamento dell'attività asincrona.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">Ottiene un valore che indica l'eventuale completamento dell'attività asincrona.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">Imposta l'azione da eseguire quando l'oggetto <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> non è più in attesa del completamento dell'attività asincrona.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">Azione da eseguire al completamento dell'operazione di attesa.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">Rappresenta il dispatcher in uno stato disabilitato e offre la possibilità di riattivarne l'elaborazione.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">Riattiva l'elaborazione del dispatcher.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">Determina se l'oggetto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> specificato è uguale all'oggetto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">Oggetto da valutare per l'uguaglianza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Ottiene un codice hash per questa istanza.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Codice hash di numeri interi con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">Determina se due oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sono uguali.</summary>
      <param name="left" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="right" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">Determina se due oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> non sono uguali.</summary>
      <param name="left" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="right" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli oggetti <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> non sono uguali. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">Offre un contesto di sincronizzazione per Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> utilizzando l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> corrente.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> mediante l'elemento <see cref="T:System.Windows.Threading.Dispatcher" /> specificato.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> da associare a <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> mediante l'elemento <see cref="T:System.Windows.Threading.Dispatcher" /> specificato.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> da associare a <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">Priorità utilizzata per inviare i metodi di callback.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Crea una copia dell'oggetto <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="The copy of this synchronization context.">Copia del contesto di sincronizzazione.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">Richiama in modo asincrono il callback nel contesto di sincronizzazione.</summary>
      <param name="d" vsli:raw="The delegate to call.">Delegato da chiamare.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Oggetto passato al delegato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">Richiama in modo sincrono il callback nel contesto di sincronizzazione.</summary>
      <param name="d" vsli:raw="The delegate to call.">Delegato da chiamare.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Oggetto passato al delegato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">Attende che uno qualsiasi o tutti gli elementi della matrice specificata ricevano un segnale.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">Matrice contenente gli handle nativi del sistema operativo.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">
        <see langword="true" /> per attendere tutti gli handle; <see langword="false" /> per attendere un handle qualsiasi.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Numero di millisecondi di attesa oppure <see cref="F:System.Threading.Timeout.Infinite" /> (-1) per un'attesa indefinita.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">Indice della matrice dell'oggetto che ha soddisfatto l'attesa.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">Timer integrato nella coda <see cref="T:System.Windows.Threading.Dispatcher" /> che viene elaborato in un intervallo di tempo specificato e con una priorità specificata.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che utilizza l'intervallo di tempo, la priorità, il gestore eventi e l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> specificati.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">Periodo tra unità di tempo.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Priorità con cui richiamare il timer.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">Gestore eventi da chiamare quando si verifica l'evento <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Dispatcher cui è associato il timer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> è <see langword="null" />.
-oppure-
<paramref name="dispatcher" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che elabora gli eventi del timer con la priorità specificata.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Priorità con cui richiamare il timer.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> che viene eseguita sull'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> specificato con la priorità indicata.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Priorità con cui richiamare il timer.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Dispatcher cui è associato il timer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Windows.Threading.Dispatcher" /> associato a questo oggetto <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns vsli:raw="The dispatcher.">Dispatcher.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">Ottiene o imposta il periodo tra unità di tempo del timer.</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">Periodo tra unità di tempo. Il valore predefinito è 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> è minore di 0 o maggiore di <see cref="F:System.Int32.MaxValue" /> millisecondi.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">Ottiene o imposta un valore che indica se il timer è in esecuzione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il timer è abilitato; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Avvia <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Arresta <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">Ottiene o imposta un oggetto dati definiti dall'utente.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">Dati definiti dall'utente.  Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">Si verifica al termine dell'intervallo del timer.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Fornisce i dati per l'evento <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Genera l'eccezione generata quando il codice è stato eseguito tramite il dispatcher.</summary>
      <returns vsli:raw="The exception.">Eccezione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">Ottiene o imposta se l'evento dell'eccezione è stato gestito.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'eccezione è stata gestita; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="The event data.">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Fornisce i dati per l'evento <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Genera l'eccezione generata quando il codice è stato eseguito tramite il dispatcher.</summary>
      <returns vsli:raw="The exception.">Eccezione.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">Ottiene o imposta se l'eccezione deve essere rilevata e i gestori eventi devono essere chiamati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se gli eventi <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> devono essere generati; in caso contrario, <see langword="false" />.  Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="The event data.">Dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">Rappresenta un metodo usato come callback che convalida il valore effettivo di una proprietà di dipendenza.</summary>
      <param name="value" vsli:raw="The value to be validated.">Valore da convalidare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">
        <see langword="true" /> se il valore è stato convalidato, <see langword="false" /> se il valore inviato non era valido.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">Rappresenta uno spostamento nello spazio 2D.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Offset <see cref="P:System.Windows.Vector.X" />del nuovo <see cref="T:System.Windows.Vector" />.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Offset <see cref="P:System.Windows.Vector.Y" />del nuovo <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">Converte il punto specificato dal vettore specificato e restituisce il punto risultante.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">Quantità per convertire il punto specificato.</param>
      <param name="point" vsli:raw="The point to translate.">Punto da convertire.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Risultato della traslazione di <paramref name="point" /> in base a <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Somma due vettori e restituisce il risultato sotto forma di struttura <see cref="T:System.Windows.Vector" /> .</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Somma di <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">Recupera l'angolo, espresso in gradi, tra i due vettori specificati.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Primo vettore da valutare.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Secondo vettore da valutare.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Angolo, in gradi, tra <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">Calcola il prodotto incrociato di due vettori.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Primo vettore da valutare.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Secondo vettore da valutare.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">Prodotto incrociato di <paramref name="vector1" /> e <paramref name="vector2" />. La formula seguente è utilizzata per calcolare il prodotto incrociato:
<c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">Calcola il determinante di due vettori.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Primo vettore da valutare.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Secondo vettore da valutare.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Il determinante di <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Divide il vettore specificato dallo scalare specificato e restituisce il risultato come <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">Struttura del vettore da dividere.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">Quantità dalla quale è diviso <paramref name="vector" />.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Risultato della divisione di <paramref name="vector" /> in base a <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">Determina se <see cref="T:System.Object" /> specificato è una struttura <see cref="T:System.Windows.Vector" /> e, se così, se ha gli stessi valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore.</summary>
      <param name="o" vsli:raw="The vector to compare.">Vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> è una struttura <see cref="T:System.Windows.Vector" /> ed ha gli stessi valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Confronta due vettori per stabilirne l'uguaglianza.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">Vettore da confrontare con questo vettore.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> ha gli stessi valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">Confronta i due vettori specificati per stabilirne l’uguaglianza.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i componenti <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector1" /> e <paramref name="vector2" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">Restituisce il codice hash per questo vettore.</summary>
      <returns vsli:raw="The hash code for this instance.">Codice hash per l'istanza.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">Ottiene la lunghezza di questo vettore.</summary>
      <returns vsli:raw="The length of this vector.">Lunghezza di questo vettore.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">Ottiene il quadrato della lunghezza di questo vettore.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">Il quadrato di <see cref="P:System.Windows.Vector.Length" /> di questo vettore.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Moltiplica lo scalare specificato per il vettore specificato restituisce <see cref="T:System.Windows.Vector" />risultante.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalare da moltiplicare.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Risultato della moltiplicazione tra <paramref name="scalar" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Moltiplica il vettore specificato per lo scalare specificato e restituisce <see cref="T:System.Windows.Vector" />risultante.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalare da moltiplicare.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Risultato della moltiplicazione tra <paramref name="vector" /> e <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Trasforma lo spazio delle coordinate del vettore specificato utilizzando la struttura specificata <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">Struttura del vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Trasformazione da applicare a <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Risultato della trasformazione di <paramref name="vector" /> da <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcola il prodotto del punto dei due vettori specificati e restituisce il risultato come <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Primo vettore da moltiplicare</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">Struttura del secondo vettore  da moltiplicare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">
        <see cref="T:System.Double" /> che contiene il prodotto del punto scalare di <paramref name="vector1" /> e <paramref name="vector2" />calcolato utilizzando la formula seguente:
<c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">Nega questo vettore. La grandezza del vettore rimane invariata, ma la direzione diventa opposta.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">Normalizza questo vettore.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">Converte un punto dal vettore specificato e restituisce il punto risultante.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">Vettore utilizzato per convertire <paramref name="point" />.</param>
      <param name="point" vsli:raw="The point to translate.">Punto da convertire.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Risultato della traslazione di <paramref name="point" /> in base a <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">Aggiunge due vettori e restituisce il risultato come vettore.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Primo vettore da sommare.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Secondo vettore da sommare.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Somma di <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">Divide il vettore specificato per lo scalare specificato e restituisce il vettore risultante.</summary>
      <param name="vector" vsli:raw="The vector to divide.">Vettore da dividere.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">Scalare dal quale saranno divisi <paramref name="vector" />.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Risultato della divisione di <paramref name="vector" /> in base a <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Confronta due vettori per stabilirne l'uguaglianza.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i componenti <paramref name="vector1" /> e <paramref name="vector2" /> di <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">Crea <see cref="T:System.Windows.Point" /> con i valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo vettore.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Vettore da convertire.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">Un punto con <see cref="P:System.Windows.Point.X" />- e <see cref="P:System.Windows.Point.Y" /> uguali ai valori coordinati <see cref="P:System.Windows.Vector.X" /> e ai valori offset <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">Crea <see cref="T:System.Windows.Size" /> dagli offset di questo vettore.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Vettore da convertire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">
        <see cref="T:System.Windows.Size" /> con <see cref="P:System.Windows.Size.Width" /> uguale al valore assoluto della proprietà di questo vettore <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Size.Height" /> uguale al valore assoluto della proprietà di questo vettore <see cref="P:System.Windows.Vector.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">Confronta due vettori per stabilirne la disuguaglianza.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Primo vettore da confrontare.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Secondo vettore da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i componenti <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector1" /> e <paramref name="vector2" /> sono diversi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">Moltiplica lo scalare specificato per  il vettore specificato e restituisce il vettore risultante.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalare da moltiplicare.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Risultato della moltiplicazione tra <paramref name="scalar" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">Moltiplica il vettore specificato per lo scalare specificato e restituisce il vettore risultante.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Vettore da moltiplicare.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Scalare da moltiplicare.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Risultato della moltiplicazione tra <paramref name="vector" /> e <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Trasforma lo spazio delle coordinate del vettore specificato utilizzando la struttura specificata <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vettore da trasformare.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Trasformazione da applicare a <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Risultato della trasformazione di <paramref name="vector" /> da <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcola il prodotto del punto delle strutture dei due vettori specificati e restituisce il risultato come <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Primo vettore da moltiplicare</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">Secondo vettore da moltiplicare.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">Restituisce <see cref="T:System.Double" /> che contiene il prodotto del punto scalare di <paramref name="vector1" /> e <paramref name="vector2" />calcolato utilizzando la formula seguente:
<c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">Consente di sottrarre un vettore specificato da un altro.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Il vettore dal quale è sottratto <paramref name="vector2" />.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Vettore da cui sottrarre <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Differenza tra <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">Nega il vettore specificato.</summary>
      <param name="vector" vsli:raw="The vector to negate.">Vettore da negare.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">Vettore con valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> contrari ai valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Converte la rappresentazione di una stringa di un vettore nella struttura equivalente <see cref="T:System.Windows.Vector" /> .</summary>
      <param name="source" vsli:raw="The string representation of the vector.">Rappresentazione della stringa del vettore.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Struttura <see cref="T:System.Windows.Vector" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">Consente di sottrarre il vettore specificato da un altro vettore specificato.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Il vettore dal quale è sottratto <paramref name="vector2" />.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Vettore da cui sottrarre <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Differenza tra <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Questo membro supporta l'infrastruttura di Windows Presentation Foundation (WPF) e non deve essere usato direttamente dal codice. Per una descrizione di questo membro, vedere <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Stringa che specifica il formato da utilizzare.
In alternativa
<see langword="null" /> per utilizzare il formato predefinito per il tipo di implementazione dell'interfaccia <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">Interfaccia <see langword="IFormatProvider" /> da utilizzare per formattare il valore.
In alternativa
<see langword="null" /> per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Stringa contenente il valore dell'istanza corrente nel formato specificato.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Restituisce la stringa di rappresentazione di questa struttura <see cref="T:System.Windows.Vector" />.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Stringa che rappresenta i valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">Restituisce la rappresentazione di stringa di questa struttura <see cref="T:System.Windows.Vector" /> con le informazioni di formattazione specificate.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Stringa che rappresenta i valori <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> di questo <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">Ottiene o imposta il componente di questo vettore <see cref="P:System.Windows.Vector.X" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">Componente<see cref="P:System.Windows.Vector.X" /> di questo vettore. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">Ottiene o imposta il componente di questo vettore <see cref="P:System.Windows.Vector.Y" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">Componente<see cref="P:System.Windows.Vector.Y" /> di questo vettore. Il valore predefinito è 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte istanze di altri tipi in e da un oggetto <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Inizializza una nuova istanza della struttura <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Indica se un oggetto può essere convertito da un tipo specifico in un'istanza di un oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">Oggetto <see cref="T:System.Type" /> di origine sottoposto a query per verificare se la conversione è supportata.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se oggetti del tipo specificato possono essere convertiti in <see cref="T:System.Windows.Vector" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">Determina se le istanze di <see cref="T:System.Windows.Vector" /> possono essere convertite nel tipo specificato.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">Tipo desiderato per cui questo oggetto <see cref="T:System.Windows.Vector" /> viene valutato per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le istanze di <see cref="T:System.Windows.Vector" /> possono essere convertite in <paramref name="destinationType" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte l'oggetto specificato in un oggetto <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Descrive l'oggetto <see cref="T:System.Globalization.CultureInfo" /> del tipo convertito.</param>
      <param name="value" vsli:raw="The object being converted.">Oggetto da convertire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" /> creato tramite la conversione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">Converte l'oggetto <see cref="T:System.Windows.Vector" /> indicato nel tipo specificato.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descrive le informazioni di contesto di un tipo.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Descrive l'oggetto <see cref="T:System.Globalization.CultureInfo" /> del tipo convertito.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">Oggetto <see cref="T:System.Windows.Vector" /> da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">Tipo in cui convertire l'oggetto <see cref="T:System.Windows.Vector" /> corrente.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Oggetto creato tramite la conversione di <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">Fornisce una classe base per la gestione degli eventi usata nel modello di eventi deboli. Il gestore aggiunge e rimuove listener per eventi (o callback) che utilizzano il modello.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">Inizializza i valori della classe di base quando viene utilizzato come inizializzatore dal costruttore di una classe derivata.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">Recapita l'evento gestito a ogni listener.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Oggetto nel quale è gestito l'evento.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento da recapitare.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">Recapita l'evento gestito a ogni listener contenuto nell'elenco fornito.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Oggetto nel quale è gestito l'evento.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fornito.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">Restituisce l'implementazione di <see cref="T:System.Windows.WeakEventManager" /> utilizzata per il tipo fornito.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">Tipo per il quale ottenere <see cref="T:System.Windows.WeakEventManager" />.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">Implementazione di <see cref="T:System.Windows.WeakEventManager" /> corrispondente.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">Ottiene o imposta i dati archiviati per l'origine specificata.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">Indice in base zero dell'origine richiesta.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">Dati archiviati dal gestore per questa origine.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Fornisce un elenco di insiemi incorporati per l'archiviazione dei listener per <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList" /> con la capacità iniziale specificata.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Numero di elementi che devono essere allocati nell'elenco iniziale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Aggiunge un oggetto <see cref="T:System.Windows.IWeakEventListener" /> all'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Elemento listener da aggiungere all'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Aggiunge un gestore eventi all'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Gestore eventi da aggiungere a <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">Dichiara che l'elenco è in uso. In questo modo si impediscono modifiche dirette all'elenco durante le iterazioni degli elementi dell'elenco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elenco è stato già dichiarato in uso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Crea un duplicato modificabile di <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">Clone modificabile dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Copia l'oggetto corrente <see cref="T:System.Windows.WeakEventManager.ListenerList" /> nell'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> specificato</summary>
      <param name="newList" vsli:raw="The object to copy to.">Oggetto da copiare.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Ottiene il numero di elementi contenuti nella classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Numero di elementi contenuti in <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Recapita l'evento gestito a ogni listener in <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Oggetto che ha generato l'evento.</param>
      <param name="args" vsli:raw="An object that contains the event data.">Oggetto che contiene i dati dell'evento.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Il tipo di <see cref="T:System.Windows.WeakEventManager" /> che chiama questo metodo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uno dei listener in <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fa riferimento a un oggetto che è stato sottoposto a procedure di Garbage Collection; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">Ottiene un valore che rappresenta un elenco vuoto per eseguire confronti.</summary>
      <returns vsli:raw="The empty list representation.">Rappresentazione dell'elenco vuoto.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">Annulla lo stato di blocco iniziato da <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">Ottiene un valore che dichiara se questo oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> è vuoto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elenco è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">Ottiene o imposta un elemento listener specifico in <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">Indice a base zero del listener in elenco.</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">Elemento in corrispondenza di tale indice o un riferimento null nel caso non siano presenti elementi all'indice specificato.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">Controlla se l'elenco fornito è in uso e, in caso affermativo, imposta un parametro di riferimento dell'elenco su una copia di quell'elenco anziché sull'originale.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">Elenco di cui verificare lo stato di utilizzo ed eventualmente da copiare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">
        <see langword="true" /> se l'elenco fornito era in uso al momento della chiamata e quindi il riferimento al parametro <paramref name="list" /> è stato reimpostato come copia. <see langword="false" /> se l'elenco fornito non era in uso. In tale caso il riferimento al parametro <paramref name="list" /> rimane inalterato.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">Rimuove tutte le voci dall'elenco in cui la destinazione di riferimento sottostante sia un riferimento null.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Restituisce <see langword="true" /> in caso di cancellazione di qualsiasi voce; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Rimuove la prima occorrenza di un elemento listener da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The item to remove.">Elemento da rimuovere.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Rimuove un gestore eventi da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Gestore eventi da rimuovere da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">Fornisce un elenco di raccolte indipendente dai tipi per l'archiviazione dei listener per <see cref="T:System.Windows.WeakEventManager" />. Questa classe definisce un parametro di tipo per i dati degli eventi utilizzati.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Tipo che contiene i dati dell'evento.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> con la capacità iniziale specificata.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Numero di elementi che devono essere allocati nell'elenco iniziale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">Crea un duplicato modificabile dell'oggetto <see cref="T:System.Windows.WeakEventManager.ListenerList" />, eseguendo copie complete dei valori.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">Recapita l'evento gestito a ogni listener in <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">Oggetto che ha generato l'evento.</param>
      <param name="e" vsli:raw="An object that contains the event data.">Oggetto che contiene i dati dell'evento.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Il tipo di <see cref="T:System.Windows.WeakEventManager" /> che chiama questo metodo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uno dei listener in <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> fa riferimento a un oggetto che è stato sottoposto a procedure di Garbage Collection; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Restituisce un nuovo oggetto per contenere i listener per un evento.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Nuovo oggetto per contenere i listener a un evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">Aggiunge il delegato specificato come gestore eventi dell'origine specificata.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">Oggetto di origine cui il delegato del gestore esegue la sottoscrizione.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">Il delegato che gestisce l'evento generato da <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">Aggiunge il listener fornito all'origine fornita per l'evento gestito.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">Origine alla quale associare il listener.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Classe in ascolto (che deve implementare <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">Rimuove il gestore aggiunto in precedenza dall'origine specificata.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">Origine da cui rimuovere il gestore.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">Delegato da rimuovere da <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">Rimuove un listener precedentemente aggiunto dall'origine fornita.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">Origine da cui rimuovere i listener.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Classe in ascolto (che deve implementare <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">Rimuove voci di listener inattivi dall'elenco di dati per l'origine fornita. Restituisce <see langword="true" /> se alcune voci sono state effettivamente rimosse dall'elenco.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">Origine per gli eventi attesi.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">Dati da controllare. Si presume che questo oggetto sia un'implementazione di <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">Impostare su <see langword="true" /> per interrompere l'ascolto di <paramref name="source" /> e rimuovere completamente tutte le voci da <paramref name="data" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se alcune voci sono state effettivamente rimosse, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Imposta un blocco di lettura nella tabella di dati sottostanti e restituisce <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Oggetto che può essere utilizzato per impostare un blocco sui membri della tabella di dati ed essere rimosso all'occorrenza, mediante un costrutto <see langword="using" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">Rimuove tutti i listener per l'origine specificata.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">Origine per la quale rimuovere le informazioni del listener.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">Richiede l'esecuzione, in un thread con priorità inferiore, della cancellazione di voci inutilizzate contenute nell'elenco di listener sottostante.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">Imposta la gestione corrente per il tipo di gestione specificata.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">Tipo su cui impostare la gestione degli eventi.</param>
      <param name="manager" vsli:raw="The new event manager.">Nuovo gestore degli eventi.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">Quando è sottoposto a override in una classe derivata, avvia l'attesa dell'evento gestito. Dopo la prima chiamata al metodo <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" />, la gestione deve restare nello stato di chiamata a <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> o a <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> ogni volta che viene gestito l'evento pertinente proveniente dall'origine fornita.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">Origine in cui avviare l'attesa.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">Quando è sottoposto a override in una classe derivata, interrompe l'attesa dell'evento gestito nell'origine fornita.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">Origine in cui arrestare l'attesa.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Imposta un blocco di scrittura nella tabella di dati sottostanti e restituisce <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Oggetto che può essere utilizzato per impostare un blocco sui membri della tabella di dati ed essere rimosso all'occorrenza, mediante un costrutto <see langword="using" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">Fornisce un oggetto <see cref="T:System.Windows.WeakEventManager" /> che consente di specificare il gestore di eventi da utilizzare per il modello "listener di eventi deboli". Questa classe definisce un parametro di tipo per l'origine dell'evento e un parametro di tipo per i dati degli eventi utilizzati.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">Tipo che genera l'evento.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Tipo che contiene i dati dell'evento.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">Aggiunge il gestore eventi specificato all'evento specificato.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Oggetto di origine che genera l'evento specificato.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">Nome dell'evento da sottoscrivere.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">Delegato che gestisce l'evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Restituisce un nuovo oggetto per contenere i listener per un evento.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Nuovo oggetto per contenere i listener a un evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">Rimuove il gestore eventi specificato dall'evento specificato.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Oggetto di origine che genera l'evento specificato.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">Nome dell'evento da cui rimuovere il gestore.</param>
      <param name="handler" vsli:raw="The delegate to remove.">Delegato da rimuovere</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">Avvia l'ascolto dell'evento sull'oggetto specificato.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Oggetto che genera l'evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">Arresta l'ascolto dell'evento sull'oggetto specificato.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Oggetto che genera l'evento.</param>
    </member>
  </members>
</doc>